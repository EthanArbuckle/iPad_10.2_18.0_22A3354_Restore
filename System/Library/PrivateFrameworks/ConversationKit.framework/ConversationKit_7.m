void RecentsCallItem.formattedTUHandles.getter()
{
  uint64_t v0;

  RecentsCallItem.tuHandles.getter();
  specialized Sequence.compactMap<A>(_:)(v0);
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_45_0();
}

void RecentsCallItem.handleForMailCallback.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v6;
  uint64_t v7;
  id v8;

  OUTLINED_FUNCTION_47_23();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for RecentCallRecentItemMetadata(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_40_41();
  v4 = OUTLINED_FUNCTION_82_9();
  if (v4 > 4 || ((1 << v4) & 0x19) == 0)
  {
    OUTLINED_FUNCTION_49_38(v4, type metadata accessor for RecentsCallItemType);
  }
  else
  {
    OUTLINED_FUNCTION_93_9();
    v6 = *(id *)(v0 + *(int *)(v2 + 52));
    OUTLINED_FUNCTION_169_1();
    v8 = OUTLINED_FUNCTION_25_1(v7, sel_fromHandle);
    OUTLINED_FUNCTION_37_0();
  }
  OUTLINED_FUNCTION_91();
}

void RecentsCallItem.idsCanonicalDestinations.getter()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  RecentsCallItem.contact.getter();
  if (v0)
  {
    v1 = v0;
    v2 = objc_msgSend(v0, sel_allIDSDestinations);
    v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    specialized Set.init<A>(_:)(v3);
  }
  else
  {
    RecentsCallItem.tuHandles.getter();
    specialized Sequence.compactMap<A>(_:)(v4);
    v6 = v5;
    OUTLINED_FUNCTION_13_3();
    specialized Set.init<A>(_:)(v6);
  }
  OUTLINED_FUNCTION_45_0();
}

uint64_t RecentsCallItem.groupUUID.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(_QWORD);
  uint64_t EnumCaseMultiPayload;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_96();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v11);
  type metadata accessor for RecentOngoingConversationMetadata(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v12);
  type metadata accessor for RecentCallRecentItemMetadata(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v13);
  type metadata accessor for RecentsCallItemType(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_217_2(v10, v15, v16);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_1BD386CF4 + dword_1BD386E0C[EnumCaseMultiPayload]))(EnumCaseMultiPayload, v18, v19, v20, v21, v22, v23, v24, a9, a10);
}

void sub_1BD386D04(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_159_4(a1, type metadata accessor for RecentsCallItemType);
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_60_2();
  __swift_storeEnumTagSinglePayload(v1, v2, v3, v4);
  OUTLINED_FUNCTION_65_1();
}

void RecentsCallItem.callUniqueId.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(_QWORD);

  v3 = v1;
  OUTLINED_FUNCTION_47_23();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_174_3();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_79();
  v8 = v6 - v7;
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_120_4();
  OUTLINED_FUNCTION_157_2(v3, v0);
  v10 = OUTLINED_FUNCTION_82_9();
  if ((v10 - 3) >= 2)
  {
    if ((_DWORD)v10)
    {
      OUTLINED_FUNCTION_49_38(v10, type metadata accessor for RecentsCallItemType);
      goto LABEL_7;
    }
    OUTLINED_FUNCTION_90_9(v0, v8);
    OUTLINED_FUNCTION_25_2();
    v11 = OUTLINED_FUNCTION_64();
  }
  else
  {
    OUTLINED_FUNCTION_153_0(v0, v2);
    OUTLINED_FUNCTION_25_2();
    v11 = OUTLINED_FUNCTION_114();
  }
  outlined destroy of RecentsCallItem(v11, v12);
LABEL_7:
  OUTLINED_FUNCTION_269_1();
  OUTLINED_FUNCTION_91();
}

void static RecentsCallItem.shouldTargetUpcoming(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t, uint64_t, uint64_t);
  void (*v35)(uint64_t);
  uint64_t v36;

  OUTLINED_FUNCTION_96();
  a17 = v18;
  a18 = v19;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&a9 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = OUTLINED_FUNCTION_33();
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  OUTLINED_FUNCTION_59_3();
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&a9 - v26;
  v28 = OUTLINED_FUNCTION_68_17();
  outlined init with copy of FeatureEligibility?(v28, v29, (uint64_t *)&demangling cache variable for type metadata for Date?);
  v30 = OUTLINED_FUNCTION_69_0((uint64_t)v22, 1, v23);
  if (v31)
  {
    OUTLINED_FUNCTION_225_3(v30, (uint64_t *)&demangling cache variable for type metadata for Date?);
  }
  else
  {
    v32 = OUTLINED_FUNCTION_134_1();
    OUTLINED_FUNCTION_533(v32, v33, v34);
    type metadata accessor for RecentsLinkController();
    static RecentsLinkController.shouldTargetUpcomingSectionDate.getter();
    OUTLINED_FUNCTION_315_0();
    static Date.> infix(_:_:)();
    v35 = *(void (**)(uint64_t))(v24 + 8);
    v36 = OUTLINED_FUNCTION_124_0();
    v35(v36);
    ((void (*)(char *, uint64_t))v35)(v27, v23);
  }
  OUTLINED_FUNCTION_65_1();
}

void RecentsCallItem.isTelephony.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;

  v1 = type metadata accessor for RecentCallRecentItemMetadata(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_47_23();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_25_49(v6, v7, v20);
  v8 = OUTLINED_FUNCTION_82_9();
  if ((_DWORD)v8)
  {
    OUTLINED_FUNCTION_50_31(v8, type metadata accessor for RecentsCallItemType);
  }
  else
  {
    OUTLINED_FUNCTION_143_5(v0, v9, type metadata accessor for RecentCallRecentItemMetadata);
    v10 = *(void **)&v4[*(int *)(v1 + 24)];
    if (v10 && (v11 = objc_msgSend(v10, sel_serviceProvider)) != 0)
    {
      v12 = v11;
      v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v15 = v14;

    }
    else
    {
      v13 = 0;
      v15 = 0;
    }
    v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    if (v15)
    {
      if (v13 != v16 || v15 != v17)
      {
        OUTLINED_FUNCTION_134_1();
        OUTLINED_FUNCTION_13();
      }
      OUTLINED_FUNCTION_27();
    }
    v19 = OUTLINED_FUNCTION_2_1();
    OUTLINED_FUNCTION_49_38(v19, type metadata accessor for RecentCallRecentItemMetadata);
  }
  OUTLINED_FUNCTION_91();
}

BOOL RecentsCallItem.atLeastOneUnknownCaller.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v12;

  OUTLINED_FUNCTION_258();
  RecentsCallItem.tuHandles.getter();
  if (one-time initialization token for faceTime != -1)
    swift_once();
  OUTLINED_FUNCTION_11_1();
  v0 = OUTLINED_FUNCTION_64();
  specialized Sequence.compactMap<A>(_:)(v0);
  v2 = v1;
  OUTLINED_FUNCTION_27();
  v3 = MEMORY[0x1E0DEE9D8];
  v12 = MEMORY[0x1E0DEE9D8];
  v4 = *(_QWORD *)(v2 + 16);
  if (v4)
  {
    OUTLINED_FUNCTION_8_8();
    v5 = 32;
    do
    {
      v6 = *(void **)(v2 + v5);
      if (v6)
      {
        v7 = v6;
        MEMORY[0x1C3B7301C]();
        if (*(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          OUTLINED_FUNCTION_212_2();
        OUTLINED_FUNCTION_49_16();
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      v5 += 56;
      --v4;
    }
    while (v4);
    OUTLINED_FUNCTION_2_1();
    v3 = v12;
  }
  OUTLINED_FUNCTION_2_1();
  if (v3 >> 62)
  {
    OUTLINED_FUNCTION_5_0();
    v8 = _CocoaArrayWrapper.endIndex.getter();
    OUTLINED_FUNCTION_27();
  }
  else
  {
    v8 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  OUTLINED_FUNCTION_27();
  RecentsCallItem.tuHandles.getter();
  v10 = specialized Set.count.getter(v9);
  OUTLINED_FUNCTION_13_3();
  return v8 < v10;
}

void RecentsCallItem.isOneToOne.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  int v16;
  _BOOL8 v17;
  uint8_t *v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  _BOOL8 v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[2];
  int v42;
  uint64_t v43;
  NSObject *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;

  OUTLINED_FUNCTION_93();
  v4 = v0;
  v45 = OUTLINED_FUNCTION_55_28();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_88_11();
  MEMORY[0x1E0C80A78](v6);
  v46 = (uint64_t)v41 - v7;
  type metadata accessor for RecentsCallItemType(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v8);
  v47 = (char *)v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RecentsCallItemType?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_81();
  type metadata accessor for RecentsCallItem(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_77_1();
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v12 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_182_3(v12, (uint64_t)&static Logger.conversationKit);
  OUTLINED_FUNCTION_140_4(v0, v13, type metadata accessor for RecentsCallItem);
  v44 = v0;
  v14 = Logger.logObject.getter();
  v15 = static os_log_type_t.default.getter();
  v16 = v15;
  v17 = os_log_type_enabled(v14, v15);
  if (v17)
  {
    v42 = v16;
    v18 = (uint8_t *)OUTLINED_FUNCTION_105();
    v49 = OUTLINED_FUNCTION_105();
    v43 = v4;
    *(_DWORD *)v18 = 136315138;
    v41[1] = v18 + 4;
    v19 = v18;
    OUTLINED_FUNCTION_264_1(v2, v20, type metadata accessor for RecentsCallItemType);
    OUTLINED_FUNCTION_72(v3, 0);
    specialized >> prefix<A>(_:)(v3);
    v22 = v21;
    v24 = v23;
    OUTLINED_FUNCTION_60_8(v21, &demangling cache variable for type metadata for RecentsCallItemType?);
    v48 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v22, v24, &v49);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v25 = OUTLINED_FUNCTION_27();
    OUTLINED_FUNCTION_260_2(v25, type metadata accessor for RecentsCallItem);
    OUTLINED_FUNCTION_48(&dword_1BD004000, v14, (os_log_type_t)v42, "[SpamReporting] RecentsCallItem: type: %s", v19);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_260_2(v17, type metadata accessor for RecentsCallItem);

  v26 = v47;
  OUTLINED_FUNCTION_165_0(v4, v27, type metadata accessor for RecentsCallItemType);
  v28 = OUTLINED_FUNCTION_106_11();
  if ((v28 - 3) < 2 || (_DWORD)v28)
  {
    OUTLINED_FUNCTION_73_18(v28, type metadata accessor for RecentsCallItemType);
  }
  else
  {
    v29 = (uint64_t)v26;
    v30 = v46;
    outlined init with take of StagedCollaboration(v29, v46, type metadata accessor for RecentCallRecentItemMetadata);
    OUTLINED_FUNCTION_224_0(v30, v1);
    v31 = v44;
    Logger.logObject.getter();
    v32 = OUTLINED_FUNCTION_12_0();
    v33 = OUTLINED_FUNCTION_21_12(v32);
    if (v33)
    {
      v34 = (uint8_t *)OUTLINED_FUNCTION_105();
      v49 = OUTLINED_FUNCTION_105();
      *(_DWORD *)v34 = 136315138;
      v35 = *(_QWORD *)(v1 + *(int *)(v45 + 32));
      if (v35)
      {
        v48 = *(_QWORD *)(v35 + 16);
        v36 = String.init<A>(reflecting:)();
        v38 = v37;
      }
      else
      {
        v38 = 0xE300000000000000;
        v36 = 7104878;
      }
      v39 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v36, v38, &v49);
      OUTLINED_FUNCTION_61_0(v39);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v40 = OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_368_2(v40, type metadata accessor for RecentCallRecentItemMetadata);
      OUTLINED_FUNCTION_48(&dword_1BD004000, v31, v32, "[SpamReporting] RecentsCallItem: recentCallRecentItemMetadata.remoteHandles.count = %s", v34);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }
    OUTLINED_FUNCTION_159_4(v33, type metadata accessor for RecentCallRecentItemMetadata);

    outlined destroy of RecentsCallItem(v46, type metadata accessor for RecentCallRecentItemMetadata);
  }
  OUTLINED_FUNCTION_52_1();
}

void RecentsCallItem.isIncomingCall.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL8 v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_96();
  type metadata accessor for RecentsCallItem(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_16_2();
  if (one-time initialization token for logger != -1)
    swift_once();
  v2 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_182_3(v2, (uint64_t)static ReportSpamManager.logger);
  OUTLINED_FUNCTION_255_2(v0, v3, type metadata accessor for RecentsCallItem);
  v4 = Logger.logObject.getter();
  v5 = static os_log_type_t.default.getter();
  v6 = os_log_type_enabled(v4, v5);
  if (v6)
  {
    v7 = (uint8_t *)OUTLINED_FUNCTION_105();
    v13 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v7 = 136315138;
    RecentsCallItem.callStatus.getter();
    if ((v8 & 0x100000000) != 0)
    {
      v11 = 0xE300000000000000;
      v9 = 7104878;
    }
    else
    {
      UInt32.stringValue.getter(v8);
      v9 = String.init<A>(reflecting:)();
      v11 = v10;
    }
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v9, v11, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v12 = OUTLINED_FUNCTION_27();
    OUTLINED_FUNCTION_122_5(v12, type metadata accessor for RecentsCallItem);
    OUTLINED_FUNCTION_48(&dword_1BD004000, v4, v5, "Callstatus: %s", v7);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_122_5(v6, type metadata accessor for RecentsCallItem);

  RecentsCallItem.callStatus.getter();
  OUTLINED_FUNCTION_65_1();
}

void RecentsCallItem.isGroupFaceTimeCall.getter()
{
  void **v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD);
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  char v18;
  int v19;
  char v20;
  int v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(_QWORD);
  uint64_t v27;
  uint64_t v28;
  int v29;
  int v30;

  OUTLINED_FUNCTION_93();
  type metadata accessor for RecentsCallItem(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_79();
  OUTLINED_FUNCTION_18_30();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_183();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v28 - v5;
  OUTLINED_FUNCTION_198_1();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_51_2(v8, v9, v28);
  v10 = OUTLINED_FUNCTION_154_4();
  if ((_DWORD)v10 == 2)
  {
    v11 = *v0;
    swift_release();
    OUTLINED_FUNCTION_13_3();

  }
  else
  {
    OUTLINED_FUNCTION_73_18(v10, type metadata accessor for RecentsCallItemType);
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    v12 = OUTLINED_FUNCTION_17_2();
    OUTLINED_FUNCTION_182_3(v12, (uint64_t)&static Logger.conversationKit);
    OUTLINED_FUNCTION_157_2((uint64_t)v0, (uint64_t)v6);
    v13 = OUTLINED_FUNCTION_38_21();
    OUTLINED_FUNCTION_157_2(v13, v14);
    v15 = Logger.logObject.getter();
    v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = OUTLINED_FUNCTION_105();
      *(_DWORD *)v17 = 67109376;
      RecentsCallItem.isTelephony.getter();
      v19 = v18 & 1;
      outlined destroy of RecentsCallItem((uint64_t)v6, type metadata accessor for RecentsCallItem);
      v30 = v19;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v17 + 8) = 1024;
      RecentsCallItem.isOneToOne.getter();
      v21 = v20 & 1;
      outlined destroy of RecentsCallItem(v1, type metadata accessor for RecentsCallItem);
      v29 = v21;
      OUTLINED_FUNCTION_342_3();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl(&dword_1BD004000, v15, v16, "[SpamReporting] isTelephony: %{BOOL}d, isOneToOne: %{BOOL}d", (uint8_t *)v17, 0xEu);
      OUTLINED_FUNCTION_60();
    }
    OUTLINED_FUNCTION_105_2(v1);
    OUTLINED_FUNCTION_105_2((uint64_t)v6);

    RecentsCallItem.isTelephony.getter();
    v23 = v22;
    v24 = OUTLINED_FUNCTION_124_0();
    outlined init with copy of ConversationControlsAppLaunchButtonType(v24, v25, v26);
    if ((v23 & 1) == 0)
      RecentsCallItem.isOneToOne.getter();
    OUTLINED_FUNCTION_49_38(v27, type metadata accessor for RecentsCallItem);
  }
  OUTLINED_FUNCTION_52_1();
}

void RecentsCallItem.faceTimeSpamCallType.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;

  v2 = v0;
  type metadata accessor for RecentsCallItemType(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_52_6();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_11_2();
  RecentsCallItem.isOneToOne.getter();
  v8 = v7;
  OUTLINED_FUNCTION_157_2(v2, v1);
  if ((v8 & 1) != 0)
  {
    RecentsCallItem.isTelephony.getter();
    v11 = v10;
    OUTLINED_FUNCTION_171_1(v10, type metadata accessor for RecentsCallItem);
    if ((v11 & 1) == 0)
      goto LABEL_7;
  }
  else
  {
    OUTLINED_FUNCTION_171_1(v9, type metadata accessor for RecentsCallItem);
  }
  RecentsCallItem.isGroupFaceTimeCall.getter();
  if ((v12 & 1) == 0)
  {
    OUTLINED_FUNCTION_95_1(v2, (uint64_t)v5);
    OUTLINED_FUNCTION_106_11();
    OUTLINED_FUNCTION_105_2((uint64_t)v5);
  }
LABEL_7:
  OUTLINED_FUNCTION_91();
}

void RecentsCallItem.duration.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;

  type metadata accessor for RecentCallRecentItemMetadata(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_47_23();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_25_49(v3, v4, v8);
  v5 = OUTLINED_FUNCTION_82_9();
  if ((_DWORD)v5)
  {
    OUTLINED_FUNCTION_50_31(v5, type metadata accessor for RecentsCallItemType);
  }
  else
  {
    OUTLINED_FUNCTION_143_5(v0, v6, type metadata accessor for RecentCallRecentItemMetadata);
    v7 = (id)OUTLINED_FUNCTION_325_1();
    if (v7)
      v7 = objc_msgSend(v7, sel_duration);
    OUTLINED_FUNCTION_49_38((uint64_t)v7, type metadata accessor for RecentCallRecentItemMetadata);
  }
  OUTLINED_FUNCTION_91();
}

uint64_t RecentsCallItem.linkName.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(_QWORD);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  OUTLINED_FUNCTION_96();
  OUTLINED_FUNCTION_376_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_174_3();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_131_6();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v12);
  v13 = OUTLINED_FUNCTION_242_3();
  OUTLINED_FUNCTION_292_1(v13, v14, v15);
  v16 = OUTLINED_FUNCTION_188_3();
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_1BD387DD4 + *((int *)qword_1BD387F00 + v16)))(v16, v17, v18, v19, v20, v21, v22, v23, a9, a10);
}

uint64_t sub_1BD387DE4(uint64_t a1)
{
  OUTLINED_FUNCTION_171_1(a1, type metadata accessor for RecentsCallItemType);
  OUTLINED_FUNCTION_400_1();
  return OUTLINED_FUNCTION_38_21();
}

void RecentsCallItem.extraSubtitle.getter()
{
  id *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  uint64_t EnumCaseMultiPayload;
  id v6;
  void *v7;
  void *v8;
  NSBundle v9;
  uint64_t v10;
  unint64_t v11;

  OUTLINED_FUNCTION_93();
  type metadata accessor for RecentsCallItemType(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_30_6();
  OUTLINED_FUNCTION_447(v1, v3, v4);
  OUTLINED_FUNCTION_65_2();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((_DWORD)EnumCaseMultiPayload == 2)
  {
    v6 = *v0;
    OUTLINED_FUNCTION_8_8();
    OUTLINED_FUNCTION_1_28();
    OUTLINED_FUNCTION_344_2();
    if (v7)
    {
      v8 = v7;
      v9.super.isa = (Class)objc_msgSend((id)objc_opt_self(), sel_conversationKit);
      OUTLINED_FUNCTION_23_60(v9);
      OUTLINED_FUNCTION_276_0();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v10 = OUTLINED_FUNCTION_15();
      *(_OWORD *)(v10 + 16) = xmmword_1BD6441D0;
      SGURL.applicationLocalizedName.getter();
      *(_QWORD *)(v10 + 56) = MEMORY[0x1E0DEA968];
      v11 = lazy protocol witness table accessor for type String and conformance String();
      OUTLINED_FUNCTION_192_2(v11);
      OUTLINED_FUNCTION_23_0();
      OUTLINED_FUNCTION_19_1();

      OUTLINED_FUNCTION_133();
    }
    else
    {
      OUTLINED_FUNCTION_23_0();
      OUTLINED_FUNCTION_19_1();

    }
  }
  else
  {
    OUTLINED_FUNCTION_49_38(EnumCaseMultiPayload, type metadata accessor for RecentsCallItemType);
  }
  OUTLINED_FUNCTION_52_1();
}

id RecentsCallItem.featureFlags.getter()
{
  uint64_t v0;

  return *(id *)(v0 + *(int *)(OUTLINED_FUNCTION_52_6() + 56));
}

void RecentsCallItem.init(recentsCallMetadata:contacts:title:subtitle:forcedSubtitle:senderIdentity:occurrenceCount:applicationIcon:type:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  BOOL v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int *v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  int *v73;
  uint64_t v74;
  char **v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  unint64_t v80;
  id v81;
  void *v82;
  id v83;
  id v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  unint64_t v88;
  _QWORD *v89;
  void *v90;
  void *v91;
  void **v92;
  void *v93;
  Swift::String v94;
  void *v95;
  void **v96;
  char *v97;
  _QWORD *v98;
  uint64_t v99;
  void *v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;
  void *v104;
  void *v105;
  Swift::String v106;
  uint64_t v107;
  int *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  uint64_t v118;
  void *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t *v124;
  uint64_t v125;
  uint64_t v126;
  void *v127;
  id v128;
  uint64_t v129;
  void *v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  Swift::String v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  void ***v147;
  _QWORD *v148;
  uint64_t v149;
  _QWORD *v150;
  uint64_t v151;
  uint64_t v152;
  objc_class *v153;
  NSBundle v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  int *v180;
  uint64_t v181;
  int *v182;
  void **v183;
  unint64_t v184;
  _QWORD *v185;
  void *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;

  OUTLINED_FUNCTION_93();
  v188 = v16;
  v189 = v17;
  v175 = v18;
  v167 = v19;
  v173 = v20;
  v164 = v21;
  v177 = v22;
  v178 = v23;
  v184 = v24;
  v26 = v25;
  v27 = (uint64_t)a13;
  v179 = a14;
  v174 = a12;
  v169 = a11;
  v170 = v28;
  v176 = a10;
  v168 = a9;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v29);
  v165 = (char *)&v161 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v31);
  OUTLINED_FUNCTION_62();
  v171 = v32;
  v166 = OUTLINED_FUNCTION_33_0();
  v163 = *(_QWORD *)(v166 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v33);
  OUTLINED_FUNCTION_41();
  v162 = v34;
  v35 = OUTLINED_FUNCTION_55_28();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v36);
  OUTLINED_FUNCTION_5_27();
  v172 = v37;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v38);
  v40 = (char *)&v161 - v39;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RecentsCallItemType?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v41);
  v42 = OUTLINED_FUNCTION_173_3();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v43);
  v45 = (char *)&v161 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for RecentsCallItem(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v46);
  OUTLINED_FUNCTION_81();
  v180 = (int *)v47;
  v48 = *(int *)(v47 + 56);
  v49 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DBD2F0]), sel_init);
  v181 = v15;
  v182 = (int *)v35;
  *(_QWORD *)(v15 + v48) = v49;
  v50 = *(int *)(v35 + 32);
  v183 = (void **)v26;
  v51 = *(_QWORD *)(v26 + v50);
  if (v51)
    v51 = *(_QWORD *)(v51 + 16);
  v52 = *(uint64_t *)((char *)v183 + v182[9]);
  v53 = __OFADD__(v51, v52);
  v54 = v51 + v52;
  if (v53)
  {
    __break(1u);
    goto LABEL_29;
  }
  v35 = (uint64_t)a13;
  if (v54 < 1)
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_289_3();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    OUTLINED_FUNCTION_290_2(v61, &demangling cache variable for type metadata for RecentsCallItemType?);
    OUTLINED_FUNCTION_259_2(v62, type metadata accessor for RecentCallRecentItemMetadata);

    OUTLINED_FUNCTION_60_2();
    __swift_storeEnumTagSinglePayload(v63, v64, v65, (uint64_t)v180);
    return;
  }
  outlined init with copy of FeatureEligibility?(v179, v14, &demangling cache variable for type metadata for RecentsCallItemType?);
  OUTLINED_FUNCTION_447((uint64_t)v183, v55, type metadata accessor for RecentCallRecentItemMetadata);
  v56 = OUTLINED_FUNCTION_193_2();
  v58 = OUTLINED_FUNCTION_69_0(v56, v57, v42);
  v27 = v178;
  if (v60)
  {
    OUTLINED_FUNCTION_334_1((uint64_t)v40, v59, type metadata accessor for RecentCallRecentItemMetadata);
    swift_storeEnumTagMultiPayload();
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v14, &demangling cache variable for type metadata for RecentsCallItemType?);
  }
  else
  {
    OUTLINED_FUNCTION_49_38(v58, type metadata accessor for RecentCallRecentItemMetadata);
    OUTLINED_FUNCTION_334_1(v14, v66, type metadata accessor for RecentsCallItemType);
  }
  v68 = v180;
  v69 = v181;
  OUTLINED_FUNCTION_74_1((uint64_t)v45, v67, type metadata accessor for RecentsCallItemType);
  v70 = (_QWORD *)(v69 + v68[5]);
  v71 = v177;
  *v70 = v170;
  v70[1] = v71;
  v72 = (uint64_t)v183;
  v48 = v184;
  *(_QWORD *)(v69 + v68[12]) = v184;
  v73 = v182;
  outlined init with copy of FeatureEligibility?(v72 + v182[5], v69 + v68[9], (uint64_t *)&demangling cache variable for type metadata for Date?);
  if (*(_QWORD *)(v72 + v73[6]))
  {
    v74 = OUTLINED_FUNCTION_35_0();
    if (OUTLINED_FUNCTION_123(v74, sel_callStatus) == *MEMORY[0x1E0D0CEA0])
    {
      v75 = &selRef_systemRedColor;
      goto LABEL_14;
    }
  }
  else
  {
    OUTLINED_FUNCTION_35_0();
  }
  v75 = &selRef_whiteColor;
LABEL_14:
  v76 = objc_msgSend((id)objc_opt_self(), *v75);
  *(_QWORD *)(v181 + v68[10]) = v76;
  if (!(v48 >> 62))
  {
    v77 = *(_QWORD *)((v48 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v77)
      goto LABEL_16;
LABEL_30:
    OUTLINED_FUNCTION_133();
    v79 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_31;
  }
LABEL_29:
  OUTLINED_FUNCTION_35_0();
  v77 = _CocoaArrayWrapper.endIndex.getter();
  OUTLINED_FUNCTION_133();
  if (!v77)
    goto LABEL_30;
LABEL_16:
  v185 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  if ((v77 & 0x8000000000000000) == 0)
  {
    v177 = v35;
    v78 = 0;
    v79 = v185;
    v80 = v48 & 0xC000000000000001;
    do
    {
      if (v80)
        v81 = (id)MEMORY[0x1C3B73D18](v78, v48);
      else
        v81 = *(id *)(v48 + 8 * v78 + 32);
      v82 = v81;
      v83 = objc_msgSend(v81, sel_hasBeenPersisted);
      if ((_DWORD)v83)
      {
        v84 = OUTLINED_FUNCTION_25_1((uint64_t)v83, sel_identifier);
        v85 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        v87 = v86;

      }
      else
      {

        v85 = 0;
        v87 = 0xE000000000000000;
      }
      v185 = v79;
      v88 = v79[2];
      if (v88 >= v79[3] >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        v79 = v185;
      }
      ++v78;
      v79[2] = v88 + 1;
      v89 = &v79[2 * v88];
      v89[4] = v85;
      v89[5] = v87;
      v48 = v184;
    }
    while (v77 != v78);
    OUTLINED_FUNCTION_133();
    v35 = v177;
    v27 = v178;
LABEL_31:
    v185 = v79;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [String]);
    lazy protocol witness table accessor for type [String] and conformance [A]();
    BidirectionalCollection<>.joined(separator:)();
    v91 = v90;
    OUTLINED_FUNCTION_2_1();
    v92 = v183;
    v93 = v183[1];
    v185 = *v183;
    v186 = v93;
    swift_bridgeObjectRetain();
    v94._countAndFlagsBits = OUTLINED_FUNCTION_269_1();
    String.append(_:)(v94);
    OUTLINED_FUNCTION_53();
    v96 = (void **)v185;
    v95 = v186;
    v97 = (char *)v92 + v182[11];
    v98 = *(_QWORD **)v97;
    if (*(_QWORD *)v97)
    {
      v100 = (void *)*((_QWORD *)v97 + 1);
      v99 = *((_QWORD *)v97 + 2);
      v185 = *(_QWORD **)v97;
      v186 = v100;
      v187 = v99;
      v101 = v98;
      OUTLINED_FUNCTION_25_2();
      OUTLINED_FUNCTION_11_1();
      ConversationLink.uniqueId.getter();
      v103 = v102;
      v105 = v104;
      v185 = v96;
      v186 = v95;
      OUTLINED_FUNCTION_33_1();
      v106._countAndFlagsBits = v103;
      v106._object = v105;
      String.append(_:)(v106);
      outlined consume of ConversationLink?(v98);
      OUTLINED_FUNCTION_30_4();
      v92 = (void **)v185;
      v91 = v186;
    }
    else
    {
      OUTLINED_FUNCTION_400_1();
    }
    v108 = v180;
    v110 = v171;
    v109 = v172;
    OUTLINED_FUNCTION_447((uint64_t)v183, v107, type metadata accessor for RecentCallRecentItemMetadata);
    v111 = v175;
    if (v175)
    {
      v112 = OUTLINED_FUNCTION_289_3();
      OUTLINED_FUNCTION_49_38(v112, type metadata accessor for RecentCallRecentItemMetadata);
      v114 = v167;
      goto LABEL_43;
    }
    v115 = v109 + v182[11];
    v116 = v109;
    v117 = *(_QWORD **)v115;
    if (!*(_QWORD *)v115)
    {
      outlined destroy of RecentsCallItem(v116, type metadata accessor for RecentCallRecentItemMetadata);
      v114 = v164;
      v111 = v173;
      goto LABEL_43;
    }
    v119 = *(void **)(v115 + 8);
    v118 = *(_QWORD *)(v115 + 16);
    v185 = *(_QWORD **)v115;
    v186 = v119;
    v187 = v118;
    ConversationLink.displayName.getter();
    if (v121)
    {
      v114 = v120;
      v108 = v180;
      v110 = v171;
      v111 = v121;
    }
    else
    {
      v185 = v117;
      v186 = v119;
      v187 = v118;
      static RecentsCallItem.formattedOriginatorTitleFromLink(_:in:)((void **)&v185, 0);
      v108 = v180;
      if (!v123)
      {
        v153 = (objc_class *)objc_msgSend((id)objc_opt_self(), sel_conversationKit);
        OUTLINED_FUNCTION_349_1();
        OUTLINED_FUNCTION_7_14();
        v154.super.isa = v153;
        v159 = OUTLINED_FUNCTION_49_2(v155, v156, v157, v158, v154);
        v111 = v160;

        outlined destroy of RecentsCallItem(v172, type metadata accessor for RecentCallRecentItemMetadata);
        v113 = OUTLINED_FUNCTION_289_3();
        v114 = v159;
        v110 = v171;
LABEL_43:
        v124 = (uint64_t *)(v181 + v108[6]);
        *v124 = v114;
        v124[1] = v111;
        if (v91)
        {
          OUTLINED_FUNCTION_290_2(v113, &demangling cache variable for type metadata for RecentsCallItemType?);
          OUTLINED_FUNCTION_259_2(v125, type metadata accessor for RecentCallRecentItemMetadata);
          OUTLINED_FUNCTION_54_1();
          v96 = v92;
          v95 = v91;
          v126 = v174;
LABEL_53:
          v146 = v181;
          v147 = (void ***)(v181 + v108[13]);
          *v147 = v96;
          v147[1] = (void **)v95;
          v148 = (_QWORD *)(v146 + v108[7]);
          v149 = v176;
          *v148 = v168;
          v148[1] = v149;
          v150 = (_QWORD *)(v146 + v108[8]);
          *v150 = v169;
          v150[1] = v126;
          *(_QWORD *)(v146 + v108[11]) = v35;
          v151 = OUTLINED_FUNCTION_299_1();
          OUTLINED_FUNCTION_224_0(v151, v152);
          OUTLINED_FUNCTION_33_33(v27);
          OUTLINED_FUNCTION_33_45(v146);
          OUTLINED_FUNCTION_52_1();
          return;
        }
        v127 = *(void **)((char *)v183 + v182[13]);
        if (v127)
        {
          v128 = objc_msgSend(v127, sel_messageUUID);
          v129 = v166;
          if (v128)
          {
            v130 = v128;
            v131 = v165;
            static UUID._unconditionallyBridgeFromObjectiveC(_:)();

            v132 = (uint64_t)v131;
            v133 = 0;
            v126 = v174;
          }
          else
          {
            v133 = 1;
            v126 = v174;
            v132 = (uint64_t)v165;
          }
          OUTLINED_FUNCTION_19_3(v132, v133);
          outlined init with take of Any?(v132, v110, (uint64_t *)&demangling cache variable for type metadata for UUID?);
          v137 = OUTLINED_FUNCTION_69_0(v110, 1, v129);
          if (!v60)
          {
            v140 = v163;
            v141 = v110;
            v142 = v162;
            OUTLINED_FUNCTION_8_7(v162, v141, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v163 + 32));
            UUID.uuidString.getter();
            v185 = v96;
            v186 = v95;
            OUTLINED_FUNCTION_33_1();
            v143._countAndFlagsBits = OUTLINED_FUNCTION_65_2();
            String.append(_:)(v143);
            v108 = v180;
            OUTLINED_FUNCTION_54_1();
            v144 = OUTLINED_FUNCTION_2_1();
            v96 = (void **)v185;
            v95 = v186;
            OUTLINED_FUNCTION_290_2(v144, &demangling cache variable for type metadata for RecentsCallItemType?);
            v145 = (*(uint64_t (**)(uint64_t, uint64_t))(v140 + 8))(v142, v166);
            OUTLINED_FUNCTION_259_2(v145, type metadata accessor for RecentCallRecentItemMetadata);
            goto LABEL_53;
          }
        }
        else
        {
          OUTLINED_FUNCTION_60_2();
          v137 = __swift_storeEnumTagSinglePayload(v134, v135, v136, v166);
          v126 = v174;
        }
        OUTLINED_FUNCTION_290_2(v137, &demangling cache variable for type metadata for RecentsCallItemType?);
        OUTLINED_FUNCTION_259_2(v138, type metadata accessor for RecentCallRecentItemMetadata);
        OUTLINED_FUNCTION_219(v139, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        goto LABEL_53;
      }
      v111 = v123;
      v114 = v122;
      v110 = v171;
    }
    outlined destroy of RecentsCallItem(v172, type metadata accessor for RecentCallRecentItemMetadata);
    v113 = OUTLINED_FUNCTION_289_3();
    goto LABEL_43;
  }
  __break(1u);
}

uint64_t static RecentsCallItem.titleUsingLink(_:in:)(uint64_t a1, void *a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  void (*v29)(void **, _QWORD);
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned __int8 v35;
  void *v36;

  v3 = *(void **)a1;
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v30 = *(void **)a1;
  v31 = v4;
  v32 = v5;
  ConversationLink.displayName.getter();
  if (v7)
    return v6;
  v30 = v3;
  v31 = v4;
  v32 = v5;
  static RecentsCallItem.formattedOriginatorTitleFromLink(_:in:)(&v30, a2);
  if (v8)
    return v6;
  if (!a2)
  {
LABEL_20:
    v9 = static RecentsCallItem.genericStringForFaceTimeLink(_:)((unint64_t)a2);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    return v9;
  }
  v11 = objc_msgSend(a2, sel_remoteMembers);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
  lazy protocol witness table accessor for type SGURL and conformance NSObject((unint64_t *)&lazy protocol witness table cache variable for type TUConversationMember and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
  v12 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  v13 = specialized Set.count.getter(v12);
  if (!v13)
  {
    swift_bridgeObjectRelease();
    a2 = (void *)MEMORY[0x1E0DEE9D8];
    goto LABEL_20;
  }
  v14 = v13;
  v36 = (void *)MEMORY[0x1E0DEE9D8];
  specialized ContiguousArray.reserveCapacity(_:)();
  if ((v12 & 0xC000000000000001) != 0)
  {
    result = __CocoaSet.startIndex.getter();
    v16 = 1;
  }
  else
  {
    result = specialized _NativeSet.startIndex.getter(v12);
    v16 = v17 & 1;
  }
  v33 = result;
  v34 = v15;
  v35 = v16;
  if ((v14 & 0x8000000000000000) == 0)
  {
    do
    {
      v18 = v33;
      v19 = v34;
      v20 = v35;
      specialized Set.subscript.getter(v33, v34, v35, v12);
      v22 = v21;
      v23 = objc_msgSend(v21, sel_handle);

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      result = specialized ContiguousArray._endMutation()();
      if ((v12 & 0xC000000000000001) != 0)
      {
        if ((v20 & 1) == 0)
          goto LABEL_22;
        if (__CocoaSet.Index.handleBitPattern.getter())
          swift_isUniquelyReferenced_nonNull_native();
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Set<TUConversationMember>.Index);
        v29 = (void (*)(void **, _QWORD))Set.Index._asCocoa.modify();
        __CocoaSet.formIndex(after:isUnique:)();
        v29(&v30, 0);
      }
      else
      {
        v24 = specialized _NativeSet.index(after:)(v18, v19, v20, v12);
        v26 = v25;
        v28 = v27;
        outlined consume of Set<TUHandle>.Index._Variant(v18, v19, v20);
        v33 = v24;
        v34 = v26;
        v35 = v28 & 1;
      }
      --v14;
    }
    while (v14);
    outlined consume of Set<TUHandle>.Index._Variant(v33, v34, v35);
    a2 = v36;
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  __break(1u);
LABEL_22:
  __break(1u);
  return result;
}

#error "1BD388DA8: call analysis failed (funcsize=241)"

uint64_t MessageType.mediaType.getter(unsigned __int16 a1)
{
  uint64_t result;
  Swift::String v2;

  if (a1 < 3u)
    return qword_1BD65B2B8[(__int16)a1];
  _StringGuts.grow(_:)(26);
  swift_bridgeObjectRelease();
  MessageType.rawValue.getter();
  v2._countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v2);
  OUTLINED_FUNCTION_13_3();
  result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t static RecentsCallItem.genericStringForFaceTimeLink(_:)(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  Swift::String_optional v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t countAndFlagsBits;
  unint64_t v20;

  if (a1)
  {
    if (a1 >> 62)
      goto LABEL_16;
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    for (; v2; v2 = _CocoaArrayWrapper.endIndex.getter())
    {
      v3 = 4;
      while (1)
      {
        v4 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C3B73D18](v3 - 4, a1) : *(id *)(a1 + 8 * v3);
        v5 = v4;
        v6 = v3 - 3;
        if (__OFADD__(v3 - 4, 1))
          break;
        v7 = objc_msgSend(v4, sel_value);
        v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        v10 = v9;

        v11 = (void *)MEMORY[0x1C3B72E00](v8, v10);
        swift_bridgeObjectRelease();
        LOBYTE(v8) = objc_msgSend(v11, sel_destinationIdIsTemporary);

        if ((v8 & 1) != 0)
        {
          swift_bridgeObjectRelease_n();
          v12 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
          v20 = 0xE000000000000000;
          v13 = 0x454D495445434146;
          v14 = 0xED00004B4E494C5FLL;
          goto LABEL_13;
        }
        ++v3;
        if (v6 == v2)
          goto LABEL_11;
      }
      __break(1u);
LABEL_16:
      swift_bridgeObjectRetain_n();
    }
LABEL_11:
    swift_bridgeObjectRelease_n();
  }
  v12 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v20 = 0xE000000000000000;
  v13 = 0x454D495445434146;
  v14 = 0xEE004F454449565FLL;
LABEL_13:
  v15.value._countAndFlagsBits = 0x61737265766E6F43;
  v15.value._object = (void *)0xEF74694B6E6F6974;
  v16._countAndFlagsBits = 0;
  v16._object = (void *)0xE000000000000000;
  v17 = 0;
  countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v13, v15, (NSBundle)v12, v16, *(Swift::String *)(&v20 - 1))._countAndFlagsBits;

  return countAndFlagsBits;
}

void static RecentsCallItem.formattedOriginatorTitleFromLink(_:in:)(void **a1, void *a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  id v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  void (*v41)(id *, _QWORD);
  id v42;
  void *v43;
  id v44;
  void *ObjCClassFromMetadata;
  id v46;
  id v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  Swift::Int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  id v60;
  Swift::String v61;
  Swift::String_optional v62;
  Swift::String v63;
  uint64_t v64;
  id v65;
  Swift::String v66;
  Swift::String_optional v67;
  Swift::String v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  id v72[4];
  uint64_t v73;
  uint64_t v74;
  unsigned __int8 v75;
  uint64_t v76;
  uint64_t v77;
  Swift::String v78;
  Swift::String v79;

  v3 = *a1;
  outlined bridged method (pb) of @objc TUConversationLink.invitedMemberHandles.getter(*a1);
  v5 = v4;
  v77 = v4;
  if ((objc_msgSend(v3, sel_isLocallyCreated) & 1) != 0
    || (v6 = objc_msgSend(v3, sel_originatorHandle)) == 0)
  {
LABEL_5:
    if (a2)
      goto LABEL_6;
LABEL_12:
    v14 = MEMORY[0x1E0DEE9D8];
    goto LABEL_27;
  }
  if (v5)
  {
    specialized Set._Variant.insert(_:)((int)v72, (int)v6, v7, v8, v9, v10, v11, v12);

    goto LABEL_5;
  }

  if (!a2)
    goto LABEL_12;
LABEL_6:
  v13 = objc_msgSend(a2, sel_localMember);
  v14 = MEMORY[0x1E0DEE9D8];
  if (v13)
  {
    v15 = v13;
    v16 = objc_msgSend(v13, sel_handles);

    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
    lazy protocol witness table accessor for type SGURL and conformance NSObject((unint64_t *)&lazy protocol witness table cache variable for type TUHandle and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
    v17 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    v18 = specialized Set.count.getter(v17);
    if (v18)
    {
      v19 = v18;
      v76 = v14;
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      if ((v17 & 0xC000000000000001) != 0)
      {
        v20 = __CocoaSet.startIndex.getter();
        v22 = 1;
      }
      else
      {
        v20 = specialized _NativeSet.startIndex.getter(v17);
        v22 = v23 & 1;
      }
      v73 = v20;
      v74 = v21;
      v75 = v22;
      if (v19 < 0)
      {
        __break(1u);
LABEL_46:
        __break(1u);
        goto LABEL_47;
      }
      do
      {
        v25 = v73;
        v24 = v74;
        v26 = v75;
        specialized Set.subscript.getter(v73, v74, v75, v17);
        v28 = v27;
        v29 = objc_msgSend(v27, sel_value);
        v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        v32 = v31;

        v33 = v76;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          v33 = v76;
        }
        v34 = *(_QWORD *)(v33 + 16);
        if (v34 >= *(_QWORD *)(v33 + 24) >> 1)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          v33 = v76;
        }
        *(_QWORD *)(v33 + 16) = v34 + 1;
        v35 = v33 + 16 * v34;
        *(_QWORD *)(v35 + 32) = v30;
        *(_QWORD *)(v35 + 40) = v32;
        if ((v17 & 0xC000000000000001) != 0)
        {
          if ((v26 & 1) == 0)
            goto LABEL_46;
          if (__CocoaSet.Index.handleBitPattern.getter())
            swift_isUniquelyReferenced_nonNull_native();
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Set<TUHandle>.Index);
          v41 = (void (*)(id *, _QWORD))Set.Index._asCocoa.modify();
          __CocoaSet.formIndex(after:isUnique:)();
          v41(v72, 0);
        }
        else
        {
          v36 = specialized _NativeSet.index(after:)(v25, v24, v26, v17);
          v38 = v37;
          v40 = v39;
          outlined consume of Set<TUHandle>.Index._Variant(v25, v24, v26);
          v73 = v36;
          v74 = v38;
          v75 = v40 & 1;
        }
        --v19;
      }
      while (v19);
      outlined consume of Set<TUHandle>.Index._Variant(v73, v74, v75);
      swift_bridgeObjectRelease();
      v14 = v76;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
LABEL_27:
  v72[0] = (id)specialized Set.init<A>(_:)(v14);
  v42 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  if (!v42)
  {
LABEL_47:
    __break(1u);
    return;
  }
  v43 = v42;
  objc_msgSend(v42, sel_blockUntilConnected);

  v44 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  if (!v44)
    goto LABEL_32;
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for IMServiceImpl);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v46 = v44;
  v47 = objc_msgSend(ObjCClassFromMetadata, sel_facetimeService);
  v48 = objc_msgSend(v46, sel_bestAccountForService_, v47);

  if (!v48
    || (v49 = outlined bridged method (ob) of @objc IMAccount.aliases.getter(v48)) == 0
    || (v50 = specialized _arrayConditionalCast<A, B>(_:)(v49), swift_bridgeObjectRelease(), !v50))
  {
LABEL_32:
    swift_bridgeObjectRelease();
    v50 = MEMORY[0x1E0DEE9D8];
  }
  specialized Set.formUnion<A>(_:)(v50);
  if (v77)
  {
    v51 = swift_bridgeObjectRetain();
    v52 = specialized Set._Variant.filter(_:)(v51, (uint64_t *)v72);
    swift_retain();
    specialized Sequence.compactMap<A>(_:)(v52);
    v54 = v53;
    swift_release();
  }
  else
  {
    v54 = MEMORY[0x1E0DEE9D8];
  }
  v55 = *(_QWORD *)(v54 + 16);
  if (v55)
  {
    v56 = *(_QWORD *)(v54 + 40);
    v57 = *(_QWORD *)(v54 + 48);
    v58 = *(id *)(v54 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v59 = v55 - 1;
    if (v55 == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v55 == 2)
      {
        v60 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
        v78._object = (void *)0xE000000000000000;
        v61._object = (void *)0x80000001BD6880C0;
        v61._countAndFlagsBits = 0xD000000000000030;
        v62.value._countAndFlagsBits = 0x61737265766E6F43;
        v62.value._object = (void *)0xEF74694B6E6F6974;
        v63._countAndFlagsBits = 0;
        v63._object = (void *)0xE000000000000000;
        v78._countAndFlagsBits = 0;
        NSLocalizedString(_:tableName:bundle:value:comment:)(v61, v62, (NSBundle)v60, v63, v78);

        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
        v64 = swift_allocObject();
        *(_OWORD *)(v64 + 16) = xmmword_1BD6441D0;
        *(_QWORD *)(v64 + 56) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v64 + 64) = lazy protocol witness table accessor for type String and conformance String();
        *(_QWORD *)(v64 + 32) = v56;
        *(_QWORD *)(v64 + 40) = v57;
      }
      else
      {
        v65 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
        v66._countAndFlagsBits = 0xD000000000000036;
        v79._object = (void *)0xE000000000000000;
        v66._object = (void *)0x80000001BD688080;
        v67.value._countAndFlagsBits = 0x61737265766E6F43;
        v67.value._object = (void *)0xEF74694B6E6F6974;
        v68._countAndFlagsBits = 0;
        v68._object = (void *)0xE000000000000000;
        v79._countAndFlagsBits = 0;
        NSLocalizedString(_:tableName:bundle:value:comment:)(v66, v67, (NSBundle)v65, v68, v79);

        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
        v69 = swift_allocObject();
        *(_OWORD *)(v69 + 16) = xmmword_1BD645380;
        *(_QWORD *)(v69 + 56) = MEMORY[0x1E0DEA968];
        v70 = lazy protocol witness table accessor for type String and conformance String();
        *(_QWORD *)(v69 + 32) = v56;
        *(_QWORD *)(v69 + 40) = v57;
        v71 = MEMORY[0x1E0DEB490];
        *(_QWORD *)(v69 + 96) = MEMORY[0x1E0DEB418];
        *(_QWORD *)(v69 + 104) = v71;
        *(_QWORD *)(v69 + 64) = v70;
        *(_QWORD *)(v69 + 72) = v59;
      }
      swift_bridgeObjectRetain();
      String.init(format:_:)();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
    }
  }
  else
  {

    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

void RecentsCallItem.init(recentItem:linkItem:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  int *v46;
  id v47;
  uint64_t v48;
  id v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t (*v71)(uint64_t, uint64_t, uint64_t);
  uint64_t v72;
  char v73;
  uint64_t v74;
  void (*v75)(uint64_t, uint64_t);
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  _QWORD *v79;
  void *v80;
  uint64_t v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t *v95;
  void *v96;
  uint64_t v97;
  void *v98;
  void *v99;
  void *v100;
  uint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  void *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  int *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  id v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  id v139;
  uint64_t v140;
  uint64_t v141;

  OUTLINED_FUNCTION_93();
  v137 = v7;
  v138 = v6;
  v9 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RecentsCallItemType?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_41();
  v128 = v11;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v12);
  v129 = (char *)&v115 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v136 = OUTLINED_FUNCTION_52_6();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_41();
  v127 = v15;
  v16 = OUTLINED_FUNCTION_33_0();
  v134 = *(_QWORD *)(v16 - 8);
  v135 = (id)v16;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_41();
  v126 = v18;
  v133 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_241_3(v20, v115);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v21);
  OUTLINED_FUNCTION_5_27();
  v130 = v22;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v23);
  v131 = (char *)&v115 - v24;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v25);
  OUTLINED_FUNCTION_401_1();
  MEMORY[0x1E0C80A78](v26);
  v27 = OUTLINED_FUNCTION_207_4();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v28);
  OUTLINED_FUNCTION_88_11();
  MEMORY[0x1E0C80A78](v29);
  OUTLINED_FUNCTION_120_4();
  v30 = type metadata accessor for RecentCallRecentItemMetadata(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v31);
  OUTLINED_FUNCTION_199_1();
  MEMORY[0x1E0C80A78](v32);
  OUTLINED_FUNCTION_99_1();
  MEMORY[0x1E0C80A78](v33);
  v35 = (char *)&v115 - v34;
  v36 = OUTLINED_FUNCTION_315_0();
  outlined init with copy of ConversationControlsAppLaunchButtonType(v36, v37, type metadata accessor for RecentsCallItemType);
  if (OUTLINED_FUNCTION_106_11())
  {
    OUTLINED_FUNCTION_33_45(v138);
    OUTLINED_FUNCTION_33_45(v9);
    v38 = type metadata accessor for RecentsCallItemType;
    v39 = v0;
LABEL_21:
    outlined destroy of RecentsCallItem(v39, v38);
    v93 = 1;
    v92 = v136;
    v94 = v137;
    goto LABEL_22;
  }
  v121 = (int *)v30;
  v122 = v5;
  v125 = v2;
  v40 = (uint64_t)v135;
  v119 = v4;
  v120 = v1;
  v124 = v9;
  outlined init with take of StagedCollaboration(v0, (uint64_t)v35, type metadata accessor for RecentCallRecentItemMetadata);
  v41 = v138;
  OUTLINED_FUNCTION_217_2(v138, v42, type metadata accessor for RecentsCallItemType);
  if (OUTLINED_FUNCTION_106_11() != 2)
  {
    OUTLINED_FUNCTION_33_45(v41);
    OUTLINED_FUNCTION_33_45(v124);
    OUTLINED_FUNCTION_368_2(v54, type metadata accessor for RecentCallRecentItemMetadata);
    v38 = type metadata accessor for RecentsCallItemType;
    v39 = v3;
    goto LABEL_21;
  }
  v116 = v27;
  v43 = *(void **)v3;
  v44 = *(_QWORD *)(v3 + 8);
  v45 = *(_QWORD *)(v3 + 16);
  v46 = v121;
  outlined init with copy of FeatureEligibility?((uint64_t)&v35[v121[10]], v125, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  v47 = v43;
  v123 = v44;
  OUTLINED_FUNCTION_5_0();
  v48 = v45;
  OUTLINED_FUNCTION_11_1();
  v49 = objc_msgSend(v47, sel_groupUUID);
  v118 = v35;
  if (v49)
  {
    v50 = v49;
    v51 = (uint64_t)v131;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    v52 = 0;
  }
  else
  {
    v52 = 1;
    v51 = (uint64_t)v131;
  }
  v53 = v132;
  v55 = v122;
  __swift_storeEnumTagSinglePayload(v51, v52, 1, v40);
  outlined init with take of Any?(v51, v55, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_333_1();
  v135 = v47;

  v56 = v53 + *(int *)(v133 + 48);
  v57 = v125;
  outlined init with copy of FeatureEligibility?(v125, v53, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  v58 = OUTLINED_FUNCTION_315_0();
  outlined init with copy of FeatureEligibility?(v58, v59, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_69_0(v53, 1, v40);
  v60 = v134;
  if (v66)
  {
    OUTLINED_FUNCTION_25_0(v55);
    OUTLINED_FUNCTION_25_0(v57);
    v61 = OUTLINED_FUNCTION_69_0(v56, 1, v40);
    v62 = v135;
    if (v66)
    {
      OUTLINED_FUNCTION_225_3(v61, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      v64 = (uint64_t)v118;
      goto LABEL_18;
    }
    goto LABEL_16;
  }
  v65 = v130;
  outlined init with copy of FeatureEligibility?(v53, v130, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_69_0(v56, 1, v40);
  if (v66)
  {
    OUTLINED_FUNCTION_25_0(v122);
    OUTLINED_FUNCTION_25_0(v125);
    v61 = (*(uint64_t (**)(uint64_t, uint64_t))(v60 + 8))(v65, v40);
    v62 = v135;
LABEL_16:
    OUTLINED_FUNCTION_225_3(v61, (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
    v67 = v124;
    v64 = (uint64_t)v118;
LABEL_20:
    OUTLINED_FUNCTION_27_0();
    OUTLINED_FUNCTION_333_1();

    OUTLINED_FUNCTION_33_45(v41);
    OUTLINED_FUNCTION_33_45(v67);
    v38 = type metadata accessor for RecentCallRecentItemMetadata;
    v39 = v64;
    goto LABEL_21;
  }
  v68 = v126;
  v69 = OUTLINED_FUNCTION_65_2();
  OUTLINED_FUNCTION_374_1(v69, v70, v71);
  _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
  v72 = v53;
  v73 = dispatch thunk of static Equatable.== infix(_:_:)();
  v74 = v48;
  v75 = *(void (**)(uint64_t, uint64_t))(v60 + 8);
  v75(v68, v40);
  OUTLINED_FUNCTION_90_1(v122);
  OUTLINED_FUNCTION_90_1(v125);
  v75(v65, v40);
  v48 = v74;
  OUTLINED_FUNCTION_90_1(v72);
  v67 = v124;
  v46 = v121;
  v64 = (uint64_t)v118;
  v62 = v135;
  if ((v73 & 1) == 0)
    goto LABEL_20;
LABEL_18:
  v117 = v48;
  v76 = v119;
  OUTLINED_FUNCTION_71_1(v64, v63, type metadata accessor for RecentCallRecentItemMetadata);
  v77 = v120;
  *(_QWORD *)(v120 + v46[6]) = 0;
  v78 = (_QWORD *)(v77 + v46[11]);
  *v78 = 0;
  v78[1] = 0;
  v78[2] = 0;
  *(_QWORD *)(v77 + v46[13]) = 0;
  v79 = (_QWORD *)(v76 + v46[11]);
  v80 = v62;
  v81 = v123;
  v82 = v80;
  OUTLINED_FUNCTION_79_1();
  swift_retain();
  OUTLINED_FUNCTION_281_3();
  *v79 = v80;
  v79[1] = v81;
  v79[2] = v117;
  v83 = v117;
  v84 = OUTLINED_FUNCTION_124_0();
  outlined init with take of StagedCollaboration(v84, v85, type metadata accessor for RecentCallRecentItemMetadata);
  v139 = v82;
  v140 = v81;
  v141 = v83;
  ConversationLink.displayName.getter();
  v87 = v86;
  v89 = v88;
  v90 = v127;
  OUTLINED_FUNCTION_447(v124, v88, type metadata accessor for RecentsCallItem);
  if (v89)
  {
    v135 = (id)v87;
    v92 = v136;
  }
  else
  {
    v92 = v136;
    v95 = (uint64_t *)(v90 + *(int *)(v136 + 24));
    v89 = v95[1];
    v135 = (id)*v95;
    v91 = OUTLINED_FUNCTION_35_0();
  }
  OUTLINED_FUNCTION_49_38(v91, type metadata accessor for RecentsCallItem);
  v139 = v82;
  v140 = v123;
  v141 = v83;
  ConversationLink.prevailingSuggestion.getter();
  if (v96)
  {
    v98 = v96;
    SGURL.applicationIcon.getter();
    v100 = v99;

  }
  else
  {
    v100 = 0;
  }
  OUTLINED_FUNCTION_71_1(v120, v97, type metadata accessor for RecentCallRecentItemMetadata);
  v101 = v124;
  v102 = (uint64_t *)(v124 + *(int *)(v92 + 20));
  v103 = *v102;
  v104 = v102[1];
  v105 = v128;
  OUTLINED_FUNCTION_60_2();
  __swift_storeEnumTagSinglePayload(v106, v107, v108, v116);
  OUTLINED_FUNCTION_35_0();
  OUTLINED_FUNCTION_124();
  OUTLINED_FUNCTION_79_1();
  v114 = v100;
  v109 = (uint64_t)v129;
  v110 = OUTLINED_FUNCTION_124_0();
  RecentsCallItem.init(recentsCallMetadata:contacts:title:subtitle:forcedSubtitle:senderIdentity:occurrenceCount:applicationIcon:type:)(v110, v111, v103, v104, (uint64_t)v135, v89, (uint64_t)v135, v89, 0, 0, 0, 0, v114, v105);
  swift_release();
  OUTLINED_FUNCTION_333_1();

  OUTLINED_FUNCTION_33_45(v138);
  OUTLINED_FUNCTION_33_45(v101);
  OUTLINED_FUNCTION_33_45(v120);
  OUTLINED_FUNCTION_33_45((uint64_t)v118);
  v112 = OUTLINED_FUNCTION_77_2(v109);
  if ((_DWORD)v112)
  {
    OUTLINED_FUNCTION_275(v112, (uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
    v93 = 1;
    v94 = v137;
  }
  else
  {
    v94 = v137;
    OUTLINED_FUNCTION_143_5(v109, v113, type metadata accessor for RecentsCallItem);
    v93 = 0;
  }
LABEL_22:
  __swift_storeEnumTagSinglePayload(v94, v93, 1, v92);
  OUTLINED_FUNCTION_52_1();
}

void RecentsCallItem.init(recentItem:messageItem:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(_QWORD);
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  os_log_type_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t (*v75)(uint64_t);
  uint64_t v76;
  uint64_t v77;
  void (*v78)(uint64_t, uint64_t);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  void *v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  void *v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  NSObject *v97;
  uint64_t v98;
  os_log_type_t v99;
  _BOOL4 v100;
  uint8_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  unint64_t v107;
  uint64_t v108;
  os_log_type_t v109;
  _BOOL4 v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  NSObject *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint8_t *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155[4];

  OUTLINED_FUNCTION_93();
  v4 = v3;
  v6 = v5;
  v152 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RecentsCallItemType?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_41();
  v138 = v9;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_5_27();
  v139 = v11;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_62();
  v133 = v13;
  v145 = OUTLINED_FUNCTION_33_0();
  v141 = *(uint8_t **)(v145 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_194_2(v15, v132);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_41();
  v140 = v17;
  v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_41();
  v144 = v20;
  v21 = (int *)OUTLINED_FUNCTION_93_6();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v22);
  OUTLINED_FUNCTION_5_27();
  v143 = v23;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v24);
  OUTLINED_FUNCTION_18_0();
  v137 = v25;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v26);
  OUTLINED_FUNCTION_18_0();
  v135 = v27;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v28);
  OUTLINED_FUNCTION_18_0();
  v142 = v29;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v30);
  OUTLINED_FUNCTION_18_0();
  v146 = v31;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v32);
  OUTLINED_FUNCTION_18_0();
  v147 = v33;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v34);
  OUTLINED_FUNCTION_120_4();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RecentCallRecentItemMetadata?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v35);
  OUTLINED_FUNCTION_5_27();
  v136 = v36;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v37);
  v39 = (char *)&v132 - v38;
  MEMORY[0x1E0C80A78](v40);
  OUTLINED_FUNCTION_18_30();
  MEMORY[0x1E0C80A78](v41);
  OUTLINED_FUNCTION_99_1();
  MEMORY[0x1E0C80A78](v42);
  v44 = (char *)&v132 - v43;
  v149 = OUTLINED_FUNCTION_52_6();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v45);
  v153 = (uint64_t)&v132 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of ConversationControlsAppLaunchButtonType(v4, v153, v47);
  v151 = v6;
  RecentsCallItemType.recentCallRecentItemMetadata.getter();
  v150 = v4;
  RecentsCallItemType.recentCallRecentItemMetadata.getter();
  v148 = v44;
  OUTLINED_FUNCTION_87_0((uint64_t)v44, v0);
  v48 = OUTLINED_FUNCTION_69_0(v0, 1, (uint64_t)v21);
  if (v50)
    goto LABEL_7;
  OUTLINED_FUNCTION_74_1(v0, v49, type metadata accessor for RecentCallRecentItemMetadata);
  outlined init with copy of FeatureEligibility?(v2, (uint64_t)v39, &demangling cache variable for type metadata for RecentCallRecentItemMetadata?);
  v51 = OUTLINED_FUNCTION_69_0((uint64_t)v39, 1, (uint64_t)v21);
  if (v50)
  {
    OUTLINED_FUNCTION_50_31(v51, type metadata accessor for RecentCallRecentItemMetadata);
LABEL_7:
    OUTLINED_FUNCTION_275(v48, &demangling cache variable for type metadata for RecentCallRecentItemMetadata?);
    v53 = v149;
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    v54 = OUTLINED_FUNCTION_17_2();
    v55 = (void *)OUTLINED_FUNCTION_3(v54, (uint64_t)&static Logger.conversationKit);
    v56 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_13_0(v56))
    {
      *(_WORD *)OUTLINED_FUNCTION_105() = 0;
      OUTLINED_FUNCTION_14_14(&dword_1BD004000, v57, v58, "Unable to coalesce recentsCallItem w/ messageItem because metadata is nil)");
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_33_45(v150);
    v59 = v151;
    goto LABEL_12;
  }
  v63 = (uint64_t)v39;
  v64 = v147;
  OUTLINED_FUNCTION_334_1(v63, v52, type metadata accessor for RecentCallRecentItemMetadata);
  v65 = v21[12];
  v66 = v64 + v65;
  v67 = v144;
  v68 = (void *)(v144 + *(int *)(v18 + 48));
  OUTLINED_FUNCTION_87_0(v1 + v65, v144);
  OUTLINED_FUNCTION_87_0(v66, (uint64_t)v68);
  v69 = v145;
  OUTLINED_FUNCTION_69_0(v67, 1, v145);
  if (!v70)
  {
    v72 = v140;
    outlined init with copy of FeatureEligibility?(v67, v140, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    OUTLINED_FUNCTION_69_0((uint64_t)v68, 1, v69);
    if (!v73)
    {
      v76 = (uint64_t)v141;
      v77 = v134;
      (*((void (**)(uint64_t, void *, uint64_t))v141 + 4))(v134, v68, v69);
      _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
      OUTLINED_FUNCTION_399_1();
      v68 = (void *)v72;
      HIDWORD(v132) = dispatch thunk of static Equatable.== infix(_:_:)();
      v78 = *(void (**)(uint64_t, uint64_t))(v76 + 8);
      v78(v77, v69);
      v79 = OUTLINED_FUNCTION_269_1();
      v80 = ((uint64_t (*)(uint64_t))v78)(v79);
      OUTLINED_FUNCTION_60_8(v80, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      if ((v132 & 0x100000000) != 0)
        goto LABEL_24;
      goto LABEL_28;
    }
    v74 = OUTLINED_FUNCTION_157();
    v71 = v75(v74);
LABEL_22:
    OUTLINED_FUNCTION_60_8(v71, (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
LABEL_28:
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    v108 = OUTLINED_FUNCTION_17_2();
    OUTLINED_FUNCTION_3(v108, (uint64_t)&static Logger.conversationKit);
    v109 = OUTLINED_FUNCTION_31_6();
    v110 = OUTLINED_FUNCTION_13_0(v109);
    v53 = v149;
    if (v110)
    {
      *(_WORD *)OUTLINED_FUNCTION_105() = 0;
      OUTLINED_FUNCTION_14_14(&dword_1BD004000, v111, v112, "Unable to create RecentsCallItem since the recent call conversationID and the message conversationID aren't the same");
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_33_45(v150);
    OUTLINED_FUNCTION_33_45(v151);
    OUTLINED_FUNCTION_33_45(v64);
    v59 = v1;
LABEL_12:
    OUTLINED_FUNCTION_33_45(v59);
    OUTLINED_FUNCTION_25_0(v2);
    OUTLINED_FUNCTION_25_0((uint64_t)v148);
    v61 = 1;
    v62 = v152;
    goto LABEL_13;
  }
  v71 = OUTLINED_FUNCTION_69_0((uint64_t)v68, 1, v69);
  if (!v50)
    goto LABEL_22;
  OUTLINED_FUNCTION_60_8(v71, (uint64_t *)&demangling cache variable for type metadata for UUID?);
LABEL_24:
  v145 = v2;
  v81 = v142;
  OUTLINED_FUNCTION_92_12(v64, v142);
  v82 = v135;
  OUTLINED_FUNCTION_92_12(v1, v135);
  v83 = v21[6];
  v84 = v137;
  *(_QWORD *)(v137 + v83) = 0;
  v85 = v1;
  v86 = (_QWORD *)(v84 + v21[11]);
  *v86 = 0;
  v86[1] = 0;
  v86[2] = 0;
  *(_QWORD *)(v84 + v21[13]) = 0;
  v87 = *(void **)(v82 + v21[6]);
  v88 = v87;
  OUTLINED_FUNCTION_181_3(v82);
  v89 = v21[6];

  *(_QWORD *)(v81 + v89) = v87;
  OUTLINED_FUNCTION_324_3();
  OUTLINED_FUNCTION_144_2(v81, v84);
  OUTLINED_FUNCTION_144_2(v84, v146);
  v144 = v85;
  OUTLINED_FUNCTION_92_12(v85, v81);
  OUTLINED_FUNCTION_92_12(v147, v82);
  v90 = v21[6];
  *(_QWORD *)(v84 + v90) = 0;
  v91 = (_QWORD *)(v84 + v21[11]);
  *v91 = 0;
  v91[1] = 0;
  v91[2] = 0;
  v92 = v21[13];
  *(_QWORD *)(v84 + v92) = 0;
  v93 = *(void **)(v82 + v21[13]);
  v94 = v93;
  OUTLINED_FUNCTION_181_3(v82);
  v95 = v21[13];

  *(_QWORD *)(v81 + v95) = v93;
  v96 = v153;

  OUTLINED_FUNCTION_324_3();
  OUTLINED_FUNCTION_144_2(v81, v84);
  OUTLINED_FUNCTION_144_2(v84, v143);
  v97 = v136;
  OUTLINED_FUNCTION_92_12(v146, (uint64_t)v136);
  OUTLINED_FUNCTION_51_26((uint64_t)v97);
  RecentsCallItemType.recentCallRecentItemMetadata.setter();
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v98 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v98, (uint64_t)&static Logger.conversationKit);
  v99 = OUTLINED_FUNCTION_31_6();
  v100 = OUTLINED_FUNCTION_131_0(v99);
  v53 = v149;
  if (v100)
  {
    v101 = (uint8_t *)OUTLINED_FUNCTION_105();
    v155[0] = OUTLINED_FUNCTION_105();
    *(_DWORD *)v101 = 136315138;
    v141 = v101 + 4;
    OUTLINED_FUNCTION_1();
    v102 = v133;
    OUTLINED_FUNCTION_264_1(v96, v103, type metadata accessor for RecentsCallItem);
    OUTLINED_FUNCTION_51_26(v102);
    specialized >> prefix<A>(_:)(v102);
    v105 = v104;
    v107 = v106;
    OUTLINED_FUNCTION_60_8(v104, (uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
    v154 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v105, v107, v155);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_48(&dword_1BD004000, v97, (os_log_type_t)v91, "messageItemCopy: %s", v101);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  v113 = v96;
  v114 = v143;
  OUTLINED_FUNCTION_92_12(v143, v142);
  v115 = v151;
  v116 = (uint64_t *)(v151 + *(int *)(v53 + 20));
  v117 = *v116;
  v118 = v116[1];
  v119 = (uint64_t *)(v151 + *(int *)(v53 + 24));
  v120 = v119[1];
  v141 = (uint8_t *)*v119;
  OUTLINED_FUNCTION_1();
  v121 = v113;
  v122 = v138;
  OUTLINED_FUNCTION_292_1(v121, v123, type metadata accessor for RecentsCallItemType);
  v124 = type metadata accessor for RecentsCallItemType(0);
  OUTLINED_FUNCTION_66_1(v122, 0, v125, v124);
  OUTLINED_FUNCTION_86();
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_25_2();
  v131 = v122;
  v126 = v139;
  v127 = OUTLINED_FUNCTION_272_2();
  RecentsCallItem.init(recentsCallMetadata:contacts:title:subtitle:forcedSubtitle:senderIdentity:occurrenceCount:applicationIcon:type:)(v127, v128, v117, v118, (uint64_t)v141, v120, 0, 0, 0, 0, 0, 0, 0, v131);
  OUTLINED_FUNCTION_105_2(v150);
  OUTLINED_FUNCTION_105_2(v115);
  OUTLINED_FUNCTION_181_3(v114);
  OUTLINED_FUNCTION_181_3(v146);
  OUTLINED_FUNCTION_181_3(v147);
  OUTLINED_FUNCTION_181_3(v144);
  OUTLINED_FUNCTION_25_0(v145);
  OUTLINED_FUNCTION_25_0((uint64_t)v148);
  v129 = OUTLINED_FUNCTION_77_2(v126);
  if ((_DWORD)v129)
  {
    OUTLINED_FUNCTION_219(v129, (uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
    v61 = 1;
    v62 = v152;
  }
  else
  {
    v62 = v152;
    OUTLINED_FUNCTION_655(v126, v130, type metadata accessor for RecentsCallItem);
    v61 = 0;
  }
LABEL_13:
  OUTLINED_FUNCTION_159_4(v60, type metadata accessor for RecentsCallItem);
  __swift_storeEnumTagSinglePayload(v62, v61, 1, v53);
  OUTLINED_FUNCTION_52_1();
}

uint64_t RecentsCallItem.hash(into:)()
{
  type metadata accessor for RecentsCallItem(0);
  OUTLINED_FUNCTION_8_8();
  String.hash(into:)();
  return OUTLINED_FUNCTION_149_4();
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance RecentsCallItem()
{
  OUTLINED_FUNCTION_8_23();
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_257_3();
  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_4_6();
  OUTLINED_FUNCTION_2();
}

uint64_t static RecentsCallItem.VideoMessageError.== infix(_:_:)()
{
  return 1;
}

void RecentsCallItem.VideoMessageError.hash(into:)()
{
  Hasher._combine(_:)(0);
  OUTLINED_FUNCTION_0();
}

void RecentsCallItem.VideoMessageError.hashValue.getter()
{
  OUTLINED_FUNCTION_5_1();
  Hasher._combine(_:)(0);
  OUTLINED_FUNCTION_4_6();
  OUTLINED_FUNCTION_2();
}

uint64_t closure #1 in RecentsCallItem.saveVideoMessage(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[4] = a6;
  v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  return swift_task_switch();
}

uint64_t closure #1 in RecentsCallItem.saveVideoMessage(_:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[3];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UUID>);
  v2 = *(_QWORD *)(OUTLINED_FUNCTION_33_0() - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = swift_allocObject();
  v0[6] = v4;
  *(_OWORD *)(v4 + 16) = xmmword_1BD6441D0;
  OUTLINED_FUNCTION_8_7(v4 + v3, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
  v5 = (_QWORD *)swift_task_alloc();
  v0[7] = v5;
  *v5 = v0;
  v5[1] = closure #1 in RecentsCallItem.saveVideoMessage(_:);
  return MessageStoreController.saveMessagesToPhotoLibrary(messageUUIDs:)();
}

{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_2_8();
}

{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t, uint64_t);

  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v0[4]);
  v1 = (_QWORD *)OUTLINED_FUNCTION_19_13();
  v0[9] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = closure #1 in RecentsCallItem.saveVideoMessage(_:);
  return v3(v0[4], v0[5]);
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_18_55();
  OUTLINED_FUNCTION_1_6();
  return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v0 + 8));
}

{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  id v3;
  _QWORD *v4;
  uint64_t (*v6)(_QWORD, _QWORD, _QWORD);

  v1 = (void *)v0[8];
  swift_bridgeObjectRelease();
  v2 = OUTLINED_FUNCTION_124_0();
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v2);
  v3 = v1;
  v4 = (_QWORD *)OUTLINED_FUNCTION_19_13();
  v0[10] = v4;
  *v4 = v0;
  v4[1] = closure #1 in RecentsCallItem.saveVideoMessage(_:);
  return v6(v0[4], v0[5], v0[8]);
}

{
  OUTLINED_FUNCTION_18_55();
  OUTLINED_FUNCTION_1_6();
  OUTLINED_FUNCTION_2_14();
  return swift_task_switch();
}

{
  uint64_t v0;

  return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v0 + 8));
}

void RecentsCallItem.includeOriginalIfCombined(after:)()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = OUTLINED_FUNCTION_33();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_11_2();
  RecentsCallItem.sectionDate.getter();
  OUTLINED_FUNCTION_69_0((uint64_t)v2, 1, v3);
  if (v5)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v2, (uint64_t *)&demangling cache variable for type metadata for Date?);
  }
  else
  {
    v6 = OUTLINED_FUNCTION_49_16();
    OUTLINED_FUNCTION_8_7(v6, v7, v8);
    static Date.> infix(_:_:)();
    OUTLINED_FUNCTION_54_27(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  }
  OUTLINED_FUNCTION_91();
}

void RecentsCallItem.shouldDisplayStagingAreaForOngoingCall()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  char *v5;
  uint64_t v6;

  v1 = type metadata accessor for RecentOngoingConversationMetadata(0);
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for RecentsCallItemType(0);
  MEMORY[0x1E0C80A78](v2);
  outlined init with copy of ConversationControlsAppLaunchButtonType(v0, (uint64_t)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v5 = (char *)sub_1BD38B208 + 4 * byte_1BD65ABD8[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BD38B208()
{
  uint64_t v0;

  outlined destroy of RecentsCallItem(v0, type metadata accessor for RecentsCallItemType);
  return 0;
}

void sub_1BD38B254()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  outlined init with take of StagedCollaboration(v2, v0, type metadata accessor for RecentOngoingConversationMetadata);
  objc_msgSend(*(id *)(v0 + *(int *)(v1 + 24)), sel_resolvedAudioVideoMode);
  outlined destroy of RecentsCallItem(v0, type metadata accessor for RecentOngoingConversationMetadata);
  JUMPOUT(0x1BD38B238);
}

id @nonobjc TPMessageIndicatorViewModel.init(duration:identifier:mediaURL:thumbnailURL:isRead:isSensitive:isVideo:from:)(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char a7, char a8, void *a9)
{
  void *v9;
  void *v10;
  void *v18;
  uint64_t v19;
  NSURL *v20;
  void *v21;
  void *v22;
  NSURL *v23;
  void *v24;
  void *v25;
  id v26;

  v10 = v9;
  if (a3)
  {
    v18 = (void *)MEMORY[0x1C3B72E00]();
    swift_bridgeObjectRelease();
  }
  else
  {
    v18 = 0;
  }
  v19 = type metadata accessor for URL();
  v21 = 0;
  if (__swift_getEnumTagSinglePayload(a4, 1, v19) != 1)
  {
    URL._bridgeToObjectiveC()(v20);
    v21 = v22;
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(a4, v19);
  }
  if (__swift_getEnumTagSinglePayload(a5, 1, v19) == 1)
  {
    v24 = 0;
  }
  else
  {
    URL._bridgeToObjectiveC()(v23);
    v24 = v25;
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(a5, v19);
  }
  v26 = objc_msgSend(v10, sel_initWithDuration_identifier_mediaURL_thumbnailURL_isRead_isSensitive_isVideo_fromHandle_, v18, v21, v24, a6 & 1, a7 & 1, a8 & 1, a1, a9);

  return v26;
}

Swift::Int specialized Set._Variant.filter(_:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  unint64_t v17;
  Swift::Int result;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;

  if ((a1 & 0xC000000000000001) == 0)
    return specialized _NativeSet.filter(_:)(a1, a2);
  v3 = MEMORY[0x1E0DEE9E8];
  v29 = MEMORY[0x1E0DEE9E8];
  __CocoaSet.makeIterator()();
  if (!__CocoaSet.Iterator.next()())
  {
LABEL_24:
    swift_release();
    return v3;
  }
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
  while (1)
  {
    swift_dynamicCast();
    v4 = *a2;
    swift_bridgeObjectRetain();
    v5 = objc_msgSend(v28, sel_value);
    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v8 = v7;

    specialized Set.contains(_:)(v6, v8, v4);
    LOBYTE(v5) = v9;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v5 & 1) == 0)
    {
      v10 = *a2;
      swift_bridgeObjectRetain();
      v11 = outlined bridged method (pb) of @objc TUHandle.normalizedValue.getter(v28);
      if (v12)
      {
        v13 = v12;
      }
      else
      {
        v11 = 0;
        v13 = 0xE000000000000000;
      }
      specialized Set.contains(_:)(v11, v13, v10);
      v15 = v14;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v15 & 1) == 0)
        break;
    }

LABEL_22:
    if (!__CocoaSet.Iterator.next()())
    {
      v3 = v29;
      goto LABEL_24;
    }
  }
  v16 = v29;
  v17 = *(_QWORD *)(v29 + 16);
  if (*(_QWORD *)(v29 + 24) <= v17)
  {
    specialized _NativeSet.resize(capacity:)(v17 + 1);
    v16 = v29;
  }
  result = NSObject._rawHashValue(seed:)(*(_QWORD *)(v16 + 40));
  v19 = v16 + 56;
  v20 = -1 << *(_BYTE *)(v16 + 32);
  v21 = result & ~v20;
  v22 = v21 >> 6;
  if (((-1 << v21) & ~*(_QWORD *)(v16 + 56 + 8 * (v21 >> 6))) != 0)
  {
    v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v16 + 56 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_21:
    *(_QWORD *)(v19 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    *(_QWORD *)(*(_QWORD *)(v16 + 48) + 8 * v23) = v28;
    ++*(_QWORD *)(v16 + 16);
    goto LABEL_22;
  }
  v24 = 0;
  v25 = (unint64_t)(63 - v20) >> 6;
  while (++v22 != v25 || (v24 & 1) == 0)
  {
    v26 = v22 == v25;
    if (v22 == v25)
      v22 = 0;
    v24 |= v26;
    v27 = *(_QWORD *)(v19 + 8 * v22);
    if (v27 != -1)
    {
      v23 = __clz(__rbit64(~v27)) + (v22 << 6);
      goto LABEL_21;
    }
  }
  __break(1u);
  return result;
}

uint64_t specialized _NativeSet.filter(_:)(uint64_t isStackAllocationSafe, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  char v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  _QWORD v13[2];

  v4 = isStackAllocationSafe;
  v13[1] = *MEMORY[0x1E0C80C00];
  v5 = *(_BYTE *)(isStackAllocationSafe + 32);
  v6 = (unint64_t)((1 << v5) + 63) >> 6;
  if ((v5 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    v7 = (_QWORD *)((char *)v13 - ((8 * v6 + 15) & 0x3FFFFFFFFFFFFFF0));
    specialized UnsafeMutablePointer.assign(repeating:count:)(0, v6, v7);
    specialized closure #1 in _NativeSet.filter(_:)(v7, v6, v4, a2);
    v9 = v8;
    swift_release();
    if (v2)
      swift_willThrow();
  }
  else
  {
    v10 = (uint64_t *)swift_slowAlloc();
    specialized UnsafeMutablePointer.assign(repeating:count:)(0, v6, v10);
    specialized closure #1 in _NativeSet.filter(_:)(v10, v6, v4, a2);
    v9 = v11;
    swift_release();
    MEMORY[0x1C3B751B8](v10, -1, -1);
  }
  return v9;
}

void specialized closure #1 in _NativeSet.filter(_:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;

  v5 = 0;
  v6 = 0;
  v9 = *(_QWORD *)(a3 + 56);
  v7 = a3 + 56;
  v8 = v9;
  v10 = 1 << *(_BYTE *)(v7 - 24);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & v8;
  v34 = v7;
  v35 = (unint64_t)(v10 + 63) >> 6;
LABEL_4:
  v33 = v5;
  while (v12)
  {
    v13 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    v14 = v13 | (v6 << 6);
LABEL_18:
    v18 = *a4;
    v19 = *(id *)(*(_QWORD *)(a3 + 48) + 8 * v14);
    swift_bridgeObjectRetain();
    v20 = objc_msgSend(v19, sel_value);
    v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v23 = v22;

    specialized Set.contains(_:)(v21, v23, v18);
    LOBYTE(v21) = v24;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v21 & 1) != 0)
    {

    }
    else
    {
      v25 = *a4;
      swift_bridgeObjectRetain();
      v26 = outlined bridged method (pb) of @objc TUHandle.normalizedValue.getter(v19);
      if (v27)
      {
        v28 = v27;
      }
      else
      {
        v26 = 0;
        v28 = 0xE000000000000000;
      }
      specialized Set.contains(_:)(v26, v28, v25);
      v30 = v29;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v30 & 1) == 0)
      {
        *(uint64_t *)((char *)a1 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
        v5 = v33 + 1;
        if (!__OFADD__(v33, 1))
          goto LABEL_4;
        __break(1u);
LABEL_32:
        swift_retain();
        specialized _NativeSet.extractSubset(using:count:)(a1, a2, v33, a3);
        return;
      }
    }
  }
  if (__OFADD__(v6++, 1))
  {
    __break(1u);
    goto LABEL_34;
  }
  if (v6 >= v35)
    goto LABEL_32;
  v16 = *(_QWORD *)(v34 + 8 * v6);
  if (v16)
  {
LABEL_17:
    v12 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v6 << 6);
    goto LABEL_18;
  }
  v17 = v6 + 1;
  if (v6 + 1 >= v35)
    goto LABEL_32;
  v16 = *(_QWORD *)(v34 + 8 * v17);
  if (v16)
    goto LABEL_16;
  v17 = v6 + 2;
  if (v6 + 2 >= v35)
    goto LABEL_32;
  v16 = *(_QWORD *)(v34 + 8 * v17);
  if (v16)
    goto LABEL_16;
  v17 = v6 + 3;
  if (v6 + 3 >= v35)
    goto LABEL_32;
  v16 = *(_QWORD *)(v34 + 8 * v17);
  if (v16)
  {
LABEL_16:
    v6 = v17;
    goto LABEL_17;
  }
  while (1)
  {
    v6 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v6 >= v35)
      goto LABEL_32;
    v16 = *(_QWORD *)(v34 + 8 * v6);
    ++v17;
    if (v16)
      goto LABEL_17;
  }
LABEL_34:
  __break(1u);
}

#error "1BD38BBBC: call analysis failed (funcsize=88)"

#error "1BD38BF30: call analysis failed (funcsize=88)"

#error "1BD38C088: call analysis failed (funcsize=78)"

uint64_t specialized Set._Variant.insert(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  Swift::Int v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;

  v3 = v2;
  v6 = type metadata accessor for ConversationControlsAction();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v2;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  ConversationControlsAction.hash(into:)();
  v11 = Hasher._finalize()();
  v12 = -1 << *(_BYTE *)(v10 + 32);
  v13 = v11 & ~v12;
  if (((*(_QWORD *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    v21 = v2;
    v22 = a1;
    v14 = ~v12;
    v15 = *(_QWORD *)(v7 + 72);
    while (1)
    {
      outlined init with copy of ConversationControlsAppLaunchButtonType(*(_QWORD *)(v10 + 48) + v15 * v13, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsAction);
      static ConversationControlsAction.== infix(_:_:)();
      v17 = v16;
      outlined destroy of RecentsCallItem((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsAction);
      if ((v17 & 1) != 0)
        break;
      v13 = (v13 + 1) & v14;
      if (((*(_QWORD *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v21;
        a1 = v22;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    outlined destroy of RecentsCallItem(a2, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsAction);
    outlined init with copy of ConversationControlsAppLaunchButtonType(*(_QWORD *)(*v21 + 48) + v15 * v13, v22, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsAction);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    outlined init with copy of ConversationControlsAppLaunchButtonType(a2, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsAction);
    v23 = *v3;
    *v3 = 0x8000000000000000;
    specialized _NativeSet.insertNew(_:at:isUnique:)((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *v3 = v23;
    swift_bridgeObjectRelease();
    outlined init with take of StagedCollaboration(a2, a1, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsAction);
    return 1;
  }
}

#error "1BD38C3D8: call analysis failed (funcsize=88)"

uint64_t specialized Set._Variant.insert(_:)(uint64_t a1, unsigned __int8 a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v9;
  Swift::Int v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  uint64_t v16;
  BOOL v17;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v9 = *v4;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a2);
  if (a4)
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    String.hash(into:)();
  }
  else
  {
    Hasher._combine(_:)(0);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  v10 = Hasher._finalize()();
  v11 = -1 << *(_BYTE *)(v9 + 32);
  v12 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v23 = *v4;
    *v4 = 0x8000000000000000;
    swift_bridgeObjectRetain();
    specialized _NativeSet.insertNew(_:at:isUnique:)(a2, a3, a4, v12, isUniquelyReferenced_nonNull_native);
    *v4 = v23;
    swift_bridgeObjectRelease();
    *(_BYTE *)a1 = a2;
    result = 1;
    *(_QWORD *)(a1 + 8) = a3;
    *(_QWORD *)(a1 + 16) = a4;
    return result;
  }
  v13 = ~v11;
  v14 = *(_QWORD *)(v9 + 48);
  while (1)
  {
    v15 = (unsigned __int8 *)(v14 + 24 * v12);
    if (*v15 != a2)
      goto LABEL_16;
    v16 = *((_QWORD *)v15 + 2);
    if (v16)
      break;
    if (!a4)
      goto LABEL_18;
LABEL_16:
    v12 = (v12 + 1) & v13;
    if (((*(_QWORD *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      goto LABEL_17;
  }
  if (!a4)
    goto LABEL_16;
  v17 = *((_QWORD *)v15 + 1) == a3 && v16 == a4;
  if (!v17 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    goto LABEL_16;
LABEL_18:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v20 = *(_QWORD *)(*v4 + 48) + 24 * v12;
  v22 = *(_QWORD *)(v20 + 8);
  v21 = *(_QWORD *)(v20 + 16);
  *(_BYTE *)a1 = *(_BYTE *)v20;
  *(_QWORD *)(a1 + 8) = v22;
  *(_QWORD *)(a1 + 16) = v21;
  swift_bridgeObjectRetain();
  return 0;
}

#error "1BD38CC24: call analysis failed (funcsize=88)"

#error "1BD38CD98: call analysis failed (funcsize=88)"

uint64_t specialized Set._Variant.insert(_:)(_QWORD *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  Swift::Int v10;
  Swift::Int v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  void *v19;
  id v20;
  uint64_t result;
  Swift::Int v22;
  unint64_t v23;
  Swift::Int v24;
  id v25;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v27;
  id v28;
  uint64_t v29;
  Swift::Int v30;
  uint64_t v31;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v9 = __CocoaSet.member(for:)();

    if (v9)
    {
      swift_bridgeObjectRelease();

      type metadata accessor for NSObject(0, &lazy cache variable for type metadata for TUConversationInvitationPreference);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v29;
      swift_unknownObjectRelease();
      return 0;
    }
    result = __CocoaSet.count.getter();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v22 = specialized _NativeSet.init(_:capacity:)(v7, result + 1, &demangling cache variable for type metadata for _SetStorage<TUConversationInvitationPreference>, &lazy cache variable for type metadata for TUConversationInvitationPreference, 0x1E0DBD288, (void (*)(unint64_t))specialized _NativeSet.resize(capacity:));
    v30 = v22;
    v23 = *(_QWORD *)(v22 + 16);
    if (*(_QWORD *)(v22 + 24) <= v23)
    {
      v27 = v23 + 1;
      v28 = v8;
      specialized _NativeSet.resize(capacity:)(v27);
      v24 = v30;
    }
    else
    {
      v24 = v22;
      v25 = v8;
    }
    specialized _NativeSet._unsafeInsertNew(_:)(v8, v24);
    *v3 = v24;
  }
  else
  {
    v10 = *(_QWORD *)(v6 + 40);
    swift_bridgeObjectRetain();
    v11 = NSObject._rawHashValue(seed:)(v10);
    v12 = -1 << *(_BYTE *)(v6 + 32);
    v13 = v11 & ~v12;
    if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
    {
      type metadata accessor for NSObject(0, &lazy cache variable for type metadata for TUConversationInvitationPreference);
      v14 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
      v15 = static NSObject.== infix(_:_:)();

      if ((v15 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v19 = *(void **)(*(_QWORD *)(*v3 + 48) + 8 * v13);
        *a1 = v19;
        v20 = v19;
        return 0;
      }
      v16 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
        v18 = static NSObject.== infix(_:_:)();

        if ((v18 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v31 = *v3;
    *v3 = 0x8000000000000000;
    v8 = a2;
    specialized _NativeSet.insertNew(_:at:isUnique:)((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *v3 = v31;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t specialized Set._Variant.insert(_:)(unsigned __int8 *a1, unsigned __int8 a2)
{
  uint64_t *v2;
  unint64_t v3;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t result;
  uint64_t v11;
  char v12;
  uint64_t v13;

  v6 = *v2;
  OUTLINED_FUNCTION_8_23();
  Hasher._combine(_:)(a2);
  OUTLINED_FUNCTION_4_6();
  OUTLINED_FUNCTION_124_7();
  if ((v7 & 1) == 0)
  {
LABEL_6:
    OUTLINED_FUNCTION_216_3();
    OUTLINED_FUNCTION_89_17();
    specialized _NativeSet.insertNew(_:at:isUnique:)(a2, v3, v12);
    OUTLINED_FUNCTION_113_10(v13);
    result = 1;
    goto LABEL_7;
  }
  if (*(unsigned __int8 *)(*(_QWORD *)(v6 + 48) + v3) != a2)
  {
    do
    {
      OUTLINED_FUNCTION_90_13();
      if ((v9 & 1) == 0)
        goto LABEL_6;
    }
    while (*(unsigned __int8 *)(v8 + v3) != a2);
  }
  result = OUTLINED_FUNCTION_269_4();
  a2 = *(_BYTE *)(v11 + v3);
LABEL_7:
  *a1 = a2;
  return result;
}

uint64_t specialized Set._Variant.insert(_:)(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = v2;
  v6 = *v2;
  v7 = static Hasher._hash(seed:_:)();
  v8 = -1 << *(_BYTE *)(v6 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v19 = *v3;
    *v3 = 0x8000000000000000;
    specialized _NativeSet.insertNew(_:at:isUnique:)(a2, v9, isUniquelyReferenced_nonNull_native, v14, v15, v16, v17, v18);
    *v3 = v19;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_8;
  }
  v10 = *(_QWORD *)(v6 + 48);
  if (*(_QWORD *)(v10 + 8 * v9) != a2)
  {
    v11 = ~v8;
    do
    {
      v9 = (v9 + 1) & v11;
      if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_7;
    }
    while (*(_QWORD *)(v10 + 8 * v9) != a2);
  }
  result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t specialized Set._Variant.insert(_:)(char *a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  char v18;
  char v19;
  uint64_t result;
  uint64_t v21;
  char *v22;
  uint64_t v23;

  v3 = v2;
  v6 = *v2;
  v7 = *(_QWORD *)(v6 + 40);
  OUTLINED_FUNCTION_5_0();
  specialized RawRepresentable<>._rawHashValue(seed:)(v7, a2);
  v8 = -1 << *(_BYTE *)(v6 + 32);
  v10 = v9 & ~v8;
  v22 = a1;
  if (((*(_QWORD *)(v6 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v8;
    while (1)
    {
      v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v14 = v13;
      if (v12 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v14 == v15)
        break;
      OUTLINED_FUNCTION_261_2();
      v17 = OUTLINED_FUNCTION_13();
      OUTLINED_FUNCTION_30_4();
      OUTLINED_FUNCTION_21_0();
      if ((v17 & 1) != 0)
        goto LABEL_11;
      v10 = (v10 + 1) & v11;
      if (((*(_QWORD *)(v6 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        goto LABEL_9;
    }
    OUTLINED_FUNCTION_19_1();
LABEL_11:
    OUTLINED_FUNCTION_27();
    result = OUTLINED_FUNCTION_269_4();
    v19 = *(_BYTE *)(v21 + v10);
  }
  else
  {
LABEL_9:
    OUTLINED_FUNCTION_27();
    v18 = OUTLINED_FUNCTION_216_3();
    v23 = *v3;
    *v3 = 0x8000000000000000;
    v19 = a2;
    specialized _NativeSet.insertNew(_:at:isUnique:)(a2, v10, v18);
    OUTLINED_FUNCTION_113_10(v23);
    result = 1;
  }
  *v22 = v19;
  return result;
}

void specialized Set._Variant.insert(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  specialized Set._Variant.insert(_:)(a1, a2, (uint64_t)specialized _NativeSet.resize(capacity:), (uint64_t)&type metadata for TranscriptionViewModel.CaptionID, (uint64_t)&demangling cache variable for type metadata for _SetStorage<TranscriptionViewModel.CaptionID>, (uint64_t)specialized _NativeSet.copy(), a7, a8, a9, a10);
}

{
  specialized Set._Variant.insert(_:)(a1, a2, (uint64_t)specialized _NativeSet.resize(capacity:), (uint64_t)&type metadata for CaptionSectioner.CaptionID, (uint64_t)&demangling cache variable for type metadata for _SetStorage<CaptionSectioner.CaptionID>, (uint64_t)specialized _NativeSet.copy(), a7, a8, a9, a10);
}

{
  uint64_t *v10;
  Swift::UInt v11;
  Swift::UInt v12;
  Swift::UInt *v13;
  Swift::UInt *v14;
  uint64_t v15;
  Swift::Int v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  OUTLINED_FUNCTION_420();
  v12 = v11;
  v14 = v13;
  v15 = *v10;
  OUTLINED_FUNCTION_8_23();
  Hasher._combine(_:)(v12);
  v16 = OUTLINED_FUNCTION_4_6();
  v17 = -1 << *(_BYTE *)(v15 + 32);
  v18 = v16 & ~v17;
  if (((*(_QWORD *)(v15 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
  {
LABEL_7:
    OUTLINED_FUNCTION_216_3();
    OUTLINED_FUNCTION_89_17();
    specialized _NativeSet.insertNew(_:at:isUnique:)();
    OUTLINED_FUNCTION_113_10(a10);
    goto LABEL_8;
  }
  v19 = *(_QWORD *)(v15 + 48);
  if (*(_QWORD *)(v19 + 8 * v18) != v12)
  {
    v20 = ~v17;
    do
    {
      v18 = (v18 + 1) & v20;
      if (((*(_QWORD *)(v15 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
        goto LABEL_7;
    }
    while (*(_QWORD *)(v19 + 8 * v18) != v12);
  }
  OUTLINED_FUNCTION_269_4();
  v12 = *(_QWORD *)(v21 + 8 * v18);
LABEL_8:
  *v14 = v12;
  OUTLINED_FUNCTION_20_1();
}

void specialized Set._Variant.insert(_:)(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  unint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v5 = *v2;
  v6 = static Hasher._hash(seed:_:)() & ~(-1 << *(_BYTE *)(v5 + 32));
  if (((*(_QWORD *)(v5 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    OUTLINED_FUNCTION_331_2();
    if (v7)
      goto LABEL_8;
    while (1)
    {
      OUTLINED_FUNCTION_90_13();
      if ((v8 & 1) == 0)
        break;
      OUTLINED_FUNCTION_331_2();
      if (v7)
        goto LABEL_8;
    }
  }
  OUTLINED_FUNCTION_216_3();
  OUTLINED_FUNCTION_89_17();
  specialized _NativeSet.insertNew(_:at:isUnique:)(a2, v6, v9, v10, v11, v12, v13, v14);
  OUTLINED_FUNCTION_113_10(v15);
LABEL_8:
  *a1 = a2;
  OUTLINED_FUNCTION_49_0();
}

uint64_t specialized Set._Variant.insert(_:)(Swift::UInt *a1, Swift::UInt a2)
{
  uint64_t *v2;
  uint64_t v5;
  Swift::Int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;

  v5 = *v2;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a2);
  v6 = Hasher._finalize()();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v13 = *v2;
    *v2 = 0x8000000000000000;
    specialized _NativeSet.insertNew(_:at:isUnique:)(a2, v8, isUniquelyReferenced_nonNull_native);
    *v2 = v13;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_8;
  }
  v9 = *(_QWORD *)(v5 + 48);
  if (*(_QWORD *)(v9 + 8 * v8) != a2)
  {
    v10 = ~v7;
    do
    {
      v8 = (v8 + 1) & v10;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_7;
    }
    while (*(_QWORD *)(v9 + 8 * v8) != a2);
  }
  result = 0;
  a2 = *(_QWORD *)(*(_QWORD *)(*v2 + 48) + 8 * v8);
LABEL_8:
  *a1 = a2;
  return result;
}

Swift::Int specialized _NativeSet.init(_:capacity:)(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4, uint64_t a5, void (*a6)(unint64_t))
{
  uint64_t v8;
  unint64_t v9;
  Swift::Int result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  unint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  if (!a2)
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E8];
  }
  __swift_instantiateConcreteTypeFromMangledName(a3);
  OUTLINED_FUNCTION_114();
  v8 = static _SetStorage.convert(_:capacity:)();
  v21 = v8;
  __CocoaSet.makeIterator()();
  if (!__CocoaSet.Iterator.next()())
  {
LABEL_16:
    OUTLINED_FUNCTION_11_0();
    return v8;
  }
  type metadata accessor for NSObject(0, a4);
  while (1)
  {
    swift_dynamicCast();
    v8 = v21;
    v9 = *(_QWORD *)(v21 + 16);
    if (*(_QWORD *)(v21 + 24) <= v9)
    {
      a6(v9 + 1);
      v8 = v21;
    }
    result = NSObject._rawHashValue(seed:)(*(_QWORD *)(v8 + 40));
    v11 = v8 + 56;
    v12 = -1 << *(_BYTE *)(v8 + 32);
    v13 = result & ~v12;
    v14 = v13 >> 6;
    if (((-1 << v13) & ~*(_QWORD *)(v8 + 56 + 8 * (v13 >> 6))) == 0)
      break;
    v15 = __clz(__rbit64((-1 << v13) & ~*(_QWORD *)(v8 + 56 + 8 * (v13 >> 6)))) | v13 & 0x7FFFFFFFFFFFFFC0;
LABEL_15:
    *(_QWORD *)(v11 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v15) = v20;
    ++*(_QWORD *)(v8 + 16);
    if (!__CocoaSet.Iterator.next()())
      goto LABEL_16;
  }
  v16 = 0;
  v17 = (unint64_t)(63 - v12) >> 6;
  while (++v14 != v17 || (v16 & 1) == 0)
  {
    v18 = v14 == v17;
    if (v14 == v17)
      v14 = 0;
    v16 |= v18;
    v19 = *(_QWORD *)(v11 + 8 * v14);
    if (v19 != -1)
    {
      v15 = __clz(__rbit64(~v19)) + (v14 << 6);
      goto LABEL_15;
    }
  }
  __break(1u);
  return result;
}

Swift::Int specialized _NativeSet.init(_:capacity:)(uint64_t a1, uint64_t a2)
{
  return specialized _NativeSet.init(_:capacity:)(a1, a2, &demangling cache variable for type metadata for _SetStorage<CNComposeRecipient>, (unint64_t *)&lazy cache variable for type metadata for CNComposeRecipient, 0x1E0D13688, (void (*)(unint64_t))specialized _NativeSet.resize(capacity:));
}

uint64_t specialized _NativeSet.insertNew(_:at:isUnique:)(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;

  v26 = a1;
  v6 = type metadata accessor for UUID();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v25 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    specialized _NativeSet.resize(capacity:)();
  }
  else
  {
    if (v11 > v10)
    {
      specialized _NativeSet.copy()();
      goto LABEL_12;
    }
    specialized _NativeSet.copyAndResize(capacity:)();
  }
  v12 = *v3;
  _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  v13 = dispatch thunk of Hashable._rawHashValue(seed:)();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a2 = v13 & ~v14;
  if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v15 = ~v14;
    v16 = *(_QWORD *)(v7 + 72);
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v17(v9, *(_QWORD *)(v12 + 48) + v16 * a2, v6);
      _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
      v18 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v18 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v15;
    }
    while (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v19 = v26;
  v20 = *v25;
  *(_QWORD *)(*v25 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v20 + 48) + *(_QWORD *)(v7 + 72) * a2, v19, v6);
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (!v23)
  {
    *(_QWORD *)(v20 + 16) = v24;
    return result;
  }
  __break(1u);
LABEL_15:
  result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

void specialized _NativeSet.insertNew(_:at:isUnique:)(uint64_t a1, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v18;
  _QWORD *v19;
  BOOL v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v5 = v4;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    specialized _NativeSet.resize(capacity:)(v9 + 1);
  }
  else
  {
    if (v10 > v9)
    {
      specialized _NativeSet.copy()();
      goto LABEL_22;
    }
    specialized _NativeSet.copyAndResize(capacity:)();
  }
  v11 = *v4;
  Hasher.init(_seed:)();
  String.hash(into:)();
  v12 = Hasher._finalize()();
  v13 = -1 << *(_BYTE *)(v11 + 32);
  a3 = v12 & ~v13;
  v14 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v15 = *(_QWORD *)(v11 + 48);
    v16 = (_QWORD *)(v15 + 16 * a3);
    v17 = *v16 == a1 && v16[1] == a2;
    if (v17 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
LABEL_21:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      v18 = ~v13;
      while (1)
      {
        a3 = (a3 + 1) & v18;
        if (((*(_QWORD *)(v14 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v19 = (_QWORD *)(v15 + 16 * a3);
        v20 = *v19 == a1 && v19[1] == a2;
        if (v20 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          goto LABEL_21;
      }
    }
  }
LABEL_22:
  v21 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v22 = (_QWORD *)(*(_QWORD *)(v21 + 48) + 16 * a3);
  *v22 = a1;
  v22[1] = a2;
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (v24)
    __break(1u);
  else
    *(_QWORD *)(v21 + 16) = v25;
}

void specialized _NativeSet.insertNew(_:at:isUnique:)(unsigned __int8 a1, uint64_t a2, uint64_t a3, unint64_t a4, char a5)
{
  uint64_t *v5;
  uint64_t *v6;
  Swift::UInt v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  Swift::Int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v6 = v5;
  v10 = a1;
  v11 = *(_QWORD *)(*v5 + 16);
  v12 = *(_QWORD *)(*v5 + 24);
  if (v12 <= v11 || (a5 & 1) == 0)
  {
    if ((a5 & 1) != 0)
    {
      specialized _NativeSet.resize(capacity:)();
    }
    else
    {
      if (v12 > v11)
      {
        specialized _NativeSet.copy()();
        goto LABEL_24;
      }
      specialized _NativeSet.copyAndResize(capacity:)();
    }
    v13 = *v5;
    Hasher.init(_seed:)();
    Hasher._combine(_:)(v10);
    if (a3)
    {
      Hasher._combine(_:)(1u);
      swift_bridgeObjectRetain();
      String.hash(into:)();
    }
    else
    {
      Hasher._combine(_:)(0);
    }
    swift_bridgeObjectRelease();
    v14 = Hasher._finalize()();
    v15 = -1 << *(_BYTE *)(v13 + 32);
    a4 = v14 & ~v15;
    v16 = v13 + 56;
    if (((*(_QWORD *)(v13 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFF8)) >> a4) & 1) != 0)
    {
      v17 = ~v15;
      v18 = *(_QWORD *)(v13 + 48);
      do
      {
        v19 = (unsigned __int8 *)(v18 + 24 * a4);
        if (*v19 == (_DWORD)v10)
        {
          v20 = *((_QWORD *)v19 + 2);
          if (v20)
          {
            if (a3)
            {
              v21 = *((_QWORD *)v19 + 1) == a2 && v20 == a3;
              if (v21 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
                goto LABEL_27;
            }
          }
          else if (!a3)
          {
            goto LABEL_27;
          }
        }
        a4 = (a4 + 1) & v17;
      }
      while (((*(_QWORD *)(v16 + ((a4 >> 3) & 0xFFFFFFFFFFFFF8)) >> a4) & 1) != 0);
    }
  }
LABEL_24:
  v22 = *v6;
  *(_QWORD *)(*v6 + 8 * (a4 >> 6) + 56) |= 1 << a4;
  v23 = *(_QWORD *)(v22 + 48) + 24 * a4;
  *(_BYTE *)v23 = v10;
  *(_QWORD *)(v23 + 8) = a2;
  *(_QWORD *)(v23 + 16) = a3;
  v24 = *(_QWORD *)(v22 + 16);
  v25 = __OFADD__(v24, 1);
  v26 = v24 + 1;
  if (v25)
  {
    __break(1u);
LABEL_27:
    ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v22 + 16) = v26;
  }
}

void specialized _NativeSet.insertNew(_:at:isUnique:)(unsigned __int8 a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  Swift::UInt v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  Swift::Int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  v5 = a1;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    specialized _NativeSet.resize(capacity:)(v6 + 1);
  }
  else
  {
    if (v7 > v6)
    {
      specialized _NativeSet.copy()();
      goto LABEL_14;
    }
    specialized _NativeSet.copyAndResize(capacity:)();
  }
  v8 = *v3;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v5);
  v9 = Hasher._finalize()();
  v10 = -1 << *(_BYTE *)(v8 + 32);
  a2 = v9 & ~v10;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v11 = *(_QWORD *)(v8 + 48);
    if (*(unsigned __int8 *)(v11 + a2) == (_DWORD)v5)
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      v12 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v12;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(unsigned __int8 *)(v11 + a2) == (_DWORD)v5)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v13 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v13 + 48) + a2) = v5;
  v14 = *(_QWORD *)(v13 + 16);
  v15 = __OFADD__(v14, 1);
  v16 = v14 + 1;
  if (v15)
    __break(1u);
  else
    *(_QWORD *)(v13 + 16) = v16;
}

void specialized _NativeSet.insertNew(_:at:isUnique:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t *v8;
  unint64_t v9;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;

  v9 = a2;
  v11 = *(_QWORD *)(*v8 + 16);
  v12 = *(_QWORD *)(*v8 + 24);
  if (v12 > v11 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    specialized _NativeSet.resize(capacity:)(v11 + 1, a2, a3, a4, a5, a6, a7, a8, v22, v23, v24, v25);
  }
  else
  {
    if (v12 > v11)
    {
      specialized _NativeSet.copy()();
      goto LABEL_14;
    }
    specialized _NativeSet.copyAndResize(capacity:)();
  }
  v13 = *v8;
  v14 = static Hasher._hash(seed:_:)();
  v15 = -1 << *(_BYTE *)(v13 + 32);
  v9 = v14 & ~v15;
  if (((*(_QWORD *)(v13 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0)
  {
    v16 = *(_QWORD *)(v13 + 48);
    if (*(_QWORD *)(v16 + 8 * v9) == a1)
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      v17 = ~v15;
      while (1)
      {
        v9 = (v9 + 1) & v17;
        if (((*(_QWORD *)(v13 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
          break;
        if (*(_QWORD *)(v16 + 8 * v9) == a1)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v18 = *v8;
  *(_QWORD *)(*v8 + 8 * (v9 >> 6) + 56) |= 1 << v9;
  *(_QWORD *)(*(_QWORD *)(v18 + 48) + 8 * v9) = a1;
  v19 = *(_QWORD *)(v18 + 16);
  v20 = __OFADD__(v19, 1);
  v21 = v19 + 1;
  if (v20)
    __break(1u);
  else
    *(_QWORD *)(v18 + 16) = v21;
}

{
  uint64_t *v8;
  unint64_t v9;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;

  v9 = a2;
  v11 = *(_QWORD *)(*v8 + 16);
  v12 = *(_QWORD *)(*v8 + 24);
  if (v12 > v11 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    specialized _NativeSet.resize(capacity:)(v11 + 1, a2, a3, a4, a5, a6, a7, a8, v22, v23, v24, v25);
  }
  else
  {
    if (v12 > v11)
    {
      specialized _NativeSet.copy()();
      goto LABEL_14;
    }
    specialized _NativeSet.copyAndResize(capacity:)();
  }
  v13 = *v8;
  v14 = static Hasher._hash(seed:_:)();
  v15 = -1 << *(_BYTE *)(v13 + 32);
  v9 = v14 & ~v15;
  if (((*(_QWORD *)(v13 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0)
  {
    v16 = *(_QWORD *)(v13 + 48);
    if (*(_QWORD *)(v16 + 8 * v9) == a1)
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      v17 = ~v15;
      while (1)
      {
        v9 = (v9 + 1) & v17;
        if (((*(_QWORD *)(v13 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
          break;
        if (*(_QWORD *)(v16 + 8 * v9) == a1)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v18 = *v8;
  *(_QWORD *)(*v8 + 8 * (v9 >> 6) + 56) |= 1 << v9;
  *(_QWORD *)(*(_QWORD *)(v18 + 48) + 8 * v9) = a1;
  v19 = *(_QWORD *)(v18 + 16);
  v20 = __OFADD__(v19, 1);
  v21 = v19 + 1;
  if (v20)
    __break(1u);
  else
    *(_QWORD *)(v18 + 16) = v21;
}

void specialized _NativeSet.insertNew(_:at:isUnique:)(char a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_16;
  if ((a3 & 1) != 0)
  {
    specialized _NativeSet.resize(capacity:)(v6 + 1);
  }
  else
  {
    if (v7 > v6)
    {
      specialized _NativeSet.copy()();
      goto LABEL_16;
    }
    specialized _NativeSet.copyAndResize(capacity:)();
  }
  v8 = *v3;
  specialized RawRepresentable<>._rawHashValue(seed:)(*(_QWORD *)(*v3 + 40), a1);
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = v10 & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v11 = ~v9;
    do
    {
      v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v14 = v13;
      if (v12 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v14 == v15)
        goto LABEL_19;
      v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v17 & 1) != 0)
        goto LABEL_20;
      a2 = (a2 + 1) & v11;
    }
    while (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_16:
  v18 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v18 + 48) + a2) = a1;
  v19 = *(_QWORD *)(v18 + 16);
  v20 = __OFADD__(v19, 1);
  v21 = v19 + 1;
  if (!v20)
  {
    *(_QWORD *)(v18 + 16) = v21;
    return;
  }
  __break(1u);
LABEL_19:
  swift_bridgeObjectRelease_n();
LABEL_20:
  ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
}

void specialized _NativeSet.insertNew(_:at:isUnique:)()
{
  Swift::UInt v0;
  uint64_t *v1;
  unint64_t v2;
  char v3;
  void (*v4)(unint64_t);
  void (*v5)(unint64_t);
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  OUTLINED_FUNCTION_341_1();
  v6 = *(_QWORD *)(*v1 + 16);
  v7 = *(_QWORD *)(*v1 + 24);
  if (v7 > v6 && (v3 & 1) != 0)
    goto LABEL_14;
  v8 = v6 + 1;
  if ((v3 & 1) != 0)
  {
    v4(v8);
  }
  else
  {
    if (v7 > v6)
    {
      v5(v8);
      goto LABEL_14;
    }
    specialized _NativeSet.copyAndResize(capacity:)();
  }
  OUTLINED_FUNCTION_8_23();
  Hasher._combine(_:)(v0);
  OUTLINED_FUNCTION_4_6();
  OUTLINED_FUNCTION_124_7();
  if ((v9 & 1) != 0)
  {
    OUTLINED_FUNCTION_331_2();
    if (v10)
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      while (1)
      {
        OUTLINED_FUNCTION_90_13();
        if ((v11 & 1) == 0)
          break;
        OUTLINED_FUNCTION_331_2();
        if (v10)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v12 = *v1;
  *(_QWORD *)(*v1 + 8 * (v2 >> 6) + 56) |= 1 << v2;
  *(_QWORD *)(*(_QWORD *)(v12 + 48) + 8 * v2) = v0;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    *(_QWORD *)(v12 + 16) = v15;
}

void specialized _NativeSet.insertNew(_:at:isUnique:)(Swift::UInt a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  Swift::Int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    specialized _NativeSet.resize(capacity:)(v6 + 1);
  }
  else
  {
    if (v7 > v6)
    {
      specialized _NativeSet.copy()();
      goto LABEL_14;
    }
    specialized _NativeSet.copyAndResize(capacity:)();
  }
  v8 = *v3;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1);
  v9 = Hasher._finalize()();
  v10 = -1 << *(_BYTE *)(v8 + 32);
  a2 = v9 & ~v10;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v11 = *(_QWORD *)(v8 + 48);
    if (*(_QWORD *)(v11 + 8 * a2) == a1)
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      v12 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v12;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(_QWORD *)(v11 + 8 * a2) == a1)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v13 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v13 + 48) + 8 * a2) = a1;
  v14 = *(_QWORD *)(v13 + 16);
  v15 = __OFADD__(v14, 1);
  v16 = v14 + 1;
  if (v15)
    __break(1u);
  else
    *(_QWORD *)(v13 + 16) = v16;
}

uint64_t specialized _NativeSet.copyAndResize(capacity:)()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _SetStorage<String>);
  v3 = static _SetStorage.resize(original:capacity:move:)();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_34:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  if (!v8)
    goto LABEL_7;
LABEL_6:
  v12 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v12 | (v11 << 6); ; i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * i);
    v18 = *v17;
    v19 = v17[1];
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    result = Hasher._finalize()();
    v20 = -1 << *(_BYTE *)(v4 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6))) == 0)
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      while (++v22 != v25 || (v24 & 1) == 0)
      {
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v9 + 8 * v22);
        if (v27 != -1)
        {
          v23 = __clz(__rbit64(~v27)) + (v22 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    v28 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v23);
    *v28 = v18;
    v28[1] = v19;
    ++*(_QWORD *)(v4 + 16);
    if (v8)
      goto LABEL_6;
LABEL_7:
    v14 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_36;
    if (v14 >= v29)
      goto LABEL_32;
    v15 = *(_QWORD *)(v6 + 8 * v14);
    ++v11;
    if (!v15)
    {
      v11 = v14 + 1;
      if (v14 + 1 >= v29)
        goto LABEL_32;
      v15 = *(_QWORD *)(v6 + 8 * v11);
      if (!v15)
      {
        v11 = v14 + 2;
        if (v14 + 2 >= v29)
          goto LABEL_32;
        v15 = *(_QWORD *)(v6 + 8 * v11);
        if (!v15)
          break;
      }
    }
LABEL_20:
    v8 = (v15 - 1) & v15;
  }
  v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_32:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_34;
  }
  v15 = *(_QWORD *)(v6 + 8 * v16);
  if (v15)
  {
    v11 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    v11 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v11 >= v29)
      goto LABEL_32;
    v15 = *(_QWORD *)(v6 + 8 * v11);
    ++v16;
    if (v15)
      goto LABEL_20;
  }
LABEL_37:
  __break(1u);
  return result;
}

{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  Swift::UInt v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _SetStorage<BezelEffect>);
  result = static _SetStorage.resize(original:capacity:move:)();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_34:
    *v1 = v4;
    return result;
  }
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  if (!v9)
    goto LABEL_7;
LABEL_6:
  v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (i = v12 | (v5 << 6); ; i = __clz(__rbit64(v15)) + (v5 << 6))
  {
    v17 = *(unsigned __int8 *)(*(_QWORD *)(v2 + 48) + i);
    Hasher.init(_seed:)();
    Hasher._combine(_:)(v17);
    result = Hasher._finalize()();
    v18 = -1 << *(_BYTE *)(v4 + 32);
    v19 = result & ~v18;
    v20 = v19 >> 6;
    if (((-1 << v19) & ~*(_QWORD *)(v11 + 8 * (v19 >> 6))) == 0)
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v18) >> 6;
      while (++v20 != v23 || (v22 & 1) == 0)
      {
        v24 = v20 == v23;
        if (v20 == v23)
          v20 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v20);
        if (v25 != -1)
        {
          v21 = __clz(__rbit64(~v25)) + (v20 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    v21 = __clz(__rbit64((-1 << v19) & ~*(_QWORD *)(v11 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v11 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v21) = v17;
    ++*(_QWORD *)(v4 + 16);
    if (v9)
      goto LABEL_6;
LABEL_7:
    v14 = v5 + 1;
    if (__OFADD__(v5, 1))
      goto LABEL_36;
    if (v14 >= v10)
      goto LABEL_32;
    v15 = *(_QWORD *)(v6 + 8 * v14);
    ++v5;
    if (!v15)
    {
      v5 = v14 + 1;
      if (v14 + 1 >= v10)
        goto LABEL_32;
      v15 = *(_QWORD *)(v6 + 8 * v5);
      if (!v15)
      {
        v5 = v14 + 2;
        if (v14 + 2 >= v10)
          goto LABEL_32;
        v15 = *(_QWORD *)(v6 + 8 * v5);
        if (!v15)
          break;
      }
    }
LABEL_20:
    v9 = (v15 - 1) & v15;
  }
  v16 = v14 + 3;
  if (v16 >= v10)
  {
LABEL_32:
    result = swift_release();
    v1 = v0;
    goto LABEL_34;
  }
  v15 = *(_QWORD *)(v6 + 8 * v16);
  if (v15)
  {
    v5 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    v5 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v5 >= v10)
      goto LABEL_32;
    v15 = *(_QWORD *)(v6 + 8 * v5);
    ++v16;
    if (v15)
      goto LABEL_20;
  }
LABEL_37:
  __break(1u);
  return result;
}

{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _SetStorage<UInt64>);
  result = static _SetStorage.resize(original:capacity:move:)();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_34:
    *v1 = v4;
    return result;
  }
  v26 = v1;
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  if (!v9)
    goto LABEL_7;
LABEL_6:
  v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (i = v12 | (v5 << 6); ; i = __clz(__rbit64(v15)) + (v5 << 6))
  {
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * i);
    result = static Hasher._hash(seed:_:)();
    v18 = -1 << *(_BYTE *)(v4 + 32);
    v19 = result & ~v18;
    v20 = v19 >> 6;
    if (((-1 << v19) & ~*(_QWORD *)(v11 + 8 * (v19 >> 6))) == 0)
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v18) >> 6;
      while (++v20 != v23 || (v22 & 1) == 0)
      {
        v24 = v20 == v23;
        if (v20 == v23)
          v20 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v20);
        if (v25 != -1)
        {
          v21 = __clz(__rbit64(~v25)) + (v20 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    v21 = __clz(__rbit64((-1 << v19) & ~*(_QWORD *)(v11 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v11 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v21) = v17;
    ++*(_QWORD *)(v4 + 16);
    if (v9)
      goto LABEL_6;
LABEL_7:
    v14 = v5 + 1;
    if (__OFADD__(v5, 1))
      goto LABEL_36;
    if (v14 >= v10)
      goto LABEL_32;
    v15 = *(_QWORD *)(v6 + 8 * v14);
    ++v5;
    if (!v15)
    {
      v5 = v14 + 1;
      if (v14 + 1 >= v10)
        goto LABEL_32;
      v15 = *(_QWORD *)(v6 + 8 * v5);
      if (!v15)
      {
        v5 = v14 + 2;
        if (v14 + 2 >= v10)
          goto LABEL_32;
        v15 = *(_QWORD *)(v6 + 8 * v5);
        if (!v15)
          break;
      }
    }
LABEL_20:
    v9 = (v15 - 1) & v15;
  }
  v16 = v14 + 3;
  if (v16 >= v10)
  {
LABEL_32:
    result = swift_release();
    v1 = v26;
    goto LABEL_34;
  }
  v15 = *(_QWORD *)(v6 + 8 * v16);
  if (v15)
  {
    v5 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    v5 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v5 >= v10)
      goto LABEL_32;
    v15 = *(_QWORD *)(v6 + 8 * v5);
    ++v16;
    if (v15)
      goto LABEL_20;
  }
LABEL_37:
  __break(1u);
  return result;
}

{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _SetStorage<VideoReaction>);
  v3 = static _SetStorage.resize(original:capacity:move:)();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_34:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v27 = v0;
  v28 = v2 + 56;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v8 = v3 + 56;
  result = swift_retain();
  v10 = 0;
  if (!v7)
    goto LABEL_7;
LABEL_6:
  v11 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (i = v11 | (v10 << 6); ; i = __clz(__rbit64(v14)) + (v10 << 6))
  {
    v16 = *(char *)(*(_QWORD *)(v2 + 48) + i);
    Hasher.init(_seed:)();
    v17 = (void *)**((_QWORD **)&unk_1E7630608 + v16);
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    v18 = v17;
    String.hash(into:)();

    swift_bridgeObjectRelease();
    result = Hasher._finalize()();
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v8 + 8 * (v20 >> 6))) == 0)
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v19) >> 6;
      while (++v21 != v24 || (v23 & 1) == 0)
      {
        v25 = v21 == v24;
        if (v21 == v24)
          v21 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v8 + 8 * v21);
        if (v26 != -1)
        {
          v22 = __clz(__rbit64(~v26)) + (v21 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v8 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v8 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v22) = v16;
    ++*(_QWORD *)(v4 + 16);
    if (v7)
      goto LABEL_6;
LABEL_7:
    v13 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_36;
    if (v13 >= v29)
      goto LABEL_32;
    v14 = *(_QWORD *)(v28 + 8 * v13);
    ++v10;
    if (!v14)
    {
      v10 = v13 + 1;
      if (v13 + 1 >= v29)
        goto LABEL_32;
      v14 = *(_QWORD *)(v28 + 8 * v10);
      if (!v14)
      {
        v10 = v13 + 2;
        if (v13 + 2 >= v29)
          goto LABEL_32;
        v14 = *(_QWORD *)(v28 + 8 * v10);
        if (!v14)
          break;
      }
    }
LABEL_20:
    v7 = (v14 - 1) & v14;
  }
  v15 = v13 + 3;
  if (v15 >= v29)
  {
LABEL_32:
    result = swift_release_n();
    v1 = v27;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v28 + 8 * v15);
  if (v14)
  {
    v10 = v15;
    goto LABEL_20;
  }
  while (1)
  {
    v10 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v10 >= v29)
      goto LABEL_32;
    v14 = *(_QWORD *)(v28 + 8 * v10);
    ++v15;
    if (v14)
      goto LABEL_20;
  }
LABEL_37:
  __break(1u);
  return result;
}

{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _SetStorage<UnsafeMutableRawPointer>);
  result = static _SetStorage.resize(original:capacity:move:)();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_34:
    *v1 = v4;
    return result;
  }
  v26 = v1;
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  if (!v9)
    goto LABEL_7;
LABEL_6:
  v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (i = v12 | (v5 << 6); ; i = __clz(__rbit64(v15)) + (v5 << 6))
  {
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * i);
    result = static Hasher._hash(seed:_:)();
    v18 = -1 << *(_BYTE *)(v4 + 32);
    v19 = result & ~v18;
    v20 = v19 >> 6;
    if (((-1 << v19) & ~*(_QWORD *)(v11 + 8 * (v19 >> 6))) == 0)
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v18) >> 6;
      while (++v20 != v23 || (v22 & 1) == 0)
      {
        v24 = v20 == v23;
        if (v20 == v23)
          v20 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v20);
        if (v25 != -1)
        {
          v21 = __clz(__rbit64(~v25)) + (v20 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    v21 = __clz(__rbit64((-1 << v19) & ~*(_QWORD *)(v11 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v11 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v21) = v17;
    ++*(_QWORD *)(v4 + 16);
    if (v9)
      goto LABEL_6;
LABEL_7:
    v14 = v5 + 1;
    if (__OFADD__(v5, 1))
      goto LABEL_36;
    if (v14 >= v10)
      goto LABEL_32;
    v15 = *(_QWORD *)(v6 + 8 * v14);
    ++v5;
    if (!v15)
    {
      v5 = v14 + 1;
      if (v14 + 1 >= v10)
        goto LABEL_32;
      v15 = *(_QWORD *)(v6 + 8 * v5);
      if (!v15)
      {
        v5 = v14 + 2;
        if (v14 + 2 >= v10)
          goto LABEL_32;
        v15 = *(_QWORD *)(v6 + 8 * v5);
        if (!v15)
          break;
      }
    }
LABEL_20:
    v9 = (v15 - 1) & v15;
  }
  v16 = v14 + 3;
  if (v16 >= v10)
  {
LABEL_32:
    result = swift_release();
    v1 = v26;
    goto LABEL_34;
  }
  v15 = *(_QWORD *)(v6 + 8 * v16);
  if (v15)
  {
    v5 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    v5 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v5 >= v10)
      goto LABEL_32;
    v15 = *(_QWORD *)(v6 + 8 * v5);
    ++v16;
    if (v15)
      goto LABEL_20;
  }
LABEL_37:
  __break(1u);
  return result;
}

{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  Swift::UInt v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _SetStorage<InCallControlsState>);
  result = static _SetStorage.resize(original:capacity:move:)();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_34:
    *v1 = v4;
    return result;
  }
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  if (!v9)
    goto LABEL_7;
LABEL_6:
  v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (i = v12 | (v5 << 6); ; i = __clz(__rbit64(v15)) + (v5 << 6))
  {
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * i);
    Hasher.init(_seed:)();
    Hasher._combine(_:)(v17);
    result = Hasher._finalize()();
    v18 = -1 << *(_BYTE *)(v4 + 32);
    v19 = result & ~v18;
    v20 = v19 >> 6;
    if (((-1 << v19) & ~*(_QWORD *)(v11 + 8 * (v19 >> 6))) == 0)
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v18) >> 6;
      while (++v20 != v23 || (v22 & 1) == 0)
      {
        v24 = v20 == v23;
        if (v20 == v23)
          v20 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v20);
        if (v25 != -1)
        {
          v21 = __clz(__rbit64(~v25)) + (v20 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    v21 = __clz(__rbit64((-1 << v19) & ~*(_QWORD *)(v11 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v11 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v21) = v17;
    ++*(_QWORD *)(v4 + 16);
    if (v9)
      goto LABEL_6;
LABEL_7:
    v14 = v5 + 1;
    if (__OFADD__(v5, 1))
      goto LABEL_36;
    if (v14 >= v10)
      goto LABEL_32;
    v15 = *(_QWORD *)(v6 + 8 * v14);
    ++v5;
    if (!v15)
    {
      v5 = v14 + 1;
      if (v14 + 1 >= v10)
        goto LABEL_32;
      v15 = *(_QWORD *)(v6 + 8 * v5);
      if (!v15)
      {
        v5 = v14 + 2;
        if (v14 + 2 >= v10)
          goto LABEL_32;
        v15 = *(_QWORD *)(v6 + 8 * v5);
        if (!v15)
          break;
      }
    }
LABEL_20:
    v9 = (v15 - 1) & v15;
  }
  v16 = v14 + 3;
  if (v16 >= v10)
  {
LABEL_32:
    result = swift_release();
    v1 = v0;
    goto LABEL_34;
  }
  v15 = *(_QWORD *)(v6 + 8 * v16);
  if (v15)
  {
    v5 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    v5 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v5 >= v10)
      goto LABEL_32;
    v15 = *(_QWORD *)(v6 + 8 * v5);
    ++v16;
    if (v15)
      goto LABEL_20;
  }
LABEL_37:
  __break(1u);
  return result;
}

unint64_t lazy protocol witness table accessor for type RecentsCallItem.VideoMessageError and conformance RecentsCallItem.VideoMessageError()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type RecentsCallItem.VideoMessageError and conformance RecentsCallItem.VideoMessageError;
  if (!lazy protocol witness table cache variable for type RecentsCallItem.VideoMessageError and conformance RecentsCallItem.VideoMessageError)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for RecentsCallItem.VideoMessageError, &type metadata for RecentsCallItem.VideoMessageError);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RecentsCallItem.VideoMessageError and conformance RecentsCallItem.VideoMessageError);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type RecentsCallItem.VideoMessageError and conformance RecentsCallItem.VideoMessageError;
  if (!lazy protocol witness table cache variable for type RecentsCallItem.VideoMessageError and conformance RecentsCallItem.VideoMessageError)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for RecentsCallItem.VideoMessageError, &type metadata for RecentsCallItem.VideoMessageError);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RecentsCallItem.VideoMessageError and conformance RecentsCallItem.VideoMessageError);
  }
  return result;
}

uint64_t sub_1BD391718()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = OUTLINED_FUNCTION_33_0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  if (*(_QWORD *)(v0 + v4))
    swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in RecentsCallItem.saveVideoMessage(_:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(OUTLINED_FUNCTION_33_0() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)v1 + v5;
  v10 = (_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v11 = *v10;
  v12 = v10[1];
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = partial apply for closure #1 in RecentsCallItem.saveVideoMessage(_:);
  return closure #1 in RecentsCallItem.saveVideoMessage(_:)(a1, v6, v7, v8, v9, v11, v12);
}

uint64_t partial apply for closure #1 in RecentsCallItem.saveVideoMessage(_:)()
{
  uint64_t v0;

  OUTLINED_FUNCTION_18_55();
  OUTLINED_FUNCTION_1_6();
  return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t outlined bridged method (pb) of @objc TUConversationLink.linkName.getter(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_linkName);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t outlined bridged method (ob) of @objc IMAccount.aliases.getter(void *a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(a1, sel_aliases);

  if (!v2)
    return 0;
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

void specialized Set.hash(into:)(uint64_t a1, uint64_t a2)
{
  Swift::Int v3;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::UInt v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  void *v16;
  unint64_t v17;
  int64_t v18;
  id v19;
  Swift::Int v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  unint64_t v26;

  v3 = Hasher._finalize()();
  if ((a2 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
    lazy protocol witness table accessor for type SGURL and conformance NSObject((unint64_t *)&lazy protocol witness table cache variable for type TUHandle and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
    Set.Iterator.init(_cocoa:)();
    a2 = v22;
    v4 = v23;
    v5 = v24;
    v6 = v25;
    v7 = v26;
  }
  else
  {
    v8 = -1 << *(_BYTE *)(a2 + 32);
    v4 = a2 + 56;
    v5 = ~v8;
    v9 = -v8;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v7 = v10 & *(_QWORD *)(a2 + 56);
    swift_bridgeObjectRetain();
    v6 = 0;
  }
  v11 = 0;
  v12 = (unint64_t)(v5 + 64) >> 6;
  if (a2 < 0)
    goto LABEL_10;
  while (1)
  {
    if (v7)
    {
      v13 = (v7 - 1) & v7;
      v14 = __clz(__rbit64(v7)) | (v6 << 6);
      v15 = v6;
      goto LABEL_23;
    }
    v15 = v6 + 1;
    if (__OFADD__(v6, 1))
      break;
    if (v15 >= v12)
      goto LABEL_26;
    v17 = *(_QWORD *)(v4 + 8 * v15);
    if (!v17)
    {
      v15 = v6 + 2;
      if (v6 + 2 >= v12)
        goto LABEL_26;
      v17 = *(_QWORD *)(v4 + 8 * v15);
      if (!v17)
      {
        v18 = v6 + 3;
        while (v18 < v12)
        {
          v17 = *(_QWORD *)(v4 + 8 * v18++);
          if (v17)
          {
            v15 = v18 - 1;
            goto LABEL_22;
          }
        }
LABEL_26:
        outlined consume of [String : Application].Iterator._Variant();
        Hasher._combine(_:)(v11);
        return;
      }
    }
LABEL_22:
    v13 = (v17 - 1) & v17;
    v14 = __clz(__rbit64(v17)) + (v15 << 6);
LABEL_23:
    v16 = *(void **)(*(_QWORD *)(a2 + 48) + 8 * v14);
    v21 = v16;
    v19 = v16;
    if (!v16)
      goto LABEL_26;
    while (1)
    {
      v20 = NSObject._rawHashValue(seed:)(v3);

      v11 ^= v20;
      v6 = v15;
      v7 = v13;
      if ((a2 & 0x8000000000000000) == 0)
        break;
LABEL_10:
      if (!__CocoaSet.Iterator.next()())
        goto LABEL_26;
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
      swift_dynamicCast();
      v16 = v21;
      if (!v21)
        goto LABEL_26;
      v15 = v6;
      v13 = v7;
    }
  }
  __break(1u);
}

{
  Swift::UInt v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v14;
  uint64_t v15;
  Swift::UInt v16;

  Hasher._finalize()();
  v3 = 0;
  v4 = 0;
  v5 = a2 + 56;
  OUTLINED_FUNCTION_33_12();
  v8 = v7 & v6;
  v10 = (unint64_t)(v9 + 63) >> 6;
  if ((v7 & v6) == 0)
    goto LABEL_3;
LABEL_2:
  v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v11 | (v4 << 6); ; i = v15 + (v4 << 6))
  {
    v16 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 48) + i);
    Hasher.init(_seed:)();
    Hasher._combine(_:)(v16);
    v3 ^= OUTLINED_FUNCTION_4_6();
    if (v8)
      goto LABEL_2;
LABEL_3:
    if (__OFADD__(v4++, 1))
      goto LABEL_17;
    if (v4 >= v10)
    {
LABEL_15:
      OUTLINED_FUNCTION_57(v3);
      return;
    }
    if (!*(_QWORD *)(v5 + 8 * v4))
      break;
LABEL_12:
    OUTLINED_FUNCTION_362_1();
  }
  v14 = v4 + 1;
  if (v4 + 1 >= v10)
    goto LABEL_15;
  if (*(_QWORD *)(v5 + 8 * v14))
  {
    ++v4;
    goto LABEL_12;
  }
  while (1)
  {
    v4 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v4 >= v10)
      goto LABEL_15;
    ++v14;
    if (*(_QWORD *)(v5 + 8 * v4))
      goto LABEL_12;
  }
  __break(1u);
LABEL_17:
  __break(1u);
}

{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  Swift::UInt v8;
  int64_t v9;
  unint64_t v10;
  unint64_t i;
  unint64_t v13;
  int64_t v14;
  unsigned __int8 *v15;
  Swift::UInt v16;
  uint64_t v17;
  Swift::Int v18;

  Hasher._finalize()();
  v3 = a2 + 56;
  v4 = 1 << *(_BYTE *)(a2 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a2 + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  v8 = 0;
  v9 = 0;
  if (!v6)
    goto LABEL_5;
LABEL_4:
  v10 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (i = v10 | (v9 << 6); ; i = __clz(__rbit64(v13)) + (v9 << 6))
  {
    v15 = (unsigned __int8 *)(*(_QWORD *)(a2 + 48) + 24 * i);
    v16 = *v15;
    v17 = *((_QWORD *)v15 + 2);
    Hasher.init(_seed:)();
    Hasher._combine(_:)(v16);
    if (v17)
    {
      Hasher._combine(_:)(1u);
      swift_bridgeObjectRetain();
      String.hash(into:)();
    }
    else
    {
      Hasher._combine(_:)(0);
      swift_bridgeObjectRelease();
    }
    v18 = Hasher._finalize()();
    swift_bridgeObjectRelease();
    v8 ^= v18;
    if (v6)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v9++, 1))
      goto LABEL_22;
    if (v9 >= v7)
    {
LABEL_20:
      swift_release();
      Hasher._combine(_:)(v8);
      return;
    }
    v13 = *(_QWORD *)(v3 + 8 * v9);
    if (!v13)
      break;
LABEL_14:
    v6 = (v13 - 1) & v13;
  }
  v14 = v9 + 1;
  if (v9 + 1 >= v7)
    goto LABEL_20;
  v13 = *(_QWORD *)(v3 + 8 * v14);
  if (v13)
  {
    ++v9;
    goto LABEL_14;
  }
  while (1)
  {
    v9 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v9 >= v7)
      goto LABEL_20;
    v13 = *(_QWORD *)(v3 + 8 * v9);
    ++v14;
    if (v13)
      goto LABEL_14;
  }
  __break(1u);
LABEL_22:
  __break(1u);
}

uint64_t outlined assign with take of RecentsCallItemType(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RecentsCallItemType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t specialized Set.endIndex.getter(uint64_t a1)
{
  return 1 << *(_BYTE *)(a1 + 32);
}

{
  if ((a1 & 0xC000000000000001) != 0)
    return __CocoaSet.endIndex.getter();
  else
    return 1 << *(_BYTE *)(a1 + 32);
}

unint64_t lazy protocol witness table accessor for type RecentsCallHandleType and conformance RecentsCallHandleType()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type RecentsCallHandleType and conformance RecentsCallHandleType;
  if (!lazy protocol witness table cache variable for type RecentsCallHandleType and conformance RecentsCallHandleType)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for RecentsCallHandleType, &type metadata for RecentsCallHandleType);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RecentsCallHandleType and conformance RecentsCallHandleType);
  }
  return result;
}

void base witness table accessor for Equatable in RecentCallRecentItemMetadata()
{
  _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type RecentCallRecentItemMetadata and conformance RecentCallRecentItemMetadata, type metadata accessor for RecentCallRecentItemMetadata, (uint64_t)&protocol conformance descriptor for RecentCallRecentItemMetadata);
}

void base witness table accessor for Equatable in RecentOngoingConversationMetadata()
{
  _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type RecentOngoingConversationMetadata and conformance RecentOngoingConversationMetadata, type metadata accessor for RecentOngoingConversationMetadata, (uint64_t)&protocol conformance descriptor for RecentOngoingConversationMetadata);
}

void base witness table accessor for Equatable in RecentsCallItemType()
{
  _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type RecentsCallItemType and conformance RecentsCallItemType, type metadata accessor for RecentsCallItemType, (uint64_t)&protocol conformance descriptor for RecentsCallItemType);
}

void sub_1BD3920A8()
{
  RecentsCallItemType.recentCallRecentItemMetadata.getter();
  OUTLINED_FUNCTION_0();
}

uint64_t storeEnumTagSinglePayload for RecentsCallHandleType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BD392114 + 4 * byte_1BD65ABE2[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BD392148 + 4 * byte_1BD65ABDD[v4]))();
}

uint64_t sub_1BD392148(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD392150(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD392158);
  return result;
}

uint64_t sub_1BD392164(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD39216CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BD392170(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD392178(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_QWORD *assignWithCopy for RecentCallRecentItemMetadata(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int EnumTagSinglePayload;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  void *v33;
  void *v34;
  id v35;
  id v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  char *v40;
  char *v41;
  int v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  void *v48;
  id v49;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for Date();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (EnumTagSinglePayload)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v12 = *(_QWORD *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
LABEL_7:
  v14 = a3[6];
  v15 = *(void **)((char *)a1 + v14);
  v16 = *(void **)((char *)a2 + v14);
  *(_QWORD *)((char *)a1 + v14) = v16;
  v17 = v16;

  v18 = a3[7];
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = *(_QWORD *)v20;
  v19[8] = v20[8];
  *(_QWORD *)v19 = v21;
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  v22 = a3[10];
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = type metadata accessor for UUID();
  v26 = __swift_getEnumTagSinglePayload((uint64_t)v23, 1, v25);
  v27 = __swift_getEnumTagSinglePayload((uint64_t)v24, 1, v25);
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
      __swift_storeEnumTagSinglePayload((uint64_t)v23, 0, 1, v25);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  v28 = *(_QWORD *)(v25 - 8);
  if (v27)
  {
    (*(void (**)(char *, uint64_t))(v28 + 8))(v23, v25);
LABEL_12:
    v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v28 + 24))(v23, v24, v25);
LABEL_13:
  v30 = a3[11];
  v31 = (char *)a1 + v30;
  v32 = (char *)a2 + v30;
  v33 = *(void **)((char *)a1 + v30);
  v34 = *(void **)((char *)a2 + v30);
  if (v33)
  {
    if (v34)
    {
      *(_QWORD *)v31 = v34;
      v35 = v34;

      *((_QWORD *)v31 + 1) = *((_QWORD *)v32 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v31 + 2) = *((_QWORD *)v32 + 2);
      swift_retain();
      swift_release();
    }
    else
    {
      outlined destroy of ConversationLink((id *)v31);
      v37 = *((_QWORD *)v32 + 2);
      *(_OWORD *)v31 = *(_OWORD *)v32;
      *((_QWORD *)v31 + 2) = v37;
    }
  }
  else if (v34)
  {
    *(_QWORD *)v31 = v34;
    *((_QWORD *)v31 + 1) = *((_QWORD *)v32 + 1);
    *((_QWORD *)v31 + 2) = *((_QWORD *)v32 + 2);
    v36 = v34;
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v38 = *(_OWORD *)v32;
    *((_QWORD *)v31 + 2) = *((_QWORD *)v32 + 2);
    *(_OWORD *)v31 = v38;
  }
  v39 = a3[12];
  v40 = (char *)a1 + v39;
  v41 = (char *)a2 + v39;
  v42 = __swift_getEnumTagSinglePayload((uint64_t)a1 + v39, 1, v25);
  v43 = __swift_getEnumTagSinglePayload((uint64_t)v41, 1, v25);
  if (!v42)
  {
    v44 = *(_QWORD *)(v25 - 8);
    if (!v43)
    {
      (*(void (**)(char *, char *, uint64_t))(v44 + 24))(v40, v41, v25);
      goto LABEL_28;
    }
    (*(void (**)(char *, uint64_t))(v44 + 8))(v40, v25);
    goto LABEL_27;
  }
  if (v43)
  {
LABEL_27:
    v45 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    goto LABEL_28;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v40, v41, v25);
  __swift_storeEnumTagSinglePayload((uint64_t)v40, 0, 1, v25);
LABEL_28:
  v46 = a3[13];
  v47 = *(void **)((char *)a1 + v46);
  v48 = *(void **)((char *)a2 + v46);
  *(_QWORD *)((char *)a1 + v46) = v48;
  v49 = v48;

  return a1;
}

id *outlined destroy of ConversationLink(id *a1)
{
  destroy for ConversationLink(a1);
  return a1;
}

_OWORD *initializeWithTake for RecentCallRecentItemMetadata(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  uint64_t v26;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for Date();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
  }
  v11 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  *(_QWORD *)v12 = *(_QWORD *)v13;
  v12[8] = v13[8];
  v14 = a3[9];
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  *(_QWORD *)((char *)a1 + v14) = *(_QWORD *)((char *)a2 + v14);
  v15 = a3[10];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = type metadata accessor for UUID();
  if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v18))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
    __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v18);
  }
  v20 = a3[11];
  v21 = a3[12];
  v22 = (char *)a1 + v20;
  v23 = (char *)a2 + v20;
  *(_OWORD *)v22 = *(_OWORD *)v23;
  *((_QWORD *)v22 + 2) = *((_QWORD *)v23 + 2);
  v24 = (char *)a1 + v21;
  v25 = (char *)a2 + v21;
  if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v21, 1, v18))
  {
    v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v24, v25, v18);
    __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v18);
  }
  *(_QWORD *)((char *)a1 + a3[13]) = *(_QWORD *)((char *)a2 + a3[13]);
  return a1;
}

_QWORD *assignWithTake for RecentCallRecentItemMetadata(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int EnumTagSinglePayload;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  _QWORD *v31;
  void *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for Date();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v10);
  v12 = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10);
  if (EnumTagSinglePayload)
  {
    if (!v12)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v13 = *(_QWORD *)(v10 - 8);
  if (v12)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v10);
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v8, v9, v10);
LABEL_7:
  v15 = a3[6];
  v16 = *(void **)((char *)a1 + v15);
  *(_QWORD *)((char *)a1 + v15) = *(_QWORD *)((char *)a2 + v15);

  v17 = a3[7];
  v18 = a3[8];
  v19 = (char *)a1 + v17;
  v20 = (char *)a2 + v17;
  *(_QWORD *)v19 = *(_QWORD *)v20;
  v19[8] = v20[8];
  *(_QWORD *)((char *)a1 + v18) = *(_QWORD *)((char *)a2 + v18);
  swift_bridgeObjectRelease();
  v21 = a3[10];
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  v24 = type metadata accessor for UUID();
  v25 = __swift_getEnumTagSinglePayload((uint64_t)v22, 1, v24);
  v26 = __swift_getEnumTagSinglePayload((uint64_t)v23, 1, v24);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
      __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v24);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  v27 = *(_QWORD *)(v24 - 8);
  if (v26)
  {
    (*(void (**)(char *, uint64_t))(v27 + 8))(v22, v24);
LABEL_12:
    v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v27 + 40))(v22, v23, v24);
LABEL_13:
  v29 = a3[11];
  v30 = (char *)a1 + v29;
  v31 = (_QWORD *)((char *)a2 + v29);
  v32 = *(void **)((char *)a1 + v29);
  if (v32)
  {
    if (*v31)
    {
      *(_QWORD *)v30 = *v31;

      *((_QWORD *)v30 + 1) = v31[1];
      swift_bridgeObjectRelease();
      *((_QWORD *)v30 + 2) = v31[2];
      swift_release();
      goto LABEL_18;
    }
    outlined destroy of ConversationLink((id *)v30);
  }
  *(_OWORD *)v30 = *(_OWORD *)v31;
  *((_QWORD *)v30 + 2) = v31[2];
LABEL_18:
  v33 = a3[12];
  v34 = (char *)a1 + v33;
  v35 = (char *)a2 + v33;
  v36 = __swift_getEnumTagSinglePayload((uint64_t)a1 + v33, 1, v24);
  v37 = __swift_getEnumTagSinglePayload((uint64_t)v35, 1, v24);
  if (!v36)
  {
    v38 = *(_QWORD *)(v24 - 8);
    if (!v37)
    {
      (*(void (**)(char *, char *, uint64_t))(v38 + 40))(v34, v35, v24);
      goto LABEL_24;
    }
    (*(void (**)(char *, uint64_t))(v38 + 8))(v34, v24);
    goto LABEL_23;
  }
  if (v37)
  {
LABEL_23:
    v39 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    goto LABEL_24;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v34, v35, v24);
  __swift_storeEnumTagSinglePayload((uint64_t)v34, 0, 1, v24);
LABEL_24:
  v40 = a3[13];
  v41 = *(void **)((char *)a1 + v40);
  *(_QWORD *)((char *)a1 + v40) = *(_QWORD *)((char *)a2 + v40);

  return a1;
}

uint64_t getEnumTagSinglePayload for RecentCallRecentItemMetadata()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1BD392AE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    OUTLINED_FUNCTION_93_0(*(_QWORD *)(a1 + 8));
    OUTLINED_FUNCTION_18();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    OUTLINED_FUNCTION_44_6();
    if (v7)
    {
      v8 = v6;
      v9 = *(int *)(a3 + 20);
    }
    else
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
      v9 = *(int *)(a3 + 40);
    }
    OUTLINED_FUNCTION_1_16(a1 + v9, a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for RecentCallRecentItemMetadata()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BD392B68(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(a1 + 8) = (a2 - 1);
    OUTLINED_FUNCTION_18();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    OUTLINED_FUNCTION_45_7();
    if (v8)
    {
      v9 = v7;
      v10 = *(int *)(a4 + 20);
    }
    else
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
      v10 = *(int *)(a4 + 40);
    }
    OUTLINED_FUNCTION_0_29(a1 + v10, a2, a2, v9);
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for RecentOngoingConversationMetadata(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = type metadata accessor for UUID();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    v9 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = (uint64_t)v9;
    v10 = a3[7];
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = *(void **)((char *)a2 + v10);
    swift_bridgeObjectRetain();
    v14 = v9;
    if (!v13)
    {
      *(_OWORD *)v11 = *(_OWORD *)v12;
      *((_QWORD *)v11 + 2) = *((_QWORD *)v12 + 2);
      return a1;
    }
    v15 = *((_QWORD *)v12 + 1);
    v16 = *((_QWORD *)v12 + 2);
    *(_QWORD *)v11 = v13;
    *((_QWORD *)v11 + 1) = v15;
    *((_QWORD *)v11 + 2) = v16;
    v17 = v13;
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return a1;
}

void destroy for RecentOngoingConversationMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  id *v5;

  v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();

  v5 = (id *)(a1 + *(int *)(a2 + 28));
  if (*v5)
  {

    swift_bridgeObjectRelease();
    swift_release();
  }
}

uint64_t initializeWithCopy for RecentOngoingConversationMetadata(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v8 = *(void **)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  v9 = a3[7];
  v10 = (_QWORD *)(a1 + v9);
  v11 = a2 + v9;
  v12 = *(void **)v11;
  swift_bridgeObjectRetain();
  v13 = v8;
  if (v12)
  {
    v14 = *(_QWORD *)(v11 + 8);
    v15 = *(_QWORD *)(v11 + 16);
    *v10 = v12;
    v10[1] = v14;
    v10[2] = v15;
    v16 = v12;
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    *(_OWORD *)v10 = *(_OWORD *)v11;
    v10[2] = *(_QWORD *)(v11 + 16);
  }
  return a1;
}

uint64_t assignWithCopy for RecentOngoingConversationMetadata(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  __int128 *v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  __int128 v19;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = a3[6];
  v8 = *(void **)(a2 + v7);
  v9 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  v10 = v8;

  v11 = a3[7];
  v12 = a1 + v11;
  v13 = (__int128 *)(a2 + v11);
  v14 = *(void **)(a1 + v11);
  v15 = *(void **)v13;
  if (v14)
  {
    if (v15)
    {
      *(_QWORD *)v12 = v15;
      v16 = v15;

      *(_QWORD *)(v12 + 8) = *((_QWORD *)v13 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v12 + 16) = *((_QWORD *)v13 + 2);
      swift_retain();
      swift_release();
    }
    else
    {
      outlined destroy of ConversationLink((id *)v12);
      v18 = *((_QWORD *)v13 + 2);
      *(_OWORD *)v12 = *v13;
      *(_QWORD *)(v12 + 16) = v18;
    }
  }
  else if (v15)
  {
    *(_QWORD *)v12 = v15;
    *(_QWORD *)(v12 + 8) = *((_QWORD *)v13 + 1);
    *(_QWORD *)(v12 + 16) = *((_QWORD *)v13 + 2);
    v17 = v15;
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v19 = *v13;
    *(_QWORD *)(v12 + 16) = *((_QWORD *)v13 + 2);
    *(_OWORD *)v12 = v19;
  }
  return a1;
}

uint64_t initializeWithTake for RecentOngoingConversationMetadata(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[7];
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v10 + 16);
  return a1;
}

uint64_t assignWithTake for RecentOngoingConversationMetadata(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  swift_bridgeObjectRelease();
  v7 = a3[6];
  v8 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);

  v9 = a3[7];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = *(void **)(a1 + v9);
  if (!v12)
    goto LABEL_5;
  if (!*(_QWORD *)v11)
  {
    outlined destroy of ConversationLink((id *)v10);
LABEL_5:
    *(_OWORD *)v10 = *(_OWORD *)v11;
    *(_QWORD *)(v10 + 16) = *(_QWORD *)(v11 + 16);
    return a1;
  }
  *(_QWORD *)v10 = *(_QWORD *)v11;

  *(_QWORD *)(v10 + 8) = *(_QWORD *)(v11 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v10 + 16) = *(_QWORD *)(v11 + 16);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for RecentOngoingConversationMetadata()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1BD3930AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = OUTLINED_FUNCTION_33_0();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    OUTLINED_FUNCTION_1_16(a1, a2, v6);
  }
  else
  {
    OUTLINED_FUNCTION_93_0(*(_QWORD *)(a1 + *(int *)(a3 + 20)));
    OUTLINED_FUNCTION_18();
  }
}

uint64_t storeEnumTagSinglePayload for RecentOngoingConversationMetadata()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BD393110(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_45_7();
  if (v7)
  {
    v8 = OUTLINED_FUNCTION_399_1();
    OUTLINED_FUNCTION_0_29(v8, a2, a2, v9);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
    OUTLINED_FUNCTION_18();
  }
}

uint64_t initializeBufferWithCopyOfBuffer for RecentsCallItemType(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_1BD3931C0 + 4 * byte_1BD65ABE7[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t assignWithCopy for RecentsCallItemType(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    outlined destroy of RecentsCallItem(result, type metadata accessor for RecentsCallItemType);
    v2 = (char *)&loc_1BD3939E8 + 4 * byte_1BD65ABF6[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

_OWORD *initializeWithTake for RecentsCallItemType(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  int *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      *a1 = *a2;
      v6 = (int *)type metadata accessor for RecentCallRecentItemMetadata(0);
      v7 = v6[5];
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = type metadata accessor for Date();
      if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
      {
        v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
        __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
      }
      *(_QWORD *)((char *)a1 + v6[6]) = *(_QWORD *)((char *)a2 + v6[6]);
      v29 = v6[7];
      v30 = (char *)a1 + v29;
      v31 = (char *)a2 + v29;
      *(_QWORD *)v30 = *(_QWORD *)v31;
      v30[8] = v31[8];
      *(_QWORD *)((char *)a1 + v6[8]) = *(_QWORD *)((char *)a2 + v6[8]);
      *(_QWORD *)((char *)a1 + v6[9]) = *(_QWORD *)((char *)a2 + v6[9]);
      v32 = v6[10];
      v33 = (char *)a1 + v32;
      v34 = (char *)a2 + v32;
      v35 = type metadata accessor for UUID();
      if (__swift_getEnumTagSinglePayload((uint64_t)v34, 1, v35))
      {
        v36 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
        memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v33, v34, v35);
        __swift_storeEnumTagSinglePayload((uint64_t)v33, 0, 1, v35);
      }
      v53 = v6[11];
      v54 = (char *)a1 + v53;
      v55 = (char *)a2 + v53;
      *(_OWORD *)v54 = *(_OWORD *)v55;
      *((_QWORD *)v54 + 2) = *((_QWORD *)v55 + 2);
      v56 = v6[12];
      v57 = (char *)a1 + v56;
      v58 = (char *)a2 + v56;
      if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v56, 1, v35))
      {
        v59 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
        memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v57, v58, v35);
        __swift_storeEnumTagSinglePayload((uint64_t)v57, 0, 1, v35);
      }
      *(_QWORD *)((char *)a1 + v6[13]) = *(_QWORD *)((char *)a2 + v6[13]);
      goto LABEL_34;
    case 1u:
      v12 = type metadata accessor for UUID();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
      v13 = (int *)type metadata accessor for RecentOngoingConversationMetadata(0);
      *(_QWORD *)((char *)a1 + v13[5]) = *(_QWORD *)((char *)a2 + v13[5]);
      *(_QWORD *)((char *)a1 + v13[6]) = *(_QWORD *)((char *)a2 + v13[6]);
      v14 = v13[7];
      v15 = (char *)a1 + v14;
      v16 = (char *)a2 + v14;
      *(_OWORD *)v15 = *(_OWORD *)v16;
      *((_QWORD *)v15 + 2) = *((_QWORD *)v16 + 2);
      goto LABEL_34;
    case 3u:
      *a1 = *a2;
      v17 = (int *)type metadata accessor for RecentCallRecentItemMetadata(0);
      v18 = v17[5];
      v19 = (char *)a1 + v18;
      v20 = (char *)a2 + v18;
      v21 = type metadata accessor for Date();
      if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, v21))
      {
        v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
        memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
        __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v21);
      }
      *(_QWORD *)((char *)a1 + v17[6]) = *(_QWORD *)((char *)a2 + v17[6]);
      v37 = v17[7];
      v38 = (char *)a1 + v37;
      v39 = (char *)a2 + v37;
      *(_QWORD *)v38 = *(_QWORD *)v39;
      v38[8] = v39[8];
      *(_QWORD *)((char *)a1 + v17[8]) = *(_QWORD *)((char *)a2 + v17[8]);
      *(_QWORD *)((char *)a1 + v17[9]) = *(_QWORD *)((char *)a2 + v17[9]);
      v40 = v17[10];
      v41 = (char *)a1 + v40;
      v42 = (char *)a2 + v40;
      v43 = type metadata accessor for UUID();
      if (__swift_getEnumTagSinglePayload((uint64_t)v42, 1, v43))
      {
        v44 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
        memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v41, v42, v43);
        __swift_storeEnumTagSinglePayload((uint64_t)v41, 0, 1, v43);
      }
      v60 = v17[11];
      v61 = (char *)a1 + v60;
      v62 = (char *)a2 + v60;
      *(_OWORD *)v61 = *(_OWORD *)v62;
      *((_QWORD *)v61 + 2) = *((_QWORD *)v62 + 2);
      v63 = v17[12];
      v64 = (char *)a1 + v63;
      v65 = (char *)a2 + v63;
      if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v63, 1, v43))
      {
        v66 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
        memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v64, v65, v43);
        __swift_storeEnumTagSinglePayload((uint64_t)v64, 0, 1, v43);
      }
      *(_QWORD *)((char *)a1 + v17[13]) = *(_QWORD *)((char *)a2 + v17[13]);
      goto LABEL_34;
    case 4u:
      *a1 = *a2;
      v23 = (int *)type metadata accessor for RecentCallRecentItemMetadata(0);
      v24 = v23[5];
      v25 = (char *)a1 + v24;
      v26 = (char *)a2 + v24;
      v27 = type metadata accessor for Date();
      if (__swift_getEnumTagSinglePayload((uint64_t)v26, 1, v27))
      {
        v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
        memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
        __swift_storeEnumTagSinglePayload((uint64_t)v25, 0, 1, v27);
      }
      *(_QWORD *)((char *)a1 + v23[6]) = *(_QWORD *)((char *)a2 + v23[6]);
      v45 = v23[7];
      v46 = (char *)a1 + v45;
      v47 = (char *)a2 + v45;
      *(_QWORD *)v46 = *(_QWORD *)v47;
      v46[8] = v47[8];
      *(_QWORD *)((char *)a1 + v23[8]) = *(_QWORD *)((char *)a2 + v23[8]);
      *(_QWORD *)((char *)a1 + v23[9]) = *(_QWORD *)((char *)a2 + v23[9]);
      v48 = v23[10];
      v49 = (char *)a1 + v48;
      v50 = (char *)a2 + v48;
      v51 = type metadata accessor for UUID();
      if (__swift_getEnumTagSinglePayload((uint64_t)v50, 1, v51))
      {
        v52 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
        memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(v49, v50, v51);
        __swift_storeEnumTagSinglePayload((uint64_t)v49, 0, 1, v51);
      }
      v67 = v23[11];
      v68 = (char *)a1 + v67;
      v69 = (char *)a2 + v67;
      *(_OWORD *)v68 = *(_OWORD *)v69;
      *((_QWORD *)v68 + 2) = *((_QWORD *)v69 + 2);
      v70 = v23[12];
      v71 = (char *)a1 + v70;
      v72 = (char *)a2 + v70;
      if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v70, 1, v51))
      {
        v73 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
        memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(v71, v72, v51);
        __swift_storeEnumTagSinglePayload((uint64_t)v71, 0, 1, v51);
      }
      *(_QWORD *)((char *)a1 + v23[13]) = *(_QWORD *)((char *)a2 + v23[13]);
LABEL_34:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_OWORD *assignWithTake for RecentsCallItemType(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  int *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;

  if (a1 != a2)
  {
    outlined destroy of RecentsCallItem((uint64_t)a1, type metadata accessor for RecentsCallItemType);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *a1 = *a2;
        v6 = (int *)type metadata accessor for RecentCallRecentItemMetadata(0);
        v7 = v6[5];
        v8 = (char *)a1 + v7;
        v9 = (char *)a2 + v7;
        v10 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
        {
          v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
          memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
          __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
        }
        *(_QWORD *)((char *)a1 + v6[6]) = *(_QWORD *)((char *)a2 + v6[6]);
        v29 = v6[7];
        v30 = (char *)a1 + v29;
        v31 = (char *)a2 + v29;
        *(_QWORD *)v30 = *(_QWORD *)v31;
        v30[8] = v31[8];
        *(_QWORD *)((char *)a1 + v6[8]) = *(_QWORD *)((char *)a2 + v6[8]);
        *(_QWORD *)((char *)a1 + v6[9]) = *(_QWORD *)((char *)a2 + v6[9]);
        v32 = v6[10];
        v33 = (char *)a1 + v32;
        v34 = (char *)a2 + v32;
        v35 = type metadata accessor for UUID();
        if (__swift_getEnumTagSinglePayload((uint64_t)v34, 1, v35))
        {
          v36 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
          memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v33, v34, v35);
          __swift_storeEnumTagSinglePayload((uint64_t)v33, 0, 1, v35);
        }
        v53 = v6[11];
        v54 = (char *)a1 + v53;
        v55 = (char *)a2 + v53;
        *(_OWORD *)v54 = *(_OWORD *)v55;
        *((_QWORD *)v54 + 2) = *((_QWORD *)v55 + 2);
        v56 = v6[12];
        v57 = (char *)a1 + v56;
        v58 = (char *)a2 + v56;
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v56, 1, v35))
        {
          v59 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
          memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v57, v58, v35);
          __swift_storeEnumTagSinglePayload((uint64_t)v57, 0, 1, v35);
        }
        *(_QWORD *)((char *)a1 + v6[13]) = *(_QWORD *)((char *)a2 + v6[13]);
        goto LABEL_35;
      case 1u:
        v12 = type metadata accessor for UUID();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
        v13 = (int *)type metadata accessor for RecentOngoingConversationMetadata(0);
        *(_QWORD *)((char *)a1 + v13[5]) = *(_QWORD *)((char *)a2 + v13[5]);
        *(_QWORD *)((char *)a1 + v13[6]) = *(_QWORD *)((char *)a2 + v13[6]);
        v14 = v13[7];
        v15 = (char *)a1 + v14;
        v16 = (char *)a2 + v14;
        *(_OWORD *)v15 = *(_OWORD *)v16;
        *((_QWORD *)v15 + 2) = *((_QWORD *)v16 + 2);
        goto LABEL_35;
      case 3u:
        *a1 = *a2;
        v17 = (int *)type metadata accessor for RecentCallRecentItemMetadata(0);
        v18 = v17[5];
        v19 = (char *)a1 + v18;
        v20 = (char *)a2 + v18;
        v21 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, v21))
        {
          v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
          memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
          __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v21);
        }
        *(_QWORD *)((char *)a1 + v17[6]) = *(_QWORD *)((char *)a2 + v17[6]);
        v37 = v17[7];
        v38 = (char *)a1 + v37;
        v39 = (char *)a2 + v37;
        *(_QWORD *)v38 = *(_QWORD *)v39;
        v38[8] = v39[8];
        *(_QWORD *)((char *)a1 + v17[8]) = *(_QWORD *)((char *)a2 + v17[8]);
        *(_QWORD *)((char *)a1 + v17[9]) = *(_QWORD *)((char *)a2 + v17[9]);
        v40 = v17[10];
        v41 = (char *)a1 + v40;
        v42 = (char *)a2 + v40;
        v43 = type metadata accessor for UUID();
        if (__swift_getEnumTagSinglePayload((uint64_t)v42, 1, v43))
        {
          v44 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
          memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v41, v42, v43);
          __swift_storeEnumTagSinglePayload((uint64_t)v41, 0, 1, v43);
        }
        v60 = v17[11];
        v61 = (char *)a1 + v60;
        v62 = (char *)a2 + v60;
        *(_OWORD *)v61 = *(_OWORD *)v62;
        *((_QWORD *)v61 + 2) = *((_QWORD *)v62 + 2);
        v63 = v17[12];
        v64 = (char *)a1 + v63;
        v65 = (char *)a2 + v63;
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v63, 1, v43))
        {
          v66 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
          memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v64, v65, v43);
          __swift_storeEnumTagSinglePayload((uint64_t)v64, 0, 1, v43);
        }
        *(_QWORD *)((char *)a1 + v17[13]) = *(_QWORD *)((char *)a2 + v17[13]);
        goto LABEL_35;
      case 4u:
        *a1 = *a2;
        v23 = (int *)type metadata accessor for RecentCallRecentItemMetadata(0);
        v24 = v23[5];
        v25 = (char *)a1 + v24;
        v26 = (char *)a2 + v24;
        v27 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v26, 1, v27))
        {
          v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
          memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
          __swift_storeEnumTagSinglePayload((uint64_t)v25, 0, 1, v27);
        }
        *(_QWORD *)((char *)a1 + v23[6]) = *(_QWORD *)((char *)a2 + v23[6]);
        v45 = v23[7];
        v46 = (char *)a1 + v45;
        v47 = (char *)a2 + v45;
        *(_QWORD *)v46 = *(_QWORD *)v47;
        v46[8] = v47[8];
        *(_QWORD *)((char *)a1 + v23[8]) = *(_QWORD *)((char *)a2 + v23[8]);
        *(_QWORD *)((char *)a1 + v23[9]) = *(_QWORD *)((char *)a2 + v23[9]);
        v48 = v23[10];
        v49 = (char *)a1 + v48;
        v50 = (char *)a2 + v48;
        v51 = type metadata accessor for UUID();
        if (__swift_getEnumTagSinglePayload((uint64_t)v50, 1, v51))
        {
          v52 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
          memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(v49, v50, v51);
          __swift_storeEnumTagSinglePayload((uint64_t)v49, 0, 1, v51);
        }
        v67 = v23[11];
        v68 = (char *)a1 + v67;
        v69 = (char *)a2 + v67;
        *(_OWORD *)v68 = *(_OWORD *)v69;
        *((_QWORD *)v68 + 2) = *((_QWORD *)v69 + 2);
        v70 = v23[12];
        v71 = (char *)a1 + v70;
        v72 = (char *)a2 + v70;
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v70, 1, v51))
        {
          v73 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
          memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(v71, v72, v51);
          __swift_storeEnumTagSinglePayload((uint64_t)v71, 0, 1, v51);
        }
        *(_QWORD *)((char *)a1 + v23[13]) = *(_QWORD *)((char *)a2 + v23[13]);
LABEL_35:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t assignWithCopy for RecentsCallItem(uint64_t a1, uint64_t a2, int *a3)
{
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t v22;
  int EnumTagSinglePayload;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  id v30;
  uint64_t v31;
  void *v32;
  void *v33;
  id v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  void *v39;
  void *v40;
  id v41;

  if (a1 != a2)
  {
    outlined destroy of RecentsCallItem(a1, type metadata accessor for RecentsCallItemType);
    type metadata accessor for RecentsCallItemType(0);
    v6 = (char *)&loc_1BD394FF4 + 4 * byte_1BD65AC14[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = a3[7];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = a3[8];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (_QWORD *)(a2 + v16);
  *v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = a3[9];
  v20 = (void *)(a1 + v19);
  v21 = (const void *)(a2 + v19);
  v22 = type metadata accessor for Date();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v20, 1, v22);
  v24 = __swift_getEnumTagSinglePayload((uint64_t)v21, 1, v22);
  if (!EnumTagSinglePayload)
  {
    v25 = *(_QWORD *)(v22 - 8);
    if (!v24)
    {
      (*(void (**)(void *, const void *, uint64_t))(v25 + 24))(v20, v21, v22);
      goto LABEL_9;
    }
    (*(void (**)(void *, uint64_t))(v25 + 8))(v20, v22);
    goto LABEL_8;
  }
  if (v24)
  {
LABEL_8:
    v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_9;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v22);
LABEL_9:
  v27 = a3[10];
  v28 = *(void **)(a2 + v27);
  v29 = *(void **)(a1 + v27);
  *(_QWORD *)(a1 + v27) = v28;
  v30 = v28;

  v31 = a3[11];
  v32 = *(void **)(a1 + v31);
  v33 = *(void **)(a2 + v31);
  *(_QWORD *)(a1 + v31) = v33;
  v34 = v33;

  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v35 = a3[13];
  v36 = (_QWORD *)(a1 + v35);
  v37 = (_QWORD *)(a2 + v35);
  *v36 = *v37;
  v36[1] = v37[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v38 = a3[14];
  v39 = *(void **)(a2 + v38);
  v40 = *(void **)(a1 + v38);
  *(_QWORD *)(a1 + v38) = v39;
  v41 = v39;

  return a1;
}

_OWORD *initializeWithTake for RecentsCallItem(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  int *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;

  v6 = type metadata accessor for RecentsCallItemType(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      *a1 = *a2;
      v7 = (int *)type metadata accessor for RecentCallRecentItemMetadata(0);
      v8 = v7[5];
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = type metadata accessor for Date();
      if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
      {
        v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
        __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
      }
      *(_QWORD *)((char *)a1 + v7[6]) = *(_QWORD *)((char *)a2 + v7[6]);
      v30 = v7[7];
      v31 = (char *)a1 + v30;
      v32 = (char *)a2 + v30;
      *(_QWORD *)v31 = *(_QWORD *)v32;
      v31[8] = v32[8];
      *(_QWORD *)((char *)a1 + v7[8]) = *(_QWORD *)((char *)a2 + v7[8]);
      *(_QWORD *)((char *)a1 + v7[9]) = *(_QWORD *)((char *)a2 + v7[9]);
      v33 = v7[10];
      v34 = (char *)a1 + v33;
      v35 = (char *)a2 + v33;
      v36 = type metadata accessor for UUID();
      if (__swift_getEnumTagSinglePayload((uint64_t)v35, 1, v36))
      {
        v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
        memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v34, v35, v36);
        __swift_storeEnumTagSinglePayload((uint64_t)v34, 0, 1, v36);
      }
      v54 = v7[11];
      v55 = (char *)a1 + v54;
      v56 = (char *)a2 + v54;
      *(_OWORD *)v55 = *(_OWORD *)v56;
      *((_QWORD *)v55 + 2) = *((_QWORD *)v56 + 2);
      v57 = v7[12];
      v58 = (char *)a1 + v57;
      v59 = (char *)a2 + v57;
      if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v57, 1, v36))
      {
        v60 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
        memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v58, v59, v36);
        __swift_storeEnumTagSinglePayload((uint64_t)v58, 0, 1, v36);
      }
      *(_QWORD *)((char *)a1 + v7[13]) = *(_QWORD *)((char *)a2 + v7[13]);
      goto LABEL_34;
    case 1u:
      v13 = type metadata accessor for UUID();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
      v14 = (int *)type metadata accessor for RecentOngoingConversationMetadata(0);
      *(_QWORD *)((char *)a1 + v14[5]) = *(_QWORD *)((char *)a2 + v14[5]);
      *(_QWORD *)((char *)a1 + v14[6]) = *(_QWORD *)((char *)a2 + v14[6]);
      v15 = v14[7];
      v16 = (char *)a1 + v15;
      v17 = (char *)a2 + v15;
      *(_OWORD *)v16 = *(_OWORD *)v17;
      *((_QWORD *)v16 + 2) = *((_QWORD *)v17 + 2);
      goto LABEL_34;
    case 3u:
      *a1 = *a2;
      v18 = (int *)type metadata accessor for RecentCallRecentItemMetadata(0);
      v19 = v18[5];
      v20 = (char *)a1 + v19;
      v21 = (char *)a2 + v19;
      v22 = type metadata accessor for Date();
      if (__swift_getEnumTagSinglePayload((uint64_t)v21, 1, v22))
      {
        v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
        __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v22);
      }
      *(_QWORD *)((char *)a1 + v18[6]) = *(_QWORD *)((char *)a2 + v18[6]);
      v38 = v18[7];
      v39 = (char *)a1 + v38;
      v40 = (char *)a2 + v38;
      *(_QWORD *)v39 = *(_QWORD *)v40;
      v39[8] = v40[8];
      *(_QWORD *)((char *)a1 + v18[8]) = *(_QWORD *)((char *)a2 + v18[8]);
      *(_QWORD *)((char *)a1 + v18[9]) = *(_QWORD *)((char *)a2 + v18[9]);
      v41 = v18[10];
      v42 = (char *)a1 + v41;
      v43 = (char *)a2 + v41;
      v44 = type metadata accessor for UUID();
      if (__swift_getEnumTagSinglePayload((uint64_t)v43, 1, v44))
      {
        v45 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
        memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v42, v43, v44);
        __swift_storeEnumTagSinglePayload((uint64_t)v42, 0, 1, v44);
      }
      v61 = v18[11];
      v62 = (char *)a1 + v61;
      v63 = (char *)a2 + v61;
      *(_OWORD *)v62 = *(_OWORD *)v63;
      *((_QWORD *)v62 + 2) = *((_QWORD *)v63 + 2);
      v64 = v18[12];
      v65 = (char *)a1 + v64;
      v66 = (char *)a2 + v64;
      if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v64, 1, v44))
      {
        v67 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
        memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v65, v66, v44);
        __swift_storeEnumTagSinglePayload((uint64_t)v65, 0, 1, v44);
      }
      *(_QWORD *)((char *)a1 + v18[13]) = *(_QWORD *)((char *)a2 + v18[13]);
      goto LABEL_34;
    case 4u:
      *a1 = *a2;
      v24 = (int *)type metadata accessor for RecentCallRecentItemMetadata(0);
      v25 = v24[5];
      v26 = (char *)a1 + v25;
      v27 = (char *)a2 + v25;
      v28 = type metadata accessor for Date();
      if (__swift_getEnumTagSinglePayload((uint64_t)v27, 1, v28))
      {
        v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v26, v27, v28);
        __swift_storeEnumTagSinglePayload((uint64_t)v26, 0, 1, v28);
      }
      *(_QWORD *)((char *)a1 + v24[6]) = *(_QWORD *)((char *)a2 + v24[6]);
      v46 = v24[7];
      v47 = (char *)a1 + v46;
      v48 = (char *)a2 + v46;
      *(_QWORD *)v47 = *(_QWORD *)v48;
      v47[8] = v48[8];
      *(_QWORD *)((char *)a1 + v24[8]) = *(_QWORD *)((char *)a2 + v24[8]);
      *(_QWORD *)((char *)a1 + v24[9]) = *(_QWORD *)((char *)a2 + v24[9]);
      v49 = v24[10];
      v50 = (char *)a1 + v49;
      v51 = (char *)a2 + v49;
      v52 = type metadata accessor for UUID();
      if (__swift_getEnumTagSinglePayload((uint64_t)v51, 1, v52))
      {
        v53 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
        memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v50, v51, v52);
        __swift_storeEnumTagSinglePayload((uint64_t)v50, 0, 1, v52);
      }
      v68 = v24[11];
      v69 = (char *)a1 + v68;
      v70 = (char *)a2 + v68;
      *(_OWORD *)v69 = *(_OWORD *)v70;
      *((_QWORD *)v69 + 2) = *((_QWORD *)v70 + 2);
      v71 = v24[12];
      v72 = (char *)a1 + v71;
      v73 = (char *)a2 + v71;
      if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v71, 1, v52))
      {
        v74 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
        memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v72, v73, v52);
        __swift_storeEnumTagSinglePayload((uint64_t)v72, 0, 1, v52);
      }
      *(_QWORD *)((char *)a1 + v24[13]) = *(_QWORD *)((char *)a2 + v24[13]);
LABEL_34:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      break;
  }
  v75 = a3[6];
  *(_OWORD *)((char *)a1 + a3[5]) = *(_OWORD *)((char *)a2 + a3[5]);
  *(_OWORD *)((char *)a1 + v75) = *(_OWORD *)((char *)a2 + v75);
  v76 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  *(_OWORD *)((char *)a1 + v76) = *(_OWORD *)((char *)a2 + v76);
  v77 = a3[9];
  v78 = (char *)a1 + v77;
  v79 = (char *)a2 + v77;
  v80 = type metadata accessor for Date();
  if (__swift_getEnumTagSinglePayload((uint64_t)v79, 1, v80))
  {
    v81 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v80 - 8) + 32))(v78, v79, v80);
    __swift_storeEnumTagSinglePayload((uint64_t)v78, 0, 1, v80);
  }
  v82 = a3[11];
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  *(_QWORD *)((char *)a1 + v82) = *(_QWORD *)((char *)a2 + v82);
  v83 = a3[13];
  *(_QWORD *)((char *)a1 + a3[12]) = *(_QWORD *)((char *)a2 + a3[12]);
  *(_OWORD *)((char *)a1 + v83) = *(_OWORD *)((char *)a2 + v83);
  *(_QWORD *)((char *)a1 + a3[14]) = *(_QWORD *)((char *)a2 + a3[14]);
  return a1;
}

_OWORD *assignWithTake for RecentsCallItem(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  int *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  int EnumTagSinglePayload;
  int v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void *v104;
  uint64_t v105;
  void *v106;
  uint64_t v107;
  _QWORD *v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  void *v113;

  if (a1 != a2)
  {
    outlined destroy of RecentsCallItem((uint64_t)a1, type metadata accessor for RecentsCallItemType);
    v6 = type metadata accessor for RecentsCallItemType(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *a1 = *a2;
        v7 = (int *)type metadata accessor for RecentCallRecentItemMetadata(0);
        v8 = v7[5];
        v9 = (char *)a1 + v8;
        v10 = (char *)a2 + v8;
        v11 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
        {
          v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
          memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
          __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
        }
        *(_QWORD *)((char *)a1 + v7[6]) = *(_QWORD *)((char *)a2 + v7[6]);
        v30 = v7[7];
        v31 = (char *)a1 + v30;
        v32 = (char *)a2 + v30;
        *(_QWORD *)v31 = *(_QWORD *)v32;
        v31[8] = v32[8];
        *(_QWORD *)((char *)a1 + v7[8]) = *(_QWORD *)((char *)a2 + v7[8]);
        *(_QWORD *)((char *)a1 + v7[9]) = *(_QWORD *)((char *)a2 + v7[9]);
        v33 = v7[10];
        v34 = (char *)a1 + v33;
        v35 = (char *)a2 + v33;
        v36 = type metadata accessor for UUID();
        if (__swift_getEnumTagSinglePayload((uint64_t)v35, 1, v36))
        {
          v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
          memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v34, v35, v36);
          __swift_storeEnumTagSinglePayload((uint64_t)v34, 0, 1, v36);
        }
        v54 = v7[11];
        v55 = (char *)a1 + v54;
        v56 = (char *)a2 + v54;
        *(_OWORD *)v55 = *(_OWORD *)v56;
        *((_QWORD *)v55 + 2) = *((_QWORD *)v56 + 2);
        v57 = v7[12];
        v58 = (char *)a1 + v57;
        v59 = (char *)a2 + v57;
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v57, 1, v36))
        {
          v60 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
          memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v58, v59, v36);
          __swift_storeEnumTagSinglePayload((uint64_t)v58, 0, 1, v36);
        }
        *(_QWORD *)((char *)a1 + v7[13]) = *(_QWORD *)((char *)a2 + v7[13]);
        goto LABEL_35;
      case 1u:
        v13 = type metadata accessor for UUID();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
        v14 = (int *)type metadata accessor for RecentOngoingConversationMetadata(0);
        *(_QWORD *)((char *)a1 + v14[5]) = *(_QWORD *)((char *)a2 + v14[5]);
        *(_QWORD *)((char *)a1 + v14[6]) = *(_QWORD *)((char *)a2 + v14[6]);
        v15 = v14[7];
        v16 = (char *)a1 + v15;
        v17 = (char *)a2 + v15;
        *(_OWORD *)v16 = *(_OWORD *)v17;
        *((_QWORD *)v16 + 2) = *((_QWORD *)v17 + 2);
        goto LABEL_35;
      case 3u:
        *a1 = *a2;
        v18 = (int *)type metadata accessor for RecentCallRecentItemMetadata(0);
        v19 = v18[5];
        v20 = (char *)a1 + v19;
        v21 = (char *)a2 + v19;
        v22 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v21, 1, v22))
        {
          v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
          memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
          __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v22);
        }
        *(_QWORD *)((char *)a1 + v18[6]) = *(_QWORD *)((char *)a2 + v18[6]);
        v38 = v18[7];
        v39 = (char *)a1 + v38;
        v40 = (char *)a2 + v38;
        *(_QWORD *)v39 = *(_QWORD *)v40;
        v39[8] = v40[8];
        *(_QWORD *)((char *)a1 + v18[8]) = *(_QWORD *)((char *)a2 + v18[8]);
        *(_QWORD *)((char *)a1 + v18[9]) = *(_QWORD *)((char *)a2 + v18[9]);
        v41 = v18[10];
        v42 = (char *)a1 + v41;
        v43 = (char *)a2 + v41;
        v44 = type metadata accessor for UUID();
        if (__swift_getEnumTagSinglePayload((uint64_t)v43, 1, v44))
        {
          v45 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
          memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v42, v43, v44);
          __swift_storeEnumTagSinglePayload((uint64_t)v42, 0, 1, v44);
        }
        v61 = v18[11];
        v62 = (char *)a1 + v61;
        v63 = (char *)a2 + v61;
        *(_OWORD *)v62 = *(_OWORD *)v63;
        *((_QWORD *)v62 + 2) = *((_QWORD *)v63 + 2);
        v64 = v18[12];
        v65 = (char *)a1 + v64;
        v66 = (char *)a2 + v64;
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v64, 1, v44))
        {
          v67 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
          memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v65, v66, v44);
          __swift_storeEnumTagSinglePayload((uint64_t)v65, 0, 1, v44);
        }
        *(_QWORD *)((char *)a1 + v18[13]) = *(_QWORD *)((char *)a2 + v18[13]);
        goto LABEL_35;
      case 4u:
        *a1 = *a2;
        v24 = (int *)type metadata accessor for RecentCallRecentItemMetadata(0);
        v25 = v24[5];
        v26 = (char *)a1 + v25;
        v27 = (char *)a2 + v25;
        v28 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v27, 1, v28))
        {
          v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
          memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v26, v27, v28);
          __swift_storeEnumTagSinglePayload((uint64_t)v26, 0, 1, v28);
        }
        *(_QWORD *)((char *)a1 + v24[6]) = *(_QWORD *)((char *)a2 + v24[6]);
        v46 = v24[7];
        v47 = (char *)a1 + v46;
        v48 = (char *)a2 + v46;
        *(_QWORD *)v47 = *(_QWORD *)v48;
        v47[8] = v48[8];
        *(_QWORD *)((char *)a1 + v24[8]) = *(_QWORD *)((char *)a2 + v24[8]);
        *(_QWORD *)((char *)a1 + v24[9]) = *(_QWORD *)((char *)a2 + v24[9]);
        v49 = v24[10];
        v50 = (char *)a1 + v49;
        v51 = (char *)a2 + v49;
        v52 = type metadata accessor for UUID();
        if (__swift_getEnumTagSinglePayload((uint64_t)v51, 1, v52))
        {
          v53 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
          memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v50, v51, v52);
          __swift_storeEnumTagSinglePayload((uint64_t)v50, 0, 1, v52);
        }
        v68 = v24[11];
        v69 = (char *)a1 + v68;
        v70 = (char *)a2 + v68;
        *(_OWORD *)v69 = *(_OWORD *)v70;
        *((_QWORD *)v69 + 2) = *((_QWORD *)v70 + 2);
        v71 = v24[12];
        v72 = (char *)a1 + v71;
        v73 = (char *)a2 + v71;
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v71, 1, v52))
        {
          v74 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
          memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v72, v73, v52);
          __swift_storeEnumTagSinglePayload((uint64_t)v72, 0, 1, v52);
        }
        *(_QWORD *)((char *)a1 + v24[13]) = *(_QWORD *)((char *)a2 + v24[13]);
LABEL_35:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        break;
    }
  }
  v75 = a3[5];
  v76 = (_QWORD *)((char *)a1 + v75);
  v77 = (uint64_t *)((char *)a2 + v75);
  v79 = *v77;
  v78 = v77[1];
  *v76 = v79;
  v76[1] = v78;
  swift_bridgeObjectRelease();
  v80 = a3[6];
  v81 = (_QWORD *)((char *)a1 + v80);
  v82 = (uint64_t *)((char *)a2 + v80);
  v84 = *v82;
  v83 = v82[1];
  *v81 = v84;
  v81[1] = v83;
  swift_bridgeObjectRelease();
  v85 = a3[7];
  v86 = (_QWORD *)((char *)a1 + v85);
  v87 = (uint64_t *)((char *)a2 + v85);
  v89 = *v87;
  v88 = v87[1];
  *v86 = v89;
  v86[1] = v88;
  swift_bridgeObjectRelease();
  v90 = a3[8];
  v91 = (_QWORD *)((char *)a1 + v90);
  v92 = (uint64_t *)((char *)a2 + v90);
  v94 = *v92;
  v93 = v92[1];
  *v91 = v94;
  v91[1] = v93;
  swift_bridgeObjectRelease();
  v95 = a3[9];
  v96 = (char *)a1 + v95;
  v97 = (char *)a2 + v95;
  v98 = type metadata accessor for Date();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v96, 1, v98);
  v100 = __swift_getEnumTagSinglePayload((uint64_t)v97, 1, v98);
  if (!EnumTagSinglePayload)
  {
    v101 = *(_QWORD *)(v98 - 8);
    if (!v100)
    {
      (*(void (**)(char *, char *, uint64_t))(v101 + 40))(v96, v97, v98);
      goto LABEL_42;
    }
    (*(void (**)(char *, uint64_t))(v101 + 8))(v96, v98);
    goto LABEL_41;
  }
  if (v100)
  {
LABEL_41:
    v102 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v96, v97, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
    goto LABEL_42;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 32))(v96, v97, v98);
  __swift_storeEnumTagSinglePayload((uint64_t)v96, 0, 1, v98);
LABEL_42:
  v103 = a3[10];
  v104 = *(void **)((char *)a1 + v103);
  *(_QWORD *)((char *)a1 + v103) = *(_QWORD *)((char *)a2 + v103);

  v105 = a3[11];
  v106 = *(void **)((char *)a1 + v105);
  *(_QWORD *)((char *)a1 + v105) = *(_QWORD *)((char *)a2 + v105);

  *(_QWORD *)((char *)a1 + a3[12]) = *(_QWORD *)((char *)a2 + a3[12]);
  swift_bridgeObjectRelease();
  v107 = a3[13];
  v108 = (_QWORD *)((char *)a1 + v107);
  v109 = (uint64_t *)((char *)a2 + v107);
  v111 = *v109;
  v110 = v109[1];
  *v108 = v111;
  v108[1] = v110;
  swift_bridgeObjectRelease();
  v112 = a3[14];
  v113 = *(void **)((char *)a1 + v112);
  *(_QWORD *)((char *)a1 + v112) = *(_QWORD *)((char *)a2 + v112);

  return a1;
}

void sub_1BD396A20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  type metadata accessor for RecentsCallItemType(0);
  OUTLINED_FUNCTION_44_6();
  if (v9)
  {
    v7 = v6;
    v8 = a1;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    OUTLINED_FUNCTION_44_6();
    if (!v9)
    {
      OUTLINED_FUNCTION_93_0(*(_QWORD *)(a1 + *(int *)(a3 + 40)));
      OUTLINED_FUNCTION_18();
      return;
    }
    v7 = v10;
    v8 = a1 + *(int *)(a3 + 36);
  }
  OUTLINED_FUNCTION_1_16(v8, a2, v7);
}

void sub_1BD396A98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  type metadata accessor for RecentsCallItemType(0);
  OUTLINED_FUNCTION_45_7();
  if (v9)
  {
    v7 = OUTLINED_FUNCTION_399_1();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    OUTLINED_FUNCTION_45_7();
    if (!v9)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 40)) = (a2 - 1);
      OUTLINED_FUNCTION_18();
      return;
    }
    v8 = v10;
    v7 = a1 + *(int *)(a4 + 36);
  }
  OUTLINED_FUNCTION_0_29(v7, a2, a2, v8);
}

uint64_t storeEnumTagSinglePayload for RecentsCallItem.VideoMessageError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BD396B54 + 4 * byte_1BD65AC23[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BD396B74 + 4 * byte_1BD65AC28[v4]))();
}

_BYTE *sub_1BD396B54(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BD396B74(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BD396B7C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BD396B84(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BD396B8C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BD396B94(_DWORD *result)
{
  *result = 0;
  return result;
}

void type metadata accessor for RecentsCallItem.VideoMessageError()
{
  OUTLINED_FUNCTION_34_0();
}

unint64_t lazy protocol witness table accessor for type InCallControlsState and conformance InCallControlsState()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type InCallControlsState and conformance InCallControlsState;
  if (!lazy protocol witness table cache variable for type InCallControlsState and conformance InCallControlsState)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for InCallControlsState, &type metadata for InCallControlsState);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type InCallControlsState and conformance InCallControlsState);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type InCallControlsState and conformance InCallControlsState;
  if (!lazy protocol witness table cache variable for type InCallControlsState and conformance InCallControlsState)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for InCallControlsState, &type metadata for InCallControlsState);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type InCallControlsState and conformance InCallControlsState);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type TranscriptionViewModel.CaptionID and conformance TranscriptionViewModel.CaptionID()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type TranscriptionViewModel.CaptionID and conformance TranscriptionViewModel.CaptionID;
  if (!lazy protocol witness table cache variable for type TranscriptionViewModel.CaptionID and conformance TranscriptionViewModel.CaptionID)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for TranscriptionViewModel.CaptionID, &type metadata for TranscriptionViewModel.CaptionID);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type TranscriptionViewModel.CaptionID and conformance TranscriptionViewModel.CaptionID);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type TranscriptionViewModel.CaptionID and conformance TranscriptionViewModel.CaptionID;
  if (!lazy protocol witness table cache variable for type TranscriptionViewModel.CaptionID and conformance TranscriptionViewModel.CaptionID)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for TranscriptionViewModel.CaptionID, &type metadata for TranscriptionViewModel.CaptionID);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type TranscriptionViewModel.CaptionID and conformance TranscriptionViewModel.CaptionID);
  }
  return result;
}

void OUTLINED_FUNCTION_39_49(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(_QWORD);

  outlined init with copy of ConversationControlsAppLaunchButtonType(v2, (uint64_t)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
}

void OUTLINED_FUNCTION_85_16(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  specialized Set._Variant.insert(_:)((uint64_t)&a9, *(_QWORD *)(v10 + 8 * v15 + 32), v11, v12, v13, v14, a7, a8, a9, a10);
}

void OUTLINED_FUNCTION_89_17()
{
  _QWORD *v0;

  *v0 = 0x8000000000000000;
}

void OUTLINED_FUNCTION_93_9()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD);

  outlined init with take of StagedCollaboration(v0, v1, v2);
}

uint64_t OUTLINED_FUNCTION_106_11()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_116_5()
{
  return swift_unknownObjectRetain();
}

void OUTLINED_FUNCTION_117_9(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  outlined init with take of StagedCollaboration(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_118_11()
{
  return __CocoaSet.member(for:)();
}

uint64_t OUTLINED_FUNCTION_119_2(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

void OUTLINED_FUNCTION_130_5(uint64_t (*a1)(_QWORD)@<X2>, uint64_t a2@<X8>, uint64_t a3)
{
  uint64_t v3;

  outlined init with copy of ConversationControlsAppLaunchButtonType(v3, (uint64_t)&a3 - ((a2 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
}

uint64_t OUTLINED_FUNCTION_131_6()
{
  return type metadata accessor for RecentsCallItemType(0);
}

uint64_t OUTLINED_FUNCTION_132_8(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

void OUTLINED_FUNCTION_133_6(unint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << a1;
}

void OUTLINED_FUNCTION_143_5(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  outlined init with take of StagedCollaboration(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_145_6()
{
  int v0;
  uint64_t v1;

  *(_DWORD *)(v1 - 88) = v0;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_151_3(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v1, v2, a1);
}

uint64_t OUTLINED_FUNCTION_154_4()
{
  return swift_getEnumCaseMultiPayload();
}

void OUTLINED_FUNCTION_159_4(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  outlined destroy of RecentsCallItem(v2, a2);
}

uint64_t OUTLINED_FUNCTION_160_0(uint64_t a1, uint64_t *a2)
{
  return __swift_instantiateConcreteTypeFromMangledName(a2);
}

int *OUTLINED_FUNCTION_161_5(int *result)
{
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + result[6]) = 0;
  v2 = (_QWORD *)(v1 + result[11]);
  *v2 = 0;
  v2[1] = 0;
  v2[2] = 0;
  *(_QWORD *)(v1 + result[13]) = 0;
  return result;
}

void *OUTLINED_FUNCTION_162_4(void *result)
{
  return outlined copy of ConversationLink?(result);
}

void OUTLINED_FUNCTION_167_4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  outlined init with take of Any?(v4, v3, a3);
}

void OUTLINED_FUNCTION_169_1()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);

  outlined destroy of RecentsCallItem(v0, v1);
}

void OUTLINED_FUNCTION_171_1(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  outlined destroy of RecentsCallItem(v2, a2);
}

uint64_t OUTLINED_FUNCTION_173_3()
{
  return type metadata accessor for RecentsCallItemType(0);
}

uint64_t OUTLINED_FUNCTION_174_3()
{
  return type metadata accessor for RecentCallRecentItemMetadata(0);
}

void OUTLINED_FUNCTION_176_2()
{
  uint64_t v0;

  ++*(_QWORD *)(v0 + 16);
}

void OUTLINED_FUNCTION_181_3(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  outlined destroy of RecentsCallItem(a1, v1);
}

uint64_t OUTLINED_FUNCTION_182_3(uint64_t a1, uint64_t a2)
{
  return __swift_project_value_buffer(a1, a2);
}

uint64_t OUTLINED_FUNCTION_188_3()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_192_2(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[8] = a1;
  v1[4] = v2;
  v1[5] = v3;
  return String.init(format:_:)();
}

uint64_t OUTLINED_FUNCTION_193_2()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_194_2(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 304) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void *OUTLINED_FUNCTION_201_2(void *result)
{
  return outlined copy of ConversationLink?(result);
}

uint64_t OUTLINED_FUNCTION_203_2()
{
  return String.hash(into:)();
}

uint64_t OUTLINED_FUNCTION_207_4()
{
  return type metadata accessor for RecentsCallItemType(0);
}

void OUTLINED_FUNCTION_210_2()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;

  outlined destroy of RecentsCallItem(v1, v0);
}

uint64_t OUTLINED_FUNCTION_212_2()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t OUTLINED_FUNCTION_216_3()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

void OUTLINED_FUNCTION_217_2(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  outlined init with copy of ConversationControlsAppLaunchButtonType(a1, v3, a3);
}

Swift::Int OUTLINED_FUNCTION_219_3(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4, uint64_t a5, void (*a6)(unint64_t))
{
  uint64_t v6;

  return specialized _NativeSet.init(_:capacity:)(v6, a2, a3, a4, a5, a6);
}

void OUTLINED_FUNCTION_221_2(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  outlined destroy of RecentsCallItem(v2, a2);
}

uint64_t OUTLINED_FUNCTION_222_3()
{
  return __CocoaSet.count.getter();
}

void OUTLINED_FUNCTION_225_3(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v2, a2);
}

id OUTLINED_FUNCTION_228_3()
{
  void *v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_233_1()
{
  return dispatch thunk of Hashable.hash(into:)();
}

void OUTLINED_FUNCTION_236_4()
{
  uint64_t v0;
  uint64_t v1;

  __swift_storeEnumTagSinglePayload(v0, 0, 1, v1);
  specialized >> prefix<A>(_:)(v0);
}

id OUTLINED_FUNCTION_239_3()
{
  void *v0;

  return v0;
}

void OUTLINED_FUNCTION_241_3(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 168) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_242_3()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_252_2()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_255_2(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  outlined init with copy of ConversationControlsAppLaunchButtonType(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_257_3()
{
  return String.hash(into:)();
}

void OUTLINED_FUNCTION_259_2(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  outlined destroy of RecentsCallItem(*(_QWORD *)(v2 - 128), a2);
}

void OUTLINED_FUNCTION_260_2(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  outlined destroy of RecentsCallItem(v2, a2);
}

uint64_t OUTLINED_FUNCTION_261_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_262_3()
{
  return static NSObject.== infix(_:_:)();
}

uint64_t OUTLINED_FUNCTION_263_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

void OUTLINED_FUNCTION_264_1(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  outlined init with copy of ConversationControlsAppLaunchButtonType(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_269_4()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_270_0()
{
  return 0x454D495445434146;
}

uint64_t OUTLINED_FUNCTION_272_2()
{
  uint64_t v0;

  return v0;
}

void *OUTLINED_FUNCTION_273_3()
{
  void *v0;

  return outlined consume of ConversationLink?(v0);
}

void *OUTLINED_FUNCTION_274_3()
{
  void *v0;

  return outlined copy of ConversationLink?(v0);
}

void OUTLINED_FUNCTION_275_1(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(*(_QWORD *)(v2 - 104), a2);
}

void OUTLINED_FUNCTION_276_0()
{
  void *v0;

}

void OUTLINED_FUNCTION_277_3()
{
  void *v0;

}

void *OUTLINED_FUNCTION_278_1()
{
  void *v0;

  return outlined consume of ConversationLink?(v0);
}

uint64_t OUTLINED_FUNCTION_280_2@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(v2 + a1);
  result = *v3;
  v5 = v3[1];
  v6 = v3[2];
  *v1 = *v3;
  v1[1] = v5;
  v1[2] = v6;
  return result;
}

void *OUTLINED_FUNCTION_281_3()
{
  void *v0;

  return outlined consume of ConversationLink?(v0);
}

void OUTLINED_FUNCTION_282_1()
{
  uint64_t v0;

  specialized Sequence.compactMap<A>(_:)(v0);
}

void OUTLINED_FUNCTION_284_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD);

  outlined init with take of StagedCollaboration(v0, v1, v2);
}

uint64_t OUTLINED_FUNCTION_289_3()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_290_2(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(*(_QWORD *)(v2 - 160), a2);
}

void OUTLINED_FUNCTION_292_1(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  outlined init with copy of ConversationControlsAppLaunchButtonType(a1, v3, a3);
}

void *OUTLINED_FUNCTION_294_1()
{
  void *v0;

  return outlined consume of ConversationLink?(v0);
}

void *OUTLINED_FUNCTION_295_2()
{
  void *v0;

  return outlined copy of ConversationLink?(v0);
}

uint64_t OUTLINED_FUNCTION_299_1()
{
  uint64_t v0;

  return v0;
}

void *OUTLINED_FUNCTION_302_0()
{
  void *v0;

  return outlined consume of ConversationLink?(v0);
}

void *OUTLINED_FUNCTION_303_2()
{
  void *v0;

  return outlined copy of ConversationLink?(v0);
}

uint64_t OUTLINED_FUNCTION_304_1()
{
  _QWORD *v0;
  uint64_t v1;

  *v0 = v1;
  return 1;
}

uint64_t OUTLINED_FUNCTION_310_2()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t result;

  result = *v1;
  *v1 = v0;
  return result;
}

uint64_t OUTLINED_FUNCTION_312_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  result = type metadata accessor for RecentOngoingConversationMetadata(0);
  *(_QWORD *)(v0 + *(int *)(result + 20)) = v2;
  *(_QWORD *)(v0 + *(int *)(result + 24)) = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_313_2()
{
  uint64_t v0;

  type metadata accessor for RecentsCallItemType(0);
  return v0;
}

uint64_t OUTLINED_FUNCTION_314_1()
{
  return type metadata accessor for RecentsCallItemType(0);
}

void OUTLINED_FUNCTION_315_3()
{
  unint64_t *v0;

  type metadata accessor for NSObject(0, v0);
}

uint64_t OUTLINED_FUNCTION_316_2()
{
  return type metadata accessor for RecentCallRecentItemMetadata(0);
}

void *OUTLINED_FUNCTION_324_3()
{
  void **v0;

  return outlined consume of ConversationLink?(*v0);
}

uint64_t OUTLINED_FUNCTION_325_1()
{
  uint64_t v0;
  uint64_t v1;

  return *(_QWORD *)(v0 + *(int *)(v1 + 24));
}

void OUTLINED_FUNCTION_326_3(uint64_t a1)
{
  uint64_t *v1;

  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(a1, v1);
}

uint64_t OUTLINED_FUNCTION_329_1()
{
  return type metadata accessor for RecentOngoingConversationMetadata(0);
}

uint64_t OUTLINED_FUNCTION_333_1()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_334_1(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  outlined init with take of StagedCollaboration(a1, v3, a3);
}

void *OUTLINED_FUNCTION_335_1(void *result)
{
  return outlined consume of ConversationLink?(result);
}

void *OUTLINED_FUNCTION_336_2(void *result)
{
  return outlined copy of ConversationLink?(result);
}

uint64_t OUTLINED_FUNCTION_338_1()
{
  return 0;
}

id OUTLINED_FUNCTION_340_2()
{
  uint64_t v0;
  uint64_t v1;

  return *(id *)(v0 + *(int *)(v1 + 24));
}

uint64_t OUTLINED_FUNCTION_342_3()
{
  uint64_t v0;

  return v0 - 88;
}

uint64_t OUTLINED_FUNCTION_343_2()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_344_2()
{
  ConversationLink.prevailingSuggestion.getter();
}

uint64_t OUTLINED_FUNCTION_348_1()
{
  return Hasher.init(_seed:)();
}

uint64_t OUTLINED_FUNCTION_354_1()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_355_2(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  outlined init with copy of ConversationControlsAppLaunchButtonType(v4, v3, a3);
}

uint64_t OUTLINED_FUNCTION_357_1()
{
  return static UUID._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t OUTLINED_FUNCTION_358_1()
{
  return Set.init(minimumCapacity:)();
}

void OUTLINED_FUNCTION_359_0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  outlined init with take of Any?(v4, v3, a3);
}

void *OUTLINED_FUNCTION_367_1()
{
  void **v0;

  return outlined consume of ConversationLink?(*v0);
}

void OUTLINED_FUNCTION_368_2(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  outlined destroy of RecentsCallItem(v2, a2);
}

void OUTLINED_FUNCTION_369_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v1 + v0) = v4;

}

uint64_t OUTLINED_FUNCTION_370_2()
{
  return swift_unknownObjectRetain();
}

uint64_t OUTLINED_FUNCTION_371_1()
{
  return type metadata accessor for RecentCallRecentItemMetadata(0);
}

uint64_t OUTLINED_FUNCTION_374_1@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_376_2()
{
  return type metadata accessor for RecentOngoingConversationMetadata(0);
}

uint64_t OUTLINED_FUNCTION_377_1()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_378_2(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  outlined init with copy of ConversationControlsAppLaunchButtonType(v3, v4, a3);
}

uint64_t OUTLINED_FUNCTION_379_1()
{
  return Set.Iterator.init(_cocoa:)();
}

void OUTLINED_FUNCTION_380_2()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);

  outlined destroy of RecentsCallItem(v0, v1);
}

uint64_t OUTLINED_FUNCTION_381_1()
{
  uint64_t v0;

  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v0);
}

void OUTLINED_FUNCTION_382_0()
{
  uint64_t v0;
  uint64_t v1;

  specialized Set.hash(into:)(v0, v1);
}

void OUTLINED_FUNCTION_384()
{
  void *v0;

  outlined bridged method (pb) of @objc TUConversationLink.invitedMemberHandles.getter(v0);
}

uint64_t OUTLINED_FUNCTION_385_0()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_386()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_388_0(unint64_t *a1)
{
  unint64_t *v1;

  lazy protocol witness table accessor for type SGURL and conformance NSObject(a1, v1);
}

uint64_t OUTLINED_FUNCTION_393_0()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_394_1(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v2, a2);
}

uint64_t OUTLINED_FUNCTION_396_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_399_1()
{
  uint64_t v0;

  return v0;
}

void ClarityUIContactsList.__allocating_init()()
{
  swift_allocObject();
  ClarityUIContactsList.init()();
  OUTLINED_FUNCTION_0();
}

uint64_t ClarityUIContactsList.allContactIdentifiers.getter()
{
  swift_getKeyPath();
  _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type ClarityUIContactsList and conformance ClarityUIContactsList, (uint64_t (*)(uint64_t))type metadata accessor for ClarityUIContactsList, (uint64_t)&protocol conformance descriptor for ClarityUIContactsList);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_2_0();
  return swift_bridgeObjectRetain();
}

ConversationKit::ClarityUIContact __swiftcall ClarityUIContactsList.contact(for:)(Swift::String a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *object;
  uint64_t countAndFlagsBits;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, uint64_t);
  void *v15;
  _QWORD *v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  Class isa;
  id v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  void *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  objc_class *v40;
  objc_class *v41;
  uint64_t v42;
  void *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  id v48;
  id v49;
  uint64_t v50;
  char *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t);
  uint64_t v58;
  uint64_t v59;
  char *v60;
  void *v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  ConversationKit::ClarityUIContact result;

  v3 = v2;
  object = (char *)a1._object;
  countAndFlagsBits = a1._countAndFlagsBits;
  v6 = v1;
  v65 = *MEMORY[0x1E0C80C00];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Cache<String, ClarityUIContact>);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v51 - v12;
  OUTLINED_FUNCTION_79_1();
  ClarityUIContactsList.contactCache.getter((uint64_t)v13);
  v59 = countAndFlagsBits;
  v60 = object;
  OUTLINED_FUNCTION_13_88();
  swift_bridgeObjectRelease();
  v14 = *(void (**)(char *, uint64_t))(v8 + 8);
  v14(v13, v7);
  v15 = v61;
  outlined consume of ClarityUIContact?(v61, v62);
  if (v15)
    goto LABEL_28;
  v57 = v14;
  v55 = v11;
  v16 = (_QWORD *)OUTLINED_FUNCTION_25_50();
  v17 = specialized Collection<>.firstIndex(of:)(countAndFlagsBits, (uint64_t)object, v16);
  v19 = v18;
  OUTLINED_FUNCTION_27();
  v58 = v7;
  v54 = countAndFlagsBits;
  if ((v19 & 1) == 0)
  {
    v20 = *(_QWORD *)(v2 + OBJC_IVAR____TtC15ConversationKit21ClarityUIContactsList_maximumNumberOfContactsPerFetch)
        / 2;
    countAndFlagsBits = v17 - v20;
    if (!__OFSUB__(v17, v20))
    {
      v21 = *(_QWORD *)(OUTLINED_FUNCTION_25_50() + 16);
      swift_bridgeObjectRelease();
      if (__OFADD__(v17, v20))
      {
LABEL_34:
        __break(1u);
        goto LABEL_35;
      }
      v22 = countAndFlagsBits & ~(countAndFlagsBits >> 63);
      if (v17 + v20 >= v21)
        countAndFlagsBits = v21;
      else
        countAndFlagsBits = v17 + v20;
      if (countAndFlagsBits < v22)
      {
        __break(1u);
        JUMPOUT(0x1BD398048);
      }
      v52 = v6;
      v56 = v3;
      v51 = object;
      v53 = v22;
      if (v22 == countAndFlagsBits)
      {
LABEL_10:
        v23 = *(_QWORD *)(v3 + 24);
        v24 = (void *)objc_opt_self();
        isa = Array._bridgeToObjectiveC()().super.isa;
        OUTLINED_FUNCTION_13_3();
        v26 = objc_msgSend(v24, sel_predicateForContactsWithIdentifiers_, isa, v51, v52);

        static ClarityUIContact.requiredDescriptors(for:)(v23);
      }
      if (v22 >= countAndFlagsBits)
      {
        __break(1u);
        JUMPOUT(0x1BD398094);
      }
      v6 = (_QWORD *)(16 * v22);
      v31 = MEMORY[0x1E0DEE9D8];
      object = (char *)v22;
      v7 = v58;
      while (1)
      {
        v32 = OUTLINED_FUNCTION_25_50();
        if ((unint64_t)object >= *(_QWORD *)(v32 + 16))
          break;
        v34 = *(_QWORD *)((char *)v6 + v32 + 32);
        v33 = *(char **)((char *)v6 + v32 + 40);
        OUTLINED_FUNCTION_16_31();
        OUTLINED_FUNCTION_27();
        ClarityUIContactsList.contactCache.getter((uint64_t)v13);
        v59 = v34;
        v60 = v33;
        OUTLINED_FUNCTION_13_88();
        swift_bridgeObjectRelease();
        v57(v13, v7);
        v35 = v61;
        outlined consume of ClarityUIContact?(v61, v62);
        if (v35)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            OUTLINED_FUNCTION_36_12();
            v31 = v38;
          }
          v36 = *(_QWORD *)(v31 + 16);
          if (v36 >= *(_QWORD *)(v31 + 24) >> 1)
          {
            OUTLINED_FUNCTION_36_12();
            v31 = v39;
          }
          *(_QWORD *)(v31 + 16) = v36 + 1;
          v37 = v31 + 16 * v36;
          *(_QWORD *)(v37 + 32) = v34;
          *(_QWORD *)(v37 + 40) = v33;
          v3 = v56;
        }
        ++object;
        v6 += 2;
        if ((char *)countAndFlagsBits == object)
          goto LABEL_10;
      }
      __break(1u);
    }
    __break(1u);
    goto LABEL_34;
  }
  if (one-time initialization token for clarityUI != -1)
LABEL_35:
    swift_once();
  v27 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v27, (uint64_t)&static Log.clarityUI);
  OUTLINED_FUNCTION_16_31();
  v28 = Logger.logObject.getter();
  v29 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v28, v29))
  {
    v30 = (uint8_t *)OUTLINED_FUNCTION_105();
    v61 = (void *)OUTLINED_FUNCTION_105();
    *(_DWORD *)v30 = 136315138;
    OUTLINED_FUNCTION_79_1();
    v59 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v54, (unint64_t)object, (uint64_t *)&v61);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    OUTLINED_FUNCTION_48(&dword_1BD004000, v28, v29, "Unable to find index of identifier %s.", v30);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  swift_bridgeObjectRelease_n();
  v11 = v55;
  v14 = v57;
LABEL_28:
  OUTLINED_FUNCTION_79_1();
  ClarityUIContactsList.contactCache.getter((uint64_t)v11);
  v59 = countAndFlagsBits;
  v60 = object;
  Cache.subscript.getter();
  swift_bridgeObjectRelease();
  v40 = (objc_class *)((uint64_t (*)(char *, uint64_t))v14)(v11, v7);
  v44 = v61;
  if (v61)
  {
    v46 = v63;
    v45 = v64;
    v47 = v62;
  }
  else
  {
    v48 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97200]), sel_init);
    v47 = *(id *)(v3 + 24);
    v44 = v48;
    v49 = objc_msgSend(v44, sel_identifier);
    v46 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v45 = v50;

  }
  *v6 = v44;
  v6[1] = v47;
  v6[2] = v46;
  v6[3] = v45;
  result.id._object = v43;
  result.id._countAndFlagsBits = v42;
  result.contactStore.super.isa = v41;
  result.cnContact.super.isa = v40;
  return result;
}

uint64_t key path getter for ClarityUIContactsList.allContactIdentifiers : ClarityUIContactsList@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = ClarityUIContactsList.allContactIdentifiers.getter();
  *a1 = result;
  return result;
}

uint64_t key path setter for ClarityUIContactsList.allContactIdentifiers : ClarityUIContactsList()
{
  swift_bridgeObjectRetain();
  return ClarityUIContactsList.allContactIdentifiers.setter();
}

uint64_t ClarityUIContactsList.allContactIdentifiers.setter()
{
  swift_getKeyPath();
  specialized ClarityUIContactsList.withMutation<A, B>(keyPath:_:)();
  OUTLINED_FUNCTION_22();
  return OUTLINED_FUNCTION_13_3();
}

uint64_t ClarityUIContactsList.access<A>(keyPath:)()
{
  _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type ClarityUIContactsList and conformance ClarityUIContactsList, (uint64_t (*)(uint64_t))type metadata accessor for ClarityUIContactsList, (uint64_t)&protocol conformance descriptor for ClarityUIContactsList);
  return ObservationRegistrar.access<A, B>(_:keyPath:)();
}

uint64_t closure #1 in ClarityUIContactsList.allContactIdentifiers.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(_QWORD *)(a1 + 16) = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t specialized ClarityUIContactsList.withMutation<A, B>(keyPath:_:)()
{
  _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type ClarityUIContactsList and conformance ClarityUIContactsList, (uint64_t (*)(uint64_t))type metadata accessor for ClarityUIContactsList, (uint64_t)&protocol conformance descriptor for ClarityUIContactsList);
  return ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
}

uint64_t ClarityUIContactsList.withMutation<A, B>(keyPath:_:)()
{
  _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type ClarityUIContactsList and conformance ClarityUIContactsList, (uint64_t (*)(uint64_t))type metadata accessor for ClarityUIContactsList, (uint64_t)&protocol conformance descriptor for ClarityUIContactsList);
  return ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
}

void (*ClarityUIContactsList.allContactIdentifiers.modify(_QWORD *a1))(_QWORD **a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;

  v2 = v1;
  v4 = malloc(0x30uLL);
  *a1 = v4;
  v4[3] = v2;
  swift_getKeyPath();
  v4[4] = OBJC_IVAR____TtC15ConversationKit21ClarityUIContactsList___observationRegistrar;
  *v4 = v2;
  _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type ClarityUIContactsList and conformance ClarityUIContactsList, (uint64_t (*)(uint64_t))type metadata accessor for ClarityUIContactsList, (uint64_t)&protocol conformance descriptor for ClarityUIContactsList);
  v4[5] = v5;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  *v4 = v2;
  swift_getKeyPath();
  ObservationRegistrar.willSet<A, B>(_:keyPath:)();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_2_0();
  return ClarityUIContactsList.allContactIdentifiers.modify;
}

void ClarityUIContactsList.allContactIdentifiers.modify(_QWORD **a1)
{
  _QWORD *v1;

  v1 = *a1;
  swift_endAccess();
  *v1 = v1[3];
  swift_getKeyPath();
  ObservationRegistrar.didSet<A, B>(_:keyPath:)();
  OUTLINED_FUNCTION_22();
  free(v1);
}

uint64_t ClarityUIContactsList.contactStoreDidUpdateTask.getter()
{
  swift_getKeyPath();
  _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type ClarityUIContactsList and conformance ClarityUIContactsList, (uint64_t (*)(uint64_t))type metadata accessor for ClarityUIContactsList, (uint64_t)&protocol conformance descriptor for ClarityUIContactsList);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return swift_retain();
}

uint64_t key path setter for ClarityUIContactsList.contactStoreDidUpdateTask : ClarityUIContactsList()
{
  swift_retain();
  return ClarityUIContactsList.contactStoreDidUpdateTask.setter();
}

uint64_t ClarityUIContactsList.contactStoreDidUpdateTask.setter()
{
  swift_getKeyPath();
  specialized ClarityUIContactsList.withMutation<A, B>(keyPath:_:)();
  swift_release();
  return swift_release();
}

uint64_t closure #1 in ClarityUIContactsList.contactStoreDidUpdateTask.setter(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)(a1 + 32) = a2;
  swift_retain();
  return swift_release();
}

uint64_t ClarityUIContactsList.contactCache.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  swift_getKeyPath();
  _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type ClarityUIContactsList and conformance ClarityUIContactsList, (uint64_t (*)(uint64_t))type metadata accessor for ClarityUIContactsList, (uint64_t)&protocol conformance descriptor for ClarityUIContactsList);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  v3 = v1 + OBJC_IVAR____TtC15ConversationKit21ClarityUIContactsList__contactCache;
  swift_beginAccess();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Cache<String, ClarityUIContact>);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t key path setter for ClarityUIContactsList.contactCache : ClarityUIContactsList(uint64_t a1)
{
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Cache<String, ClarityUIContact>);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v6 + 16))(v5, a1, v3);
  return ClarityUIContactsList.contactCache.setter((uint64_t)v5);
}

uint64_t ClarityUIContactsList.contactCache.setter(uint64_t a1)
{
  uint64_t v2;

  swift_getKeyPath();
  specialized ClarityUIContactsList.withMutation<A, B>(keyPath:_:)();
  swift_release();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Cache<String, ClarityUIContact>);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t closure #1 in ClarityUIContactsList.contactCache.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a1 + OBJC_IVAR____TtC15ConversationKit21ClarityUIContactsList__contactCache;
  swift_beginAccess();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Cache<String, ClarityUIContact>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(v3, a2, v4);
  return swift_endAccess();
}

_QWORD *ClarityUIContactsList.init()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v16;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Cache<String, ClarityUIContact>);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1[2] = MEMORY[0x1E0DEE9D8];
  v1[3] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97298]), sel_init);
  v1[4] = 0;
  Cache.init(countLimit:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))((uint64_t)v1 + OBJC_IVAR____TtC15ConversationKit21ClarityUIContactsList__contactCache, v8, v5);
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC15ConversationKit21ClarityUIContactsList_fetchDelay) = 0x3FB999999999999ALL;
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC15ConversationKit21ClarityUIContactsList_maximumNumberOfContactsPerFetch) = 100;
  v9 = OBJC_IVAR____TtC15ConversationKit21ClarityUIContactsList_favoritesList;
  if (one-time initialization token for shared != -1)
    swift_once();
  *(_QWORD *)((char *)v1 + v9) = static ClarityUIFavoritesList.shared;
  swift_retain();
  ObservationRegistrar.init()();
  ClarityUIContactsList.updateFromContactStore()();
  v10 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload((uint64_t)v4, 1, 1, v10);
  v11 = OUTLINED_FUNCTION_15();
  swift_weakInit();
  type metadata accessor for MainActor();
  swift_retain();
  v12 = static MainActor.shared.getter();
  v13 = (_QWORD *)OUTLINED_FUNCTION_15();
  v14 = MEMORY[0x1E0DF06E8];
  v13[2] = v12;
  v13[3] = v14;
  v13[4] = v11;
  OUTLINED_FUNCTION_22();
  _sScTss5Error_pRs_rlE8priority9operationScTyxsAA_pGScPSg_xyYaKYAcntcfCyt_Tgm5((uint64_t)v4, (uint64_t)&async function pointer to partial apply for closure #1 in ClarityUIContactsList.init(), (uint64_t)v13);
  ClarityUIContactsList.contactStoreDidUpdateTask.setter();
  return v1;
}

void sub_1BD398AB4(uint64_t *a1@<X8>)
{
  *a1 = ClarityUIContactsList.allContactIdentifiers.getter();
  OUTLINED_FUNCTION_0();
}

uint64_t type metadata accessor for ClarityUIContactsList()
{
  uint64_t result;

  result = type metadata singleton initialization cache for ClarityUIContactsList;
  if (!type metadata singleton initialization cache for ClarityUIContactsList)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t ClarityUIContactsList.updateFromContactStore()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v14;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Cache<String, ClarityUIContact>);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  ClarityUIContactsList.contactCache.getter((uint64_t)v8);
  Cache.removeAllObjects()();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v9 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload((uint64_t)v4, 1, 1, v9);
  type metadata accessor for MainActor();
  swift_retain();
  v10 = static MainActor.shared.getter();
  v11 = (_QWORD *)swift_allocObject();
  v12 = MEMORY[0x1E0DF06E8];
  v11[2] = v10;
  v11[3] = v12;
  v11[4] = v1;
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
  return swift_release();
}

uint64_t closure #1 in ClarityUIContactsList.init()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[13] = a4;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Notification?);
  v4[14] = swift_task_alloc();
  v5 = type metadata accessor for Notification();
  v4[15] = v5;
  v4[16] = *(_QWORD *)(v5 - 8);
  v4[17] = swift_task_alloc();
  v4[18] = type metadata accessor for NSNotificationCenter.Notifications.Iterator();
  v4[19] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AsyncMapSequence<NSNotificationCenter.Notifications, String>);
  v4[20] = v6;
  v4[21] = *(_QWORD *)(v6 - 8);
  v4[22] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncMapSequence<NSNotificationCenter.Notifications, String>.Iterator);
  v4[23] = v7;
  v4[24] = *(_QWORD *)(v7 - 8);
  v4[25] = swift_task_alloc();
  v4[26] = swift_task_alloc();
  v4[27] = type metadata accessor for MainActor();
  v4[28] = static MainActor.shared.getter();
  v4[29] = dispatch thunk of Actor.unownedExecutor.getter();
  v4[30] = v8;
  return swift_task_switch();
}

uint64_t closure #1 in ClarityUIContactsList.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v1 = v0[22];
  v10 = v0[21];
  v2 = v0[20];
  v3 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  v4 = NSNotificationCenter.notifications(named:object:)();

  v0[11] = v4;
  type metadata accessor for NSNotificationCenter.Notifications();
  _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type NSNotificationCenter.Notifications and conformance NSNotificationCenter.Notifications, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1EF0], MEMORY[0x1E0CB1F00]);
  AsyncMapSequence.init(_:transform:)();
  AsyncMapSequence.base.getter();
  dispatch thunk of AsyncSequence.makeAsyncIterator()();
  AsyncMapSequence.Iterator.transform.getter();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v1, v2);
  AsyncMapSequence.Iterator.init(_:transform:)();
  OUTLINED_FUNCTION_2_0();
  v5 = static MainActor.shared.getter();
  v0[31] = v5;
  if (v5)
  {
    swift_getObjectType();
    v6 = dispatch thunk of Actor.unownedExecutor.getter();
    v8 = v7;
  }
  else
  {
    v6 = 0;
    v8 = 0;
  }
  v0[32] = v6;
  v0[33] = v8;
  return swift_task_switch();
}

{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 272) = AsyncMapSequence.Iterator.baseIterator.modify();
  _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type NSNotificationCenter.Notifications.Iterator and conformance NSNotificationCenter.Notifications.Iterator, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1EE0], MEMORY[0x1E0CB1EE8]);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 280) = v1;
  *v1 = v0;
  v1[1] = closure #1 in ClarityUIContactsList.init();
  return _sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;

  v2 = *v1;
  v4 = *v1;
  OUTLINED_FUNCTION_9_7(&v4);
  if (!v0)
    (*(void (**)(uint64_t, _QWORD))(v2 + 272))(v2 + 16, 0);
  return OUTLINED_FUNCTION_2_8();
}

{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  _QWORD *v11;
  int *v12;

  v2 = v0[14];
  v1 = v0[15];
  if (__swift_getEnumTagSinglePayload(v2, 1, v1) == 1)
  {
    outlined destroy of Notification?(v2);
    OUTLINED_FUNCTION_19();
    return OUTLINED_FUNCTION_2_108();
  }
  else
  {
    v5 = v0[25];
    v4 = v0[26];
    v6 = v0[23];
    v7 = v0[24];
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v0[16] + 32))(v0[17], v2, v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v5, v4, v6);
    v8 = (int *)AsyncMapSequence.Iterator.transform.getter();
    v0[36] = v9;
    v10 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v0[37] = v10;
    v10(v5, v6);
    v12 = (int *)((char *)v8 + *v8);
    v11 = (_QWORD *)swift_task_alloc();
    v0[38] = v11;
    *v11 = v0;
    v11[1] = closure #1 in ClarityUIContactsList.init();
    return ((uint64_t (*)(_QWORD *, _QWORD))v12)(v0 + 9, v0[17]);
  }
}

{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 272))(v0 + 16, 1);
}

{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v6;

  v1 = (_QWORD *)*v0;
  v6 = v1;
  v3 = v1[16];
  v2 = v1[17];
  v4 = v1[15];
  OUTLINED_FUNCTION_9_7(&v6);
  OUTLINED_FUNCTION_43();
  v1[39] = v1[10];
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch();
}

{
  swift_release();
  return swift_task_switch();
}

{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t);

  swift_bridgeObjectRelease();
  if (swift_weakLoadStrong())
  {
    if (one-time initialization token for clarityUI != -1)
      swift_once();
    v1 = OUTLINED_FUNCTION_17_2();
    __swift_project_value_buffer(v1, (uint64_t)&static Log.clarityUI);
    v2 = Logger.logObject.getter();
    v3 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v2, v3))
    {
      v4 = (uint8_t *)OUTLINED_FUNCTION_105();
      *(_WORD *)v4 = 0;
      _os_log_impl(&dword_1BD004000, v2, v3, "Contact store did change.", v4, 2u);
      OUTLINED_FUNCTION_60();
    }

    ClarityUIContactsList.updateFromContactStore()();
    OUTLINED_FUNCTION_19();
    v5 = static MainActor.shared.getter();
    *(_QWORD *)(v0 + 248) = v5;
    if (v5)
    {
      swift_getObjectType();
      v6 = dispatch thunk of Actor.unownedExecutor.getter();
      v8 = v7;
    }
    else
    {
      v6 = 0;
      v8 = 0;
    }
    *(_QWORD *)(v0 + 256) = v6;
    *(_QWORD *)(v0 + 264) = v8;
    return OUTLINED_FUNCTION_2_108();
  }
  else
  {
    v9 = *(_QWORD *)(v0 + 208);
    OUTLINED_FUNCTION_23_61();
    v10(v9);
    OUTLINED_FUNCTION_43();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return OUTLINED_FUNCTION_66_0(*(uint64_t (**)(void))(v0 + 8));
  }
}

{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);

  v1 = *(_QWORD *)(v0 + 208);
  OUTLINED_FUNCTION_23_61();
  v2(v1);
  OUTLINED_FUNCTION_19();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_66_0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t closure #1 in ClarityUIContactsList.updateFromContactStore()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;

  v4[2] = a4;
  v4[3] = type metadata accessor for MainActor();
  v4[4] = static MainActor.shared.getter();
  v5 = (_QWORD *)swift_task_alloc();
  v4[5] = v5;
  *v5 = v4;
  v5[1] = closure #1 in ClarityUIContactsList.updateFromContactStore();
  return ClarityUIContactsList.fetchContactIdentifiers()();
}

uint64_t closure #1 in ClarityUIContactsList.updateFromContactStore()(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = a1;
  swift_task_dealloc();
  dispatch thunk of Actor.unownedExecutor.getter();
  return OUTLINED_FUNCTION_2_8();
}

uint64_t closure #1 in ClarityUIContactsList.updateFromContactStore()()
{
  uint64_t v0;

  swift_release();
  ClarityUIContactsList.allContactIdentifiers.setter();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ClarityUIContactsList.fetchContactIdentifiers()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 72) = v0;
  type metadata accessor for MainActor();
  *(_QWORD *)(v1 + 80) = static MainActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  return swift_task_switch();
}

{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  Swift::OpaquePointer v4;
  CNContactFetchRequest v5;
  void *v6;
  _QWORD *p_base_props;
  uint64_t v8;
  uint64_t *v9;
  void *v10;
  unsigned int v11;
  id v12;
  uint64_t isEscapingClosureAtFileLocation;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v42;
  Class isa;
  uint64_t v44[3];

  v44[2] = *MEMORY[0x1E0C80C00];
  v1 = v0[9];
  v2 = swift_release();
  v0[8] = MEMORY[0x1E0DEE9E0];
  v3 = OUTLINED_FUNCTION_17_8(v2, &lazy cache variable for type metadata for CNContactFetchRequest);
  OUTLINED_FUNCTION_17_8(v3, (unint64_t *)&lazy cache variable for type metadata for CNContact);
  static CNContact.requiredDescriptorsForClarityUIDisplayName.getter();
  v5.super.super.isa = CNContactFetchRequest.__allocating_init(keysToFetch:)(v4).super.super.isa;
  -[objc_class setUnifyResults:](v5.super.super.isa, sel_setUnifyResults_, 1);
  -[objc_class setSortOrder:](v5.super.super.isa, sel_setSortOrder_, 0);
  v6 = *(void **)(v1 + 24);
  p_base_props = (_QWORD *)OUTLINED_FUNCTION_15();
  p_base_props[2] = v1;
  p_base_props[3] = v0 + 8;
  v8 = OUTLINED_FUNCTION_15();
  v0[2] = MEMORY[0x1E0C809B0];
  v9 = v0 + 2;
  *(_QWORD *)(v8 + 16) = partial apply for closure #1 in ClarityUIContactsList.fetchContactIdentifiers();
  *(_QWORD *)(v8 + 24) = p_base_props;
  v0[6] = partial apply for thunk for @escaping @callee_guaranteed () -> (@owned String);
  v0[7] = v8;
  v0[3] = 1107296256;
  v0[4] = thunk for @escaping @callee_guaranteed (@guaranteed CNContact, @unowned UnsafeMutablePointer<ObjCBool>) -> ();
  v0[5] = &block_descriptor_67;
  v10 = _Block_copy(v0 + 2);
  swift_retain();
  swift_retain();
  swift_release();
  v0[2] = 0;
  v11 = objc_msgSend(v6, sel_enumerateContactsWithFetchRequest_error_usingBlock_, v5.super.super.isa, v0 + 2, v10);
  _Block_release(v10);
  v12 = (id)v0[2];
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  OUTLINED_FUNCTION_43();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
LABEL_26:
    swift_once();
    goto LABEL_4;
  }
  p_base_props = &ParticipantVideoOverlayView.base_props;
  isEscapingClosureAtFileLocation = (uint64_t)(v0 + 8);
  if (v11)
    goto LABEL_7;
  _convertNSErrorToError(_:)();

  swift_willThrow();
  if (one-time initialization token for clarityUI != -1)
    goto LABEL_26;
LABEL_4:
  v14 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v14, (uint64_t)&static Log.clarityUI);
  OUTLINED_FUNCTION_33_46();
  OUTLINED_FUNCTION_33_46();
  v15 = Logger.logObject.getter();
  v16 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)OUTLINED_FUNCTION_105();
    v42 = (_QWORD *)OUTLINED_FUNCTION_105();
    *(_DWORD *)v17 = 138412290;
    OUTLINED_FUNCTION_33_46();
    v18 = _swift_stdlib_bridgeErrorToNSError();
    *v9 = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *v42 = v18;
    OUTLINED_FUNCTION_11_13();
    OUTLINED_FUNCTION_11_13();
    OUTLINED_FUNCTION_48(&dword_1BD004000, v15, v16, "Unable to enumerate contact identifiers: %@", v17);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_11_13();
  OUTLINED_FUNCTION_11_13();
  OUTLINED_FUNCTION_11_13();

LABEL_7:
  v19 = *(_QWORD *)isEscapingClosureAtFileLocation;
  OUTLINED_FUNCTION_16_31();
  v20 = specialized _copyCollectionToContiguousArray<A>(_:)(v19);
  OUTLINED_FUNCTION_27();
  v44[0] = v20;
  specialized MutableCollection<>.sort(by:)(v44);
  OUTLINED_FUNCTION_27();
  v21 = v44[0];
  if (p_base_props[466] != -1)
    swift_once();
  v22 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v22, (uint64_t)&static Log.clarityUI);
  swift_bridgeObjectRetain();
  v23 = Logger.logObject.getter();
  v24 = static os_log_type_t.default.getter();
  isa = v5.super.super.isa;
  if (os_log_type_enabled(v23, v24))
  {
    v25 = (uint8_t *)OUTLINED_FUNCTION_105();
    *(_DWORD *)v25 = 134217984;
    *v9 = *(_QWORD *)(v21 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_11_0();
    OUTLINED_FUNCTION_48(&dword_1BD004000, v23, v24, "Number of contacts: %ld", v25);
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_11_0();

  v26 = *(_QWORD *)(v21 + 16);
  if (v26)
  {
    v27 = (uint64_t *)(v21 + 40);
    v28 = MEMORY[0x1E0DEE9D8];
    do
    {
      v29 = *(_QWORD *)isEscapingClosureAtFileLocation;
      if (*(_QWORD *)(*(_QWORD *)isEscapingClosureAtFileLocation + 16))
      {
        v31 = *(v27 - 1);
        v30 = *v27;
        swift_bridgeObjectRetain();
        v32 = specialized __RawDictionaryStorage.find<A>(_:)(v31, v30);
        if ((v33 & 1) != 0)
        {
          v34 = (uint64_t *)(*(_QWORD *)(v29 + 56) + 16 * v32);
          v36 = *v34;
          v35 = v34[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            OUTLINED_FUNCTION_37_41();
            v28 = v39;
          }
          v37 = *(_QWORD *)(v28 + 16);
          if (v37 >= *(_QWORD *)(v28 + 24) >> 1)
          {
            OUTLINED_FUNCTION_37_41();
            v28 = v40;
          }
          *(_QWORD *)(v28 + 16) = v37 + 1;
          v38 = v28 + 16 * v37;
          *(_QWORD *)(v38 + 32) = v36;
          *(_QWORD *)(v38 + 40) = v35;
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
      v27 += 2;
      --v26;
    }
    while (v26);
  }
  else
  {
    v28 = MEMORY[0x1E0DEE9D8];
  }
  OUTLINED_FUNCTION_11_0();

  swift_bridgeObjectRelease();
  swift_release();
  return ((uint64_t (*)(uint64_t))v0[1])(v28);
}

uint64_t closure #1 in ClarityUIContactsList.fetchContactIdentifiers()(void *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  id v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  id v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v29;

  v1 = *(_QWORD *)(ClarityUIFavoritesList.favorites.getter() + 16);
  if (v1)
  {
    v2 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
    while (1)
    {
      v4 = *(v2 - 1);
      v3 = *v2;
      v5 = (void *)v2[2];
      v6 = (void *)v2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v29 = v5;
      v7 = v6;
      swift_bridgeObjectRetain();
      v8 = objc_msgSend(a1, sel_identifier);
      v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v11 = v10;

      if (v4 == v9 && v3 == v11)
        break;
      v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v13 & 1) != 0)
        return swift_bridgeObjectRelease_n();
      v2 += 7;
      if (!--v1)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_11:
    if (one-time initialization token for shared != -1)
      swift_once();
    if ((ClarityUIOutgoingCallActionProvider.areEmailAddressesRelevant.getter() & 1) != 0)
    {
      v14 = objc_msgSend(a1, sel_emailAddresses);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for CNLabeledValue);
      v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v15 >> 62)
      {
        swift_bridgeObjectRetain();
        v16 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      if (v16)
        goto LABEL_21;
    }
    result = ClarityUIOutgoingCallActionProvider.arePhoneNumbersRelevant.getter();
    if ((result & 1) != 0)
    {
      v18 = objc_msgSend(a1, sel_phoneNumbers);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for CNLabeledValue);
      v19 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v19 >> 62)
      {
        swift_bridgeObjectRetain();
        v20 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      result = swift_bridgeObjectRelease();
      if (v20)
      {
LABEL_21:
        v21 = CNContact.clarityUIDisplayName.getter();
        v23 = v22;
        v24 = objc_msgSend(a1, sel_identifier);
        v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        v27 = v26;

        specialized Dictionary._Variant.setValue(_:forKey:)(v25, v27, v21, v23);
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

void thunk for @escaping @callee_guaranteed (@guaranteed CNContact, @unowned UnsafeMutablePointer<ObjCBool>) -> ()(uint64_t a1, void *a2)
{
  void (*v2)(void);
  id v3;

  v2 = *(void (**)(void))(a1 + 32);
  v3 = a2;
  v2();

}

void ClarityUIContactsList.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();

  swift_release();
  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Cache<String, ClarityUIContact>);
  OUTLINED_FUNCTION_17_1(v1);
  swift_release();
  v2 = type metadata accessor for ObservationRegistrar();
  OUTLINED_FUNCTION_17_1(v2);
  OUTLINED_FUNCTION_0();
}

uint64_t ClarityUIContactsList.__deallocating_deinit()
{
  ClarityUIContactsList.deinit();
  return swift_deallocClassInstance();
}

void *outlined consume of ClarityUIContact?(void *result, void *a2)
{
  if (result)
  {

    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1BD39A080(uint64_t a1@<X8>)
{
  ClarityUIContactsList.contactCache.getter(a1);
  OUTLINED_FUNCTION_0();
}

uint64_t partial apply for closure #1 in ClarityUIContactsList.allContactIdentifiers.setter()
{
  uint64_t v0;

  return closure #1 in ClarityUIContactsList.allContactIdentifiers.setter(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1BD39A0B8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ClarityUIContactsList.init()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_7_11(v1);
  return closure #1 in ClarityUIContactsList.init()(v2, v3, v4, v5);
}

uint64_t ObjC metadata update function for ClarityUIContactsList()
{
  return type metadata accessor for ClarityUIContactsList();
}

void type metadata completion function for ClarityUIContactsList()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for Cache<String, ClarityUIContact>();
  if (v0 <= 0x3F)
  {
    type metadata accessor for ObservationRegistrar();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for ClarityUIContactsList()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ClarityUIContactsList.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

void type metadata accessor for Cache<String, ClarityUIContact>()
{
  unint64_t v0;
  uint64_t v1;

  if (!lazy cache variable for type metadata for Cache<String, ClarityUIContact>)
  {
    v0 = type metadata accessor for Cache();
    if (!v1)
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Cache<String, ClarityUIContact>);
  }
}

void sub_1BD39A278(uint64_t *a1@<X8>)
{
  *a1 = ClarityUIContactsList.contactStoreDidUpdateTask.getter();
  OUTLINED_FUNCTION_0();
}

uint64_t partial apply for closure #1 in ClarityUIContactsList.contactStoreDidUpdateTask.setter()
{
  uint64_t v0;

  return closure #1 in ClarityUIContactsList.contactStoreDidUpdateTask.setter(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t partial apply for closure #1 in ClarityUIContactsList.updateFromContactStore()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_7_11(v1);
  return closure #1 in ClarityUIContactsList.updateFromContactStore()(v2, v3, v4, v5);
}

uint64_t sub_1BD39A314()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ClarityUIContactsList.fetchContactIdentifiers()(void *a1)
{
  return closure #1 in ClarityUIContactsList.fetchContactIdentifiers()(a1);
}

uint64_t sub_1BD39A340()
{
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ClarityUIContactsList.contactCache.setter()
{
  uint64_t v0;

  return closure #1 in ClarityUIContactsList.contactCache.setter(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t static CatalystFeatureFlags.catalystClientEnabled.getter()
{
  return 0;
}

uint64_t CatalystFeatureFlags.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t CatalystFeatureFlags.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t CatalystFeatureFlags.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t CatalystFeatureFlags.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t type metadata accessor for CatalystFeatureFlags()
{
  return objc_opt_self();
}

uint64_t method lookup function for CatalystFeatureFlags()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CatalystFeatureFlags.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

id LinkShareCoordinator.__allocating_init(type:hostViewController:originatingView:)()
{
  id v0;

  v0 = objc_allocWithZone((Class)OUTLINED_FUNCTION_1_120());
  return LinkShareCoordinator.init(type:hostViewController:originatingView:)();
}

void LinkShareCoordinator.start(with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v5;
  char v6;
  uint64_t v7;

  v5 = *(void **)(v2 + OBJC_IVAR____TtC15ConversationKit20LinkShareCoordinator_type);
  v6 = *(_BYTE *)(v2 + OBJC_IVAR____TtC15ConversationKit20LinkShareCoordinator_type + 8);
  if ((v6 & 1) != 0)
  {
    v7 = swift_bridgeObjectRetain();
    LinkShareCoordinator.start(for:with:)(v7, a1, a2);
  }
  else
  {
    LinkShareCoordinator.start(for:with:)((uint64_t)v5, a1, a2);
  }
  outlined consume of LinkShareCoordinatorType(v5, v6);
}

id LinkShareCoordinator.type.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;
  char v3;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit20LinkShareCoordinator_type);
  v3 = *(_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit20LinkShareCoordinator_type + 8);
  *(_QWORD *)a1 = v2;
  *(_BYTE *)(a1 + 8) = v3;
  return outlined copy of LinkShareCoordinatorType(v2, v3);
}

uint64_t LinkShareCoordinator.hostViewController.getter()
{
  return OUTLINED_FUNCTION_0_127();
}

uint64_t LinkShareCoordinator.originatingView.getter()
{
  return OUTLINED_FUNCTION_0_127();
}

id LinkShareCoordinator.init(type:hostViewController:originatingView:)()
{
  void *v0;
  char *v1;
  void *v2;
  uint64_t *v3;
  objc_class *ObjectType;
  uint64_t v5;
  char v6;
  char *v7;
  id v8;
  objc_super v10;

  OUTLINED_FUNCTION_1_120();
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = *v3;
  v6 = *((_BYTE *)v3 + 8);
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit20LinkShareCoordinator_shareSheetViewController] = 0;
  v7 = &v1[OBJC_IVAR____TtC15ConversationKit20LinkShareCoordinator_type];
  *(_QWORD *)v7 = v5;
  v7[8] = v6;
  swift_unknownObjectUnownedInit();
  swift_unknownObjectUnownedInit();
  v10.receiver = v1;
  v10.super_class = ObjectType;
  v8 = objc_msgSendSuper2(&v10, sel_init);

  return v8;
}

id LinkShareCoordinator.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void LinkShareCoordinator.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id LinkShareCoordinator.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void LinkShareCoordinator.start(for:with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  id v7;
  uint64_t v8;
  id v9;
  Swift::String v10;
  Swift::String_optional v11;
  Swift::String v12;
  Swift::String v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  void *Strong;
  id v23;
  id v24;
  id v25;
  void *v26;
  void *v27;
  void *v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  _QWORD *v37;
  void *v38;
  id v39;
  id v40;
  void *v41;
  void *v42;
  _QWORD aBlock[6];
  Swift::String v44;

  v4 = v3;
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DBD310]), sel_initWithTUConversationLink_, a1);
  v8 = _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUStringShareItem);
  v9 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v44._object = (void *)0xE000000000000000;
  v10._object = (void *)0x80000001BD674B10;
  v10._countAndFlagsBits = 0xD000000000000010;
  v11.value._countAndFlagsBits = 0x61737265766E6F43;
  v11.value._object = (void *)0xEF74694B6E6F6974;
  v12._countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  v44._countAndFlagsBits = 0;
  v13 = NSLocalizedString(_:tableName:bundle:value:comment:)(v10, v11, (NSBundle)v9, v12, v44);

  v14 = TUStringShareItem.__allocating_init(message:)(v13._countAndFlagsBits, (uint64_t)v13._object);
  type metadata accessor for LinkShareActivityViewController();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Any>);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1BD645380;
  v16 = _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TULinkShareItem);
  *(_QWORD *)(v15 + 32) = v7;
  *(_QWORD *)(v15 + 88) = v8;
  *(_QWORD *)(v15 + 56) = v16;
  *(_QWORD *)(v15 + 64) = v14;
  v17 = v7;
  v18 = v14;
  v19 = LinkShareActivityViewController.__allocating_init(activityItems:applicationActivities:)((void *)v15, 0);
  objc_msgSend(v19, sel_setOverrideUserInterfaceStyle_, 2);
  objc_msgSend(v19, sel_setAllowsCustomPresentationStyle_, 1);
  v20 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
  v21 = objc_msgSend(v20, sel_userInterfaceIdiom);

  if (v21 == (id)1)
  {
    Strong = (void *)swift_unknownObjectUnownedLoadStrong();
    v23 = objc_msgSend(Strong, sel_traitCollection);

    v24 = objc_msgSend(v23, sel_horizontalSizeClass);
    if (v24 == (id)2)
      objc_msgSend(v19, sel_setModalPresentationStyle_, 2);
  }
  v25 = objc_msgSend(v19, sel_popoverPresentationController);
  if (v25)
  {
    v26 = v25;
    v27 = (void *)swift_unknownObjectUnownedLoadStrong();
    objc_msgSend(v26, sel_setSourceView_, v27);

    if (static Platform.current.getter() != 3)
    {
      v28 = (void *)swift_unknownObjectUnownedLoadStrong();
      objc_msgSend(v28, sel_bounds);
      v30 = v29;
      v32 = v31;
      v34 = v33;
      v36 = v35;

      objc_msgSend(v26, sel_setSourceRect_, v30, v32, v34, v36);
      objc_msgSend(v26, sel_setCanOverlapSourceViewRect_, 1);
    }

  }
  v37 = (_QWORD *)swift_allocObject();
  v37[2] = a2;
  v37[3] = a3;
  v37[4] = v17;
  aBlock[4] = partial apply for closure #1 in LinkShareCoordinator.start(for:with:);
  aBlock[5] = v37;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed (@guaranteed UIActivityType?, @unowned Bool, @guaranteed [Any]?, @guaranteed Error?) -> ();
  aBlock[3] = &block_descriptor_68;
  v38 = _Block_copy(aBlock);
  v39 = v17;
  v40 = v19;
  swift_retain();
  swift_release();
  objc_msgSend(v40, sel_setCompletionWithItemsHandler_, v38);
  _Block_release(v38);

  v41 = (void *)swift_unknownObjectUnownedLoadStrong();
  objc_msgSend(v41, sel_presentViewController_animated_completion_, v40, 1, 0);

  v42 = *(void **)(v4 + OBJC_IVAR____TtC15ConversationKit20LinkShareCoordinator_shareSheetViewController);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC15ConversationKit20LinkShareCoordinator_shareSheetViewController) = v40;

}

{
  id v5;
  id v6;
  Class isa;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  _QWORD v11[6];

  v5 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v6 = objc_msgSend(v5, sel_conversationManager);

  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
  lazy protocol witness table accessor for type TUHandle and conformance NSObject();
  isa = Set._bridgeToObjectiveC()().super.isa;
  v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = v8;
  v9[3] = a2;
  v9[4] = a3;
  v11[4] = partial apply for closure #1 in LinkShareCoordinator.start(for:with:);
  v11[5] = v9;
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 1107296256;
  v11[2] = thunk for @escaping @callee_guaranteed (@guaranteed ASCLockupRequest?, @guaranteed Error?) -> ();
  v11[3] = &block_descriptor_10_0;
  v10 = _Block_copy(v11);
  swift_retain();
  swift_release();
  objc_msgSend(v6, sel_generateLinkWithInvitedMemberHandles_linkLifetimeScope_completionHandler_, isa, 0, v10);
  _Block_release(v10);

}

void outlined consume of LinkShareCoordinatorType(void *a1, char a2)
{
  if ((a2 & 1) != 0)
    swift_bridgeObjectRelease();
  else

}

id outlined copy of LinkShareCoordinatorType(void *a1, char a2)
{
  if ((a2 & 1) != 0)
    return (id)swift_bridgeObjectRetain();
  else
    return a1;
}

Swift::Void __swiftcall LinkShareCoordinator.stop()()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit20LinkShareCoordinator_shareSheetViewController);
  if (v1)
    objc_msgSend(v1, sel_dismissViewControllerAnimated_completion_, 1, 0);
}

id protocol witness for LinkShareCoordinatorProtocol.init(type:hostViewController:originatingView:) in conformance LinkShareCoordinator@<X0>(_QWORD *a1@<X8>)
{
  id result;

  result = LinkShareCoordinator.__allocating_init(type:hostViewController:originatingView:)();
  *a1 = result;
  return result;
}

void protocol witness for LinkShareCoordinatorProtocol.start(with:) in conformance LinkShareCoordinator(uint64_t a1, uint64_t a2)
{
  LinkShareCoordinator.start(with:)(a1, a2);
}

void protocol witness for LinkShareCoordinatorProtocol.stop() in conformance LinkShareCoordinator()
{
  LinkShareCoordinator.stop()();
}

uint64_t initializeBufferWithCopyOfBuffer for LinkShareCoordinatorType(uint64_t a1, uint64_t a2)
{
  void *v3;
  char v4;

  v3 = *(void **)a2;
  v4 = *(_BYTE *)(a2 + 8);
  outlined copy of LinkShareCoordinatorType(*(void **)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

void destroy for LinkShareCoordinatorType(uint64_t a1)
{
  outlined consume of LinkShareCoordinatorType(*(void **)a1, *(_BYTE *)(a1 + 8));
}

uint64_t assignWithCopy for LinkShareCoordinatorType(uint64_t a1, uint64_t a2)
{
  void *v3;
  char v4;
  void *v5;
  char v6;

  v3 = *(void **)a2;
  v4 = *(_BYTE *)(a2 + 8);
  outlined copy of LinkShareCoordinatorType(*(void **)a2, v4);
  v5 = *(void **)a1;
  v6 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  outlined consume of LinkShareCoordinatorType(v5, v6);
  return a1;
}

uint64_t assignWithTake for LinkShareCoordinatorType(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  char v4;
  void *v5;
  char v6;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  v5 = *(void **)a1;
  v6 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  outlined consume of LinkShareCoordinatorType(v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for LinkShareCoordinatorType()
{
  return &type metadata for LinkShareCoordinatorType;
}

uint64_t dispatch thunk of LinkShareCoordinatorProtocol.init(type:hostViewController:originatingView:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of LinkShareCoordinatorProtocol.start(with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of LinkShareCoordinatorProtocol.stop()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t type metadata accessor for LinkShareCoordinator()
{
  return objc_opt_self();
}

uint64_t method lookup function for LinkShareCoordinator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of LinkShareCoordinator.__allocating_init(type:hostViewController:originatingView:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t closure #1 in LinkShareCoordinator.start(for:with:)(uint64_t a1, char a2, uint64_t a3, void *a4, uint64_t (*a5)(uint64_t, uint64_t), uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (a4)
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1BD6441D0;
    v10 = a4;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
    v11 = String.init<A>(reflecting:)();
    v13 = v12;
    *(_QWORD *)(v9 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v9 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v9 + 32) = v11;
    *(_QWORD *)(v9 + 40) = v13;
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    v14 = 0;
    v15 = 0;
  }
  else
  {
    v14 = a2 & 1;
    v15 = a7;
  }
  return a5(v14, v15);
}

void closure #1 in LinkShareCoordinator.start(for:with:)(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;

  v9 = a3 + 16;
  swift_beginAccess();
  v10 = MEMORY[0x1C3B752C0](v9);
  if (v10)
  {
    v11 = (void *)v10;
    if (a1)
    {
      v12 = one-time initialization token for conversationKit;
      v13 = a1;
      if (v12 != -1)
        swift_once();
      static os_log_type_t.info.getter();
      os_log(_:dso:log:type:_:)();
      LinkShareCoordinator.start(for:with:)((uint64_t)v13, a4, a5);

    }
    else
    {
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_1BD6441D0;
      if (a2)
      {
        v15 = a2;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
        v16 = String.init<A>(reflecting:)();
        v18 = v17;
      }
      else
      {
        v18 = 0xE300000000000000;
        v16 = 7104878;
      }
      *(_QWORD *)(v14 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v14 + 64) = lazy protocol witness table accessor for type String and conformance String();
      *(_QWORD *)(v14 + 32) = v16;
      *(_QWORD *)(v14 + 40) = v18;
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();
    }

  }
}

uint64_t sub_1BD39BA78()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in LinkShareCoordinator.start(for:with:)(uint64_t a1, char a2, uint64_t a3, void *a4)
{
  uint64_t v4;

  return closure #1 in LinkShareCoordinator.start(for:with:)(a1, a2, a3, a4, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 16), *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32));
}

uint64_t sub_1BD39BAB0()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BD39BAD4()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void partial apply for closure #1 in LinkShareCoordinator.start(for:with:)(void *a1, void *a2)
{
  uint64_t *v2;

  closure #1 in LinkShareCoordinator.start(for:with:)(a1, a2, v2[2], v2[3], v2[4]);
}

id HeldInCallControlsView.Style.backgroundColor.getter()
{
  _BYTE *v0;

  if (*v0 == 1)
    return objc_msgSend((id)objc_opt_self(), sel_blackColor);
  else
    return 0;
}

double HeldInCallControlsView.Style.avatarDiameter.getter()
{
  _BYTE *v0;
  double result;

  result = 50.0;
  if (*v0)
    return 60.0;
  return result;
}

double HeldInCallControlsView.Style.avatarMargins.getter()
{
  _BYTE *v0;
  double result;

  result = 14.0;
  if (*v0)
    return 20.0;
  return result;
}

double HeldInCallControlsView.Style.brandedIconTrailingSpacer.getter()
{
  return 4.0;
}

id HeldInCallControlsView.Style.primaryFont.getter()
{
  unsigned __int8 *v0;
  int v1;
  void *v2;
  double v3;

  v1 = *v0;
  v2 = (void *)objc_opt_self();
  v3 = 16.67;
  if (v1)
    v3 = 20.0;
  return OUTLINED_FUNCTION_0_18(objc_msgSend(v2, sel_systemFontOfSize_weight_, v3, *MEMORY[0x1E0DC1438]));
}

id HeldInCallControlsView.Style.secondaryFont.getter()
{
  unsigned __int8 *v0;
  int v1;
  void *v2;
  double v3;

  v1 = *v0;
  v2 = (void *)objc_opt_self();
  v3 = 14.0;
  if (v1)
    v3 = 17.0;
  return OUTLINED_FUNCTION_0_18(objc_msgSend(v2, sel_systemFontOfSize_weight_, v3, *MEMORY[0x1E0DC1440]));
}

double HeldInCallControlsView.Style.textTopInset.getter()
{
  return 17.0;
}

double HeldInCallControlsView.Style.textBottomInset.getter()
{
  return 17.0;
}

double HeldInCallControlsView.Style.minimumTextWidth.getter()
{
  return 156.0;
}

double HeldInCallControlsView.Style.actionMargins.getter()
{
  _BYTE *v0;
  double result;

  result = 17.0;
  if (*v0)
    return 20.0;
  return result;
}

BOOL static HeldInCallControlsView.Style.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void HeldInCallControlsView.Style.hash(into:)()
{
  unsigned __int8 *v0;

  Hasher._combine(_:)(*v0);
}

Swift::Int HeldInCallControlsView.Style.hashValue.getter()
{
  unsigned __int8 *v0;
  Swift::UInt v1;

  v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void (**HeldInCallControlsView.__allocating_init(callCenter:style:)(NSObject *a1, char *a2))(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD)
{
  void (**v2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  os_log_type_t v3;
  NSObject *v4;
  char v5;
  NSObject *v6;
  NSObject *v7;
  id v8;
  id v9;
  id v10;
  NSObject *v11;
  char *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  char v22;

  v3 = v2;
  v4 = a1;
  v5 = *a2;
  v6 = -[NSObject callWithStatus:](a1, sel_callWithStatus_, 1);
  if (v6)
  {
    v7 = v6;
    v8 = -[NSObject callWithStatus:](v4, sel_callWithStatus_, 2);
    if (v8)
    {
      v9 = v8;
      v10 = -[NSObject activeConversationForCall:](v4, sel_activeConversationForCall_, v8);
      type metadata accessor for ConversationControlsManager(0);
      v11 = v7;
      v12 = ConversationControlsManager.__allocating_init(activeCall:)(v11);
      v22 = v5;
      ((void (**)(id, id, char *, _QWORD, _QWORD, char *))v2)[20](v9, v10, v12, 0, 0, &v22);
      OUTLINED_FUNCTION_49_5();
      v4 = v2;

      if (!v2)
        return v2;
      goto LABEL_15;
    }
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v17 = OUTLINED_FUNCTION_17_2();
    v18 = OUTLINED_FUNCTION_3(v17, (uint64_t)&static Logger.conversationControls);
    v19 = static os_log_type_t.default.getter();
    if (OUTLINED_FUNCTION_51_3(v19))
    {
      v20 = (uint8_t *)OUTLINED_FUNCTION_105();
      *(_WORD *)v20 = 0;
      OUTLINED_FUNCTION_130(&dword_1BD004000, v18, v3, "unable to create held call controls: no held call in container", v20);
      OUTLINED_FUNCTION_60();
    }

    v14 = v4;
    v4 = v7;
  }
  else
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v13 = OUTLINED_FUNCTION_17_2();
    v14 = OUTLINED_FUNCTION_3(v13, (uint64_t)&static Logger.conversationControls);
    v15 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)OUTLINED_FUNCTION_105();
      *(_WORD *)v16 = 0;
      OUTLINED_FUNCTION_130(&dword_1BD004000, v14, v15, "unable to create held call controls: no active call in container", v16);
      OUTLINED_FUNCTION_60();
    }
  }

  v2 = 0;
LABEL_15:

  return v2;
}

char *HeldInCallControlsView.__allocating_init(heldCall:heldConversation:controlsManager:menuHostViewController:style:)(void *a1, void *a2, void *a3, void *a4, char *a5, unsigned __int8 *a6)
{
  objc_class *v6;
  id v13;

  v13 = objc_allocWithZone(v6);
  return HeldInCallControlsView.init(heldCall:heldConversation:controlsManager:menuHostViewController:style:)(a1, a2, a3, a4, a5, a6);
}

char *HeldInCallControlsView.init(heldCall:heldConversation:controlsManager:menuHostViewController:style:)(void *a1, void *a2, void *a3, void *a4, char *a5, unsigned __int8 *a6)
{
  void *v6;
  void *v7;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  id v15;
  _BYTE *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  char *v26;
  uint64_t v27;
  void *v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  void *v38;
  char *v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  void *v48;
  id v49;
  Swift::String v50;
  Swift::String_optional v51;
  Swift::String v52;
  Swift::String v53;
  objc_class *v54;
  id v55;
  id v56;
  uint64_t v57;
  void *v58;
  char *v59;
  id v60;
  id v61;
  id v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  id v66;
  void *v67;
  id v68;
  id v69;
  void *v70;
  void *v71;
  double v72;
  id v73;
  int v74;
  double v75;
  double v76;
  id v77;
  id v78;
  id v79;
  void *v80;
  void *v81;
  double v82;
  id v83;
  id v84;
  void *v85;
  id v86;
  id v87;
  id v88;
  uint64_t v89;
  id v90;
  void *v91;
  id v92;
  id v93;
  id v94;
  char *v96;
  id v97;
  uint64_t v98;
  id v99;
  id v100;
  id v101;
  objc_super v102;
  Swift::String v103;

  v7 = v6;
  v96 = a5;
  v97 = a2;
  v100 = a3;
  v101 = a4;
  v10 = type metadata accessor for ConversationControlsAction();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v96 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(v99) = *a6;
  v13 = (char *)OBJC_IVAR____TtC15ConversationKit22HeldInCallControlsView_avatar;
  *(_QWORD *)((char *)v7 + OBJC_IVAR____TtC15ConversationKit22HeldInCallControlsView_avatar) = 0;
  v14 = OBJC_IVAR____TtC15ConversationKit22HeldInCallControlsView_primaryLabel;
  v15 = objc_allocWithZone(MEMORY[0x1E0DC3990]);
  v16 = v7;
  *(_QWORD *)((char *)v7 + v14) = objc_msgSend(v15, sel_init, v96);
  v17 = OBJC_IVAR____TtC15ConversationKit22HeldInCallControlsView_secondaryLabel;
  v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  v98 = v17;
  *(_QWORD *)&v16[v17] = v18;
  v19 = OBJC_IVAR____TtC15ConversationKit22HeldInCallControlsView_blurView;
  v20 = objc_msgSend((id)objc_opt_self(), sel_effectWithStyle_, 18);
  v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F58]), sel_initWithEffect_, v20);

  *(_QWORD *)&v16[v19] = v21;
  if (objc_msgSend(a1, sel_isOnHold))
  {
    v16[OBJC_IVAR____TtC15ConversationKit22HeldInCallControlsView_style] = (_BYTE)v99;
    swift_storeEnumTagMultiPayload();
    ConversationControlsAction.button(controlsManager:menuHostViewController:context:options:)();
    v23 = v22;
    outlined destroy of ConversationControlsAction((uint64_t)v12);
    *(_QWORD *)&v16[OBJC_IVAR____TtC15ConversationKit22HeldInCallControlsView_swapButton] = v23;
    v24 = v97;
    v25 = v97;
    v26 = a1;
    v27 = specialized ConversationControlsBadgingAvatarViewController.__allocating_init(call:conversation:badgeImage:)(v26, v24, 0);
    v28 = *(void **)&v13[(_QWORD)v7];
    *(_QWORD *)&v13[(_QWORD)v7] = v27;

    v29 = *(id *)((char *)v7 + v14);
    v96 = v26;
    if (v24)
      v30 = v25;
    else
      v30 = v26;
    v40 = objc_msgSend(v30, sel_displayName, v96);
    v97 = v25;
    v41 = v40;
    v42 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v44 = v43;

    outlined bridged method (mbnn) of @objc UILabel.text.setter(v42, v44, v29);
    v45 = one-time initialization token for conversationKit;
    v46 = *(id *)&v16[v98];
    if (v45 != -1)
      swift_once();
    v47 = unk_1EF4FCB30;
    v48 = (void *)qword_1EF4FCB38;
    v49 = (id)static LocalizationSource.conversationKit;
    swift_bridgeObjectRetain();
    v103._object = (void *)0xE000000000000000;
    v50._object = (void *)0x80000001BD688360;
    v50._countAndFlagsBits = 0xD000000000000017;
    v51.value._countAndFlagsBits = v47;
    v51.value._object = v48;
    v52._countAndFlagsBits = 0;
    v52._object = (void *)0xE000000000000000;
    v103._countAndFlagsBits = 0;
    v53 = NSLocalizedString(_:tableName:bundle:value:comment:)(v50, v51, (NSBundle)v49, v52, v103);
    swift_bridgeObjectRelease();

    outlined bridged method (mbnn) of @objc UILabel.text.setter(v53._countAndFlagsBits, (uint64_t)v53._object, v46);
    *(_QWORD *)&v16[OBJC_IVAR____TtC15ConversationKit22HeldInCallControlsView_brandedIconView] = 0;

    v54 = (objc_class *)type metadata accessor for HeldInCallControlsView();
    v102.receiver = v16;
    v102.super_class = v54;
    v55 = objc_msgSendSuper2(&v102, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    objc_opt_self();
    v39 = (char *)v55;
    v56 = OUTLINED_FUNCTION_5_39((uint64_t)v39, sel_clearColor);
    objc_msgSend(v39, sel_setBackgroundColor_, v56);

    v57 = OBJC_IVAR____TtC15ConversationKit22HeldInCallControlsView_blurView;
    objc_msgSend(v39, sel_addSubview_, *(_QWORD *)&v39[OBJC_IVAR____TtC15ConversationKit22HeldInCallControlsView_blurView]);
    v58 = *(void **)&v39[OBJC_IVAR____TtC15ConversationKit22HeldInCallControlsView_avatar];
    if (v58)
    {
      v59 = v39;
      v60 = v58;
      v61 = objc_msgSend(v60, sel_view);
      objc_msgSend(v59, sel_addSubview_, v61);

    }
    v62 = OUTLINED_FUNCTION_35_36(*(void **)&v39[v57]);
    v63 = OBJC_IVAR____TtC15ConversationKit22HeldInCallControlsView_primaryLabel;
    OUTLINED_FUNCTION_37_42(v62);

    v64 = OUTLINED_FUNCTION_35_36(*(void **)&v39[v57]);
    v65 = OBJC_IVAR____TtC15ConversationKit22HeldInCallControlsView_secondaryLabel;
    OUTLINED_FUNCTION_37_42(v64);

    v66 = OUTLINED_FUNCTION_35_36(*(void **)&v39[v57]);
    OUTLINED_FUNCTION_37_42(v66);

    v67 = *(void **)&v39[OBJC_IVAR____TtC15ConversationKit22HeldInCallControlsView_brandedIconView];
    if (v67)
    {
      v68 = v67;
      v69 = OUTLINED_FUNCTION_123((uint64_t)v68, sel_contentView);
      objc_msgSend(v69, sel_addSubview_, v68);

    }
    v70 = *(void **)&v39[v63];
    v71 = (void *)objc_opt_self();
    v72 = *MEMORY[0x1E0DC1438];
    v73 = v70;
    v74 = (int)v99;
    v75 = 16.67;
    if ((_DWORD)v99)
    {
      v75 = 20.0;
      v76 = 17.0;
    }
    else
    {
      v76 = 14.0;
    }
    v77 = objc_msgSend(v71, sel_systemFontOfSize_weight_, v75, v72);
    OUTLINED_FUNCTION_14_86((uint64_t)v77, sel_setFont_);

    v78 = *(id *)&v39[v63];
    v79 = OUTLINED_FUNCTION_5_39((uint64_t)v78, sel_whiteColor);
    objc_msgSend(v78, sel_setTextColor_, v79);

    v80 = *(void **)&v39[v65];
    v81 = (void *)objc_opt_self();
    v82 = *MEMORY[0x1E0DC1440];
    v83 = v80;
    v84 = objc_msgSend(v81, sel_systemFontOfSize_weight_, v76, v82);
    OUTLINED_FUNCTION_14_86((uint64_t)v84, sel_setFont_);

    v85 = *(void **)&v39[v65];
    v86 = objc_allocWithZone(MEMORY[0x1E0DC3658]);
    v87 = v85;
    v88 = objc_msgSend(v86, sel_initWithWhite_alpha_, 1.0, 0.4);
    OUTLINED_FUNCTION_14_86((uint64_t)v88, sel_setTextColor_);

    if (v74 && (v90 = OUTLINED_FUNCTION_5_39(v89, sel_blackColor)) != 0)
    {
      v91 = v90;
      v92 = objc_msgSend(*(id *)&v39[v57], sel_contentView);
      objc_msgSend(v92, sel_setBackgroundColor_, v91);

      v93 = *(id *)&v39[v57];
      objc_msgSend(v93, sel_setEffect_, 0);

      v94 = v101;
    }
    else
    {

      v94 = v97;
    }

  }
  else
  {
    v96 = v13;
    v99 = a1;
    v31 = v97;
    v33 = v100;
    v32 = v101;
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v34 = OUTLINED_FUNCTION_17_2();
    v35 = OUTLINED_FUNCTION_3(v34, (uint64_t)&static Logger.conversationControls);
    v36 = static os_log_type_t.fault.getter();
    if (OUTLINED_FUNCTION_4_11(v36))
    {
      v37 = (uint8_t *)OUTLINED_FUNCTION_105();
      *(_WORD *)v37 = 0;
      OUTLINED_FUNCTION_130(&dword_1BD004000, v35, (os_log_type_t)v12, "Unable to make HeldInCallControlsView for call that is not on hold", v37);
      OUTLINED_FUNCTION_60();
    }

    v38 = *(void **)&v16[v19];
    type metadata accessor for HeldInCallControlsView();
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v39;
}

objc_class *HeldInCallControlsView.__allocating_init(coder:)()
{
  objc_class *v0;

  OUTLINED_FUNCTION_65(objc_allocWithZone(v0), sel_initWithCoder_);
  OUTLINED_FUNCTION_49_5();
  return v0;
}

void HeldInCallControlsView.init(coder:)()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;

  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit22HeldInCallControlsView_avatar] = 0;
  v1 = OBJC_IVAR____TtC15ConversationKit22HeldInCallControlsView_primaryLabel;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  v2 = OBJC_IVAR____TtC15ConversationKit22HeldInCallControlsView_secondaryLabel;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  v3 = OBJC_IVAR____TtC15ConversationKit22HeldInCallControlsView_blurView;
  v4 = objc_msgSend((id)objc_opt_self(), sel_effectWithStyle_, 18);
  v5 = OUTLINED_FUNCTION_65(objc_allocWithZone(MEMORY[0x1E0DC3F58]), sel_initWithEffect_);

  *(_QWORD *)&v0[v3] = v5;
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Void __swiftcall HeldInCallControlsView.layoutSubviews()()
{
  char *v0;
  void *v1;
  _BYTE *v2;
  id v3;
  int v4;
  double v5;
  double v6;
  double v7;
  void *v8;
  double v9;
  id v10;
  SEL v11;
  uint64_t v12;
  os_log_type_t v13;
  _DWORD *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  double Width;
  double Height;
  double v35;
  double v36;
  double v37;
  double v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  double v44;
  double v45;
  NSObject *v46;
  os_log_type_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  double MaxX;
  double v66;
  double v67;
  double v68;
  void *v69;
  id v70;
  void *v71;
  double v72;
  void *v73;
  double v74;
  double v75;
  void *v76;
  id v77;
  void *v78;
  double v79;
  double v80;
  double v81;
  double v82;
  double v83;
  double v84;
  double v85;
  double v86;
  double v87;
  double v88;
  double v89;
  double v90;
  double v91;
  id v92;
  SEL v93;
  double v94;
  id v95;
  SEL v96;
  double MinY;
  double v98;
  double v99;
  NSObject *v100;
  os_log_type_t v101;
  double v102;
  double v103;
  double v104;
  double v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t inited;
  id v112;
  void *v113;
  id v114;
  id v115;
  id v116;
  id v117;
  id v118;
  id v119;
  id v120;
  id v121;
  void *v122;
  id v123;
  void *v124;
  id v125;
  void *v126;
  id v127;
  void *v128;
  id v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  double v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  CGFloat v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  CGFloat v152;
  uint64_t rect;
  uint64_t rectb;
  uint64_t rectc;
  CGFloat recta;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  double MaxY;
  uint64_t ObjectType;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  double v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  double v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  double v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  double v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  double v186;
  objc_super v187;
  CGRect v188;
  CGRect v189;
  CGRect v190;
  CGRect v191;
  CGRect v192;
  CGRect v193;
  CGRect v194;
  CGRect v195;
  CGRect v196;
  CGRect v197;
  CGRect v198;
  CGRect v199;
  CGRect v200;
  CGRect v201;

  v2 = v0;
  ObjectType = swift_getObjectType();
  v187.receiver = v0;
  v187.super_class = (Class)type metadata accessor for HeldInCallControlsView();
  objc_msgSendSuper2(&v187, sel_layoutSubviews);
  v3 = *(id *)&v0[OBJC_IVAR____TtC15ConversationKit22HeldInCallControlsView_blurView];
  OUTLINED_FUNCTION_3_109();
  objc_msgSend(v3, sel_setFrame_);
  OUTLINED_FUNCTION_3_109();
  objc_msgSend(v3, sel__setContinuousCornerRadius_, CGRectGetHeight(v188) * 0.5);
  v4 = v2[OBJC_IVAR____TtC15ConversationKit22HeldInCallControlsView_style];
  if (v2[OBJC_IVAR____TtC15ConversationKit22HeldInCallControlsView_style])
    v5 = 20.0;
  else
    v5 = 16.0;
  if (v2[OBJC_IVAR____TtC15ConversationKit22HeldInCallControlsView_style])
    v6 = 60.0;
  else
    v6 = 50.0;
  OUTLINED_FUNCTION_3_109();
  v7 = (CGRectGetHeight(v189) - v6) * 0.5;
  v139 = OBJC_IVAR____TtC15ConversationKit22HeldInCallControlsView_avatar;
  v8 = *(void **)&v2[OBJC_IVAR____TtC15ConversationKit22HeldInCallControlsView_avatar];
  if (v8)
  {
    v3 = objc_msgSend(v8, sel_view);
    v9 = OUTLINED_FUNCTION_41_31();
    objc_msgSend(v10, v11, v9);

  }
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v12 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v12, (uint64_t)&static Logger.conversationControls);
  v13 = OUTLINED_FUNCTION_27_50();
  if (OUTLINED_FUNCTION_11_84(v13))
  {
    v14 = (_DWORD *)OUTLINED_FUNCTION_105();
    v186 = COERCE_DOUBLE(OUTLINED_FUNCTION_105());
    *v14 = 136446466;
    v15 = OUTLINED_FUNCTION_7_10();
    OUTLINED_FUNCTION_21_69(v15, v16, v17, v18, v19, v20, v21, v22, v130, v135, v139, v142, v145, v149, rect, v157, (uint64_t)v3, ObjectType, v166,
      v170,
      v174,
      v178,
      v182,
      v183,
      v184,
      v185,
      *(uint64_t *)&v186);
    OUTLINED_FUNCTION_34_36();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_54_1();
    OUTLINED_FUNCTION_26_45();
    type metadata accessor for CGRect(0);
    v23 = String.init<A>(reflecting:)();
    v182 = OUTLINED_FUNCTION_21_69(v23, v24, v25, v26, v27, v28, v29, v30, v131, v136, v140, v143, v146, v150, rectb, v158, v160, v164, v167,
             v171,
             v175,
             v179,
             *(uint64_t *)&v5,
             *(uint64_t *)&v7,
             *(uint64_t *)&v6,
             *(uint64_t *)&v6,
             *(uint64_t *)&v186);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_6_88(&dword_1BD004000, v31, v32, "[%{public}s][layout] leadingFrame is %s");
    OUTLINED_FUNCTION_15_80();
    OUTLINED_FUNCTION_60();
  }

  OUTLINED_FUNCTION_3_109();
  Width = CGRectGetWidth(v190);
  OUTLINED_FUNCTION_3_109();
  Height = CGRectGetHeight(v191);
  v35 = -10.0;
  if (v4)
    v35 = -13.0;
  v36 = v35 + Width;
  if (v4)
    v37 = 20.0;
  else
    v37 = 17.0;
  v38 = -17.0;
  if (v4)
    v38 = -20.0;
  *(double *)&v137 = v37;
  v39 = *(void **)&v2[OBJC_IVAR____TtC15ConversationKit22HeldInCallControlsView_swapButton];
  objc_msgSend(v39, sel_sizeThatFits_, v36 - v5, v38 + Height - v37);
  v41 = v40;
  v43 = v42;
  OUTLINED_FUNCTION_3_109();
  v44 = CGRectGetWidth(v192) - v5 - *(double *)&v41;
  OUTLINED_FUNCTION_3_109();
  v45 = (CGRectGetHeight(v193) - *(double *)&v43) * 0.5;
  objc_msgSend(v39, sel_setFrame_, v44, v45, *(double *)&v41, *(double *)&v43);
  v46 = Logger.logObject.getter();
  v47 = static os_log_type_t.debug.getter();
  v132 = v43;
  if (os_log_type_enabled(v46, v47))
  {
    v48 = OUTLINED_FUNCTION_105();
    v186 = COERCE_DOUBLE(OUTLINED_FUNCTION_105());
    *(_DWORD *)v48 = 136446466;
    v49 = OUTLINED_FUNCTION_7_10();
    OUTLINED_FUNCTION_21_69(v49, v50, v51, v52, v53, v54, v55, v56, v43, v137, v139, v142, v145, v149, rect, (uint64_t)v39, (uint64_t)v3, ObjectType, v166,
      v170,
      v174,
      v178,
      v182,
      v183,
      v184,
      v185,
      *(uint64_t *)&v186);
    OUTLINED_FUNCTION_34_36();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v48 + 12) = 2080;
    type metadata accessor for CGRect(0);
    v57 = String.init<A>(reflecting:)();
    v182 = OUTLINED_FUNCTION_21_69(v57, v58, v59, v60, v61, v62, v63, v64, v133, v138, v141, v144, v147, v151, rectc, v159, v161, v165, v168,
             v172,
             v176,
             v180,
             *(uint64_t *)&v44,
             *(uint64_t *)&v45,
             v41,
             v43,
             *(uint64_t *)&v186);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v46, v47, "[%{public}s][layout] swapFrame is %s", (uint8_t *)v48, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_60();
  }

  v194.origin.x = OUTLINED_FUNCTION_41_31();
  MaxX = CGRectGetMaxX(v194);
  if (v4)
    v66 = 13.0;
  else
    v66 = 9.0;
  if (v4)
    v67 = 13.0;
  else
    v67 = 10.0;
  OUTLINED_FUNCTION_79_5();
  v68 = CGRectGetWidth(v195);
  v69 = *(void **)&v2[OBJC_IVAR____TtC15ConversationKit22HeldInCallControlsView_primaryLabel];
  v70 = objc_msgSend(v69, sel_font);
  if (!v70)
  {
    __break(1u);
LABEL_77:
    __break(1u);
    return;
  }
  v71 = v70;
  objc_msgSend(v70, sel_lineHeight);
  v181 = v72;

  v73 = *(void **)&v2[OBJC_IVAR____TtC15ConversationKit22HeldInCallControlsView_brandedIconView];
  v152 = v7;
  recta = v6;
  if (v73)
  {
    if (one-time initialization token for iconSize != -1)
      swift_once();
    v74 = *((double *)&static BrandedIconView.Constants.iconSize + 1);
    v75 = *(double *)&static BrandedIconView.Constants.iconSize;
  }
  else
  {
    v75 = 0.0;
    v74 = 0.0;
  }
  v76 = *(void **)&v2[OBJC_IVAR____TtC15ConversationKit22HeldInCallControlsView_secondaryLabel];
  v77 = objc_msgSend(v76, sel_font, v132);
  if (!v77)
    goto LABEL_77;
  v78 = v77;
  v148 = v5;
  v79 = v5 + v67 + *(double *)&v41;
  v80 = v66 + MaxX;
  v81 = v68 - v79 - (v66 + MaxX);
  objc_msgSend(v77, sel_lineHeight);
  v83 = v82;

  if (v83 > v74)
    v84 = v83;
  else
    v84 = v74;
  v85 = v181 + v84;
  OUTLINED_FUNCTION_79_5();
  v86 = (CGRectGetHeight(v196) - v85) * 0.5;
  v197.origin.x = OUTLINED_FUNCTION_36_41();
  CGRectGetMaxY(v197);
  v87 = (v83 - v74) * 0.5;
  if (v73)
    v88 = v80;
  else
    v88 = 0.0;
  if (!v73)
    v87 = 0.0;
  v173 = v87;
  v177 = v88;
  if (v73)
    v89 = v75;
  else
    v89 = 0.0;
  if (v73)
    v90 = v74;
  else
    v90 = 0.0;
  v169 = v90;
  v91 = OUTLINED_FUNCTION_36_41();
  objc_msgSend(v92, v93, v91);
  v94 = OUTLINED_FUNCTION_32_41();
  objc_msgSend(v95, v96, v94);
  if (v73)
    objc_msgSend(v73, sel_setBounds_, v177, v173, v89, v169);
  v198.origin.x = v148;
  v198.origin.y = v152;
  v198.size.width = recta;
  v198.size.height = recta;
  MaxY = CGRectGetMaxY(v198);
  v199.origin.x = v80;
  v199.origin.y = v86;
  v199.size.width = v81;
  v199.size.height = v181;
  MinY = CGRectGetMinY(v199);
  v200.origin.x = OUTLINED_FUNCTION_32_41();
  v98 = CGRectGetMaxY(v200);
  v201.origin.y = v173;
  v201.origin.x = v177;
  v201.size.width = v89;
  v201.size.height = v169;
  v99 = CGRectGetMaxY(v201);
  v100 = Logger.logObject.getter();
  v101 = static os_log_type_t.debug.getter();
  if (OUTLINED_FUNCTION_4_11(v101))
  {
    if (v98 > v99)
      v102 = v98;
    else
      v102 = v99;
    v103 = MinY + v102;
    v104 = 14.0;
    if (v4)
      v104 = 20.0;
    v105 = v104 + MaxY;
    v106 = OUTLINED_FUNCTION_105();
    v107 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v106 = 136446978;
    v182 = v107;
    v108 = OUTLINED_FUNCTION_7_10();
    v186 = COERCE_DOUBLE(getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v108, v109, &v182));
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v106 + 12) = 2048;
    v186 = v105;
    OUTLINED_FUNCTION_40_42();
    *(_WORD *)(v106 + 22) = 2048;
    v186 = v103;
    OUTLINED_FUNCTION_40_42();
    *(_WORD *)(v106 + 32) = 2048;
    v186 = *(double *)&v137 + *(double *)&v137 + v134;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl(&dword_1BD004000, v100, (os_log_type_t)v78, "[%{public}s][layout] avatarMaxY: %f, textMaxY: %f, %f", (uint8_t *)v106, 0x2Au);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_60();
  }

  if (OUTLINED_FUNCTION_123(v110, sel_effectiveUserInterfaceLayoutDirection) == (id)1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UIView?>);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BD646730;
    v112 = *(id *)&v2[v139];
    if (v112)
      v112 = objc_msgSend(v112, sel_view);
    *(_QWORD *)(inited + 32) = v112;
    *(_QWORD *)(inited + 40) = v76;
    *(_QWORD *)(inited + 48) = v69;
    *(_QWORD *)(inited + 56) = v39;
    *(_QWORD *)(inited + 64) = v73;
    OUTLINED_FUNCTION_12_87();
    v182 = MEMORY[0x1E0DEE9D8];
    v113 = *(void **)(inited + 32);
    if (v113)
    {
      v114 = v113;
      v115 = v76;
      v116 = v69;
      v117 = v39;
      MEMORY[0x1C3B7301C](v73);
      if (*(_QWORD *)((v182 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v182 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        OUTLINED_FUNCTION_1_121();
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      OUTLINED_FUNCTION_12_87();
    }
    else
    {
      v118 = v73;
      v119 = v76;
      v120 = v69;
      v121 = v39;
    }
    v122 = *(void **)(inited + 40);
    if (v122)
    {
      v123 = v122;
      OUTLINED_FUNCTION_7_100();
    }
    v124 = *(void **)(inited + 48);
    if (v124)
    {
      v125 = v124;
      OUTLINED_FUNCTION_7_100();
    }
    v126 = *(void **)(inited + 56);
    if (v126)
    {
      v127 = v126;
      OUTLINED_FUNCTION_7_100();
    }
    v128 = *(void **)(inited + 64);
    if (v128)
    {
      v129 = v128;
      OUTLINED_FUNCTION_7_100();
    }
    swift_bridgeObjectRelease();
    specialized Sequence.forEach(_:)(v182, v2);
    swift_bridgeObjectRelease();
  }
}

CGSize __swiftcall HeldInCallControlsView.sizeThatFits(_:)(CGSize a1)
{
  uint64_t v1;
  void *v2;
  double height;
  double width;
  uint64_t v5;
  os_log_type_t v6;
  _DWORD *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  int v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  os_log_type_t v34;
  _DWORD *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  double v56;
  double v57;
  double v58;
  double v59;
  double v60;
  double v61;
  double v62;
  double v63;
  double v64;
  double v65;
  double v66;
  double v67;
  double v68;
  double v69;
  double v70;
  double v71;
  double v72;
  NSObject *v73;
  os_log_type_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  double v78;
  double v79;
  CGSize result;
  uint64_t v81;
  uint64_t v82;
  double v83;
  double v84;
  double v85;
  CGRect v86;
  CGRect v87;

  height = a1.height;
  width = a1.width;
  swift_getObjectType();
  if (height <= 2.22507386e-308)
    height = 1.79769313e308;
  v84 = width;
  v85 = height;
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v5 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v5, (uint64_t)&static Logger.conversationControls);
  v6 = OUTLINED_FUNCTION_27_50();
  if (OUTLINED_FUNCTION_11_84(v6))
  {
    v7 = (_DWORD *)OUTLINED_FUNCTION_105();
    v81 = OUTLINED_FUNCTION_105();
    *v7 = 136446466;
    v8 = OUTLINED_FUNCTION_7_10();
    OUTLINED_FUNCTION_27_41(v8, v9, v10, v11, v12, v13);
    OUTLINED_FUNCTION_10_93();
    OUTLINED_FUNCTION_54_1();
    OUTLINED_FUNCTION_26_45();
    v83 = height;
    type metadata accessor for CGSize(0);
    v14 = OUTLINED_FUNCTION_29_52();
    v82 = OUTLINED_FUNCTION_27_41(v14, v15, v16, v17, v18, v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_54_1();
    OUTLINED_FUNCTION_6_88(&dword_1BD004000, v20, v21, "[%{public}s][sizing] sizingThatFits %s");
    OUTLINED_FUNCTION_15_80();
    OUTLINED_FUNCTION_60();
  }

  OUTLINED_FUNCTION_26_52();
  v22 = CGRectGetWidth(v86);
  v23 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC15ConversationKit22HeldInCallControlsView_style);
  OUTLINED_FUNCTION_26_52();
  v24 = CGRectGetHeight(v87);
  v25 = 20.0;
  if (v23)
    v26 = 20.0;
  else
    v26 = 16.0;
  v27 = -10.0;
  if (v23)
    v27 = -13.0;
  v28 = v22 + v27;
  if (!v23)
    v25 = 17.0;
  v29 = -17.0;
  if (v23)
    v29 = -20.0;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC15ConversationKit22HeldInCallControlsView_swapButton), sel_sizeThatFits_, v28 - v26, v29 + v24 - v25);
  v31 = v30;
  v33 = v32;
  Logger.logObject.getter();
  v34 = OUTLINED_FUNCTION_27_50();
  if (OUTLINED_FUNCTION_11_84(v34))
  {
    v35 = (_DWORD *)OUTLINED_FUNCTION_105();
    v81 = OUTLINED_FUNCTION_105();
    *v35 = 136446466;
    v36 = OUTLINED_FUNCTION_7_10();
    OUTLINED_FUNCTION_27_41(v36, v37, v38, v39, v40, v41);
    OUTLINED_FUNCTION_10_93();
    OUTLINED_FUNCTION_54_1();
    OUTLINED_FUNCTION_26_45();
    v83 = v33;
    type metadata accessor for CGSize(0);
    v42 = OUTLINED_FUNCTION_29_52();
    v82 = OUTLINED_FUNCTION_27_41(v42, v43, v44, v45, v46, v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_54_1();
    OUTLINED_FUNCTION_6_88(&dword_1BD004000, v48, v49, "[%{public}s][sizing] actionsSize is  %s");
    OUTLINED_FUNCTION_15_80();
    OUTLINED_FUNCTION_60();
  }

  if (v23)
    v50 = 93.0;
  else
    v50 = 75.0;
  v51 = 10.0;
  if (v23)
    v51 = 13.0;
  v52 = v26 + v51 + v31;
  v53 = 0.0;
  v54 = 0.0;
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit22HeldInCallControlsView_brandedIconView))
  {
    if (one-time initialization token for iconSize != -1)
      swift_once();
    v53 = *((double *)&static BrandedIconView.Constants.iconSize + 1);
    v54 = *(double *)&static BrandedIconView.Constants.iconSize;
  }
  if (v54 <= 0.0)
    v55 = 0.0;
  else
    v55 = v54 + 4.0;
  v56 = width - v52 - v50;
  v57 = v56 - v55;
  swift_beginAccess();
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC15ConversationKit22HeldInCallControlsView_primaryLabel), sel_sizeThatFits_, v56, v85);
  v59 = v58;
  v61 = v60;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC15ConversationKit22HeldInCallControlsView_secondaryLabel), sel_sizeThatFits_, v57, v85 - v60);
  if (v59 > v62)
    v64 = v59;
  else
    v64 = v62;
  if (v63 > v53)
    v65 = v63;
  else
    v65 = v53;
  v66 = v61 + v65;
  v67 = v33 + 20.0 + 20.0;
  v68 = 78.0;
  if (v23)
    v68 = 100.0;
  else
    v67 = v33 + 17.0 + 17.0;
  v69 = v66 + 17.0 + 17.0;
  if (v64 <= 156.0)
    v64 = 156.0;
  v70 = v52 + v50 + v64;
  specialized max<A>(_:_:_:_:)(MEMORY[0x1E0DEE9D8], v68, v69, v67);
  v72 = v71;
  v73 = Logger.logObject.getter();
  v74 = static os_log_type_t.debug.getter();
  if (OUTLINED_FUNCTION_51_3(v74))
  {
    v75 = OUTLINED_FUNCTION_105();
    v81 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v75 = 136446722;
    v76 = OUTLINED_FUNCTION_7_10();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v76, v77, &v81);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v75 + 12) = 2048;
    OUTLINED_FUNCTION_25_51();
    *(_WORD *)(v75 + 22) = 2048;
    OUTLINED_FUNCTION_25_51();
    _os_log_impl(&dword_1BD004000, v73, (os_log_type_t)v2, "[%{public}s][sizing] measuredWidth: %f, measuredHeight: %f", (uint8_t *)v75, 0x20u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_60();
  }

  v78 = width;
  if (v70 < width)
    v78 = v70;
  v79 = v85;
  if (v72 < v85)
    v79 = v72;
  result.height = v79;
  result.width = v78;
  return result;
}

CGSize __swiftcall HeldInCallControlsView.systemLayoutSizeFitting(_:withHorizontalFittingPriority:verticalFittingPriority:)(CGSize _, __C::UILayoutPriority withHorizontalFittingPriority, __C::UILayoutPriority verticalFittingPriority)
{
  void *v3;
  double v4;
  double v5;
  CGSize result;

  objc_msgSend(v3, sel_sizeThatFits_, _.width, _.height, *(double *)&withHorizontalFittingPriority.rawValue, *(double *)&verticalFittingPriority.rawValue);
  result.height = v5;
  result.width = v4;
  return result;
}

id HeldInCallControlsView.intrinsicContentSize.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_sizeThatFits_, 1.79769313e308, 1.79769313e308);
}

id HeldInCallControlsView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void HeldInCallControlsView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id HeldInCallControlsView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HeldInCallControlsView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for HeldInCallControlsView()
{
  return objc_opt_self();
}

uint64_t specialized ConversationControlsBadgingAvatarViewController.__allocating_init(call:badgeImage:)(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  int v20;
  char v21;
  uint64_t v22;
  void *v23;
  void *v24;
  unsigned int v25;
  id v26;
  void *v27;
  char **v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  void (*v38)(char *, _QWORD);
  id v39;
  id v40;
  uint64_t v41;
  id v42;
  void *v43;
  char v44[32];
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;

  v3 = (void *)objc_opt_self();
  v4 = OUTLINED_FUNCTION_65(v3, sel_tu_contactStoreConfigurationForCall_);
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97298]), sel_initWithConfiguration_, v4);

  v7 = OUTLINED_FUNCTION_123(v6, sel_remoteParticipantHandles);
  type metadata accessor for TUHandle();
  lazy protocol witness table accessor for type TUHandle and conformance NSObject();
  v8 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  v9 = specialized Set.count.getter(v8);
  if (!v9)
  {
    swift_bridgeObjectRelease();
    v14 = MEMORY[0x1E0DEE9D8];
LABEL_21:
    v39 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
    v40 = objc_allocWithZone((Class)type metadata accessor for ConversationControlsBadgingAvatarViewController());
    v41 = v14;
    v42 = v40;
    ConversationControlsBadgingAvatarViewController.init(contactStore:contacts:badgeImage:badgeBackgroundColor:)(v5, v41, a2, v39);
    OUTLINED_FUNCTION_49_5();
    return (uint64_t)v42;
  }
  v10 = v9;
  v48 = MEMORY[0x1E0DEE9D8];
  specialized ContiguousArray.reserveCapacity(_:)();
  if ((v8 & 0xC000000000000001) != 0)
  {
    result = __CocoaSet.startIndex.getter();
    v13 = 1;
  }
  else
  {
    result = specialized _NativeSet.startIndex.getter(v8);
    v13 = v15 & 1;
  }
  v45 = result;
  v46 = v12;
  v47 = v13;
  if ((v10 & 0x8000000000000000) == 0)
  {
    v43 = a2;
    do
    {
      v16 = v45;
      v17 = v46;
      v18 = v47;
      v19 = OUTLINED_FUNCTION_38_47();
      specialized Set.subscript.getter(v19, v20, v21, v22);
      v24 = v23;
      v25 = objc_msgSend(v23, sel_shouldHideContact);
      v26 = objc_allocWithZone(MEMORY[0x1E0C97360]);
      if (v25)
        v27 = 0;
      else
        v27 = v24;
      v28 = &selRef_initWithContact_;
      if (!v25)
        v28 = &selRef__initWithHandle_;
      objc_msgSend(v26, *v28, v27);

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      result = specialized ContiguousArray._endMutation()();
      if ((v8 & 0xC000000000000001) != 0)
      {
        if ((v18 & 1) == 0)
          goto LABEL_23;
        if (__CocoaSet.Index.handleBitPattern.getter())
          swift_isUniquelyReferenced_nonNull_native();
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Set<TUHandle>.Index);
        v38 = (void (*)(char *, _QWORD))Set.Index._asCocoa.modify();
        __CocoaSet.formIndex(after:isUnique:)();
        v38(v44, 0);
      }
      else
      {
        v29 = OUTLINED_FUNCTION_38_47();
        v33 = specialized _NativeSet.index(after:)(v29, v30, v31, v32);
        v35 = v34;
        v37 = v36;
        outlined consume of Set<TUHandle>.Index._Variant(v16, v17, v18);
        v45 = v33;
        v46 = v35;
        v47 = v37 & 1;
      }
      --v10;
    }
    while (v10);
    outlined consume of Set<TUHandle>.Index._Variant(v45, v46, v47);
    v14 = v48;
    swift_bridgeObjectRelease();
    a2 = v43;
    goto LABEL_21;
  }
  __break(1u);
LABEL_23:
  __break(1u);
  return result;
}

uint64_t specialized ConversationControlsBadgingAvatarViewController.__allocating_init(call:conversation:badgeImage:)(void *a1, void *a2, void *a3)
{
  void *v6;
  id v7;
  uint64_t v8;

  if (!a2)
    return specialized ConversationControlsBadgingAvatarViewController.__allocating_init(call:badgeImage:)((uint64_t)a1, a3);
  type metadata accessor for ConversationControlsBadgingAvatarViewController();
  v6 = (void *)objc_opt_self();
  v7 = a2;
  v8 = ConversationControlsBadgingAvatarViewController.__allocating_init(conversation:badgeImage:displayName:badgeBackgroundColor:)(v7, a3, 0, 0, objc_msgSend(v6, sel_clearColor));

  return v8;
}

unint64_t lazy protocol witness table accessor for type HeldInCallControlsView.Style and conformance HeldInCallControlsView.Style()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type HeldInCallControlsView.Style and conformance HeldInCallControlsView.Style;
  if (!lazy protocol witness table cache variable for type HeldInCallControlsView.Style and conformance HeldInCallControlsView.Style)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for HeldInCallControlsView.Style, &type metadata for HeldInCallControlsView.Style);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type HeldInCallControlsView.Style and conformance HeldInCallControlsView.Style);
  }
  return result;
}

uint64_t method lookup function for HeldInCallControlsView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of HeldInCallControlsView.__allocating_init(heldCall:heldConversation:controlsManager:menuHostViewController:style:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t storeEnumTagSinglePayload for HeldInCallControlsView.Style(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BD39DEFC + 4 * byte_1BD65B4D5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BD39DF30 + 4 * byte_1BD65B4D0[v4]))();
}

uint64_t sub_1BD39DF30(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD39DF38(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD39DF40);
  return result;
}

uint64_t sub_1BD39DF4C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD39DF54);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BD39DF58(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD39DF60(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HeldInCallControlsView.Style()
{
  return &type metadata for HeldInCallControlsView.Style;
}

uint64_t protocol witness for SystemApertureAccessoryView.preferredLayoutMargins.getter in conformance SystemApertureEmptyTrailingView@<X0>(uint64_t a1@<X8>)
{
  _BYTE v3[40];

  SystemApertureAccessoryView.preferredLayoutMargins.getter((uint64_t)v3);
  return outlined init with take of SystemApertureLayoutMargins((uint64_t)v3, a1);
}

double SystemApertureAccessoryView.preferredLayoutMargins.getter@<D0>(uint64_t a1@<X8>)
{
  double result;

  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_BYTE *)(a1 + 32) = 2;
  return result;
}

uint64_t dispatch thunk of SystemApertureAccessoryView.preferredLayoutMargins.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of SystemApertureAccessoryView.shouldReplace(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t specialized Sequence.compactMap<A>(_:)(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if (a1 >> 62)
    goto LABEL_18;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; v2 = _CocoaArrayWrapper.endIndex.getter())
  {
    v3 = MEMORY[0x1E0DEE9D8];
    v4 = 4;
    while (1)
    {
      v5 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C3B73D18](v4 - 4, a1) : *(id *)(a1 + 8 * v4);
      v6 = v5;
      v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1))
        break;
      v8 = objc_msgSend(v5, sel_primaryLanguage);
      if (v8)
      {
        v9 = v8;
        v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        v12 = v11;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          v3 = v15;
        }
        v13 = *(_QWORD *)(v3 + 16);
        if (v13 >= *(_QWORD *)(v3 + 24) >> 1)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          v3 = v16;
        }
        *(_QWORD *)(v3 + 16) = v13 + 1;
        v14 = v3 + 16 * v13;
        *(_QWORD *)(v14 + 32) = v10;
        *(_QWORD *)(v14 + 40) = v12;
      }
      else
      {

      }
      ++v4;
      if (v7 == v2)
        goto LABEL_20;
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
  }
  v3 = MEMORY[0x1E0DEE9D8];
LABEL_20:
  swift_bridgeObjectRelease();
  return v3;
}

id static ConversationCapabilities.shared.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for shared, (id *)&static ConversationCapabilities.shared);
}

id ConversationCapabilities.().init()()
{
  void *v0;
  id v1;
  objc_super v3;

  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for ConversationCapabilities();
  v1 = objc_msgSendSuper2(&v3, sel_init);
  ConversationCapabilities.startForwardingCaptionEnablementNotifications()();

  return v1;
}

id ConversationCapabilities.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  ConversationCapabilities.stopForwardingCaptionEnablementNotifications()();
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ConversationCapabilities();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t ConversationCapabilities.captioningAccessibilitySettingEnabled.getter()
{
  if (one-time initialization token for shared != -1)
    swift_once();
  return OUTLINED_FUNCTION_9_86() & 1;
}

void ConversationCapabilities.captioningAccessibilitySettingEnabled.setter(char a1)
{
  uint64_t v2;
  os_log_type_t v3;
  uint8_t *v4;
  NSObject *oslog;

  if (one-time initialization token for shared != -1)
    swift_once();
  (*(void (**)(_QWORD))(*(_QWORD *)static Defaults.shared + 736))(a1 & 1);
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v2 = OUTLINED_FUNCTION_17_2();
  oslog = OUTLINED_FUNCTION_3(v2, (uint64_t)&static Logger.conversationControls);
  v3 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(oslog, v3))
  {
    v4 = (uint8_t *)OUTLINED_FUNCTION_105();
    *(_DWORD *)v4 = 67109120;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl(&dword_1BD004000, oslog, v3, "Captions user accessibility enablement set to: %{BOOL}d", v4, 8u);
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_15_9(oslog);
}

void (*ConversationCapabilities.captioningAccessibilitySettingEnabled.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  _BYTE *v2;

  *a1 = v1;
  v2 = a1 + 1;
  if (one-time initialization token for shared != -1)
    swift_once();
  *v2 = OUTLINED_FUNCTION_9_86() & 1;
  return ConversationCapabilities.captioningAccessibilitySettingEnabled.modify;
}

void ConversationCapabilities.captioningAccessibilitySettingEnabled.modify(uint64_t a1)
{
  ConversationCapabilities.captioningAccessibilitySettingEnabled.setter(*(_BYTE *)(a1 + 8));
}

uint64_t ConversationCapabilities.captioningSettingEnabledPublisher.getter()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v1 = v0;
  v2 = type metadata accessor for NSNotificationCenter.Publisher();
  v26 = *(_QWORD *)(v2 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_77();
  v6 = v5 - v4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.Map<NSNotificationCenter.Publisher, Bool>);
  v27 = *(_QWORD *)(v7 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_77();
  v11 = v10 - v9;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.Concatenate<Publishers.Sequence<[Bool], Never>, Publishers.Map<NSNotificationCenter.Publisher, Bool>>);
  v28 = *(_QWORD *)(v12 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_77();
  v16 = v15 - v14;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.RemoveDuplicates<Publishers.Concatenate<Publishers.Sequence<[Bool], Never>, Publishers.Map<NSNotificationCenter.Publisher, Bool>>>);
  v29 = *(_QWORD *)(v17 - 8);
  v30 = v17;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_77();
  v21 = v20 - v19;
  v22 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  if (one-time initialization token for captionEnablementChangedNotification != -1)
    swift_once();
  NSNotificationCenter.publisher(for:object:)();

  swift_allocObject();
  swift_unknownObjectWeakInit();
  lazy protocol witness table accessor for type NSNotificationCenter.Publisher and conformance NSNotificationCenter.Publisher();
  Publisher.map<A>(_:)();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v6, v2);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Bool>);
  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1BD6441D0;
  *(_BYTE *)(v23 + 32) = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x50))() & 1;
  lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type Publishers.Map<NSNotificationCenter.Publisher, Bool> and conformance Publishers.Map<A, B>, &demangling cache variable for type metadata for Publishers.Map<NSNotificationCenter.Publisher, Bool>, MEMORY[0x1E0C95950]);
  Publisher.prepend(_:)();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v11, v7);
  lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type Publishers.Concatenate<Publishers.Sequence<[Bool], Never>, Publishers.Map<NSNotificationCenter.Publisher, Bool>> and conformance Publishers.Concatenate<A, B>, &demangling cache variable for type metadata for Publishers.Concatenate<Publishers.Sequence<[Bool], Never>, Publishers.Map<NSNotificationCenter.Publisher, Bool>>, MEMORY[0x1E0C95788]);
  Publisher<>.removeDuplicates()();
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v16, v12);
  lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type Publishers.RemoveDuplicates<Publishers.Concatenate<Publishers.Sequence<[Bool], Never>, Publishers.Map<NSNotificationCenter.Publisher, Bool>>> and conformance Publishers.RemoveDuplicates<A>, &demangling cache variable for type metadata for Publishers.RemoveDuplicates<Publishers.Concatenate<Publishers.Sequence<[Bool], Never>, Publishers.Map<NSNotificationCenter.Publisher, Bool>>>, MEMORY[0x1E0C958E0]);
  v24 = Publisher.eraseToAnyPublisher()();
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v21, v30);
  return v24;
}

void closure #1 in ConversationCapabilities.captioningSettingEnabledPublisher.getter(uint64_t a1@<X1>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  char v6;
  char v7;

  v3 = a1 + 16;
  swift_beginAccess();
  v4 = (_QWORD *)MEMORY[0x1C3B752C0](v3);
  if (v4)
  {
    v5 = v4;
    v6 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v4) + 0x50))();

    v7 = v6 & 1;
  }
  else
  {
    v7 = 0;
  }
  *a2 = v7;
}

uint64_t ConversationCapabilities.isCaptioningSupported.getter()
{
  uint64_t v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v21[2];

  if (objc_msgSend((id)objc_opt_self(), sel_isCaptioningSupported))
  {
    v0 = specialized Set.init<A>(_:)((uint64_t)&outlined read-only object #0 of ConversationCapabilities.isCaptioningSupported.getter);
    v1 = objc_msgSend((id)objc_opt_self(), sel_activeInputModes);
    type metadata accessor for UITextInputMode();
    v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    v3 = specialized Sequence.compactMap<A>(_:)(v2);
    swift_bridgeObjectRelease();
    v4 = specialized Set.init<A>(_:)(v3);
    v5 = specialized Set.isDisjoint(with:)(v0, v4) ^ 1;
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v6 = OUTLINED_FUNCTION_17_2();
    __swift_project_value_buffer(v6, (uint64_t)&static Logger.conversationControls);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v7 = Logger.logObject.getter();
    v8 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = OUTLINED_FUNCTION_105();
      v21[0] = OUTLINED_FUNCTION_105();
      *(_DWORD *)v9 = 67109634;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v9 + 8) = 2080;
      swift_bridgeObjectRetain();
      v10 = Set.description.getter();
      v12 = v11;
      swift_bridgeObjectRelease();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v10, v12, v21);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_19_1();
      swift_bridgeObjectRelease();
      *(_WORD *)(v9 + 18) = 2080;
      swift_bridgeObjectRetain();
      v13 = Set.description.getter();
      v15 = v14;
      swift_bridgeObjectRelease();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v13, v15, v21);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_19_1();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD004000, v7, v8, "Captions Supported: %{BOOL}d\nSupported Locales: %s\nDevice Locales: %s", (uint8_t *)v9, 0x1Cu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_19_1();
    OUTLINED_FUNCTION_19_1();
  }
  else
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v16 = OUTLINED_FUNCTION_17_2();
    v17 = OUTLINED_FUNCTION_3(v16, (uint64_t)&static Logger.conversationControls);
    v18 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)OUTLINED_FUNCTION_105();
      *(_WORD *)v19 = 0;
      _os_log_impl(&dword_1BD004000, v17, v18, "Captioning not supported on this device.", v19, 2u);
      OUTLINED_FUNCTION_60();
    }

    v5 = 0;
  }
  return v5 & 1;
}

uint64_t specialized Set.isDisjoint(with:)(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  Swift::Int v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  BOOL v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 1;
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    return 1;
  if (v2 >= v3)
    v4 = a1;
  else
    v4 = a2;
  if (v2 >= v3)
    v5 = a2;
  else
    v5 = a1;
  v32 = v4;
  v33 = v4 + 56;
  v6 = -1 << *(_BYTE *)(v4 + 32);
  if (-v6 < 64)
    v7 = ~(-1 << -(char)v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v4 + 56);
  v31 = (unint64_t)(63 - v6) >> 6;
  v9 = v5 + 56;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRetain();
  v11 = 0;
  while (1)
  {
    v12 = v11;
    if (!v8)
      break;
    v13 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v14 = v13 | (v11 << 6);
LABEL_29:
    if (*(_QWORD *)(v5 + 16))
    {
      v18 = (uint64_t *)(*(_QWORD *)(v32 + 48) + 16 * v14);
      v20 = *v18;
      v19 = v18[1];
      Hasher.init(_seed:)();
      swift_bridgeObjectRetain();
      String.hash(into:)();
      v21 = Hasher._finalize()();
      v22 = -1 << *(_BYTE *)(v5 + 32);
      v23 = v21 & ~v22;
      if (((*(_QWORD *)(v9 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) != 0)
      {
        v24 = *(_QWORD *)(v5 + 48);
        v25 = (_QWORD *)(v24 + 16 * v23);
        v26 = *v25 == v20 && v25[1] == v19;
        if (v26 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
LABEL_46:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v30 = 0;
LABEL_47:
          outlined consume of [String : Application].Iterator._Variant();
          return v30;
        }
        v27 = ~v22;
        while (1)
        {
          v23 = (v23 + 1) & v27;
          if (((*(_QWORD *)(v9 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) == 0)
            break;
          v28 = (_QWORD *)(v24 + 16 * v23);
          v29 = *v28 == v20 && v28[1] == v19;
          if (v29 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            goto LABEL_46;
        }
      }
      result = swift_bridgeObjectRelease();
    }
  }
  v15 = v11 + 1;
  if (__OFADD__(v11, 1))
  {
    __break(1u);
    goto LABEL_51;
  }
  if (v15 >= v31)
    goto LABEL_49;
  v16 = *(_QWORD *)(v33 + 8 * v15);
  ++v11;
  if (v16)
    goto LABEL_28;
  v11 = v12 + 2;
  if (v12 + 2 >= v31)
    goto LABEL_49;
  v16 = *(_QWORD *)(v33 + 8 * v11);
  if (v16)
    goto LABEL_28;
  v11 = v12 + 3;
  if (v12 + 3 >= v31)
    goto LABEL_49;
  v16 = *(_QWORD *)(v33 + 8 * v11);
  if (v16)
  {
LABEL_28:
    v8 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
    goto LABEL_29;
  }
  v17 = v12 + 4;
  if (v12 + 4 >= v31)
  {
LABEL_49:
    swift_bridgeObjectRelease();
    v30 = 1;
    goto LABEL_47;
  }
  v16 = *(_QWORD *)(v33 + 8 * v17);
  if (v16)
  {
    v11 = v12 + 4;
    goto LABEL_28;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= v31)
      goto LABEL_49;
    v16 = *(_QWORD *)(v33 + 8 * v11);
    ++v17;
    if (v16)
      goto LABEL_28;
  }
LABEL_51:
  __break(1u);
  return result;
}

uint64_t one-time initialization function for captionEnablementChangedNotification()
{
  uint64_t result;

  result = MEMORY[0x1C3B72E00](0xD00000000000003ELL, 0x80000001BD688490);
  static ConversationCapabilities.captionEnablementChangedNotification = result;
  return result;
}

id static ConversationCapabilities.captionEnablementChangedNotification.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for captionEnablementChangedNotification, (id *)&static ConversationCapabilities.captionEnablementChangedNotification);
}

void ConversationCapabilities.startForwardingCaptionEnablementNotifications()()
{
  void *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  __CFNotificationCenter *v7;
  __CFNotificationCenter *v8;
  __CFString *name;

  v1 = v0;
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v2 = OUTLINED_FUNCTION_17_2();
  v3 = (void *)OUTLINED_FUNCTION_3(v2, (uint64_t)&static Logger.conversationControls);
  v4 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_5_3(v4))
  {
    *(_WORD *)OUTLINED_FUNCTION_105() = 0;
    OUTLINED_FUNCTION_2_5(&dword_1BD004000, v5, v6, "Starting to foward caption enablement notifications");
    OUTLINED_FUNCTION_60();
  }

  v7 = CFNotificationCenterGetDarwinNotifyCenter();
  if (*MEMORY[0x1E0DDDF28])
  {
    v8 = v7;
    name = (__CFString *)(id)*MEMORY[0x1E0DDDF28];
    CFNotificationCenterAddObserver(v8, v1, (CFNotificationCallback)@objc closure #1 in ConversationCapabilities.startForwardingCaptionEnablementNotifications(), name, 0, CFNotificationSuspensionBehaviorDeliverImmediately);

    OUTLINED_FUNCTION_15_9(name);
  }
  else
  {
    __break(1u);
  }
}

uint64_t closure #1 in ConversationCapabilities.startForwardingCaptionEnablementNotifications()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  void *v8;
  id v9;
  id v10;
  Class isa;
  _OWORD v13[2];

  v0 = type metadata accessor for Notification();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v4 = type metadata accessor for Logger();
  __swift_project_value_buffer(v4, (uint64_t)&static Logger.conversationControls);
  v5 = Logger.logObject.getter();
  v6 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_1BD004000, v5, v6, "Forwarding captions enablement notification from Dawrin Notifaction center", v7, 2u);
    MEMORY[0x1C3B751B8](v7, -1, -1);
  }

  v8 = (void *)MEMORY[0x1C3B72E00](0xD00000000000003ELL, 0x80000001BD688490);
  memset(v13, 0, sizeof(v13));
  v9 = v8;
  Notification.init(name:object:userInfo:)();
  v10 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  isa = Notification._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v10, sel_postNotification_, isa);

  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

void @objc closure #1 in ConversationCapabilities.startForwardingCaptionEnablementNotifications()(void *a1, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  id v7;
  id v8;
  id v9;

  v7 = a1;
  v8 = a3;
  v9 = a5;
  closure #1 in ConversationCapabilities.startForwardingCaptionEnablementNotifications()();

}

void ConversationCapabilities.stopForwardingCaptionEnablementNotifications()()
{
  void *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  __CFNotificationCenter *center;

  v1 = v0;
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v2 = OUTLINED_FUNCTION_17_2();
  v3 = (void *)OUTLINED_FUNCTION_3(v2, (uint64_t)&static Logger.conversationControls);
  v4 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_5_3(v4))
  {
    *(_WORD *)OUTLINED_FUNCTION_105() = 0;
    OUTLINED_FUNCTION_2_5(&dword_1BD004000, v5, v6, "Stopping forwarding of caption enablement notifactions");
    OUTLINED_FUNCTION_60();
  }

  center = CFNotificationCenterGetDarwinNotifyCenter();
  CFNotificationCenterRemoveEveryObserver(center, v1);
  OUTLINED_FUNCTION_15_9(center);
}

uint64_t type metadata accessor for ConversationCapabilities()
{
  return objc_opt_self();
}

uint64_t sub_1BD39F2EC()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void partial apply for closure #1 in ConversationCapabilities.captioningSettingEnabledPublisher.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  closure #1 in ConversationCapabilities.captioningSettingEnabledPublisher.getter(v1, a1);
}

unint64_t type metadata accessor for UITextInputMode()
{
  unint64_t result;

  result = lazy cache variable for type metadata for UITextInputMode;
  if (!lazy cache variable for type metadata for UITextInputMode)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for UITextInputMode);
  }
  return result;
}

uint64_t sub_1BD39F354@<X0>(_QWORD **a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x50))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_1BD39F398(unsigned __int8 *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x58))(*a1);
}

uint64_t method lookup function for ConversationCapabilities()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ConversationCapabilities.captioningAccessibilitySettingEnabled.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x50))();
}

uint64_t dispatch thunk of ConversationCapabilities.captioningAccessibilitySettingEnabled.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x58))();
}

uint64_t dispatch thunk of ConversationCapabilities.captioningAccessibilitySettingEnabled.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of ConversationCapabilities.captioningSettingEnabledPublisher.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of ConversationCapabilities.isCaptioningSupported.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t ScreenSharingContentLayout.callAsFunction<A, B, C>(_:title:toolbar:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, __int128 a11, uint64_t a12)
{
  __int128 *v12;
  __int128 v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD v19[5];
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  _OWORD v30[2];

  v14 = v12[1];
  v28 = *v12;
  v29 = v14;
  v30[0] = v12[2];
  *(_OWORD *)((char *)v30 + 9) = *(__int128 *)((char *)v12 + 41);
  v19[2] = a7;
  v19[3] = a8;
  v19[4] = a10;
  v20 = a11;
  v21 = a12;
  v22 = a1;
  v23 = a2;
  v24 = a3;
  v25 = a4;
  v26 = a5;
  v27 = a6;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _TraitWritingModifier<_LayoutTrait<LayoutRoleKey>>);
  OUTLINED_FUNCTION_28_54();
  OUTLINED_FUNCTION_28_54();
  OUTLINED_FUNCTION_28_54();
  OUTLINED_FUNCTION_44_12();
  v15 = type metadata accessor for TupleView();
  v16 = lazy protocol witness table accessor for type ScreenSharingContentLayout and conformance ScreenSharingContentLayout();
  v17 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CE0680], v15);
  return Layout.callAsFunction<A>(_:)((uint64_t)partial apply for closure #1 in ScreenSharingContentLayout.callAsFunction<A, B, C>(_:title:toolbar:), (uint64_t)v19, (uint64_t)&type metadata for ScreenSharingContentLayout, v15, v16, v17, a9);
}

uint64_t ScreenSharingContentLayout.init(contentMode:safeAreaInsets:toolbarPlacement:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>, double a6@<D2>, double a7@<D3>)
{
  *(_OWORD *)a3 = xmmword_1BD649410;
  *(_BYTE *)(a3 + 16) = result & 1;
  *(double *)(a3 + 24) = a4;
  *(double *)(a3 + 32) = a5;
  *(double *)(a3 + 40) = a6;
  *(double *)(a3 + 48) = a7;
  *(_BYTE *)(a3 + 56) = a2;
  return result;
}

uint64_t Layout.callAsFunction<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD v18[10];

  v18[0] = a6;
  v18[1] = a7;
  v13 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v15 = (char *)v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for _LayoutRoot();
  MEMORY[0x1E0C80A78](v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v7, a3);
  _LayoutRoot.init(_:)();
  v18[4] = a3;
  v18[5] = a4;
  v18[6] = a5;
  v18[7] = v18[0];
  v18[8] = a1;
  v18[9] = a2;
  MEMORY[0x1C3B750C8](MEMORY[0x1E0CD8A18], v16);
  return _VariadicView.Tree.init(_:content:)();
}

double ScreenSharingContentLayout.additionalSafeAreaInsets.getter()
{
  uint64_t v0;
  int v1;
  double v2;
  double result;
  int v4;
  unsigned __int8 v5;
  double v6;
  double v7;

  v1 = Edge.rawValue.getter();
  if (v1 == Edge.rawValue.getter())
  {
    v2 = 9.0 - *(double *)(v0 + 24);
    if (v2 > 0.0)
      return v2 + 4.0;
    else
      return 4.0;
  }
  else
  {
    v4 = Edge.rawValue.getter();
    v5 = Edge.rawValue.getter();
    v6 = *(double *)(v0 + 24);
    v7 = 11.0 - v6;
    if (11.0 - v6 <= 0.0)
      v7 = 0.0;
    result = 36.0 - v6;
    if (result <= 0.0)
      result = 0.0;
    if (v4 != v5)
      return v7;
  }
  return result;
}

uint64_t ScreenSharingContentLayout.contentMode.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

double ScreenSharingContentLayout.safeAreaInsets.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

uint64_t ScreenSharingContentLayout.toolbarPlacement.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 56);
}

double CGRect.center.getter(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  double MidX;
  CGRect v10;

  MidX = CGRectGetMidX(*(CGRect *)&a1);
  v10.origin.x = a1;
  v10.origin.y = a2;
  v10.size.width = a3;
  v10.size.height = a4;
  CGRectGetMidY(v10);
  return MidX;
}

__C::CGRect __swiftcall CGRect.init(center:size:)(CGPoint center, CGSize size)
{
  double v2;
  double v3;
  __C::CGRect result;

  v2 = center.x - size.width * 0.5;
  v3 = center.y - size.height * 0.5;
  result.size.height = size.height;
  result.size.width = size.width;
  result.origin.y = v3;
  result.origin.x = v2;
  return result;
}

void ScreenSharingContentLayout.contentBounds(in:titleSize:toolbarSize:)(double a1, double a2, double a3, double a4)
{
  double *v4;
  double v9;
  double v10;

  if ((static ContentMode.== infix(_:_:)() & 1) != 0)
  {
    v9 = ScreenSharingContentLayout.additionalSafeAreaInsets.getter();
    v10 = v4[1];
    ScreenSharingContentLayout.additionalSafeAreaInsets.getter();
    UIEdgeInsetsInsetRect(a1, a2, a3, a4, v9, v10);
    __asm { BR              X10 }
  }
  UIEdgeInsetsInsetRect(a1, a2, a3, a4, -v4[3], -v4[4]);
}

double ScreenSharingContentLayout.sizeThatFits(proposal:subviews:cache:)(uint64_t a1, char a2)
{
  double result;

  result = *(double *)&a1;
  if ((a2 & 1) != 0)
    return 10.0;
  return result;
}

void ScreenSharingContentLayout.placeToolbar(_:in:contentBounds:constrainedToSize:toolbarSize:)()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(v0 + 56);
  Axis.rawValue.getter();
  Axis.rawValue.getter();
  static ContentMode.== infix(_:_:)();
  __asm { BR              X9 }
}

uint64_t sub_1BD39FAC8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t rect, char a11, int a12, __int16 a13, char a14, char a15, int a16, __int16 a17, char a18, char a19, int a20,__int16 a21,char a22,char a23,int a24,__int16 a25,char a26,char a27,int a28,__int16 a29,char a30,char a31,int a32,__int16 a33,char a34,char a35,int a36,__int16 a37,char a38,char a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  CGFloat v57;
  CGFloat v58;
  CGFloat v59;
  CGFloat v60;
  CGRect v62;
  CGRect v63;

  v62.origin.x = v60;
  v62.origin.y = v59;
  v62.size.width = v58;
  v62.size.height = v57;
  CGRectGetMidX(v62);
  v63.origin.x = v60;
  v63.origin.y = v59;
  v63.size.width = v58;
  v63.size.height = v57;
  CGRectGetMinY(v63);
  ScreenSharingContentLayout.additionalSafeAreaInsets.getter();
  static UnitPoint.top.getter();
  return LayoutSubview.place(at:anchor:proposal:)();
}

void ScreenSharingContentLayout.placeSubviews(in:proposal:subviews:cache:)(CGFloat a1, CGFloat a2, double a3, double a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t, uint64_t, __n128);
  unint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t *, _QWORD);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t, char *, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  void (*v77)(uint64_t *, _QWORD);
  uint64_t v78;
  void (*v79)(uint64_t, uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  char v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  double v98;
  double v99;
  double v100;
  double v101;
  double v102;
  double v103;
  double v104;
  double v105;
  double v106;
  uint64_t v107;
  uint64_t v108;
  void (*v109)(uint64_t *, uint64_t, uint64_t);
  double v110;
  double v111;
  double v112;
  double v113;
  double v114;
  char v115;
  char v116;
  uint64_t v117;
  char v118;
  uint64_t v119;
  char v120;
  double v121;
  double v122;
  double v123;
  double v124;
  char v125;
  uint64_t v126;
  char v127;
  uint64_t v128;
  char v129;
  BOOL v130;
  double v131;
  double v132;
  BOOL v134;
  double v135;
  double v137;
  uint64_t v138;
  char v139;
  uint64_t v140;
  char v141;
  double v142;
  double v143;
  int v144;
  double MidX;
  CGFloat v146;
  CGFloat v147;
  CGFloat v148;
  double MidY;
  double MinX;
  double MaxX;
  CGFloat v152;
  CGFloat v153;
  CGFloat v154;
  void (*v155)(uint64_t *, _QWORD);
  uint64_t v156;
  void (*v157)(uint64_t, uint64_t, uint64_t);
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  unint64_t v161;
  unint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  CGFloat v169;
  CGFloat v170;
  CGFloat v171;
  CGFloat v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  unint64_t v186;
  uint64_t v187;
  CGFloat y;
  CGFloat x;
  uint64_t v190;
  CGFloat v191;
  CGFloat v192;
  double v193;
  int v194;
  uint64_t v195;
  double v196;
  double v197;
  uint64_t v198;
  uint64_t *v199;
  CGFloat v200;
  uint64_t v201;
  double v202;
  double v203;
  CGFloat v204;
  double v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  char v209[8];
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  CGRect v216;
  CGRect v217;
  CGRect v218;
  CGRect v219;
  CGRect v220;
  CGRect v221;
  CGRect v222;
  CGRect v223;
  CGRect v224;
  CGRect v225;

  v202 = a3;
  v203 = a4;
  v192 = a2;
  v191 = a1;
  v10 = type metadata accessor for LayoutSubview();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_5_27();
  OUTLINED_FUNCTION_5_18();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_5_18();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_18_0();
  v206 = v14;
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_5_18();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_5_18();
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_5_18();
  MEMORY[0x1E0C80A78](v18);
  *(_QWORD *)&v193 = (char *)&v176 - v19;
  v20 = type metadata accessor for LayoutSubviews();
  v21 = *(double *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_5_27();
  OUTLINED_FUNCTION_5_18();
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v176 - v23;
  v25 = COERCE_DOUBLE(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IndexingIterator<LayoutSubviews>));
  MEMORY[0x1E0C80A78](*(_QWORD *)&v25);
  OUTLINED_FUNCTION_5_27();
  OUTLINED_FUNCTION_5_18();
  MEMORY[0x1E0C80A78](v26);
  OUTLINED_FUNCTION_18_0();
  v201 = v27;
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)&v176 - v29;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LayoutSubview?);
  MEMORY[0x1E0C80A78](v31);
  OUTLINED_FUNCTION_5_27();
  OUTLINED_FUNCTION_5_18();
  MEMORY[0x1E0C80A78](v32);
  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_5_18();
  MEMORY[0x1E0C80A78](v33);
  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_5_18();
  MEMORY[0x1E0C80A78](v34);
  OUTLINED_FUNCTION_18_0();
  v200 = v35;
  MEMORY[0x1E0C80A78](v36);
  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_5_18();
  MEMORY[0x1E0C80A78](v37);
  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_5_18();
  MEMORY[0x1E0C80A78](v38);
  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_5_18();
  MEMORY[0x1E0C80A78](v39);
  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_5_18();
  MEMORY[0x1E0C80A78](v40);
  v42 = (char *)&v176 - v41;
  v44 = MEMORY[0x1E0C80A78](v43);
  v190 = (uint64_t)&v176 - v45;
  v204 = v21;
  v46 = *(void (**)(char *, uint64_t, uint64_t, __n128))(*(_QWORD *)&v21 + 16);
  x = *(double *)&a9;
  v205 = *(double *)&v46;
  v46(v24, a9, v20, v44);
  lazy protocol witness table accessor for type LayoutSubviews and conformance LayoutSubviews(&lazy protocol witness table cache variable for type LayoutSubviews and conformance LayoutSubviews);
  v186 = v47;
  dispatch thunk of Sequence.makeIterator()();
  y = v25;
  v48 = &v30[*(int *)(*(_QWORD *)&v25 + 36)];
  lazy protocol witness table accessor for type LayoutSubviews and conformance LayoutSubviews(&lazy protocol witness table cache variable for type LayoutSubviews and conformance LayoutSubviews);
  v50 = v49;
  while (1)
  {
    v51 = *(_QWORD *)v48;
    OUTLINED_FUNCTION_10_94();
    if (v51 == v208)
    {
      v54 = OUTLINED_FUNCTION_19_3((uint64_t)v42, 1);
      v55 = v11;
LABEL_7:
      OUTLINED_FUNCTION_31_51(v54, &demangling cache variable for type metadata for IndexingIterator<LayoutSubviews>);
      v59 = 1;
      goto LABEL_8;
    }
    v52 = (void (*)(uint64_t *, _QWORD))OUTLINED_FUNCTION_18_74();
    OUTLINED_FUNCTION_8_7((uint64_t)v42, v53, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 16));
    v52(&v208, 0);
    OUTLINED_FUNCTION_7_101((uint64_t)v24, (uint64_t)v30);
    OUTLINED_FUNCTION_22_67();
    OUTLINED_FUNCTION_8_90();
    OUTLINED_FUNCTION_19_3((uint64_t)v42, 0);
    v54 = OUTLINED_FUNCTION_59_0((uint64_t)v42);
    v55 = v11;
    if (v130)
      goto LABEL_7;
    v56 = *(void (**)(uint64_t, char *, uint64_t))(v11 + 32);
    v57 = OUTLINED_FUNCTION_33_47((uint64_t)&v212);
    v56(v57, v42, v10);
    lazy protocol witness table accessor for type LayoutRoleKey and conformance LayoutRoleKey();
    v58 = OUTLINED_FUNCTION_26_53();
    if (!(_BYTE)v208)
      break;
    OUTLINED_FUNCTION_101((uint64_t)v52, *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
  }
  OUTLINED_FUNCTION_31_51(v58, &demangling cache variable for type metadata for IndexingIterator<LayoutSubviews>);
  v174 = OUTLINED_FUNCTION_23_62((uint64_t)&v211);
  ((void (*)(uint64_t))v56)(v174);
  v59 = 0;
  v55 = v11;
LABEL_8:
  v60 = OUTLINED_FUNCTION_30_53(v59, (uint64_t)&v211);
  v61 = v183;
  OUTLINED_FUNCTION_29_53(v60);
  v62 = OUTLINED_FUNCTION_59_0(v61);
  v63 = *(_QWORD *)&v200;
  if (v130)
  {
    OUTLINED_FUNCTION_143(v62, &demangling cache variable for type metadata for LayoutSubview?);
    v185 = 0;
    v184 = 0;
  }
  else
  {
    v64 = static ProposedViewSize.unspecified.getter();
    OUTLINED_FUNCTION_16_71(v64, v65, v66, v67);
    v184 = v68;
    v185 = v69;
    OUTLINED_FUNCTION_2_109();
  }
  v70 = v201;
  OUTLINED_FUNCTION_7_101((uint64_t)v24, *(uint64_t *)&x);
  OUTLINED_FUNCTION_21_70();
  v71 = v70;
  v72 = (uint64_t *)(v70 + *(int *)(*(_QWORD *)&y + 36));
  v73 = *v72;
  OUTLINED_FUNCTION_10_94();
  if (v73 == v208)
  {
LABEL_17:
    OUTLINED_FUNCTION_19_3(v195, 1);
  }
  else
  {
    v74 = v195;
    while (1)
    {
      v75 = v50;
      v76 = v24;
      v77 = (void (*)(uint64_t *, _QWORD))OUTLINED_FUNCTION_18_74();
      OUTLINED_FUNCTION_8_7(v74, v78, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v55 + 16));
      v77(&v208, 0);
      v24 = v76;
      v50 = v75;
      OUTLINED_FUNCTION_7_101((uint64_t)v24, v71);
      dispatch thunk of Collection.formIndex(after:)();
      OUTLINED_FUNCTION_8_90();
      __swift_storeEnumTagSinglePayload(v74, 0, 1, v10);
      OUTLINED_FUNCTION_59_0(v74);
      if (v130)
        break;
      v79 = *(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 32);
      v80 = OUTLINED_FUNCTION_33_47((uint64_t)&v213);
      v79(v80, v74, v10);
      lazy protocol witness table accessor for type LayoutRoleKey and conformance LayoutRoleKey();
      OUTLINED_FUNCTION_26_53();
      if (v208 == 2)
      {
        outlined destroy of OS_dispatch_queue.SchedulerOptions?(v201, &demangling cache variable for type metadata for IndexingIterator<LayoutSubviews>);
        v175 = OUTLINED_FUNCTION_23_62((uint64_t)&v210);
        ((void (*)(uint64_t))v79)(v175);
        v82 = 0;
        v63 = *(_QWORD *)&v200;
        goto LABEL_19;
      }
      OUTLINED_FUNCTION_2_109();
      v81 = *v72;
      v71 = v201;
      OUTLINED_FUNCTION_10_94();
      v130 = v81 == v208;
      v63 = *(_QWORD *)&v200;
      if (v130)
        goto LABEL_17;
    }
  }
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v201, &demangling cache variable for type metadata for IndexingIterator<LayoutSubviews>);
  v82 = 1;
LABEL_19:
  v83 = OUTLINED_FUNCTION_30_53(v82, (uint64_t)&v210);
  v84 = v180;
  OUTLINED_FUNCTION_29_53(v83);
  v85 = OUTLINED_FUNCTION_59_0(v84);
  v86 = v198;
  if (v130)
  {
    OUTLINED_FUNCTION_143(v85, &demangling cache variable for type metadata for LayoutSubview?);
    v183 = 0;
    v182 = 0;
  }
  else
  {
    v87 = static ProposedViewSize.unspecified.getter();
    OUTLINED_FUNCTION_16_71(v87, v88, v89, v90);
    v182 = v91;
    v183 = v92;
    OUTLINED_FUNCTION_2_109();
  }
  v93 = OUTLINED_FUNCTION_33_47((uint64_t)v209);
  OUTLINED_FUNCTION_7_101(v93, *(uint64_t *)&x);
  v207 = MEMORY[0x1E0DEE9D8];
  OUTLINED_FUNCTION_21_70();
  v94 = (uint64_t *)(v86 + *(int *)(*(_QWORD *)&y + 36));
  v95 = *v94;
  OUTLINED_FUNCTION_10_94();
  v201 = v55;
  if (v95 == v208)
  {
LABEL_23:
    OUTLINED_FUNCTION_19_3(v63, 1);
  }
  else
  {
    while (1)
    {
      v155 = (void (*)(uint64_t *, _QWORD))OUTLINED_FUNCTION_18_74();
      OUTLINED_FUNCTION_8_7(v63, v156, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v55 + 16));
      v155(&v208, 0);
      OUTLINED_FUNCTION_7_101((uint64_t)v24, v86);
      OUTLINED_FUNCTION_22_67();
      OUTLINED_FUNCTION_8_90();
      OUTLINED_FUNCTION_19_3(v63, 0);
      OUTLINED_FUNCTION_59_0(v63);
      if (v130)
        break;
      v157 = *(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 32);
      v158 = OUTLINED_FUNCTION_33_47((uint64_t)&v214);
      v157(v158, v63, v10);
      lazy protocol witness table accessor for type LayoutRoleKey and conformance LayoutRoleKey();
      OUTLINED_FUNCTION_26_53();
      if (v208 == 1)
      {
        v159 = OUTLINED_FUNCTION_23_62((uint64_t)&v215);
        ((void (*)(uint64_t))v157)(v159);
        v160 = v207;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(v160 + 16) + 1, 1);
          v160 = v207;
        }
        v162 = *(_QWORD *)(v160 + 16);
        v161 = *(_QWORD *)(v160 + 24);
        if (v162 >= v161 >> 1)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v161 > 1, v162 + 1, 1);
          v160 = v207;
        }
        *(_QWORD *)(v160 + 16) = v162 + 1;
        v55 = v201;
        v157(v160+ ((*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80))+ *(_QWORD *)(v201 + 72) * v162, *(_QWORD *)&v197, v10);
        v207 = v160;
        v63 = *(_QWORD *)&v200;
      }
      else
      {
        OUTLINED_FUNCTION_2_109();
      }
      v163 = *v94;
      v86 = v198;
      OUTLINED_FUNCTION_10_94();
      if (v163 == v208)
        goto LABEL_23;
    }
  }
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v86, &demangling cache variable for type metadata for IndexingIterator<LayoutSubviews>);
  OUTLINED_FUNCTION_31_51(v96, &demangling cache variable for type metadata for LayoutSubview?);
  v97 = v207;
  v98 = OUTLINED_FUNCTION_12_88();
  ScreenSharingContentLayout.contentBounds(in:titleSize:toolbarSize:)(v98, v99, v100, v101);
  v204 = v103;
  v205 = v104;
  v200 = v105;
  v106 = v102;
  v107 = *(_QWORD *)(v97 + 16);
  v181 = v97;
  if (v107)
  {
    v196 = 0.0;
    v195 = 0;
    v108 = v97 + ((*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80));
    v198 = *(_QWORD *)(v55 + 72);
    v109 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v55 + 16);
    v110 = v102;
    v111 = v205;
    v112 = -0.461538462;
    v197 = fabs(v202 / v203 + -0.461538462);
    OUTLINED_FUNCTION_19_61();
    *(double *)&v186 = -0.461538462;
    while (1)
    {
      v109(v94, v108, v10);
      __swift_storeEnumTagSinglePayload((uint64_t)v94, 0, 1, v10);
      OUTLINED_FUNCTION_59_0((uint64_t)v94);
      if (v130)
        goto LABEL_87;
      OUTLINED_FUNCTION_8_7(v206, (uint64_t)v94, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v55 + 32));
      v113 = v110;
      v114 = v111;
      if ((OUTLINED_FUNCTION_20_68() & 1) != 0)
      {
        static ProposedViewSize.unspecified.getter();
        OUTLINED_FUNCTION_34_37();
        LOBYTE(v208) = v115 & 1;
        LOBYTE(v207) = v116 & 1;
        v113 = v110;
        v114 = v111;
        if ((static ProposedViewSize.== infix(_:_:)() & 1) == 0)
          break;
      }
LABEL_64:
      if (v202 < v203)
      {
        v138 = static ProposedViewSize.unspecified.getter();
        OUTLINED_FUNCTION_13_89(v138, v139, v140, v141);
        if (fabs(v142 / v143 + v112) < 0.01 && v197 < 0.06)
        {
          v194 = 0;
          v196 = v113;
          v195 = *(_QWORD *)&v114;
        }
      }
      if ((OUTLINED_FUNCTION_20_68() & 1) == 0)
        goto LABEL_72;
      v144 = Axis.rawValue.getter();
      if (v144 != Axis.rawValue.getter())
        goto LABEL_72;
      v216.origin.x = OUTLINED_FUNCTION_12_88();
      MidX = CGRectGetMidX(v216);
      v146 = v204;
      v217.size.height = v205;
      v217.origin.x = v204;
      v147 = v106;
      v148 = v200;
      v217.origin.y = v200;
      v217.size.width = v147;
      MidY = CGRectGetMidY(v217);
      v218.origin.x = MidX - v113 * 0.5;
      v218.origin.y = MidY - v114 * 0.5;
      x = v218.origin.x;
      y = v218.origin.y;
      v193 = v113;
      v218.size.width = v113;
      v218.size.height = v114;
      MinX = CGRectGetMinX(v218);
      v219.origin.x = v146;
      v219.origin.y = v148;
      v106 = v147;
      v112 = *(double *)&v186;
      v219.size.width = v106;
      v219.size.height = v205;
      if (CGRectGetMinX(v219) > MinX)
        goto LABEL_72;
      v220.origin.x = x;
      v220.origin.y = y;
      v220.size.width = v193;
      v220.size.height = v114;
      MaxX = CGRectGetMaxX(v220);
      v221.origin.x = v204;
      v221.size.height = v205;
      v221.origin.y = v200;
      v221.size.width = v106;
      if (MaxX > CGRectGetMaxX(v221))
      {
LABEL_72:
        v153 = v204;
        v152 = v205;
        v222.origin.x = v204;
        v154 = v200;
        v222.origin.y = v200;
        v222.size.width = v106;
        v222.size.height = v205;
        CGRectGetMidX(v222);
        v223.origin.x = v153;
        v223.origin.y = v154;
        v223.size.width = v106;
        v223.size.height = v152;
        CGRectGetMidY(v223);
      }
      v94 = v199;
      static UnitPoint.center.getter();
      LOBYTE(v208) = 0;
      LOBYTE(v207) = 0;
      LayoutSubview.place(at:anchor:proposal:)();
      v55 = v201;
      OUTLINED_FUNCTION_2_109();
      v108 += v198;
      if (!--v107)
        goto LABEL_86;
    }
    v117 = static ProposedViewSize.unspecified.getter();
    OUTLINED_FUNCTION_13_89(v117, v118, v119, v120);
    v122 = v121;
    v124 = v123;
    v125 = OUTLINED_FUNCTION_20_68();
    static ProposedViewSize.unspecified.getter();
    OUTLINED_FUNCTION_34_37();
    if ((v125 & 1) != 0)
    {
      if ((OUTLINED_FUNCTION_5_108(v126, v127, v128, v129) & 1) == 0)
      {
        v130 = v106 == 0.0 && v122 == 0.0;
        v131 = v106 / v122;
        v132 = INFINITY;
        if (v130)
          v131 = INFINITY;
        if (v205 != 0.0 || v124 != 0.0)
          v132 = v205 / v124;
        if (v132 < v131)
          v131 = v132;
LABEL_57:
        if (v122 == 0.0)
          v122 = 0.0;
        else
          v122 = v122 * v131;
        v137 = v124 * v131;
        if (v124 == 0.0)
          v124 = 0.0;
        else
          v124 = v137;
      }
    }
    else if ((OUTLINED_FUNCTION_5_108(v126, v127, v128, v129) & 1) == 0)
    {
      v134 = v106 == 0.0 && v122 == 0.0;
      v131 = v106 / v122;
      v135 = -INFINITY;
      if (v134)
        v131 = -INFINITY;
      if (v205 != 0.0 || v124 != 0.0)
        v135 = v205 / v124;
      if (v131 <= v135)
        v131 = v135;
      goto LABEL_57;
    }
    v113 = v122;
    v114 = v124;
    goto LABEL_64;
  }
  v196 = 0.0;
  v195 = 0;
  OUTLINED_FUNCTION_19_61();
LABEL_86:
  OUTLINED_FUNCTION_19_3((uint64_t)v94, 1);
LABEL_87:
  v164 = v179;
  v165 = v187;
  v166 = v178;
  swift_release();
  OUTLINED_FUNCTION_29_53(v190);
  v167 = OUTLINED_FUNCTION_59_0(v166);
  if (v130)
  {
    OUTLINED_FUNCTION_143(v167, &demangling cache variable for type metadata for LayoutSubview?);
  }
  else
  {
    v168 = v176;
    OUTLINED_FUNCTION_8_7(v176, v166, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v55 + 32));
    v169 = v191;
    v224.origin.x = v191;
    v170 = v192;
    v224.origin.y = v192;
    v172 = v202;
    v171 = v203;
    v224.size.width = v202;
    v224.size.height = v203;
    CGRectGetMidX(v224);
    v225.origin.x = v169;
    v225.origin.y = v170;
    v225.size.width = v172;
    v225.size.height = v171;
    CGRectGetMinY(v225);
    ScreenSharingContentLayout.additionalSafeAreaInsets.getter();
    static UnitPoint.top.getter();
    LOBYTE(v208) = 0;
    LOBYTE(v207) = 0;
    LayoutSubview.place(at:anchor:proposal:)();
    OUTLINED_FUNCTION_101(v168, *(uint64_t (**)(uint64_t, uint64_t))(v55 + 8));
  }
  outlined init with copy of LayoutSubview?(v165, v164);
  OUTLINED_FUNCTION_59_0(v164);
  if (v130)
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?(v165, &demangling cache variable for type metadata for LayoutSubview?);
    v165 = v190;
  }
  else
  {
    v173 = v177;
    OUTLINED_FUNCTION_8_7(v177, v164, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v55 + 32));
    OUTLINED_FUNCTION_12_88();
    ScreenSharingContentLayout.placeToolbar(_:in:contentBounds:constrainedToSize:toolbarSize:)();
    OUTLINED_FUNCTION_101(v173, *(uint64_t (**)(uint64_t, uint64_t))(v55 + 8));
    v164 = v190;
  }
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v165, &demangling cache variable for type metadata for LayoutSubview?);
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v164, &demangling cache variable for type metadata for LayoutSubview?);
}

uint64_t LayoutSubview.scaledSize(in:contentMode:)(uint64_t a1)
{
  double v2;
  double v3;
  char v4;
  double v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  double v10;
  double v11;
  double v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  double v17;

  static ProposedViewSize.unspecified.getter();
  OUTLINED_FUNCTION_34_37();
  if ((static ProposedViewSize.== infix(_:_:)() & 1) == 0)
  {
    static ProposedViewSize.unspecified.getter();
    OUTLINED_FUNCTION_17_64();
    v3 = v2;
    v4 = OUTLINED_FUNCTION_20_68();
    static ProposedViewSize.unspecified.getter();
    OUTLINED_FUNCTION_34_37();
    if ((v4 & 1) != 0)
    {
      if ((OUTLINED_FUNCTION_3_110() & 1) == 0)
      {
        v5 = OUTLINED_FUNCTION_14_87();
        v11 = CGSize.scaleThatFits(_:)(v6, v7, v8, v9, v5, v10);
LABEL_7:
        v3 = CGSize.scaled(by:)(v11, v3);
      }
    }
    else if ((OUTLINED_FUNCTION_3_110() & 1) == 0)
    {
      v12 = OUTLINED_FUNCTION_14_87();
      v11 = CGSize.scaleThatFills(_:)(v13, v14, v15, v16, v12, v17);
      goto LABEL_7;
    }
    return *(_QWORD *)&v3;
  }
  return a1;
}

Swift::Bool __swiftcall LayoutSubview.shouldConstrainToolbar(in:)(__C::CGRect in)
{
  double height;
  double width;
  double v3;
  double v4;
  Swift::Bool v5;

  if (in.size.width >= in.size.height)
    return 0;
  height = in.size.height;
  width = in.size.width;
  static ProposedViewSize.unspecified.getter();
  OUTLINED_FUNCTION_17_64();
  v5 = fabs(width / height + -0.461538462) < 0.06;
  return fabs(v3 / v4 + -0.461538462) < 0.01 && v5;
}

double protocol witness for Layout.sizeThatFits(proposal:subviews:cache:) in conformance ScreenSharingContentLayout(uint64_t a1, char a2)
{
  return ScreenSharingContentLayout.sizeThatFits(proposal:subviews:cache:)(a1, a2 & 1);
}

void protocol witness for Layout.placeSubviews(in:proposal:subviews:cache:) in conformance ScreenSharingContentLayout(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, CGFloat a6, CGFloat a7, double a8, double a9)
{
  ScreenSharingContentLayout.placeSubviews(in:proposal:subviews:cache:)(a6, a7, a8, a9, a1, a2, a3, a4, a5);
}

uint64_t protocol witness for Animatable.animatableData.getter in conformance ScreenSharingContentLayout(uint64_t a1)
{
  return TPNumberPadCharacter.rawValue.getter(a1);
}

uint64_t closure #1 in ScreenSharingContentLayout.callAsFunction<A, B, C>(_:title:toolbar:)@<X0>(void (*a1)(uint64_t)@<X0>, void (*a2)(uint64_t)@<X2>, uint64_t a3@<X3>, void (*a4)(uint64_t)@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, void (*a10)(_QWORD, _QWORD), uint64_t a11, uint64_t a12)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(_QWORD, _QWORD);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  void (*v55)(uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  void (*v61)(uint64_t, uint64_t);
  uint64_t (*v62)(char *, uint64_t);
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(uint64_t);
  uint64_t v73;
  void (*v74)(uint64_t);
  void (*v75)(_QWORD, _QWORD);
  char *v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(uint64_t);
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  void (*v93)(uint64_t);
  uint64_t v94;
  _QWORD v95[3];
  uint64_t v96[3];
  _QWORD v97[2];
  _QWORD v98[2];
  _QWORD v99[2];

  v81 = a5;
  v82 = a4;
  v73 = a3;
  v74 = a2;
  v72 = a1;
  v86 = a8;
  v85 = a12;
  v75 = a10;
  v84 = *(_QWORD *)(a9 - 8);
  v78 = a9;
  MEMORY[0x1E0C80A78](a1);
  v77 = (char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _TraitWritingModifier<_LayoutTrait<LayoutRoleKey>>);
  v80 = type metadata accessor for ModifiedContent();
  v83 = *(_QWORD *)(v80 - 8);
  v15 = MEMORY[0x1E0C80A78](v80);
  v76 = (char *)&v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v15);
  v79 = (char *)&v64 - v18;
  v70 = a6;
  v71 = *(_QWORD *)(a6 - 8);
  MEMORY[0x1E0C80A78](v17);
  v68 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for ModifiedContent();
  v21 = *(_QWORD *)(v20 - 8);
  v89 = v20;
  v90 = v21;
  v22 = MEMORY[0x1E0C80A78](v20);
  v67 = (char *)&v64 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x1E0C80A78](v22);
  v91 = (char *)&v64 - v25;
  v26 = *(_QWORD *)(a7 - 8);
  MEMORY[0x1E0C80A78](v24);
  v28 = (char *)&v64 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for ModifiedContent();
  v65 = *(_QWORD *)(v29 - 8);
  v30 = v65;
  v31 = MEMORY[0x1E0C80A78](v29);
  v33 = (char *)&v64 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = MEMORY[0x1E0C80A78](v31);
  v88 = (char *)&v64 - v35;
  v72(v34);
  LOBYTE(v96[0]) = 1;
  v64 = lazy protocol witness table accessor for type LayoutRoleKey and conformance LayoutRoleKey();
  View.layoutValue<A>(key:value:)();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v28, a7);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _TraitWritingModifier<_LayoutTrait<LayoutRoleKey>> and conformance _TraitWritingModifier<A>, &demangling cache variable for type metadata for _TraitWritingModifier<_LayoutTrait<LayoutRoleKey>>);
  v37 = v36;
  v99[0] = a11;
  v99[1] = v36;
  v38 = MEMORY[0x1E0CD9C20];
  v66 = v29;
  v69 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v29, v99);
  v87 = v33;
  static ViewBuilder.buildExpression<A>(_:)(v33, v29, v69);
  v72 = *(void (**)(uint64_t))(v30 + 8);
  v39 = ((uint64_t (*)(char *, uint64_t))v72)(v33, v29);
  v40 = v68;
  v74(v39);
  LOBYTE(v96[0]) = 0;
  v41 = (uint64_t)v67;
  v42 = v70;
  v43 = v75;
  View.layoutValue<A>(key:value:)();
  (*(void (**)(char *, uint64_t))(v71 + 8))(v40, v42);
  v98[0] = v43;
  v98[1] = v37;
  v44 = v38;
  v45 = v89;
  v74 = (void (*)(uint64_t))MEMORY[0x1C3B750C8](v38, v89, v98);
  static ViewBuilder.buildExpression<A>(_:)(v41, v45, v74);
  v75 = *(void (**)(_QWORD, _QWORD))(v90 + 8);
  v46 = ((uint64_t (*)(uint64_t, uint64_t))v75)(v41, v45);
  v47 = v77;
  v82(v46);
  LOBYTE(v96[0]) = 2;
  v48 = (uint64_t)v76;
  v49 = v78;
  v50 = v85;
  View.layoutValue<A>(key:value:)();
  (*(void (**)(char *, uint64_t))(v84 + 8))(v47, v49);
  v97[0] = v50;
  v97[1] = v37;
  v51 = v80;
  v52 = MEMORY[0x1C3B750C8](v44, v80, v97);
  v53 = v79;
  static ViewBuilder.buildExpression<A>(_:)(v48, v51, v52);
  v54 = v83;
  v55 = *(void (**)(uint64_t, uint64_t))(v83 + 8);
  v55(v48, v51);
  v56 = (uint64_t)v87;
  v57 = v66;
  (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v87, v88, v66);
  v96[0] = v56;
  v58 = v91;
  v59 = v89;
  (*(void (**)(uint64_t, char *, uint64_t))(v90 + 16))(v41, v91, v89);
  v96[1] = v41;
  (*(void (**)(uint64_t, char *, uint64_t))(v54 + 16))(v48, v53, v51);
  v96[2] = v48;
  v95[0] = v57;
  v95[1] = v59;
  v95[2] = v51;
  v92 = v69;
  v93 = v74;
  v94 = v52;
  static ViewBuilder.buildBlock<each A>(_:)(v96, 3, (uint64_t)v95);
  v55((uint64_t)v53, v51);
  v60 = v58;
  v61 = v75;
  v75(v60, v59);
  v62 = (uint64_t (*)(char *, uint64_t))v72;
  ((void (*)(char *, uint64_t))v72)(v88, v57);
  v55(v48, v51);
  v61(v41, v59);
  return v62(v87, v57);
}

uint64_t partial apply for closure #1 in ScreenSharingContentLayout.callAsFunction<A, B, C>(_:title:toolbar:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return closure #1 in ScreenSharingContentLayout.callAsFunction<A, B, C>(_:title:toolbar:)(*(void (**)(uint64_t))(v1 + 64), *(void (**)(uint64_t))(v1 + 80), *(_QWORD *)(v1 + 88), *(void (**)(uint64_t))(v1 + 96), *(_QWORD *)(v1 + 104), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1, *(_QWORD *)(v1 + 32), *(void (**)(_QWORD, _QWORD))(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56));
}

unint64_t lazy protocol witness table accessor for type ScreenSharingContentLayout and conformance ScreenSharingContentLayout()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ScreenSharingContentLayout and conformance ScreenSharingContentLayout;
  if (!lazy protocol witness table cache variable for type ScreenSharingContentLayout and conformance ScreenSharingContentLayout)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ScreenSharingContentLayout, &type metadata for ScreenSharingContentLayout);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ScreenSharingContentLayout and conformance ScreenSharingContentLayout);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ScreenSharingContentLayout and conformance ScreenSharingContentLayout;
  if (!lazy protocol witness table cache variable for type ScreenSharingContentLayout and conformance ScreenSharingContentLayout)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ScreenSharingContentLayout, &type metadata for ScreenSharingContentLayout);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ScreenSharingContentLayout and conformance ScreenSharingContentLayout);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type LayoutRoleKey and conformance LayoutRoleKey()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type LayoutRoleKey and conformance LayoutRoleKey;
  if (!lazy protocol witness table cache variable for type LayoutRoleKey and conformance LayoutRoleKey)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for LayoutRoleKey, &unk_1E7630B88);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LayoutRoleKey and conformance LayoutRoleKey);
  }
  return result;
}

uint64_t closure #1 in Layout.callAsFunction<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X5>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void (*v11)(void);
  uint64_t v12;
  char *v13;
  void (*v14)(char *, uint64_t);
  uint64_t v16;

  v7 = *(_QWORD *)(a2 - 8);
  v8 = MEMORY[0x1E0C80A78](a1);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (void (*)(void))MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v16 - v12;
  v11();
  static ViewBuilder.buildExpression<A>(_:)(v10, a2, a3);
  v14 = *(void (**)(char *, uint64_t))(v7 + 8);
  v14(v10, a2);
  static ViewBuilder.buildBlock<A>(_:)((uint64_t)v13, a2, a4);
  return ((uint64_t (*)(char *, uint64_t))v14)(v13, a2);
}

uint64_t getEnumTagSinglePayload for ScreenSharingContentLayout(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 57))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 16);
      v4 = v3 >= 2;
      v2 = v3 - 2;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ScreenSharingContentLayout(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 57) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for ScreenSharingContentLayout()
{
  return &type metadata for ScreenSharingContentLayout;
}

uint64_t sub_1BD3A1614()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _LayoutRoot<ScreenSharingContentLayout>);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _TraitWritingModifier<_LayoutTrait<LayoutRoleKey>>);
  OUTLINED_FUNCTION_18_15();
  OUTLINED_FUNCTION_18_15();
  OUTLINED_FUNCTION_18_15();
  OUTLINED_FUNCTION_44_12();
  v0 = type metadata accessor for TupleView();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _LayoutRoot<ScreenSharingContentLayout> and conformance _LayoutRoot<A>, &demangling cache variable for type metadata for _LayoutRoot<ScreenSharingContentLayout>);
  v1 = type metadata accessor for _VariadicView.Tree();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _LayoutRoot<ScreenSharingContentLayout> and conformance _LayoutRoot<A>, &demangling cache variable for type metadata for _LayoutRoot<ScreenSharingContentLayout>);
  v4[0] = v2;
  v4[1] = MEMORY[0x1C3B750C8](MEMORY[0x1E0CE0680], v0);
  return MEMORY[0x1C3B750C8](MEMORY[0x1E0CD91E0], v1, v4);
}

void *type metadata accessor for LayoutRoleKey()
{
  return &unk_1E7630B88;
}

uint64_t partial apply for closure #1 in Layout.callAsFunction<A>(_:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return closure #1 in Layout.callAsFunction<A>(_:)(v1[6], v1[3], v1[5], a1);
}

uint64_t storeEnumTagSinglePayload for LayoutRole(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BD3A17A0 + 4 * byte_1BD65B61D[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BD3A17D4 + 4 * byte_1BD65B618[v4]))();
}

uint64_t sub_1BD3A17D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD3A17DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD3A17E4);
  return result;
}

uint64_t sub_1BD3A17F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD3A17F8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BD3A17FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD3A1804(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void *type metadata accessor for LayoutRole()
{
  return &unk_1E7630C18;
}

unint64_t lazy protocol witness table accessor for type LayoutRole and conformance LayoutRole()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type LayoutRole and conformance LayoutRole;
  if (!lazy protocol witness table cache variable for type LayoutRole and conformance LayoutRole)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for LayoutRole, &unk_1E7630C18);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LayoutRole and conformance LayoutRole);
  }
  return result;
}

uint64_t AnimatedSaveView.SaveState.image.getter(char a1)
{
  if ((a1 & 0xFE) != 0)
    return 0x72616D6B63656863;
  else
    return 0xD000000000000015;
}

double AnimatedSaveView.SaveState.scale.getter(char a1)
{
  double result;

  result = 1.0;
  if (!a1)
    return 0.0;
  return result;
}

double AnimatedSaveView.SaveState.largeScale.getter(char a1)
{
  double result;

  result = 2.0;
  if (!a1)
    return 0.0;
  return result;
}

uint64_t AnimatedSaveView.SaveState.color.getter(char a1)
{
  uint64_t v2;

  if (a1)
    return static Color.white.getter();
  static Color.gray.getter();
  v2 = Color.opacity(_:)();
  swift_release();
  return v2;
}

double AnimatedSaveView.SaveState.yImageOffset.getter(char a1)
{
  double result;

  result = 0.0;
  if ((a1 & 0xFE) == 0)
    return -2.0;
  return result;
}

BOOL static AnimatedSaveView.SaveState.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void AnimatedSaveView.SaveState.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
  Hasher._combine(_:)(a2);
}

Swift::Int AnimatedSaveView.SaveState.hashValue.getter(unsigned __int8 a1)
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1);
  return Hasher._finalize()();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance AnimatedSaveView.SaveState(char *a1, char *a2)
{
  return static AnimatedSaveView.SaveState.== infix(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance AnimatedSaveView.SaveState()
{
  unsigned __int8 *v0;

  return AnimatedSaveView.SaveState.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance AnimatedSaveView.SaveState(uint64_t a1)
{
  unsigned __int8 *v1;

  AnimatedSaveView.SaveState.hash(into:)(a1, *v1);
}

uint64_t AnimatedSaveView.saveState.getter()
{
  uint64_t v0;
  uint64_t v2;

  OUTLINED_FUNCTION_0_128();
  v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<AnimatedSaveView.SaveState>);
  MEMORY[0x1C3B72860](&v2, v0);
  return v2;
}

uint64_t key path getter for AnimatedSaveView.saveState : AnimatedSaveView@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = AnimatedSaveView.saveState.getter();
  *a1 = result;
  return result;
}

uint64_t key path setter for AnimatedSaveView.saveState : AnimatedSaveView()
{
  return AnimatedSaveView.saveState.setter();
}

uint64_t AnimatedSaveView.saveState.setter()
{
  OUTLINED_FUNCTION_0_128();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<AnimatedSaveView.SaveState>);
  return Binding.wrappedValue.setter();
}

void (*AnimatedSaveView.saveState.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = *v1;
  v5 = v1[1];
  v3[3] = *v1;
  v3[4] = v5;
  v6 = *((_BYTE *)v1 + 16);
  *((_BYTE *)v3 + 19) = v6;
  *v3 = v4;
  v3[1] = v5;
  *((_BYTE *)v3 + 16) = v6;
  swift_retain();
  swift_retain();
  v3[5] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<AnimatedSaveView.SaveState>);
  MEMORY[0x1C3B72860]();
  return AnimatedSaveView.saveState.modify;
}

void AnimatedSaveView.saveState.modify(uint64_t a1)
{
  _QWORD *v1;
  char v2;
  uint64_t v3;
  char v4;

  v1 = *(_QWORD **)a1;
  v2 = *(_BYTE *)(*(_QWORD *)a1 + 17);
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v4 = *(_BYTE *)(*(_QWORD *)a1 + 19);
  *v1 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v1[1] = v3;
  *((_BYTE *)v1 + 16) = v4;
  *((_BYTE *)v1 + 18) = v2;
  Binding.wrappedValue.setter();
  swift_release();
  swift_release();
  free(v1);
}

uint64_t AnimatedSaveView.$saveState.getter()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<AnimatedSaveView.SaveState>);
  Binding.projectedValue.getter();
  return v1;
}

double AnimatedSaveView.body.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  double result;
  char v17;
  _BYTE __src[280];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  __int128 v24;

  v3 = *(_QWORD *)v1;
  v4 = *(_QWORD *)(v1 + 8);
  v5 = *(double *)(v1 + 24);
  v6 = *(_BYTE *)(v1 + 16);
  v7 = static Alignment.center.getter();
  v9 = v8;
  closure #1 in AnimatedSaveView.body.getter(v3, v4, v6, (uint64_t)__src, v5);
  v20 = v3;
  v21 = v4;
  LOBYTE(v22) = v6;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<AnimatedSaveView.SaveState>);
  MEMORY[0x1C3B72860](&v19);
  if (v19 == 2)
    v11 = 0.0;
  else
    v11 = 1.0;
  static Animation.easeIn(duration:)();
  v12 = Animation.delay(_:)();
  swift_release();
  v20 = v3;
  v21 = v4;
  LOBYTE(v22) = v6;
  MEMORY[0x1C3B72860](&v19, v10);
  v13 = v19;
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  v14 = v20;
  v15 = v22;
  LOBYTE(v19) = v21;
  v17 = v23;
  *(_QWORD *)a1 = v7;
  *(_QWORD *)(a1 + 8) = v9;
  memcpy((void *)(a1 + 16), __src, 0x118uLL);
  *(double *)(a1 + 296) = v11;
  *(_QWORD *)(a1 + 304) = v12;
  *(_BYTE *)(a1 + 312) = v13;
  *(_QWORD *)(a1 + 320) = v14;
  *(_BYTE *)(a1 + 328) = v19;
  *(_QWORD *)(a1 + 336) = v15;
  *(_BYTE *)(a1 + 344) = v17;
  result = *(double *)&v24;
  *(_OWORD *)(a1 + 352) = v24;
  return result;
}

uint64_t closure #1 in AnimatedSaveView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>, double a5@<D0>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[26];
  _QWORD v25[26];
  _BYTE v26[216];

  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Font.Design?);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  closure #1 in closure #1 in AnimatedSaveView.body.getter(a1, a2, a3, (uint64_t)v26, a5);
  v25[0] = a1;
  v25[1] = a2;
  LOBYTE(v25[2]) = a3;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<AnimatedSaveView.SaveState>);
  MEMORY[0x1C3B72860](v24);
  v23 = Image.init(systemName:)();
  v25[0] = a1;
  v25[1] = a2;
  LOBYTE(v25[2]) = a3;
  MEMORY[0x1C3B72860](v24, v13);
  if (LOBYTE(v24[0]))
  {
    v22 = static Color.white.getter();
  }
  else
  {
    static Color.gray.getter();
    v22 = Color.opacity(_:)();
    swift_release();
  }
  KeyPath = swift_getKeyPath();
  static Font.Weight.medium.getter();
  v15 = type metadata accessor for Font.Design();
  __swift_storeEnumTagSinglePayload((uint64_t)v12, 1, 1, v15);
  v16 = static Font.system(size:weight:design:)();
  outlined destroy of Font.Design?((uint64_t)v12);
  v17 = swift_getKeyPath();
  v25[0] = a1;
  v25[1] = a2;
  LOBYTE(v25[2]) = a3;
  MEMORY[0x1C3B72860](v24, v13);
  if (LOBYTE(v24[0]) >= 2u)
    v18 = 0.0;
  else
    v18 = -2.0;
  memcpy(v24, v26, 0xC9uLL);
  memcpy((void *)a4, v26, 0xC9uLL);
  v19 = v22;
  *(_QWORD *)(a4 + 208) = v23;
  *(_QWORD *)(a4 + 216) = KeyPath;
  *(_QWORD *)(a4 + 224) = v19;
  *(_QWORD *)(a4 + 232) = closure #1 in ScreeningTranscriptLabel.body.getter;
  *(_QWORD *)(a4 + 240) = 0;
  *(_QWORD *)(a4 + 248) = v17;
  *(_QWORD *)(a4 + 256) = v16;
  *(_QWORD *)(a4 + 264) = 0;
  *(double *)(a4 + 272) = v18;
  outlined retain of Group<TupleView<(ModifiedContent<_StrokedShape<Circle>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _ScaleEffect>, _AnimationModifier<AnimatedSaveView.SaveState>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _OpacityEffect>, _ScaleEffect>, _TransactionModifier>, _AnimationModifier<AnimatedSaveView.SaveState>>)>>((uint64_t)v24);
  memcpy(v25, v26, 0xC9uLL);
  return outlined release of Group<TupleView<(ModifiedContent<_StrokedShape<Circle>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _ScaleEffect>, _AnimationModifier<AnimatedSaveView.SaveState>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _OpacityEffect>, _ScaleEffect>, _TransactionModifier>, _AnimationModifier<AnimatedSaveView.SaveState>>)>>((uint64_t)v25);
}

uint64_t closure #1 in closure #1 in AnimatedSaveView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>, double a5@<D0>)
{
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  double v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 v28;
  uint64_t v29;
  uint64_t v31;
  unsigned __int8 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unsigned __int8 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
  v38 = v42;
  v35 = v43;
  v36 = v40;
  v37 = v44;
  static Color.gray.getter();
  v34 = Color.opacity(_:)();
  swift_release();
  KeyPath = swift_getKeyPath();
  v11 = static Color.green.getter();
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<AnimatedSaveView.SaveState>);
  MEMORY[0x1C3B72860](&v39);
  v13 = v39;
  static UnitPoint.center.getter();
  v15 = v14;
  v17 = v16;
  v33 = static Animation.spring(response:dampingFraction:blendDuration:)();
  MEMORY[0x1C3B72860](&v39, v12);
  v32 = v39;
  v31 = static Color.green.getter();
  MEMORY[0x1C3B72860](&v39, v12);
  v18 = v39;
  MEMORY[0x1C3B72860](&v39, v12);
  v19 = qword_1BD65B938[(char)v39];
  if (v13)
    v20 = 1.0;
  else
    v20 = 0.0;
  if (v18)
    v21 = 0.0;
  else
    v21 = 1.0;
  static UnitPoint.center.getter();
  v23 = v22;
  v25 = v24;
  v26 = swift_allocObject();
  *(_QWORD *)(v26 + 16) = a1;
  *(_QWORD *)(v26 + 24) = a2;
  *(_BYTE *)(v26 + 32) = a3;
  *(double *)(v26 + 40) = a5;
  swift_retain();
  swift_retain();
  v27 = static Animation.spring(response:dampingFraction:blendDuration:)();
  MEMORY[0x1C3B72860](&v39, v12);
  v28 = v39;
  v29 = v41;
  *(_QWORD *)a4 = v36;
  *(_QWORD *)(a4 + 8) = v29;
  *(_QWORD *)(a4 + 16) = v38;
  *(_QWORD *)(a4 + 24) = v35;
  *(_QWORD *)(a4 + 32) = v37;
  *(_QWORD *)(a4 + 40) = KeyPath;
  *(_QWORD *)(a4 + 48) = v34;
  *(_QWORD *)(a4 + 56) = v11;
  *(_WORD *)(a4 + 64) = 256;
  *(double *)(a4 + 72) = v20;
  *(double *)(a4 + 80) = v20;
  *(_QWORD *)(a4 + 88) = v15;
  *(_QWORD *)(a4 + 96) = v17;
  *(_QWORD *)(a4 + 104) = v33;
  *(_BYTE *)(a4 + 112) = v32;
  *(_QWORD *)(a4 + 120) = v31;
  *(_WORD *)(a4 + 128) = 256;
  *(double *)(a4 + 136) = v21;
  *(_QWORD *)(a4 + 144) = v19;
  *(_QWORD *)(a4 + 152) = v19;
  *(_QWORD *)(a4 + 160) = v23;
  *(_QWORD *)(a4 + 168) = v25;
  *(_QWORD *)(a4 + 176) = partial apply for closure #1 in closure #1 in closure #1 in AnimatedSaveView.body.getter;
  *(_QWORD *)(a4 + 184) = v26;
  *(_QWORD *)(a4 + 192) = v27;
  *(_BYTE *)(a4 + 200) = v28;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t closure #1 in closure #1 in closure #1 in AnimatedSaveView.body.getter(double a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;

  v9 = type metadata accessor for AnimationCompletionCriteria();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a3;
  *(_QWORD *)(v13 + 24) = a4;
  *(_BYTE *)(v13 + 32) = a5;
  *(double *)(v13 + 40) = a1;
  swift_retain();
  swift_retain();
  static AnimationCompletionCriteria.logicallyComplete.getter();
  Transaction.addAnimationCompletion(criteria:_:)();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

_QWORD *closure #1 in closure #1 in closure #1 in closure #1 in AnimatedSaveView.body.getter()
{
  _QWORD *result;
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<AnimatedSaveView.SaveState>);
  result = MEMORY[0x1C3B72860](&v1);
  if (v1 == 1)
  {
    LOBYTE(v1) = 2;
    return (_QWORD *)Binding.wrappedValue.setter();
  }
  return result;
}

uint64_t AnimatedSaveView.init(saveState:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  *(_QWORD *)a4 = result;
  *(_QWORD *)(a4 + 8) = a2;
  *(_BYTE *)(a4 + 16) = a3;
  *(_QWORD *)(a4 + 24) = 0x3FD6666666666666;
  return result;
}

unint64_t lazy protocol witness table accessor for type AnimatedSaveView.SaveState and conformance AnimatedSaveView.SaveState()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type AnimatedSaveView.SaveState and conformance AnimatedSaveView.SaveState;
  if (!lazy protocol witness table cache variable for type AnimatedSaveView.SaveState and conformance AnimatedSaveView.SaveState)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for AnimatedSaveView.SaveState, &type metadata for AnimatedSaveView.SaveState);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AnimatedSaveView.SaveState and conformance AnimatedSaveView.SaveState);
  }
  return result;
}

uint64_t associated type witness table accessor for View.Body : View in AnimatedSaveView()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t initializeWithCopy for AnimatedSaveView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for AnimatedSaveView(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for AnimatedSaveView(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

ValueMetadata *type metadata accessor for AnimatedSaveView()
{
  return &type metadata for AnimatedSaveView;
}

uint64_t storeEnumTagSinglePayload for AnimatedSaveView.SaveState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BD3A25F8 + 4 * byte_1BD65B7E5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BD3A262C + 4 * byte_1BD65B7E0[v4]))();
}

uint64_t sub_1BD3A262C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD3A2634(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD3A263CLL);
  return result;
}

uint64_t sub_1BD3A2648(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD3A2650);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BD3A2654(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD3A265C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AnimatedSaveView.SaveState()
{
  return &type metadata for AnimatedSaveView.SaveState;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ZStack<TupleView<(Group<TupleView<(ModifiedContent<_StrokedShape<Circle>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _ScaleEffect>, _AnimationModifier<AnimatedSaveView.SaveState>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _OpacityEffect>, _ScaleEffect>, _TransactionModifier>, _AnimationModifier<AnimatedSaveView.SaveState>>)>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _TransactionModifier>, _EnvironmentKeyWritingModifier<Font?>>, _OffsetEffect>)>>, _OpacityEffect>, _AnimationModifier<AnimatedSaveView.SaveState>>, _FrameLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ZStack<TupleView<(Group<TupleView<(ModifiedContent<_StrokedShape<Circle>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _ScaleEffect>, _AnimationModifier<AnimatedSaveView.SaveState>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _OpacityEffect>, _ScaleEffect>, _TransactionModifier>, _AnimationModifier<AnimatedSaveView.SaveState>>)>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _TransactionModifier>, _EnvironmentKeyWritingModifier<Font?>>, _OffsetEffect>)>>, _OpacityEffect>, _AnimationModifier<AnimatedSaveView.SaveState>>, _FrameLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ZStack<TupleView<(Group<TupleView<(ModifiedContent<_StrokedShape<Circle>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _ScaleEffect>, _AnimationModifier<AnimatedSaveView.SaveState>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _OpacityEffect>, _ScaleEffect>, _TransactionModifier>, _AnimationModifier<AnimatedSaveView.SaveState>>)>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _TransactionModifier>, _EnvironmentKeyWritingModifier<Font?>>, _OffsetEffect>)>>, _OpacityEffect>, _AnimationModifier<AnimatedSaveView.SaveState>>, _FrameLayout> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ZStack<TupleView<(Group<TupleView<(ModifiedContent<_StrokedShape<Circle>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _ScaleEffect>, _AnimationModifier<AnimatedSaveView.SaveState>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _OpacityEffect>, _ScaleEffect>, _TransactionModifier>, _AnimationModifier<AnimatedSaveView.SaveState>>)>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _TransactionModifier>, _EnvironmentKeyWritingModifier<Font?>>, _OffsetEffect>)>>, _OpacityEffect>, _AnimationModifier<AnimatedSaveView.SaveState>>, _FrameLayout>);
    v2[0] = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ZStack<TupleView<(Group<TupleView<(ModifiedContent<_StrokedShape<Circle>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _ScaleEffect>, _AnimationModifier<AnimatedSaveView.SaveState>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _OpacityEffect>, _ScaleEffect>, _TransactionModifier>, _AnimationModifier<AnimatedSaveView.SaveState>>)>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _TransactionModifier>, _EnvironmentKeyWritingModifier<Font?>>, _OffsetEffect>)>>, _OpacityEffect>, _AnimationModifier<AnimatedSaveView.SaveState>> and conformance <> ModifiedContent<A, B>();
    v2[1] = MEMORY[0x1E0CD8D70];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ZStack<TupleView<(Group<TupleView<(ModifiedContent<_StrokedShape<Circle>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _ScaleEffect>, _AnimationModifier<AnimatedSaveView.SaveState>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _OpacityEffect>, _ScaleEffect>, _TransactionModifier>, _AnimationModifier<AnimatedSaveView.SaveState>>)>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _TransactionModifier>, _EnvironmentKeyWritingModifier<Font?>>, _OffsetEffect>)>>, _OpacityEffect>, _AnimationModifier<AnimatedSaveView.SaveState>>, _FrameLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ZStack<TupleView<(Group<TupleView<(ModifiedContent<_StrokedShape<Circle>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _ScaleEffect>, _AnimationModifier<AnimatedSaveView.SaveState>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _OpacityEffect>, _ScaleEffect>, _TransactionModifier>, _AnimationModifier<AnimatedSaveView.SaveState>>)>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _TransactionModifier>, _EnvironmentKeyWritingModifier<Font?>>, _OffsetEffect>)>>, _OpacityEffect>, _AnimationModifier<AnimatedSaveView.SaveState>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ZStack<TupleView<(Group<TupleView<(ModifiedContent<_StrokedShape<Circle>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _ScaleEffect>, _AnimationModifier<AnimatedSaveView.SaveState>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _OpacityEffect>, _ScaleEffect>, _TransactionModifier>, _AnimationModifier<AnimatedSaveView.SaveState>>)>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _TransactionModifier>, _EnvironmentKeyWritingModifier<Font?>>, _OffsetEffect>)>>, _OpacityEffect>, _AnimationModifier<AnimatedSaveView.SaveState>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ZStack<TupleView<(Group<TupleView<(ModifiedContent<_StrokedShape<Circle>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _ScaleEffect>, _AnimationModifier<AnimatedSaveView.SaveState>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _OpacityEffect>, _ScaleEffect>, _TransactionModifier>, _AnimationModifier<AnimatedSaveView.SaveState>>)>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _TransactionModifier>, _EnvironmentKeyWritingModifier<Font?>>, _OffsetEffect>)>>, _OpacityEffect>, _AnimationModifier<AnimatedSaveView.SaveState>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ZStack<TupleView<(Group<TupleView<(ModifiedContent<_StrokedShape<Circle>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _ScaleEffect>, _AnimationModifier<AnimatedSaveView.SaveState>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _OpacityEffect>, _ScaleEffect>, _TransactionModifier>, _AnimationModifier<AnimatedSaveView.SaveState>>)>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _TransactionModifier>, _EnvironmentKeyWritingModifier<Font?>>, _OffsetEffect>)>>, _OpacityEffect>, _AnimationModifier<AnimatedSaveView.SaveState>>);
    v2[0] = lazy protocol witness table accessor for type ModifiedContent<ZStack<TupleView<(Group<TupleView<(ModifiedContent<_StrokedShape<Circle>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _ScaleEffect>, _AnimationModifier<AnimatedSaveView.SaveState>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _OpacityEffect>, _ScaleEffect>, _TransactionModifier>, _AnimationModifier<AnimatedSaveView.SaveState>>)>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _TransactionModifier>, _EnvironmentKeyWritingModifier<Font?>>, _OffsetEffect>)>>, _OpacityEffect> and conformance <> ModifiedContent<A, B>();
    v2[1] = lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type _AnimationModifier<AnimatedSaveView.SaveState> and conformance _AnimationModifier<A>, &demangling cache variable for type metadata for _AnimationModifier<AnimatedSaveView.SaveState>, MEMORY[0x1E0CDB148]);
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ZStack<TupleView<(Group<TupleView<(ModifiedContent<_StrokedShape<Circle>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _ScaleEffect>, _AnimationModifier<AnimatedSaveView.SaveState>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _OpacityEffect>, _ScaleEffect>, _TransactionModifier>, _AnimationModifier<AnimatedSaveView.SaveState>>)>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _TransactionModifier>, _EnvironmentKeyWritingModifier<Font?>>, _OffsetEffect>)>>, _OpacityEffect>, _AnimationModifier<AnimatedSaveView.SaveState>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ZStack<TupleView<(Group<TupleView<(ModifiedContent<_StrokedShape<Circle>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _ScaleEffect>, _AnimationModifier<AnimatedSaveView.SaveState>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _OpacityEffect>, _ScaleEffect>, _TransactionModifier>, _AnimationModifier<AnimatedSaveView.SaveState>>)>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _TransactionModifier>, _EnvironmentKeyWritingModifier<Font?>>, _OffsetEffect>)>>, _OpacityEffect> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ZStack<TupleView<(Group<TupleView<(ModifiedContent<_StrokedShape<Circle>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _ScaleEffect>, _AnimationModifier<AnimatedSaveView.SaveState>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _OpacityEffect>, _ScaleEffect>, _TransactionModifier>, _AnimationModifier<AnimatedSaveView.SaveState>>)>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _TransactionModifier>, _EnvironmentKeyWritingModifier<Font?>>, _OffsetEffect>)>>, _OpacityEffect> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ZStack<TupleView<(Group<TupleView<(ModifiedContent<_StrokedShape<Circle>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _ScaleEffect>, _AnimationModifier<AnimatedSaveView.SaveState>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _OpacityEffect>, _ScaleEffect>, _TransactionModifier>, _AnimationModifier<AnimatedSaveView.SaveState>>)>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _TransactionModifier>, _EnvironmentKeyWritingModifier<Font?>>, _OffsetEffect>)>>, _OpacityEffect> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ZStack<TupleView<(Group<TupleView<(ModifiedContent<_StrokedShape<Circle>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _ScaleEffect>, _AnimationModifier<AnimatedSaveView.SaveState>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _OpacityEffect>, _ScaleEffect>, _TransactionModifier>, _AnimationModifier<AnimatedSaveView.SaveState>>)>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _TransactionModifier>, _EnvironmentKeyWritingModifier<Font?>>, _OffsetEffect>)>>, _OpacityEffect>);
    v2[0] = lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type ZStack<TupleView<(Group<TupleView<(ModifiedContent<_StrokedShape<Circle>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _ScaleEffect>, _AnimationModifier<AnimatedSaveView.SaveState>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _OpacityEffect>, _ScaleEffect>, _TransactionModifier>, _AnimationModifier<AnimatedSaveView.SaveState>>)>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _TransactionModifier>, _EnvironmentKeyWritingModifier<Font?>>, _OffsetEffect>)>> and conformance ZStack<A>, &demangling cache variable for type metadata for ZStack<TupleView<(Group<TupleView<(ModifiedContent<_StrokedShape<Circle>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _ScaleEffect>, _AnimationModifier<AnimatedSaveView.SaveState>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _OpacityEffect>, _ScaleEffect>, _TransactionModifier>, _AnimationModifier<AnimatedSaveView.SaveState>>)>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _TransactionModifier>, _EnvironmentKeyWritingModifier<Font?>>, _OffsetEffect>)>>, MEMORY[0x1E0CDFCF8]);
    v2[1] = MEMORY[0x1E0CD9728];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ZStack<TupleView<(Group<TupleView<(ModifiedContent<_StrokedShape<Circle>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _ScaleEffect>, _AnimationModifier<AnimatedSaveView.SaveState>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _OpacityEffect>, _ScaleEffect>, _TransactionModifier>, _AnimationModifier<AnimatedSaveView.SaveState>>)>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _TransactionModifier>, _EnvironmentKeyWritingModifier<Font?>>, _OffsetEffect>)>>, _OpacityEffect> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t outlined destroy of Font.Design?(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Font.Design?);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t outlined retain of Group<TupleView<(ModifiedContent<_StrokedShape<Circle>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _ScaleEffect>, _AnimationModifier<AnimatedSaveView.SaveState>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _OpacityEffect>, _ScaleEffect>, _TransactionModifier>, _AnimationModifier<AnimatedSaveView.SaveState>>)>>(uint64_t a1)
{
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t outlined release of Group<TupleView<(ModifiedContent<_StrokedShape<Circle>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _ScaleEffect>, _AnimationModifier<AnimatedSaveView.SaveState>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _OpacityEffect>, _ScaleEffect>, _TransactionModifier>, _AnimationModifier<AnimatedSaveView.SaveState>>)>>(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in AnimatedSaveView.body.getter(uint64_t a1)
{
  uint64_t v1;

  return closure #1 in closure #1 in closure #1 in AnimatedSaveView.body.getter(*(double *)(v1 + 40), a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32));
}

uint64_t objectdestroyTm_11()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

_QWORD *partial apply for closure #1 in closure #1 in closure #1 in closure #1 in AnimatedSaveView.body.getter()
{
  return closure #1 in closure #1 in closure #1 in closure #1 in AnimatedSaveView.body.getter();
}

id LinkShareActivityViewController.__allocating_init(activityItems:applicationActivities:)(void *a1, uint64_t a2)
{
  void *v2;
  objc_class *v3;
  uint64_t v6;
  id v7;

  Array._bridgeToObjectiveC()();
  v6 = OUTLINED_FUNCTION_4_114();
  if (a2)
  {
    OUTLINED_FUNCTION_17_8(v6, &lazy cache variable for type metadata for UIActivity);
    OUTLINED_FUNCTION_56_1();
    OUTLINED_FUNCTION_1_122();
  }
  else
  {
    a1 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v3), sel_initWithActivityItems_applicationActivities_, v2, a1);

  return v7;
}

id LinkShareActivityViewController.init(activityItems:applicationActivities:)(void *a1, uint64_t a2)
{
  void *v2;
  char *v3;
  void *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  void *v9;
  id v10;
  objc_super v12;

  v5 = a1;
  *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit31LinkShareActivityViewController_cnkActivityItems] = a1;
  swift_bridgeObjectRetain();
  Array._bridgeToObjectiveC()();
  v6 = OUTLINED_FUNCTION_4_114();
  if (a2)
  {
    OUTLINED_FUNCTION_17_8(v6, &lazy cache variable for type metadata for UIActivity);
    OUTLINED_FUNCTION_56_1();
    OUTLINED_FUNCTION_1_122();
  }
  else
  {
    v5 = 0;
  }
  v12.receiver = v3;
  v12.super_class = (Class)type metadata accessor for LinkShareActivityViewController();
  v7 = objc_msgSendSuper2(&v12, sel_initWithActivityItems_applicationActivities_, v2, v5);

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UIActivityType>);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1BD6441D0;
  v9 = (void *)*MEMORY[0x1E0D96E28];
  *(_QWORD *)(v8 + 32) = *MEMORY[0x1E0D96E28];
  v10 = v9;
  outlined bridged method (mbnn) of @objc UIActivityViewController.excludedActivityTypes.setter(v8, v7);
  return v7;
}

uint64_t type metadata accessor for LinkShareActivityViewController()
{
  return objc_opt_self();
}

Swift::Void __swiftcall LinkShareActivityViewController._prepare(_:)(UIActivity a1)
{
  char *v1;
  id v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  _BYTE v32[32];
  _OWORD v33[2];
  __int128 v34;
  __int128 v35;
  objc_super v36;

  v36.receiver = v1;
  v36.super_class = (Class)type metadata accessor for LinkShareActivityViewController();
  objc_msgSendSuper2(&v36, sel__prepareActivity_, a1.super.isa);
  v3 = -[objc_class activityType](a1.super.isa, sel_activityType);
  if (!v3)
    return;
  v4 = v3;
  v5 = (void *)*MEMORY[0x1E0D96DB0];
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v8 = v7;
  if (v6 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v8 == v9)
  {
    v13 = v5;

    swift_bridgeObjectRelease_n();
  }
  else
  {
    v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
    v12 = v5;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
      return;
  }
  v14 = -[objc_class activityViewController](a1.super.isa, sel_activityViewController);
  if (!v14)
    goto LABEL_17;
  v15 = v14;
  objc_opt_self();
  v16 = swift_dynamicCastObjCClass();
  if (!v16)
  {

LABEL_17:
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.error.getter();
    os_log(_:dso:log:type:_:)();
    return;
  }
  v17 = (void *)v16;
  v18 = *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit31LinkShareActivityViewController_cnkActivityItems];
  v19 = *(_QWORD *)(v18 + 16);
  if (v19)
  {
    v20 = v18 + 32;
    swift_bridgeObjectRetain_n();
    while (1)
    {
      outlined init with copy of Any(v20, (uint64_t)v33);
      outlined init with copy of Any((uint64_t)v33, (uint64_t)v32);
      _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TULinkShareItem);
      if (swift_dynamicCast())
        break;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
      v20 += 32;
      if (!--v19)
      {
        OUTLINED_FUNCTION_27();
        goto LABEL_21;
      }
    }
    OUTLINED_FUNCTION_27();

    outlined init with take of Any(v33, &v34);
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_21:
    v34 = 0u;
    v35 = 0u;
  }
  v21 = OUTLINED_FUNCTION_27();
  if (*((_QWORD *)&v35 + 1))
  {
    OUTLINED_FUNCTION_17_8(v21, (unint64_t *)&lazy cache variable for type metadata for TULinkShareItem);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v22 = *(void **)&v33[0];
      type metadata accessor for LinkShareItemHTMLTextGenerator();
      v23 = static LinkShareItemHTMLTextGenerator.htmlFragment(forLinkShareItem:)(v22);
      if (v24)
      {
        v25 = (void *)MEMORY[0x1C3B72E00](v23);
        OUTLINED_FUNCTION_27();
        objc_msgSend(v17, sel_setMessageBody_isHTML_, v25, 1);

      }
      else
      {
        if (one-time initialization token for conversationKit != -1)
          swift_once();
        static os_log_type_t.error.getter();
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
        v26 = swift_allocObject();
        *(_OWORD *)(v26 + 16) = xmmword_1BD6441D0;
        *(_QWORD *)&v34 = v22;
        v27 = v22;
        v28 = String.init<A>(reflecting:)();
        v30 = v29;
        *(_QWORD *)(v26 + 56) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v26 + 64) = lazy protocol witness table accessor for type String and conformance String();
        *(_QWORD *)(v26 + 32) = v28;
        *(_QWORD *)(v26 + 40) = v30;
        os_log(_:dso:log:type:_:)();

        swift_bridgeObjectRelease();
      }
      return;
    }
  }
  else
  {
    outlined destroy of Any?((uint64_t)&v34);
  }
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  static os_log_type_t.error.getter();
  os_log(_:dso:log:type:_:)();

}

id LinkShareActivityViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LinkShareActivityViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void outlined bridged method (mbnn) of @objc UIActivityViewController.excludedActivityTypes.setter(uint64_t a1, void *a2)
{
  Class isa;

  type metadata accessor for UIActivityType(0);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(a2, sel_setExcludedActivityTypes_, isa);

}

id ScreenSharingInteraction.__allocating_init(interactionController:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return ScreenSharingInteraction.init(interactionController:)(a1);
}

void ScreenSharingInteraction.view.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_1_7();
  MEMORY[0x1C3B752C0](v0);
  OUTLINED_FUNCTION_32();
}

void ScreenSharingInteraction.view.setter(void *a1)
{
  OUTLINED_FUNCTION_2_0();
  swift_unknownObjectWeakAssign();

}

void ScreenSharingInteraction.view.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC15ConversationKit24ScreenSharingInteraction_view;
  v3[4] = v1;
  v3[5] = v4;
  v5 = v1 + v4;
  OUTLINED_FUNCTION_2_0();
  v3[3] = MEMORY[0x1C3B752C0](v5);
  OUTLINED_FUNCTION_18();
}

void ScreenSharingInteraction.captureInteraction.didset(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  char *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  _QWORD *v23;
  void *v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  char *v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  void *v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  if (a1)
  {
    v8 = one-time initialization token for screenSharing;
    v9 = a1;
    if (v8 != -1)
      swift_once();
    v10 = type metadata accessor for Logger();
    __swift_project_value_buffer(v10, (uint64_t)&static Log.screenSharing);
    v11 = v2;
    v12 = Logger.logObject.getter();
    v13 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = swift_slowAlloc();
      v41 = v15;
      *(_DWORD *)v14 = 136315138;
      v16 = (*(uint64_t (**)(void))((*v7 & *(_QWORD *)v11) + 0x88))();
      if (v16)
      {
        v40 = v16;
        type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIView);
        v17 = String.init<A>(reflecting:)();
        v19 = v18;
      }
      else
      {
        v17 = 7104878;
        v19 = 0xE300000000000000;
      }
      v40 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v17, v19, &v41);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD004000, v12, v13, "Removing screen sharing capture interaction from view: %s", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v15, -1, -1);
      MEMORY[0x1C3B751B8](v14, -1, -1);

      v7 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    }
    else
    {

    }
    v20 = (void *)(*(uint64_t (**)(void))((*v7 & *(_QWORD *)v11) + 0x88))();
    if (v20)
    {
      v21 = v20;
      objc_msgSend(v20, sel_removeInteraction_, v9);

    }
    v22 = type metadata accessor for TaskPriority();
    __swift_storeEnumTagSinglePayload((uint64_t)v6, 1, 1, v22);
    v23 = (_QWORD *)swift_allocObject();
    v23[2] = 0;
    v23[3] = 0;
    v23[4] = v9;
    _sScTss5Error_pRs_rlE8priority9operationScTyxsAA_pGScPSg_xyYaKYAcntcfCyt_Tgm5((uint64_t)v6, (uint64_t)&async function pointer to partial apply for closure #1 in ScreenSharingInteraction.captureInteraction.didset, (uint64_t)v23);
    swift_release();
  }
  v24 = *(void **)&v2[OBJC_IVAR____TtC15ConversationKit24ScreenSharingInteraction_captureInteraction];
  if (v24)
  {
    v25 = one-time initialization token for screenSharing;
    v26 = v24;
    if (v25 != -1)
      swift_once();
    v27 = type metadata accessor for Logger();
    __swift_project_value_buffer(v27, (uint64_t)&static Log.screenSharing);
    v28 = v2;
    v29 = Logger.logObject.getter();
    v30 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc();
      v32 = swift_slowAlloc();
      v41 = v32;
      *(_DWORD *)v31 = 136315138;
      v33 = (*(uint64_t (**)(void))((*v7 & *(_QWORD *)v28) + 0x88))();
      if (v33)
      {
        v40 = v33;
        type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIView);
        v34 = String.init<A>(reflecting:)();
        v36 = v35;
      }
      else
      {
        v34 = 7104878;
        v36 = 0xE300000000000000;
      }
      v40 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v34, v36, &v41);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD004000, v29, v30, "Adding screen sharing capture interaction to view: %s", v31, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v32, -1, -1);
      MEMORY[0x1C3B751B8](v31, -1, -1);

    }
    else
    {

    }
    v37 = (void *)(*(uint64_t (**)(void))((*v7 & *(_QWORD *)v28) + 0x88))();
    if (v37)
    {
      v38 = v37;
      objc_msgSend(v37, sel_addInteraction_, v26);

    }
    v39 = (*(uint64_t (**)(void))((*v7 & *(_QWORD *)v28) + 0x100))();
    CaptureUIInteraction.cnk_deviceOrientation.setter(v39);

  }
}

uint64_t closure #1 in ScreenSharingInteraction.captureInteraction.didset()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = partial apply for closure #2 in CallScreeningEndingState.enteredState();
  return CaptureUIInteraction.invalidate()();
}

void CaptureUIInteraction.cnk_deviceOrientation.setter(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  unint64_t v8;
  NSObject *oslog;
  uint64_t v10;

  v2 = v1;
  swift_getObjectType();
  if (objc_msgSend(v2, sel_respondsToSelector_, sel_set_deviceOrientation_))
  {
    ((void (*)(void *, char *, uint64_t))objc_msgSend(v2, sel_methodForSelector_, sel_set_deviceOrientation_))(v2, sel_set_deviceOrientation_, a1);
  }
  else
  {
    if (one-time initialization token for screenSharing != -1)
      swift_once();
    v4 = OUTLINED_FUNCTION_17_2();
    oslog = OUTLINED_FUNCTION_3(v4, (uint64_t)&static Log.screenSharing);
    v5 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v5))
    {
      v6 = (uint8_t *)OUTLINED_FUNCTION_105();
      v10 = OUTLINED_FUNCTION_105();
      *(_DWORD *)v6 = 136315138;
      v7 = _typeName(_:qualified:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v7, v8, &v10);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_48(&dword_1BD004000, oslog, v5, "%s does not respond to setting device orientation, control may not work correctly in landscape", v6);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }

  }
}

void ScreenSharingInteraction.captureInteraction.setter(void *a1)
{
  uint64_t v1;
  void *v2;
  id v3;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit24ScreenSharingInteraction_captureInteraction);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit24ScreenSharingInteraction_captureInteraction) = a1;
  v3 = a1;
  ScreenSharingInteraction.captureInteraction.didset(v2);

}

id ScreenSharingInteraction.interactionController.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC15ConversationKit24ScreenSharingInteraction_interactionController);
}

unint64_t ScreenSharingInteraction.isEnabled.didset(char a1)
{
  _QWORD *v1;
  _QWORD *v2;
  int v3;
  unsigned __int8 *v4;
  unint64_t result;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v2 = v1;
  v3 = a1 & 1;
  v4 = (unsigned __int8 *)v1 + OBJC_IVAR____TtC15ConversationKit24ScreenSharingInteraction_isEnabled;
  result = swift_beginAccess();
  if (*v4 != v3)
  {
    v6 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    (*(void (**)(unint64_t *__return_ptr, unint64_t))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)((char *)v2 + OBJC_IVAR____TtC15ConversationKit24ScreenSharingInteraction_interactionController))
                                                                             + 0x178))(&v9, result);
    v7 = v9;
    v8 = v9;
    (*(void (**)(unint64_t *))((*v6 & *v2) + 0x128))(&v8);
    return outlined consume of RemoteControlState(v7);
  }
  return result;
}

uint64_t ScreenSharingInteraction.isEnabled.getter()
{
  unsigned __int8 *v0;

  OUTLINED_FUNCTION_1_7();
  return *v0;
}

void ScreenSharingInteraction.isEnabled.setter(char a1)
{
  uint64_t v1;
  char *v3;
  char v4;

  v3 = (char *)(v1 + OBJC_IVAR____TtC15ConversationKit24ScreenSharingInteraction_isEnabled);
  OUTLINED_FUNCTION_2_0();
  v4 = *v3;
  *v3 = a1;
  ScreenSharingInteraction.isEnabled.didset(v4);
  OUTLINED_FUNCTION_9_0();
}

void ScreenSharingInteraction.isEnabled.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  _BYTE *v3;

  v2 = OUTLINED_FUNCTION_38_1();
  *v0 = v2;
  v2[3] = v1;
  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit24ScreenSharingInteraction_isEnabled);
  OUTLINED_FUNCTION_2_0();
  *((_BYTE *)v2 + 32) = *v3;
  OUTLINED_FUNCTION_18();
}

void ScreenSharingInteraction.isEnabled.modify(uint64_t a1)
{
  void *v1;

  v1 = *(void **)a1;
  ScreenSharingInteraction.isEnabled.setter(*(_BYTE *)(*(_QWORD *)a1 + 32));
  OUTLINED_FUNCTION_11(v1);
}

unint64_t ScreenSharingInteraction.displayScale.didset(double a1)
{
  _QWORD *v1;
  _QWORD *v2;
  double *v4;
  unint64_t result;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v2 = v1;
  v4 = (double *)((char *)v1 + OBJC_IVAR____TtC15ConversationKit24ScreenSharingInteraction_displayScale);
  result = swift_beginAccess();
  if (*v4 != a1)
  {
    v6 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    (*(void (**)(unint64_t *__return_ptr, unint64_t, double))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)((char *)v2 + OBJC_IVAR____TtC15ConversationKit24ScreenSharingInteraction_interactionController))
                                                                                     + 0x178))(&v9, result, *v4);
    v7 = v9;
    v8 = v9;
    (*(void (**)(unint64_t *))((*v6 & *v2) + 0x128))(&v8);
    return outlined consume of RemoteControlState(v7);
  }
  return result;
}

double ScreenSharingInteraction.displayScale.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_1_7();
  return *(double *)v0;
}

unint64_t ScreenSharingInteraction.displayScale.setter(double a1)
{
  uint64_t v1;
  double *v3;
  double v4;

  v3 = (double *)(v1 + OBJC_IVAR____TtC15ConversationKit24ScreenSharingInteraction_displayScale);
  OUTLINED_FUNCTION_2_0();
  v4 = *v3;
  *v3 = a1;
  return ScreenSharingInteraction.displayScale.didset(v4);
}

void ScreenSharingInteraction.displayScale.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  v2 = OUTLINED_FUNCTION_38_1();
  *v0 = v2;
  v2[4] = v1;
  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit24ScreenSharingInteraction_displayScale);
  OUTLINED_FUNCTION_2_0();
  v2[3] = *v3;
  OUTLINED_FUNCTION_18();
}

void ScreenSharingInteraction.displayScale.modify(uint64_t a1)
{
  void *v1;

  v1 = *(void **)a1;
  ScreenSharingInteraction.displayScale.setter(*(double *)(*(_QWORD *)a1 + 24));
  OUTLINED_FUNCTION_11(v1);
}

void ScreenSharingInteraction.deviceOrientation.didset()
{
  uint64_t v0;
  void *v1;
  uint64_t *v2;
  uint64_t v3;
  id v4;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit24ScreenSharingInteraction_captureInteraction);
  if (v1)
  {
    v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC15ConversationKit24ScreenSharingInteraction_deviceOrientation);
    swift_beginAccess();
    v3 = *v2;
    v4 = v1;
    CaptureUIInteraction.cnk_deviceOrientation.setter(v3);

  }
}

void ScreenSharingInteraction.deviceOrientation.getter()
{
  OUTLINED_FUNCTION_1_7();
  OUTLINED_FUNCTION_32();
}

void ScreenSharingInteraction.deviceOrientation.setter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit24ScreenSharingInteraction_deviceOrientation);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  ScreenSharingInteraction.deviceOrientation.didset();
  OUTLINED_FUNCTION_9_0();
}

void ScreenSharingInteraction.deviceOrientation.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void ScreenSharingInteraction.deviceOrientation.modify(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    ScreenSharingInteraction.deviceOrientation.didset();
  OUTLINED_FUNCTION_0();
}

id ScreenSharingInteraction.init(interactionController:)(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  _QWORD *v23;
  id v24;
  _QWORD *v25;
  void (*v26)(void);
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  objc_super v38;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for OS_dispatch_queue.SchedulerOptions?);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_77();
  v6 = v5 - v4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<RemoteControlState>.Publisher);
  v32 = *(_QWORD *)(v7 - 8);
  v33 = v7;
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_77();
  v10 = v9 - v8;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.ReceiveOn<Published<RemoteControlState>.Publisher, OS_dispatch_queue>);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_77();
  v15 = v14 - v13;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<ScreenSharingInteractionSession?>.Publisher);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_77();
  v20 = v19 - v18;
  swift_unknownObjectWeakInit();
  v21 = v1;
  v35 = v12;
  v36 = v11;
  v34 = v15;
  if ((MEMORY[0x1E0DEE9D8] & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter())
    specialized Set.init(_nonEmptyArrayLiteral:)(MEMORY[0x1E0DEE9D8]);
  else
    v22 = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)&v21[OBJC_IVAR____TtC15ConversationKit24ScreenSharingInteraction_cancellables] = v22;
  *(_QWORD *)&v21[OBJC_IVAR____TtC15ConversationKit24ScreenSharingInteraction_captureInteraction] = 0;
  v21[OBJC_IVAR____TtC15ConversationKit24ScreenSharingInteraction_isEnabled] = 1;
  *(_QWORD *)&v21[OBJC_IVAR____TtC15ConversationKit24ScreenSharingInteraction_displayScale] = 0x3FF0000000000000;
  *(_QWORD *)&v21[OBJC_IVAR____TtC15ConversationKit24ScreenSharingInteraction_deviceOrientation] = 0;
  *(_QWORD *)&v21[OBJC_IVAR____TtC15ConversationKit24ScreenSharingInteraction_interactionController] = a1;
  v23 = a1;

  v38.receiver = v21;
  v38.super_class = (Class)type metadata accessor for ScreenSharingInteraction();
  v24 = objc_msgSendSuper2(&v38, sel_init);
  v25 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v26 = *(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v23) + 0x110);
  v27 = v24;
  v26();
  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_25_52();
  lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type Published<ScreenSharingInteractionSession?>.Publisher and conformance Published<A>.Publisher, &demangling cache variable for type metadata for Published<ScreenSharingInteractionSession?>.Publisher, MEMORY[0x1E0C96190]);
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v20, v16);
  OUTLINED_FUNCTION_2_0();
  AnyCancellable.store(in:)();
  swift_endAccess();
  v28 = swift_release();
  v29 = (*(uint64_t (**)(uint64_t))((*v25 & *v23) + 0x190))(v28);
  OUTLINED_FUNCTION_59(v29, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v37 = (void *)static OS_dispatch_queue.main.getter();
  v30 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  __swift_storeEnumTagSinglePayload(v6, 1, 1, v30);
  lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>((unint64_t *)&lazy protocol witness table cache variable for type Published<RemoteControlState>.Publisher and conformance Published<A>.Publisher, &demangling cache variable for type metadata for Published<RemoteControlState>.Publisher, MEMORY[0x1E0C96190]);
  lazy protocol witness table accessor for type OS_dispatch_queue and conformance OS_dispatch_queue();
  Publisher.receive<A>(on:options:)();
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v6);

  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v10, v33);
  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_25_52();
  lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>((unint64_t *)&lazy protocol witness table cache variable for type Publishers.ReceiveOn<Published<RemoteControlState>.Publisher, OS_dispatch_queue> and conformance Publishers.ReceiveOn<A, B>, &demangling cache variable for type metadata for Publishers.ReceiveOn<Published<RemoteControlState>.Publisher, OS_dispatch_queue>, MEMORY[0x1E0C95CB8]);
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v34, v36);
  OUTLINED_FUNCTION_2_0();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();

  return v27;
}

void closure #1 in ScreenSharingInteraction.init(interactionController:)(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess();
  v4 = (_QWORD *)MEMORY[0x1C3B752C0](v3);
  if (v4)
  {
    v5 = v4;
    (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v4) + 0x120))(v2);

  }
}

void closure #2 in ScreenSharingInteraction.init(interactionController:)(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  uint64_t v6;

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess();
  v4 = (_QWORD *)MEMORY[0x1C3B752C0](v3);
  if (v4)
  {
    v5 = v4;
    v6 = v2;
    (*(void (**)(uint64_t *))((*MEMORY[0x1E0DEEDD8] & *v4) + 0x128))(&v6);

  }
}

void ScreenSharingInteraction.updateCaptureInteraction(using:)(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  void *v4;

  ScreenSharingInteraction.captureInteraction.setter(0);
  if (a1)
  {
    v2 = *(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 280);
    v3 = swift_retain();
    v4 = (void *)v2(v3);
    ScreenSharingInteraction.captureInteraction.setter(v4);
    swift_release();
  }
}

void ScreenSharingInteraction.updateCaptureInteraction(using:)(unint64_t *a1)
{
  NSObject *v1;
  NSObject *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  os_log_type_t v22;
  uint8_t *v23;
  void *v24;
  id v25;
  void *v26;
  unint64_t v27;
  void (*v28)(void);
  uint64_t v29;
  unsigned int *v30;
  _QWORD v31[2];
  uint64_t v32;
  uint64_t v33;

  v2 = v1;
  v4 = type metadata accessor for InteractionState();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (_QWORD *)((char *)v31 - v10);
  v12 = *a1;
  v13 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  if (((*(uint64_t (**)(__n128))((*MEMORY[0x1E0DEEDD8] & (uint64_t)v2->isa) + 0xD0))(v9) & 1) != 0)
  {
    if (one-time initialization token for screenSharing != -1)
      swift_once();
    v14 = OUTLINED_FUNCTION_17_2();
    v15 = __swift_project_value_buffer(v14, (uint64_t)&static Log.screenSharing);
    OUTLINED_FUNCTION_21_71();
    OUTLINED_FUNCTION_21_71();
    Logger.logObject.getter();
    v16 = OUTLINED_FUNCTION_12_0();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)OUTLINED_FUNCTION_105();
      v18 = OUTLINED_FUNCTION_105();
      v31[1] = v4;
      v32 = v12;
      v33 = v18;
      v31[0] = v5;
      *(_DWORD *)v17 = 136315138;
      OUTLINED_FUNCTION_21_71();
      v19 = String.init<A>(reflecting:)();
      v32 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v19, v20, &v33);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      outlined consume of RemoteControlState(v12);
      outlined consume of RemoteControlState(v12);
      OUTLINED_FUNCTION_48(&dword_1BD004000, v15, v16, "Updating capture UI interaction for remote control state: %s", v17);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }
    outlined consume of RemoteControlState(v12);
    outlined consume of RemoteControlState(v12);

    v26 = *(Class *)((char *)&v2->isa + OBJC_IVAR____TtC15ConversationKit24ScreenSharingInteraction_captureInteraction);
    if (v26)
    {
      v27 = v12 >> 61;
      v28 = *(void (**)(void))((*v13 & (uint64_t)v2->isa) + 0xE8);
      v25 = v26;
      v28();
      v30 = (unsigned int *)MEMORY[0x1E0D8BF60];
      if (((1 << v27) & 0x23) != 0)
      {
        *v11 = v29;
        v30 = (unsigned int *)MEMORY[0x1E0D8BF58];
      }
      else if (((1 << v27) & 0xC) != 0)
      {
        v30 = (unsigned int *)MEMORY[0x1E0D8BF68];
      }
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v11, *v30, v4);
      goto LABEL_18;
    }
  }
  else
  {
    if (one-time initialization token for screenSharing != -1)
      swift_once();
    v21 = OUTLINED_FUNCTION_17_2();
    OUTLINED_FUNCTION_3(v21, (uint64_t)&static Log.screenSharing);
    v22 = OUTLINED_FUNCTION_12_0();
    if (OUTLINED_FUNCTION_51_3(v22))
    {
      v23 = (uint8_t *)OUTLINED_FUNCTION_105();
      *(_WORD *)v23 = 0;
      _os_log_impl(&dword_1BD004000, v2, (os_log_type_t)v11, "Screen sharing interactions are disabled, pausing capture UI interaction", v23, 2u);
      OUTLINED_FUNCTION_60();
    }

    v24 = *(Class *)((char *)&v2->isa + OBJC_IVAR____TtC15ConversationKit24ScreenSharingInteraction_captureInteraction);
    if (v24)
    {
      (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0D8BF60], v4);
      v25 = v24;
LABEL_18:
      CaptureUIInteraction.interactionState.setter();

    }
  }
}

id ScreenSharingInteraction.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void ScreenSharingInteraction.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ScreenSharingInteraction.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ScreenSharingInteraction();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Void __swiftcall ScreenSharingInteraction.willMove(to:)(UIView_optional *to)
{
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  NSObject *v8;
  id v9;
  os_log_type_t v10;
  uint8_t *v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;

  v2 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v3 = OUTLINED_FUNCTION_28_7(*v1);
  if (v3)
  {
    v18 = (id)v3;
    (*(void (**)(_QWORD))((*v2 & *v1) + 0x90))(0);
    v4 = *(void **)((char *)v1 + OBJC_IVAR____TtC15ConversationKit24ScreenSharingInteraction_captureInteraction);
    if (!v4)
    {
      OUTLINED_FUNCTION_3_4(v18);
      return;
    }
    v5 = one-time initialization token for screenSharing;
    v6 = v4;
    if (v5 != -1)
      swift_once();
    v7 = OUTLINED_FUNCTION_17_2();
    v8 = __swift_project_value_buffer(v7, (uint64_t)&static Log.screenSharing);
    v9 = v18;
    Logger.logObject.getter();
    v10 = OUTLINED_FUNCTION_12_0();
    if (os_log_type_enabled(v8, v10))
    {
      v11 = (uint8_t *)OUTLINED_FUNCTION_105();
      v19 = OUTLINED_FUNCTION_105();
      *(_DWORD *)v11 = 136315138;
      OUTLINED_FUNCTION_59(v19, (unint64_t *)&lazy cache variable for type metadata for UIView);
      v12 = v9;
      v13 = OUTLINED_FUNCTION_36_10();
      OUTLINED_FUNCTION_27_51(v13, v14, v15, v16, v17);
      OUTLINED_FUNCTION_17_65();

      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_48(&dword_1BD004000, v8, v10, "Removing screen sharing capture interaction from previous view: %s", v11);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }

    objc_msgSend(v9, sel_removeInteraction_, v6);
  }
  OUTLINED_FUNCTION_8_0();
}

Swift::Void __swiftcall ScreenSharingInteraction.didMove(to:)(UIView_optional *to)
{
  _QWORD *v1;
  void (*v3)(UIView_optional *);
  UIView_optional *v4;
  void *v5;
  UIView_optional *v6;
  id v7;
  uint64_t v8;
  NSObject *v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  UIView_optional *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  UIView_optional *v37;
  id v38;
  id v39;

  v3 = *(void (**)(UIView_optional *))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x90);
  v4 = to;
  v3(to);
  if (to
    && (v5 = *(void **)((char *)v1 + OBJC_IVAR____TtC15ConversationKit24ScreenSharingInteraction_captureInteraction)) != 0)
  {
    v6 = v4;
    v7 = v5;
    -[UIView_optional addInteraction:](v6, sel_addInteraction_, v7);
    if (one-time initialization token for screenSharing != -1)
      swift_once();
    v8 = OUTLINED_FUNCTION_17_2();
    v9 = __swift_project_value_buffer(v8, (uint64_t)&static Log.screenSharing);
    v37 = v6;
    v10 = v9;
    Logger.logObject.getter();
    v11 = OUTLINED_FUNCTION_12_0();
    if (OUTLINED_FUNCTION_51_3(v11))
    {
      v12 = (uint8_t *)OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_105();
      *(_DWORD *)v12 = 136315138;
      OUTLINED_FUNCTION_59((uint64_t)v37, (unint64_t *)&lazy cache variable for type metadata for UIView);
      v13 = v37;
      v14 = OUTLINED_FUNCTION_36_10();
      OUTLINED_FUNCTION_27_51(v14, v15, v16, v17, v18);
      OUTLINED_FUNCTION_17_65();

      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_48(&dword_1BD004000, v10, (os_log_type_t)v3, "Adding screen sharing capture interaction to new view: %s", v12);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_26_19(v19, v20, v21, v22, v23, v24, v25, v26, v35, v37);
    OUTLINED_FUNCTION_26_19(v27, v28, v29, v30, v31, v32, v33, v34, v36, v38);
    OUTLINED_FUNCTION_3_4(v39);
  }
  else
  {
    OUTLINED_FUNCTION_8_0();
  }
}

uint64_t CaptureUIInteraction.cnk_deviceOrientation.getter()
{
  void *v0;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  swift_getObjectType();
  if (objc_msgSend(v0, sel_respondsToSelector_, sel__deviceOrientation))
    return ((uint64_t (*)(void *, char *))objc_msgSend(v0, sel_methodForSelector_, sel__deviceOrientation))(v0, sel__deviceOrientation);
  if (one-time initialization token for screenSharing != -1)
    swift_once();
  v2 = OUTLINED_FUNCTION_17_2();
  v3 = OUTLINED_FUNCTION_3(v2, (uint64_t)&static Log.screenSharing);
  v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)OUTLINED_FUNCTION_105();
    v8 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v5 = 136315138;
    v6 = _typeName(_:qualified:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v6, v7, &v8);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_48(&dword_1BD004000, v3, v4, "%s does not respond to getting device orientation, control may not work correctly in landscape", v5);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  return 0;
}

void CaptureUIInteraction.cnk_deviceOrientation.modify(uint64_t *a1)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = CaptureUIInteraction.cnk_deviceOrientation.getter();
  OUTLINED_FUNCTION_0();
}

{
  CaptureUIInteraction.cnk_deviceOrientation.setter(*a1);
  OUTLINED_FUNCTION_0();
}

uint64_t type metadata accessor for ScreenSharingInteraction()
{
  return objc_opt_self();
}

uint64_t sub_1BD3A4F38()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void partial apply for closure #1 in ScreenSharingInteraction.init(interactionController:)(uint64_t *a1)
{
  uint64_t v1;

  closure #1 in ScreenSharingInteraction.init(interactionController:)(a1, v1);
}

uint64_t outlined destroy of OS_dispatch_queue.SchedulerOptions?(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for OS_dispatch_queue.SchedulerOptions?);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void partial apply for closure #2 in ScreenSharingInteraction.init(interactionController:)(uint64_t *a1)
{
  uint64_t v1;

  closure #2 in ScreenSharingInteraction.init(interactionController:)(a1, v1);
}

void sub_1BD3A4FAC()
{
  uint64_t *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = OUTLINED_FUNCTION_28_7(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD3A4FDC()
{
  _BYTE *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0xD0))() & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD3A5014(unsigned __int8 *a1, _QWORD **a2)
{
  (*(void (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & **a2) + 0xD8))(*a1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD3A504C()
{
  double *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(double (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0xE8))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD3A5080(double *a1, _QWORD **a2)
{
  (*(void (**)(double))((*MEMORY[0x1E0DEEDD8] & **a2) + 0xF0))(*a1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD3A50B8()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x100))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD3A50EC(_QWORD *a1, _QWORD **a2)
{
  (*(void (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x108))(*a1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD3A5124(uint64_t *a1@<X8>)
{
  *a1 = CaptureUIInteraction.cnk_deviceOrientation.getter();
  OUTLINED_FUNCTION_0();
}

void sub_1BD3A5148(uint64_t *a1)
{
  CaptureUIInteraction.cnk_deviceOrientation.setter(*a1);
  OUTLINED_FUNCTION_0();
}

uint64_t method lookup function for ScreenSharingInteraction()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ScreenSharingInteraction.view.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of ScreenSharingInteraction.view.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of ScreenSharingInteraction.view.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of ScreenSharingInteraction.isEnabled.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of ScreenSharingInteraction.isEnabled.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of ScreenSharingInteraction.isEnabled.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of ScreenSharingInteraction.displayScale.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of ScreenSharingInteraction.displayScale.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of ScreenSharingInteraction.displayScale.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of ScreenSharingInteraction.deviceOrientation.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of ScreenSharingInteraction.deviceOrientation.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of ScreenSharingInteraction.deviceOrientation.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x110))();
}

uint64_t dispatch thunk of ScreenSharingInteraction.__allocating_init(interactionController:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 280))();
}

uint64_t dispatch thunk of ScreenSharingInteraction.updateCaptureInteraction(using:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x120))();
}

{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x128))();
}

uint64_t sub_1BD3A5304()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ScreenSharingInteraction.captureInteraction.didset()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = partial apply for closure #2 in CallScreeningEndingState.enteredState();
  return closure #1 in ScreenSharingInteraction.captureInteraction.didset();
}

void __swiftcall UILabel.init(font:textColor:)(UILabel *__return_ptr retstr, UIFont font, UIColor_optional textColor)
{
  Class isa;
  id v5;
  objc_class *v6;

  isa = textColor.value.super.isa;
  v5 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  objc_msgSend(v5, sel_setFont_, font.super.isa);
  v6 = (objc_class *)v5;
  if (isa)
  {
    v6 = isa;
    objc_msgSend(v5, sel_setTextColor_, v6);

  }
}

uint64_t specialized static ViewBuilder.buildBlock<each A>(_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  char v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  char v62;
  __int128 v63;
  id v64;
  char v66;
  uint64_t v67;
  void *v68;

  outlined init with copy of FeatureEligibility?(*a1, a2, &demangling cache variable for type metadata for HStack<TupleView<(Spacer, Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Circle, Color>>>, _EnvironmentKeyWritingModifier<Color?>>>)>>);
  v4 = (int *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (HStack<TupleView<(Spacer, Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Circle, Color>>>, _EnvironmentKeyWritingModifier<Color?>>>)>>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ContactAvatarView, _FrameLayout>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>, ModifiedContent<Spacer, _FrameLayout>, HStack<TupleView<(Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _FlexFrameLayout>, _ClipEffect<Rectangle>>, _BackgroundModifier<_ShapeView<RoundedRectangle, Color>>>, _EnvironmentKeyWritingModifier<Color?>>>, Button<ModifiedContent<Modifie);
  v5 = a2 + v4[12];
  v6 = a1[1];
  v7 = a1[2];
  v8 = *(_BYTE *)(v6 + 8);
  v9 = *(_QWORD *)(v6 + 16);
  v10 = *(_BYTE *)(v6 + 24);
  v11 = *(_QWORD *)(v6 + 32);
  v12 = *(_BYTE *)(v6 + 40);
  v13 = *(_OWORD *)(v6 + 48);
  *(_QWORD *)v5 = *(_QWORD *)v6;
  *(_BYTE *)(v5 + 8) = v8;
  *(_QWORD *)(v5 + 16) = v9;
  *(_BYTE *)(v5 + 24) = v10;
  *(_QWORD *)(v5 + 32) = v11;
  *(_BYTE *)(v5 + 40) = v12;
  *(_OWORD *)(v5 + 48) = v13;
  v14 = a2 + v4[16];
  v15 = *(_QWORD *)(v7 + 8);
  v68 = *(void **)v7;
  v16 = *(_BYTE *)(v7 + 16);
  v17 = *(_QWORD *)(v7 + 24);
  LOBYTE(v9) = *(_BYTE *)(v7 + 32);
  v18 = *(_OWORD *)(v7 + 40);
  *(_QWORD *)v14 = *(_QWORD *)v7;
  *(_QWORD *)(v14 + 8) = v15;
  *(_BYTE *)(v14 + 16) = v16;
  *(_QWORD *)(v14 + 24) = v17;
  *(_BYTE *)(v14 + 32) = v9;
  *(_OWORD *)(v14 + 40) = v18;
  v19 = a2 + v4[20];
  v20 = a1[3];
  v21 = a1[4];
  LOBYTE(v17) = *(_BYTE *)(v20 + 8);
  v22 = *(_QWORD *)(v20 + 16);
  v23 = *(_BYTE *)(v20 + 24);
  v24 = *(_QWORD *)(v20 + 32);
  v25 = *(_BYTE *)(v20 + 40);
  v26 = *(_OWORD *)(v20 + 48);
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *(_BYTE *)(v19 + 8) = v17;
  *(_QWORD *)(v19 + 16) = v22;
  *(_BYTE *)(v19 + 24) = v23;
  *(_QWORD *)(v19 + 32) = v24;
  *(_BYTE *)(v19 + 40) = v25;
  *(_OWORD *)(v19 + 48) = v26;
  v27 = a2 + v4[24];
  v29 = *(_QWORD *)v21;
  v28 = *(_QWORD *)(v21 + 8);
  v30 = *(_BYTE *)(v21 + 16);
  v66 = v30;
  v31 = *(_QWORD *)(v21 + 24);
  v67 = *(_QWORD *)(v21 + 32);
  LOBYTE(v20) = *(_BYTE *)(v21 + 40);
  v32 = *(_BYTE *)(v21 + 41);
  LOBYTE(v21) = *(_BYTE *)(v21 + 42);
  *(_QWORD *)v27 = v29;
  *(_QWORD *)(v27 + 8) = v28;
  *(_BYTE *)(v27 + 16) = v30;
  *(_QWORD *)(v27 + 24) = v31;
  *(_QWORD *)(v27 + 32) = v67;
  *(_BYTE *)(v27 + 40) = v20;
  *(_BYTE *)(v27 + 41) = v32;
  *(_BYTE *)(v27 + 42) = v21;
  v33 = a2 + v4[28];
  v34 = a1[5];
  v35 = a1[6];
  LOBYTE(v17) = *(_BYTE *)(v34 + 8);
  v36 = *(_QWORD *)(v34 + 16);
  v37 = *(_BYTE *)(v34 + 24);
  v38 = *(_QWORD *)(v34 + 32);
  v39 = *(_BYTE *)(v34 + 40);
  v40 = *(_OWORD *)(v34 + 48);
  *(_QWORD *)v33 = *(_QWORD *)v34;
  *(_BYTE *)(v33 + 8) = v17;
  *(_QWORD *)(v33 + 16) = v36;
  *(_BYTE *)(v33 + 24) = v37;
  *(_QWORD *)(v33 + 32) = v38;
  *(_BYTE *)(v33 + 40) = v39;
  *(_OWORD *)(v33 + 48) = v40;
  v41 = a2 + v4[32];
  v43 = *(_QWORD *)v35;
  v42 = *(_QWORD *)(v35 + 8);
  v44 = *(_BYTE *)(v35 + 16);
  v46 = *(_QWORD *)(v35 + 24);
  v45 = *(_QWORD *)(v35 + 32);
  LOBYTE(v34) = *(_BYTE *)(v35 + 40);
  v47 = *(_BYTE *)(v35 + 41);
  LOBYTE(v35) = *(_BYTE *)(v35 + 42);
  *(_QWORD *)v41 = v43;
  *(_QWORD *)(v41 + 8) = v42;
  *(_BYTE *)(v41 + 16) = v44;
  *(_QWORD *)(v41 + 24) = v46;
  *(_QWORD *)(v41 + 32) = v45;
  *(_BYTE *)(v41 + 40) = v34;
  *(_BYTE *)(v41 + 41) = v47;
  *(_BYTE *)(v41 + 42) = v35;
  v48 = a2 + v4[36];
  v50 = a1[7];
  v49 = a1[8];
  v51 = *(_QWORD *)v50;
  v52 = *(_BYTE *)(v50 + 8);
  v53 = *(_QWORD *)(v50 + 16);
  LOBYTE(v36) = *(_BYTE *)(v50 + 24);
  v54 = *(_QWORD *)(v50 + 32);
  v55 = *(_OWORD *)(v50 + 48);
  LOBYTE(v50) = *(_BYTE *)(v50 + 40);
  *(_QWORD *)v48 = v51;
  *(_BYTE *)(v48 + 8) = v52;
  *(_QWORD *)(v48 + 16) = v53;
  *(_BYTE *)(v48 + 24) = v36;
  *(_QWORD *)(v48 + 32) = v54;
  *(_BYTE *)(v48 + 40) = v50;
  *(_OWORD *)(v48 + 48) = v55;
  outlined init with copy of FeatureEligibility?(v49, a2 + v4[40], &demangling cache variable for type metadata for HStack<TupleView<(Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _FlexFrameLayout>, _ClipEffect<Rectangle>>, _BackgroundModifier<_ShapeView<RoundedRectangle, Color>>>, _EnvironmentKeyWritingModifier<Color?>>>, Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _FlexFrameLayout>, _ClipEffect<Rectangle>>, _BackgroundModifier<_ShapeView<RoundedRectangle, Color>>>, _EnvironmentKeyWritingModifier<Color?>>>)>>);
  v56 = a2 + v4[44];
  v57 = a1[9];
  v58 = *(_BYTE *)(v57 + 8);
  v59 = *(_QWORD *)(v57 + 16);
  v60 = *(_BYTE *)(v57 + 24);
  v61 = *(_QWORD *)(v57 + 32);
  v62 = *(_BYTE *)(v57 + 40);
  v63 = *(_OWORD *)(v57 + 48);
  *(_QWORD *)v56 = *(_QWORD *)v57;
  *(_BYTE *)(v56 + 8) = v58;
  *(_QWORD *)(v56 + 16) = v59;
  *(_BYTE *)(v56 + 24) = v60;
  *(_QWORD *)(v56 + 32) = v61;
  *(_BYTE *)(v56 + 40) = v62;
  *(_OWORD *)(v56 + 48) = v63;
  v64 = v68;
  outlined copy of Text.Storage(v29, v28, v66);
  swift_bridgeObjectRetain();
  swift_retain();
  outlined copy of Text.Storage(v43, v42, v44);
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t default argument 1 of RemoteControlOnboardingView.init(requestingParticipant:horizontalSizeClass:)@<X0>(uint64_t *a1@<X8>)
{
  *a1 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
  return swift_storeEnumTagMultiPayload();
}

void RemoteControlOnboardingView.init(requestingParticipant:horizontalSizeClass:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t *v6;

  outlined init with take of StagedCollaboration(a1, a3, type metadata accessor for Participant);
  v5 = OUTLINED_FUNCTION_2_110();
  v6 = (uint64_t *)(a3 + *(int *)(v5 + 20));
  *v6 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
  swift_storeEnumTagMultiPayload();
  outlined init with take of Any?(a2, a3 + *(int *)(v5 + 24), &demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>);
}

void key path getter for EnvironmentValues.dismiss : EnvironmentValues()
{
  EnvironmentValues.dismiss.getter();
  OUTLINED_FUNCTION_0();
}

double PresentationAutomaticHeightModifier.calculatedHeight.getter()
{
  double v1;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<CGFloat>);
  State.wrappedValue.getter();
  return v1;
}

void key path getter for PresentationAutomaticHeightModifier.calculatedHeight : PresentationAutomaticHeightModifier(double *a1@<X8>)
{
  *a1 = PresentationAutomaticHeightModifier.calculatedHeight.getter();
}

uint64_t key path setter for PresentationAutomaticHeightModifier.calculatedHeight : PresentationAutomaticHeightModifier()
{
  return PresentationAutomaticHeightModifier.calculatedHeight.setter();
}

uint64_t PresentationAutomaticHeightModifier.calculatedHeight.setter()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<CGFloat>);
  return State.wrappedValue.setter();
}

void (*PresentationAutomaticHeightModifier.calculatedHeight.modify(double **a1, uint64_t a2, double a3))(uint64_t a1)
{
  double *v6;

  v6 = (double *)malloc(0x38uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 5) = a2;
  v6[4] = a3;
  *v6 = a3;
  *((_QWORD *)v6 + 1) = a2;
  swift_retain();
  *((_QWORD *)v6 + 6) = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<CGFloat>);
  State.wrappedValue.getter();
  return PresentationAutomaticHeightModifier.calculatedHeight.modify;
}

void PresentationAutomaticHeightModifier.calculatedHeight.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD **)a1;
  v2 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  *v1 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v1[1] = v3;
  v1[3] = v2;
  State.wrappedValue.setter();
  swift_release();
  free(v1);
}

double PresentationAutomaticHeightModifier.$calculatedHeight.getter()
{
  double v1;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<CGFloat>);
  State.projectedValue.getter();
  return v1;
}

void PresentationAutomaticHeightModifier.body(content:)(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<PresentationAutomaticHeightModifier>, _BackgroundModifier<ModifiedContent<Color, _GeometryActionModifier<CGFloat>>>>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_16_2();
  v9 = static Alignment.center.getter();
  v11 = v10;
  v12 = static Color.clear.getter();
  v13 = swift_allocObject();
  *(double *)(v13 + 16) = a3;
  *(_QWORD *)(v13 + 24) = a2;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ViewModifier_Content<PresentationAutomaticHeightModifier>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v3, a1, v14);
  v15 = (uint64_t *)(v3 + *(int *)(v7 + 36));
  *v15 = v12;
  v15[1] = (uint64_t)closure #1 in closure #1 in PresentationAutomaticHeightModifier.body(content:);
  v15[2] = 0;
  v15[3] = (uint64_t)partial apply for closure #2 in closure #1 in PresentationAutomaticHeightModifier.body(content:);
  v15[4] = v13;
  v15[5] = v9;
  v15[6] = v11;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<PresentationDetent>);
  type metadata accessor for PresentationDetent();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BD6441D0;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<CGFloat>);
  State.wrappedValue.getter();
  static PresentationDetent.height(_:)();
  specialized Set.init(_nonEmptyArrayLiteral:)();
  lazy protocol witness table accessor for type ModifiedContent<_ViewModifier_Content<PresentationAutomaticHeightModifier>, _BackgroundModifier<ModifiedContent<Color, _GeometryActionModifier<CGFloat>>>> and conformance <> ModifiedContent<A, B>();
  View.presentationDetents(_:)();
  swift_bridgeObjectRelease();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v3, &demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<PresentationAutomaticHeightModifier>, _BackgroundModifier<ModifiedContent<Color, _GeometryActionModifier<CGFloat>>>>);
  OUTLINED_FUNCTION_7_7();
}

uint64_t closure #1 in closure #1 in PresentationAutomaticHeightModifier.body(content:)@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = GeometryProxy.size.getter();
  *a1 = v3;
  return result;
}

uint64_t closure #2 in closure #1 in PresentationAutomaticHeightModifier.body(content:)()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<CGFloat>);
  return State.wrappedValue.setter();
}

uint64_t PresentationAutomaticHeightModifier.init()()
{
  uint64_t v1;

  OUTLINED_FUNCTION_8_91();
  return v1;
}

double default argument 0 of PresentationAutomaticHeightModifier.init(calculatedHeight:)()
{
  return 0.0;
}

uint64_t PresentationAutomaticHeightModifier.init(calculatedHeight:)()
{
  uint64_t v1;

  OUTLINED_FUNCTION_8_91();
  return v1;
}

void protocol witness for ViewModifier.body(content:) in conformance PresentationAutomaticHeightModifier(uint64_t a1)
{
  uint64_t v1;

  PresentationAutomaticHeightModifier.body(content:)(a1, *(_QWORD *)(v1 + 8), *(double *)v1);
}

uint64_t View.presentationAutomaticHeight()(uint64_t a1, uint64_t a2)
{
  uint64_t v5;

  OUTLINED_FUNCTION_8_91();
  MEMORY[0x1C3B724A0](&v5, a1, &type metadata for PresentationAutomaticHeightModifier, a2);
  return swift_release();
}

id ContactAvatarView.makeUIView(context:)(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97468]), sel_initWithContact_, a2);
}

id ContactAvatarView.updateUIView(_:context:)(void *a1)
{
  return objc_msgSend(a1, sel_setContact_);
}

id protocol witness for UIViewRepresentable.makeUIView(context:) in conformance ContactAvatarView(uint64_t a1)
{
  uint64_t *v1;

  return ContactAvatarView.makeUIView(context:)(a1, *v1);
}

id protocol witness for UIViewRepresentable.updateUIView(_:context:) in conformance ContactAvatarView(void *a1)
{
  return ContactAvatarView.updateUIView(_:context:)(a1);
}

uint64_t protocol witness for static View._makeView(view:inputs:) in conformance ContactAvatarView()
{
  lazy protocol witness table accessor for type ContactAvatarView and conformance ContactAvatarView();
  return static UIViewRepresentable._makeView(view:inputs:)();
}

uint64_t protocol witness for static View._makeViewList(view:inputs:) in conformance ContactAvatarView()
{
  lazy protocol witness table accessor for type ContactAvatarView and conformance ContactAvatarView();
  return static UIViewRepresentable._makeViewList(view:inputs:)();
}

void protocol witness for View.body.getter in conformance ContactAvatarView()
{
  lazy protocol witness table accessor for type ContactAvatarView and conformance ContactAvatarView();
  UIViewRepresentable.body.getter();
  __break(1u);
}

void RemoteControlOnboardingView.requestingParticipant.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  outlined init with copy of ConversationControlsAppLaunchButtonType(v1, a1, type metadata accessor for Participant);
}

uint64_t RemoteControlOnboardingView.requestingParticipant.setter(uint64_t a1)
{
  uint64_t v1;

  return outlined assign with take of Participant(a1, v1);
}

uint64_t (*RemoteControlOnboardingView.requestingParticipant.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void RemoteControlOnboardingView.horizontalSizeClass.getter()
{
  OUTLINED_FUNCTION_2_110();
  specialized Environment.wrappedValue.getter();
  OUTLINED_FUNCTION_0();
}

void RemoteControlOnboardingView.body.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t (**v30)();
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v40 = a1;
  v3 = OUTLINED_FUNCTION_2_110();
  v4 = *(_QWORD *)(*(_QWORD *)(v3 - 8) + 64);
  v38 = *(_QWORD *)(v3 - 8);
  v39 = v4;
  MEMORY[0x1E0C80A78](v3);
  v37 = (uint64_t)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VStack<TupleView<(HStack<TupleView<(Spacer, Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Circle, Color>>>, _EnvironmentKeyWritingModifier<Color?>>>)>>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ContactAvatarView, _FrameLayout>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>, ModifiedContent<Spacer, _FrameLayout>, HStack<TupleView<(Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _FlexFrameLayout>, _ClipEffect<Rectangle>>, _BackgroundModifier<_ShapeView<RoundedRectangle, Color>>>, _EnvironmentKeyWritingModifier<Color?>>>, Button<Modifi);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_77();
  v9 = v8 - v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(HStack<TupleView<(Spacer, Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Circle, Color>>>, _EnvironmentKeyWritingModifier<Color?>>>)>>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ContactAvatarView, _FrameLayout>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>, ModifiedContent<Spacer, _FrameLayout>, HStack<TupleView<(Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _FlexFrameLayout>, _ClipEffect<Rectangle>>, _BackgroundModifier<_ShapeView<RoundedRectangle, Color>>>, _EnvironmentKeyWritingModifier<Color?>>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_16_2();
  v34 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VStack<TupleView<(HStack<TupleView<(Spacer, Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Circle, Color>>>, _EnvironmentKeyWritingModifier<Color?>>>)>>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ContactAvatarView, _FrameLayout>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>, ModifiedContent<Spacer, _FrameLayout>, HStack<TupleView<(Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _FlexFrameLayout>, _ClipEffect<Rectangle>>, _BackgroundModifier<_ShapeView<RoundedRectangle, Color>>>, _EnvironmentKeyWritingM);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_77();
  v15 = v14 - v13;
  v35 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(HStack<TupleView<(Spacer, Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Circle, Color>>>, _EnvironmentKeyWritingModifier<Color?>>>)>>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ContactAvatarView, _FrameLayout>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>, ModifiedContent<Spacer, _FrameLayout>, HStack<TupleView<(Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _FlexFrameLayout>, _ClipEffect<Rectangle>>, _BackgroundModifier<_ShapeView<RoundedRectangle, Color>>>, _Enviro);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_77();
  v19 = v18 - v17;
  v36 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(HStack<TupleView<(Spacer, Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Circle, Color>>>, _EnvironmentKeyWritingModifier<Color?>>>)>>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ContactAvatarView, _FrameLayout>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>, ModifiedContent<Spacer, _FrameLayout>, HStack<TupleView<(Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _FlexFrameLayout>, _ClipEffect<Rectangle>>, _BackgroundModifier<_ShapeView<RoundedRectangle, C);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_77();
  v23 = v22 - v21;
  *(_QWORD *)v9 = static HorizontalAlignment.center.getter();
  *(_QWORD *)(v9 + 8) = 0;
  *(_BYTE *)(v9 + 16) = 1;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, TupleView<(HStack<TupleView<(Spacer, Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Circle, Color>>>, _EnvironmentKeyWritingModifier<Color?>>>)>>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ContactAvatarView, _FrameLayout>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>, ModifiedContent<Spacer, _FrameLayout>, HStack<TupleView<(Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _FlexFrameLayout>, _ClipEffect<Rectangle>>, _BackgroundModifier<_ShapeView<RoundedRectangle, Color>>>, _EnvironmentKeyWritingModifi);
  closure #1 in RemoteControlOnboardingView.body.getter(v1, v9 + *(int *)(v24 + 44));
  v25 = static Edge.Set.all.getter();
  outlined init with copy of FeatureEligibility?(v9, v2, &demangling cache variable for type metadata for VStack<TupleView<(HStack<TupleView<(Spacer, Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Circle, Color>>>, _EnvironmentKeyWritingModifier<Color?>>>)>>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ContactAvatarView, _FrameLayout>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>, ModifiedContent<Spacer, _FrameLayout>, HStack<TupleView<(Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _FlexFrameLayout>, _ClipEffect<Rectangle>>, _BackgroundModifier<_ShapeView<RoundedRectangle, Color>>>, _EnvironmentKeyWritingModifier<Color?>>>, Button<Modifi);
  v26 = v2 + *(int *)(v10 + 36);
  *(_BYTE *)v26 = v25;
  *(_OWORD *)(v26 + 8) = 0u;
  *(_OWORD *)(v26 + 24) = 0u;
  *(_BYTE *)(v26 + 40) = 1;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v9, &demangling cache variable for type metadata for VStack<TupleView<(HStack<TupleView<(Spacer, Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Circle, Color>>>, _EnvironmentKeyWritingModifier<Color?>>>)>>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ContactAvatarView, _FrameLayout>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>, ModifiedContent<Spacer, _FrameLayout>, HStack<TupleView<(Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _FlexFrameLayout>, _ClipEffect<Rectangle>>, _BackgroundModifier<_ShapeView<RoundedRectangle, Color>>>, _EnvironmentKeyWritingModifier<Color?>>>, Button<Modifi);
  v27 = v37;
  outlined init with copy of ConversationControlsAppLaunchButtonType(v1, v37, (uint64_t (*)(_QWORD))type metadata accessor for RemoteControlOnboardingView);
  v28 = (*(unsigned __int8 *)(v38 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
  v29 = swift_allocObject();
  outlined init with take of StagedCollaboration(v27, v29 + v28, (uint64_t (*)(_QWORD))type metadata accessor for RemoteControlOnboardingView);
  outlined init with copy of FeatureEligibility?(v2, v15, &demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(HStack<TupleView<(Spacer, Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Circle, Color>>>, _EnvironmentKeyWritingModifier<Color?>>>)>>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ContactAvatarView, _FrameLayout>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>, ModifiedContent<Spacer, _FrameLayout>, HStack<TupleView<(Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _FlexFrameLayout>, _ClipEffect<Rectangle>>, _BackgroundModifier<_ShapeView<RoundedRectangle, Color>>>, _EnvironmentKeyWritingModifier<Color?>>);
  v30 = (uint64_t (**)())(v15 + *(int *)(v34 + 36));
  *v30 = partial apply for closure #2 in RemoteControlOnboardingView.body.getter;
  v30[1] = (uint64_t (*)())v29;
  v30[2] = 0;
  v30[3] = 0;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v2, &demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(HStack<TupleView<(Spacer, Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Circle, Color>>>, _EnvironmentKeyWritingModifier<Color?>>>)>>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ContactAvatarView, _FrameLayout>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>, ModifiedContent<Spacer, _FrameLayout>, HStack<TupleView<(Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _FlexFrameLayout>, _ClipEffect<Rectangle>>, _BackgroundModifier<_ShapeView<RoundedRectangle, Color>>>, _EnvironmentKeyWritingModifier<Color?>>);
  outlined init with copy of FeatureEligibility?(v15, v19, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VStack<TupleView<(HStack<TupleView<(Spacer, Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Circle, Color>>>, _EnvironmentKeyWritingModifier<Color?>>>)>>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ContactAvatarView, _FrameLayout>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>, ModifiedContent<Spacer, _FrameLayout>, HStack<TupleView<(Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _FlexFrameLayout>, _ClipEffect<Rectangle>>, _BackgroundModifier<_ShapeView<RoundedRectangle, Color>>>, _EnvironmentKeyWritingM);
  *(_WORD *)(v19 + *(int *)(v35 + 36)) = 256;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v15, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VStack<TupleView<(HStack<TupleView<(Spacer, Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Circle, Color>>>, _EnvironmentKeyWritingModifier<Color?>>>)>>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ContactAvatarView, _FrameLayout>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>, ModifiedContent<Spacer, _FrameLayout>, HStack<TupleView<(Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _FlexFrameLayout>, _ClipEffect<Rectangle>>, _BackgroundModifier<_ShapeView<RoundedRectangle, Color>>>, _EnvironmentKeyWritingM);
  v41 = 0;
  State.init(wrappedValue:)();
  v31 = v42;
  v32 = v43;
  outlined init with copy of FeatureEligibility?(v19, v23, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(HStack<TupleView<(Spacer, Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Circle, Color>>>, _EnvironmentKeyWritingModifier<Color?>>>)>>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ContactAvatarView, _FrameLayout>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>, ModifiedContent<Spacer, _FrameLayout>, HStack<TupleView<(Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _FlexFrameLayout>, _ClipEffect<Rectangle>>, _BackgroundModifier<_ShapeView<RoundedRectangle, Color>>>, _Enviro);
  v33 = (_QWORD *)(v23 + *(int *)(v36 + 36));
  *v33 = v31;
  v33[1] = v32;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v19, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(HStack<TupleView<(Spacer, Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Circle, Color>>>, _EnvironmentKeyWritingModifier<Color?>>>)>>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ContactAvatarView, _FrameLayout>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>, ModifiedContent<Spacer, _FrameLayout>, HStack<TupleView<(Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _FlexFrameLayout>, _ClipEffect<Rectangle>>, _BackgroundModifier<_ShapeView<RoundedRectangle, Color>>>, _Enviro);
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(HStack<TupleView<(Spacer, Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Circle, Color>>>, _EnvironmentKeyWritingModifier<Color?>>>)>>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ContactAvatarView, _FrameLayout>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>, ModifiedContent<Spacer, _FrameLayout>, HStack<TupleView<(Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _FlexFrameLayout>, _ClipEffect<Rectangle>>, _BackgroundModifier<_ShapeView<RoundedRectangle, Col();
  View.interactiveDismissDisabled(_:)();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v23, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(HStack<TupleView<(Spacer, Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Circle, Color>>>, _EnvironmentKeyWritingModifier<Color?>>>)>>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ContactAvatarView, _FrameLayout>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>, ModifiedContent<Spacer, _FrameLayout>, HStack<TupleView<(Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _FlexFrameLayout>, _ClipEffect<Rectangle>>, _BackgroundModifier<_ShapeView<RoundedRectangle, C);
  OUTLINED_FUNCTION_7_7();
}

void closure #1 in RemoteControlOnboardingView.body.getter(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  void (*v46)(char *, char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(_QWORD);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int EnumTagSinglePayload;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(char *, uint64_t);
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  void (*v82)(char *, uint64_t);
  id v83;
  Swift::String v84;
  Swift::String_optional v85;
  Swift::String v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t *v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  uint64_t v103;
  uint64_t v104;
  int v105;
  char *v106;
  id v107;
  Swift::String v108;
  Swift::String_optional v109;
  Swift::String v110;
  uint64_t v111;
  uint64_t *v112;
  uint64_t *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char v117;
  uint64_t v118;
  uint64_t v119;
  int v120;
  void *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  int v135;
  uint64_t v136;
  int v137;
  int v138;
  uint64_t v139;
  int v140;
  uint64_t v141;
  unint64_t v142;
  uint64_t v143;
  uint64_t v144;
  int v145;
  uint64_t v146;
  int v147;
  uint64_t v148;
  uint64_t KeyPath;
  id v150;
  int v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  void (*v155)(char *, _QWORD, uint64_t);
  char *v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  char *v164;
  uint64_t v165;
  void *v166;
  uint64_t v167;
  uint64_t v168;
  int v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  char v181;
  uint64_t v182;
  char v183;
  uint64_t v184;
  char v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  char v189;
  uint64_t v190;
  char v191;
  uint64_t v192;
  char v193;
  uint64_t v194;
  uint64_t v195;
  unint64_t v196;
  uint64_t v197;
  char v198;
  id v199;
  uint64_t v200;
  __int16 v201;
  char v202;
  uint64_t v203;
  char v204;
  uint64_t v205;
  char v206;
  uint64_t v207;
  char v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  char v213;
  char *v214;
  uint64_t v215;
  __int16 v216;
  char v217;
  uint64_t v218;
  char v219;
  uint64_t v220;
  char v221;
  uint64_t v222;
  char v223;
  char *v224;
  void (*v225)(_QWORD, _QWORD, _QWORD);
  id v226[2];
  char v227;
  uint64_t v228;
  char v229;
  uint64_t v230;
  char *v231;
  uint64_t v232;
  char v233;
  uint64_t v234;
  char v235;
  uint64_t v236;
  char v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t *v241;
  id *v242;
  uint64_t *v243;
  uint64_t *v244;
  uint64_t *v245;
  uint64_t *v246;
  uint64_t *v247;
  uint64_t v248;
  uint64_t *v249;
  uint64_t v250;
  unsigned __int8 v251;
  uint64_t v252;
  unsigned __int8 v253;
  uint64_t v254;
  uint64_t v255;
  char *v256;
  unsigned __int8 v257;
  uint64_t v258;
  unsigned __int8 v259;
  uint64_t v260;
  char *v261;
  uint64_t v262;
  unsigned __int8 v263;
  uint64_t v264;
  unsigned __int8 v265;
  char *v266;
  void (*v267)(char *, _QWORD, uint64_t);
  uint64_t v268;
  unsigned __int8 v269;
  uint64_t v270;
  unsigned __int8 v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  unsigned __int8 v275;
  uint64_t v276;
  unsigned __int8 v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  char v281;
  uint64_t v282;
  unsigned __int8 v283;
  uint64_t v284;
  uint64_t v285;
  Swift::String v286;
  Swift::String v287;

  v176 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HStack<TupleView<(Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _FlexFrameLayout>, _ClipEffect<Rectangle>>, _BackgroundModifier<_ShapeView<RoundedRectangle, Color>>>, _EnvironmentKeyWritingModifier<Color?>>>, Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _FlexFrameLayout>, _ClipEffect<Rectangle>>, _BackgroundModifier<_ShapeView<RoundedRectangle, Color>>>, _EnvironmentKeyWritingModifier<Color?>>>)>>);
  MEMORY[0x1E0C80A78](v3);
  v175 = (uint64_t)&v134 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v174 = (uint64_t *)((char *)&v134 - v6);
  v157 = type metadata accessor for UserInterfaceSizeClass();
  v162 = *(_QWORD *)(v157 - 8);
  MEMORY[0x1E0C80A78](v157);
  v154 = (char *)&v134 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v161 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (UserInterfaceSizeClass?, UserInterfaceSizeClass?));
  MEMORY[0x1E0C80A78](v161);
  v165 = (uint64_t)&v134 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v160 = (uint64_t)&v134 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
  MEMORY[0x1E0C80A78](v11);
  v153 = (uint64_t)&v134 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v163 = (char *)&v134 - v14;
  MEMORY[0x1E0C80A78](v15);
  v164 = (char *)&v134 - v16;
  MEMORY[0x1E0C80A78](v17);
  v152 = (uint64_t)&v134 - v18;
  MEMORY[0x1E0C80A78](v19);
  v159 = (char *)&v134 - v20;
  MEMORY[0x1E0C80A78](v21);
  v177 = (uint64_t)&v134 - v22;
  v158 = type metadata accessor for RemoteControlOnboardingView();
  v23 = *(_QWORD *)(v158 - 8);
  v24 = *(_QWORD *)(v23 + 64);
  MEMORY[0x1E0C80A78](v158);
  v156 = (char *)&v134 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v134 - v26;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Circle, Color>>>, _EnvironmentKeyWritingModifier<Color?>>>);
  v172 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v171 = (char *)&v134 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v30);
  v32 = (char *)&v134 - v31;
  v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HStack<TupleView<(Spacer, Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Circle, Color>>>, _EnvironmentKeyWritingModifier<Color?>>>)>>);
  MEMORY[0x1E0C80A78](v33);
  v173 = (uint64_t)&v134 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v35);
  v37 = (char *)&v134 - v36;
  MEMORY[0x1E0C80A78](v38);
  v178 = (uint64_t)&v134 - v39;
  *(_QWORD *)v37 = static VerticalAlignment.center.getter();
  *((_QWORD *)v37 + 1) = 0;
  v37[16] = 1;
  v40 = &v37[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_HStackLayout, TupleView<(Spacer, Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Circle, Color>>>, _EnvironmentKeyWritingModifier<Color?>>>)>>)
                    + 44)];
  outlined init with copy of ConversationControlsAppLaunchButtonType(a1, (uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for RemoteControlOnboardingView);
  v41 = (*(unsigned __int8 *)(v23 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  v42 = swift_allocObject();
  outlined init with take of StagedCollaboration((uint64_t)v27, v42 + v41, (uint64_t (*)(_QWORD))type metadata accessor for RemoteControlOnboardingView);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Circle, Color>>>, _EnvironmentKeyWritingModifier<Color?>>);
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Circle, Color>>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>();
  v43 = a1;
  Button.init(action:label:)();
  v45 = v171;
  v44 = v172;
  v46 = *(void (**)(char *, char *, uint64_t))(v172 + 16);
  v46(v171, v32, v28);
  *(_QWORD *)v40 = 0;
  v40[8] = 1;
  v47 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Spacer, Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Circle, Color>>>, _EnvironmentKeyWritingModifier<Color?>>>));
  v48 = v157;
  v46(&v40[*(int *)(v47 + 48)], v45, v28);
  v49 = *(void (**)(char *, uint64_t))(v44 + 8);
  v49(v32, v28);
  v49(v45, v28);
  v50 = (uint64_t)v37;
  v51 = (uint64_t)v156;
  outlined init with take of Any?(v50, v178, &demangling cache variable for type metadata for HStack<TupleView<(Spacer, Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Circle, Color>>>, _EnvironmentKeyWritingModifier<Color?>>>)>>);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  v172 = v250;
  LODWORD(v171) = v251;
  v170 = v252;
  v169 = v253;
  v167 = v255;
  v168 = v254;
  Participant.contactDetails.getter();
  v52 = v240;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v179 = v43;
  outlined init with copy of ConversationControlsAppLaunchButtonType(v43, v51, (uint64_t (*)(_QWORD))type metadata accessor for RemoteControlOnboardingView);
  if (!v52)
  {
    v53 = *(_QWORD *)(v51 + *(int *)(type metadata accessor for Participant(0) + 28));
    if (v53)
      v54 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97360]), sel__initWithHandle_, v53);
    else
      v54 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97200]), sel_init);
    v52 = (uint64_t)v54;
  }
  v166 = (void *)v52;
  outlined destroy of AccountUpdateNotice(v51, (uint64_t (*)(_QWORD))type metadata accessor for RemoteControlOnboardingView);
  v55 = v177;
  v158 = v179 + *(int *)(v158 + 24);
  specialized Environment.wrappedValue.getter();
  v56 = v162;
  v57 = *(void (**)(_QWORD))(v162 + 104);
  v58 = (uint64_t)v159;
  LODWORD(v156) = *MEMORY[0x1E0CDC160];
  v155 = (void (*)(char *, _QWORD, uint64_t))v57;
  v57(v159);
  __swift_storeEnumTagSinglePayload(v58, 0, 1, v48);
  v59 = v160;
  v60 = v161;
  v61 = v160 + *(int *)(v161 + 48);
  outlined init with copy of FeatureEligibility?(v55, v160, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  outlined init with copy of FeatureEligibility?(v58, v61, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v59, 1, v48);
  v63 = v48;
  v64 = v56;
  v65 = v60;
  if (EnumTagSinglePayload == 1)
  {
    v66 = v59;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v58, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v55, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    if (__swift_getEnumTagSinglePayload(v61, 1, v63) == 1)
      v67 = &demangling cache variable for type metadata for UserInterfaceSizeClass?;
    else
      v67 = &demangling cache variable for type metadata for (UserInterfaceSizeClass?, UserInterfaceSizeClass?);
    v68 = (uint64_t)v164;
  }
  else
  {
    v66 = v59;
    v69 = v152;
    outlined init with copy of FeatureEligibility?(v59, v152, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    if (__swift_getEnumTagSinglePayload(v61, 1, v63) == 1)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v58, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v55, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      v70 = v69;
      v71 = *(void (**)(char *, uint64_t))(v64 + 8);
      v67 = &demangling cache variable for type metadata for (UserInterfaceSizeClass?, UserInterfaceSizeClass?);
    }
    else
    {
      v72 = v58;
      v73 = v154;
      (*(void (**)(char *, uint64_t, uint64_t))(v64 + 32))(v154, v61, v63);
      lazy protocol witness table accessor for type UserInterfaceSizeClass and conformance UserInterfaceSizeClass();
      dispatch thunk of static Equatable.== infix(_:_:)();
      v70 = v69;
      v71 = *(void (**)(char *, uint64_t))(v64 + 8);
      v71(v73, v63);
      v67 = &demangling cache variable for type metadata for UserInterfaceSizeClass?;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v72, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v177, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    }
    v68 = (uint64_t)v164;
    v71((char *)v70, v63);
  }
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v66, v67);
  specialized Environment.wrappedValue.getter();
  v74 = (uint64_t)v163;
  v155(v163, v156, v63);
  __swift_storeEnumTagSinglePayload(v74, 0, 1, v63);
  v75 = *(int *)(v65 + 48);
  v76 = v165;
  v77 = v165 + v75;
  outlined init with copy of FeatureEligibility?(v68, v165, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  outlined init with copy of FeatureEligibility?(v74, v77, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  if (__swift_getEnumTagSinglePayload(v76, 1, v63) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v74, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v68, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    if (__swift_getEnumTagSinglePayload(v77, 1, v63) == 1)
      v78 = &demangling cache variable for type metadata for UserInterfaceSizeClass?;
    else
      v78 = &demangling cache variable for type metadata for (UserInterfaceSizeClass?, UserInterfaceSizeClass?);
  }
  else
  {
    v79 = v64;
    v80 = v153;
    outlined init with copy of FeatureEligibility?(v76, v153, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    if (__swift_getEnumTagSinglePayload(v77, 1, v63) == 1)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v74, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v68, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      v78 = &demangling cache variable for type metadata for (UserInterfaceSizeClass?, UserInterfaceSizeClass?);
      (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v80, v63);
    }
    else
    {
      v81 = v154;
      (*(void (**)(char *, uint64_t, uint64_t))(v79 + 32))(v154, v77, v63);
      lazy protocol witness table accessor for type UserInterfaceSizeClass and conformance UserInterfaceSizeClass();
      dispatch thunk of static Equatable.== infix(_:_:)();
      v82 = *(void (**)(char *, uint64_t))(v79 + 8);
      v82(v81, v63);
      v78 = &demangling cache variable for type metadata for UserInterfaceSizeClass?;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v74, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v68, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      v82((char *)v80, v63);
    }
  }
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v76, v78);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  LODWORD(v162) = v257;
  v161 = v258;
  LODWORD(v177) = v259;
  v165 = v260;
  v163 = v256;
  v164 = v261;
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  v160 = v262;
  LODWORD(v159) = v263;
  v158 = v264;
  LODWORD(v157) = v265;
  v155 = (void (*)(char *, _QWORD, uint64_t))v267;
  v156 = v266;
  v150 = (id)objc_opt_self();
  v83 = objc_msgSend(v150, sel_conversationKit);
  v286._object = (void *)0xE000000000000000;
  v84._object = (void *)0x80000001BD688710;
  v84._countAndFlagsBits = 0xD000000000000018;
  v85.value._countAndFlagsBits = 0x61737265766E6F43;
  v85.value._object = (void *)0xEF74694B6E6F6974;
  v86._countAndFlagsBits = 0;
  v86._object = (void *)0xE000000000000000;
  v286._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v84, v85, (NSBundle)v83, v86, v286);

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v87 = swift_allocObject();
  *(_OWORD *)(v87 + 16) = xmmword_1BD6441D0;
  Participant.contactDetails.getter();
  v88 = v240;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v89 = Participant.name(_:)();
  v91 = v90;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v87 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v87 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v87 + 32) = v89;
  *(_QWORD *)(v87 + 40) = v91;
  v92 = String.init(format:_:)();
  v94 = v93;
  swift_bridgeObjectRelease();
  v240 = v92;
  v241 = v94;
  v142 = lazy protocol witness table accessor for type String and conformance String();
  v95 = Text.init<A>(_:)();
  v97 = v96;
  LOBYTE(v87) = v98 & 1;
  static Font.title.getter();
  static Font.Weight.semibold.getter();
  Font.weight(_:)();
  swift_release();
  v99 = Text.font(_:)();
  v101 = v100;
  LOBYTE(v88) = v102;
  swift_release();
  outlined consume of Text.Storage(v95, v97, v87);
  swift_bridgeObjectRelease();
  LODWORD(v240) = static HierarchicalShapeStyle.primary.getter();
  v103 = Text.foregroundStyle<A>(_:)();
  v152 = v104;
  v153 = v103;
  v151 = v105;
  v154 = v106;
  outlined consume of Text.Storage(v99, v101, v88 & 1);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  v148 = v268;
  v147 = v269;
  v146 = v270;
  v145 = v271;
  v143 = v273;
  v144 = v272;
  v107 = objc_msgSend(v150, sel_conversationKit);
  v108._countAndFlagsBits = 0xD000000000000024;
  v287._object = (void *)0xE000000000000000;
  v108._object = (void *)0x80000001BD688730;
  v109.value._countAndFlagsBits = 0x61737265766E6F43;
  v109.value._object = (void *)0xEF74694B6E6F6974;
  v110._countAndFlagsBits = 0;
  v110._object = (void *)0xE000000000000000;
  v287._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v108, v109, (NSBundle)v107, v110, v287);

  v111 = String.init(format:_:)();
  v113 = v112;
  swift_bridgeObjectRelease();
  v240 = v111;
  v241 = v113;
  v114 = Text.init<A>(_:)();
  v116 = v115;
  LOBYTE(v99) = v117 & 1;
  LODWORD(v240) = static HierarchicalShapeStyle.primary.getter();
  v118 = Text.foregroundStyle<A>(_:)();
  v141 = v119;
  v142 = v118;
  v140 = v120;
  v150 = v121;
  outlined consume of Text.Storage(v114, v116, v99);
  swift_bridgeObjectRelease();
  v122 = swift_getKeyPath();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  v139 = v274;
  v123 = v276;
  v137 = v277;
  v138 = v275;
  v124 = v279;
  v136 = v278;
  v125 = static VerticalAlignment.center.getter();
  v126 = (uint64_t)v174;
  *v174 = v125;
  *(_QWORD *)(v126 + 8) = 0;
  *(_BYTE *)(v126 + 16) = 1;
  v127 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_HStackLayout, TupleView<(Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _FlexFrameLayout>, _ClipEffect<Rectangle>>, _BackgroundModifier<_ShapeView<RoundedRectangle, Color>>>, _EnvironmentKeyWritingModifier<Color?>>>, Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _FlexFrameLayout>, _ClipEffect<Rectangle>>, _BackgroundModifier<_ShapeView<RoundedRectangle, Color>>>, _EnvironmentKeyWritingModifier<Color?>>>)>>);
  closure #3 in closure #1 in RemoteControlOnboardingView.body.getter(v179, (char *)(v126 + *(int *)(v127 + 44)));
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  v128 = v280;
  v129 = v281;
  v179 = v282;
  v135 = v283;
  v130 = v285;
  v134 = v284;
  v131 = v178;
  v132 = v173;
  outlined init with copy of FeatureEligibility?(v178, v173, &demangling cache variable for type metadata for HStack<TupleView<(Spacer, Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Circle, Color>>>, _EnvironmentKeyWritingModifier<Color?>>>)>>);
  v234 = v172;
  v235 = (char)v171;
  v236 = v170;
  v237 = v169;
  v238 = v168;
  v239 = v167;
  v226[0] = v166;
  v226[1] = v163;
  v227 = v162;
  v228 = v161;
  v241 = &v232;
  v240 = v132;
  v232 = 0;
  v233 = 1;
  v229 = v177;
  v230 = v165;
  v231 = v164;
  v218 = 0;
  v219 = 1;
  v220 = v160;
  v221 = (char)v159;
  v222 = v158;
  v223 = v157;
  v224 = v156;
  v225 = (void (*)(_QWORD, _QWORD, _QWORD))v155;
  v242 = v226;
  v243 = &v218;
  v211 = v153;
  v212 = v152;
  v213 = v151 & 1;
  v214 = v154;
  v215 = KeyPath;
  v216 = 1;
  v217 = 1;
  v203 = 0;
  v204 = 1;
  v205 = v148;
  v206 = v147;
  v207 = v146;
  v208 = v145;
  v209 = v144;
  v210 = v143;
  v244 = &v211;
  v245 = &v203;
  v196 = v142;
  v197 = v141;
  v198 = v140 & 1;
  v199 = v150;
  v200 = v122;
  v201 = 1;
  v202 = 1;
  v188 = 0;
  v189 = 1;
  v190 = v139;
  v191 = v138;
  v192 = v123;
  v193 = v137;
  v194 = v136;
  v195 = v124;
  v246 = (uint64_t *)&v196;
  v247 = &v188;
  v133 = v175;
  outlined init with copy of FeatureEligibility?(v126, v175, &demangling cache variable for type metadata for HStack<TupleView<(Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _FlexFrameLayout>, _ClipEffect<Rectangle>>, _BackgroundModifier<_ShapeView<RoundedRectangle, Color>>>, _EnvironmentKeyWritingModifier<Color?>>>, Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _FlexFrameLayout>, _ClipEffect<Rectangle>>, _BackgroundModifier<_ShapeView<RoundedRectangle, Color>>>, _EnvironmentKeyWritingModifier<Color?>>>)>>);
  v180 = 0;
  v181 = 1;
  v182 = v128;
  v183 = v129;
  v184 = v179;
  v185 = v135;
  v186 = v134;
  v187 = v130;
  v248 = v133;
  v249 = &v180;
  specialized static ViewBuilder.buildBlock<each A>(_:)(&v240, v176);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v126, &demangling cache variable for type metadata for HStack<TupleView<(Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _FlexFrameLayout>, _ClipEffect<Rectangle>>, _BackgroundModifier<_ShapeView<RoundedRectangle, Color>>>, _EnvironmentKeyWritingModifier<Color?>>>, Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _FlexFrameLayout>, _ClipEffect<Rectangle>>, _BackgroundModifier<_ShapeView<RoundedRectangle, Color>>>, _EnvironmentKeyWritingModifier<Color?>>>)>>);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v131, &demangling cache variable for type metadata for HStack<TupleView<(Spacer, Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Circle, Color>>>, _EnvironmentKeyWritingModifier<Color?>>>)>>);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v133, &demangling cache variable for type metadata for HStack<TupleView<(Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _FlexFrameLayout>, _ClipEffect<Rectangle>>, _BackgroundModifier<_ShapeView<RoundedRectangle, Color>>>, _EnvironmentKeyWritingModifier<Color?>>>, Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _FlexFrameLayout>, _ClipEffect<Rectangle>>, _BackgroundModifier<_ShapeView<RoundedRectangle, Color>>>, _EnvironmentKeyWritingModifier<Color?>>>)>>);
  outlined consume of Text.Storage(v196, v197, v198);
  swift_release();
  swift_bridgeObjectRelease();
  outlined consume of Text.Storage(v211, v212, v213);
  swift_release();
  swift_bridgeObjectRelease();

  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v132, &demangling cache variable for type metadata for HStack<TupleView<(Spacer, Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Circle, Color>>>, _EnvironmentKeyWritingModifier<Color?>>>)>>);
}

Swift::Void __swiftcall RemoteControlOnboardingView.didDismiss(remoteControl:)(Swift::Bool remoteControl)
{
  uint64_t v2;
  uint64_t v3;

  v2 = OUTLINED_FUNCTION_19_62();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_16_2();
  if (one-time initialization token for shared != -1)
    swift_once();
  (*(void (**)(Swift::Bool))((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)static ScreenSharingInteractionController.shared)
                                      + 0x1F8))(remoteControl);
  OUTLINED_FUNCTION_2_110();
  OUTLINED_FUNCTION_18_75();
  DismissAction.callAsFunction()();
  OUTLINED_FUNCTION_42_4(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  OUTLINED_FUNCTION_91();
}

uint64_t closure #2 in closure #1 in closure #1 in RemoteControlOnboardingView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t KeyPath;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v32;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Font.Design?);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Font.TextStyle();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SymbolRenderingMode?);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  Image.init(systemName:)();
  static SymbolRenderingMode.monochrome.getter();
  v12 = type metadata accessor for SymbolRenderingMode();
  __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v12);
  v13 = Image.symbolRenderingMode(_:)();
  swift_release();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v11, &demangling cache variable for type metadata for SymbolRenderingMode?);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0CDD790], v5);
  v14 = type metadata accessor for Font.Design();
  __swift_storeEnumTagSinglePayload((uint64_t)v4, 1, 1, v14);
  static Font.Weight.bold.getter();
  v15 = static Font.system(_:design:weight:)();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v4, &demangling cache variable for type metadata for Font.Design?);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  KeyPath = swift_getKeyPath();
  LOBYTE(v4) = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  v18 = v17;
  v20 = v19;
  v22 = v21;
  v24 = v23;
  v25 = static Alignment.center.getter();
  v27 = v26;
  v28 = objc_msgSend((id)objc_opt_self(), sel_quaternaryLabelColor);
  v29 = MEMORY[0x1C3B7262C](v28);
  v30 = static Color.secondary.getter();
  result = swift_getKeyPath();
  *(_QWORD *)a1 = v13;
  *(_QWORD *)(a1 + 8) = KeyPath;
  *(_QWORD *)(a1 + 16) = v15;
  *(_BYTE *)(a1 + 24) = (_BYTE)v4;
  *(_QWORD *)(a1 + 32) = v18;
  *(_QWORD *)(a1 + 40) = v20;
  *(_QWORD *)(a1 + 48) = v22;
  *(_QWORD *)(a1 + 56) = v24;
  *(_BYTE *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 72) = v29;
  *(_WORD *)(a1 + 80) = 256;
  *(_QWORD *)(a1 + 88) = v25;
  *(_QWORD *)(a1 + 96) = v27;
  *(_QWORD *)(a1 + 104) = result;
  *(_QWORD *)(a1 + 112) = v30;
  return result;
}

uint64_t closure #3 in closure #1 in RemoteControlOnboardingView.body.getter@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  char *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;

  v29 = a1;
  v33 = a2;
  v3 = type metadata accessor for RemoteControlOnboardingView();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _FlexFrameLayout>, _ClipEffect<Rectangle>>, _BackgroundModifier<_ShapeView<RoundedRectangle, Color>>>, _EnvironmentKeyWritingModifier<Color?>>>);
  v31 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v32 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v30 = (char *)&v28 - v10;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v28 - v12;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v28 - v15;
  outlined init with copy of ConversationControlsAppLaunchButtonType(a1, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for RemoteControlOnboardingView);
  v17 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v18 = swift_allocObject();
  outlined init with take of StagedCollaboration((uint64_t)v6, v18 + v17, (uint64_t (*)(_QWORD))type metadata accessor for RemoteControlOnboardingView);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _FlexFrameLayout>, _ClipEffect<Rectangle>>, _BackgroundModifier<_ShapeView<RoundedRectangle, Color>>>, _EnvironmentKeyWritingModifier<Color?>>);
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _FlexFrameLayout>, _ClipEffect<Rectangle>>, _BackgroundModifier<_ShapeView<RoundedRectangle, Color>>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>();
  Button.init(action:label:)();
  outlined init with copy of ConversationControlsAppLaunchButtonType(v29, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for RemoteControlOnboardingView);
  v19 = swift_allocObject();
  outlined init with take of StagedCollaboration((uint64_t)v6, v19 + v17, (uint64_t (*)(_QWORD))type metadata accessor for RemoteControlOnboardingView);
  Button.init(action:label:)();
  v20 = v30;
  v21 = v31;
  v22 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
  v22(v30, v16, v7);
  v23 = v32;
  v22(v32, v13, v7);
  v24 = v33;
  v22(v33, v20, v7);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _FlexFrameLayout>, _ClipEffect<Rectangle>>, _BackgroundModifier<_ShapeView<RoundedRectangle, Color>>>, _EnvironmentKeyWritingModifier<Color?>>>, Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _FlexFrameLayout>, _ClipEffect<Rectangle>>, _BackgroundModifier<_ShapeView<RoundedRectangle, Color>>>, _EnvironmentKeyWritingModifier<Color?>>>));
  v22(&v24[*(int *)(v25 + 48)], v23, v7);
  v26 = *(void (**)(char *, uint64_t))(v21 + 8);
  v26(v13, v7);
  v26(v16, v7);
  v26(v23, v7);
  return ((uint64_t (*)(char *, uint64_t))v26)(v20, v7);
}

void closure #1 in closure #1 in closure #1 in RemoteControlOnboardingView.body.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = OUTLINED_FUNCTION_19_62();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_16_2();
  if (one-time initialization token for shared != -1)
    swift_once();
  (*(void (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)static ScreenSharingInteractionController.shared)
                                 + 0x1F8))(0);
  OUTLINED_FUNCTION_2_110();
  OUTLINED_FUNCTION_18_75();
  DismissAction.callAsFunction()();
  OUTLINED_FUNCTION_42_4(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_91();
}

void closure #2 in closure #3 in closure #1 in RemoteControlOnboardingView.body.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  Swift::String v6;
  Swift::String_optional v7;
  Swift::String v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  int64x2_t *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(void);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  void *v41;
  uint64_t v42;
  uint64_t KeyPath;
  uint64_t v44;
  uint64_t *v45;
  char v46;
  char v47;
  int64x2_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  char v61;
  __int128 v62;
  __int128 v63;
  char v64;
  _BYTE v65[192];
  _QWORD v66[26];
  Swift::String v67;

  v56 = a1;
  v55 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _BackgroundModifier<_ShapeView<RoundedRectangle, Color>>);
  MEMORY[0x1E0C80A78](v55);
  v54 = (uint64_t)&v48 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = type metadata accessor for RoundedRectangle();
  MEMORY[0x1E0C80A78](v49);
  v48 = (int64x2_t *)((char *)&v48 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v51 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ShapeView<RoundedRectangle, Color>);
  MEMORY[0x1E0C80A78](v51);
  v50 = (uint64_t)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _FlexFrameLayout>, _ClipEffect<Rectangle>>, _BackgroundModifier<_ShapeView<RoundedRectangle, Color>>>);
  MEMORY[0x1E0C80A78](v53);
  v52 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v67._object = (void *)0xE000000000000000;
  v6._countAndFlagsBits = 20302;
  v6._object = (void *)0xE200000000000000;
  v7.value._countAndFlagsBits = 0x61737265766E6F43;
  v7.value._object = (void *)0xEF74694B6E6F6974;
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  v67._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v6, v7, (NSBundle)v5, v8, v67);

  v9 = String.init(format:_:)();
  v11 = v10;
  swift_bridgeObjectRelease();
  v66[0] = v9;
  v66[1] = v11;
  lazy protocol witness table accessor for type String and conformance String();
  v12 = Text.init<A>(_:)();
  v14 = v13;
  v16 = v15 & 1;
  static Font.callout.getter();
  static Font.Weight.semibold.getter();
  Font.weight(_:)();
  swift_release();
  v17 = Text.font(_:)();
  v19 = v18;
  v21 = v20;
  v23 = v22;
  swift_release();
  outlined consume of Text.Storage(v12, v14, v16);
  swift_bridgeObjectRelease();
  v24 = static Edge.Set.all.getter();
  v57 = v17;
  v58 = v19;
  v59 = v21 & 1;
  v60 = v23;
  v61 = v24;
  v62 = 0u;
  v63 = 0u;
  v64 = 1;
  v25 = static Alignment.center.getter();
  v47 = 1;
  v46 = 1;
  specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v66, 0, 1, 0, 1, 0x7FF0000000000000, 0, 0, 1, 0, v46, 0, v47, v25, v26);
  outlined consume of Text.Storage(v17, v19, v21 & 1);
  swift_bridgeObjectRelease();
  memcpy(v65, v66, sizeof(v65));
  memcpy(v66, v65, 0xC0uLL);
  LOWORD(v66[24]) = 0;
  v27 = v48;
  v28 = &v48->i8[*(int *)(v49 + 20)];
  v29 = *MEMORY[0x1E0CDB0C0];
  v30 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v28, v29, v30);
  *v27 = vdupq_n_s64(0x4042000000000000uLL);
  v31 = objc_msgSend((id)objc_opt_self(), sel_quaternaryLabelColor);
  v32 = MEMORY[0x1C3B7262C](v31);
  v33 = v50;
  v34 = MEMORY[0x1E0CDA088];
  outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v27, v50, (uint64_t (*)(_QWORD))MEMORY[0x1E0CDA088]);
  v35 = v51;
  *(_QWORD *)(v33 + *(int *)(v51 + 52)) = v32;
  *(_WORD *)(v33 + *(int *)(v35 + 56)) = 256;
  outlined destroy of AccountUpdateNotice((uint64_t)v27, (uint64_t (*)(_QWORD))v34);
  v36 = static Alignment.center.getter();
  v38 = v37;
  v39 = v54;
  outlined init with copy of FeatureEligibility?(v33, v54, &demangling cache variable for type metadata for _ShapeView<RoundedRectangle, Color>);
  v40 = (uint64_t *)(v39 + *(int *)(v55 + 36));
  *v40 = v36;
  v40[1] = v38;
  v41 = v52;
  outlined init with copy of FeatureEligibility?(v39, (uint64_t)&v52[*(int *)(v53 + 36)], &demangling cache variable for type metadata for _BackgroundModifier<_ShapeView<RoundedRectangle, Color>>);
  memcpy(v41, v66, 0xC2uLL);
  outlined retain of ModifiedContent<Text, _PaddingLayout>((uint64_t)v66);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v39, &demangling cache variable for type metadata for _BackgroundModifier<_ShapeView<RoundedRectangle, Color>>);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v33, &demangling cache variable for type metadata for _ShapeView<RoundedRectangle, Color>);
  outlined release of ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _FlexFrameLayout>((uint64_t)v65);
  v42 = static Color.primary.getter();
  KeyPath = swift_getKeyPath();
  v44 = v56;
  outlined init with copy of FeatureEligibility?((uint64_t)v41, v56, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _FlexFrameLayout>, _ClipEffect<Rectangle>>, _BackgroundModifier<_ShapeView<RoundedRectangle, Color>>>);
  v45 = (uint64_t *)(v44
                  + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _FlexFrameLayout>, _ClipEffect<Rectangle>>, _BackgroundModifier<_ShapeView<RoundedRectangle, Color>>>, _EnvironmentKeyWritingModifier<Color?>>)
                           + 36));
  *v45 = KeyPath;
  v45[1] = v42;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v41, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _FlexFrameLayout>, _ClipEffect<Rectangle>>, _BackgroundModifier<_ShapeView<RoundedRectangle, Color>>>);
}

uint64_t closure #3 in closure #3 in closure #1 in RemoteControlOnboardingView.body.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = type metadata accessor for DismissAction();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for shared != -1)
    swift_once();
  (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)static ScreenSharingInteractionController.shared)
                                  + 0x1F8))(1);
  type metadata accessor for RemoteControlOnboardingView();
  specialized Environment.wrappedValue.getter();
  DismissAction.callAsFunction()();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

void closure #4 in closure #3 in closure #1 in RemoteControlOnboardingView.body.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  Swift::String v6;
  Swift::String_optional v7;
  Swift::String v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  _OWORD *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(void);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  void *v46;
  uint64_t v47;
  uint64_t KeyPath;
  uint64_t v49;
  uint64_t *v50;
  char v51;
  char v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  char v66;
  __int128 v67;
  __int128 v68;
  char v69;
  _BYTE v70[192];
  _QWORD v71[26];
  Swift::String v72;

  v61 = a1;
  v60 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _BackgroundModifier<_ShapeView<RoundedRectangle, Color>>);
  MEMORY[0x1E0C80A78](v60);
  v59 = (uint64_t)&v53 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = type metadata accessor for RoundedRectangle();
  MEMORY[0x1E0C80A78](v54);
  v53 = (char *)&v53 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ShapeView<RoundedRectangle, Color>);
  MEMORY[0x1E0C80A78](v56);
  v55 = (uint64_t)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _FlexFrameLayout>, _ClipEffect<Rectangle>>, _BackgroundModifier<_ShapeView<RoundedRectangle, Color>>>);
  MEMORY[0x1E0C80A78](v58);
  v57 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v72._object = (void *)0xE000000000000000;
  v6._countAndFlagsBits = 0x45554E49544E4F43;
  v6._object = (void *)0xE800000000000000;
  v7.value._countAndFlagsBits = 0x61737265766E6F43;
  v7.value._object = (void *)0xEF74694B6E6F6974;
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  v72._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v6, v7, (NSBundle)v5, v8, v72);

  v9 = String.init(format:_:)();
  v11 = v10;
  swift_bridgeObjectRelease();
  v71[0] = v9;
  v71[1] = v11;
  lazy protocol witness table accessor for type String and conformance String();
  v12 = Text.init<A>(_:)();
  v14 = v13;
  v16 = v15 & 1;
  static Font.callout.getter();
  static Font.Weight.semibold.getter();
  Font.weight(_:)();
  swift_release();
  v17 = Text.font(_:)();
  v19 = v18;
  v21 = v20;
  v23 = v22;
  swift_release();
  outlined consume of Text.Storage(v12, v14, v16);
  swift_bridgeObjectRelease();
  v24 = static Edge.Set.all.getter();
  v62 = v17;
  v63 = v19;
  v64 = v21 & 1;
  v65 = v23;
  v66 = v24;
  v67 = 0u;
  v68 = 0u;
  v69 = 1;
  v25 = static Alignment.center.getter();
  v52 = 1;
  v51 = 1;
  specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v71, 0, 1, 0, 1, 0x7FF0000000000000, 0, 0, 1, 0, v51, 0, v52, v25, v26);
  outlined consume of Text.Storage(v17, v19, v21 & 1);
  swift_bridgeObjectRelease();
  memcpy(v70, v71, sizeof(v70));
  memcpy(v71, v70, 0xC0uLL);
  LOWORD(v71[24]) = 0;
  v27 = v53;
  v28 = &v53[*(int *)(v54 + 20)];
  v29 = *MEMORY[0x1E0CDB0C0];
  v30 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v28, v29, v30);
  __asm { FMOV            V0.2D, #26.0 }
  *v27 = _Q0;
  v36 = objc_msgSend((id)objc_opt_self(), sel_quaternaryLabelColor);
  v37 = MEMORY[0x1C3B7262C](v36);
  v38 = v55;
  v39 = MEMORY[0x1E0CDA088];
  outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v27, v55, (uint64_t (*)(_QWORD))MEMORY[0x1E0CDA088]);
  v40 = v56;
  *(_QWORD *)(v38 + *(int *)(v56 + 52)) = v37;
  *(_WORD *)(v38 + *(int *)(v40 + 56)) = 256;
  outlined destroy of AccountUpdateNotice((uint64_t)v27, (uint64_t (*)(_QWORD))v39);
  v41 = static Alignment.center.getter();
  v43 = v42;
  v44 = v59;
  outlined init with copy of FeatureEligibility?(v38, v59, &demangling cache variable for type metadata for _ShapeView<RoundedRectangle, Color>);
  v45 = (uint64_t *)(v44 + *(int *)(v60 + 36));
  *v45 = v41;
  v45[1] = v43;
  v46 = v57;
  outlined init with copy of FeatureEligibility?(v44, (uint64_t)&v57[*(int *)(v58 + 36)], &demangling cache variable for type metadata for _BackgroundModifier<_ShapeView<RoundedRectangle, Color>>);
  memcpy(v46, v71, 0xC2uLL);
  outlined retain of ModifiedContent<Text, _PaddingLayout>((uint64_t)v71);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v44, &demangling cache variable for type metadata for _BackgroundModifier<_ShapeView<RoundedRectangle, Color>>);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v38, &demangling cache variable for type metadata for _ShapeView<RoundedRectangle, Color>);
  outlined release of ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _FlexFrameLayout>((uint64_t)v70);
  v47 = static Color.red.getter();
  KeyPath = swift_getKeyPath();
  v49 = v61;
  outlined init with copy of FeatureEligibility?((uint64_t)v46, v61, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _FlexFrameLayout>, _ClipEffect<Rectangle>>, _BackgroundModifier<_ShapeView<RoundedRectangle, Color>>>);
  v50 = (uint64_t *)(v49
                  + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _FlexFrameLayout>, _ClipEffect<Rectangle>>, _BackgroundModifier<_ShapeView<RoundedRectangle, Color>>>, _EnvironmentKeyWritingModifier<Color?>>)
                           + 36));
  *v50 = KeyPath;
  v50[1] = v47;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v46, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _FlexFrameLayout>, _ClipEffect<Rectangle>>, _BackgroundModifier<_ShapeView<RoundedRectangle, Color>>>);
}

uint64_t closure #2 in RemoteControlOnboardingView.body.getter(uint64_t a1)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  Swift::String v9;
  Swift::String v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  if (one-time initialization token for shared != -1)
    swift_once();
  v2 = (*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 888))();
  Participant.contactDetails.getter();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v15)
  {
    v3 = objc_msgSend(v15, sel_identifier);

    v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v6 = v5;

    v7 = *(void **)(a1 + *(int *)(type metadata accessor for Participant(0) + 28));
    if (v7 && (outlined bridged method (ob) of @objc TUHandle.normalizedValue.getter(v7), v8))
    {
      v9._countAndFlagsBits = v4;
      v9._object = v6;
      v10 = String.hashWithSalt(salt:)(v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v2 = v13;
      }
      v11 = *(_QWORD *)(v2 + 16);
      if (v11 >= *(_QWORD *)(v2 + 24) >> 1)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v2 = v14;
      }
      *(_QWORD *)(v2 + 16) = v11 + 1;
      *(Swift::String *)(v2 + 16 * v11 + 32) = v10;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)static Defaults.shared + 896))(v2);
}

uint64_t type metadata accessor for RemoteControlOnboardingView()
{
  uint64_t result;

  result = type metadata singleton initialization cache for RemoteControlOnboardingView;
  if (!type metadata singleton initialization cache for RemoteControlOnboardingView)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BD3A850C()
{
  EnvironmentValues.dismiss.getter();
  OUTLINED_FUNCTION_0();
}

uint64_t sub_1BD3A8528()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in closure #1 in PresentationAutomaticHeightModifier.body(content:)()
{
  return closure #2 in closure #1 in PresentationAutomaticHeightModifier.body(content:)();
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<_ViewModifier_Content<PresentationAutomaticHeightModifier>, _BackgroundModifier<ModifiedContent<Color, _GeometryActionModifier<CGFloat>>>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<_ViewModifier_Content<PresentationAutomaticHeightModifier>, _BackgroundModifier<ModifiedContent<Color, _GeometryActionModifier<CGFloat>>>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<_ViewModifier_Content<PresentationAutomaticHeightModifier>, _BackgroundModifier<ModifiedContent<Color, _GeometryActionModifier<CGFloat>>>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<PresentationAutomaticHeightModifier>, _BackgroundModifier<ModifiedContent<Color, _GeometryActionModifier<CGFloat>>>>);
    lazy protocol witness table accessor for type _ViewModifier_Content<PresentationAutomaticHeightModifier> and conformance _ViewModifier_Content<A>(&lazy protocol witness table cache variable for type _ViewModifier_Content<PresentationAutomaticHeightModifier> and conformance _ViewModifier_Content<A>, &demangling cache variable for type metadata for _ViewModifier_Content<PresentationAutomaticHeightModifier>, MEMORY[0x1E0CDBF10]);
    v3 = v2;
    lazy protocol witness table accessor for type _ViewModifier_Content<PresentationAutomaticHeightModifier> and conformance _ViewModifier_Content<A>(&lazy protocol witness table cache variable for type _BackgroundModifier<ModifiedContent<Color, _GeometryActionModifier<CGFloat>>> and conformance _BackgroundModifier<A>, &demangling cache variable for type metadata for _BackgroundModifier<ModifiedContent<Color, _GeometryActionModifier<CGFloat>>>, MEMORY[0x1E0CDB838]);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v5);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<_ViewModifier_Content<PresentationAutomaticHeightModifier>, _BackgroundModifier<ModifiedContent<Color, _GeometryActionModifier<CGFloat>>>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t outlined assign with take of Participant(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Participant(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t partial apply for closure #2 in RemoteControlOnboardingView.body.getter()
{
  return partial apply for closure #2 in RemoteControlOnboardingView.body.getter(closure #2 in RemoteControlOnboardingView.body.getter);
}

unint64_t lazy protocol witness table accessor for type PresentationAutomaticHeightModifier and conformance PresentationAutomaticHeightModifier()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PresentationAutomaticHeightModifier and conformance PresentationAutomaticHeightModifier;
  if (!lazy protocol witness table cache variable for type PresentationAutomaticHeightModifier and conformance PresentationAutomaticHeightModifier)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for PresentationAutomaticHeightModifier, &type metadata for PresentationAutomaticHeightModifier);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PresentationAutomaticHeightModifier and conformance PresentationAutomaticHeightModifier);
  }
  return result;
}

uint64_t associated type witness table accessor for ViewModifier.Body : View in PresentationAutomaticHeightModifier()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for View.Body : View in RemoteControlOnboardingView()
{
  return swift_getOpaqueTypeConformance2();
}

_QWORD *assignWithCopy for PresentationAutomaticHeightModifier(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *assignWithTake for PresentationAutomaticHeightModifier(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for PresentationAutomaticHeightModifier(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PresentationAutomaticHeightModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for PresentationAutomaticHeightModifier()
{
  return &type metadata for PresentationAutomaticHeightModifier;
}

_QWORD *initializeBufferWithCopyOfBuffer for RemoteControlOnboardingView(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  size_t v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  int *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  __int128 v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v77;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for Participant.State(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        v8 = type metadata accessor for Date();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
        goto LABEL_18;
      case 4u:
        v10 = type metadata accessor for Date();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
        v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        v12 = *(int *)(v11 + 48);
        v13 = (char *)a1 + v12;
        v14 = (char *)a2 + v12;
        *(_OWORD *)v13 = *(_OWORD *)((char *)a2 + v12);
        v15 = *(_QWORD *)((char *)a2 + v12 + 16);
        v16 = *(_QWORD *)((char *)a2 + v12 + 24);
        *((_QWORD *)v13 + 2) = v15;
        *((_QWORD *)v13 + 3) = v16;
        *((_WORD *)v13 + 16) = *((_WORD *)v14 + 16);
        *((_QWORD *)v13 + 5) = *((_QWORD *)v14 + 5);
        v13[48] = v14[48];
        *(_OWORD *)(v13 + 56) = *(_OWORD *)(v14 + 56);
        *(_OWORD *)(v13 + 72) = *(_OWORD *)(v14 + 72);
        v13[88] = v14[88];
        v13[89] = v14[89];
        v17 = *((_QWORD *)v14 + 15);
        swift_bridgeObjectRetain();
        if (v17)
        {
          if (v17 == 1)
          {
            v18 = v13 + 96;
            v19 = v14 + 96;
            v20 = 209;
            goto LABEL_12;
          }
          v22 = *((_QWORD *)v14 + 16);
          *((_QWORD *)v13 + 15) = v17;
          *((_QWORD *)v13 + 16) = v22;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v17 - 8))((uint64_t)(v13 + 96), (uint64_t)(v14 + 96), v17);
        }
        else
        {
          v21 = *((_OWORD *)v14 + 7);
          *((_OWORD *)v13 + 6) = *((_OWORD *)v14 + 6);
          *((_OWORD *)v13 + 7) = v21;
          *((_QWORD *)v13 + 16) = *((_QWORD *)v14 + 16);
        }
        *((_DWORD *)v13 + 34) = *((_DWORD *)v14 + 34);
        v23 = *((_OWORD *)v14 + 10);
        *((_OWORD *)v13 + 9) = *((_OWORD *)v14 + 9);
        *((_OWORD *)v13 + 10) = v23;
        *((_OWORD *)v13 + 11) = *((_OWORD *)v14 + 11);
        v13[192] = v14[192];
        v18 = v13 + 208;
        v19 = v14 + 208;
        *((_QWORD *)v13 + 25) = *((_QWORD *)v14 + 25);
        v20 = 97;
LABEL_12:
        memcpy(v18, v19, v20);
        v24 = *((_QWORD *)v14 + 39);
        if (v24)
        {
          v25 = *((_QWORD *)v14 + 40);
          v26 = *((_QWORD *)v14 + 41);
          *((_QWORD *)v13 + 39) = v24;
          *((_QWORD *)v13 + 40) = v25;
          *((_QWORD *)v13 + 41) = v26;
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v13 + 312) = *(_OWORD *)(v14 + 312);
          *((_QWORD *)v13 + 41) = *((_QWORD *)v14 + 41);
        }
        v27 = *(int *)(v11 + 64);
        v28 = (char *)a1 + v27;
        v29 = (char *)a2 + v27;
        v30 = *((_QWORD *)v29 + 1);
        if (v30)
        {
          *(_QWORD *)v28 = *(_QWORD *)v29;
          *((_QWORD *)v28 + 1) = v30;
          v31 = *((_QWORD *)v29 + 3);
          *((_QWORD *)v28 + 2) = *((_QWORD *)v29 + 2);
          *((_QWORD *)v28 + 3) = v31;
          v28[32] = v29[32];
          *(_OWORD *)(v28 + 40) = *(_OWORD *)(v29 + 40);
          *((_QWORD *)v28 + 7) = *((_QWORD *)v29 + 7);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v32 = *((_OWORD *)v29 + 1);
          *(_OWORD *)v28 = *(_OWORD *)v29;
          *((_OWORD *)v28 + 1) = v32;
          v33 = *((_OWORD *)v29 + 3);
          *((_OWORD *)v28 + 2) = *((_OWORD *)v29 + 2);
          *((_OWORD *)v28 + 3) = v33;
        }
LABEL_18:
        swift_storeEnumTagMultiPayload();
LABEL_19:
        v34 = (int *)type metadata accessor for Participant(0);
        v35 = v34[5];
        v36 = (char *)a1 + v35;
        v37 = (char *)a2 + v35;
        v38 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
        v39 = v34[6];
        v40 = (char *)a1 + v39;
        v41 = (char *)a2 + v39;
        v40[4] = v41[4];
        *(_DWORD *)v40 = *(_DWORD *)v41;
        v42 = v34[7];
        v43 = (char *)a1 + v42;
        v44 = (char *)a2 + v42;
        v45 = *(void **)v44;
        v77 = a3;
        if (*(_QWORD *)v44)
        {
          v46 = *((_QWORD *)v44 + 1);
          *(_QWORD *)v43 = v45;
          *((_QWORD *)v43 + 1) = v46;
          v43[16] = v44[16];
          v47 = *((_QWORD *)v44 + 4);
          *((_QWORD *)v43 + 3) = *((_QWORD *)v44 + 3);
          *((_QWORD *)v43 + 4) = v47;
          v48 = v45;
          swift_bridgeObjectRetain();
        }
        else
        {
          v49 = *((_OWORD *)v44 + 1);
          *(_OWORD *)v43 = *(_OWORD *)v44;
          *((_OWORD *)v43 + 1) = v49;
          *((_QWORD *)v43 + 4) = *((_QWORD *)v44 + 4);
        }
        *(_QWORD *)((char *)a1 + v34[8]) = *(_QWORD *)((char *)a2 + v34[8]);
        v50 = v34[9];
        v51 = (_QWORD *)((char *)a1 + v50);
        v52 = (_QWORD *)((char *)a2 + v50);
        v53 = v52[1];
        *v51 = *v52;
        v51[1] = v53;
        *((_BYTE *)a1 + v34[10]) = *((_BYTE *)a2 + v34[10]);
        *(_QWORD *)((char *)a1 + v34[11]) = *(_QWORD *)((char *)a2 + v34[11]);
        v54 = v34[12];
        v55 = *(void **)((char *)a2 + v54);
        *(_QWORD *)((char *)a1 + v54) = v55;
        *((_BYTE *)a1 + v34[13]) = *((_BYTE *)a2 + v34[13]);
        v56 = v34[14];
        v57 = (char *)a1 + v56;
        v58 = (char *)a2 + v56;
        v59 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v60 = v55;
        if (__swift_getEnumTagSinglePayload((uint64_t)v58, 1, v59))
        {
          v61 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
          memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v57, v58, v59);
          __swift_storeEnumTagSinglePayload((uint64_t)v57, 0, 1, v59);
        }
        v62 = type metadata accessor for Participant.CountdownInfo(0);
        v63 = *(int *)(v62 + 20);
        v64 = &v57[v63];
        v65 = &v58[v63];
        if (__swift_getEnumTagSinglePayload((uint64_t)&v58[v63], 1, v59))
        {
          v66 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
          memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v64, v65, v59);
          __swift_storeEnumTagSinglePayload((uint64_t)v64, 0, 1, v59);
        }
        v57[*(int *)(v62 + 24)] = v58[*(int *)(v62 + 24)];
        *((_BYTE *)a1 + v34[15]) = *((_BYTE *)a2 + v34[15]);
        *(_QWORD *)((char *)a1 + v34[16]) = *(_QWORD *)((char *)a2 + v34[16]);
        v67 = *(int *)(v77 + 20);
        v68 = (_QWORD *)((char *)a1 + v67);
        v69 = (_QWORD *)((char *)a2 + v67);
        swift_retain();
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v70 = type metadata accessor for DismissAction();
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v70 - 8) + 16))(v68, v69, v70);
        }
        else
        {
          *v68 = *v69;
          swift_retain();
        }
        swift_storeEnumTagMultiPayload();
        v71 = *(int *)(v77 + 24);
        v72 = (_QWORD *)((char *)a1 + v71);
        v73 = (_QWORD *)((char *)a2 + v71);
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v74 = type metadata accessor for UserInterfaceSizeClass();
          if (__swift_getEnumTagSinglePayload((uint64_t)v73, 1, v74))
          {
            v75 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
            memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v74 - 8) + 16))(v72, v73, v74);
            __swift_storeEnumTagSinglePayload((uint64_t)v72, 0, 1, v74);
          }
        }
        else
        {
          *v72 = *v73;
          swift_retain();
        }
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
        goto LABEL_19;
    }
  }
  return a1;
}

uint64_t destroy for RemoteControlOnboardingView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  id *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  type metadata accessor for Participant.State(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 5u:
      v4 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
      break;
    case 4u:
      v17 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(a1, v17);
      v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      v19 = a1 + *(int *)(v18 + 48);
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v19 + 120) >= 2uLL)
        __swift_destroy_boxed_opaque_existential_1(v19 + 96);
      if (*(_QWORD *)(v19 + 312))
      {
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (*(_QWORD *)(a1 + *(int *)(v18 + 64) + 8))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      break;
    default:
      break;
  }
  v5 = (int *)type metadata accessor for Participant(0);
  v6 = a1 + v5[5];
  v7 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = (id *)(a1 + v5[7]);
  if (*v8)
  {

    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v9 = a1 + v5[14];
  v10 = type metadata accessor for Date();
  if (!__swift_getEnumTagSinglePayload(v9, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = v9 + *(int *)(type metadata accessor for Participant.CountdownInfo(0) + 20);
  if (!__swift_getEnumTagSinglePayload(v11, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v11, v10);
  swift_release();
  v12 = a1 + *(int *)(a2 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v13 = type metadata accessor for DismissAction();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  }
  else
  {
    swift_release();
  }
  v14 = a1 + *(int *)(a2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v15 = type metadata accessor for UserInterfaceSizeClass();
  result = __swift_getEnumTagSinglePayload(v14, 1, v15);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
  return result;
}

_BYTE *initializeWithCopy for RemoteControlOnboardingView(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  size_t v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  int *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  __int128 v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v75;

  v6 = type metadata accessor for Participant.State(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 5u:
      v7 = type metadata accessor for Date();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      goto LABEL_16;
    case 4u:
      v8 = type metadata accessor for Date();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      v10 = *(int *)(v9 + 48);
      v11 = &a1[v10];
      v12 = &a2[v10];
      *(_OWORD *)v11 = *(_OWORD *)&a2[v10];
      v13 = *(_QWORD *)&a2[v10 + 16];
      v14 = *(_QWORD *)&a2[v10 + 24];
      *((_QWORD *)v11 + 2) = v13;
      *((_QWORD *)v11 + 3) = v14;
      *((_WORD *)v11 + 16) = *((_WORD *)v12 + 16);
      *((_QWORD *)v11 + 5) = *((_QWORD *)v12 + 5);
      v11[48] = v12[48];
      *(_OWORD *)(v11 + 56) = *(_OWORD *)(v12 + 56);
      *(_OWORD *)(v11 + 72) = *(_OWORD *)(v12 + 72);
      v11[88] = v12[88];
      v11[89] = v12[89];
      v15 = *((_QWORD *)v12 + 15);
      swift_bridgeObjectRetain();
      if (v15)
      {
        if (v15 == 1)
        {
          v16 = v11 + 96;
          v17 = v12 + 96;
          v18 = 209;
          goto LABEL_10;
        }
        v20 = *((_QWORD *)v12 + 16);
        *((_QWORD *)v11 + 15) = v15;
        *((_QWORD *)v11 + 16) = v20;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v15 - 8))((uint64_t)(v11 + 96), (uint64_t)(v12 + 96), v15);
      }
      else
      {
        v19 = *((_OWORD *)v12 + 7);
        *((_OWORD *)v11 + 6) = *((_OWORD *)v12 + 6);
        *((_OWORD *)v11 + 7) = v19;
        *((_QWORD *)v11 + 16) = *((_QWORD *)v12 + 16);
      }
      *((_DWORD *)v11 + 34) = *((_DWORD *)v12 + 34);
      v21 = *((_OWORD *)v12 + 10);
      *((_OWORD *)v11 + 9) = *((_OWORD *)v12 + 9);
      *((_OWORD *)v11 + 10) = v21;
      *((_OWORD *)v11 + 11) = *((_OWORD *)v12 + 11);
      v11[192] = v12[192];
      v16 = v11 + 208;
      v17 = v12 + 208;
      *((_QWORD *)v11 + 25) = *((_QWORD *)v12 + 25);
      v18 = 97;
LABEL_10:
      memcpy(v16, v17, v18);
      v22 = *((_QWORD *)v12 + 39);
      if (v22)
      {
        v23 = *((_QWORD *)v12 + 40);
        v24 = *((_QWORD *)v12 + 41);
        *((_QWORD *)v11 + 39) = v22;
        *((_QWORD *)v11 + 40) = v23;
        *((_QWORD *)v11 + 41) = v24;
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v11 + 312) = *(_OWORD *)(v12 + 312);
        *((_QWORD *)v11 + 41) = *((_QWORD *)v12 + 41);
      }
      v25 = *(int *)(v9 + 64);
      v26 = &a1[v25];
      v27 = &a2[v25];
      v28 = *((_QWORD *)v27 + 1);
      if (v28)
      {
        *(_QWORD *)v26 = *(_QWORD *)v27;
        *((_QWORD *)v26 + 1) = v28;
        v29 = *((_QWORD *)v27 + 3);
        *((_QWORD *)v26 + 2) = *((_QWORD *)v27 + 2);
        *((_QWORD *)v26 + 3) = v29;
        v26[32] = v27[32];
        *(_OWORD *)(v26 + 40) = *(_OWORD *)(v27 + 40);
        *((_QWORD *)v26 + 7) = *((_QWORD *)v27 + 7);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v30 = *((_OWORD *)v27 + 1);
        *(_OWORD *)v26 = *(_OWORD *)v27;
        *((_OWORD *)v26 + 1) = v30;
        v31 = *((_OWORD *)v27 + 3);
        *((_OWORD *)v26 + 2) = *((_OWORD *)v27 + 2);
        *((_OWORD *)v26 + 3) = v31;
      }
LABEL_16:
      swift_storeEnumTagMultiPayload();
LABEL_17:
      v32 = (int *)type metadata accessor for Participant(0);
      v33 = v32[5];
      v34 = &a1[v33];
      v35 = &a2[v33];
      v36 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v34, v35, v36);
      v37 = v32[6];
      v38 = &a1[v37];
      v39 = &a2[v37];
      v38[4] = v39[4];
      *(_DWORD *)v38 = *(_DWORD *)v39;
      v40 = v32[7];
      v41 = &a1[v40];
      v42 = &a2[v40];
      v43 = *(void **)v42;
      v75 = a3;
      if (*(_QWORD *)v42)
      {
        v44 = *((_QWORD *)v42 + 1);
        *(_QWORD *)v41 = v43;
        *((_QWORD *)v41 + 1) = v44;
        v41[16] = v42[16];
        v45 = *((_QWORD *)v42 + 4);
        *((_QWORD *)v41 + 3) = *((_QWORD *)v42 + 3);
        *((_QWORD *)v41 + 4) = v45;
        v46 = v43;
        swift_bridgeObjectRetain();
      }
      else
      {
        v47 = *((_OWORD *)v42 + 1);
        *(_OWORD *)v41 = *(_OWORD *)v42;
        *((_OWORD *)v41 + 1) = v47;
        *((_QWORD *)v41 + 4) = *((_QWORD *)v42 + 4);
      }
      *(_QWORD *)&a1[v32[8]] = *(_QWORD *)&a2[v32[8]];
      v48 = v32[9];
      v49 = &a1[v48];
      v50 = &a2[v48];
      v51 = v50[1];
      *v49 = *v50;
      v49[1] = v51;
      a1[v32[10]] = a2[v32[10]];
      *(_QWORD *)&a1[v32[11]] = *(_QWORD *)&a2[v32[11]];
      v52 = v32[12];
      v53 = *(void **)&a2[v52];
      *(_QWORD *)&a1[v52] = v53;
      a1[v32[13]] = a2[v32[13]];
      v54 = v32[14];
      v55 = &a1[v54];
      v56 = &a2[v54];
      v57 = type metadata accessor for Date();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v58 = v53;
      if (__swift_getEnumTagSinglePayload((uint64_t)v56, 1, v57))
      {
        v59 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
        memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v55, v56, v57);
        __swift_storeEnumTagSinglePayload((uint64_t)v55, 0, 1, v57);
      }
      v60 = type metadata accessor for Participant.CountdownInfo(0);
      v61 = *(int *)(v60 + 20);
      v62 = &v55[v61];
      v63 = &v56[v61];
      if (__swift_getEnumTagSinglePayload((uint64_t)&v56[v61], 1, v57))
      {
        v64 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
        memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v62, v63, v57);
        __swift_storeEnumTagSinglePayload((uint64_t)v62, 0, 1, v57);
      }
      v55[*(int *)(v60 + 24)] = v56[*(int *)(v60 + 24)];
      a1[v32[15]] = a2[v32[15]];
      *(_QWORD *)&a1[v32[16]] = *(_QWORD *)&a2[v32[16]];
      v65 = *(int *)(v75 + 20);
      v66 = &a1[v65];
      v67 = &a2[v65];
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v68 = type metadata accessor for DismissAction();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v68 - 8) + 16))(v66, v67, v68);
      }
      else
      {
        *v66 = *v67;
        swift_retain();
      }
      swift_storeEnumTagMultiPayload();
      v69 = *(int *)(v75 + 24);
      v70 = &a1[v69];
      v71 = &a2[v69];
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v72 = type metadata accessor for UserInterfaceSizeClass();
        if (__swift_getEnumTagSinglePayload((uint64_t)v71, 1, v72))
        {
          v73 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
          memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v72 - 8) + 16))(v70, v71, v72);
          __swift_storeEnumTagSinglePayload((uint64_t)v70, 0, 1, v72);
        }
      }
      else
      {
        *v70 = *v71;
        swift_retain();
      }
      swift_storeEnumTagMultiPayload();
      return a1;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      goto LABEL_17;
  }
}

char *assignWithCopy for RemoteControlOnboardingView(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  size_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  char *v28;
  char *v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  int *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  void *v44;
  void *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  void *v58;
  void *v59;
  id v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  int EnumTagSinglePayload;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  int v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v87;

  if (a1 != a2)
  {
    outlined destroy of AccountUpdateNotice((uint64_t)a1, type metadata accessor for Participant.State);
    v6 = type metadata accessor for Participant.State(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        v7 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
        goto LABEL_17;
      case 4u:
        v8 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
        v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        v10 = *(int *)(v9 + 48);
        v11 = &a1[v10];
        v12 = &a2[v10];
        *(_OWORD *)v11 = *(_OWORD *)&a2[v10];
        *((_QWORD *)v11 + 2) = *(_QWORD *)&a2[v10 + 16];
        v13 = *(_QWORD *)&a2[v10 + 24];
        *((_WORD *)v11 + 16) = *((_WORD *)v12 + 16);
        *((_QWORD *)v11 + 3) = v13;
        *((_QWORD *)v11 + 5) = *((_QWORD *)v12 + 5);
        v11[48] = v12[48];
        v14 = *(_OWORD *)(v12 + 72);
        v15 = *(_OWORD *)(v12 + 56);
        v11[88] = v12[88];
        *(_OWORD *)(v11 + 56) = v15;
        *(_OWORD *)(v11 + 72) = v14;
        v11[89] = v12[89];
        v16 = *((_QWORD *)v12 + 15);
        swift_bridgeObjectRetain();
        if (v16)
        {
          if (v16 == 1)
          {
            v17 = v11 + 96;
            v18 = v12 + 96;
            v19 = 209;
            goto LABEL_11;
          }
          *((_QWORD *)v11 + 15) = v16;
          *((_QWORD *)v11 + 16) = *((_QWORD *)v12 + 16);
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v16 - 8))((uint64_t)(v11 + 96), (uint64_t)(v12 + 96), v16);
        }
        else
        {
          v20 = *((_OWORD *)v12 + 6);
          v21 = *((_OWORD *)v12 + 7);
          *((_QWORD *)v11 + 16) = *((_QWORD *)v12 + 16);
          *((_OWORD *)v11 + 6) = v20;
          *((_OWORD *)v11 + 7) = v21;
        }
        *((_DWORD *)v11 + 34) = *((_DWORD *)v12 + 34);
        *((_QWORD *)v11 + 18) = *((_QWORD *)v12 + 18);
        *((_QWORD *)v11 + 19) = *((_QWORD *)v12 + 19);
        v22 = *((_OWORD *)v12 + 10);
        v23 = *((_OWORD *)v12 + 11);
        v11[192] = v12[192];
        *((_OWORD *)v11 + 10) = v22;
        *((_OWORD *)v11 + 11) = v23;
        *((_QWORD *)v11 + 25) = *((_QWORD *)v12 + 25);
        v17 = v11 + 208;
        v18 = v12 + 208;
        v19 = 97;
LABEL_11:
        memcpy(v17, v18, v19);
        v24 = *((_QWORD *)v12 + 39);
        if (v24)
        {
          v25 = *((_QWORD *)v12 + 40);
          *((_QWORD *)v11 + 39) = v24;
          *((_QWORD *)v11 + 40) = v25;
          *((_QWORD *)v11 + 41) = *((_QWORD *)v12 + 41);
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v26 = *(_OWORD *)(v12 + 312);
          *((_QWORD *)v11 + 41) = *((_QWORD *)v12 + 41);
          *(_OWORD *)(v11 + 312) = v26;
        }
        v27 = *(int *)(v9 + 64);
        v28 = &a1[v27];
        v29 = &a2[v27];
        if (*((_QWORD *)v29 + 1))
        {
          *(_QWORD *)v28 = *(_QWORD *)v29;
          *((_QWORD *)v28 + 1) = *((_QWORD *)v29 + 1);
          *((_QWORD *)v28 + 2) = *((_QWORD *)v29 + 2);
          *((_QWORD *)v28 + 3) = *((_QWORD *)v29 + 3);
          v28[32] = v29[32];
          *((_QWORD *)v28 + 5) = *((_QWORD *)v29 + 5);
          *((_QWORD *)v28 + 6) = *((_QWORD *)v29 + 6);
          *((_QWORD *)v28 + 7) = *((_QWORD *)v29 + 7);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v30 = *(_OWORD *)v29;
          v31 = *((_OWORD *)v29 + 1);
          v32 = *((_OWORD *)v29 + 3);
          *((_OWORD *)v28 + 2) = *((_OWORD *)v29 + 2);
          *((_OWORD *)v28 + 3) = v32;
          *(_OWORD *)v28 = v30;
          *((_OWORD *)v28 + 1) = v31;
        }
LABEL_17:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        break;
    }
  }
  v33 = (int *)type metadata accessor for Participant(0);
  v34 = v33[5];
  v35 = &a1[v34];
  v36 = &a2[v34];
  v37 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 24))(v35, v36, v37);
  v38 = v33[6];
  v39 = &a1[v38];
  v40 = &a2[v38];
  *v39 = *v40;
  v39[1] = v40[1];
  v39[2] = v40[2];
  v39[3] = v40[3];
  v39[4] = v40[4];
  v41 = v33[7];
  v42 = &a1[v41];
  v43 = &a2[v41];
  v44 = *(void **)&a1[v41];
  v45 = *(void **)&a2[v41];
  v87 = a3;
  if (v44)
  {
    if (v45)
    {
      *(_QWORD *)v42 = v45;
      v46 = v45;

      v47 = *((_QWORD *)v43 + 1);
      v42[16] = v43[16];
      *((_QWORD *)v42 + 1) = v47;
      *((_QWORD *)v42 + 3) = *((_QWORD *)v43 + 3);
      *((_QWORD *)v42 + 4) = *((_QWORD *)v43 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      outlined destroy of Participant.RemoteIdentifiers((id *)v42);
      v50 = *((_QWORD *)v43 + 4);
      v51 = *((_OWORD *)v43 + 1);
      *(_OWORD *)v42 = *(_OWORD *)v43;
      *((_OWORD *)v42 + 1) = v51;
      *((_QWORD *)v42 + 4) = v50;
    }
  }
  else if (v45)
  {
    *(_QWORD *)v42 = v45;
    v48 = *((_QWORD *)v43 + 1);
    v42[16] = v43[16];
    *((_QWORD *)v42 + 1) = v48;
    *((_QWORD *)v42 + 3) = *((_QWORD *)v43 + 3);
    *((_QWORD *)v42 + 4) = *((_QWORD *)v43 + 4);
    v49 = v45;
    swift_bridgeObjectRetain();
  }
  else
  {
    v52 = *(_OWORD *)v43;
    v53 = *((_OWORD *)v43 + 1);
    *((_QWORD *)v42 + 4) = *((_QWORD *)v43 + 4);
    *(_OWORD *)v42 = v52;
    *((_OWORD *)v42 + 1) = v53;
  }
  *(_QWORD *)&a1[v33[8]] = *(_QWORD *)&a2[v33[8]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v54 = v33[9];
  v55 = &a1[v54];
  v56 = &a2[v54];
  *(_QWORD *)v55 = *(_QWORD *)v56;
  *((_QWORD *)v55 + 1) = *((_QWORD *)v56 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[v33[10]] = a2[v33[10]];
  *(_QWORD *)&a1[v33[11]] = *(_QWORD *)&a2[v33[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v57 = v33[12];
  v58 = *(void **)&a1[v57];
  v59 = *(void **)&a2[v57];
  *(_QWORD *)&a1[v57] = v59;
  v60 = v59;

  a1[v33[13]] = a2[v33[13]];
  v61 = v33[14];
  v62 = &a1[v61];
  v63 = &a2[v61];
  v64 = type metadata accessor for Date();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v62, 1, v64);
  v66 = __swift_getEnumTagSinglePayload((uint64_t)v63, 1, v64);
  if (EnumTagSinglePayload)
  {
    if (!v66)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 16))(v62, v63, v64);
      __swift_storeEnumTagSinglePayload((uint64_t)v62, 0, 1, v64);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  v67 = *(_QWORD *)(v64 - 8);
  if (v66)
  {
    (*(void (**)(char *, uint64_t))(v67 + 8))(v62, v64);
LABEL_30:
    v68 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v67 + 24))(v62, v63, v64);
LABEL_31:
  v69 = type metadata accessor for Participant.CountdownInfo(0);
  v70 = *(int *)(v69 + 20);
  v71 = &v62[v70];
  v72 = &v63[v70];
  v73 = __swift_getEnumTagSinglePayload((uint64_t)&v62[v70], 1, v64);
  v74 = __swift_getEnumTagSinglePayload((uint64_t)v72, 1, v64);
  if (v73)
  {
    if (!v74)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 16))(v71, v72, v64);
      __swift_storeEnumTagSinglePayload((uint64_t)v71, 0, 1, v64);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  v75 = *(_QWORD *)(v64 - 8);
  if (v74)
  {
    (*(void (**)(char *, uint64_t))(v75 + 8))(v71, v64);
LABEL_36:
    v76 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v75 + 24))(v71, v72, v64);
LABEL_37:
  v62[*(int *)(v69 + 24)] = v63[*(int *)(v69 + 24)];
  a1[v33[15]] = a2[v33[15]];
  *(_QWORD *)&a1[v33[16]] = *(_QWORD *)&a2[v33[16]];
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v77 = *(int *)(v87 + 20);
    v78 = &a1[v77];
    v79 = &a2[v77];
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&a1[v77], &demangling cache variable for type metadata for Environment<DismissAction>.Content);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v80 = type metadata accessor for DismissAction();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v80 - 8) + 16))(v78, v79, v80);
    }
    else
    {
      *(_QWORD *)v78 = *(_QWORD *)v79;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v81 = *(int *)(v87 + 24);
    v82 = &a1[v81];
    v83 = &a2[v81];
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&a1[v81], &demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v84 = type metadata accessor for UserInterfaceSizeClass();
      if (__swift_getEnumTagSinglePayload((uint64_t)v83, 1, v84))
      {
        v85 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
        memcpy(v82, v83, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v84 - 8) + 16))(v82, v83, v84);
        __swift_storeEnumTagSinglePayload((uint64_t)v82, 0, 1, v84);
      }
    }
    else
    {
      *(_QWORD *)v82 = *(_QWORD *)v83;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *initializeWithTake for RemoteControlOnboardingView(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  __int128 v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v6 = type metadata accessor for Participant.State(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 5u:
      v14 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a1, a2, v14);
      goto LABEL_5;
    case 4u:
      v7 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      memcpy(&a1[*(int *)(v8 + 48)], &a2[*(int *)(v8 + 48)], 0x150uLL);
      v9 = *(int *)(v8 + 64);
      v10 = &a1[v9];
      v11 = &a2[v9];
      v12 = *((_OWORD *)v11 + 1);
      *(_OWORD *)v10 = *(_OWORD *)v11;
      *((_OWORD *)v10 + 1) = v12;
      v13 = *((_OWORD *)v11 + 3);
      *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
      *((_OWORD *)v10 + 3) = v13;
LABEL_5:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      break;
  }
  v15 = (int *)type metadata accessor for Participant(0);
  v16 = v15[5];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
  v20 = v15[6];
  v21 = &a1[v20];
  v22 = &a2[v20];
  *(_DWORD *)v21 = *(_DWORD *)v22;
  v21[4] = v22[4];
  v23 = v15[7];
  v24 = &a1[v23];
  v25 = &a2[v23];
  v26 = *((_OWORD *)v25 + 1);
  *(_OWORD *)v24 = *(_OWORD *)v25;
  *((_OWORD *)v24 + 1) = v26;
  *((_QWORD *)v24 + 4) = *((_QWORD *)v25 + 4);
  *(_QWORD *)&a1[v15[8]] = *(_QWORD *)&a2[v15[8]];
  *(_OWORD *)&a1[v15[9]] = *(_OWORD *)&a2[v15[9]];
  a1[v15[10]] = a2[v15[10]];
  *(_QWORD *)&a1[v15[11]] = *(_QWORD *)&a2[v15[11]];
  *(_QWORD *)&a1[v15[12]] = *(_QWORD *)&a2[v15[12]];
  a1[v15[13]] = a2[v15[13]];
  v27 = v15[14];
  v28 = &a1[v27];
  v29 = &a2[v27];
  v30 = type metadata accessor for Date();
  if (__swift_getEnumTagSinglePayload((uint64_t)v29, 1, v30))
  {
    v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
    __swift_storeEnumTagSinglePayload((uint64_t)v28, 0, 1, v30);
  }
  v32 = type metadata accessor for Participant.CountdownInfo(0);
  v33 = *(int *)(v32 + 20);
  v34 = &v28[v33];
  v35 = &v29[v33];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v29[v33], 1, v30))
  {
    v36 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v34, v35, v30);
    __swift_storeEnumTagSinglePayload((uint64_t)v34, 0, 1, v30);
  }
  v28[*(int *)(v32 + 24)] = v29[*(int *)(v32 + 24)];
  a1[v15[15]] = a2[v15[15]];
  *(_QWORD *)&a1[v15[16]] = *(_QWORD *)&a2[v15[16]];
  v37 = *(int *)(a3 + 20);
  v38 = &a1[v37];
  v39 = &a2[v37];
  v40 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v41 = type metadata accessor for DismissAction();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v38, v39, v41);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  v42 = *(int *)(a3 + 24);
  v43 = &a1[v42];
  v44 = &a2[v42];
  v45 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v46 = type metadata accessor for UserInterfaceSizeClass();
    if (__swift_getEnumTagSinglePayload((uint64_t)v44, 1, v46))
    {
      v47 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
      memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v43, v44, v46);
      __swift_storeEnumTagSinglePayload((uint64_t)v43, 0, 1, v46);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
  }
  return a1;
}

char *assignWithTake for RemoteControlOnboardingView(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  void *v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  int EnumTagSinglePayload;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v64;

  if (a1 != a2)
  {
    outlined destroy of AccountUpdateNotice((uint64_t)a1, type metadata accessor for Participant.State);
    v6 = type metadata accessor for Participant.State(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        v14 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a1, a2, v14);
        goto LABEL_5;
      case 4u:
        v7 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
        v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        memcpy(&a1[*(int *)(v8 + 48)], &a2[*(int *)(v8 + 48)], 0x150uLL);
        v9 = *(int *)(v8 + 64);
        v10 = &a1[v9];
        v11 = &a2[v9];
        v12 = *((_OWORD *)v11 + 1);
        *(_OWORD *)v10 = *(_OWORD *)v11;
        *((_OWORD *)v10 + 1) = v12;
        v13 = *((_OWORD *)v11 + 3);
        *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
        *((_OWORD *)v10 + 3) = v13;
LABEL_5:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        break;
    }
  }
  v15 = (int *)type metadata accessor for Participant(0);
  v16 = v15[5];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 40))(v17, v18, v19);
  v20 = v15[6];
  v21 = &a1[v20];
  v22 = &a2[v20];
  *v21 = *v22;
  v21[1] = v22[1];
  v21[2] = v22[2];
  v21[3] = v22[3];
  v21[4] = v22[4];
  v23 = v15[7];
  v24 = &a1[v23];
  v25 = &a2[v23];
  v26 = *(void **)&a1[v23];
  v64 = a3;
  if (v26)
  {
    if (*(_QWORD *)v25)
    {
      *(_QWORD *)v24 = *(_QWORD *)v25;

      *((_QWORD *)v24 + 1) = *((_QWORD *)v25 + 1);
      v24[16] = v25[16];
      v27 = *((_QWORD *)v25 + 4);
      *((_QWORD *)v24 + 3) = *((_QWORD *)v25 + 3);
      *((_QWORD *)v24 + 4) = v27;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    outlined destroy of Participant.RemoteIdentifiers((id *)v24);
  }
  v28 = *((_OWORD *)v25 + 1);
  *(_OWORD *)v24 = *(_OWORD *)v25;
  *((_OWORD *)v24 + 1) = v28;
  *((_QWORD *)v24 + 4) = *((_QWORD *)v25 + 4);
LABEL_11:
  *(_QWORD *)&a1[v15[8]] = *(_QWORD *)&a2[v15[8]];
  swift_bridgeObjectRelease();
  v29 = v15[9];
  v30 = &a1[v29];
  v31 = &a2[v29];
  v33 = *(_QWORD *)v31;
  v32 = *((_QWORD *)v31 + 1);
  *(_QWORD *)v30 = v33;
  *((_QWORD *)v30 + 1) = v32;
  swift_bridgeObjectRelease();
  a1[v15[10]] = a2[v15[10]];
  *(_QWORD *)&a1[v15[11]] = *(_QWORD *)&a2[v15[11]];
  swift_bridgeObjectRelease();
  v34 = v15[12];
  v35 = *(void **)&a1[v34];
  *(_QWORD *)&a1[v34] = *(_QWORD *)&a2[v34];

  a1[v15[13]] = a2[v15[13]];
  v36 = v15[14];
  v37 = &a1[v36];
  v38 = &a2[v36];
  v39 = type metadata accessor for Date();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v37, 1, v39);
  v41 = __swift_getEnumTagSinglePayload((uint64_t)v38, 1, v39);
  if (EnumTagSinglePayload)
  {
    if (!v41)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
      __swift_storeEnumTagSinglePayload((uint64_t)v37, 0, 1, v39);
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  v42 = *(_QWORD *)(v39 - 8);
  if (v41)
  {
    (*(void (**)(char *, uint64_t))(v42 + 8))(v37, v39);
LABEL_16:
    v43 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    goto LABEL_17;
  }
  (*(void (**)(char *, char *, uint64_t))(v42 + 40))(v37, v38, v39);
LABEL_17:
  v44 = type metadata accessor for Participant.CountdownInfo(0);
  v45 = *(int *)(v44 + 20);
  v46 = &v37[v45];
  v47 = &v38[v45];
  v48 = __swift_getEnumTagSinglePayload((uint64_t)&v37[v45], 1, v39);
  v49 = __swift_getEnumTagSinglePayload((uint64_t)v47, 1, v39);
  if (v48)
  {
    if (!v49)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v46, v47, v39);
      __swift_storeEnumTagSinglePayload((uint64_t)v46, 0, 1, v39);
      goto LABEL_23;
    }
    goto LABEL_22;
  }
  v50 = *(_QWORD *)(v39 - 8);
  if (v49)
  {
    (*(void (**)(char *, uint64_t))(v50 + 8))(v46, v39);
LABEL_22:
    v51 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    goto LABEL_23;
  }
  (*(void (**)(char *, char *, uint64_t))(v50 + 40))(v46, v47, v39);
LABEL_23:
  v37[*(int *)(v44 + 24)] = v38[*(int *)(v44 + 24)];
  a1[v15[15]] = a2[v15[15]];
  *(_QWORD *)&a1[v15[16]] = *(_QWORD *)&a2[v15[16]];
  swift_release();
  if (a1 != a2)
  {
    v52 = *(int *)(v64 + 20);
    v53 = &a1[v52];
    v54 = &a2[v52];
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&a1[v52], &demangling cache variable for type metadata for Environment<DismissAction>.Content);
    v55 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v56 = type metadata accessor for DismissAction();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 32))(v53, v54, v56);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    }
    v57 = *(int *)(v64 + 24);
    v58 = &a1[v57];
    v59 = &a2[v57];
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&a1[v57], &demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
    v60 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v61 = type metadata accessor for UserInterfaceSizeClass();
      if (__swift_getEnumTagSinglePayload((uint64_t)v59, 1, v61))
      {
        v62 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
        memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v58, v59, v61);
        __swift_storeEnumTagSinglePayload((uint64_t)v58, 0, 1, v61);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoteControlOnboardingView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BD3AADF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = OUTLINED_FUNCTION_11_85();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)v3)
  {
    v7 = v6;
    v8 = v4;
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>);
    if (*(_DWORD *)(*(_QWORD *)(v9 - 8) + 84) == (_DWORD)v3)
    {
      v7 = v9;
      v10 = *(int *)(a3 + 20);
    }
    else
    {
      v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>);
      v10 = *(int *)(a3 + 24);
    }
    v8 = v4 + v10;
  }
  return __swift_getEnumTagSinglePayload(v8, v3, v7);
}

uint64_t storeEnumTagSinglePayload for RemoteControlOnboardingView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BD3AAE8C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v8 = OUTLINED_FUNCTION_11_85();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = v5;
  }
  else
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>);
    if (*(_DWORD *)(*(_QWORD *)(v11 - 8) + 84) == a3)
    {
      v9 = v11;
      v12 = *(int *)(a4 + 20);
    }
    else
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>);
      v12 = *(int *)(a4 + 24);
    }
    v10 = v5 + v12;
  }
  return __swift_storeEnumTagSinglePayload(v10, v4, v4, v9);
}

void type metadata completion function for RemoteControlOnboardingView()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  type metadata accessor for Participant(319);
  if (v0 <= 0x3F)
  {
    type metadata accessor for Environment<DismissAction>.Content();
    if (v1 <= 0x3F)
    {
      type metadata accessor for Environment<UserInterfaceSizeClass?>.Content();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

void type metadata accessor for Environment<DismissAction>.Content()
{
  unint64_t v0;
  uint64_t v1;

  if (!lazy cache variable for type metadata for Environment<DismissAction>.Content)
  {
    type metadata accessor for DismissAction();
    v0 = type metadata accessor for Environment.Content();
    if (!v1)
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Environment<DismissAction>.Content);
  }
}

void sub_1BD3AB010(uint64_t a1)
{
  get_witness_table_qd__7SwiftUI4ViewHD2_AaBPAAE19presentationDetentsyQrShyAA18PresentationDetentVGFQOyAA15ModifiedContentVyAA01_c9Modifier_I0Vy15ConversationKit0f15AutomaticHeightJ0VGAA011_BackgroundJ0VyAIyAA5ColorVAA015_GeometryActionJ0Vy12CoreGraphics7CGFloatVGGGG_Qo_HOTm(a1, &demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<PresentationAutomaticHeightModifier>, _BackgroundModifier<ModifiedContent<Color, _GeometryActionModifier<CGFloat>>>>, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<_ViewModifier_Content<PresentationAutomaticHeightModifier>, _BackgroundModifier<ModifiedContent<Color, _GeometryActionModifier<CGFloat>>>> and conformance <> ModifiedContent<A, B>);
}

uint64_t sub_1BD3AB02C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  v2 = type metadata accessor for ModifiedContent();
  v4[0] = v1;
  v4[1] = lazy protocol witness table accessor for type PresentationAutomaticHeightModifier and conformance PresentationAutomaticHeightModifier();
  return MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v2, v4);
}

void sub_1BD3AB080(uint64_t a1)
{
  get_witness_table_qd__7SwiftUI4ViewHD2_AaBPAAE19presentationDetentsyQrShyAA18PresentationDetentVGFQOyAA15ModifiedContentVyAA01_c9Modifier_I0Vy15ConversationKit0f15AutomaticHeightJ0VGAA011_BackgroundJ0VyAIyAA5ColorVAA015_GeometryActionJ0Vy12CoreGraphics7CGFloatVGGGG_Qo_HOTm(a1, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(HStack<TupleView<(Spacer, Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Circle, Color>>>, _EnvironmentKeyWritingModifier<Color?>>>)>>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ContactAvatarView, _FrameLayout>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>, ModifiedContent<Spacer, _FrameLayout>, HStack<TupleView<(Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _FlexFrameLayout>, _ClipEffect<Rectangle>>, _BackgroundModifier<_ShapeView<RoundedRectangle, C, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(HStack<TupleView<(Spacer, Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Circle, Color>>>, _EnvironmentKeyWritingModifier<Color?>>>)>>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ContactAvatarView, _FrameLayout>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>, ModifiedContent<Spacer, _FrameLayout>, HStack<TupleView<(Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _FlexFrameLayout>, _ClipEffect<Rectangle>>, _BackgroundModifier<_ShapeView<RoundedRectangle, Col);
}

void get_witness_table_qd__7SwiftUI4ViewHD2_AaBPAAE19presentationDetentsyQrShyAA18PresentationDetentVGFQOyAA15ModifiedContentVyAA01_c9Modifier_I0Vy15ConversationKit0f15AutomaticHeightJ0VGAA011_BackgroundJ0VyAIyAA5ColorVAA015_GeometryActionJ0Vy12CoreGraphics7CGFloatVGGGG_Qo_HOTm(uint64_t a1, uint64_t *a2, void (*a3)(void))
{
  OUTLINED_FUNCTION_21_72(a1, a2);
  a3();
  swift_getOpaqueTypeConformance2();
  OUTLINED_FUNCTION_45_0();
}

void *type metadata accessor for ContactAvatarView()
{
  return &unk_1E76310A0;
}

unint64_t lazy protocol witness table accessor for type ContactAvatarView and conformance ContactAvatarView()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ContactAvatarView and conformance ContactAvatarView;
  if (!lazy protocol witness table cache variable for type ContactAvatarView and conformance ContactAvatarView)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ContactAvatarView, &unk_1E76310A0);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ContactAvatarView and conformance ContactAvatarView);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ContactAvatarView and conformance ContactAvatarView;
  if (!lazy protocol witness table cache variable for type ContactAvatarView and conformance ContactAvatarView)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ContactAvatarView, &unk_1E76310A0);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ContactAvatarView and conformance ContactAvatarView);
  }
  return result;
}

void partial apply for closure #1 in closure #3 in closure #1 in RemoteControlOnboardingView.body.getter()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_2_110();
  OUTLINED_FUNCTION_44(v0);
  closure #1 in closure #1 in closure #1 in RemoteControlOnboardingView.body.getter();
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Circle, Color>>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Circle, Color>>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Circle, Color>>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Circle, Color>>>, _EnvironmentKeyWritingModifier<Color?>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Circle, Color>>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type _ViewModifier_Content<PresentationAutomaticHeightModifier> and conformance _ViewModifier_Content<A>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Color?>, MEMORY[0x1E0CDCF80]);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Circle, Color>>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Circle, Color>>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Circle, Color>>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Circle, Color>>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Circle, Color>>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(HStack<TupleView<(Spacer, Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Circle, Color>>>, _EnvironmentKeyWritingModifier<Color?>>>)>>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ContactAvatarView, _FrameLayout>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>, ModifiedContent<Spacer, _FrameLayout>, HStack<TupleView<(Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _FlexFrameLayout>, _ClipEffect<Rectangle>>, _BackgroundModifier<_ShapeView<RoundedRectangle, Color>>>, _Environm(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, (uint64_t (*)(void))lazy protocol witness table accessor for type ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>, MEMORY[0x1E0CD9758]);
    v3 = v2;
    lazy protocol witness table accessor for type _ViewModifier_Content<PresentationAutomaticHeightModifier> and conformance _ViewModifier_Content<A>(&lazy protocol witness table cache variable for type _BackgroundModifier<_ShapeView<Circle, Color>> and conformance _BackgroundModifier<A>, &demangling cache variable for type metadata for _BackgroundModifier<_ShapeView<Circle, Color>>, MEMORY[0x1E0CDB838]);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v5);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Circle, Color>>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>);
    lazy protocol witness table accessor for type _ViewModifier_Content<PresentationAutomaticHeightModifier> and conformance _ViewModifier_Content<A>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Font?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Font?>, MEMORY[0x1E0CDCF80]);
    v3[0] = MEMORY[0x1E0CDF820];
    v3[1] = v2;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v3);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _FlexFrameLayout>, _ClipEffect<Rectangle>>, _BackgroundModifier<_ShapeView<RoundedRectangle, Color>>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _FlexFrameLayout>, _ClipEffect<Rectangle>>, _BackgroundModifier<_ShapeView<RoundedRectangle, Color>>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _FlexFrameLayout>, _ClipEffect<Rectangle>>, _BackgroundModifier<_ShapeView<RoundedRectangle, Color>>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _FlexFrameLayout>, _ClipEffect<Rectangle>>, _BackgroundModifier<_ShapeView<RoundedRectangle, Color>>>, _EnvironmentKeyWritingModifier<Color?>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _FlexFrameLayout>, _ClipEffect<Rectangle>>, _BackgroundModifier<_ShapeView<RoundedRectangle, Color>>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type _ViewModifier_Content<PresentationAutomaticHeightModifier> and conformance _ViewModifier_Content<A>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Color?>, MEMORY[0x1E0CDCF80]);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _FlexFrameLayout>, _ClipEffect<Rectangle>>, _BackgroundModifier<_ShapeView<RoundedRectangle, Color>>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _FlexFrameLayout>, _ClipEffect<Rectangle>>, _BackgroundModifier<_ShapeView<RoundedRectangle, Color>>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _FlexFrameLayout>, _ClipEffect<Rectangle>>, _BackgroundModifier<_ShapeView<RoundedRectangle, Color>>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _FlexFrameLayout>, _ClipEffect<Rectangle>>, _BackgroundModifier<_ShapeView<RoundedRectangle, Color>>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _FlexFrameLayout>, _ClipEffect<Rectangle>>, _BackgroundModifier<_ShapeView<RoundedRectangle, Color>>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _FlexFrameLayout>, _ClipEffect<Rectangle>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type _ViewModifier_Content<PresentationAutomaticHeightModifier> and conformance _ViewModifier_Content<A>(&lazy protocol witness table cache variable for type _BackgroundModifier<_ShapeView<RoundedRectangle, Color>> and conformance _BackgroundModifier<A>, &demangling cache variable for type metadata for _BackgroundModifier<_ShapeView<RoundedRectangle, Color>>, MEMORY[0x1E0CDB838]);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _FlexFrameLayout>, _ClipEffect<Rectangle>>, _BackgroundModifier<_ShapeView<RoundedRectangle, Color>>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _FlexFrameLayout>, _ClipEffect<Rectangle>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _FlexFrameLayout>, _ClipEffect<Rectangle>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _FlexFrameLayout>, _ClipEffect<Rectangle>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _FlexFrameLayout>, _ClipEffect<Rectangle>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(HStack<TupleView<(Spacer, Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Circle, Color>>>, _EnvironmentKeyWritingModifier<Color?>>>)>>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ContactAvatarView, _FrameLayout>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>, ModifiedContent<Spacer, _FrameLayout>, HStack<TupleView<(Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _FlexFrameLayout>, _ClipEffect<Rectangle>>, _BackgroundModifier<_ShapeView<RoundedRectangle, Color>>>, _Environm(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _FlexFrameLayout>, (uint64_t (*)(void))lazy protocol witness table accessor for type ModifiedContent<Text, _PaddingLayout> and conformance <> ModifiedContent<A, B>, MEMORY[0x1E0CDA228]);
    v3 = v2;
    lazy protocol witness table accessor for type _ViewModifier_Content<PresentationAutomaticHeightModifier> and conformance _ViewModifier_Content<A>(&lazy protocol witness table cache variable for type _ClipEffect<Rectangle> and conformance _ClipEffect<A>, &demangling cache variable for type metadata for _ClipEffect<Rectangle>, MEMORY[0x1E0CD89F0]);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v5);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _FlexFrameLayout>, _ClipEffect<Rectangle>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<Text, _PaddingLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<Text, _PaddingLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<Text, _PaddingLayout> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Text, _PaddingLayout>);
    v2[0] = MEMORY[0x1E0CDDD58];
    v2[1] = MEMORY[0x1E0CD9758];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<Text, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

void lazy protocol witness table accessor for type _ViewModifier_Content<PresentationAutomaticHeightModifier> and conformance _ViewModifier_Content<A>(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;

  if (!*a1)
  {
    v5 = OUTLINED_FUNCTION_21_72(0, a2);
    atomic_store(MEMORY[0x1C3B750C8](a3, v5), a1);
  }
  OUTLINED_FUNCTION_0();
}

uint64_t objectdestroy_5Tm_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  id *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = OUTLINED_FUNCTION_2_110();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  type metadata accessor for Participant.State(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 5u:
      v4 = OUTLINED_FUNCTION_33();
      OUTLINED_FUNCTION_75(v4);
      break;
    case 4u:
      v14 = OUTLINED_FUNCTION_33();
      OUTLINED_FUNCTION_75(v14);
      v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      v16 = v3 + *(int *)(v15 + 48);
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v16 + 120) >= 2uLL)
        __swift_destroy_boxed_opaque_existential_1(v16 + 96);
      if (*(_QWORD *)(v16 + 312))
      {
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (*(_QWORD *)(v3 + *(int *)(v15 + 64) + 8))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      break;
    default:
      break;
  }
  v5 = (int *)type metadata accessor for Participant(0);
  v6 = v3 + v5[5];
  v7 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = (id *)(v3 + v5[7]);
  if (*v8)
  {

    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  OUTLINED_FUNCTION_33();
  if (!OUTLINED_FUNCTION_10_4())
    OUTLINED_FUNCTION_11_3();
  type metadata accessor for Participant.CountdownInfo(0);
  if (!OUTLINED_FUNCTION_10_4())
    OUTLINED_FUNCTION_11_3();
  swift_release();
  v9 = v3 + *(int *)(v1 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = OUTLINED_FUNCTION_19_62();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }
  v11 = v3 + *(int *)(v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12 = type metadata accessor for UserInterfaceSizeClass();
    if (!__swift_getEnumTagSinglePayload(v11, 1, v12))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t partial apply for closure #3 in closure #3 in closure #1 in RemoteControlOnboardingView.body.getter()
{
  return partial apply for closure #2 in RemoteControlOnboardingView.body.getter((uint64_t (*)(uint64_t))closure #3 in closure #3 in closure #1 in RemoteControlOnboardingView.body.getter);
}

uint64_t partial apply for closure #2 in RemoteControlOnboardingView.body.getter(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_2_110();
  v2 = OUTLINED_FUNCTION_44(v1);
  return a1(v2);
}

uint64_t outlined release of ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _FlexFrameLayout>(uint64_t a1)
{
  outlined consume of Text.Storage(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_bridgeObjectRelease();
  return a1;
}

void VideoReaction.systemImageName.getter(char a1)
{
  NSString *v1;
  NSString *v2;

  v1 = (NSString *)VideoReaction.rawValue.getter(a1);
  v2 = AVCaptureReactionSystemImageNameForType(v1);

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  OUTLINED_FUNCTION_18();
}

ConversationKit::VideoReaction_optional __swiftcall VideoReaction.init(rawValue:)(__C::AVCaptureReactionType rawValue)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v10;
  uint64_t v12;
  uint64_t v14;
  uint64_t v16;
  uint64_t v18;
  char v20;
  NSString v21;
  ConversationKit::VideoReaction_optional v23;

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (v2 == OUTLINED_FUNCTION_1_32() && v1 == v4)
  {
    OUTLINED_FUNCTION_39_2();
    goto LABEL_46;
  }
  OUTLINED_FUNCTION_0_42();
  OUTLINED_FUNCTION_7_3();
  OUTLINED_FUNCTION_2_1();
  if ((v2 & 1) != 0)
  {
LABEL_46:

    return 0;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (v2 == OUTLINED_FUNCTION_1_32() && v1 == v6)
  {
    OUTLINED_FUNCTION_39_2();
    goto LABEL_48;
  }
  OUTLINED_FUNCTION_0_42();
  OUTLINED_FUNCTION_7_3();
  OUTLINED_FUNCTION_2_1();
  if ((v2 & 1) != 0)
  {
LABEL_48:

    return (ConversationKit::VideoReaction_optional)1;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (v2 == OUTLINED_FUNCTION_1_32() && v1 == v8)
  {
    OUTLINED_FUNCTION_39_2();
    goto LABEL_50;
  }
  OUTLINED_FUNCTION_0_42();
  OUTLINED_FUNCTION_7_3();
  OUTLINED_FUNCTION_2_1();
  if ((v2 & 1) != 0)
  {
LABEL_50:

    return (ConversationKit::VideoReaction_optional)2;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (v2 == OUTLINED_FUNCTION_1_32() && v1 == v10)
  {
    OUTLINED_FUNCTION_39_2();
    goto LABEL_52;
  }
  OUTLINED_FUNCTION_0_42();
  OUTLINED_FUNCTION_7_3();
  OUTLINED_FUNCTION_2_1();
  if ((v2 & 1) != 0)
  {
LABEL_52:

    return (ConversationKit::VideoReaction_optional)3;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (v2 == OUTLINED_FUNCTION_1_32() && v1 == v12)
  {
    OUTLINED_FUNCTION_39_2();
    goto LABEL_54;
  }
  OUTLINED_FUNCTION_0_42();
  OUTLINED_FUNCTION_7_3();
  OUTLINED_FUNCTION_2_1();
  if ((v2 & 1) != 0)
  {
LABEL_54:

    return (ConversationKit::VideoReaction_optional)4;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (v2 == OUTLINED_FUNCTION_1_32() && v1 == v14)
  {
    OUTLINED_FUNCTION_39_2();
    goto LABEL_56;
  }
  OUTLINED_FUNCTION_0_42();
  OUTLINED_FUNCTION_7_3();
  OUTLINED_FUNCTION_2_1();
  if ((v2 & 1) != 0)
  {
LABEL_56:

    return (ConversationKit::VideoReaction_optional)5;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (v2 == OUTLINED_FUNCTION_1_32() && v1 == v16)
  {
    OUTLINED_FUNCTION_39_2();
    goto LABEL_58;
  }
  OUTLINED_FUNCTION_0_42();
  OUTLINED_FUNCTION_7_3();
  OUTLINED_FUNCTION_2_1();
  if ((v2 & 1) != 0)
  {
LABEL_58:

    return (ConversationKit::VideoReaction_optional)6;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  v23.value = ConversationKit_VideoReaction_lasers;
  if (v2 != OUTLINED_FUNCTION_1_32() || v1 != v18)
  {
    if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      v20 = 7;
    else
      v20 = 8;
    v23.value = v20;
  }
  v21 = rawValue._rawValue;

  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_2_1();
  return v23;
}

uint64_t VideoReactionPickerViewModel.isShowingPicker.getter()
{
  unsigned __int8 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t VideoReactionPickerViewModel.isShowingPicker.setter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return static Published.subscript.setter();
}

uint64_t VideoReactionPickerViewModel.anchorPoint.getter()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t VideoReactionPickerViewModel.anchorPoint.setter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return static Published.subscript.setter();
}

uint64_t VideoReactionPickerViewModel.init(onReaction:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _QWORD *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CGPoint?>);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = v2
      + OBJC_IVAR____TtC15ConversationKitP33_5A0B7B44E54382705C993A39EDE5E35828VideoReactionPickerViewModel__isShowingPicker;
  LOBYTE(v19) = 0;
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v13, v12, v9);
  v14 = v2
      + OBJC_IVAR____TtC15ConversationKitP33_5A0B7B44E54382705C993A39EDE5E35828VideoReactionPickerViewModel__anchorPoint;
  v19 = 0;
  v20 = 0;
  v21 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CGPoint?);
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v14, v8, v5);
  v15 = (_OWORD *)(v2
                 + OBJC_IVAR____TtC15ConversationKitP33_5A0B7B44E54382705C993A39EDE5E35828VideoReactionPickerViewModel_anchorFrame);
  *v15 = 0u;
  v15[1] = 0u;
  *(_BYTE *)(v2
           + OBJC_IVAR____TtC15ConversationKitP33_5A0B7B44E54382705C993A39EDE5E35828VideoReactionPickerViewModel_bubbleGrowsRightwards) = 2;
  *(_BYTE *)(v2
           + OBJC_IVAR____TtC15ConversationKitP33_5A0B7B44E54382705C993A39EDE5E35828VideoReactionPickerViewModel_anchorCorner) = 3;
  *(_BYTE *)(v2
           + OBJC_IVAR____TtC15ConversationKitP33_5A0B7B44E54382705C993A39EDE5E35828VideoReactionPickerViewModel_shouldHidePickerAfterReaction) = 1;
  v16 = (_QWORD *)(v2
                 + OBJC_IVAR____TtC15ConversationKitP33_5A0B7B44E54382705C993A39EDE5E35828VideoReactionPickerViewModel_onReaction);
  *v16 = a1;
  v16[1] = a2;
  return v2;
}

uint64_t VideoReactionPickerViewModel.sendReaction(_:)(uint64_t a1)
{
  uint64_t v1;
  void (*v3)(uint64_t);

  if (*(_BYTE *)(v1
                + OBJC_IVAR____TtC15ConversationKitP33_5A0B7B44E54382705C993A39EDE5E35828VideoReactionPickerViewModel_shouldHidePickerAfterReaction) == 1)
    VideoReactionPickerViewModel.isShowingPicker.setter();
  v3 = *(void (**)(uint64_t))(v1
                                      + OBJC_IVAR____TtC15ConversationKitP33_5A0B7B44E54382705C993A39EDE5E35828VideoReactionPickerViewModel_onReaction);
  swift_retain();
  v3(a1);
  return swift_release();
}

uint64_t VideoReactionPickerViewModel.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0
     + OBJC_IVAR____TtC15ConversationKitP33_5A0B7B44E54382705C993A39EDE5E35828VideoReactionPickerViewModel__isShowingPicker;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0
     + OBJC_IVAR____TtC15ConversationKitP33_5A0B7B44E54382705C993A39EDE5E35828VideoReactionPickerViewModel__anchorPoint;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CGPoint?>);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  return v0;
}

uint64_t VideoReactionPickerViewModel.__deallocating_deinit()
{
  VideoReactionPickerViewModel.deinit();
  return swift_deallocClassInstance();
}

uint64_t protocol witness for ObservableObject.objectWillChange.getter in conformance VideoReactionPickerViewModel@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for VideoReactionPickerViewModel(0);
  result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance VideoReaction(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance VideoReaction()
{
  char *v0;

  specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance VideoReaction(uint64_t a1)
{
  char *v1;

  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance VideoReaction(uint64_t a1)
{
  char *v1;

  specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

id VideoReaction.rawValue.getter(char a1)
{
  return **((id **)&unk_1E76315B8 + a1);
}

ConversationKit::VideoReaction_optional protocol witness for RawRepresentable.init(rawValue:) in conformance VideoReaction@<W0>(__C::AVCaptureReactionType *a1@<X0>, ConversationKit::VideoReaction_optional *a2@<X8>)
{
  ConversationKit::VideoReaction_optional result;

  result.value = VideoReaction.init(rawValue:)((__C::AVCaptureReactionType)a1->_rawValue).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance VideoReaction(id *a1@<X8>)
{
  char *v1;

  *a1 = VideoReaction.rawValue.getter(*v1);
  OUTLINED_FUNCTION_0();
}

void VideoReaction.accessibilityLabel.getter(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BD3AC118()
{
  objc_class *v0;
  id v1;
  NSBundle v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  OUTLINED_FUNCTION_23_63();
  OUTLINED_FUNCTION_16_15();
  OUTLINED_FUNCTION_7_14();
  v2.super.isa = v0;
  v7 = OUTLINED_FUNCTION_49_2(v3, v4, v5, v6, v2);

  return v7;
}

double VideoReaction.rotationParameters.getter(char a1)
{
  double v1;

  if (a1 == 2)
  {
    static UnitPoint.topTrailing.getter();
  }
  else
  {
    if (a1 != 1)
    {
      v1 = 0.0;
      static UnitPoint.center.getter();
      return v1;
    }
    static UnitPoint.bottomLeading.getter();
  }
  return -0.785398163;
}

void VideoReactionButtonStyle.makeBody(configuration:)(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = static Alignment.center.getter();
  a1[1] = v2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_ZStackLayout, TupleView<(ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout>, ModifiedContent<ButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<Color?>>)>>);
  closure #1 in VideoReactionButtonStyle.makeBody(configuration:)((uint64_t)a1 + *(int *)(v3 + 44));
  OUTLINED_FUNCTION_18();
}

uint64_t closure #1 in VideoReactionButtonStyle.makeBody(configuration:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t KeyPath;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned __int8 v37;
  uint64_t v38;
  unsigned __int8 v39;
  uint64_t v40;
  uint64_t v41;

  v2 = type metadata accessor for ButtonStyleConfiguration.Label();
  v34 = *(_QWORD *)(v2 - 8);
  v35 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<Color?>>);
  MEMORY[0x1E0C80A78](v33);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v26 - v8;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v26 - v11;
  if ((ButtonStyleConfiguration.isPressed.getter() & 1) != 0)
  {
    v13 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
    v14 = MEMORY[0x1C3B72524](v13);
  }
  else
  {
    v14 = static Color.clear.getter();
  }
  v15 = v14;
  VideoReactionButtonStyle.backgroundSize.getter();
  VideoReactionButtonStyle.backgroundSize.getter();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  v32 = v36;
  v31 = v37;
  v30 = v38;
  v29 = v39;
  v27 = v41;
  v28 = v40;
  ButtonStyleConfiguration.label.getter();
  if ((ButtonStyleConfiguration.isPressed.getter() & 1) != 0)
  {
    v16 = static Color.black.getter();
  }
  else
  {
    v17 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
    v16 = MEMORY[0x1C3B72524](v17);
  }
  v18 = v16;
  KeyPath = swift_getKeyPath();
  v20 = v34;
  v21 = v35;
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v9, v4, v35);
  v22 = (uint64_t *)&v9[*(int *)(v33 + 36)];
  *v22 = KeyPath;
  v22[1] = v18;
  (*(void (**)(char *, uint64_t))(v20 + 8))(v4, v21);
  outlined init with take of Any?((uint64_t)v9, (uint64_t)v12, &demangling cache variable for type metadata for ModifiedContent<ButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<Color?>>);
  outlined init with copy of FeatureEligibility?((uint64_t)v12, (uint64_t)v6, &demangling cache variable for type metadata for ModifiedContent<ButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<Color?>>);
  *(_QWORD *)a1 = v15;
  *(_WORD *)(a1 + 8) = 256;
  *(_QWORD *)(a1 + 16) = v32;
  *(_BYTE *)(a1 + 24) = v31;
  *(_QWORD *)(a1 + 32) = v30;
  *(_BYTE *)(a1 + 40) = v29;
  v23 = v27;
  *(_QWORD *)(a1 + 48) = v28;
  *(_QWORD *)(a1 + 56) = v23;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout>, ModifiedContent<ButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<Color?>>));
  outlined init with copy of FeatureEligibility?((uint64_t)v6, a1 + *(int *)(v24 + 48), &demangling cache variable for type metadata for ModifiedContent<ButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<Color?>>);
  swift_retain();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v12, &demangling cache variable for type metadata for ModifiedContent<ButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<Color?>>);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v6, &demangling cache variable for type metadata for ModifiedContent<ButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<Color?>>);
  return swift_release();
}

double VideoReactionButtonStyle.backgroundSize.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void (*v7)(char *, _QWORD, uint64_t);
  char v8;
  void (*v9)(char *, uint64_t);
  double result;
  char v11;
  char v12;
  uint64_t v13;

  v0 = type metadata accessor for DynamicTypeSize();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v13 - v5;
  specialized Environment.wrappedValue.getter();
  v7 = *(void (**)(char *, _QWORD, uint64_t))(v1 + 104);
  v7(v3, *MEMORY[0x1E0CD9950], v0);
  v8 = static DynamicTypeSize.< infix(_:_:)();
  v9 = *(void (**)(char *, uint64_t))(v1 + 8);
  v9(v3, v0);
  v9(v6, v0);
  if ((v8 & 1) != 0)
    return 44.0;
  specialized Environment.wrappedValue.getter();
  v7(v3, *MEMORY[0x1E0CD98D0], v0);
  v11 = static DynamicTypeSize.< infix(_:_:)();
  v9(v3, v0);
  v9(v6, v0);
  if ((v11 & 1) != 0)
    return 50.6;
  specialized Environment.wrappedValue.getter();
  v7(v3, *MEMORY[0x1E0CD98E8], v0);
  v12 = static DynamicTypeSize.< infix(_:_:)();
  v9(v3, v0);
  v9(v6, v0);
  result = 81.84;
  if ((v12 & 1) != 0)
    return 62.04;
  return result;
}

uint64_t VideoReactionButtonStyle.init()@<X0>(uint64_t *a1@<X8>)
{
  *a1 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  return swift_storeEnumTagMultiPayload();
}

double static XPositionPreferenceKey.defaultValue.getter()
{
  return 0.0;
}

double thunk for @callee_guaranteed () -> (@out CGFloat)(void (*a1)(double *__return_ptr))
{
  double v2;

  a1(&v2);
  return v2;
}

uint64_t VideoReactionButton.reaction.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for VideoReactionButton(0) + 32));
}

void VideoReactionButton.reaction.setter(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(type metadata accessor for VideoReactionButton(0) + 32)) = a1;
  OUTLINED_FUNCTION_0();
}

uint64_t (*VideoReactionButton.reaction.modify())(_QWORD)
{
  type metadata accessor for VideoReactionButton(0);
  return TPNumberPadCharacter.rawValue.getter;
}

double VideoReactionButton.showDelay.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for VideoReactionButton(0) + 36));
}

uint64_t VideoReactionButton.showDelay.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  result = OUTLINED_FUNCTION_46_29();
  *(_QWORD *)(v0 + *(int *)(result + 36)) = v1;
  return result;
}

uint64_t (*VideoReactionButton.showDelay.modify())(_QWORD)
{
  type metadata accessor for VideoReactionButton(0);
  return TPNumberPadCharacter.rawValue.getter;
}

double VideoReactionButton.moveDelay.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for VideoReactionButton(0) + 40));
}

uint64_t VideoReactionButton.moveDelay.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  result = OUTLINED_FUNCTION_46_29();
  *(_QWORD *)(v0 + *(int *)(result + 40)) = v1;
  return result;
}

uint64_t (*VideoReactionButton.moveDelay.modify())(_QWORD)
{
  type metadata accessor for VideoReactionButton(0);
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t VideoReactionButton.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  void (*v59)(uint64_t@<X8>);
  void (*v60)(uint64_t@<X8>);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  void (**v65)(uint64_t@<X8>);
  char *v66;
  uint64_t v67;
  _QWORD *v68;
  unint64_t v69;
  double v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  int v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  unint64_t *v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  char *v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t result;
  _QWORD v100[2];
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;

  v2 = v1;
  v125 = a1;
  v118 = type metadata accessor for VideoReactionButtonStyle(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_79();
  v6 = (uint64_t *)(v4 - v5);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v100 - v8;
  v107 = OUTLINED_FUNCTION_48_37();
  v10 = *(_QWORD *)(v107 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v107);
  v126 = (uint64_t)v100 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v100 - v13;
  v101 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Image.Scale>>>);
  v104 = *(_QWORD *)(v101 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_41();
  v17 = v16;
  v105 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.buttonStyle<A>(_:)>>.0);
  v108 = *(_QWORD *)(v105 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_33_18(v19);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_33_18(v21);
  v109 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v22);
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_33_18(v23);
  v110 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v24);
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_33_18(v25);
  v111 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect>, _RotationEffect>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v26);
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_33_18(v27);
  v113 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect>, _RotationEffect>, _AnimationModifier<Bool>>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v28);
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_33_18(v29);
  v112 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect>, _RotationEffect>, _AnimationModifier<Bool>>, _TransformEffect>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v30);
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_33_18(v31);
  v114 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect>, _RotationEffect>, _AnimationModifier<Bool>>, _TransformEffect>, _OffsetEffect>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v32);
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_33_18(v33);
  v122 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect>, _RotationEffect>, _AnimationModifier<Bool>>, _TransformEffect>, _OffsetEffect>, _AnimationModifier<Bool>>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v34);
  OUTLINED_FUNCTION_41();
  v124 = v35;
  v123 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.onChange<A>(of:initial:_:)>>.0);
  v121 = *(_QWORD *)(v123 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v36);
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_33_18(v37);
  outlined init with copy of ConversationControlsAppLaunchButtonType(v1, (uint64_t)v14, type metadata accessor for VideoReactionButton);
  v38 = *(unsigned __int8 *)(v10 + 80);
  v39 = (v38 + 16) & ~v38;
  v127 = v38 | 7;
  v128 = v39 + v11;
  v40 = swift_allocObject();
  outlined init with take of StagedCollaboration((uint64_t)v14, v40 + v39, type metadata accessor for VideoReactionButton);
  v129 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Image.Scale>>);
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Image.Scale>> and conformance <> ModifiedContent<A, B>();
  v41 = v17;
  Button.init(action:label:)();
  *v6 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  OUTLINED_FUNCTION_56_31();
  v42 = (uint64_t)v9;
  outlined init with take of StagedCollaboration((uint64_t)v6, (uint64_t)v9, type metadata accessor for VideoReactionButtonStyle);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Button<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Image.Scale>>> and conformance Button<A>, &demangling cache variable for type metadata for Button<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Image.Scale>>>);
  v44 = v43;
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type VideoReactionButtonStyle and conformance VideoReactionButtonStyle, (void (*)(uint64_t))type metadata accessor for VideoReactionButtonStyle);
  v46 = v45;
  v47 = v100[1];
  v48 = v101;
  v49 = v118;
  View.buttonStyle<A>(_:)();
  outlined destroy of AccountUpdateNotice(v42, type metadata accessor for VideoReactionButtonStyle);
  OUTLINED_FUNCTION_101(v41, *(uint64_t (**)(uint64_t, uint64_t))(v104 + 8));
  v50 = v107;
  v104 = *(int *)(v107 + 32);
  VideoReaction.accessibilityLabel.getter(*(_BYTE *)(v2 + v104));
  v134 = v51;
  v135 = v52;
  v130 = v48;
  v131 = v49;
  v132 = v44;
  v133 = v46;
  v53 = v126;
  OUTLINED_FUNCTION_7_18();
  lazy protocol witness table accessor for type String and conformance String();
  v54 = v103;
  v55 = v105;
  View.accessibilityLabel<A>(_:)();
  swift_bridgeObjectRelease();
  v56 = v55;
  v57 = (_QWORD *)v2;
  (*(void (**)(uint64_t, uint64_t))(v108 + 8))(v47, v56);
  v58 = static Alignment.center.getter();
  v60 = v59;
  outlined init with copy of ConversationControlsAppLaunchButtonType(v2, v53, type metadata accessor for VideoReactionButton);
  v61 = v102;
  v62 = swift_allocObject();
  v118 = v39;
  outlined init with take of StagedCollaboration(v53, v62 + v39, type metadata accessor for VideoReactionButton);
  v63 = v106;
  v64 = &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>;
  outlined init with copy of FeatureEligibility?(v54, v106, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>);
  v65 = (void (**)(uint64_t@<X8>))(v63 + *(int *)(v109 + 36));
  *v65 = closure #1 in closure #3 in VideoReactionButton.body.getter;
  v65[1] = 0;
  v65[2] = (void (*)(uint64_t@<X8>))partial apply for closure #2 in closure #3 in VideoReactionButton.body.getter;
  v65[3] = (void (*)(uint64_t@<X8>))v62;
  v65[4] = (void (*)(uint64_t@<X8>))v58;
  v65[5] = v60;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v54, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>);
  v66 = (char *)v57 + *(int *)(v50 + 28);
  v67 = *((_QWORD *)v66 + 1);
  LOBYTE(v130) = *v66;
  v131 = v67;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
  v68 = &v130;
  State.wrappedValue.getter();
  v69 = 0;
  if ((_BYTE)v134)
    v70 = 1.0;
  else
    v70 = 0.0;
  static UnitPoint.center.getter();
  v72 = v71;
  v74 = v73;
  OUTLINED_FUNCTION_61_10(v63, v61);
  v75 = v61 + *(int *)(v110 + 36);
  *(double *)v75 = v70;
  *(double *)(v75 + 8) = v70;
  *(_QWORD *)(v75 + 16) = v72;
  *(_QWORD *)(v75 + 24) = v74;
  OUTLINED_FUNCTION_25_0(v63);
  v76 = *((_QWORD *)v66 + 1);
  LOBYTE(v130) = *v66;
  v131 = v76;
  State.wrappedValue.getter();
  if ((v134 & 1) != 0)
  {
    OUTLINED_FUNCTION_26_54();
    v77 = v104;
  }
  else
  {
    v77 = v104;
    v78 = *((unsigned __int8 *)v57 + v104);
    if (v78 == 2)
    {
      static UnitPoint.topTrailing.getter();
      v69 = 0xBFE921FB54442D18;
      OUTLINED_FUNCTION_26_54();
    }
    else
    {
      v64 = v124;
      v54 = v119;
      v68 = (_QWORD *)v111;
      if (v78 == 1)
      {
        static UnitPoint.bottomLeading.getter();
        v69 = 0xBFE921FB54442D18;
      }
      else
      {
        static UnitPoint.center.getter();
      }
    }
  }
  v79 = *((unsigned __int8 *)v57 + v77);
  if (v79 == 2)
  {
    static UnitPoint.topTrailing.getter();
  }
  else if (v79 == 1)
  {
    static UnitPoint.bottomLeading.getter();
  }
  else
  {
    static UnitPoint.center.getter();
  }
  v82 = v80;
  v83 = v81;
  v84 = v115;
  OUTLINED_FUNCTION_61_10(v61, v115);
  v85 = (unint64_t *)(v84 + *((int *)v68 + 9));
  *v85 = v69;
  v85[1] = v82;
  v85[2] = v83;
  OUTLINED_FUNCTION_25_0(v61);
  VideoReactionButton.transformAnimation.getter();
  OUTLINED_FUNCTION_12_89();
  v86 = v134;
  v87 = v116;
  outlined init with copy of FeatureEligibility?(v84, v116, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect>, _RotationEffect>);
  v88 = v87 + *(int *)(v113 + 36);
  *(_QWORD *)v88 = &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect>;
  *(_BYTE *)(v88 + 8) = v86;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v84, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect>, _RotationEffect>);
  v89 = v117;
  OUTLINED_FUNCTION_61_10(v87, v117);
  v90 = (_QWORD *)(v89 + *(int *)(v112 + 36));
  *v90 = 0x3FF0000000000000;
  v90[1] = 0;
  v90[2] = 0;
  v90[3] = 0x3FF0000000000000;
  v90[4] = 0;
  v90[5] = 0;
  OUTLINED_FUNCTION_25_0(v87);
  VideoReactionButton.offset.getter();
  v92 = v91;
  OUTLINED_FUNCTION_61_10(v89, v54);
  v93 = (_QWORD *)(v54 + *(int *)(v114 + 36));
  *v93 = v92;
  v93[1] = 0;
  OUTLINED_FUNCTION_25_0(v89);
  VideoReactionButton.offsetAnimation.getter();
  OUTLINED_FUNCTION_12_89();
  LOBYTE(v89) = v134;
  outlined init with copy of FeatureEligibility?(v54, (uint64_t)v64, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect>, _RotationEffect>, _AnimationModifier<Bool>>, _TransformEffect>, _OffsetEffect>);
  v94 = (char *)v64 + *(int *)(v122 + 36);
  *(_QWORD *)v94 = &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect>, _RotationEffect>, _AnimationModifier<Bool>>, _TransformEffect>;
  v94[8] = v89;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v54, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect>, _RotationEffect>, _AnimationModifier<Bool>>, _TransformEffect>, _OffsetEffect>);
  if (*v57)
  {
    swift_retain();
    v95 = VideoReactionPickerViewModel.isShowingPicker.getter();
    swift_release();
    LOBYTE(v130) = v95 & 1;
    v96 = v126;
    outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v57, v126, type metadata accessor for VideoReactionButton);
    v97 = swift_allocObject();
    outlined init with take of StagedCollaboration(v96, v97 + v118, type metadata accessor for VideoReactionButton);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect>, _RotationEffect>, _AnimationModifier<Bool>>, _TransformEffect>, _OffsetEffect>, _AnimationModifier<Bool>> and conformance <> ModifiedContent<A, B>();
    v98 = v120;
    View.onChange<A>(of:initial:_:)();
    swift_release();
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v64, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect>, _RotationEffect>, _AnimationModifier<Bool>>, _TransformEffect>, _OffsetEffect>, _AnimationModifier<Bool>>);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v121 + 32))(v125, v98, v123);
  }
  else
  {
    type metadata accessor for VideoReactionPickerViewModel(0);
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type VideoReactionPickerViewModel and conformance VideoReactionPickerViewModel, (void (*)(uint64_t))type metadata accessor for VideoReactionPickerViewModel);
    result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t closure #1 in VideoReactionButton.body.getter(_QWORD *a1)
{
  uint64_t v1;
  uint64_t result;

  if (*a1)
  {
    v1 = *((unsigned __int8 *)a1 + *(int *)(type metadata accessor for VideoReactionButton(0) + 32));
    swift_retain();
    VideoReactionPickerViewModel.sendReaction(_:)(v1);
    return swift_release();
  }
  else
  {
    type metadata accessor for VideoReactionPickerViewModel(0);
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type VideoReactionPickerViewModel and conformance VideoReactionPickerViewModel, (void (*)(uint64_t))type metadata accessor for VideoReactionPickerViewModel);
    result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

void closure #2 in VideoReactionButton.body.getter(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  NSString *v19;
  NSString *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t KeyPath;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  unsigned int *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  _QWORD v35[2];
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;

  v35[1] = a1;
  v45 = a2;
  v44 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Image.Scale>);
  MEMORY[0x1E0C80A78](v44);
  v43 = (_QWORD *)((char *)v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v41 = type metadata accessor for DynamicTypeSize();
  v38 = *(_QWORD *)(v41 - 8);
  MEMORY[0x1E0C80A78](v41);
  v37 = (char *)v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v35 - v6;
  v42 = type metadata accessor for Image.Scale();
  v40 = *(_QWORD *)(v42 - 8);
  MEMORY[0x1E0C80A78](v42);
  v39 = (char *)v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Font.Design?);
  MEMORY[0x1E0C80A78](v9);
  v11 = (uint64_t)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Font.TextStyle();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Image.Scale>>);
  MEMORY[0x1E0C80A78](v36);
  v17 = (_QWORD *)((char *)v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = type metadata accessor for VideoReactionButton(0);
  v19 = (NSString *)VideoReaction.rawValue.getter(*(_BYTE *)(a1 + *(int *)(v18 + 32)));
  v20 = AVCaptureReactionSystemImageNameForType(v19);

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  v21 = Image.init(systemName:)();
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E0CDD7B0], v12);
  v22 = type metadata accessor for Font.Design();
  __swift_storeEnumTagSinglePayload(v11, 1, 1, v22);
  static Font.Weight.semibold.getter();
  v23 = static Font.system(_:design:weight:)();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v11, &demangling cache variable for type metadata for Font.Design?);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  KeyPath = swift_getKeyPath();
  specialized Environment.wrappedValue.getter();
  v26 = v37;
  v25 = v38;
  v27 = v41;
  (*(void (**)(char *, _QWORD, uint64_t))(v38 + 104))(v37, *MEMORY[0x1E0CD98D8], v41);
  LOBYTE(v11) = static DynamicTypeSize.< infix(_:_:)();
  v28 = *(void (**)(char *, uint64_t))(v25 + 8);
  v28(v26, v27);
  v28(v7, v27);
  v29 = (unsigned int *)MEMORY[0x1E0CDF7D8];
  v31 = v39;
  v30 = v40;
  if ((v11 & 1) == 0)
    v29 = (unsigned int *)MEMORY[0x1E0CDF7D0];
  v32 = v42;
  (*(void (**)(char *, _QWORD, uint64_t))(v40 + 104))(v39, *v29, v42);
  v33 = swift_getKeyPath();
  v34 = v43;
  (*(void (**)(char *, char *, uint64_t))(v30 + 16))((char *)v43 + *(int *)(v44 + 28), v31, v32);
  *v34 = v33;
  outlined init with copy of FeatureEligibility?((uint64_t)v34, (uint64_t)v17 + *(int *)(v36 + 36), &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Image.Scale>);
  *v17 = v21;
  v17[1] = KeyPath;
  v17[2] = v23;
  swift_retain();
  swift_retain();
  swift_retain();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v34, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Image.Scale>);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v32);
  swift_release();
  swift_release();
  swift_release();
  outlined init with take of Any?((uint64_t)v17, v45, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Image.Scale>>);
}

void closure #1 in closure #3 in VideoReactionButton.body.getter(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  CGFloat MidX;
  _QWORD v16[2];
  CGRect v17;

  v2 = type metadata accessor for NamedCoordinateSpace();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = static Color.clear.getter();
  v16[0] = 0xD000000000000019;
  v16[1] = 0x80000001BD65BD80;
  static CoordinateSpaceProtocol<>.named<A>(_:)();
  GeometryProxy.frame<A>(in:)();
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v14 = v13;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v17.origin.x = v8;
  v17.origin.y = v10;
  v17.size.width = v12;
  v17.size.height = v14;
  MidX = CGRectGetMidX(v17);
  *(_QWORD *)a1 = v6;
  *(CGFloat *)(a1 + 8) = MidX;
}

uint64_t closure #2 in closure #3 in VideoReactionButton.body.getter()
{
  uint64_t result;
  char v1;

  type metadata accessor for VideoReactionButton(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<CGFloat?>);
  result = State.wrappedValue.getter();
  if (v1 == 1)
    return State.wrappedValue.setter();
  return result;
}

uint64_t VideoReactionButton.transformAnimation.getter()
{
  uint64_t v0;
  char v2;

  type metadata accessor for VideoReactionButton(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
  State.wrappedValue.getter();
  v0 = 0;
  if (v2 == 1)
  {
    static Animation.interpolatingSpring(mass:stiffness:damping:initialVelocity:)();
    v0 = Animation.delay(_:)();
    swift_release();
  }
  return v0;
}

uint64_t VideoReactionButton.offset.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char v13;
  uint64_t v14;
  uint64_t result;
  char *v16;
  uint64_t v17;
  char v18;
  uint64_t (*v19)(uint64_t);
  char v20;
  char v21;
  char v22;
  void *v23;
  unint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t aBlock;
  uint64_t v32;
  uint64_t (*v33)(uint64_t);
  void *v34;
  uint64_t (*v35)();
  uint64_t v36;
  uint64_t v37;
  char v38;

  v1 = type metadata accessor for DispatchWorkItemFlags();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS();
  v29 = *(_QWORD *)(v5 - 8);
  v30 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for VideoReactionButton(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)v0 + *(int *)(v11 + 28);
  v13 = *v12;
  v14 = *((_QWORD *)v12 + 1);
  LOBYTE(aBlock) = v13;
  v32 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
  result = State.wrappedValue.getter();
  if ((v37 & 1) == 0)
  {
    v16 = (char *)v0 + *(int *)(v8 + 24);
    v17 = *(_QWORD *)v16;
    v18 = v16[8];
    v19 = (uint64_t (*)(uint64_t))*((_QWORD *)v16 + 2);
    aBlock = v17;
    LOBYTE(v32) = v18;
    v33 = v19;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<CGFloat?>);
    result = State.wrappedValue.getter();
    if ((v38 & 1) == 0)
    {
      v28 = v2;
      if (*v0)
      {
        swift_retain();
        VideoReactionPickerViewModel.anchorPoint.getter();
        v21 = v20;
        result = swift_release();
        if ((v21 & 1) == 0)
        {
          swift_retain();
          v22 = VideoReactionPickerViewModel.isShowingPicker.getter();
          result = swift_release();
          if ((v22 & 1) != 0)
          {
            _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
            v23 = (void *)static OS_dispatch_queue.main.getter();
            outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v0, (uint64_t)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for VideoReactionButton);
            v24 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
            v25 = swift_allocObject();
            outlined init with take of StagedCollaboration((uint64_t)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v25 + v24, type metadata accessor for VideoReactionButton);
            v35 = partial apply for closure #1 in VideoReactionButton.offset.getter;
            v36 = v25;
            aBlock = MEMORY[0x1E0C809B0];
            v32 = 1107296256;
            v33 = thunk for @escaping @callee_guaranteed () -> ();
            v34 = &block_descriptor_60_0;
            v26 = _Block_copy(&aBlock);
            swift_release();
            static DispatchQoS.unspecified.getter();
            aBlock = MEMORY[0x1E0DEE9D8];
            lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))MEMORY[0x1E0DEF4F8]);
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
            lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
            dispatch thunk of SetAlgebra.init<A>(_:)();
            MEMORY[0x1C3B7361C](0, v7, v4, v26);
            _Block_release(v26);

            (*(void (**)(char *, uint64_t))(v28 + 8))(v4, v1);
            return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v7, v30);
          }
        }
      }
      else
      {
        type metadata accessor for VideoReactionPickerViewModel(0);
        lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type VideoReactionPickerViewModel and conformance VideoReactionPickerViewModel, (void (*)(uint64_t))type metadata accessor for VideoReactionPickerViewModel);
        result = EnvironmentObject.error()();
        __break(1u);
      }
    }
  }
  return result;
}

uint64_t VideoReactionButton.offsetAnimation.getter()
{
  uint64_t v0;
  char v2;

  type metadata accessor for VideoReactionButton(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
  State.wrappedValue.getter();
  v0 = 0;
  if (v2 == 1)
  {
    static Animation.interpolatingSpring(mass:stiffness:damping:initialVelocity:)();
    v0 = Animation.delay(_:)();
    swift_release();
  }
  return v0;
}

void closure #4 in VideoReactionButton.body.getter(uint64_t a1, _BYTE *a2)
{
  if ((*a2 & 1) == 0)
  {
    type metadata accessor for VideoReactionButton(0);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
    State.wrappedValue.setter();
  }
}

uint64_t closure #1 in VideoReactionButton.offset.getter()
{
  type metadata accessor for VideoReactionButton(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
  return State.wrappedValue.setter();
}

uint64_t VideoReactionButton.init(reaction:showDelay:moveDelay:)@<X0>(char a1@<W0>, uint64_t *a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  uint64_t v8;
  int *v9;
  uint64_t *v10;
  char *v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  ObjC metadata update function for VideoReactionPickerViewModel();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type VideoReactionPickerViewModel and conformance VideoReactionPickerViewModel, (void (*)(uint64_t))type metadata accessor for VideoReactionPickerViewModel);
  *a2 = EnvironmentObject.init()();
  a2[1] = v8;
  v9 = (int *)OUTLINED_FUNCTION_48_37();
  v10 = (uint64_t *)((char *)a2 + v9[5]);
  *v10 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  OUTLINED_FUNCTION_56_31();
  v11 = (char *)a2 + v9[6];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CGFloat?);
  OUTLINED_FUNCTION_40_43();
  *(_QWORD *)v11 = v14;
  v11[8] = v15;
  *((_QWORD *)v11 + 2) = v16;
  v12 = (char *)a2 + v9[7];
  result = OUTLINED_FUNCTION_40_43();
  *v12 = v14;
  *((_QWORD *)v12 + 1) = v15;
  *((_BYTE *)a2 + v9[8]) = a1;
  *(double *)((char *)a2 + v9[9]) = a3;
  *(double *)((char *)a2 + v9[10]) = a4;
  return result;
}

double VideoReactionButtonRow.moveDelay.getter(double a1, double a2)
{
  return a2;
}

uint64_t VideoReactionButtonRow.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  uint64_t v8;

  *(_QWORD *)a2 = static VerticalAlignment.center.getter();
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_HStackLayout, ForEach<Range<Int>, Int, TupleView<(VideoReactionButton, Spacer?)>>>);
  swift_getKeyPath();
  v8 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v8 + 16) = a1;
  *(double *)(v8 + 24) = a3;
  *(double *)(v8 + 32) = a4;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Range<Int>);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(VideoReactionButton, Spacer?)>);
  lazy protocol witness table accessor for type Range<Int> and conformance <> Range<A>();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type TupleView<(VideoReactionButton, Spacer?)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(VideoReactionButton, Spacer?)>);
  return ForEach<>.init(_:id:content:)();
}

void closure #1 in closure #1 in VideoReactionButtonRow.body.getter(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  int *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  double v19;
  uint64_t v20;
  uint64_t *v21;
  char *v22;
  BOOL v23;
  char v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v10 = (int *)type metadata accessor for VideoReactionButton(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (uint64_t *)((char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v32 - v14;
  v16 = *a1;
  if (*a1 < 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if ((unint64_t)v16 >= *(_QWORD *)(a2 + 16))
  {
LABEL_8:
    __break(1u);
    return;
  }
  v17 = a2 + v16;
  v18 = *(_BYTE *)(a2 + v16 + 32);
  v19 = (double)v16 * 0.1 + a4;
  type metadata accessor for VideoReactionPickerViewModel(0);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type VideoReactionPickerViewModel and conformance VideoReactionPickerViewModel, (void (*)(uint64_t))type metadata accessor for VideoReactionPickerViewModel);
  *v12 = EnvironmentObject.init()();
  v12[1] = v20;
  v21 = (uint64_t *)((char *)v12 + v10[5]);
  *v21 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  swift_storeEnumTagMultiPayload();
  v22 = (char *)v12 + v10[6];
  v33 = 0;
  v23 = 1;
  v34 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CGFloat?);
  State.init(wrappedValue:)();
  v24 = v36;
  v25 = v37;
  *(_QWORD *)v22 = v35;
  v22[8] = v24;
  *((_QWORD *)v22 + 2) = v25;
  v26 = (char *)v12 + v10[7];
  LOBYTE(v33) = 0;
  State.init(wrappedValue:)();
  v27 = v36;
  *v26 = v35;
  *((_QWORD *)v26 + 1) = v27;
  *((_BYTE *)v12 + v10[8]) = v18;
  *(double *)((char *)v12 + v10[9]) = v19;
  *(double *)((char *)v12 + v10[10]) = a5;
  outlined init with take of StagedCollaboration((uint64_t)v12, (uint64_t)v15, type metadata accessor for VideoReactionButton);
  v28 = *(unsigned __int8 *)(v17 + 32);
  v29 = specialized BidirectionalCollection.last.getter(a2);
  if (v29 == 8)
  {
    v30 = 0;
  }
  else
  {
    v30 = specialized == infix<A>(_:_:)(v28, v29);
    v23 = (v30 & 1) == 0;
  }
  outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v15, (uint64_t)v12, type metadata accessor for VideoReactionButton);
  outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v12, a3, type metadata accessor for VideoReactionButton);
  v31 = a3
      + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (VideoReactionButton, Spacer?))
               + 48);
  *(_QWORD *)v31 = 0;
  *(_BYTE *)(v31 + 8) = v23;
  *(_BYTE *)(v31 + 9) = v30 & 1;
  outlined destroy of AccountUpdateNotice((uint64_t)v15, type metadata accessor for VideoReactionButton);
  outlined destroy of AccountUpdateNotice((uint64_t)v12, type metadata accessor for VideoReactionButton);
}

uint64_t protocol witness for View.body.getter in conformance VideoReactionButtonRow@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return VideoReactionButtonRow.body.getter(*(_QWORD *)v1, a1, *(double *)(v1 + 8), *(double *)(v1 + 16));
}

uint64_t VideoReactionPickerBubble.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  objc_class *v33;
  NSBundle v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  _OWORD v63[18];
  uint64_t v64;
  char v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  char v71;
  char v72;
  char v73;
  _BYTE v74[7];
  _BYTE v75[7];
  _BYTE v76[7];
  _BYTE v77[272];

  v60 = a1;
  v2 = type metadata accessor for AccessibilityChildBehavior();
  v55 = *(_QWORD *)(v2 - 8);
  v56 = v2;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_41();
  v54 = v4;
  v5 = type metadata accessor for VideoReactionPickerBubble(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.accessibilityElement(children:)>>.0);
  v58 = *(_QWORD *)(v9 - 8);
  v59 = v9;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_41();
  v57 = v11;
  v12 = VideoReactionPickerBubble.buttonVerticalSpacing.getter();
  v52 = static HorizontalAlignment.center.getter();
  v13 = *(_QWORD *)(v1 + 8);
  type metadata accessor for VideoReactionPickerViewModel(0);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type VideoReactionPickerViewModel and conformance VideoReactionPickerViewModel, (void (*)(uint64_t))type metadata accessor for VideoReactionPickerViewModel);
  v53 = v13;
  swift_retain();
  v51 = static ObservableObject.environmentStore.getter();
  outlined init with copy of ConversationControlsAppLaunchButtonType(v1, (uint64_t)v8, type metadata accessor for VideoReactionPickerBubble);
  v14 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v50 = OUTLINED_FUNCTION_54_32();
  outlined init with take of StagedCollaboration((uint64_t)v8, v50 + v14, type metadata accessor for VideoReactionPickerBubble);
  OUTLINED_FUNCTION_2_0();
  v49 = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  v16 = v15;
  v18 = v17;
  v20 = v19;
  v22 = v21;
  v71 = 0;
  v70 = 0;
  if (one-time initialization token for defaultTipWidth != -1)
    swift_once();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  v23 = v64;
  v48 = v68;
  v46 = v66;
  v47 = v69;
  v24 = v71;
  v25 = v70;
  v73 = v65;
  v72 = v67;
  v26 = static Alignment.center.getter();
  v44 = v27;
  v45 = v26;
  outlined init with copy of ConversationControlsAppLaunchButtonType(v1, (uint64_t)v8, type metadata accessor for VideoReactionPickerBubble);
  v28 = OUTLINED_FUNCTION_54_32();
  outlined init with take of StagedCollaboration((uint64_t)v8, v28 + v14, type metadata accessor for VideoReactionPickerBubble);
  *(_QWORD *)&v63[0] = v52;
  *((double *)v63 + 1) = v12;
  LOBYTE(v63[1]) = v24;
  *((_QWORD *)&v63[1] + 1) = &outlined read-only object #0 of closure #1 in VideoReactionPickerBubble.body.getter;
  v63[2] = vdupq_n_s64(0x3FB999999999999AuLL);
  *(_QWORD *)&v63[3] = &outlined read-only object #1 of closure #1 in VideoReactionPickerBubble.body.getter;
  *(_OWORD *)((char *)&v63[3] + 8) = xmmword_1BD65BD20;
  *((_QWORD *)&v63[4] + 1) = v51;
  v63[5] = v53;
  *(_QWORD *)&v63[6] = 0;
  *((_QWORD *)&v63[6] + 1) = partial apply for closure #2 in VideoReactionPickerBubble.body.getter;
  *(_QWORD *)&v63[7] = v50;
  BYTE8(v63[7]) = v49;
  *(_QWORD *)&v63[8] = v16;
  *((_QWORD *)&v63[8] + 1) = v18;
  *(_QWORD *)&v63[9] = v20;
  *((_QWORD *)&v63[9] + 1) = v22;
  LOBYTE(v63[10]) = v25;
  DWORD1(v63[10]) = *(_DWORD *)&v76[3];
  *(_DWORD *)((char *)&v63[10] + 1) = *(_DWORD *)v76;
  *((_QWORD *)&v63[10] + 1) = v23;
  LOBYTE(v63[11]) = v73;
  DWORD1(v63[11]) = *(_DWORD *)&v75[3];
  *(_DWORD *)((char *)&v63[11] + 1) = *(_DWORD *)v75;
  *((_QWORD *)&v63[11] + 1) = v46;
  LOBYTE(v63[12]) = v72;
  *(_DWORD *)((char *)&v63[12] + 1) = *(_DWORD *)v74;
  DWORD1(v63[12]) = *(_DWORD *)&v74[3];
  *((_QWORD *)&v63[12] + 1) = v48;
  *(_QWORD *)&v63[13] = v47;
  *((_QWORD *)&v63[13] + 1) = partial apply for closure #1 in closure #3 in VideoReactionPickerBubble.body.getter;
  *(_QWORD *)&v63[14] = v28;
  *((_QWORD *)&v63[14] + 1) = v45;
  *(_QWORD *)&v63[15] = v44;
  *((_QWORD *)&v63[15] + 1) = 0xD000000000000019;
  *(_QWORD *)&v63[16] = 0x80000001BD65BD80;
  v29 = v54;
  static AccessibilityChildBehavior.contain.getter();
  v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(VideoReactionButtonRow, VideoReactionButtonRow)>>, _EnvironmentKeyWritingModifier<VideoReactionPickerViewModel?>>, _AppearanceActionModifier>, _PaddingLayout>, _FrameLayout>, _BackgroundModifier<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<ThoughtBubble, Material>, _InsettableBackgroundShapeModifier<Color, ThoughtBubble>>, _ShadowEffect>, _AnimationModifier<Bool>>>>>, _CoordinateSpaceModifier<String>>);
  v31 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(VideoReactionButtonRow, VideoReactionButtonRow)>>, _EnvironmentKeyWritingModifier<VideoReactionPickerViewModel?>>, _AppearanceActionModifier>, _PaddingLayout>, _FrameLayout>, _BackgroundModifier<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<ThoughtBubble, Material>, _InsettableBackgroundShapeModifier<Color, ThoughtBubble>>, _ShadowEffect>, _AnimationModifier<Bool>>>>>, _CoordinateSpaceModifier<String>> and conformance <> ModifiedContent<A, B>();
  v32 = v57;
  View.accessibilityElement(children:)();
  (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v29, v56);
  memcpy(v77, v63, 0x108uLL);
  outlined release of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(VideoReactionButtonRow, VideoReactionButtonRow)>>, _EnvironmentKeyWritingModifier<VideoReactionPickerViewModel?>>, _AppearanceActionModifier>, _PaddingLayout>, _FrameLayout>, _BackgroundModifier<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<ThoughtBubble, Material>, _InsettableBackgroundShapeModifier<Color, ThoughtBubble>>, _ShadowEffect>, _AnimationModifier<Bool>>>>>, _CoordinateSpaceModifier<String>>((uint64_t)v77);
  v33 = (objc_class *)objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  OUTLINED_FUNCTION_7_14();
  v34.super.isa = v33;
  v39 = OUTLINED_FUNCTION_49_2(v35, v36, v37, v38, v34);
  v41 = v40;

  *(_QWORD *)&v63[0] = v39;
  *((_QWORD *)&v63[0] + 1) = v41;
  v61 = v30;
  v62 = v31;
  OUTLINED_FUNCTION_7_18();
  lazy protocol witness table accessor for type String and conformance String();
  View.accessibilityLabel<A>(_:)();
  swift_bridgeObjectRelease();
  return OUTLINED_FUNCTION_101(v32, *(uint64_t (**)(uint64_t, uint64_t))(v58 + 8));
}

double VideoReactionPickerBubble.buttonVerticalSpacing.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void (*v7)(char *, _QWORD, uint64_t);
  char v8;
  void (*v9)(char *, uint64_t);
  double result;
  char v11;
  char v12;
  uint64_t v13;

  v0 = type metadata accessor for DynamicTypeSize();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v13 - v5;
  type metadata accessor for VideoReactionPickerBubble(0);
  specialized Environment.wrappedValue.getter();
  v7 = *(void (**)(char *, _QWORD, uint64_t))(v1 + 104);
  v7(v3, *MEMORY[0x1E0CD98D0], v0);
  v8 = static DynamicTypeSize.< infix(_:_:)();
  v9 = *(void (**)(char *, uint64_t))(v1 + 8);
  v9(v3, v0);
  v9(v6, v0);
  result = 6.0;
  if ((v8 & 1) == 0)
  {
    specialized Environment.wrappedValue.getter();
    v7(v3, *MEMORY[0x1E0CD98D8], v0);
    v11 = static DynamicTypeSize.< infix(_:_:)();
    v9(v3, v0);
    v9(v6, v0);
    result = 2.0;
    if ((v11 & 1) == 0)
    {
      specialized Environment.wrappedValue.getter();
      v7(v3, *MEMORY[0x1E0CD98E8], v0);
      v12 = static DynamicTypeSize.< infix(_:_:)();
      v9(v3, v0);
      v9(v6, v0);
      result = 4.0;
      if ((v12 & 1) != 0)
        return 5.0;
    }
  }
  return result;
}

uint64_t closure #2 in VideoReactionPickerBubble.body.getter()
{
  swift_retain();
  VideoReactionPickerViewModel.isShowingPicker.setter();
  return swift_release();
}

void closure #1 in closure #3 in VideoReactionPickerBubble.body.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  double v14;
  void *v15;
  id v16;
  id v17;
  char v18;
  double v19;
  double v20;
  BOOL v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  double v25;
  id v26;
  id v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v47 = a1;
  v40 = type metadata accessor for Material();
  v1 = *(_QWORD *)(v40 - 8);
  MEMORY[0x1E0C80A78](v40);
  v3 = (char *)&v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ShapeView<ThoughtBubble, Material>);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<_ShapeView<ThoughtBubble, Material>, _InsettableBackgroundShapeModifier<Color, ThoughtBubble>>);
  MEMORY[0x1E0C80A78](v42);
  v41 = (uint64_t)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<_ShapeView<ThoughtBubble, Material>, _InsettableBackgroundShapeModifier<Color, ThoughtBubble>>, _ShadowEffect>);
  MEMORY[0x1E0C80A78](v44);
  v43 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<ThoughtBubble, Material>, _InsettableBackgroundShapeModifier<Color, ThoughtBubble>>, _ShadowEffect>, _AnimationModifier<Bool>>);
  MEMORY[0x1E0C80A78](v45);
  v46 = (uint64_t)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = VideoReactionPickerBubble.anchorPoint(for:)();
  v12 = v11;
  v13 = VideoReactionPickerBubble.bubbleGrowsRightwards(for:)();
  v14 = VideoReactionPickerBubble.cornerRadius.getter();
  v15 = (void *)objc_opt_self();
  v16 = objc_msgSend(v15, sel_currentDevice);
  v17 = objc_msgSend(v16, sel_userInterfaceIdiom);

  swift_retain();
  v18 = VideoReactionPickerViewModel.isShowingPicker.getter();
  swift_release();
  v19 = 1.0;
  if ((v18 & 1) != 0)
    v20 = 1.0;
  else
    v20 = 0.0;
  v21 = v17 == (id)1;
  static Material.regular.getter();
  v22 = v40;
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(&v6[*(int *)(v4 + 52)], v3, v40);
  *(double *)v6 = v10;
  *((_QWORD *)v6 + 1) = v12;
  *((double *)v6 + 2) = v20;
  *((double *)v6 + 3) = v14;
  v23 = v13;
  v6[32] = v13;
  v6[33] = v21;
  *(_WORD *)&v6[*(int *)(v4 + 56)] = 256;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v22);
  static Color.white.getter();
  v24 = Color.opacity(_:)();
  swift_release();
  v25 = VideoReactionPickerBubble.cornerRadius.getter();
  v26 = objc_msgSend(v15, sel_currentDevice);
  v27 = objc_msgSend(v26, sel_userInterfaceIdiom);

  swift_retain();
  v28 = VideoReactionPickerViewModel.isShowingPicker.getter();
  swift_release();
  if ((v28 & 1) == 0)
    v19 = 0.0;
  v29 = v41;
  outlined init with copy of FeatureEligibility?((uint64_t)v6, v41, &demangling cache variable for type metadata for _ShapeView<ThoughtBubble, Material>);
  v30 = v29 + *(int *)(v42 + 36);
  *(_QWORD *)v30 = v24;
  *(double *)(v30 + 8) = v10;
  *(_QWORD *)(v30 + 16) = v12;
  *(double *)(v30 + 24) = v19;
  *(double *)(v30 + 32) = v25;
  *(_BYTE *)(v30 + 40) = v23;
  *(_BYTE *)(v30 + 41) = v27 == (id)1;
  *(_WORD *)(v30 + 42) = 256;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v6, &demangling cache variable for type metadata for _ShapeView<ThoughtBubble, Material>);
  static Color.white.getter();
  v31 = objc_msgSend(v15, sel_currentDevice);
  objc_msgSend(v31, sel_userInterfaceIdiom);

  v32 = (uint64_t)v43;
  v33 = Color.opacity(_:)();
  swift_release();
  outlined init with copy of FeatureEligibility?(v29, v32, &demangling cache variable for type metadata for ModifiedContent<_ShapeView<ThoughtBubble, Material>, _InsettableBackgroundShapeModifier<Color, ThoughtBubble>>);
  v34 = v32 + *(int *)(v44 + 36);
  *(_QWORD *)v34 = v33;
  *(_OWORD *)(v34 + 8) = xmmword_1BD65BD30;
  *(_QWORD *)(v34 + 24) = 0x4014000000000000;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v29, &demangling cache variable for type metadata for ModifiedContent<_ShapeView<ThoughtBubble, Material>, _InsettableBackgroundShapeModifier<Color, ThoughtBubble>>);
  swift_retain();
  v35 = VideoReactionPickerViewModel.isShowingPicker.getter();
  swift_release();
  v36 = 0;
  if ((v35 & 1) != 0)
    v36 = static Animation.interpolatingSpring(mass:stiffness:damping:initialVelocity:)();
  swift_retain();
  v37 = VideoReactionPickerViewModel.isShowingPicker.getter();
  swift_release();
  v38 = v46;
  outlined init with copy of FeatureEligibility?(v32, v46, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<_ShapeView<ThoughtBubble, Material>, _InsettableBackgroundShapeModifier<Color, ThoughtBubble>>, _ShadowEffect>);
  v39 = v38 + *(int *)(v45 + 36);
  *(_QWORD *)v39 = v36;
  *(_BYTE *)(v39 + 8) = v37 & 1;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v32, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<_ShapeView<ThoughtBubble, Material>, _InsettableBackgroundShapeModifier<Color, ThoughtBubble>>, _ShadowEffect>);
  outlined init with take of Any?(v38, v47, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<ThoughtBubble, Material>, _InsettableBackgroundShapeModifier<Color, ThoughtBubble>>, _ShadowEffect>, _AnimationModifier<Bool>>);
}

double VideoReactionPickerBubble.anchorPoint(for:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char v13;
  char v14;
  double v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  double MidY;
  uint64_t v25;
  CGRect *v26;
  double v27;
  double MaxX;
  double v29;
  double MinX;
  uint64_t v31;
  double v32;
  CGFloat v33;
  CGFloat v34;
  CGFloat v35;
  CGFloat v36;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  void *v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  double *v56;
  void *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v62;
  CGFloat v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t aBlock;
  uint64_t v74;
  uint64_t (*v75)(uint64_t);
  CGFloat v76;
  uint64_t (*v77)();
  uint64_t v78;
  CGRect v79;
  CGRect v80;
  CGRect v81;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags();
  v70 = *(_QWORD *)(v2 - 8);
  v71 = v2;
  MEMORY[0x1E0C80A78](v2);
  v69 = (char *)&v62 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DispatchQoS();
  v67 = *(_QWORD *)(v4 - 8);
  v68 = v4;
  MEMORY[0x1E0C80A78](v4);
  v66 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for VideoReactionPickerBubble(0);
  v64 = *(_QWORD *)(v6 - 8);
  v7 = *(_QWORD *)(v64 + 64);
  MEMORY[0x1E0C80A78](v6);
  v65 = (uint64_t)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for GlobalCoordinateSpace();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  *(double *)&v12 = COERCE_DOUBLE(VideoReactionPickerViewModel.anchorPoint.getter());
  v14 = v13;
  swift_release();
  if ((v14 & 1) == 0)
    return *(double *)&v12;
  static CoordinateSpaceProtocol<>.global.getter();
  GeometryProxy.frame<A>(in:)();
  v17 = v16;
  v19 = v18;
  v21 = v20;
  v23 = v22;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v79.origin.x = v17;
  v79.origin.y = v19;
  v79.size.width = v21;
  v79.size.height = v23;
  MidY = CGRectGetMidY(v79);
  v25 = *(_QWORD *)(v0 + 8);
  v26 = (CGRect *)(v25
                 + OBJC_IVAR____TtC15ConversationKitP33_5A0B7B44E54382705C993A39EDE5E35828VideoReactionPickerViewModel_anchorFrame);
  v27 = CGRectGetMidY(*(CGRect *)(v25
                                + OBJC_IVAR____TtC15ConversationKitP33_5A0B7B44E54382705C993A39EDE5E35828VideoReactionPickerViewModel_anchorFrame));
  v80.origin.x = v17;
  v80.origin.y = v19;
  v80.size.width = v21;
  v80.size.height = v23;
  MaxX = CGRectGetMaxX(v80);
  v29 = CGRectGetMaxX(*v26);
  v81.origin.x = v17;
  v81.origin.y = v19;
  v63 = v21;
  v81.size.width = v21;
  v81.size.height = v23;
  MinX = CGRectGetMinX(v81);
  v32 = CGRectGetMinX(*v26);
  if (v27 >= MidY)
  {
    if (MinX >= v32)
    {
      if (v29 >= MaxX)
      {
        x = v26->origin.x;
        y = v26->origin.y;
        width = v26->size.width;
        height = v26->size.height;
        if ((*(_BYTE *)(v25
                       + OBJC_IVAR____TtC15ConversationKitP33_5A0B7B44E54382705C993A39EDE5E35828VideoReactionPickerViewModel_anchorCorner) & 0xFD) != 0)
          CGRectGetMaxX(*(CGRect *)&x);
        else
          CGRectGetMinX(*(CGRect *)&x);
        CGRectGetMinY(*v26);
      }
      else
      {
        CGRectGetMaxX(*v26);
        CGRectGetMinY(*v26);
      }
    }
  }
  else
  {
    if (MinX >= v32)
    {
      if (v29 >= MaxX)
      {
        v33 = v26->origin.x;
        v34 = v26->origin.y;
        v35 = v26->size.width;
        v36 = v26->size.height;
        if ((*(_BYTE *)(v25
                       + OBJC_IVAR____TtC15ConversationKitP33_5A0B7B44E54382705C993A39EDE5E35828VideoReactionPickerViewModel_anchorCorner) & 0xFD) != 0)
          CGRectGetMaxX(*(CGRect *)&v33);
        else
          CGRectGetMinX(*(CGRect *)&v33);
      }
      else
      {
        CGRectGetMaxX(*v26);
      }
    }
    else
    {
      CGRectGetMinX(*v26);
    }
    CGRectGetMaxY(*v26);
  }
  v15 = TPNumberPadCharacter.rawValue.getter(v31);
  v42 = v41;
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v43 = type metadata accessor for Logger();
  __swift_project_value_buffer(v43, (uint64_t)&static Logger.conversationKit);
  v44 = Logger.logObject.getter();
  v45 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v44, v45))
  {
    v46 = swift_slowAlloc();
    v47 = swift_slowAlloc();
    v72 = v47;
    *(_DWORD *)v46 = 136315394;
    aBlock = *(_QWORD *)&v17;
    v74 = *(_QWORD *)&v19;
    v75 = *(uint64_t (**)(uint64_t))&v63;
    v76 = v23;
    type metadata accessor for CGRect(0);
    v48 = String.init<A>(reflecting:)();
    aBlock = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v48, v49, &v72);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v46 + 12) = 2080;
    aBlock = *(_QWORD *)&v15;
    v74 = v42;
    type metadata accessor for CGPoint(0);
    v50 = String.init<A>(reflecting:)();
    aBlock = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v50, v51, &v72);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v44, v45, "frameInGlobalCoordinates:%s, anchorPointInBubbleCoordinates:%s", (uint8_t *)v46, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v47, -1, -1);
    MEMORY[0x1C3B751B8](v46, -1, -1);
  }

  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v52 = (void *)static OS_dispatch_queue.main.getter();
  v53 = v65;
  outlined init with copy of ConversationControlsAppLaunchButtonType(v1, v65, type metadata accessor for VideoReactionPickerBubble);
  v54 = (*(unsigned __int8 *)(v64 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80);
  v55 = swift_allocObject();
  outlined init with take of StagedCollaboration(v53, v55 + v54, type metadata accessor for VideoReactionPickerBubble);
  v56 = (double *)(v55 + ((v7 + v54 + 7) & 0xFFFFFFFFFFFFFFF8));
  *v56 = v15;
  *((_QWORD *)v56 + 1) = v42;
  v77 = partial apply for closure #1 in VideoReactionPickerBubble.anchorPoint(for:);
  v78 = v55;
  aBlock = MEMORY[0x1E0C809B0];
  v74 = 1107296256;
  v75 = thunk for @escaping @callee_guaranteed () -> ();
  v76 = COERCE_DOUBLE(&block_descriptor_54);
  v57 = _Block_copy(&aBlock);
  swift_release();
  v58 = v66;
  static DispatchQoS.unspecified.getter();
  aBlock = MEMORY[0x1E0DEE9D8];
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))MEMORY[0x1E0DEF4F8]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  v59 = v69;
  v60 = v71;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  MEMORY[0x1C3B7361C](0, v58, v59, v57);
  _Block_release(v57);

  (*(void (**)(char *, uint64_t))(v70 + 8))(v59, v60);
  (*(void (**)(char *, uint64_t))(v67 + 8))(v58, v68);
  return v15;
}

BOOL VideoReactionPickerBubble.bubbleGrowsRightwards(for:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double MinX;
  _BOOL8 result;
  double MaxX;
  uint64_t v22;

  v1 = type metadata accessor for GlobalCoordinateSpace();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(v0 + 8)
                          + OBJC_IVAR____TtC15ConversationKitP33_5A0B7B44E54382705C993A39EDE5E35828VideoReactionPickerViewModel_bubbleGrowsRightwards);
  if (v5 != 2)
    return v5 & 1;
  static CoordinateSpaceProtocol<>.global.getter();
  GeometryProxy.frame<A>(in:)();
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v13 = v12;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v14 = *(_QWORD *)(v0 + 8);
  v15 = v7;
  v16 = v9;
  v17 = v11;
  v18 = v13;
  if ((*(_BYTE *)(v14
                 + OBJC_IVAR____TtC15ConversationKitP33_5A0B7B44E54382705C993A39EDE5E35828VideoReactionPickerViewModel_anchorCorner) & 0xFD) != 0)
  {
    MinX = CGRectGetMinX(*(CGRect *)&v15);
    result = MinX <= CGRectGetMinX(*(CGRect *)(v14
                                             + OBJC_IVAR____TtC15ConversationKitP33_5A0B7B44E54382705C993A39EDE5E35828VideoReactionPickerViewModel_anchorFrame));
  }
  else
  {
    MaxX = CGRectGetMaxX(*(CGRect *)&v15);
    result = MaxX < CGRectGetMaxX(*(CGRect *)(v14
                                            + OBJC_IVAR____TtC15ConversationKitP33_5A0B7B44E54382705C993A39EDE5E35828VideoReactionPickerViewModel_anchorFrame));
  }
  *(_BYTE *)(v14
           + OBJC_IVAR____TtC15ConversationKitP33_5A0B7B44E54382705C993A39EDE5E35828VideoReactionPickerViewModel_bubbleGrowsRightwards) = result;
  return result;
}

double VideoReactionPickerBubble.cornerRadius.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void (*v7)(char *, _QWORD, uint64_t);
  char v8;
  void (*v9)(char *, uint64_t);
  double result;
  char v11;
  uint64_t v12;

  v0 = type metadata accessor for DynamicTypeSize();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v12 - v5;
  type metadata accessor for VideoReactionPickerBubble(0);
  specialized Environment.wrappedValue.getter();
  v7 = *(void (**)(char *, _QWORD, uint64_t))(v1 + 104);
  v7(v3, *MEMORY[0x1E0CD98D0], v0);
  v8 = static DynamicTypeSize.< infix(_:_:)();
  v9 = *(void (**)(char *, uint64_t))(v1 + 8);
  v9(v3, v0);
  v9(v6, v0);
  result = 22.0;
  if ((v8 & 1) == 0)
  {
    specialized Environment.wrappedValue.getter();
    v7(v3, *MEMORY[0x1E0CD98E8], v0);
    v11 = static DynamicTypeSize.< infix(_:_:)();
    v9(v3, v0);
    v9(v6, v0);
    result = 40.0;
    if ((v11 & 1) != 0)
      return 31.0;
  }
  return result;
}

uint64_t closure #1 in VideoReactionPickerBubble.anchorPoint(for:)()
{
  swift_retain();
  VideoReactionPickerViewModel.anchorPoint.setter();
  return swift_release();
}

uint64_t VideoReactionPickerViewController.shouldHidePickerAfterReaction.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit33VideoReactionPickerViewController_model)
                            + OBJC_IVAR____TtC15ConversationKitP33_5A0B7B44E54382705C993A39EDE5E35828VideoReactionPickerViewModel_shouldHidePickerAfterReaction);
}

uint64_t VideoReactionPickerViewController.shouldHidePickerAfterReaction.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit33VideoReactionPickerViewController_model)
           + OBJC_IVAR____TtC15ConversationKitP33_5A0B7B44E54382705C993A39EDE5E35828VideoReactionPickerViewModel_shouldHidePickerAfterReaction) = result;
  return result;
}

uint64_t (*VideoReactionPickerViewController.shouldHidePickerAfterReaction.modify(uint64_t a1))(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(*(_QWORD *)(v1
                                            + OBJC_IVAR____TtC15ConversationKit33VideoReactionPickerViewController_model)
                                + OBJC_IVAR____TtC15ConversationKitP33_5A0B7B44E54382705C993A39EDE5E35828VideoReactionPickerViewModel_shouldHidePickerAfterReaction);
  return VideoReactionPickerViewController.shouldHidePickerAfterReaction.modify;
}

uint64_t VideoReactionPickerViewController.shouldHidePickerAfterReaction.modify(uint64_t result)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)result + OBJC_IVAR____TtC15ConversationKit33VideoReactionPickerViewController_model)
           + OBJC_IVAR____TtC15ConversationKitP33_5A0B7B44E54382705C993A39EDE5E35828VideoReactionPickerViewModel_shouldHidePickerAfterReaction) = *(_BYTE *)(result + 8);
  return result;
}

void VideoReactionPickerViewController.__allocating_init(onReaction:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  VideoReactionPickerViewController.init(onReaction:)(a1, a2);
  OUTLINED_FUNCTION_18();
}

id VideoReactionPickerViewController.init(onReaction:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  objc_super v12;

  v5 = (uint64_t)v2 + OBJC_IVAR____TtC15ConversationKit33VideoReactionPickerViewController_reactionPickerBubble;
  v6 = type metadata accessor for VideoReactionPickerBubble(0);
  OUTLINED_FUNCTION_77_0(v5, v7, v8, v6);
  ObjC metadata update function for VideoReactionPickerViewModel();
  swift_allocObject();
  v9 = v2;
  swift_retain();
  *(_QWORD *)&v9[OBJC_IVAR____TtC15ConversationKit33VideoReactionPickerViewController_model] = VideoReactionPickerViewModel.init(onReaction:)(a1, a2);

  v12.receiver = v9;
  v12.super_class = (Class)type metadata accessor for VideoReactionPickerViewController(0);
  v10 = objc_msgSendSuper2(&v12, sel_initWithNibName_bundle_, 0, 0);
  swift_release();
  return v10;
}

void VideoReactionPickerViewController.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;

  objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  OUTLINED_FUNCTION_0();
}

void VideoReactionPickerViewController.init(coder:)()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = (uint64_t)v0 + OBJC_IVAR____TtC15ConversationKit33VideoReactionPickerViewController_reactionPickerBubble;
  v2 = type metadata accessor for VideoReactionPickerBubble(0);
  OUTLINED_FUNCTION_77_0(v1, v3, v4, v2);

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Void __swiftcall VideoReactionPickerViewController.viewDidLoad()()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  objc_super v6;

  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for VideoReactionPickerViewController(0);
  objc_msgSendSuper2(&v6, sel_viewDidLoad);
  v1 = OUTLINED_FUNCTION_58_27();
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, sel_setAlpha_, 0.0);

    v3 = OUTLINED_FUNCTION_58_27();
    if (v3)
    {
      v4 = v3;
      v5 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
      objc_msgSend(v4, sel_setBackgroundColor_, v5);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

Swift::Bool __swiftcall VideoReactionPickerViewController._canShowWhileLocked()()
{
  return 1;
}

Swift::Void __swiftcall VideoReactionPickerViewController.initializeReactionPickerBubbleIfNecessary()()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  int EnumTagSinglePayload;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t *v25;
  id v26;
  void *v27;
  id v28;
  void *v29;
  id v30;
  void *v31;
  id v32;
  void *v33;
  id v34;
  void *v35;
  id v36;
  uint64_t v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  uint64_t v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  uint64_t v57;
  id v58;
  id v59;
  id v60;
  id v61;
  void *v62;
  void *v63;
  id v64;
  id v65;
  Class isa;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  v1 = v0;
  v2 = type metadata accessor for VideoReactionPickerBubble(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_79();
  v6 = v4 - v5;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v69 - v8;
  MEMORY[0x1E0C80A78](v10);
  v12 = (uint64_t *)((char *)&v69 - v11);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VideoReactionPickerBubble?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_79();
  v16 = v14 - v15;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v69 - v18;
  v20 = (uint64_t)v1 + OBJC_IVAR____TtC15ConversationKit33VideoReactionPickerViewController_reactionPickerBubble;
  OUTLINED_FUNCTION_2_0();
  outlined init with copy of FeatureEligibility?(v20, (uint64_t)v19, &demangling cache variable for type metadata for VideoReactionPickerBubble?);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v19, 1, v2);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v19, &demangling cache variable for type metadata for VideoReactionPickerBubble?);
  if (EnumTagSinglePayload != 1)
    goto LABEL_15;
  v72 = v20;
  ObjC metadata update function for VideoReactionPickerViewModel();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type VideoReactionPickerViewModel and conformance VideoReactionPickerViewModel, (void (*)(uint64_t))type metadata accessor for VideoReactionPickerViewModel);
  v23 = v22;
  swift_retain();
  *v12 = ObservedObject.init(wrappedValue:)();
  v12[1] = v24;
  v25 = (uint64_t *)((char *)v12 + *(int *)(v2 + 20));
  *v25 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  OUTLINED_FUNCTION_56_31();
  outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v12, (uint64_t)v9, type metadata accessor for VideoReactionPickerBubble);
  v26 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LockScreenHostingController<VideoReactionPickerBubble>));
  outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v9, v6, type metadata accessor for VideoReactionPickerBubble);
  v27 = (void *)UIHostingController.init(rootView:)();
  outlined destroy of AccountUpdateNotice((uint64_t)v9, type metadata accessor for VideoReactionPickerBubble);
  objc_msgSend(v1, sel_addChildViewController_, v27);
  v28 = OUTLINED_FUNCTION_11_86();
  if (!v28)
  {
    __break(1u);
    goto LABEL_17;
  }
  v29 = v28;
  v30 = OUTLINED_FUNCTION_6_89();
  if (!v30)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v31 = v30;
  OUTLINED_FUNCTION_13_1((uint64_t)v30, sel_addSubview_);

  v32 = OUTLINED_FUNCTION_6_89();
  if (!v32)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v33 = v32;
  objc_msgSend(v32, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  v34 = OUTLINED_FUNCTION_6_89();
  if (!v34)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v35 = v34;
  v71 = v16;
  v36 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
  OUTLINED_FUNCTION_13_1((uint64_t)v36, sel_setBackgroundColor_);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v37 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v37 + 16) = xmmword_1BD644140;
  v38 = OUTLINED_FUNCTION_6_89();
  if (!v38)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v39 = objc_msgSend(v38, sel_topAnchor);
  OUTLINED_FUNCTION_62_28();
  v40 = OUTLINED_FUNCTION_11_86();
  if (!v40)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v41 = v40;
  v42 = objc_msgSend(v40, sel_topAnchor);
  OUTLINED_FUNCTION_34_38();
  v44 = OUTLINED_FUNCTION_4_86(v43, sel_constraintEqualToAnchor_);
  OUTLINED_FUNCTION_38_48();

  *(_QWORD *)(v37 + 32) = v41;
  v45 = OUTLINED_FUNCTION_6_89();
  if (!v45)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v46 = objc_msgSend(v45, sel_bottomAnchor);
  OUTLINED_FUNCTION_62_28();
  v47 = OUTLINED_FUNCTION_11_86();
  if (!v47)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v48 = v47;
  v49 = objc_msgSend(v47, sel_bottomAnchor);
  OUTLINED_FUNCTION_34_38();
  v51 = OUTLINED_FUNCTION_4_86(v50, sel_constraintEqualToAnchor_);
  OUTLINED_FUNCTION_38_48();

  *(_QWORD *)(v37 + 40) = v48;
  v52 = OUTLINED_FUNCTION_6_89();
  if (!v52)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v53 = objc_msgSend(v52, sel_leadingAnchor);
  OUTLINED_FUNCTION_62_28();
  v54 = OUTLINED_FUNCTION_11_86();
  if (!v54)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v55 = v54;
  v56 = objc_msgSend(v54, sel_leadingAnchor);
  OUTLINED_FUNCTION_34_38();
  v58 = OUTLINED_FUNCTION_4_86(v57, sel_constraintEqualToAnchor_);
  OUTLINED_FUNCTION_38_48();

  *(_QWORD *)(v37 + 48) = v55;
  v59 = OUTLINED_FUNCTION_6_89();
  if (!v59)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v70 = v2;
  v60 = objc_msgSend(v59, sel_trailingAnchor);
  OUTLINED_FUNCTION_34_38();
  v61 = OUTLINED_FUNCTION_11_86();
  if (v61)
  {
    v62 = v61;
    v63 = (void *)objc_opt_self();
    v64 = objc_msgSend(v62, sel_trailingAnchor);

    v65 = objc_msgSend(v23, sel_constraintEqualToAnchor_, v64);
    *(_QWORD *)(v37 + 56) = v65;
    v73 = v37;
    specialized Array._endMutation()();
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    objc_msgSend(v63, sel_activateConstraints_, isa);

    objc_msgSend(v27, sel_didMoveToParentViewController_, v1);
    v67 = v71;
    outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v12, v71, type metadata accessor for VideoReactionPickerBubble);
    __swift_storeEnumTagSinglePayload(v67, 0, 1, v70);
    v68 = v72;
    OUTLINED_FUNCTION_2_0();
    outlined assign with take of VideoReactionPickerBubble?(v67, v68);
    swift_endAccess();

    outlined destroy of AccountUpdateNotice((uint64_t)v12, type metadata accessor for VideoReactionPickerBubble);
LABEL_15:
    OUTLINED_FUNCTION_52_1();
    return;
  }
LABEL_27:
  __break(1u);
}

Swift::Void __swiftcall VideoReactionPickerViewController.showReactionPicker(from:corner:)(UIView *from, ConversationKit::MultiwayViewConstraintsController::MultiwayCorner corner)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  char v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  UIView *v19;
  char *v20;
  UIView *v21;
  char *v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  __int128 v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;

  v3 = v2;
  v6 = type metadata accessor for DispatchPredicate();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (uint64_t *)((char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v9 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DEF740], v6);
  v10 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  if ((v10 & 1) == 0)
  {
    __break(1u);
LABEL_8:
    swift_once();
    goto LABEL_4;
  }
  v11 = objc_msgSend(v3, sel_view);
  if (!v11)
  {
    __break(1u);
    return;
  }
  v12 = v11;
  objc_msgSend(v11, sel_setAlpha_, 1.0);

  v13 = *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit33VideoReactionPickerViewController_model];
  -[UIView bounds](from, sel_bounds);
  -[UIView convertRect:toView:](from, sel_convertRect_toView_, 0);
  v9 = (uint64_t *)(v13
                 + OBJC_IVAR____TtC15ConversationKitP33_5A0B7B44E54382705C993A39EDE5E35828VideoReactionPickerViewModel_anchorFrame);
  *v9 = v14;
  v9[1] = v15;
  v9[2] = v16;
  v9[3] = v17;
  *(_BYTE *)(v13
           + OBJC_IVAR____TtC15ConversationKitP33_5A0B7B44E54382705C993A39EDE5E35828VideoReactionPickerViewModel_anchorCorner) = corner;
  VideoReactionPickerViewModel.anchorPoint.setter();
  *(_BYTE *)(v13
           + OBJC_IVAR____TtC15ConversationKitP33_5A0B7B44E54382705C993A39EDE5E35828VideoReactionPickerViewModel_bubbleGrowsRightwards) = 2;
  if (one-time initialization token for conversationKit != -1)
    goto LABEL_8;
LABEL_4:
  v18 = type metadata accessor for Logger();
  __swift_project_value_buffer(v18, (uint64_t)&static Logger.conversationKit);
  v19 = from;
  v20 = v3;
  v21 = v19;
  v22 = v20;
  v23 = Logger.logObject.getter();
  v24 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = swift_slowAlloc();
    v36 = swift_slowAlloc();
    v39 = v36;
    *(_DWORD *)v25 = 136315394;
    -[UIView frame](v21, sel_frame);
    *(_QWORD *)&v37 = v26;
    *((_QWORD *)&v37 + 1) = v27;
    *(_QWORD *)&v38 = v28;
    *((_QWORD *)&v38 + 1) = v29;
    type metadata accessor for CGRect(0);
    v30 = OUTLINED_FUNCTION_39_50();
    *(_QWORD *)&v37 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v30, v31, &v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 2080;
    v32 = *((_OWORD *)v9 + 1);
    v37 = *(_OWORD *)v9;
    v38 = v32;
    v33 = OUTLINED_FUNCTION_39_50();
    *(_QWORD *)&v37 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v33, v34, &v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v23, v24, "sourceViewFrame:%s, convertedFrame:%s", (uint8_t *)v25, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_60();
  }

  VideoReactionPickerViewModel.isShowingPicker.setter();
  OUTLINED_FUNCTION_52_1();
}

Swift::Void __swiftcall VideoReactionPickerViewController.hideReactionPicker()()
{
  void *v0;
  void *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  char v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;

  v1 = v0;
  v2 = (_QWORD *)type metadata accessor for DispatchPredicate();
  v3 = *(v2 - 1);
  MEMORY[0x1E0C80A78](v2);
  v5 = (uint64_t *)((char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, _QWORD *))(v3 + 104))(v5, *MEMORY[0x1E0DEF740], v2);
  v6 = _dispatchPreconditionTest(_:)();
  OUTLINED_FUNCTION_101((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  if ((v6 & 1) == 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  v2 = (_QWORD *)objc_opt_self();
  if (one-time initialization token for shared != -1)
LABEL_5:
    swift_once();
  v7 = (*(double (**)(void))(*(_QWORD *)static Defaults.shared + 1016))();
  v8 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v8 + 16) = v1;
  v17 = partial apply for closure #1 in VideoReactionPickerViewController.hideReactionPicker();
  v18 = v8;
  v9 = MEMORY[0x1E0C809B0];
  v15 = MEMORY[0x1E0C809B0];
  v16 = 1107296256;
  v10 = OUTLINED_FUNCTION_42_1((uint64_t)thunk for @escaping @callee_guaranteed () -> ());
  v11 = v1;
  swift_release();
  v12 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v12 + 16) = v11;
  v17 = partial apply for closure #2 in VideoReactionPickerViewController.hideReactionPicker();
  v18 = v12;
  v15 = v9;
  v16 = 1107296256;
  v13 = OUTLINED_FUNCTION_42_1((uint64_t)thunk for @escaping @callee_guaranteed (@unowned Bool) -> ());
  v14 = v11;
  swift_release();
  objc_msgSend(v2, sel_animateWithDuration_animations_completion_, v10, v13, v7);
  _Block_release(v13);
  _Block_release(v10);
}

void closure #1 in VideoReactionPickerViewController.hideReactionPicker()(void *a1)
{
  id v1;
  id v2;

  v1 = objc_msgSend(a1, sel_view);
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, sel_setAlpha_, 0.0);

  }
  else
  {
    __break(1u);
  }
}

uint64_t closure #2 in VideoReactionPickerViewController.hideReactionPicker()()
{
  VideoReactionPickerViewModel.anchorPoint.setter();
  return VideoReactionPickerViewModel.isShowingPicker.setter();
}

void VideoReactionPickerViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)MEMORY[0x1C3B72E00]();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  OUTLINED_FUNCTION_18();
}

void VideoReactionPickerViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id VideoReactionPickerViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VideoReactionPickerViewController(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t key path getter for VideoReactionPickerViewModel.anchorPoint : VideoReactionPickerViewModel@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  char v4;

  result = VideoReactionPickerViewModel.anchorPoint.getter();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4 & 1;
  return result;
}

uint64_t key path setter for VideoReactionPickerViewModel.anchorPoint : VideoReactionPickerViewModel()
{
  return VideoReactionPickerViewModel.anchorPoint.setter();
}

uint64_t type metadata accessor for VideoReactionButton(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for VideoReactionButton);
}

uint64_t type metadata accessor for VideoReactionButtonStyle(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for VideoReactionButtonStyle);
}

uint64_t partial apply for closure #1 in VideoReactionButton.body.getter()
{
  return partial apply for closure #1 in VideoReactionButton.body.getter((void (*)(_QWORD))type metadata accessor for VideoReactionButton, (uint64_t (*)(uint64_t))closure #1 in VideoReactionButton.body.getter);
}

void partial apply for closure #2 in VideoReactionButton.body.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  closure #2 in VideoReactionButton.body.getter(*(_QWORD *)(v1 + 16), a1);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Image.Scale>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Image.Scale>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Image.Scale>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Image.Scale>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Image.Scale> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Image.Scale>);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Image.Scale>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t objectdestroyTm_12()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = OUTLINED_FUNCTION_48_37();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_release();
  v3 = v0 + ((v2 + 16) & ~v2) + *(int *)(v1 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = OUTLINED_FUNCTION_49_39();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in closure #3 in VideoReactionButton.body.getter()
{
  type metadata accessor for VideoReactionButton(0);
  OUTLINED_FUNCTION_214();
  return closure #2 in closure #3 in VideoReactionButton.body.getter();
}

uint64_t type metadata accessor for VideoReactionPickerViewModel(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for VideoReactionPickerViewModel);
}

void partial apply for closure #4 in VideoReactionButton.body.getter(uint64_t a1, _BYTE *a2)
{
  type metadata accessor for VideoReactionButton(0);
  OUTLINED_FUNCTION_49_3();
  closure #4 in VideoReactionButton.body.getter(a1, a2);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect>, _RotationEffect>, _AnimationModifier<Bool>>, _TransformEffect>, _OffsetEffect>, _AnimationModifier<Bool>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect>, _RotationEffect>, _AnimationModifier<Bool>>, _TransformEffect>, _OffsetEffect>, _AnimationModifier<Bool>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect>, _RotationEffect>, _AnimationModifier<Bool>>, _TransformEffect>, _OffsetEffect>, _AnimationModifier<Bool>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect>, _RotationEffect>, _AnimationModifier<Bool>>, _TransformEffect>, _OffsetEffect>, _AnimationModifier<Bool>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<PlaceholderContentView<ModalOverlayTransition>, _OpacityEffect>, _BlurEffect>, _ScaleEffect> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect>, _RotationEffect>, _AnimationModifier<Bool>>, _TransformEffect>, _OffsetEffect> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect>, _RotationEffect>, _AnimationModifier<Bool>>, _TransformEffect>, _OffsetEffect>, (uint64_t (*)(void))lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect>, _RotationEffect>, _AnimationModifier<Bool>>, _TransformEffect> and conformance <> ModifiedContent<A, B>, MEMORY[0x1E0CD90E0]);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _AnimationModifier<Bool> and conformance _AnimationModifier<A>, &demangling cache variable for type metadata for _AnimationModifier<Bool>);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect>, _RotationEffect>, _AnimationModifier<Bool>>, _TransformEffect>, _OffsetEffect>, _AnimationModifier<Bool>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect>, _RotationEffect>, _AnimationModifier<Bool>>, _TransformEffect> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect>, _RotationEffect>, _AnimationModifier<Bool>>, _TransformEffect> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect>, _RotationEffect>, _AnimationModifier<Bool>>, _TransformEffect> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect>, _RotationEffect>, _AnimationModifier<Bool>>, _TransformEffect>);
    v2[0] = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect>, _RotationEffect>, _AnimationModifier<Bool>> and conformance <> ModifiedContent<A, B>();
    v2[1] = lazy protocol witness table accessor for type _TransformEffect and conformance _TransformEffect();
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect>, _RotationEffect>, _AnimationModifier<Bool>>, _TransformEffect> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect>, _RotationEffect>, _AnimationModifier<Bool>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect>, _RotationEffect>, _AnimationModifier<Bool>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect>, _RotationEffect>, _AnimationModifier<Bool>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect>, _RotationEffect>, _AnimationModifier<Bool>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<PlaceholderContentView<ModalOverlayTransition>, _OpacityEffect>, _BlurEffect>, _ScaleEffect> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect>, _RotationEffect> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect>, _RotationEffect>, lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect> and conformance <> ModifiedContent<A, B>, MEMORY[0x1E0CD9DC0]);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _AnimationModifier<Bool> and conformance _AnimationModifier<A>, &demangling cache variable for type metadata for _AnimationModifier<Bool>);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect>, _RotationEffect>, _AnimationModifier<Bool>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect> and conformance <> ModifiedContent<A, B>()
{
  return lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<PlaceholderContentView<ModalOverlayTransition>, _OpacityEffect>, _BlurEffect>, _ScaleEffect> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect>, (uint64_t (*)(void))lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>> and conformance <> ModifiedContent<A, B>, MEMORY[0x1E0CD8DA8]);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>> and conformance _BackgroundModifier<A>, &demangling cache variable for type metadata for _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t OpaqueTypeConformance2;
  uint64_t v8;
  _QWORD v9[6];

  result = lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Button<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Image.Scale>>>);
    v3 = type metadata accessor for VideoReactionButtonStyle(255);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Button<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Image.Scale>>> and conformance Button<A>, &demangling cache variable for type metadata for Button<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Image.Scale>>>);
    v5 = v4;
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type VideoReactionButtonStyle and conformance VideoReactionButtonStyle, (void (*)(uint64_t))type metadata accessor for VideoReactionButtonStyle);
    v9[2] = v2;
    v9[3] = v3;
    v9[4] = v5;
    v9[5] = v6;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type AccessibilityAttachmentModifier and conformance AccessibilityAttachmentModifier, (void (*)(uint64_t))MEMORY[0x1E0CDCFD0]);
    v9[0] = OpaqueTypeConformance2;
    v9[1] = v8;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v9);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type _TransformEffect and conformance _TransformEffect()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type _TransformEffect and conformance _TransformEffect;
  if (!lazy protocol witness table cache variable for type _TransformEffect and conformance _TransformEffect)
  {
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDA2B0], MEMORY[0x1E0CDA2C0]);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _TransformEffect and conformance _TransformEffect);
  }
  return result;
}

uint64_t sub_1BD3B10AC()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void partial apply for closure #1 in closure #1 in VideoReactionButtonRow.body.getter(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  closure #1 in closure #1 in VideoReactionButtonRow.body.getter(a1, *(_QWORD *)(v2 + 16), a2, *(double *)(v2 + 24), *(double *)(v2 + 32));
}

unint64_t lazy protocol witness table accessor for type Range<Int> and conformance <> Range<A>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = lazy protocol witness table cache variable for type Range<Int> and conformance <> Range<A>;
  if (!lazy protocol witness table cache variable for type Range<Int> and conformance <> Range<A>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Range<Int>);
    v2 = lazy protocol witness table accessor for type Int and conformance Int();
    v3[0] = MEMORY[0x1E0DEB458];
    v3[1] = v2;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0DEB8B8], v1, v3);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Range<Int> and conformance <> Range<A>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type Int and conformance Int()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Int and conformance Int;
  if (!lazy protocol witness table cache variable for type Int and conformance Int)
  {
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0DEB440], MEMORY[0x1E0DEB418]);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Int and conformance Int);
  }
  return result;
}

uint64_t type metadata accessor for VideoReactionPickerBubble(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for VideoReactionPickerBubble);
}

uint64_t partial apply for closure #2 in VideoReactionPickerBubble.body.getter()
{
  return partial apply for closure #1 in VideoReactionButton.body.getter((void (*)(_QWORD))type metadata accessor for VideoReactionPickerBubble, (uint64_t (*)(uint64_t))closure #2 in VideoReactionPickerBubble.body.getter);
}

uint64_t partial apply for closure #1 in VideoReactionButton.body.getter(void (*a1)(_QWORD), uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;

  a1(0);
  OUTLINED_FUNCTION_49_3();
  return a2(v2 + v3);
}

uint64_t objectdestroy_13Tm_4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_10_95();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (OUTLINED_FUNCTION_109() == 1)
  {
    v0 = OUTLINED_FUNCTION_49_39();
    OUTLINED_FUNCTION_17_1(v0);
  }
  else
  {
    swift_release();
  }
  return OUTLINED_FUNCTION_6_10();
}

void partial apply for closure #1 in closure #3 in VideoReactionPickerBubble.body.getter(uint64_t a1@<X8>)
{
  type metadata accessor for VideoReactionPickerBubble(0);
  OUTLINED_FUNCTION_214();
  closure #1 in closure #3 in VideoReactionPickerBubble.body.getter(a1);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(VideoReactionButtonRow, VideoReactionButtonRow)>>, _EnvironmentKeyWritingModifier<VideoReactionPickerViewModel?>>, _AppearanceActionModifier>, _PaddingLayout>, _FrameLayout>, _BackgroundModifier<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<ThoughtBubble, Material>, _InsettableBackgroundShapeModifier<Color, ThoughtBubble>>, _ShadowEffect>, _AnimationModifier<Bool>>>>>, _CoordinateSpaceModifier<String>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(VideoReactionButtonRow, VideoReactionButtonRow)>>, _EnvironmentKeyWritingModifier<VideoReactionPickerViewModel?>>, _AppearanceActionModifier>, _PaddingLayout>, _FrameLayout>, _BackgroundModifier<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<ThoughtBubble, Material>, _InsettableBackgroundShapeModifier<Color, ThoughtBubble>>, _ShadowEffect>, _AnimationModifier<Bool>>>>>, _CoordinateSpaceModifier<String>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(VideoReactionButtonRow, VideoReactionButtonRow)>>, _EnvironmentKeyWritingModifier<VideoReactionPickerViewModel?>>, _AppearanceActionModifier>, _PaddingLayout>, _FrameLayout>, _BackgroundModifier<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<ThoughtBubble, Material>, _InsettableBackgroundShapeModifier<Color, ThoughtBubble>>, _ShadowEffect>, _AnimationModifier<Bool>>>>>, _CoordinateSpaceModifier<String>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(VideoReactionButtonRow, VideoReactionButtonRow)>>, _EnvironmentKeyWritingModifier<VideoReactionPickerViewModel?>>, _AppearanceActionModifier>, _PaddingLayout>, _FrameLayout>, _BackgroundModifier<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<ThoughtBubble, Material>, _InsettableBackgroundShapeModifier<Color, ThoughtBubble>>, _ShadowEffect>, _AnimationModifier<Bool>>>>>, _CoordinateSpaceModifier<String>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(VideoReactionButtonRow, VideoReactionButtonRow)>>, _EnvironmentKeyWritingModifier<VideoReactionPickerViewModel?>>, _AppearanceActionModifier>, _PaddingLayout>, _FrameLayout>, _BackgroundModifier<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<ThoughtBubble, Material>, _InsettableBackgroundShapeModifier<Color, ThoughtBubble>>, _ShadowEffect>, _AnimationModifier<Bool>>>>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _CoordinateSpaceModifier<String> and conformance _CoordinateSpaceModifier<A>, &demangling cache variable for type metadata for _CoordinateSpaceModifier<String>);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(VideoReactionButtonRow, VideoReactionButtonRow)>>, _EnvironmentKeyWritingModifier<VideoReactionPickerViewModel?>>, _AppearanceActionModifier>, _PaddingLayout>, _FrameLayout>, _BackgroundModifier<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<ThoughtBubble, Material>, _InsettableBackgroundShapeModifier<Color, ThoughtBubble>>, _ShadowEffect>, _AnimationModifier<Bool>>>>>, _CoordinateSpaceModifier<String>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(VideoReactionButtonRow, VideoReactionButtonRow)>>, _EnvironmentKeyWritingModifier<VideoReactionPickerViewModel?>>, _AppearanceActionModifier>, _PaddingLayout>, _FrameLayout>, _BackgroundModifier<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<ThoughtBubble, Material>, _InsettableBackgroundShapeModifier<Color, ThoughtBubble>>, _ShadowEffect>, _AnimationModifier<Bool>>>>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(VideoReactionButtonRow, VideoReactionButtonRow)>>, _EnvironmentKeyWritingModifier<VideoReactionPickerViewModel?>>, _AppearanceActionModifier>, _PaddingLayout>, _FrameLayout>, _BackgroundModifier<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<ThoughtBubble, Material>, _InsettableBackgroundShapeModifier<Color, ThoughtBubble>>, _ShadowEffect>, _AnimationModifier<Bool>>>>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(VideoReactionButtonRow, VideoReactionButtonRow)>>, _EnvironmentKeyWritingModifier<VideoReactionPickerViewModel?>>, _AppearanceActionModifier>, _PaddingLayout>, _FrameLayout>, _BackgroundModifier<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<ThoughtBubble, Material>, _InsettableBackgroundShapeModifier<Color, ThoughtBubble>>, _ShadowEffect>, _AnimationModifier<Bool>>>>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(VideoReactionButtonRow, VideoReactionButtonRow)>>, _EnvironmentKeyWritingModifier<VideoReactionPickerViewModel?>>, _AppearanceActionModifier>, _PaddingLayout>, _FrameLayout>, _BackgroundModifier<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<ThoughtBubble, Material>, _InsettableBackgroundShapeModifier<Color, ThoughtBubble>>, _ShadowEffect>, _AnimationModifier<Bool>>>>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<PlaceholderContentView<ModalOverlayTransition>, _OpacityEffect>, _BlurEffect>, _ScaleEffect> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(VideoReactionButtonRow, VideoReactionButtonRow)>>, _EnvironmentKeyWritingModifier<VideoReactionPickerViewModel?>>, _AppearanceActionModifier>, _PaddingLayout>, _FrameLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(VideoReactionButtonRow, VideoReactionButtonRow)>>, _EnvironmentKeyWritingModifier<VideoReactionPickerViewModel?>>, _AppearanceActionModifier>, _PaddingLayout>, _FrameLayout>, lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(VideoReactionButtonRow, VideoReactionButtonRow)>>, _EnvironmentKeyWritingModifier<VideoReactionPickerViewModel?>>, _AppearanceActionModifier>, _PaddingLayout> and conformance <> ModifiedContent<A, B>, MEMORY[0x1E0CD8D70]);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _BackgroundModifier<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<ThoughtBubble, Material>, _InsettableBackgroundShapeModifier<Color, ThoughtBubble>>, _ShadowEffect>, _AnimationModifier<Bool>>>> and conformance _BackgroundModifier<A>, &demangling cache variable for type metadata for _BackgroundModifier<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<ThoughtBubble, Material>, _InsettableBackgroundShapeModifier<Color, ThoughtBubble>>, _ShadowEffect>, _AnimationModifier<Bool>>>>);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(VideoReactionButtonRow, VideoReactionButtonRow)>>, _EnvironmentKeyWritingModifier<VideoReactionPickerViewModel?>>, _AppearanceActionModifier>, _PaddingLayout>, _FrameLayout>, _BackgroundModifier<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<ThoughtBubble, Material>, _InsettableBackgroundShapeModifier<Color, ThoughtBubble>>, _ShadowEffect>, _AnimationModifier<Bool>>>>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(VideoReactionButtonRow, VideoReactionButtonRow)>>, _EnvironmentKeyWritingModifier<VideoReactionPickerViewModel?>>, _AppearanceActionModifier>, _PaddingLayout> and conformance <> ModifiedContent<A, B>()
{
  return lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<PlaceholderContentView<ModalOverlayTransition>, _OpacityEffect>, _BlurEffect>, _ScaleEffect> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(VideoReactionButtonRow, VideoReactionButtonRow)>>, _EnvironmentKeyWritingModifier<VideoReactionPickerViewModel?>>, _AppearanceActionModifier>, _PaddingLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(VideoReactionButtonRow, VideoReactionButtonRow)>>, _EnvironmentKeyWritingModifier<VideoReactionPickerViewModel?>>, _AppearanceActionModifier>, _PaddingLayout>, lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<VStack<TupleView<(VideoReactionButtonRow, VideoReactionButtonRow)>>, _EnvironmentKeyWritingModifier<VideoReactionPickerViewModel?>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>, MEMORY[0x1E0CD9758]);
}

uint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<VStack<TupleView<(VideoReactionButtonRow, VideoReactionButtonRow)>>, _EnvironmentKeyWritingModifier<VideoReactionPickerViewModel?>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>()
{
  return lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<PlaceholderContentView<ModalOverlayTransition>, _OpacityEffect>, _BlurEffect>, _ScaleEffect> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<VStack<TupleView<(VideoReactionButtonRow, VideoReactionButtonRow)>>, _EnvironmentKeyWritingModifier<VideoReactionPickerViewModel?>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VStack<TupleView<(VideoReactionButtonRow, VideoReactionButtonRow)>>, _EnvironmentKeyWritingModifier<VideoReactionPickerViewModel?>>, _AppearanceActionModifier>, (uint64_t (*)(void))lazy protocol witness table accessor for type ModifiedContent<VStack<TupleView<(VideoReactionButtonRow, VideoReactionButtonRow)>>, _EnvironmentKeyWritingModifier<VideoReactionPickerViewModel?>> and conformance <> ModifiedContent<A, B>, MEMORY[0x1E0CDC8B0]);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<VStack<TupleView<(VideoReactionButtonRow, VideoReactionButtonRow)>>, _EnvironmentKeyWritingModifier<VideoReactionPickerViewModel?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<VStack<TupleView<(VideoReactionButtonRow, VideoReactionButtonRow)>>, _EnvironmentKeyWritingModifier<VideoReactionPickerViewModel?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<VStack<TupleView<(VideoReactionButtonRow, VideoReactionButtonRow)>>, _EnvironmentKeyWritingModifier<VideoReactionPickerViewModel?>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(VideoReactionButtonRow, VideoReactionButtonRow)>>, _EnvironmentKeyWritingModifier<VideoReactionPickerViewModel?>>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type VStack<TupleView<(VideoReactionButtonRow, VideoReactionButtonRow)>> and conformance VStack<A>, &demangling cache variable for type metadata for VStack<TupleView<(VideoReactionButtonRow, VideoReactionButtonRow)>>);
    v3 = v2;
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<VideoReactionPickerViewModel?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<VideoReactionPickerViewModel?>);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v5);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<VStack<TupleView<(VideoReactionButtonRow, VideoReactionButtonRow)>>, _EnvironmentKeyWritingModifier<VideoReactionPickerViewModel?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t outlined release of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(VideoReactionButtonRow, VideoReactionButtonRow)>>, _EnvironmentKeyWritingModifier<VideoReactionPickerViewModel?>>, _AppearanceActionModifier>, _PaddingLayout>, _FrameLayout>, _BackgroundModifier<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<ThoughtBubble, Material>, _InsettableBackgroundShapeModifier<Color, ThoughtBubble>>, _ShadowEffect>, _AnimationModifier<Bool>>>>>, _CoordinateSpaceModifier<String>>(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 88);
  v3 = *(_QWORD *)(a1 + 104);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v2);
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v3);
  swift_bridgeObjectRelease();
  swift_release();
  return a1;
}

uint64_t type metadata accessor for VideoReactionPickerViewController(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for VideoReactionPickerViewController);
}

uint64_t outlined assign with take of VideoReactionPickerBubble?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VideoReactionPickerBubble?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BD3B1590()
{
  uint64_t v0;

  return swift_deallocObject();
}

void partial apply for closure #1 in VideoReactionPickerViewController.hideReactionPicker()()
{
  uint64_t v0;

  closure #1 in VideoReactionPickerViewController.hideReactionPicker()(*(void **)(v0 + 16));
}

uint64_t partial apply for closure #2 in VideoReactionPickerViewController.hideReactionPicker()()
{
  return closure #2 in VideoReactionPickerViewController.hideReactionPicker()();
}

unint64_t lazy protocol witness table accessor for type VideoReaction and conformance VideoReaction()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type VideoReaction and conformance VideoReaction;
  if (!lazy protocol witness table cache variable for type VideoReaction and conformance VideoReaction)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for VideoReaction, &type metadata for VideoReaction);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type VideoReaction and conformance VideoReaction);
  }
  return result;
}

uint64_t associated type witness table accessor for ButtonStyle.Body : View in VideoReactionButtonStyle()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for View.Body : View in VideoReactionButton()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for View.Body : View in VideoReactionButtonRow()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for View.Body : View in VideoReactionPickerBubble()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1BD3B1644(_QWORD **a1@<X0>, _BYTE *a2@<X8>)
{
  *a2 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x78))() & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD3B1684(unsigned __int8 *a1, _QWORD **a2)
{
  (*(void (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x80))(*a1);
  OUTLINED_FUNCTION_0();
}

void type metadata completion function for VideoReactionPickerViewModel()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for Published<Bool>();
  if (v0 <= 0x3F)
  {
    type metadata accessor for Published<CGPoint?>();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

void type metadata accessor for Published<CGPoint?>()
{
  unint64_t v0;
  uint64_t v1;

  if (!lazy cache variable for type metadata for Published<CGPoint?>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for CGPoint?);
    v0 = type metadata accessor for Published();
    if (!v1)
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Published<CGPoint?>);
  }
}

uint64_t storeEnumTagSinglePayload for VideoReaction(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1BD3B181C + 4 * byte_1BD65BD45[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1BD3B1850 + 4 * byte_1BD65BD40[v4]))();
}

uint64_t sub_1BD3B1850(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD3B1858(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD3B1860);
  return result;
}

uint64_t sub_1BD3B186C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD3B1874);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1BD3B1878(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD3B1880(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for VideoReaction()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t *initializeBufferWithCopyOfBuffer for VideoReactionButtonStyle(uint64_t *a1, uint64_t *a2)
{
  int v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_DWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content)
                             - 8)
                 + 80);
  if ((v4 & 0x20000) != 0)
  {
    v6 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v6 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v5 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for VideoReactionButtonStyle(uint64_t a1)
{
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v2 = type metadata accessor for DynamicTypeSize();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

_QWORD *initializeWithCopy for VideoReactionButtonStyle(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *assignWithCopy for VideoReactionButtonStyle(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  if (a1 != a2)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)a1, &demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v4 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *initializeWithTake for VideoReactionButtonStyle(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for VideoReactionButtonStyle(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;

  if (a1 != a2)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)a1, &demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v5 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for VideoReactionButtonStyle()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BD3B1C68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_116_0();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>);
  return __swift_getEnumTagSinglePayload(v1, v0, v2);
}

uint64_t storeEnumTagSinglePayload for VideoReactionButtonStyle()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BD3B1CA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_116_0();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>);
  return __swift_storeEnumTagSinglePayload(v1, v0, v0, v2);
}

void type metadata completion function for VideoReactionButtonStyle()
{
  unint64_t v0;

  type metadata accessor for Published<TUCallTransmissionMode>(319, (unint64_t *)&lazy cache variable for type metadata for Environment<DynamicTypeSize>.Content, (uint64_t (*)(uint64_t))MEMORY[0x1E0CD9958], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CD87D0]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void type metadata accessor for XPositionPreferenceKey()
{
  OUTLINED_FUNCTION_34_0();
}

_QWORD *initializeBufferWithCopyOfBuffer for VideoReactionButton(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v3;
  uint64_t v4;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (_QWORD *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
  }
  else
  {
    v7 = a1;
    a1[1] = a2[1];
    v8 = a3[5];
    v9 = (_QWORD *)((char *)a1 + v8);
    v10 = (_QWORD *)((char *)a2 + v8);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      *v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v12 = a3[6];
    v13 = a3[7];
    v14 = (char *)v7 + v12;
    v15 = (char *)a2 + v12;
    *(_QWORD *)v14 = *(_QWORD *)v15;
    v14[8] = v15[8];
    *((_QWORD *)v14 + 2) = *((_QWORD *)v15 + 2);
    v16 = (char *)v7 + v13;
    v17 = (char *)a2 + v13;
    *v16 = *v17;
    *((_QWORD *)v16 + 1) = *((_QWORD *)v17 + 1);
    v18 = a3[9];
    *((_BYTE *)v7 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    *(_QWORD *)((char *)v7 + v18) = *(_QWORD *)((char *)a2 + v18);
    *(_QWORD *)((char *)v7 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
    swift_retain();
  }
  swift_retain();
  return v7;
}

uint64_t destroy for VideoReactionButton(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release();
  v4 = a1 + *(int *)(a2 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  swift_release();
  return swift_release();
}

_QWORD *initializeWithCopy for VideoReactionButton(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v11 = a3[6];
  v12 = a3[7];
  v13 = (char *)a1 + v11;
  v14 = (char *)a2 + v11;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  v13[8] = v14[8];
  *((_QWORD *)v13 + 2) = *((_QWORD *)v14 + 2);
  v15 = (char *)a1 + v12;
  v16 = (char *)a2 + v12;
  *v15 = *v16;
  *((_QWORD *)v15 + 1) = *((_QWORD *)v16 + 1);
  v17 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *(_QWORD *)((char *)a1 + v17) = *(_QWORD *)((char *)a2 + v17);
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for VideoReactionButton(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;

  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  if (a1 != a2)
  {
    v6 = a3[5];
    v7 = (_QWORD *)((char *)a1 + v6);
    v8 = (_QWORD *)((char *)a2 + v6);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)a1 + v6, &demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v10 = a3[6];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = *(_QWORD *)v12;
  v11[8] = v12[8];
  *(_QWORD *)v11 = v13;
  *((_QWORD *)v11 + 2) = *((_QWORD *)v12 + 2);
  swift_retain();
  swift_release();
  v14 = a3[7];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  *v15 = *v16;
  *((_QWORD *)v15 + 1) = *((_QWORD *)v16 + 1);
  swift_retain();
  swift_release();
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  return a1;
}

_OWORD *initializeWithTake for VideoReactionButton(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v11 = a3[6];
  v12 = a3[7];
  v13 = (char *)a1 + v11;
  v14 = (char *)a2 + v11;
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *((_QWORD *)v13 + 2) = *((_QWORD *)v14 + 2);
  *(_OWORD *)((char *)a1 + v12) = *(_OWORD *)((char *)a2 + v12);
  v15 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *(_QWORD *)((char *)a1 + v15) = *(_QWORD *)((char *)a2 + v15);
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  return a1;
}

_QWORD *assignWithTake for VideoReactionButton(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  if (a1 != a2)
  {
    v6 = a3[5];
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)a1 + v6, &demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
  }
  v11 = a3[6];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  *(_QWORD *)v12 = *(_QWORD *)v13;
  v12[8] = v13[8];
  *((_QWORD *)v12 + 2) = *((_QWORD *)v13 + 2);
  swift_release();
  v14 = a3[7];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  *v15 = *v16;
  *((_QWORD *)v15 + 1) = *((_QWORD *)v16 + 1);
  swift_release();
  v17 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *(_QWORD *)((char *)a1 + v17) = *(_QWORD *)((char *)a2 + v17);
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  return a1;
}

uint64_t getEnumTagSinglePayload for VideoReactionButton()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1BD3B2434(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (a2 == 2147483646)
  {
    OUTLINED_FUNCTION_18();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>);
    v2 = OUTLINED_FUNCTION_47_24();
    OUTLINED_FUNCTION_1_16(v2, v3, v4);
  }
}

uint64_t storeEnumTagSinglePayload for VideoReactionButton()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BD3B24A8()
{
  unsigned int v0;
  _QWORD *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_116_0();
  if (v2 == 2147483646)
  {
    *v1 = v0;
    OUTLINED_FUNCTION_18();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>);
    v3 = OUTLINED_FUNCTION_33_48();
    OUTLINED_FUNCTION_0_29(v3, v4, v5, v6);
  }
}

void type metadata completion function for VideoReactionButton()
{
  unint64_t v0;

  type metadata accessor for Published<TUCallTransmissionMode>(319, (unint64_t *)&lazy cache variable for type metadata for Environment<DynamicTypeSize>.Content, (uint64_t (*)(uint64_t))MEMORY[0x1E0CD9958], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CD87D0]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

_QWORD *assignWithCopy for VideoReactionButtonRow(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  return a1;
}

void type metadata accessor for VideoReactionButtonRow()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t *initializeBufferWithCopyOfBuffer for VideoReactionPickerBubble(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = *(int *)(a3 + 20);
    v7 = (uint64_t *)((char *)a1 + v6);
    v8 = (uint64_t *)((char *)a2 + v6);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for VideoReactionPickerBubble(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release();
  v4 = a1 + *(int *)(a2 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v5 = type metadata accessor for DynamicTypeSize();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for VideoReactionPickerBubble(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (_QWORD *)((char *)a1 + v5);
  v7 = (_QWORD *)((char *)a2 + v5);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  else
  {
    *v6 = *v7;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *assignWithCopy for VideoReactionPickerBubble(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 20);
    v7 = (_QWORD *)((char *)a1 + v6);
    v8 = (_QWORD *)((char *)a2 + v6);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)a1 + v6, &demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *initializeWithTake for VideoReactionPickerBubble(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  return a1;
}

_QWORD *assignWithTake for VideoReactionPickerBubble(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release();
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)a1 + v7, &demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for VideoReactionPickerBubble()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1BD3B2A60(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (a2 == 0x7FFFFFFF)
  {
    OUTLINED_FUNCTION_18();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>);
    v2 = OUTLINED_FUNCTION_47_24();
    OUTLINED_FUNCTION_1_16(v2, v3, v4);
  }
}

uint64_t storeEnumTagSinglePayload for VideoReactionPickerBubble()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BD3B2AC8()
{
  int v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_116_0();
  if (v2 == 0x7FFFFFFF)
  {
    *(_QWORD *)(v1 + 8) = (v0 - 1);
    OUTLINED_FUNCTION_18();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>);
    v3 = OUTLINED_FUNCTION_33_48();
    OUTLINED_FUNCTION_0_29(v3, v4, v5, v6);
  }
}

void type metadata completion function for VideoReactionPickerBubble()
{
  unint64_t v0;

  type metadata accessor for Published<TUCallTransmissionMode>(319, (unint64_t *)&lazy cache variable for type metadata for Environment<DynamicTypeSize>.Content, (uint64_t (*)(uint64_t))MEMORY[0x1E0CD9958], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CD87D0]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t ObjC metadata update function for VideoReactionPickerViewController()
{
  return type metadata accessor for VideoReactionPickerViewController(0);
}

void type metadata completion function for VideoReactionPickerViewController()
{
  unint64_t v0;

  type metadata accessor for Published<TUCallTransmissionMode>(319, &lazy cache variable for type metadata for VideoReactionPickerBubble?, type metadata accessor for VideoReactionPickerBubble, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for VideoReactionPickerViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of VideoReactionPickerViewController.shouldHidePickerAfterReaction.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of VideoReactionPickerViewController.shouldHidePickerAfterReaction.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of VideoReactionPickerViewController.shouldHidePickerAfterReaction.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of VideoReactionPickerViewController.__allocating_init(onReaction:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of VideoReactionPickerViewController.initializeReactionPickerBubbleIfNecessary()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of VideoReactionPickerViewController.showReactionPicker(from:corner:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of VideoReactionPickerViewController.hideReactionPicker()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

void sub_1BD3B2CF8()
{
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type ZStack<TupleView<(ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout>, ModifiedContent<ButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<Color?>>)>> and conformance ZStack<A>, &demangling cache variable for type metadata for ZStack<TupleView<(ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout>, ModifiedContent<ButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<Color?>>)>>);
}

uint64_t sub_1BD3B2D24()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect>, _RotationEffect>, _AnimationModifier<Bool>>, _TransformEffect>, _OffsetEffect>, _AnimationModifier<Bool>>);
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _BackgroundModifier<ModifiedContent<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<XPositionPreferenceKey>>>, _PreferenceActionModifier<XPositionPreferenceKey>>>>, _ScaleEffect>, _RotationEffect>, _AnimationModifier<Bool>>, _TransformEffect>, _OffsetEffect>, _AnimationModifier<Bool>> and conformance <> ModifiedContent<A, B>();
  return OUTLINED_FUNCTION_7_18();
}

void sub_1BD3B2D80()
{
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type HStack<ForEach<Range<Int>, Int, TupleView<(VideoReactionButton, Spacer?)>>> and conformance HStack<A>, &demangling cache variable for type metadata for HStack<ForEach<Range<Int>, Int, TupleView<(VideoReactionButton, Spacer?)>>>);
}

void sub_1BD3B2E64(_BYTE *a1@<X8>)
{
  *a1 = VideoReactionPickerViewModel.isShowingPicker.getter() & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD3B2E8C()
{
  VideoReactionPickerViewModel.isShowingPicker.setter();
  OUTLINED_FUNCTION_0();
}

uint64_t sub_1BD3B2EAC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_10_95();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (OUTLINED_FUNCTION_109() == 1)
  {
    v0 = OUTLINED_FUNCTION_49_39();
    OUTLINED_FUNCTION_17_1(v0);
  }
  else
  {
    swift_release();
  }
  return OUTLINED_FUNCTION_6_10();
}

uint64_t partial apply for closure #1 in VideoReactionPickerBubble.anchorPoint(for:)()
{
  type metadata accessor for VideoReactionPickerBubble(0);
  return closure #1 in VideoReactionPickerBubble.anchorPoint(for:)();
}

uint64_t partial apply for closure #1 in VideoReactionButton.offset.getter()
{
  return partial apply for closure #1 in VideoReactionButton.body.getter((void (*)(_QWORD))type metadata accessor for VideoReactionButton, (uint64_t (*)(uint64_t))closure #1 in VideoReactionButton.offset.getter);
}

uint64_t OUTLINED_FUNCTION_39_50()
{
  return String.init<A>(reflecting:)();
}

Swift::Void __swiftcall UIScrollView.toggleZoomEnabled(zoomEnabled:)(Swift::Bool zoomEnabled)
{
  void *v1;
  _BOOL8 v2;
  double v3;

  v2 = zoomEnabled;
  if (zoomEnabled)
    v3 = 2.0;
  else
    v3 = 1.0;
  objc_msgSend(v1, sel_setScrollEnabled_, v2);
  objc_msgSend(v1, sel_setMaximumZoomScale_, v3);
  if (!v2)
    objc_msgSend(v1, sel_setZoomScale_, 1.0);
}

void MultiwayViewController.testing_callStatusDidChange(_:)(int a1)
{
  NSObject *v1;
  char v3;
  char v4;
  uint64_t v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v3 = MultiwayViewController.currentTest()();
  if (v3 != 4)
  {
    v4 = v3;
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    v5 = OUTLINED_FUNCTION_17_2();
    OUTLINED_FUNCTION_3(v5, (uint64_t)&static Logger.conversationKit);
    v6 = OUTLINED_FUNCTION_12_0();
    if (os_log_type_enabled(v1, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      v12 = swift_slowAlloc();
      *(_DWORD *)v7 = 136315138;
      type metadata accessor for TUCallStatus(0);
      v8 = String.init<A>(reflecting:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v8, v9, &v12);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD004000, v1, v6, "[Testing] call status did change %s", v7, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_60();
    }

    if (v4 == 1 && a1 == 4)
    {
      notify_post("ToggleCleethorpes");
      v11 = OUTLINED_FUNCTION_15();
      OUTLINED_FUNCTION_10_96(v11, 1);
      MultiwayViewController.executeAfterDelay(_:)((uint64_t)partial apply for closure #1 in MultiwayViewController.testing_callStatusDidChange(_:), v11);
      swift_release();
    }
  }
  OUTLINED_FUNCTION_9_5();
}

uint64_t MultiwayViewController.currentTest()()
{
  void *v0;
  id v1;
  unsigned __int8 v2;
  id v4;
  unsigned __int8 v5;
  id v6;
  unsigned __int8 v7;
  id v8;
  unsigned __int8 v9;

  v0 = (void *)objc_opt_self();
  v1 = objc_msgSend(v0, sel_sharedApplication);
  v2 = outlined bridged method (mbnn) of @objc UIApplication.isRunningTest(_:)(0xD000000000000019, 0x80000001BD66D580, v1);

  if ((v2 & 1) != 0)
    return 0;
  v4 = objc_msgSend(v0, sel_sharedApplication);
  v5 = outlined bridged method (mbnn) of @objc UIApplication.isRunningTest(_:)(0xD00000000000001ALL, 0x80000001BD66D560, v4);

  if ((v5 & 1) != 0)
    return 1;
  v6 = objc_msgSend(v0, sel_sharedApplication);
  v7 = outlined bridged method (mbnn) of @objc UIApplication.isRunningTest(_:)(0xD000000000000015, 0x80000001BD66D540, v6);

  if ((v7 & 1) != 0)
    return 2;
  v8 = objc_msgSend(v0, sel_sharedApplication);
  v9 = outlined bridged method (mbnn) of @objc UIApplication.isRunningTest(_:)(0xD000000000000012, 0x80000001BD66D520, v8);

  if ((v9 & 1) != 0)
    return 3;
  else
    return 4;
}

uint64_t MultiwayViewController.executeAfterDelay(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  void *v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  void *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[6];

  v21 = a1;
  v3 = type metadata accessor for DispatchWorkItemFlags();
  v24 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS();
  v22 = *(_QWORD *)(v6 - 8);
  v23 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchTime();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v21 - v14;
  type metadata accessor for OS_dispatch_queue();
  v16 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  MEMORY[0x1C3B72C50](v13, 2.0);
  v17 = *(void (**)(char *, uint64_t))(v10 + 8);
  v17(v13, v9);
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = v21;
  *(_QWORD *)(v18 + 24) = a2;
  aBlock[4] = partial apply for thunk for @escaping @callee_guaranteed () -> (@unowned Font.Weight);
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_70;
  v19 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  lazy protocol witness table accessor for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  MEMORY[0x1C3B735B0](v15, v8, v5, v19);
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v24 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v23);
  return ((uint64_t (*)(char *, uint64_t))v17)(v15, v9);
}

Swift::Void __swiftcall MultiwayViewController.testing_requestingLocalPreviewMinimize()()
{
  void *v0;
  unsigned __int8 v1;
  unsigned __int8 v2;
  uint64_t v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;

  v1 = MultiwayViewController.currentTest()();
  if (v1 != 4)
  {
    v2 = v1;
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    v3 = OUTLINED_FUNCTION_17_2();
    OUTLINED_FUNCTION_3(v3, (uint64_t)&static Logger.conversationKit);
    v4 = OUTLINED_FUNCTION_12_0();
    if (OUTLINED_FUNCTION_5_3(v4))
    {
      *(_WORD *)OUTLINED_FUNCTION_7_8() = 0;
      OUTLINED_FUNCTION_2_5(&dword_1BD004000, v5, v6, "[Testing] requesting local preview minimize");
      OUTLINED_FUNCTION_60();
    }

    if (v2 <= 1u)
    {
      v7 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
      v10 = v7;
      if (v2)
        v8 = 0xD00000000000001ALL;
      else
        v8 = 0xD000000000000019;
      if (v2)
        v9 = 0x80000001BD66D560;
      else
        v9 = 0x80000001BD66D580;
      outlined bridged method (mbgbnn) of @objc UIApplication.startedSubTest(_:forTest:)(0xD000000000000014, 0x80000001BD688A60, v8, v9, v7, (SEL *)&selRef_startedSubTest_forTest_);

    }
  }
}

Swift::Void __swiftcall MultiwayViewController.testing_localPreviewDidFinishMinimize()()
{
  NSObject *v0;
  char v1;
  char v2;
  uint64_t v3;
  os_log_type_t v4;
  uint8_t *v5;

  v1 = MultiwayViewController.currentTest()();
  if (v1 != 4)
  {
    v2 = v1;
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    v3 = OUTLINED_FUNCTION_17_2();
    OUTLINED_FUNCTION_3(v3, (uint64_t)&static Logger.conversationKit);
    v4 = OUTLINED_FUNCTION_12_0();
    if (os_log_type_enabled(v0, v4))
    {
      v5 = (uint8_t *)OUTLINED_FUNCTION_7_8();
      *(_WORD *)v5 = 0;
      _os_log_impl(&dword_1BD004000, v0, v4, "[Testing] did finish local preview minimize", v5, 2u);
      OUTLINED_FUNCTION_60();
    }

    __asm { BR              X10 }
  }
  OUTLINED_FUNCTION_91();
}

void closure #1 in MultiwayViewController.testing_callStatusDidChange(_:)(char a1)
{
  id v2;

  v2 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
  __asm { BR              X10 }
}

void sub_1BD3B39D0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;

  outlined bridged method (mbgbnn) of @objc UIApplication.startedSubTest(_:forTest:)(v1, v0, v3 + 8, 0x80000001BD66D560, v2, (SEL *)&selRef_startedSubTest_forTest_);

  OUTLINED_FUNCTION_12_90();
  OUTLINED_FUNCTION_91();
}

void closure #2 in MultiwayViewController.testing_localPreviewDidFinishMinimize()(uint64_t a1, char a2)
{
  id v4;
  id v5;

  v4 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  if (one-time initialization token for localPreviewDidFinishRotationAnimation != -1)
    swift_once();
  objc_msgSend(v4, sel_addObserver_selector_name_object_, a1, sel_testing_didFinishLocalPreviewRotationAnimation, static Strings.Notifications.localPreviewDidFinishRotationAnimation, 0);

  v5 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
  __asm { BR              X10 }
}

void MultiwayViewController.testing_didFinishLocalPreviewRotationAnimation()()
{
  char *v0;

  v0 = (char *)&loc_1BD3B3C48 + dword_1BD3B3E44[MultiwayViewController.currentTest()()];
  __asm { BR              X10 }
}

uint64_t sub_1BD3B3C70()
{
  char v1;
  uint64_t result;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  id v7;

  v1 = _stringCompareWithSmolCheck(_:_:expecting:)();
  result = swift_bridgeObjectRelease();
  if ((v1 & 1) != 0)
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    v3 = type metadata accessor for Logger();
    __swift_project_value_buffer(v3, (uint64_t)&static Logger.conversationKit);
    v4 = Logger.logObject.getter();
    v5 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v6 = 0;
      _os_log_impl(&dword_1BD004000, v4, v5, "[Testing] did finish local preview rotation", v6, 2u);
      MEMORY[0x1C3B751B8](v6, -1, -1);
    }

    v7 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
    __asm { BR              X10 }
  }
  return result;
}

Swift::Void __swiftcall MultiwayViewController.testing_transitionedToInactiveState()()
{
  char *v0;

  v0 = (char *)&loc_1BD3B3EF0 + *((int *)qword_1BD3B4150 + MultiwayViewController.currentTest()());
  __asm { BR              X10 }
}

void sub_1BD3B3F20()
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  id v4;
  uint64_t v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if ((v3 & 1) != 0)
  {
    v4 = objc_msgSend((id)objc_opt_self(), *(SEL *)(v2 + 400));
    __asm { BR              X10 }
  }
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v5 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v5, (uint64_t)&static Logger.conversationKit);
  v6 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_5_3(v6))
  {
    *(_WORD *)OUTLINED_FUNCTION_7_8() = 0;
    OUTLINED_FUNCTION_2_5(&dword_1BD004000, v7, v8, "[Testing] did transition to inactive state");
    OUTLINED_FUNCTION_60();
  }

  v9 = objc_msgSend((id)objc_opt_self(), *(SEL *)(v2 + 400));
  __asm { BR              X10 }
}

uint64_t sub_1BD3B4184()
{
  uint64_t v0;

  return swift_deallocObject();
}

void partial apply for closure #1 in MultiwayViewController.testing_callStatusDidChange(_:)()
{
  char v0;

  v0 = OUTLINED_FUNCTION_9_87();
  closure #1 in MultiwayViewController.testing_callStatusDidChange(_:)(v0);
}

id outlined bridged method (mbnn) of @objc UIApplication.isRunningTest(_:)(uint64_t a1, uint64_t a2, void *a3)
{
  void *v4;
  id v5;

  v4 = (void *)MEMORY[0x1C3B72E00]();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(a3, sel_isRunningTest_, v4);

  return v5;
}

uint64_t sub_1BD3B4228()
{
  uint64_t v0;

  return swift_deallocObject();
}

void partial apply for closure #2 in MultiwayViewController.testing_localPreviewDidFinishMinimize()()
{
  uint64_t v0;

  closure #2 in MultiwayViewController.testing_localPreviewDidFinishMinimize()(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

void partial apply for closure #1 in MultiwayViewController.testing_localPreviewDidFinishMinimize()()
{
  char v0;

  v0 = OUTLINED_FUNCTION_9_87();
  closure #1 in MultiwayViewController.testing_callStatusDidChange(_:)(v0);
}

void outlined bridged method (mbgbnn) of @objc UIApplication.startedSubTest(_:forTest:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, SEL *a6)
{
  void *v10;
  id v11;

  v10 = (void *)MEMORY[0x1C3B72E00]();
  v11 = (id)MEMORY[0x1C3B72E00](a3, a4);
  swift_bridgeObjectRelease();
  objc_msgSend(a5, *a6, v10, v11);

}

void outlined bridged method (mbnn) of @objc UIApplication.finishedTest(_:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = (id)MEMORY[0x1C3B72E00]();
  swift_bridgeObjectRelease();
  objc_msgSend(a3, sel_finishedTest_, v4);

}

uint64_t sub_1BD3B4348()
{
  swift_release();
  return swift_deallocObject();
}

double CGFloat.rounded(_:toScale:)(uint64_t a1, double a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  double v10;
  int v11;
  double v12;
  double v13;
  uint64_t v15;
  double v16;

  v6 = type metadata accessor for FloatingPointRoundingRule();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a2 * a3;
  v16 = v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  v11 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if (v11 == *MEMORY[0x1E0DED4F0])
  {
    v12 = round(v10);
  }
  else if (v11 == *MEMORY[0x1E0DED4E8])
  {
    v12 = rint(v10);
  }
  else if (v11 == *MEMORY[0x1E0DED500])
  {
    v12 = ceil(v10);
  }
  else if (v11 == *MEMORY[0x1E0DED508])
  {
    v12 = floor(v10);
  }
  else if (v11 == *MEMORY[0x1E0DED4D8])
  {
    v12 = trunc(v10);
  }
  else if (v11 == *MEMORY[0x1E0DED4E0])
  {
    v12 = ceil(v10);
    v13 = floor(v10);
    if (v10 < 0.0)
      v12 = v13;
  }
  else
  {
    Double._roundSlowPath(_:)();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v12 = v16;
  }
  return v12 / a2;
}

BOOL CGFloat.isApproximatelyEqual(to:tolerance:)(double a1, double a2, double a3)
{
  return vabdd_f64(a3, a1) < a2;
}

double CGFloat.adjustedPoints(with:scaleFactor:)(double a1, double a2, double a3)
{
  return a3 / a1 * a2;
}

void CGFloat.roundedToDisplay.getter()
{
  type metadata accessor for UIView();
  static UIView.screenScale.getter();
  OUTLINED_FUNCTION_12_1();
}

void CGFloat.rounded(_:toScaleOf:)(uint64_t a1, id a2, double a3)
{
  id v5;
  double v6;

  v5 = objc_msgSend(a2, sel_traitCollection);
  objc_msgSend(v5, sel_displayScale);
  CGFloat.rounded(_:toScale:)(a1, v6, a3);

  OUTLINED_FUNCTION_12_1();
}

double CGFloat.rounded(_:toEvenPixelUsingScale:)(uint64_t a1, double a2, double a3)
{
  double v3;

  v3 = CGFloat.rounded(_:toScale:)(a1, a2, a3 * 0.5);
  return v3 + v3;
}

BOOL CGFloat.isApproximatelyZero(tolerance:)(double a1, double a2)
{
  return fabs(a2) < a1;
}

double CGFloat.round(to:)(uint64_t a1, double a2)
{
  double v3;

  v3 = __exp10((double)a1);
  return round(v3 * a2) / v3;
}

double CGFloat.rounded(_:toScaleOf:)(uint64_t a1, void *a2, double a3)
{
  swift_getObjectType();
  return specialized CGFloat.rounded(_:toScaleOf:)(a1, a2, a3);
}

double CGFloat.rounded(_:toScaleOf:)(uint64_t a1, id a2, double a3)
{
  double v5;

  objc_msgSend(a2, sel_displayScale);
  return CGFloat.rounded(_:toScale:)(a1, v5, a3);
}

double specialized CGFloat.rounded(_:toScaleOf:)(uint64_t a1, id a2, double a3)
{
  id v5;
  double v6;
  double v7;

  v5 = objc_msgSend(a2, sel_traitCollection);
  objc_msgSend(v5, sel_displayScale);
  v7 = CGFloat.rounded(_:toScale:)(a1, v6, a3);

  return v7;
}

id isTrue(_:_:)(id result, void *a2)
{
  if ((result & 1) == 0)
  {
    swift_willThrow();
    return a2;
  }
  return result;
}

uint64_t @objc TUCallCenter.autoPunchOutBehaviorRequiredForCurrentCalls.getter(void *a1)
{
  id v1;
  char v2;

  v1 = a1;
  v2 = TUCallCenter.autoPunchOutBehaviorRequiredForCurrentCalls.getter();

  return v2 & 1;
}

uint64_t TUCallCenter.autoPunchOutBehaviorRequiredForCurrentCalls.getter()
{
  void *v0;
  uint64_t result;
  void *v2;
  id v3;

  result = (uint64_t)objc_msgSend(v0, sel_frontmostAudioOrVideoCall);
  if (result)
  {
    v2 = (void *)result;
    if (objc_msgSend(v0, sel_autoPunchOutBehaviorRequiredForFrontmostCall)
      && ((type metadata accessor for SpringBoardUtilities(), !static SpringBoardUtilities.checkSpringBoardState(for:)())
       || objc_msgSend(v2, sel_isThirdPartyVideo))
      && (v3 = objc_msgSend((id)objc_opt_self(), sel__carScreen),
          v2,
          (v2 = v3) == 0))
    {
      return 1;
    }
    else
    {

      return 0;
    }
  }
  return result;
}

uint64_t PlaceholderCall.Purpose.debugDescription.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BD3B4868 + 4 * byte_1BD65C310[*v0]))(0x69636570736E752ELL, 0xEC00000064656966);
}

unint64_t sub_1BD3B4868()
{
  return 0xD000000000000013;
}

unint64_t sub_1BD3B48B8()
{
  return 0xD000000000000011;
}

BOOL static PlaceholderCall.Purpose.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void PlaceholderCall.Purpose.hash(into:)()
{
  unsigned __int8 *v0;

  Hasher._combine(_:)(*v0);
  OUTLINED_FUNCTION_0();
}

Swift::Int PlaceholderCall.Purpose.hashValue.getter()
{
  unsigned __int8 *v0;
  Swift::UInt v1;

  v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

uint64_t PlaceholderCall.__allocating_init(for:placeholderCallCenter:purpose:)(uint64_t a1, void *a2, char *a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  PlaceholderCall.init(for:placeholderCallCenter:purpose:)(a1, a2, a3);
  return v6;
}

uint64_t PlaceholderCall.init(for:placeholderCallCenter:purpose:)(uint64_t a1, void *a2, char *a3)
{
  uint64_t v3;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *a3;
  *(_BYTE *)(v3 + 17) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 16842752;
  swift_unknownObjectWeakInit();
  v7 = v3 + OBJC_IVAR____TtC15ConversationKit15PlaceholderCall_conversationUUID;
  v8 = OUTLINED_FUNCTION_33_0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7, a1, v8);
  swift_unknownObjectWeakAssign();

  *(_BYTE *)(v3 + 16) = v6;
  return v3;
}

void PlaceholderCall.purpose.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

void PlaceholderCall.willSetAVModeSoon.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32_0();
}

void PlaceholderCall.willSetAVModeSoon.setter(char a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_2_0();
  *(_BYTE *)(v1 + 17) = a1;
  OUTLINED_FUNCTION_32();
}

void PlaceholderCall.willSetAVModeSoon.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t PlaceholderCall.desiredAVMode.getter()
{
  uint64_t v0;

  if (((*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))() & 1) != 0)
    return 2;
  return ((*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))() & 1) != 0
      || ((*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))() & 1) == 0;
}

void PlaceholderCall.bluetoothAudioFormat.didset(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;

  swift_beginAccess();
  if (*(_QWORD *)(v1 + 24) != a1)
  {
    v3 = MEMORY[0x1C3B752C0](v1 + OBJC_IVAR____TtC15ConversationKit15PlaceholderCall_placeholderCallCenter);
    if (v3)
    {
      v4 = (void *)v3;
      PlaceholderCallCenter.updateAVModeSoon(for:)();

    }
  }
}

uint64_t PlaceholderCall.bluetoothAudioFormat.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_1();
  return *(_QWORD *)(v0 + 24);
}

void PlaceholderCall.bluetoothAudioFormat.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  OUTLINED_FUNCTION_2_0();
  v3 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)(v1 + 24) = a1;
  PlaceholderCall.bluetoothAudioFormat.didset(v3);
  OUTLINED_FUNCTION_32();
}

void PlaceholderCall.bluetoothAudioFormat.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = OUTLINED_FUNCTION_38_1();
  *v0 = v2;
  v2[4] = v1;
  OUTLINED_FUNCTION_1();
  v2[3] = *(_QWORD *)(v1 + 24);
  OUTLINED_FUNCTION_18();
}

void PlaceholderCall.bluetoothAudioFormat.modify(uint64_t a1)
{
  void *v1;

  v1 = *(void **)a1;
  PlaceholderCall.bluetoothAudioFormat.setter(*(_QWORD *)(*(_QWORD *)a1 + 24));
  OUTLINED_FUNCTION_11(v1);
}

void PlaceholderCall.isSendingVideo.didset(char a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  void *v4;

  v2 = a1 & 1;
  swift_beginAccess();
  if (*(unsigned __int8 *)(v1 + 32) != v2)
  {
    v3 = MEMORY[0x1C3B752C0](v1 + OBJC_IVAR____TtC15ConversationKit15PlaceholderCall_placeholderCallCenter);
    if (v3)
    {
      v4 = (void *)v3;
      PlaceholderCallCenter.updateAVModeSoon(for:)();

    }
  }
}

void PlaceholderCall.isSendingVideo.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32_0();
}

void PlaceholderCall.isSendingVideo.setter(char a1)
{
  uint64_t v1;
  char v3;

  OUTLINED_FUNCTION_2_0();
  v3 = *(_BYTE *)(v1 + 32);
  *(_BYTE *)(v1 + 32) = a1;
  PlaceholderCall.isSendingVideo.didset(v3);
  OUTLINED_FUNCTION_32();
}

void PlaceholderCall.isSendingVideo.modify()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v2 = OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_35_11((uint64_t)v2);
  OUTLINED_FUNCTION_1();
  *(_BYTE *)(v1 + 32) = *(_BYTE *)(v0 + 32);
  OUTLINED_FUNCTION_18();
}

void PlaceholderCall.isSendingVideo.modify(uint64_t a1, uint64_t a2)
{
  PlaceholderCall.isSendingVideo.modify(a1, a2, (void (*)(_QWORD))PlaceholderCall.isSendingVideo.setter);
}

void PlaceholderCall.isSharingScreen.didset(char a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  void *v4;

  v2 = a1 & 1;
  swift_beginAccess();
  if (*(unsigned __int8 *)(v1 + 33) != v2)
  {
    v3 = MEMORY[0x1C3B752C0](v1 + OBJC_IVAR____TtC15ConversationKit15PlaceholderCall_placeholderCallCenter);
    if (v3)
    {
      v4 = (void *)v3;
      PlaceholderCallCenter.updateAVModeSoon(for:)();

    }
  }
}

void PlaceholderCall.isSharingScreen.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32_0();
}

void PlaceholderCall.isSharingScreen.setter(char a1)
{
  uint64_t v1;
  char v3;

  OUTLINED_FUNCTION_2_0();
  v3 = *(_BYTE *)(v1 + 33);
  *(_BYTE *)(v1 + 33) = a1;
  PlaceholderCall.isSharingScreen.didset(v3);
  OUTLINED_FUNCTION_32();
}

void PlaceholderCall.isSharingScreen.modify()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v2 = OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_35_11((uint64_t)v2);
  OUTLINED_FUNCTION_1();
  *(_BYTE *)(v1 + 32) = *(_BYTE *)(v0 + 33);
  OUTLINED_FUNCTION_18();
}

void PlaceholderCall.isSharingScreen.modify(uint64_t a1, uint64_t a2)
{
  PlaceholderCall.isSendingVideo.modify(a1, a2, (void (*)(_QWORD))PlaceholderCall.isSharingScreen.setter);
}

void PlaceholderCall.isUplinkMuted.didset(char a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  void *v4;

  v2 = a1 & 1;
  swift_beginAccess();
  if (*(unsigned __int8 *)(v1 + 34) != v2)
  {
    v3 = MEMORY[0x1C3B752C0](v1 + OBJC_IVAR____TtC15ConversationKit15PlaceholderCall_placeholderCallCenter);
    if (v3)
    {
      v4 = (void *)v3;
      PlaceholderCallCenter.updateAVModeSoon(for:)();

    }
  }
}

void PlaceholderCall.isUplinkMuted.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32_0();
}

void PlaceholderCall.isUplinkMuted.setter(char a1)
{
  uint64_t v1;
  char v3;

  OUTLINED_FUNCTION_2_0();
  v3 = *(_BYTE *)(v1 + 34);
  *(_BYTE *)(v1 + 34) = a1;
  PlaceholderCall.isUplinkMuted.didset(v3);
  OUTLINED_FUNCTION_32();
}

void PlaceholderCall.isUplinkMuted.modify()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v2 = OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_35_11((uint64_t)v2);
  OUTLINED_FUNCTION_1();
  *(_BYTE *)(v1 + 32) = *(_BYTE *)(v0 + 34);
  OUTLINED_FUNCTION_18();
}

void PlaceholderCall.isUplinkMuted.modify(uint64_t a1, uint64_t a2)
{
  PlaceholderCall.isSendingVideo.modify(a1, a2, (void (*)(_QWORD))PlaceholderCall.isUplinkMuted.setter);
}

void PlaceholderCall.isSendingVideo.modify(uint64_t a1, uint64_t a2, void (*a3)(_QWORD))
{
  void *v3;

  v3 = *(void **)a1;
  a3(*(unsigned __int8 *)(*(_QWORD *)a1 + 32));
  OUTLINED_FUNCTION_11(v3);
}

void PlaceholderCall.shouldSuppressRingtone.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32_0();
}

void PlaceholderCall.shouldSuppressRingtone.setter(char a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_2_0();
  *(_BYTE *)(v1 + 35) = a1;
  OUTLINED_FUNCTION_32();
}

void PlaceholderCall.shouldSuppressRingtone.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void PlaceholderCall.conversation.getter()
{
  OUTLINED_FUNCTION_26_12();
}

void sub_1BD3B5078(uint64_t a1)
{
  uint64_t v1;

  if (a1)
  {
    PlaceholderCallCenter.activeConversation(for:)(v1);
    OUTLINED_FUNCTION_49_5();
  }
  OUTLINED_FUNCTION_0();
}

void PlaceholderCall.deinit()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_17_1(v0);
  swift_unknownObjectWeakDestroy();
  OUTLINED_FUNCTION_0();
}

uint64_t PlaceholderCall.__deallocating_deinit()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_17_1(v0);
  swift_unknownObjectWeakDestroy();
  return swift_deallocClassInstance();
}

uint64_t static PlaceholderCall.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = UUID.uuidString.getter();
  v2 = v1;
  if (v0 == UUID.uuidString.getter() && v2 == v3)
    v5 = 1;
  else
    v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
  OUTLINED_FUNCTION_13_3();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

void PlaceholderCall.uniqueProxyIdentifier.getter()
{
  UUID.uuidString.getter();
  OUTLINED_FUNCTION_0();
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance PlaceholderCall()
{
  return static PlaceholderCall.== infix(_:_:)() & 1;
}

void PlaceholderCall.cnk_disconnect(reason:)()
{
  OUTLINED_FUNCTION_26_12();
}

void sub_1BD3B521C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  if (a1)
  {
    OUTLINED_FUNCTION_30_54();
    PlaceholderCallCenter.disconnect(_:)();
    OUTLINED_FUNCTION_7_1(a10);
  }
  else
  {
    OUTLINED_FUNCTION_36();
  }
}

Swift::Void __swiftcall PlaceholderCall.cnk_answerOrJoin()()
{
  OUTLINED_FUNCTION_26_12();
}

void sub_1BD3B5258(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  uint64_t v10;

  if (a1)
  {
    v10 = OUTLINED_FUNCTION_30_54();
    PlaceholderCallCenter.answer(_:)(v10);
    OUTLINED_FUNCTION_7_1(a10);
  }
  else
  {
    OUTLINED_FUNCTION_36();
  }
}

void PlaceholderCall.setRemoteVideoPresentationState(_:)()
{
  Swift::String v0;

  OUTLINED_FUNCTION_14_88();
  swift_bridgeObjectRelease();
  v0._countAndFlagsBits = UUID.uuidString.getter();
  OUTLINED_FUNCTION_180(v0);
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_6_90();
  __break(1u);
}

void PlaceholderCall.callUUID.getter()
{
  UUID.uuidString.getter();
  OUTLINED_FUNCTION_0();
}

void PlaceholderCall.setScreenShareAttributes(_:)()
{
  Swift::String v0;

  OUTLINED_FUNCTION_14_88();
  swift_bridgeObjectRelease();
  v0._countAndFlagsBits = UUID.uuidString.getter();
  OUTLINED_FUNCTION_180(v0);
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_6_90();
  __break(1u);
}

void PlaceholderCall.setSharingScreen(_:attributes:)()
{
  OUTLINED_FUNCTION_26_12();
}

void sub_1BD3B53B4(void *a1)
{
  if (a1)
  {
    PlaceholderCallCenter.setSharingScreen(_:attributes:for:)();

  }
}

void PlaceholderCall.description.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;

  _StringGuts.grow(_:)(33);
  _typeName(_:qualified:)();
  swift_bridgeObjectRelease();
  v0._countAndFlagsBits = 0x65736F7072757028;
  v0._object = (void *)0xEA0000000000203ALL;
  String.append(_:)(v0);
  v1._countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v1);
  swift_bridgeObjectRelease();
  v2._object = (void *)0x80000001BD688C00;
  v2._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v2);
  PlaceholderCall.conversation.getter();
}

uint64_t sub_1BD3B54C4()
{
  Swift::String v0;
  uint64_t v2;
  Swift::String v3;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TUConversation?);
  v3._countAndFlagsBits = String.init<A>(describing:)();
  OUTLINED_FUNCTION_180(v3);
  OUTLINED_FUNCTION_13_3();
  v0._countAndFlagsBits = 41;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  return v2;
}

void PlaceholderCall.status.getter()
{
  PlaceholderCall.conversation.getter();
}

uint64_t sub_1BD3B5528(void *a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  Swift::String v6;

  if (!a1)
    return 0;
  v2 = (unint64_t)objc_msgSend(a1, sel_state);
  if (v2 < 5)
  {
    v3 = dword_1BD65C4F8[v2];

    return v3;
  }
  _StringGuts.grow(_:)(34);
  v5 = swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_123(v5, (const char *)&selRef_numberOfTapsRequired);
  v6._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v6);
  OUTLINED_FUNCTION_13_3();
  result = OUTLINED_FUNCTION_6_90();
  __break(1u);
  return result;
}

uint64_t PlaceholderCall.uniqueProxyIdentifierUUID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC15ConversationKit15PlaceholderCall_conversationUUID;
  v4 = OUTLINED_FUNCTION_33_0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

void PlaceholderCall.callGroupUUID.getter()
{
  PlaceholderCall.conversation.getter();
}

uint64_t sub_1BD3B5664(void *a1)
{
  uint64_t v1;
  id v3;
  uint64_t v4;
  uint64_t v5;

  if (a1)
  {
    v3 = objc_msgSend(a1, sel_groupUUID);

    static UUID._unconditionallyBridgeFromObjectiveC(_:)();
    v4 = 0;
  }
  else
  {
    v4 = 1;
  }
  v5 = OUTLINED_FUNCTION_33_0();
  return __swift_storeEnumTagSinglePayload(v1, v4, 1, v5);
}

double PlaceholderCall.callDuration.getter()
{
  return 0.0;
}

uint64_t PlaceholderCall.callDurationString.getter()
{
  return 0;
}

void PlaceholderCall.displayName.getter()
{
  PlaceholderCall.conversation.getter();
}

void sub_1BD3B56F0(void *a1)
{
  id v2;

  if (a1)
  {
    v2 = OUTLINED_FUNCTION_123((uint64_t)a1, sel_displayName);

    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  OUTLINED_FUNCTION_18();
}

void PlaceholderCall.handle.getter()
{
  PlaceholderCall.conversation.getter();
}

void sub_1BD3B5750(id a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  id v13;
  uint64_t v14;
  id v15;

  if (a1)
  {
    v13 = objc_msgSend(a1, sel_localMember);
    OUTLINED_FUNCTION_37_0();
    if (v12)
    {
      v15 = OUTLINED_FUNCTION_123(v14, sel_handle);
      OUTLINED_FUNCTION_49_5();
    }
  }
  OUTLINED_FUNCTION_0();
}

uint64_t PlaceholderCall.imageURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = type metadata accessor for URL();
  return __swift_storeEnumTagSinglePayload(a1, 1, 1, v2);
}

void PlaceholderCall.isActive.getter()
{
  PlaceholderCall.isConnected.getter();
}

uint64_t sub_1BD3B57E4(char a1)
{
  if ((a1 & 1) == 0)
    PlaceholderCall.isConnecting.getter();
  return 1;
}

void PlaceholderCall.isConnected.getter()
{
  PlaceholderCall.conversation.getter();
}

void *sub_1BD3B580C(void *result)
{
  uint64_t v1;

  if (result)
  {
    objc_msgSend(result, sel_state);
    OUTLINED_FUNCTION_49_5();
    return (void *)(v1 == 3);
  }
  return result;
}

void PlaceholderCall.isConnecting.getter()
{
  PlaceholderCall.conversation.getter();
}

void *sub_1BD3B5848(void *result)
{
  uint64_t v1;

  if (result)
  {
    objc_msgSend(result, sel_state);
    OUTLINED_FUNCTION_49_5();
    return (void *)(v1 == 2);
  }
  return result;
}

void PlaceholderCall.provider.getter()
{
  void *v0;
  id v1;
  id v2;

  v1 = objc_msgSend(objc_msgSend((id)objc_opt_self(), sel_sharedInstance), sel_providerManager);
  OUTLINED_FUNCTION_49_5();
  v2 = objc_msgSend(v0, sel_faceTimeProvider);
  OUTLINED_FUNCTION_37_0();
  OUTLINED_FUNCTION_0();
}

void PlaceholderCall.remoteParticipantHandles.getter()
{
  PlaceholderCall.conversation.getter();
}

void PlaceholderCall.cnk_contactStoreConfiguration.getter()
{
  objc_opt_self();
  PlaceholderCall.conversation.getter();
}

void sub_1BD3B5B70(uint64_t a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  void *v12;
  id v13;

  v13 = objc_msgSend(v12, sel_tu_contactStoreConfigurationForConversation_, a1);
  OUTLINED_FUNCTION_37_0();
  OUTLINED_FUNCTION_0();
}

BOOL PlaceholderCall.cnk_supportsAVLessConversations.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))() == 0;
}

void protocol witness for Call.setRemoteVideoPresentationState(_:) in conformance PlaceholderCall()
{
  PlaceholderCall.setRemoteVideoPresentationState(_:)();
}

void protocol witness for Call.setScreenShareAttributes(_:) in conformance PlaceholderCall()
{
  PlaceholderCall.setScreenShareAttributes(_:)();
}

uint64_t protocol witness for Call.imageURL.getter in conformance PlaceholderCall@<X0>(uint64_t a1@<X8>)
{
  return PlaceholderCall.imageURL.getter(a1);
}

void protocol witness for Call.provider.getter in conformance PlaceholderCall()
{
  PlaceholderCall.provider.getter();
}

uint64_t protocol witness for Call.bluetoothAudioFormat.getter in conformance PlaceholderCall()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t protocol witness for Call.bluetoothAudioFormat.setter in conformance PlaceholderCall()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t (*protocol witness for Call.bluetoothAudioFormat.modify in conformance PlaceholderCall(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(*(_QWORD *)v1 + 208))();
  return protocol witness for Call.bluetoothAudioFormat.modify in conformance PlaceholderCall;
}

uint64_t protocol witness for Call.isSendingVideo.getter in conformance PlaceholderCall()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t protocol witness for Call.isSendingVideo.setter in conformance PlaceholderCall()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t (*protocol witness for Call.isSendingVideo.modify in conformance PlaceholderCall(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(*(_QWORD *)v1 + 232))();
  return protocol witness for Call.bluetoothAudioFormat.modify in conformance PlaceholderCall;
}

uint64_t protocol witness for Call.isSharingScreen.setter in conformance PlaceholderCall()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t (*protocol witness for Call.isSharingScreen.modify in conformance PlaceholderCall(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(*(_QWORD *)v1 + 256))();
  return protocol witness for Call.bluetoothAudioFormat.modify in conformance PlaceholderCall;
}

uint64_t protocol witness for Call.isUplinkMuted.getter in conformance PlaceholderCall()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t protocol witness for Call.isUplinkMuted.setter in conformance PlaceholderCall()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t (*protocol witness for Call.isUplinkMuted.modify in conformance PlaceholderCall(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(*(_QWORD *)v1 + 280))();
  return protocol witness for Call.bluetoothAudioFormat.modify in conformance PlaceholderCall;
}

uint64_t protocol witness for Call.shouldSuppressRingtone.getter in conformance PlaceholderCall()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

uint64_t protocol witness for Call.shouldSuppressRingtone.setter in conformance PlaceholderCall()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t (*protocol witness for Call.shouldSuppressRingtone.modify in conformance PlaceholderCall(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(*(_QWORD *)v1 + 304))();
  return protocol witness for Call.bluetoothAudioFormat.modify in conformance PlaceholderCall;
}

void protocol witness for CustomStringConvertible.description.getter in conformance PlaceholderCall()
{
  PlaceholderCall.description.getter();
}

unint64_t type metadata accessor for TUConversationMember()
{
  unint64_t result;

  result = lazy cache variable for type metadata for TUConversationMember;
  if (!lazy cache variable for type metadata for TUConversationMember)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
  }
  return result;
}

uint64_t specialized LazySequence<>.count.getter(uint64_t a1)
{
  if ((a1 & 0xC000000000000001) != 0)
    return __CocoaSet.count.getter();
  else
    return *(_QWORD *)(a1 + 16);
}

unint64_t lazy protocol witness table accessor for type PlaceholderCall.Purpose and conformance PlaceholderCall.Purpose()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PlaceholderCall.Purpose and conformance PlaceholderCall.Purpose;
  if (!lazy protocol witness table cache variable for type PlaceholderCall.Purpose and conformance PlaceholderCall.Purpose)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for PlaceholderCall.Purpose, &type metadata for PlaceholderCall.Purpose);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PlaceholderCall.Purpose and conformance PlaceholderCall.Purpose);
  }
  return result;
}

void instantiation function for generic protocol witness table for PlaceholderCall(uint64_t a1)
{
  uint64_t v2;

  _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type PlaceholderCall and conformance PlaceholderCall, (uint64_t (*)(uint64_t))type metadata accessor for PlaceholderCall, (uint64_t)&protocol conformance descriptor for PlaceholderCall);
  *(_QWORD *)(a1 + 16) = v2;
}

uint64_t type metadata accessor for PlaceholderCall()
{
  uint64_t result;

  result = type metadata singleton initialization cache for PlaceholderCall;
  if (!type metadata singleton initialization cache for PlaceholderCall)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BD3B5F84()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  v1 = (*(uint64_t (**)(void))(v0 + 160))();
  OUTLINED_FUNCTION_68_0(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD3B5FA8(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_31_5(a1);
  (*(void (**)(uint64_t))(v2 + 168))(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD3B5FC8()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))(v1 + 192))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD3B5FEC(_QWORD *a1, uint64_t a2)
{
  (*(void (**)(_QWORD))(**(_QWORD **)a2 + 200))(*a1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD3B6014()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  v1 = (*(uint64_t (**)(void))(v0 + 216))();
  OUTLINED_FUNCTION_68_0(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD3B6038(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_31_5(a1);
  (*(void (**)(uint64_t))(v2 + 224))(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD3B6058()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  v1 = (*(uint64_t (**)(void))(v0 + 240))();
  OUTLINED_FUNCTION_68_0(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD3B607C(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_31_5(a1);
  (*(void (**)(uint64_t))(v2 + 248))(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD3B609C()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  v1 = (*(uint64_t (**)(void))(v0 + 264))();
  OUTLINED_FUNCTION_68_0(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD3B60C0(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_31_5(a1);
  (*(void (**)(uint64_t))(v2 + 272))(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD3B60E0()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  v1 = (*(uint64_t (**)(void))(v0 + 288))();
  OUTLINED_FUNCTION_68_0(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD3B6104(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_31_5(a1);
  (*(void (**)(uint64_t))(v2 + 296))(v1);
  OUTLINED_FUNCTION_0();
}

uint64_t ObjC metadata update function for PlaceholderCall()
{
  return type metadata accessor for PlaceholderCall();
}

uint64_t type metadata completion function for PlaceholderCall()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for PlaceholderCall()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PlaceholderCall.__allocating_init(for:placeholderCallCenter:purpose:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of PlaceholderCall.willSetAVModeSoon.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of PlaceholderCall.willSetAVModeSoon.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of PlaceholderCall.willSetAVModeSoon.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of PlaceholderCall.desiredAVMode.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of PlaceholderCall.bluetoothAudioFormat.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of PlaceholderCall.bluetoothAudioFormat.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of PlaceholderCall.bluetoothAudioFormat.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of PlaceholderCall.isSendingVideo.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of PlaceholderCall.isSendingVideo.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of PlaceholderCall.isSendingVideo.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of PlaceholderCall.isSharingScreen.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of PlaceholderCall.isSharingScreen.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of PlaceholderCall.isSharingScreen.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of PlaceholderCall.isUplinkMuted.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of PlaceholderCall.isUplinkMuted.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of PlaceholderCall.isUplinkMuted.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of PlaceholderCall.shouldSuppressRingtone.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

uint64_t dispatch thunk of PlaceholderCall.shouldSuppressRingtone.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t dispatch thunk of PlaceholderCall.shouldSuppressRingtone.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
}

uint64_t storeEnumTagSinglePayload for PlaceholderCall.Purpose(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1BD3B6310 + 4 * byte_1BD65C31A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1BD3B6344 + 4 * byte_1BD65C315[v4]))();
}

uint64_t sub_1BD3B6344(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD3B634C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD3B6354);
  return result;
}

uint64_t sub_1BD3B6360(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD3B6368);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1BD3B636C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD3B6374(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PlaceholderCall.Purpose()
{
  return &type metadata for PlaceholderCall.Purpose;
}

_QWORD *PlatformFeatureChecker.shared.unsafeMutableAddressor()
{
  if (one-time initialization token for shared != -1)
    swift_once();
  return static PlatformFeatureChecker.shared;
}

uint64_t iPadFeatureSupportChecker.__allocating_init()()
{
  uint64_t result;

  result = OUTLINED_FUNCTION_1_123();
  *(_BYTE *)(result + 16) = 1;
  return result;
}

void static PlatformFeatureChecker.shared.getter(uint64_t a1@<X8>)
{
  if (one-time initialization token for shared != -1)
    swift_once();
  OUTLINED_FUNCTION_2_0();
  outlined init with copy of IDSLookupManager((uint64_t)static PlatformFeatureChecker.shared, a1);
  OUTLINED_FUNCTION_32();
}

void static PlatformFeatureChecker.shared.setter(uint64_t *a1)
{
  if (one-time initialization token for shared != -1)
    swift_once();
  OUTLINED_FUNCTION_2_0();
  __swift_assign_boxed_opaque_existential_1(static PlatformFeatureChecker.shared, a1);
  swift_endAccess();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  OUTLINED_FUNCTION_32();
}

uint64_t (*static PlatformFeatureChecker.shared.modify())()
{
  if (one-time initialization token for shared != -1)
    swift_once();
  OUTLINED_FUNCTION_2_0();
  return CallRecordingPillViewController.cancellable.modify;
}

uint64_t PlatformFeatureChecker.__deallocating_deinit()
{
  return OUTLINED_FUNCTION_0_129();
}

uint64_t PlatformFeatureChecker.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t iPadFeatureSupportChecker.videoMessagingSupported.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t iPadFeatureSupportChecker.__deallocating_deinit()
{
  return OUTLINED_FUNCTION_0_129();
}

uint64_t iPadFeatureSupportChecker.init()()
{
  uint64_t v0;
  uint64_t result;

  result = v0;
  *(_BYTE *)(v0 + 16) = 1;
  return result;
}

uint64_t protocol witness for PlatformFeatureSupportChecking.videoMessagingSupported.getter in conformance iPadFeatureSupportChecker()
{
  uint64_t v0;

  return *(unsigned __int8 *)(*(_QWORD *)v0 + 16);
}

uint64_t type metadata accessor for PlatformFeatureChecker()
{
  return objc_opt_self();
}

uint64_t method lookup function for PlatformFeatureChecker()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PlatformFeatureChecker.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of PlatformFeatureSupportChecking.videoMessagingSupported.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t type metadata accessor for iPhoneFeatureSupportChecker()
{
  return objc_opt_self();
}

uint64_t method lookup function for iPhoneFeatureSupportChecker()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for iPadFeatureSupportChecker()
{
  return objc_opt_self();
}

uint64_t method lookup function for iPadFeatureSupportChecker()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of iPadFeatureSupportChecker.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_1BD3B66C4()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t RecentsListViewController.tipKitDismissTip(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Tips.InvalidationReason?);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_24_51();
  OUTLINED_FUNCTION_40_44();
  v5 = OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_251();
  outlined init with copy of Tips.InvalidationReason?(a1, (uint64_t)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v7 = swift_allocObject();
  outlined init with take of Tips.InvalidationReason?((uint64_t)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6);
  *(_QWORD *)(v7 + ((v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8)) = v5;
  swift_retain();
  dispatch thunk of TaskQueue.async(_:)();
  swift_release();
  OUTLINED_FUNCTION_19();
  return OUTLINED_FUNCTION_43();
}

Swift::Void __swiftcall RecentsListViewController.tipKitStopObservation()()
{
  RecentsListViewController.tipKitStartObservation()();
}

uint64_t RecentsListViewController.tipKitStartObservation()()
{
  OUTLINED_FUNCTION_24_51();
  OUTLINED_FUNCTION_40_44();
  OUTLINED_FUNCTION_7_0();
  swift_unknownObjectWeakInit();
  swift_retain();
  dispatch thunk of TaskQueue.async(_:)();
  OUTLINED_FUNCTION_43();
  return swift_release_n();
}

uint64_t thunk for @escaping @callee_guaranteed @Sendable @async () -> ()(int *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))((char *)a1 + *a1);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  OUTLINED_FUNCTION_30_9(v2, (uint64_t)thunk for @escaping @callee_guaranteed @Sendable @async () -> ());
  return OUTLINED_FUNCTION_16(v4);
}

uint64_t thunk for @escaping @callee_guaranteed @Sendable @async () -> ()()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_0_2();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_20();
  return OUTLINED_FUNCTION_16(v0);
}

uint64_t closure #1 in RecentsListViewController.tipKitStartObservation()(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;

  v1[5] = a1;
  v2 = type metadata accessor for FaceTimeLinkTip();
  v1[6] = v2;
  v1[7] = *(_QWORD *)(v2 - 8);
  v1[8] = swift_task_alloc();
  v1[9] = type metadata accessor for MainActor();
  v1[10] = static MainActor.shared.getter();
  type metadata accessor for TPTipsHelper();
  v3 = (_QWORD *)swift_task_alloc();
  v1[11] = v3;
  *v3 = v1;
  v3[1] = closure #1 in RecentsListViewController.tipKitStartObservation();
  return static TPTipsHelper.shared.getter();
}

uint64_t closure #1 in RecentsListViewController.tipKitStartObservation()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_15_15();
  OUTLINED_FUNCTION_35_37();
  v0[12] = v1;
  OUTLINED_FUNCTION_37_20();
  dispatch thunk of Actor.unownedExecutor.getter();
  OUTLINED_FUNCTION_116();
  v0[13] = v2;
  v0[14] = v3;
  return OUTLINED_FUNCTION_1_3();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(void **)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 40) + 16;
  dispatch thunk of TPTipsHelper.setup()();

  OUTLINED_FUNCTION_1();
  v3 = MEMORY[0x1C3B752C0](v2);
  *(_QWORD *)(v0 + 120) = v3;
  if (v3)
  {
    FaceTimeLinkTip.init()();
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 128) = v4;
    *v4 = v0;
    v4[1] = closure #1 in RecentsListViewController.tipKitStartObservation();
    return specialized RecentsListViewController.observeTip<A>(_:)(*(_QWORD *)(v0 + 64));
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  OUTLINED_FUNCTION_15_15();
  v1 = (void *)v0[15];
  v3 = v0[7];
  v2 = v0[8];
  v4 = v0[6];
  OUTLINED_FUNCTION_9_7(v5);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return OUTLINED_FUNCTION_26_47();
}

{
  uint64_t (*v0)(void);

  swift_release();
  swift_task_dealloc();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_20();
  return OUTLINED_FUNCTION_16(v0);
}

uint64_t partial apply for closure #1 in RecentsListViewController.tipKitStartObservation()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_26_55(v1, (uint64_t)partial apply for closure #1 in VideoMessageInboxController.updateCallItems());
  return closure #1 in RecentsListViewController.tipKitStartObservation()(v2);
}

uint64_t specialized RecentsListViewController.observeTip<A>(_:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2[7] = a1;
  v2[8] = v1;
  v3 = type metadata accessor for TPTipsHelper.Entry.Kind();
  v2[9] = v3;
  v2[10] = *(_QWORD *)(v3 - 8);
  v2[11] = swift_task_alloc();
  v4 = type metadata accessor for TPTipsHelper.Entry();
  v2[12] = v4;
  v2[13] = *(_QWORD *)(v4 - 8);
  v2[14] = swift_task_alloc();
  v5 = type metadata accessor for FaceTimeLinkTip();
  v2[15] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[16] = v6;
  v2[17] = *(_QWORD *)(v6 + 64);
  v2[18] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  v2[19] = swift_task_alloc();
  v2[20] = type metadata accessor for MainActor();
  v2[21] = static MainActor.shared.getter();
  v2[22] = dispatch thunk of Actor.unownedExecutor.getter();
  v2[23] = v7;
  return swift_task_switch();
}

uint64_t specialized RecentsListViewController.observeTip<A>(_:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v1 = v0[19];
  v3 = v0[17];
  v2 = v0[18];
  v4 = v0[16];
  v5 = v0[7];
  v6 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v6);
  v7 = OUTLINED_FUNCTION_7_0();
  swift_unknownObjectWeakInit();
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v0[24] = v8;
  OUTLINED_FUNCTION_291(v2, v5, v8);
  swift_retain();
  v9 = static MainActor.shared.getter();
  v10 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v11 = swift_allocObject();
  v12 = MEMORY[0x1E0DF06E8];
  *(_QWORD *)(v11 + 16) = v9;
  *(_QWORD *)(v11 + 24) = v12;
  OUTLINED_FUNCTION_291(v11 + v10, v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32));
  *(_QWORD *)(v11 + ((v3 + v10 + 7) & 0xFFFFFFFFFFFFFFF8)) = v7;
  swift_release();
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
  v0[25] = v13;
  OUTLINED_FUNCTION_24_51();
  v14 = (_QWORD *)swift_task_alloc();
  v0[26] = v14;
  OUTLINED_FUNCTION_30_9(v14, (uint64_t)specialized RecentsListViewController.observeTip<A>(_:));
  return static TPTipsHelper.shared.getter();
}

{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_15_4();
  OUTLINED_FUNCTION_35_37();
  *(_QWORD *)(v0 + 216) = v1;
  OUTLINED_FUNCTION_37_20();
  return OUTLINED_FUNCTION_4_4();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *boxed_opaque_existential_1;
  void (*v11)(uint64_t *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;

  v1 = *(void **)(v0 + 216);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 120);
  v11 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v0 + 192);
  v12 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 88);
  v13 = *(_QWORD *)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 72);
  v6 = *(_QWORD *)(v0 + 80);
  v7 = *(_QWORD *)(v0 + 56);
  swift_release();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 104))(v4, *MEMORY[0x1E0DBCF88], v5);
  *(_QWORD *)(v0 + 40) = v3;
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type FaceTimeLinkTip and conformance FaceTimeLinkTip, (void (*)(uint64_t))MEMORY[0x1E0DBD008]);
  *(_QWORD *)(v0 + 48) = v8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 16));
  v11(boxed_opaque_existential_1, v7, v3);
  swift_retain();
  TPTipsHelper.Entry.init(_:tip:observationTask:)();
  dispatch thunk of TPTipsHelper.addEntry(_:)();

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v2, v13);
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_81_0();
  OUTLINED_FUNCTION_12();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t closure #1 in RecentsListViewController.tipKitStopObservation()(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[5] = a1;
  v2 = type metadata accessor for TPTipsHelper.Entry.Kind();
  v1[6] = v2;
  v1[7] = *(_QWORD *)(v2 - 8);
  v1[8] = swift_task_alloc();
  v1[9] = type metadata accessor for MainActor();
  v1[10] = static MainActor.shared.getter();
  v1[11] = dispatch thunk of Actor.unownedExecutor.getter();
  v1[12] = v3;
  return swift_task_switch();
}

uint64_t closure #1 in RecentsListViewController.tipKitStopObservation()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v5;

  v1 = v0[5] + 16;
  OUTLINED_FUNCTION_1();
  v2 = MEMORY[0x1C3B752C0](v1);
  v0[13] = v2;
  if (v2)
  {
    v3 = (_QWORD *)swift_task_alloc();
    v0[14] = v3;
    OUTLINED_FUNCTION_30_9(v3, (uint64_t)closure #1 in RecentsListViewController.tipKitStopObservation());
    return RecentsListViewController.dismissPopover()();
  }
  else
  {
    type metadata accessor for TPTipsHelper();
    v5 = (_QWORD *)swift_task_alloc();
    v0[15] = v5;
    OUTLINED_FUNCTION_30_9(v5, (uint64_t)closure #1 in RecentsListViewController.tipKitStopObservation());
    return static TPTipsHelper.shared.getter();
  }
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  _QWORD *v3;
  uint64_t v5;

  v1 = *v0;
  v5 = v1;
  v2 = *(void **)(v1 + 104);
  OUTLINED_FUNCTION_9_7(&v5);

  OUTLINED_FUNCTION_24_51();
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 120) = v3;
  OUTLINED_FUNCTION_30_9(v3, (uint64_t)closure #1 in RecentsListViewController.tipKitStopObservation());
  return static TPTipsHelper.shared.getter();
}

{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_15_4();
  OUTLINED_FUNCTION_35_37();
  *(_QWORD *)(v0 + 128) = v1;
  OUTLINED_FUNCTION_37_20();
  return OUTLINED_FUNCTION_4_4();
}

{
  _QWORD *v0;
  void *v1;
  uint64_t v2;

  v1 = (void *)v0[16];
  v2 = v0[7];
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v2 + 104))(v0[8], *MEMORY[0x1E0DBCF88], v0[6]);
  dispatch thunk of TPTipsHelper.removeEntries(_:)();

  OUTLINED_FUNCTION_4_41(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  return OUTLINED_FUNCTION_0_6();
}

{
  uint64_t v0;

  *(_QWORD *)(v0 + 136) = static MainActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  return OUTLINED_FUNCTION_0_6();
}

{
  uint64_t v0;

  swift_release();
  if (one-time initialization token for tipUserInfo != -1)
    swift_once();
  type metadata accessor for RecentsListViewController.FaceTimeLinkTipUserInfo();
  v0 = OUTLINED_FUNCTION_7_0();
  *(_QWORD *)(v0 + 16) = 0;
  static RecentsListViewController.tipUserInfo = (_UNKNOWN *)v0;
  swift_release();
  return OUTLINED_FUNCTION_4_4();
}

{
  uint64_t (*v0)(void);

  swift_release();
  OUTLINED_FUNCTION_29_0();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_20();
  return OUTLINED_FUNCTION_16(v0);
}

uint64_t RecentsListViewController.dismissPopover()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[2] = v0;
  v1[3] = type metadata accessor for MainActor();
  v1[4] = static MainActor.shared.getter();
  v1[5] = dispatch thunk of Actor.unownedExecutor.getter();
  v1[6] = v2;
  return swift_task_switch();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  _QWORD *v6;

  RecentsListViewController.tipPopoverController.getter();
  *(_QWORD *)(v0 + 56) = v1;
  if (v1)
  {
    v2 = v1;
    v3 = (void *)OUTLINED_FUNCTION_37_43(**(_QWORD **)(v0 + 16));
    v4 = objc_msgSend(v3, sel_collectionViewLayout);

    objc_msgSend(v4, sel_invalidateLayout);
    *(_QWORD *)(v0 + 64) = static MainActor.shared.getter();
    v5 = swift_task_alloc();
    *(_QWORD *)(v0 + 72) = v5;
    *(_QWORD *)(v5 + 16) = v2;
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 80) = v6;
    *v6 = v0;
    v6[1] = RecentsListViewController.dismissPopover();
    return OUTLINED_FUNCTION_19_63();
  }
  else
  {
    swift_release();
    return OUTLINED_FUNCTION_1_8(*(uint64_t (**)(void))(v0 + 8));
  }
}

{
  _QWORD *v0;

  OUTLINED_FUNCTION_15_15();
  OUTLINED_FUNCTION_9_7(v0);
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_29_0();
  return OUTLINED_FUNCTION_1_3();
}

{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 56);
  swift_release();

  return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t closure #1 in RecentsListViewController.tipKitDismissTip(_:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[5] = a1;
  v2[6] = a2;
  v2[7] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Tips.InvalidationReason?, Tips.InvalidationReason?));
  v2[8] = swift_task_alloc();
  v3 = type metadata accessor for FaceTimeLinkTip();
  v2[9] = v3;
  v2[10] = *(_QWORD *)(v3 - 8);
  v2[11] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Tips.InvalidationReason?);
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  v4 = type metadata accessor for Tips.InvalidationReason();
  v2[15] = v4;
  v2[16] = *(_QWORD *)(v4 - 8);
  v2[17] = swift_task_alloc();
  v2[18] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[19] = static MainActor.shared.getter();
  v2[20] = dispatch thunk of Actor.unownedExecutor.getter();
  v2[21] = v5;
  return swift_task_switch();
}

uint64_t closure #1 in RecentsListViewController.tipKitDismissTip(_:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  void (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t (*v32)(void);

  v2 = v0[14];
  v1 = v0[15];
  outlined init with copy of Tips.InvalidationReason?(v0[5], v2);
  if (__swift_getEnumTagSinglePayload(v2, 1, v1) == 1)
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?(v0[14], (uint64_t *)&demangling cache variable for type metadata for Tips.InvalidationReason?);
  }
  else
  {
    v3 = v0[18];
    v4 = v0[15];
    v5 = v0[16];
    v7 = v0[10];
    v6 = v0[11];
    v8 = v0[9];
    OUTLINED_FUNCTION_291(v3, v0[14], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 32));
    FaceTimeLinkTip.init()();
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type FaceTimeLinkTip and conformance FaceTimeLinkTip, (void (*)(uint64_t))MEMORY[0x1E0DBD008]);
    Tip.invalidate(reason:)();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  }
  v9 = v0[15];
  v10 = v0[13];
  v11 = v0[7];
  v12 = v0[8];
  v13 = v0[5];
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v0[16] + 104))(v10, *MEMORY[0x1E0CE9610], v9);
  __swift_storeEnumTagSinglePayload(v10, 0, 1, v9);
  v14 = v12 + *(int *)(v11 + 48);
  outlined init with copy of Tips.InvalidationReason?(v13, v12);
  outlined init with copy of Tips.InvalidationReason?(v10, v14);
  v15 = OUTLINED_FUNCTION_4_40(v12);
  v16 = v0[15];
  if (v15 != 1)
  {
    outlined init with copy of Tips.InvalidationReason?(v0[8], v0[12]);
    if (__swift_getEnumTagSinglePayload(v14, 1, v16) != 1)
    {
      v21 = v0[16];
      v20 = v0[17];
      v22 = v0[15];
      v24 = v0[12];
      v23 = v0[13];
      v25 = v0[8];
      OUTLINED_FUNCTION_291(v20, v14, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 32));
      lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type Tips.InvalidationReason and conformance Tips.InvalidationReason, (void (*)(uint64_t))MEMORY[0x1E0CE9630]);
      v26 = dispatch thunk of static Equatable.== infix(_:_:)();
      v27 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
      v27(v20, v22);
      outlined destroy of OS_dispatch_queue.SchedulerOptions?(v23, (uint64_t *)&demangling cache variable for type metadata for Tips.InvalidationReason?);
      v27(v24, v22);
      outlined destroy of OS_dispatch_queue.SchedulerOptions?(v25, (uint64_t *)&demangling cache variable for type metadata for Tips.InvalidationReason?);
      if ((v26 & 1) == 0)
        goto LABEL_12;
      goto LABEL_11;
    }
    v17 = v0[15];
    v18 = v0[16];
    v19 = v0[12];
    outlined destroy of OS_dispatch_queue.SchedulerOptions?(v0[13], (uint64_t *)&demangling cache variable for type metadata for Tips.InvalidationReason?);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v19, v17);
LABEL_9:
    outlined destroy of OS_dispatch_queue.SchedulerOptions?(v0[8], &demangling cache variable for type metadata for (Tips.InvalidationReason?, Tips.InvalidationReason?));
    goto LABEL_12;
  }
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v0[13], (uint64_t *)&demangling cache variable for type metadata for Tips.InvalidationReason?);
  if (__swift_getEnumTagSinglePayload(v14, 1, v16) != 1)
    goto LABEL_9;
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v0[8], (uint64_t *)&demangling cache variable for type metadata for Tips.InvalidationReason?);
LABEL_11:
  objc_msgSend((id)objc_opt_self(), sel_logAnalyticsEventFaceTimeLink);
LABEL_12:
  v28 = v0[6] + 16;
  OUTLINED_FUNCTION_1();
  v29 = MEMORY[0x1C3B752C0](v28);
  v0[22] = v29;
  if (v29)
  {
    v30 = (_QWORD *)swift_task_alloc();
    v0[23] = (uint64_t)v30;
    OUTLINED_FUNCTION_30_9(v30, (uint64_t)closure #1 in RecentsListViewController.tipKitDismissTip(_:));
    return OUTLINED_FUNCTION_7_102();
  }
  else
  {
    swift_release();
    OUTLINED_FUNCTION_25_53();
    OUTLINED_FUNCTION_29_0();
    OUTLINED_FUNCTION_12();
    OUTLINED_FUNCTION_81_0();
    OUTLINED_FUNCTION_625();
    OUTLINED_FUNCTION_633();
    OUTLINED_FUNCTION_575();
    v32 = (uint64_t (*)(void))OUTLINED_FUNCTION_20();
    return OUTLINED_FUNCTION_1_8(v32);
  }
}

{
  uint64_t v0;
  void *v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_15_4();
  v1 = *(void **)(v0 + 176);
  OUTLINED_FUNCTION_9_7(v2);

  return OUTLINED_FUNCTION_0_6();
}

{
  uint64_t (*v0)(void);

  swift_release();
  OUTLINED_FUNCTION_25_53();
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_81_0();
  OUTLINED_FUNCTION_625();
  OUTLINED_FUNCTION_633();
  OUTLINED_FUNCTION_575();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_20();
  return OUTLINED_FUNCTION_1_8(v0);
}

uint64_t closure #1 in RecentsListViewController.tipKitInvalidateLayout()(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = a1;
  type metadata accessor for MainActor();
  *(_QWORD *)(v1 + 48) = static MainActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  return swift_task_switch();
}

uint64_t closure #1 in RecentsListViewController.tipKitInvalidateLayout()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;

  v1 = *(_QWORD *)(v0 + 40);
  swift_release();
  OUTLINED_FUNCTION_1();
  v2 = MEMORY[0x1C3B752C0](v1 + 16);
  if (v2)
  {
    v3 = (uint64_t *)v2;
    RecentsListViewController.tipPopoverController.getter();
    v5 = v4;

    if (v5)
    {
      v6 = (void *)OUTLINED_FUNCTION_37_43(*v3);
      v7 = objc_msgSend(v6, sel_collectionViewLayout);

      objc_msgSend(v7, sel_invalidateLayout);
    }

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t partial apply for closure #1 in RecentsListViewController.tipKitInvalidateLayout()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_26_55(v1, (uint64_t)partial apply for closure #2 in CallScreeningEndingState.enteredState());
  return closure #1 in RecentsListViewController.tipKitInvalidateLayout()(v2);
}

uint64_t sub_1BD3B7AF4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t outlined init with copy of Tips.InvalidationReason?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Tips.InvalidationReason?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BD3B7B60()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Tips.InvalidationReason?)
                 - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = type metadata accessor for Tips.InvalidationReason();
  if (!OUTLINED_FUNCTION_4_40(v0 + v2))
    OUTLINED_FUNCTION_4_41(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8));
  swift_release();
  return swift_deallocObject();
}

uint64_t outlined init with take of Tips.InvalidationReason?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Tips.InvalidationReason?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t partial apply for closure #1 in RecentsListViewController.tipKitDismissTip(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Tips.InvalidationReason?);
  OUTLINED_FUNCTION_11_19();
  v3 = v0 + v2;
  v5 = *(_QWORD *)(v0 + v4);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  OUTLINED_FUNCTION_30_9(v6, (uint64_t)partial apply for closure #2 in CallScreeningEndingState.enteredState());
  return closure #1 in RecentsListViewController.tipKitDismissTip(_:)(v3, v5);
}

uint64_t partial apply for closure #1 in RecentsListViewController.tipKitStopObservation()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_26_55(v1, (uint64_t)partial apply for closure #1 in VideoMessageInboxController.updateCallItems());
  return closure #1 in RecentsListViewController.tipKitStopObservation()(v2);
}

uint64_t specialized closure #1 in RecentsListViewController.observeTip<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5[9] = a4;
  v5[10] = a5;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Tips.Status?);
  v5[11] = swift_task_alloc();
  v6 = type metadata accessor for Tips.Status();
  v5[12] = v6;
  v5[13] = *(_QWORD *)(v6 - 8);
  v5[14] = swift_task_alloc();
  v5[15] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AsyncStream<Tips.Status>);
  v5[16] = swift_task_alloc();
  v5[17] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncStream<Tips.Status>.Iterator);
  v5[18] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AsyncMapSequence<AsyncStream<Tips.Status>, Bool>);
  v5[19] = v7;
  v5[20] = *(_QWORD *)(v7 - 8);
  v5[21] = swift_task_alloc();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncMapSequence<AsyncStream<Tips.Status>, Bool>.Iterator);
  v5[22] = v8;
  v5[23] = *(_QWORD *)(v8 - 8);
  v5[24] = swift_task_alloc();
  v5[25] = swift_task_alloc();
  v5[26] = type metadata accessor for MainActor();
  v5[27] = static MainActor.shared.getter();
  v5[28] = dispatch thunk of Actor.unownedExecutor.getter();
  v5[29] = v9;
  return swift_task_switch();
}

uint64_t specialized closure #1 in RecentsListViewController.observeTip<A>(_:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0[20];
  v2 = v0[21];
  v3 = v0[19];
  OUTLINED_FUNCTION_43_46();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type FaceTimeLinkTip and conformance FaceTimeLinkTip, (void (*)(uint64_t))MEMORY[0x1E0DBD008]);
  Tip.shouldDisplayUpdates.getter();
  AsyncMapSequence.base.getter();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(lazy protocol witness table cache variable for type AsyncStream<Tips.Status> and conformance AsyncStream<A>, (uint64_t *)&demangling cache variable for type metadata for AsyncStream<Tips.Status>);
  dispatch thunk of AsyncSequence.makeAsyncIterator()();
  AsyncMapSequence.Iterator.transform.getter();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v3);
  AsyncMapSequence.Iterator.init(_:transform:)();
  OUTLINED_FUNCTION_1();
  v4 = OUTLINED_FUNCTION_38_49();
  v0[30] = v4;
  if (v4)
  {
    OUTLINED_FUNCTION_23_59();
    dispatch thunk of Actor.unownedExecutor.getter();
    OUTLINED_FUNCTION_116();
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v0[31] = v6;
  v0[32] = v5;
  return swift_task_switch();
}

{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 264) = AsyncMapSequence.Iterator.baseIterator.modify();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type AsyncStream<Tips.Status>.Iterator and conformance AsyncStream<A>.Iterator, &demangling cache variable for type metadata for AsyncStream<Tips.Status>.Iterator);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 272) = v1;
  *v1 = v0;
  v1[1] = specialized closure #1 in RecentsListViewController.observeTip<A>(_:);
  return _sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;

  v2 = *v1;
  v4 = *v1;
  OUTLINED_FUNCTION_9_7(&v4);
  if (!v0)
    (*(void (**)(uint64_t, _QWORD))(v2 + 264))(v2 + 16, 0);
  return OUTLINED_FUNCTION_0_6();
}

{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  _QWORD *v11;
  int *v12;

  v2 = v0[11];
  v1 = v0[12];
  if (__swift_getEnumTagSinglePayload(v2, 1, v1) == 1)
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?(v2, &demangling cache variable for type metadata for Tips.Status?);
    OUTLINED_FUNCTION_19();
    return swift_task_switch();
  }
  else
  {
    v5 = v0[24];
    v4 = v0[25];
    v6 = v0[22];
    v7 = v0[23];
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v0[13] + 32))(v0[14], v2, v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v5, v4, v6);
    v8 = (int *)AsyncMapSequence.Iterator.transform.getter();
    v0[35] = v9;
    v10 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v0[36] = v10;
    v10(v5, v6);
    v12 = (int *)((char *)v8 + *v8);
    v11 = (_QWORD *)swift_task_alloc();
    v0[37] = v11;
    *v11 = v0;
    v11[1] = specialized closure #1 in RecentsListViewController.observeTip<A>(_:);
    return ((uint64_t (*)(_QWORD *, _QWORD))v12)(v0 + 44, v0[14]);
  }
}

{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 264))(v0 + 16, 1);
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v1 = *v0;
  v4 = v1;
  v2 = *(_QWORD *)(v1 + 104);
  OUTLINED_FUNCTION_9_7(&v4);
  OUTLINED_FUNCTION_43();
  *(_BYTE *)(v1 + 353) = *(_BYTE *)(v1 + 352);
  OUTLINED_FUNCTION_4_41(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  return OUTLINED_FUNCTION_26_47();
}

{
  swift_release();
  return OUTLINED_FUNCTION_4_4();
}

{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  char v6;
  uint64_t v7;
  void *v8;
  char v9;
  void *v10;
  void *v11;
  _QWORD *v12;
  id v14;
  char v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  _QWORD *v20;

  v1 = (_QWORD *)MEMORY[0x1C3B752C0](*(_QWORD *)(v0 + 80) + 16);
  *(_QWORD *)(v0 + 304) = v1;
  if (!v1)
  {
    OUTLINED_FUNCTION_5_109();
    goto LABEL_9;
  }
  v2 = v1;
  if ((*(_BYTE *)(v0 + 353) & 1) == 0)
  {
    v12 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 320) = v12;
    OUTLINED_FUNCTION_30_9(v12, (uint64_t)specialized closure #1 in RecentsListViewController.observeTip<A>(_:));
    return OUTLINED_FUNCTION_7_102();
  }
  v3 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v4 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x2D8))();
  *(_QWORD *)(v0 + 312) = v5;
  if (!v5)
  {
    OUTLINED_FUNCTION_5_109();

    goto LABEL_9;
  }
  v7 = v4;
  v8 = v5;
  v9 = v6;
  RecentsListViewController.tipPopoverController.getter();
  v11 = v10;

  if (v11)
  {
    OUTLINED_FUNCTION_5_109();

LABEL_9:
    OUTLINED_FUNCTION_43();
LABEL_10:
    OUTLINED_FUNCTION_12_91();
    OUTLINED_FUNCTION_29_0();
    OUTLINED_FUNCTION_12();
    OUTLINED_FUNCTION_81_0();
    OUTLINED_FUNCTION_625();
    OUTLINED_FUNCTION_633();
    OUTLINED_FUNCTION_575();
    return OUTLINED_FUNCTION_1_8(*(uint64_t (**)(void))(v0 + 8));
  }
  v14 = objc_msgSend(v8, sel_window);

  if (!v14 || (v15 = v9 & 1, (v9 & 1) == 0))
  {
    OUTLINED_FUNCTION_5_109();

    OUTLINED_FUNCTION_43();
    goto LABEL_10;
  }
  v16 = *(_QWORD *)(v0 + 72);
  v17 = (void *)(*(uint64_t (**)(void))((*v3 & *v2) + 0x340))();
  v18 = objc_msgSend(v17, sel_collectionViewLayout);

  objc_msgSend(v18, sel_invalidateLayout);
  *(_QWORD *)(v0 + 328) = static MainActor.shared.getter();
  v19 = swift_task_alloc();
  *(_QWORD *)(v0 + 336) = v19;
  *(_QWORD *)(v19 + 16) = v16;
  *(_QWORD *)(v19 + 24) = v7;
  *(_QWORD *)(v19 + 32) = v8;
  *(_BYTE *)(v19 + 40) = v15;
  *(_QWORD *)(v19 + 48) = v2;
  v20 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 344) = v20;
  *v20 = v0;
  v20[1] = specialized closure #1 in RecentsListViewController.observeTip<A>(_:);
  return OUTLINED_FUNCTION_19_63();
}

{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 184) + 8))(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 176));
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_12_91();
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_81_0();
  OUTLINED_FUNCTION_625();
  OUTLINED_FUNCTION_633();
  OUTLINED_FUNCTION_575();
  return OUTLINED_FUNCTION_1_8(*(uint64_t (**)(void))(v0 + 8));
}

{
  _QWORD *v0;

  OUTLINED_FUNCTION_15_4();
  OUTLINED_FUNCTION_9_7(v0);
  return OUTLINED_FUNCTION_4_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_38_49();
  *(_QWORD *)(v0 + 240) = v1;
  if (v1)
  {
    OUTLINED_FUNCTION_23_59();
    dispatch thunk of Actor.unownedExecutor.getter();
    OUTLINED_FUNCTION_116();
  }
  else
  {
    v3 = 0;
    v2 = 0;
  }
  *(_QWORD *)(v0 + 248) = v3;
  *(_QWORD *)(v0 + 256) = v2;
  return OUTLINED_FUNCTION_4_4();
}

{
  _QWORD *v0;

  OUTLINED_FUNCTION_15_15();
  OUTLINED_FUNCTION_9_7(v0);
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_29_0();
  return OUTLINED_FUNCTION_1_3();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_38_49();
  *(_QWORD *)(v0 + 240) = v1;
  if (v1)
  {
    OUTLINED_FUNCTION_23_59();
    dispatch thunk of Actor.unownedExecutor.getter();
    OUTLINED_FUNCTION_116();
  }
  else
  {
    v3 = 0;
    v2 = 0;
  }
  *(_QWORD *)(v0 + 248) = v3;
  *(_QWORD *)(v0 + 256) = v2;
  return OUTLINED_FUNCTION_4_4();
}

void specialized closure #1 in closure #1 in RecentsListViewController.observeTip<A>(_:)(uint64_t a1, uint64_t a2, void *a3, double a4, uint64_t a5, void *a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)();
  uint64_t *boxed_opaque_existential_1;
  id v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  Class isa;
  char **v25;
  id v26;
  void *v27;
  id v28;
  void *v29;
  void *v30;
  id v31;
  void *v32;
  unint64_t v33;
  id v34;
  NSArray v35;
  id v36;
  void *v37;
  void *v38;
  id v39;
  void *v40;
  unint64_t v41;
  uint64_t v42;
  id v43;
  NSArray v44;
  void *v45;
  id v46;
  id v47;
  id v48;
  void *v49;
  void *v50;
  uint64_t v51;
  void *v52;
  id v53;
  void *v54;
  id v55;
  unint64_t v56;
  uint64_t v57;
  void *v58;
  id v59;
  uint64_t v60;
  id v61;
  _QWORD v62[2];
  unint64_t v63;
  uint64_t v64;
  uint64_t aBlock[3];
  void *v66;
  uint64_t (*v67)();
  uint64_t v68;

  v64 = a1;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<(), Never>);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](v10);
  type metadata accessor for TipUIPopoverViewController();
  v13 = type metadata accessor for FaceTimeLinkTip();
  v66 = (void *)v13;
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type FaceTimeLinkTip and conformance FaceTimeLinkTip, (void (*)(uint64_t))MEMORY[0x1E0DBD008]);
  v67 = v14;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(aBlock);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(boxed_opaque_existential_1, a2, v13);
  v16 = a3;
  v17 = (void *)TipUIPopoverViewController.__allocating_init(_:sourceItem:actionHandler:)();
  v18 = (void *)TipUIPopoverViewController.popoverPresentationController.getter();
  if (v18)
  {
    v19 = v18;
    objc_msgSend(v18, sel_setSourceItem_, v16);

  }
  objc_msgSend(v17, sel_setPreferredContentSize_, a4, *(double *)(MEMORY[0x1E0DC4FF8] + 8));
  v20 = TipUIPopoverViewController.popoverPresentationController.getter();
  if (v20)
  {
    v21 = (void *)v20;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_1BD6443F0;
    v23 = objc_msgSend(a6, sel_view);
    if (!v23)
      goto LABEL_46;
    *(_QWORD *)(v22 + 32) = v23;
    aBlock[0] = v22;
    specialized Array._endMutation()();
    type metadata accessor for UIView();
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    objc_msgSend(v21, sel_setPassthroughViews_, isa);

  }
  v25 = &selRef_inputDevices;
  v26 = objc_msgSend(a6, sel_navigationController);
  if (v26)
  {
    v27 = v26;
    v28 = objc_msgSend(v26, sel_navigationBar);

    if (v28)
    {
      v63 = v10;
      v29 = (void *)TipUIPopoverViewController.popoverPresentationController.getter();
      if (v29)
      {
        v30 = v29;
        v31 = objc_msgSend(v29, sel_passthroughViews);
        if (!v31)
        {
          objc_msgSend(v30, sel_setPassthroughViews_, 0);

LABEL_18:
          v10 = v63;
          goto LABEL_19;
        }
        v32 = v31;
        v62[1] = type metadata accessor for UIView();
        v33 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        aBlock[0] = v33;
        if (v33 >> 62)
        {
          v59 = v28;
          swift_bridgeObjectRetain();
          v60 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (v60 < 0)
          {
            __break(1u);
            goto LABEL_44;
          }
        }
        else
        {
          v34 = v28;
        }
        specialized Array.replaceSubrange<A>(_:with:)();
        if (aBlock[0])
        {
          v35.super.isa = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
        }
        else
        {
          v35.super.isa = 0;
        }
        objc_msgSend(v30, sel_setPassthroughViews_, v35.super.isa);

      }
      goto LABEL_18;
    }
  }
LABEL_19:
  v36 = objc_msgSend(a6, sel_navigationController);
  if (!v36)
    goto LABEL_33;
  v37 = v36;
  v28 = objc_msgSend(v36, sel_toolbar);

  if (!v28)
    goto LABEL_33;
  v25 = (char **)v10;
  v38 = (void *)TipUIPopoverViewController.popoverPresentationController.getter();
  if (!v38)
    goto LABEL_31;
  v30 = v38;
  v39 = objc_msgSend(v38, sel_passthroughViews);
  if (v39)
  {
    v40 = v39;
    v63 = type metadata accessor for UIView();
    v41 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    aBlock[0] = v41;
    if (!(v41 >> 62))
    {
      v42 = *(_QWORD *)((v41 & 0xFFFFFFFFFFFFF8) + 0x10);
      v43 = v28;
LABEL_25:
      if (v42 >= 1)
      {
        specialized Array.replaceSubrange<A>(_:with:)();
        if (aBlock[0])
        {
          v44.super.isa = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
        }
        else
        {
          v44.super.isa = 0;
        }
        objc_msgSend(v30, sel_setPassthroughViews_, v44.super.isa);

LABEL_31:
        goto LABEL_32;
      }
      __break(1u);
LABEL_46:
      __break(1u);
      return;
    }
LABEL_44:
    v61 = v28;
    swift_bridgeObjectRetain();
    v42 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_25;
  }
  objc_msgSend(v30, sel_setPassthroughViews_, 0);

LABEL_32:
  v10 = (uint64_t)v25;
LABEL_33:
  v45 = (void *)objc_opt_self();
  v46 = v17;
  v47 = objc_msgSend(v45, sel_currentTraitCollection);
  v48 = objc_msgSend(v47, sel_userInterfaceStyle);

  objc_msgSend(v46, sel_setOverrideUserInterfaceStyle_, v48);
  v49 = (void *)TipUIPopoverViewController.popoverPresentationController.getter();
  if (v49)
  {
    v50 = v49;
    objc_msgSend(v49, sel_setPermittedArrowDirections_, 1);

  }
  v51 = TipUIPopoverViewController.popoverPresentationController.getter();
  if (v51)
  {
    v52 = (void *)v51;
    v53 = objc_msgSend((id)objc_opt_self(), sel_systemGray3Color);
    objc_msgSend(v52, sel_setBackgroundColor_, v53);

  }
  if (one-time initialization token for tipUserInfo != -1)
    swift_once();
  if (static RecentsListViewController.tipUserInfo)
  {
    v54 = (void *)*((_QWORD *)static RecentsListViewController.tipUserInfo + 2);
    *((_QWORD *)static RecentsListViewController.tipUserInfo + 2) = v46;
    v55 = v46;

  }
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v64, v10);
  v56 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v57 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v57 + v56, (char *)v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  v67 = partial apply for closure #1 in closure #1 in closure #1 in RecentsListViewController.observeTip<A>(_:);
  v68 = v57;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)thunk for @escaping @callee_guaranteed () -> ();
  v66 = &block_descriptor_40_1;
  v58 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(a6, sel_presentViewController_animated_completion_, v46, 1, v58);
  _Block_release(v58);

}

uint64_t closure #1 in closure #1 in closure #1 in RecentsListViewController.observeTip<A>(_:)()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<(), Never>);
  return CheckedContinuation.resume(returning:)();
}

void closure #1 in RecentsListViewController.dismissPopover()(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  _QWORD aBlock[6];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<(), Never>);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = MEMORY[0x1E0C80A78](v4);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4, v7);
  v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v9 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = partial apply for closure #1 in closure #1 in RecentsListViewController.dismissPopover();
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_71;
  v10 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(a2, sel_dismissViewControllerAnimated_completion_, 1, v10);
  _Block_release(v10);
}

uint64_t closure #1 in closure #1 in RecentsListViewController.dismissPopover()()
{
  void *v0;

  if (one-time initialization token for tipUserInfo != -1)
    swift_once();
  if (static RecentsListViewController.tipUserInfo)
  {
    v0 = (void *)*((_QWORD *)static RecentsListViewController.tipUserInfo + 2);
    *((_QWORD *)static RecentsListViewController.tipUserInfo + 2) = 0;

  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<(), Never>);
  return CheckedContinuation.resume(returning:)();
}

void partial apply for closure #1 in RecentsListViewController.dismissPopover()(uint64_t a1)
{
  uint64_t v1;

  closure #1 in RecentsListViewController.dismissPopover()(a1, *(void **)(v1 + 16));
}

uint64_t partial apply for closure #1 in closure #1 in RecentsListViewController.dismissPopover()()
{
  return partial apply for closure #1 in closure #1 in RecentsListViewController.dismissPopover()((uint64_t (*)(uint64_t))closure #1 in closure #1 in RecentsListViewController.dismissPopover());
}

uint64_t sub_1BD3B8F14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = OUTLINED_FUNCTION_43_46();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for specialized closure #1 in RecentsListViewController.observeTip<A>(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  OUTLINED_FUNCTION_43_46();
  OUTLINED_FUNCTION_11_19();
  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v7 = v1 + v6;
  v9 = *(_QWORD *)(v1 + v8);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = partial apply for closure #1 in VideoMessageInboxController.updateCallItems();
  return specialized closure #1 in RecentsListViewController.observeTip<A>(_:)(a1, v4, v5, v7, v9);
}

void partial apply for specialized closure #1 in closure #1 in RecentsListViewController.observeTip<A>(_:)(uint64_t a1)
{
  uint64_t v1;

  specialized closure #1 in closure #1 in RecentsListViewController.observeTip<A>(_:)(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 32), *(double *)(v1 + 24), *(unsigned __int8 *)(v1 + 40), *(void **)(v1 + 48));
}

uint64_t objectdestroy_19Tm_2()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<(), Never>);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in RecentsListViewController.observeTip<A>(_:)()
{
  return partial apply for closure #1 in closure #1 in RecentsListViewController.dismissPopover()((uint64_t (*)(uint64_t))closure #1 in closure #1 in closure #1 in RecentsListViewController.observeTip<A>(_:));
}

uint64_t partial apply for closure #1 in closure #1 in RecentsListViewController.dismissPopover()(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<(), Never>)
                                      - 8)
                          + 80);
  return a1(v1 + ((v2 + 16) & ~v2));
}

uint64_t static ViewBuilder.buildIf<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = type metadata accessor for Optional();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
}

void PositionalData.__allocating_init()()
{
  swift_allocObject();
  PositionalData.init()();
  OUTLINED_FUNCTION_0();
}

uint64_t Published.init(wrappedValue:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 - 8);
  v5 = MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16))((char *)&v8 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a2, v5);
  Published.init(initialValue:)();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, a2);
}

void AutoScrollingList.init(rows:spacing:topInset:positionalData:content:headerView:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = type metadata accessor for Binding();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32))(a2, a1, v3);
  type metadata accessor for AutoScrollingList();
}

void sub_1BD3B92B4(int *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  _QWORD *v32;

  *(_QWORD *)(v27 + a1[23]) = v29;
  *(_QWORD *)(v27 + a1[24]) = v28;
  *(_QWORD *)(v27 + a1[25]) = a16;
  v30 = (_QWORD *)(v27 + a1[26]);
  *v30 = a17;
  v30[1] = a18;
  v31 = (_QWORD *)(v27 + a1[27]);
  *v31 = a19;
  v31[1] = a20;
  v32 = (_QWORD *)swift_allocObject();
  v32[2] = v23;
  v32[3] = a14;
  v32[4] = v22;
  v32[5] = a15;
  v32[6] = v20;
  v32[7] = v26;
  v32[8] = v25;
  v32[9] = v21;
  v32[10] = v24;
  property wrapper backing initializer of AutoScrollingList.autoScrollViewModel();
}

uint64_t sub_1BD3B9348(uint64_t result, uint64_t a2, char a3)
{
  uint64_t v3;

  *(_QWORD *)v3 = result;
  *(_QWORD *)(v3 + 8) = a2;
  *(_BYTE *)(v3 + 16) = a3 & 1;
  return result;
}

void *AutoScrollKey.defaultValue.unsafeMutableAddressor()
{
  return &static AutoScrollKey.defaultValue;
}

{
  return &static AutoScrollKey.defaultValue;
}

char *specialized static AutoScrollKey.reduce(value:nextValue:)(char *result, _QWORD *(*a2)(uint64_t *__return_ptr))
{
  char *v2;
  char v3;
  uint64_t v4;

  v2 = result;
  if ((*result & 1) != 0)
  {
    v3 = 1;
  }
  else
  {
    result = (char *)a2(&v4);
    v3 = v4;
  }
  *v2 = v3;
  return result;
}

_BYTE *protocol witness for static PreferenceKey.defaultValue.getter in conformance AutoScrollKey@<X0>(_BYTE *a1@<X8>)
{
  _BYTE *result;

  result = AutoScrollKey.defaultValue.unsafeMutableAddressor();
  *a1 = *result;
  return result;
}

{
  _BYTE *result;

  result = AutoScrollKey.defaultValue.unsafeMutableAddressor();
  *a1 = *result;
  return result;
}

void *HighestBoundsKey.defaultValue.unsafeMutableAddressor()
{
  return &static HighestBoundsKey.defaultValue;
}

_QWORD *specialized static HighestBoundsKey.reduce(value:nextValue:)(uint64_t a1, _QWORD *(*a2)(double *__return_ptr))
{
  _QWORD *result;
  uint64_t v4;
  double v5;
  double v6;
  double v7;
  double v8;
  CGFloat v9;
  CGFloat v10;
  CGFloat v11;
  CGFloat v12;
  double MinY;
  double v14;
  double v15;
  double v16;
  double v17;
  uint64_t v18;
  CGRect v19;

  result = a2(&v14);
  v4 = v18;
  if (v18)
  {
    v5 = v14;
    v6 = v15;
    v7 = v16;
    v8 = v17;
    v9 = v14;
    v10 = v15;
    v11 = v16;
    v12 = v17;
    if (*(_QWORD *)(a1 + 32))
      MinY = CGRectGetMinY(*(CGRect *)a1);
    else
      MinY = 1.79769313e308;
    v19.origin.x = v9;
    v19.origin.y = v10;
    v19.size.width = v11;
    v19.size.height = v12;
    if (CGRectGetMinY(v19) >= MinY)
    {
      return (_QWORD *)swift_release();
    }
    else
    {
      result = (_QWORD *)swift_release();
      *(double *)a1 = v5;
      *(double *)(a1 + 8) = v6;
      *(double *)(a1 + 16) = v7;
      *(double *)(a1 + 24) = v8;
      *(_QWORD *)(a1 + 32) = v4;
    }
  }
  return result;
}

double ListAnchor.minY.getter()
{
  CGRect *v0;

  return CGRectGetMinY(*v0);
}

uint64_t protocol witness for static PreferenceKey.defaultValue.getter in conformance HighestBoundsKey@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v2;
  uint64_t v3;
  __int128 v4;

  v2 = HighestBoundsKey.defaultValue.unsafeMutableAddressor();
  v3 = v2[4];
  v4 = *((_OWORD *)v2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)v2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = v3;
  return swift_retain();
}

double ListAnchor.bounds.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

void ListAnchor.bounds.setter(double a1, double a2, double a3, double a4)
{
  double *v4;

  *v4 = a1;
  v4[1] = a2;
  v4[2] = a3;
  v4[3] = a4;
}

uint64_t (*ListAnchor.bounds.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ListAnchor.anchor.getter()
{
  return swift_retain();
}

void ListAnchor.anchor.setter(uint64_t a1)
{
  uint64_t v1;

  swift_release();
  *(_QWORD *)(v1 + 32) = a1;
  OUTLINED_FUNCTION_0();
}

uint64_t (*ListAnchor.anchor.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t static ListAnchor.== infix(_:_:)(CGRect *a1, CGRect *a2)
{
  uint64_t result;

  result = CGRectEqualToRect(*a1, *a2);
  if ((_DWORD)result)
  {
    type metadata accessor for CGRect(0);
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CGRect and conformance CGRect, type metadata accessor for CGRect);
    OUTLINED_FUNCTION_48_38();
    return static Anchor<A>.== infix(_:_:)();
  }
  return result;
}

uint64_t ListAnchor.init(bounds:anchor:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>)
{
  *(double *)a2 = a3;
  *(double *)(a2 + 8) = a4;
  *(double *)(a2 + 16) = a5;
  *(double *)(a2 + 24) = a6;
  *(_QWORD *)(a2 + 32) = result;
  return result;
}

uint64_t PositionalData.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  Swift::String v6;
  char v7;
  BOOL v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  Swift::String v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _BYTE v21[40];
  _BYTE v22[40];
  _QWORD v23[4];
  uint64_t v24;
  Swift::String v25;
  Swift::String v26;
  Swift::String v27;

  v1 = v0;
  v23[0] = 0;
  v23[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(73);
  v19 = 0;
  v20 = 0xE000000000000000;
  v25._countAndFlagsBits = 0xD000000000000022;
  v25._object = (void *)0x80000001BD688E90;
  OUTLINED_FUNCTION_63_23(v25);
  OUTLINED_FUNCTION_39_51();
  OUTLINED_FUNCTION_62_29((uint64_t)v21, (uint64_t)v23);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CGRect?);
  v26._countAndFlagsBits = String.init<A>(describing:)();
  OUTLINED_FUNCTION_63_23(v26);
  swift_bridgeObjectRelease();
  v2._countAndFlagsBits = 0x756F427473696C0ALL;
  v2._object = (void *)0xED0000203A73646ELL;
  String.append(_:)(v2);
  OUTLINED_FUNCTION_39_51();
  OUTLINED_FUNCTION_62_29((uint64_t)v22, (uint64_t)&v16);
  OUTLINED_FUNCTION_62_29((uint64_t)v22, (uint64_t)v23);
  v3 = v24;
  if (v24)
  {
    v14 = v17;
    v15 = v16;
    swift_release();
    v5 = v14;
    v4 = v15;
  }
  else
  {
    v4 = 0uLL;
    v5 = 0uLL;
  }
  v16 = v4;
  v17 = v5;
  LOBYTE(v18) = v3 == 0;
  v27._countAndFlagsBits = String.init<A>(describing:)();
  OUTLINED_FUNCTION_63_23(v27);
  swift_bridgeObjectRelease();
  v6._object = (void *)0x80000001BD688EC0;
  v6._countAndFlagsBits = 0xD000000000000012;
  String.append(_:)(v6);
  v7 = (*(uint64_t (**)(void))(*(_QWORD *)v1 + 224))();
  v8 = (v7 & 1) == 0;
  if ((v7 & 1) != 0)
    v9 = 1702195828;
  else
    v9 = 0x65736C6166;
  if (v8)
    v10 = 0xE500000000000000;
  else
    v10 = 0xE400000000000000;
  v11 = v10;
  String.append(_:)(*(Swift::String *)&v9);
  swift_bridgeObjectRelease();
  v12._countAndFlagsBits = 10506;
  v12._object = (void *)0xE200000000000000;
  String.append(_:)(v12);
  return v19;
}

uint64_t static PositionalData.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  _BYTE v72[32];
  uint64_t v73;
  char v74;
  _BYTE v75[40];

  OUTLINED_FUNCTION_6_6();
  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)v1 + 128))(&v50);
  OUTLINED_FUNCTION_39_51();
  _sypSgWObTm_0((uint64_t)&v50, (uint64_t)v75, &demangling cache variable for type metadata for CGRect?);
  if ((v75[32] & 1) != 0)
  {
    OUTLINED_FUNCTION_68_18(v2, v3, &demangling cache variable for type metadata for CGRect?, v4, v5, v6, v7, v8);
    if ((v74 & 1) == 0)
      goto LABEL_13;
  }
  else
  {
    OUTLINED_FUNCTION_68_18(v2, v3, &demangling cache variable for type metadata for CGRect?, v4, v5, v6, v7, v8);
    if ((v74 & 1) != 0 || !OUTLINED_FUNCTION_7_103())
      goto LABEL_13;
  }
  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)v0 + 176))(&v60);
  OUTLINED_FUNCTION_39_51();
  _sypSgWObTm_0((uint64_t)&v60, (uint64_t)v72, &demangling cache variable for type metadata for ListAnchor?);
  if (!v73)
  {
    OUTLINED_FUNCTION_65_21(v9, v10, &demangling cache variable for type metadata for ListAnchor?, v11, v12, v13, v14, v15, v50, v51, v52, v53, v54, v55, v56, v57, v58, v59, v60,
      v61,
      v62,
      v63,
      v64,
      v65,
      v66,
      v67,
      v68,
      v69,
      v70);
    if (!v71)
    {
      v16 = 1;
      return v16 & 1;
    }
    goto LABEL_11;
  }
  OUTLINED_FUNCTION_65_21(v9, v10, &demangling cache variable for type metadata for ListAnchor?, v11, v12, v13, v14, v15, v50, v51, v52, v53, v54, v55, v56, v57, v58, v59, v60,
    v61,
    v62,
    v63,
    v64,
    v65,
    v66,
    v67,
    v68,
    v69,
    v70);
  if (!v71)
  {
LABEL_11:
    OUTLINED_FUNCTION_11_0();
    swift_release();
LABEL_13:
    v16 = 0;
    return v16 & 1;
  }
  swift_retain();
  if (!OUTLINED_FUNCTION_7_103())
  {
    v33 = outlined release of ListAnchor?((uint64_t)&v65);
    v41 = OUTLINED_FUNCTION_42_41(v33, v34, v35, v36, v37, v38, v39, v40, v50, v51);
    OUTLINED_FUNCTION_42_41(v41, v42, v43, v44, v45, v46, v47, v48, v50, v51);
    goto LABEL_13;
  }
  type metadata accessor for CGRect(0);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CGRect and conformance CGRect, type metadata accessor for CGRect);
  v16 = static Anchor<A>.== infix(_:_:)();
  v17 = outlined release of ListAnchor?((uint64_t)&v65);
  v25 = OUTLINED_FUNCTION_42_41(v17, v18, v19, v20, v21, v22, v23, v24, v50, v51);
  OUTLINED_FUNCTION_42_41(v25, v26, v27, v28, v29, v30, v31, v32, v50, v51);
  return v16 & 1;
}

void key path getter for PositionalData.scrollViewBounds : PositionalData(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD v3[5];

  (*(void (**)(_QWORD *__return_ptr))(**(_QWORD **)a1 + 128))(v3);
  _sypSgWObTm_0((uint64_t)v3, a2, &demangling cache variable for type metadata for CGRect?);
}

uint64_t key path setter for PositionalData.scrollViewBounds : PositionalData(uint64_t a1, uint64_t a2)
{
  _BYTE v4[40];

  _sypSgWObTm_0(a1, (uint64_t)v4, &demangling cache variable for type metadata for CGRect?);
  return (*(uint64_t (**)(_BYTE *))(**(_QWORD **)a2 + 136))(v4);
}

__n128 PositionalData.scrollViewBounds.getter@<Q0>(uint64_t a1@<X8>)
{
  __n128 result;
  __int128 v3;
  __int128 v4;
  char v5;

  swift_getKeyPath();
  swift_getKeyPath();
  OUTLINED_FUNCTION_19_64();
  OUTLINED_FUNCTION_11_0();
  swift_release();
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = v5;
  OUTLINED_FUNCTION_14_1();
  return result;
}

void PositionalData.scrollViewBounds.setter()
{
  uint64_t KeyPath;
  uint64_t v1;
  uint64_t v2;

  swift_getKeyPath();
  KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_60_23(KeyPath, v1, &demangling cache variable for type metadata for CGRect?, v2);
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  OUTLINED_FUNCTION_25_54();
  PositionalData.updateBottomVisibility()();
  OUTLINED_FUNCTION_14_1();
}

void PositionalData.scrollViewBounds.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_75_15();
  OUTLINED_FUNCTION_35_38((uint64_t)v1);
  PositionalData.scrollViewBounds.getter(v2);
  OUTLINED_FUNCTION_37_44(v0, v3, &demangling cache variable for type metadata for CGRect?);
  OUTLINED_FUNCTION_18();
}

void PositionalData.scrollViewBounds.modify(void **a1, uint64_t a2)
{
  void *v2;

  v2 = *a1;
  OUTLINED_FUNCTION_37_44((uint64_t)*a1 + 120, a2, &demangling cache variable for type metadata for CGRect?);
  PositionalData.scrollViewBounds.setter();
  OUTLINED_FUNCTION_4_2(v2);
}

uint64_t key path setter for PositionalData.$scrollViewBounds : PositionalData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CGRect?>.Publisher);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v8 + 16))(v7, a1, v5);
  return (*(uint64_t (**)(char *))(**(_QWORD **)a2 + 160))(v7);
}

uint64_t PositionalData.$scrollViewBounds.getter()
{
  return ShareCardViewModel.$shouldShowEndActivity.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit14PositionalData__scrollViewBounds, &demangling cache variable for type metadata for Published<CGRect?>);
}

uint64_t PositionalData.$scrollViewBounds.setter(uint64_t a1)
{
  return PositionalData.$scrollViewBounds.setter(a1, &demangling cache variable for type metadata for Published<CGRect?>.Publisher, (uint64_t)&OBJC_IVAR____TtC15ConversationKit14PositionalData__scrollViewBounds, &demangling cache variable for type metadata for Published<CGRect?>);
}

void PositionalData.$scrollViewBounds.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  void *v4;

  v2 = OUTLINED_FUNCTION_46_17();
  *v0 = v2;
  v2[3] = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CGRect?>.Publisher);
  v4 = OUTLINED_FUNCTION_15_3(v3);
  v2[7] = OUTLINED_FUNCTION_53_1((uint64_t)v4);
  OUTLINED_FUNCTION_60_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CGRect?>);
  Published.projectedValue.getter();
  swift_endAccess();
  OUTLINED_FUNCTION_18();
}

void PositionalData.$scrollViewBounds.modify(uint64_t a1, char a2)
{
  PositionalData.$scrollViewBounds.modify(a1, a2, (void (*)(void *))PositionalData.$scrollViewBounds.setter);
}

void key path getter for PositionalData.listBounds : PositionalData(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD v3[5];

  (*(void (**)(_QWORD *__return_ptr))(**(_QWORD **)a1 + 176))(v3);
  _sypSgWObTm_0((uint64_t)v3, a2, &demangling cache variable for type metadata for ListAnchor?);
}

uint64_t key path setter for PositionalData.listBounds : PositionalData(uint64_t a1, uint64_t a2)
{
  uint64_t (*v3)(_BYTE *);
  _BYTE v5[40];

  _sypSgWObTm_0(a1, (uint64_t)v5, &demangling cache variable for type metadata for ListAnchor?);
  v3 = *(uint64_t (**)(_BYTE *))(**(_QWORD **)a2 + 184);
  outlined retain of ListAnchor?((uint64_t)v5);
  return v3(v5);
}

__n128 PositionalData.listBounds.getter@<Q0>(uint64_t a1@<X8>)
{
  __n128 result;
  __int128 v3;
  __int128 v4;
  uint64_t v5;

  swift_getKeyPath();
  swift_getKeyPath();
  OUTLINED_FUNCTION_19_64();
  OUTLINED_FUNCTION_11_0();
  swift_release();
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  OUTLINED_FUNCTION_14_1();
  return result;
}

void PositionalData.listBounds.setter(uint64_t a1)
{
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v4;

  swift_getKeyPath();
  KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_60_23(KeyPath, v3, &demangling cache variable for type metadata for ListAnchor?, v4);
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  outlined retain of ListAnchor?(a1);
  OUTLINED_FUNCTION_25_54();
  PositionalData.updateBottomVisibility()();
  outlined release of ListAnchor?(a1);
  OUTLINED_FUNCTION_14_1();
}

void PositionalData.listBounds.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_75_15();
  OUTLINED_FUNCTION_35_38((uint64_t)v1);
  PositionalData.listBounds.getter(v2);
  OUTLINED_FUNCTION_37_44(v0, v3, &demangling cache variable for type metadata for ListAnchor?);
  OUTLINED_FUNCTION_18();
}

void PositionalData.listBounds.modify(void **a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;

  v2 = *a1;
  v3 = (uint64_t)*a1 + 120;
  if ((a2 & 1) != 0)
  {
    _sypSgWObTm_0(v3, (uint64_t)v2, &demangling cache variable for type metadata for ListAnchor?);
    outlined retain of ListAnchor?((uint64_t)v2);
    PositionalData.listBounds.setter((uint64_t)v2);
    swift_release();
  }
  else
  {
    OUTLINED_FUNCTION_37_44(v3, a2, &demangling cache variable for type metadata for ListAnchor?);
    PositionalData.listBounds.setter((uint64_t)v2 + 40);
  }
  OUTLINED_FUNCTION_4_2(v2);
}

uint64_t key path setter for PositionalData.$listBounds : PositionalData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<ListAnchor?>.Publisher);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v8 + 16))(v7, a1, v5);
  return (*(uint64_t (**)(char *))(**(_QWORD **)a2 + 208))(v7);
}

uint64_t PositionalData.$listBounds.getter()
{
  return ShareCardViewModel.$shouldShowEndActivity.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit14PositionalData__listBounds, &demangling cache variable for type metadata for Published<ListAnchor?>);
}

uint64_t PositionalData.$listBounds.setter(uint64_t a1)
{
  return PositionalData.$scrollViewBounds.setter(a1, &demangling cache variable for type metadata for Published<ListAnchor?>.Publisher, (uint64_t)&OBJC_IVAR____TtC15ConversationKit14PositionalData__listBounds, &demangling cache variable for type metadata for Published<ListAnchor?>);
}

void PositionalData.$listBounds.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  void *v4;

  v2 = OUTLINED_FUNCTION_46_17();
  *v0 = v2;
  v2[3] = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<ListAnchor?>.Publisher);
  v4 = OUTLINED_FUNCTION_15_3(v3);
  v2[7] = OUTLINED_FUNCTION_53_1((uint64_t)v4);
  OUTLINED_FUNCTION_60_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<ListAnchor?>);
  Published.projectedValue.getter();
  swift_endAccess();
  OUTLINED_FUNCTION_18();
}

void PositionalData.$listBounds.modify(uint64_t a1, char a2)
{
  PositionalData.$scrollViewBounds.modify(a1, a2, (void (*)(void *))PositionalData.$listBounds.setter);
}

void PositionalData.$scrollViewBounds.modify(uint64_t a1, char a2, void (*a3)(void *))
{
  _QWORD *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD **)a1;
  v5 = *(void **)(*(_QWORD *)a1 + 48);
  v6 = *(void **)(*(_QWORD *)a1 + 56);
  if ((a2 & 1) != 0)
  {
    v7 = v4[4];
    v8 = v4[5];
    OUTLINED_FUNCTION_33_49(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16));
    a3(v5);
    (*(void (**)(void *, uint64_t))(v8 + 8))(v6, v7);
  }
  else
  {
    a3(*(void **)(*(_QWORD *)a1 + 56));
  }
  free(v6);
  free(v5);
  OUTLINED_FUNCTION_8_92(v4);
}

uint64_t key path getter for PositionalData.isBottomVisible : PositionalData@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 224))();
  *a2 = result & 1;
  return result;
}

void key path setter for PositionalData.isBottomVisible : PositionalData()
{
  PositionalData.isBottomVisible.setter();
}

uint64_t PositionalData.isBottomVisible.getter()
{
  return PositionalData.isBottomVisible.getter();
}

{
  unsigned __int8 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  OUTLINED_FUNCTION_11_0();
  swift_release();
  return v1;
}

void PositionalData.isBottomVisible.setter()
{
  PositionalData.isBottomVisible.setter();
}

{
  swift_getKeyPath();
  swift_getKeyPath();
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  static Published.subscript.setter();
  OUTLINED_FUNCTION_43_1();
}

uint64_t PositionalData.$isBottomVisible.getter()
{
  return ShareCardViewModel.$shouldShowEndActivity.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit14PositionalData__isBottomVisible, (uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
}

uint64_t PositionalData.$isBottomVisible.setter(uint64_t a1)
{
  return PositionalData.$scrollViewBounds.setter(a1, &demangling cache variable for type metadata for Published<Bool>.Publisher, (uint64_t)&OBJC_IVAR____TtC15ConversationKit14PositionalData__isBottomVisible, (uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
}

uint64_t key path getter for PositionalData.isWithinAutoScrollTolerance : PositionalData@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 272))();
  *a2 = result & 1;
  return result;
}

void key path setter for PositionalData.isWithinAutoScrollTolerance : PositionalData()
{
  PositionalData.isWithinAutoScrollTolerance.setter();
}

uint64_t PositionalData.isWithinAutoScrollTolerance.getter()
{
  return PositionalData.isBottomVisible.getter();
}

void PositionalData.isWithinAutoScrollTolerance.setter()
{
  PositionalData.isBottomVisible.setter();
}

void key path setter for PositionalData.$isBottomVisible : PositionalData(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_16_2();
  (*(void (**)(uint64_t, uint64_t))(v9 + 16))(v5, a1);
  a5(v5);
  OUTLINED_FUNCTION_18();
}

uint64_t PositionalData.$isWithinAutoScrollTolerance.getter()
{
  return ShareCardViewModel.$shouldShowEndActivity.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit14PositionalData__isWithinAutoScrollTolerance, (uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
}

uint64_t PositionalData.$isWithinAutoScrollTolerance.setter(uint64_t a1)
{
  return PositionalData.$scrollViewBounds.setter(a1, &demangling cache variable for type metadata for Published<Bool>.Publisher, (uint64_t)&OBJC_IVAR____TtC15ConversationKit14PositionalData__isWithinAutoScrollTolerance, (uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
}

uint64_t PositionalData.$scrollViewBounds.setter(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_77();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v9 - v8, a1, v6);
  OUTLINED_FUNCTION_60_0();
  __swift_instantiateConcreteTypeFromMangledName(a4);
  Published.projectedValue.setter();
  swift_endAccess();
  return OUTLINED_FUNCTION_52(a1, *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
}

double PositionalData.autoScrollTolerance.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit14PositionalData_autoScrollTolerance;
  swift_beginAccess();
  return *(double *)v1;
}

void PositionalData.autoScrollTolerance.setter(double a1)
{
  uint64_t v1;
  double *v3;

  v3 = (double *)(v1 + OBJC_IVAR____TtC15ConversationKit14PositionalData_autoScrollTolerance);
  swift_beginAccess();
  *v3 = a1;
  PositionalData.updateBottomVisibility()();
}

void PositionalData.autoScrollTolerance.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_60_0();
  OUTLINED_FUNCTION_0();
}

void PositionalData.autoScrollTolerance.modify(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    PositionalData.updateBottomVisibility()();
  OUTLINED_FUNCTION_0();
}

void PositionalData.updateBottomVisibility()()
{
  uint64_t v0;
  _QWORD v1[5];
  _QWORD v2[5];
  _BYTE v3[8];
  uint64_t v4;
  _BYTE v5[40];

  (*(void (**)(_QWORD *__return_ptr))(*(_QWORD *)v0 + 128))(v1);
  _sypSgWObTm_0((uint64_t)v1, (uint64_t)v5, &demangling cache variable for type metadata for CGRect?);
  if ((v5[32] & 1) != 0
    || ((*(void (**)(_QWORD *__return_ptr))(*(_QWORD *)v0 + 176))(v2),
        _sypSgWObTm_0((uint64_t)v2, (uint64_t)v3, &demangling cache variable for type metadata for ListAnchor?),
        !v4))
  {
    PositionalData.isBottomVisible.setter();
  }
  else
  {
    PositionalData.isBottomVisible.setter();
    (*(void (**)(void))(*(_QWORD *)v0 + 320))();
    PositionalData.isWithinAutoScrollTolerance.setter();
    outlined release of ListAnchor?((uint64_t)v2);
  }
}

uint64_t PositionalData.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CGRect?>);
  OUTLINED_FUNCTION_17_1(v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<ListAnchor?>);
  OUTLINED_FUNCTION_17_1(v2);
  v3 = v0 + OBJC_IVAR____TtC15ConversationKit14PositionalData__isBottomVisible;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(v3, v4);
  v5(v0 + OBJC_IVAR____TtC15ConversationKit14PositionalData__isWithinAutoScrollTolerance, v4);
  return v0;
}

uint64_t PositionalData.__deallocating_deinit()
{
  PositionalData.deinit();
  return swift_deallocClassInstance();
}

uint64_t PositionalData.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_77();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<ListAnchor?>);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_77();
  v6 = v5 - v4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CGRect?>);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_77();
  v11 = v10 - v9;
  v12 = v0 + OBJC_IVAR____TtC15ConversationKit14PositionalData__scrollViewBounds;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CGRect?);
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v12, v11, v7);
  v13 = v0 + OBJC_IVAR____TtC15ConversationKit14PositionalData__listBounds;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ListAnchor?);
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v13, v6, v2);
  OUTLINED_FUNCTION_43_47();
  OUTLINED_FUNCTION_36_42();
  OUTLINED_FUNCTION_43_47();
  OUTLINED_FUNCTION_36_42();
  *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit14PositionalData_autoScrollTolerance) = 0;
  return v0;
}

void type metadata accessor for AutoScrollingList()
{
  JUMPOUT(0x1C3B74FFCLL);
}

uint64_t property wrapper backing initializer of AutoScrollViewModel.stickyRowIDs(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = a1;
  v1 = type metadata accessor for Set();
  return Published.init(wrappedValue:)((uint64_t)&v3, v1);
}

uint64_t AutoScrollViewModel.stickyRowIDs.getter()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t AutoScrollViewModel.stickyRowIDs.setter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return static Published.subscript.setter();
}

uint64_t protocol witness for ObservableObject.objectWillChange.getter in conformance PositionalData@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for PositionalData();
  result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance PositionalData()
{
  return static PositionalData.== infix(_:_:)() & 1;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance PositionalData()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 120))();
}

uint64_t property wrapper backing initializer of AutoScrollViewModel.shouldAutoScroll()
{
  return Published.init(initialValue:)();
}

uint64_t AutoScrollViewModel.shouldAutoScroll.getter()
{
  unsigned __int8 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t AutoScrollViewModel.shouldAutoScroll.setter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return static Published.subscript.setter();
}

uint64_t AutoScrollViewModel.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 96);
  type metadata accessor for Set();
  v2 = type metadata accessor for Published();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 104);
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t AutoScrollViewModel.__deallocating_deinit()
{
  AutoScrollViewModel.deinit();
  return swift_deallocClassInstance();
}

uint64_t *AutoScrollViewModel.__allocating_init()()
{
  swift_allocObject();
  return AutoScrollViewModel.init()();
}

uint64_t *AutoScrollViewModel.init()()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v1 = *v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + 80);
  v7 = *(_QWORD *)(v1 + 88);
  type metadata accessor for Set();
  v8 = type metadata accessor for Published();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v17 - v10;
  v12 = static Array._allocateUninitialized(_:)();
  if (MEMORY[0x1C3B73100](v12, v6))
  {
    v13 = Set.init(_nonEmptyArrayLiteral:)(v12, v6, v7);
  }
  else
  {
    swift_bridgeObjectRelease();
    v13 = MEMORY[0x1E0DEE9E8];
  }
  v14 = (uint64_t)v0 + *(_QWORD *)(*v0 + 96);
  property wrapper backing initializer of AutoScrollViewModel.stickyRowIDs(v13);
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v14, v11, v8);
  v15 = (uint64_t)v0 + *(_QWORD *)(*v0 + 104);
  property wrapper backing initializer of AutoScrollViewModel.shouldAutoScroll();
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v15, v5, v2);
  return v0;
}

uint64_t protocol witness for ObservableObject.objectWillChange.getter in conformance AutoScrollViewModel<A>@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t AutoScrollingList.rows.getter(uint64_t a1)
{
  return AutoScrollingList.rows.getter(a1, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDFD38]);
}

void key path getter for AutoScrollingList.rows : <A, B, C, D>AutoScrollingList<A, B, C, D>()
{
  type metadata accessor for AutoScrollingList();
}

uint64_t sub_1BD3BAEA8(uint64_t a1)
{
  return AutoScrollingList.rows.getter(a1);
}

void key path setter for AutoScrollingList.rows : <A, B, C, D>AutoScrollingList<A, B, C, D>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(char *);
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;

  v4 = *(_QWORD *)(a4 + a3 - 72);
  v13 = *(_OWORD *)(a4 + a3 - 64);
  MEMORY[0x1E0C80A78](a1);
  v6 = *(void (**)(char *))(v5 + 16);
  v8 = *(_OWORD *)(v7 - 48);
  v11 = *(_OWORD *)(v7 - 32);
  v12 = v8;
  v10 = *(_OWORD *)(v7 - 16);
  v6((char *)&v10 - v9);
  v14 = v4;
  v15 = v13;
  v16 = v12;
  v17 = v11;
  v18 = v10;
  type metadata accessor for AutoScrollingList();
}

uint64_t sub_1BD3BAF60(uint64_t a1)
{
  uint64_t v1;

  return AutoScrollingList.rows.setter(v1, a1);
}

uint64_t AutoScrollingList.rows.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void (*v5)(void);

  v3 = *(_QWORD *)(a2 + 24);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](a1);
  OUTLINED_FUNCTION_16_2();
  OUTLINED_FUNCTION_48_38();
  v5();
  type metadata accessor for Binding();
  Binding.wrappedValue.setter();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
}

void (*AutoScrollingList.rows.modify())(uint64_t **a1, char a2)
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_6_6();
  v2 = malloc(0x38uLL);
  *v1 = v2;
  v3 = *(_QWORD *)(v0 + 24);
  *v2 = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[1] = v4;
  v5 = *(_QWORD *)(v4 + 64);
  v2[2] = malloc(v5);
  v2[3] = malloc(v5);
  v6 = type metadata accessor for Binding();
  v2[4] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[5] = v7;
  v2[6] = malloc(*(_QWORD *)(v7 + 64));
  (*(void (**)(void))(v7 + 16))();
  MEMORY[0x1C3B72860](v6);
  return AutoScrollingList.rows.modify;
}

void AutoScrollingList.rows.modify(uint64_t **a1, char a2)
{
  uint64_t *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *a1;
  v4 = (*a1)[5];
  v3 = (void *)(*a1)[6];
  v5 = (void *)(*a1)[3];
  v6 = (*a1)[4];
  v7 = (void *)(*a1)[2];
  if ((a2 & 1) != 0)
  {
    v8 = *v2;
    v9 = v2[1];
    OUTLINED_FUNCTION_33_49(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16));
    Binding.wrappedValue.setter();
    OUTLINED_FUNCTION_52((uint64_t)v3, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
    (*(void (**)(void *, uint64_t))(v9 + 8))(v5, v8);
  }
  else
  {
    Binding.wrappedValue.setter();
    (*(void (**)(void *, uint64_t))(v4 + 8))(v3, v6);
  }
  free(v3);
  free(v5);
  free(v7);
  OUTLINED_FUNCTION_8_92(v2);
}

uint64_t AutoScrollingList.$rows.getter(uint64_t a1)
{
  return AutoScrollingList.rows.getter(a1, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDFD70]);
}

uint64_t AutoScrollingList.rows.getter(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v2;

  v2 = type metadata accessor for Binding();
  return a2(v2);
}

double AutoScrollingList.spacing.getter(uint64_t a1)
{
  uint64_t v1;

  return *(double *)(v1 + *(int *)(a1 + 92));
}

double AutoScrollingList.topInset.getter(uint64_t a1)
{
  uint64_t v1;

  return *(double *)(v1 + *(int *)(a1 + 96));
}

uint64_t AutoScrollingList.positionalData.getter()
{
  return swift_retain();
}

void AutoScrollingList.content.getter()
{
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  OUTLINED_FUNCTION_0();
}

void AutoScrollingList.content.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_6_6();
  OUTLINED_FUNCTION_51_34();
  *v1 = v2;
  v1[1] = v0;
  OUTLINED_FUNCTION_18();
}

uint64_t (*AutoScrollingList.content.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void key path getter for AutoScrollingList.headerView : <A, B, C, D>AutoScrollingList<A, B, C, D>()
{
  type metadata accessor for AutoScrollingList();
}

uint64_t sub_1BD3BB288(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(a1 + 108));
  v4 = v3[1];
  *v2 = *v3;
  v2[1] = v4;
  return swift_retain();
}

void key path setter for AutoScrollingList.headerView : <A, B, C, D>AutoScrollingList<A, B, C, D>()
{
  type metadata accessor for AutoScrollingList();
}

uint64_t sub_1BD3BB2F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t result;

  v4 = (_QWORD *)(v1 + *(int *)(a1 + 108));
  swift_retain();
  result = swift_release();
  *v4 = v3;
  v4[1] = v2;
  return result;
}

void AutoScrollingList.headerView.getter()
{
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  OUTLINED_FUNCTION_0();
}

void AutoScrollingList.headerView.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_6_6();
  OUTLINED_FUNCTION_51_34();
  *v1 = v2;
  v1[1] = v0;
  OUTLINED_FUNCTION_18();
}

uint64_t (*AutoScrollingList.headerView.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void property wrapper backing initializer of AutoScrollingList.autoScrollViewModel()
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v2;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for AutoScrollViewModel(0, AssociatedTypeWitness, AssociatedConformanceWitness, v2);
  OUTLINED_FUNCTION_13_7();
}

uint64_t sub_1BD3BB41C()
{
  return StateObject.init(wrappedValue:)();
}

uint64_t *implicit closure #2 in implicit closure #1 in variable initialization expression of AutoScrollingList._autoScrollViewModel()
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v2;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for AutoScrollViewModel(0, AssociatedTypeWitness, AssociatedConformanceWitness, v2);
  return AutoScrollViewModel.__allocating_init()();
}

uint64_t sub_1BD3BB4C8()
{
  return swift_deallocObject();
}

uint64_t *partial apply for implicit closure #2 in implicit closure #1 in variable initialization expression of AutoScrollingList._autoScrollViewModel()
{
  return implicit closure #2 in implicit closure #1 in variable initialization expression of AutoScrollingList._autoScrollViewModel();
}

void AutoScrollingList.body.getter(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t AssociatedConformanceWitness;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[3];

  v22 = a2;
  v3 = *(_QWORD *)(a1 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  v5 = MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *, __n128))(v3 + 16))((char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  v6 = (*(unsigned __int8 *)(v3 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v7 = swift_allocObject();
  v9 = *(_QWORD *)(a1 + 16);
  v19 = *(_QWORD *)(a1 + 24);
  v8 = v19;
  *(_QWORD *)(v7 + 16) = v9;
  *(_QWORD *)(v7 + 24) = v8;
  *(_QWORD *)(v7 + 32) = *(_QWORD *)(a1 + 32);
  v18 = *(_OWORD *)(a1 + 40);
  *(_OWORD *)(v7 + 40) = v18;
  v10 = *(_QWORD *)(a1 + 64);
  v21 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(v7 + 56) = v21;
  *(_QWORD *)(v7 + 64) = v10;
  v11 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(v7 + 72) = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(v7 + 80) = v11;
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v7 + v6, (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  v20 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Spacer, _FlexFrameLayout>);
  OUTLINED_FUNCTION_53_34();
  type metadata accessor for ModifiedContent();
  OUTLINED_FUNCTION_42_15();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _AnchorWritingModifier<CGRect, AutoScrollKey>);
  v13 = type metadata accessor for ModifiedContent();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _AnchorWritingModifier<CGRect, AutoScrollKey> and conformance _AnchorWritingModifier<A, B>, &demangling cache variable for type metadata for _AnchorWritingModifier<CGRect, AutoScrollKey>);
  v28[0] = v11;
  v28[1] = v14;
  v15 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v13, v28);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v23 = v13;
  v24 = AssociatedTypeWitness;
  v25 = v15;
  v26 = AssociatedConformanceWitness;
  v17 = type metadata accessor for IDView();
  v23 = v19;
  v24 = AssociatedTypeWitness;
  v25 = v17;
  v26 = v10;
  v27 = AssociatedConformanceWitness;
  type metadata accessor for ForEach();
  OUTLINED_FUNCTION_52_31();
  OUTLINED_FUNCTION_13_7();
}

void sub_1BD3BB714(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 152) = a1;
  OUTLINED_FUNCTION_17_13();
}

void sub_1BD3BB728(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v4 = MEMORY[0x1E0CD8DA8];
  *(_QWORD *)(v3 - 168) = a1;
  *(_QWORD *)(v3 - 160) = v4;
  MEMORY[0x1C3B750C8](v1, v2, v3 - 168);
  type metadata accessor for LazyVStack();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _AnchorWritingModifier<CGRect, HighestBoundsKey>);
  OUTLINED_FUNCTION_0_115();
  OUTLINED_FUNCTION_44_12();
  OUTLINED_FUNCTION_41_0();
  OUTLINED_FUNCTION_13_7();
}

void sub_1BD3BB794()
{
  type metadata accessor for VStack();
  OUTLINED_FUNCTION_13_7();
}

void sub_1BD3BB7B4()
{
  type metadata accessor for ZStack();
  OUTLINED_FUNCTION_0_115();
  OUTLINED_FUNCTION_13_7();
}

void sub_1BD3BB7E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = MEMORY[0x1E0CDA228];
  *(_QWORD *)(v1 - 184) = a1;
  *(_QWORD *)(v1 - 176) = v2;
  OUTLINED_FUNCTION_45_3();
}

void sub_1BD3BB7FC()
{
  OUTLINED_FUNCTION_50_32();
  type metadata accessor for ScrollView();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _PreferenceActionModifier<HighestBoundsKey>);
  OUTLINED_FUNCTION_0_115();
  OUTLINED_FUNCTION_13_7();
}

void sub_1BD3BB830(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;

  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _PreferenceActionModifier<HighestBoundsKey> and conformance _PreferenceActionModifier<A>, v1);
  *(_QWORD *)(v2 - 200) = a1;
  *(_QWORD *)(v2 - 192) = v4;
  OUTLINED_FUNCTION_59_26();
}

void sub_1BD3BB85C()
{
  OUTLINED_FUNCTION_53_34();
  type metadata accessor for GeometryReader();
  OUTLINED_FUNCTION_13_7();
}

void sub_1BD3BB878(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t OpaqueTypeConformance2;
  uint64_t v7;

  *(_QWORD *)(v3 - 144) = v1;
  *(_QWORD *)(v3 - 136) = v2;
  v5 = *(_QWORD *)(v3 - 248);
  *(_QWORD *)(v3 - 128) = a1;
  *(_QWORD *)(v3 - 120) = v5;
  MEMORY[0x1C3B75050](255, v3 - 144, MEMORY[0x1E0CDF150], 0);
  type metadata accessor for ModifiedContent();
  *(_QWORD *)(v3 - 144) = v1;
  *(_QWORD *)(v3 - 136) = v2;
  *(_QWORD *)(v3 - 128) = a1;
  *(_QWORD *)(v3 - 120) = v5;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v7 = MEMORY[0x1E0CDC8B0];
  *(_QWORD *)(v3 - 216) = OpaqueTypeConformance2;
  *(_QWORD *)(v3 - 208) = v7;
  OUTLINED_FUNCTION_17_13();
}

void sub_1BD3BB8EC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 - 232) = ScrollViewReader.init(content:)();
  *(_QWORD *)(v0 - 224) = v1;
  type metadata accessor for ScrollViewReader();
  OUTLINED_FUNCTION_13_7();
}

uint64_t sub_1BD3BB930()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_48_38();
  static ViewBuilder.buildExpression<A>(_:)(v1, v2, v3);
  swift_release();
  v4 = *(_QWORD *)(v0 - 136);
  *(_QWORD *)(v0 - 232) = *(_QWORD *)(v0 - 144);
  *(_QWORD *)(v0 - 224) = v4;
  OUTLINED_FUNCTION_48_38();
  static ViewBuilder.buildBlock<A>(_:)(v5, v6, v7);
  return swift_release();
}

void closure #1 in AutoScrollingList.body.getter(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v21[104];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v25 = a8;
  v26 = a7;
  v27 = a2;
  v32 = a1;
  v24 = a9;
  v22 = type metadata accessor for ScrollViewProxy();
  v29 = *(_QWORD *)(v22 - 8);
  v31 = *(_QWORD *)(v29 + 64);
  MEMORY[0x1E0C80A78](v22);
  v28 = &v21[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v23 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](v19);
  v30 = &v21[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v37 = a3;
  v38 = a4;
  v35 = a3;
  v39 = a5;
  v40 = a6;
  v34 = a6;
  v41 = a7;
  v42 = a8;
  v43 = a10;
  v44 = a11;
  v36 = a10;
  v45 = a12;
  v33 = a12;
  type metadata accessor for AutoScrollingList();
}

uint64_t sub_1BD3BBACC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t AssociatedConformanceWitness;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  void (*v54)(char *, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(uint64_t, _QWORD, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  void (*v68)(char *, uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t OpaqueTypeConformance2;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(uint64_t, uint64_t);
  _BYTE v91[96];

  *(_QWORD *)(v6 - 368) = a1;
  v7 = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v6 - 400) = v7;
  *(_QWORD *)(v6 - 320) = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](a1);
  *(_QWORD *)(v6 - 376) = &v91[-v8];
  *(_QWORD *)(v6 - 392) = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Spacer, _FlexFrameLayout>);
  type metadata accessor for ModifiedContent();
  type metadata accessor for Optional();
  *(_QWORD *)(v6 - 272) = v3;
  *(_QWORD *)(v6 - 256) = v2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _AnchorWritingModifier<CGRect, AutoScrollKey>);
  v10 = type metadata accessor for ModifiedContent();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _AnchorWritingModifier<CGRect, AutoScrollKey> and conformance _AnchorWritingModifier<A, B>, &demangling cache variable for type metadata for _AnchorWritingModifier<CGRect, AutoScrollKey>);
  *(_QWORD *)(v6 - 176) = v5;
  *(_QWORD *)(v6 - 168) = v11;
  v12 = MEMORY[0x1E0CD9C20];
  v13 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v10, v6 - 176);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v6 - 160) = v10;
  *(_QWORD *)(v6 - 152) = AssociatedTypeWitness;
  *(_QWORD *)(v6 - 144) = v13;
  *(_QWORD *)(v6 - 136) = AssociatedConformanceWitness;
  v15 = type metadata accessor for IDView();
  v16 = v1;
  *(_QWORD *)(v6 - 160) = v1;
  *(_QWORD *)(v6 - 152) = AssociatedTypeWitness;
  *(_QWORD *)(v6 - 144) = v15;
  *(_QWORD *)(v6 - 136) = v4;
  *(_QWORD *)(v6 - 128) = AssociatedConformanceWitness;
  v17 = type metadata accessor for ForEach();
  v18 = type metadata accessor for ModifiedContent();
  *(_QWORD *)(v6 - 184) = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDFB30], v15);
  v19 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDFEE8], v17, v6 - 184);
  v20 = MEMORY[0x1E0CD8DA8];
  *(_QWORD *)(v6 - 200) = v19;
  *(_QWORD *)(v6 - 192) = v20;
  MEMORY[0x1C3B750C8](v12, v18, v6 - 200);
  type metadata accessor for LazyVStack();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _AnchorWritingModifier<CGRect, HighestBoundsKey>);
  type metadata accessor for ModifiedContent();
  swift_getTupleTypeMetadata3();
  v21 = type metadata accessor for TupleView();
  MEMORY[0x1C3B750C8](MEMORY[0x1E0CE0680], v21);
  v22 = type metadata accessor for VStack();
  MEMORY[0x1C3B750C8](MEMORY[0x1E0CDFCC0], v22);
  v23 = type metadata accessor for ZStack();
  v24 = type metadata accessor for ModifiedContent();
  v25 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDFCF8], v23);
  v26 = MEMORY[0x1E0CDA228];
  *(_QWORD *)(v6 - 216) = v25;
  *(_QWORD *)(v6 - 208) = v26;
  MEMORY[0x1C3B750C8](v12, v24, v6 - 216);
  v27 = type metadata accessor for ScrollView();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _PreferenceActionModifier<HighestBoundsKey>);
  v28 = type metadata accessor for ModifiedContent();
  v29 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD8558], v27);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _PreferenceActionModifier<HighestBoundsKey> and conformance _PreferenceActionModifier<A>, &demangling cache variable for type metadata for _PreferenceActionModifier<HighestBoundsKey>);
  *(_QWORD *)(v6 - 232) = v29;
  *(_QWORD *)(v6 - 224) = v30;
  *(_QWORD *)(v6 - 520) = v28;
  *(_QWORD *)(v6 - 512) = MEMORY[0x1C3B750C8](v12, v28, v6 - 232);
  v31 = type metadata accessor for GeometryReader();
  *(_QWORD *)(v6 - 496) = v31;
  v32 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9318], v31);
  *(_QWORD *)(v6 - 408) = v32;
  *(_QWORD *)(v6 - 160) = v31;
  *(_QWORD *)(v6 - 152) = v16;
  v33 = *(_QWORD *)(v6 - 384);
  *(_QWORD *)(v6 - 144) = v32;
  *(_QWORD *)(v6 - 136) = v33;
  v34 = MEMORY[0x1C3B75050](0, v6 - 160, MEMORY[0x1E0CDF150], 0);
  *(_QWORD *)(v6 - 456) = *(_QWORD *)(v34 - 8);
  *(_QWORD *)(v6 - 480) = v34;
  MEMORY[0x1E0C80A78](v34);
  *(_QWORD *)(v6 - 392) = &v91[-v35];
  v36 = type metadata accessor for ModifiedContent();
  *(_QWORD *)(v6 - 464) = v36;
  *(_QWORD *)(v6 - 448) = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  *(_QWORD *)(v6 - 488) = &v91[-((v37 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v39 = MEMORY[0x1E0C80A78](v38);
  *(_QWORD *)(v6 - 472) = &v91[-v40];
  v41 = *(_QWORD *)(v6 - 400);
  v42 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v41 + 16);
  *(_QWORD *)(v6 - 416) = v42;
  v43 = *(_QWORD *)(v6 - 376);
  v44 = *(_QWORD *)(v6 - 352);
  v45 = *(_QWORD *)(v6 - 368);
  v42(v43, v44, v45, v39);
  v46 = *(unsigned __int8 *)(v41 + 80);
  *(_QWORD *)(v6 - 504) = v46;
  v47 = (v46 + 88) & ~v46;
  *(_QWORD *)(v6 - 544) = v47 + *(_QWORD *)(v6 - 320);
  v48 = v47;
  *(_QWORD *)(v6 - 528) = v47;
  *(_QWORD *)(v6 - 536) = v46 | 7;
  v49 = (_QWORD *)swift_allocObject();
  v49[2] = *(_QWORD *)(v6 - 280);
  v49[3] = v16;
  v50 = *(_QWORD *)(v6 - 288);
  v49[4] = *(_QWORD *)(v6 - 256);
  v49[5] = v50;
  v51 = *(_QWORD *)(v6 - 360);
  v49[6] = v51;
  v49[7] = v33;
  v52 = *(_QWORD *)(v6 - 272);
  v49[8] = *(_QWORD *)(v6 - 264);
  v49[9] = v52;
  v49[10] = *(_QWORD *)(v6 - 296);
  v53 = (char *)v49 + v48;
  v54 = *(void (**)(char *, uint64_t, uint64_t))(v41 + 32);
  *(_QWORD *)(v6 - 400) = v54;
  v55 = v45;
  v54(v53, v43, v45);
  swift_checkMetadataState();
  *(_QWORD *)(v6 - 160) = GeometryReader.init(content:)();
  *(_QWORD *)(v6 - 152) = v56;
  AutoScrollingList.rows.getter(v45);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 - 416))(v43, v44, v45);
  v57 = *(_QWORD *)(v6 - 336);
  v58 = *(void (**)(uint64_t, _QWORD, uint64_t))(v57 + 16);
  *(_QWORD *)(v6 - 512) = v58;
  v59 = *(_QWORD *)(v6 - 344);
  v60 = *(_QWORD *)(v6 - 440);
  v58(v59, *(_QWORD *)(v6 - 304), v60);
  v61 = *(unsigned __int8 *)(v57 + 80);
  v62 = (*(_QWORD *)(v6 - 544) + v61) & ~v61;
  v63 = (char *)swift_allocObject();
  *((_QWORD *)v63 + 2) = *(_QWORD *)(v6 - 280);
  *((_QWORD *)v63 + 3) = v16;
  v64 = *(_QWORD *)(v6 - 288);
  *((_QWORD *)v63 + 4) = *(_QWORD *)(v6 - 256);
  *((_QWORD *)v63 + 5) = v64;
  v65 = *(_QWORD *)(v6 - 384);
  *((_QWORD *)v63 + 6) = v51;
  *((_QWORD *)v63 + 7) = v65;
  v66 = *(_QWORD *)(v6 - 272);
  *((_QWORD *)v63 + 8) = *(_QWORD *)(v6 - 264);
  *((_QWORD *)v63 + 9) = v66;
  v67 = &v63[*(_QWORD *)(v6 - 528)];
  *((_QWORD *)v63 + 10) = *(_QWORD *)(v6 - 296);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 - 400))(v67, v43, v55);
  v68 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 336) + 32);
  *(_QWORD *)(v6 - 336) = v68;
  v68(&v63[v62], v59, v60);
  v69 = swift_checkMetadataState();
  OUTLINED_FUNCTION_3_13();
  v70 = *(_QWORD *)(v6 - 328);
  View.onChange<A>(of:initial:_:)();
  swift_release();
  v71 = v70;
  v72 = v16;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 432) + 8))(v71, v16);
  swift_release();
  v73 = v60;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 - 512))(v59, *(_QWORD *)(v6 - 304), v60);
  v74 = *(_QWORD *)(v6 - 376);
  v75 = *(_QWORD *)(v6 - 368);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 - 416))(v74, *(_QWORD *)(v6 - 352), v75);
  v76 = (v61 + 88) & ~v61;
  v77 = (*(_QWORD *)(v6 - 312) + *(_QWORD *)(v6 - 504) + v76) & ~*(_QWORD *)(v6 - 504);
  v78 = (char *)swift_allocObject();
  *((_QWORD *)v78 + 2) = *(_QWORD *)(v6 - 280);
  *((_QWORD *)v78 + 3) = v72;
  v79 = *(_QWORD *)(v6 - 288);
  *((_QWORD *)v78 + 4) = *(_QWORD *)(v6 - 256);
  *((_QWORD *)v78 + 5) = v79;
  *((_QWORD *)v78 + 6) = *(_QWORD *)(v6 - 360);
  *((_QWORD *)v78 + 7) = v65;
  v80 = *(_QWORD *)(v6 - 272);
  *((_QWORD *)v78 + 8) = *(_QWORD *)(v6 - 264);
  *((_QWORD *)v78 + 9) = v80;
  *((_QWORD *)v78 + 10) = *(_QWORD *)(v6 - 296);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 - 336))(&v78[v76], *(_QWORD *)(v6 - 344), v73);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 - 400))(&v78[v77], v74, v75);
  *(_QWORD *)(v6 - 160) = v69;
  *(_QWORD *)(v6 - 152) = v72;
  *(_QWORD *)(v6 - 144) = *(_QWORD *)(v6 - 408);
  *(_QWORD *)(v6 - 136) = v65;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v82 = *(_QWORD *)(v6 - 488);
  v83 = *(_QWORD *)(v6 - 480);
  v84 = *(_QWORD *)(v6 - 392);
  View.onAppear(perform:)();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 456) + 8))(v84, v83);
  v85 = MEMORY[0x1E0CDC8B0];
  *(_QWORD *)(v6 - 248) = OpaqueTypeConformance2;
  *(_QWORD *)(v6 - 240) = v85;
  v86 = *(_QWORD *)(v6 - 464);
  v87 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v86, v6 - 248);
  v88 = *(_QWORD *)(v6 - 472);
  static ViewBuilder.buildExpression<A>(_:)(v82, v86, v87);
  v89 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 448) + 8);
  v89(v82, v86);
  static ViewBuilder.buildBlock<A>(_:)(v88, v86, *(_QWORD *)(v6 - 424));
  return ((uint64_t (*)(uint64_t, uint64_t))v89)(v88, v86);
}

void closure #1 in closure #1 in AutoScrollingList.body.getter(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[26];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v23 = a8;
  v21[10] = a7;
  v21[20] = a9;
  v21[21] = a4;
  v21[16] = a2;
  v21[13] = a1;
  v18 = type metadata accessor for GeometryProxy();
  v22 = *(_QWORD *)(v18 - 8);
  v19 = *(_QWORD *)(v22 + 64);
  v21[18] = v18;
  v21[19] = v19;
  MEMORY[0x1E0C80A78](v18);
  v21[17] = (char *)v21 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = a3;
  v25 = a4;
  v21[24] = a6;
  v21[25] = a3;
  v26 = a5;
  v27 = a6;
  v28 = a7;
  v29 = a8;
  v30 = a10;
  v31 = a11;
  v32 = a12;
  v21[23] = a12;
  type metadata accessor for AutoScrollingList();
}

uint64_t sub_1BD3BC504(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t AssociatedConformanceWitness;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(uint64_t, uint64_t);
  _BYTE v71[112];

  v7 = *(_QWORD *)(a1 - 8);
  v1[12] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v1[14] = a1;
  v1[15] = v8;
  MEMORY[0x1E0C80A78](a1);
  v1[11] = &v71[-v9];
  v1[9] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Spacer, _FlexFrameLayout>);
  type metadata accessor for ModifiedContent();
  v1[8] = type metadata accessor for Optional();
  v1[22] = v2;
  v10 = v4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _AnchorWritingModifier<CGRect, AutoScrollKey>);
  v12 = type metadata accessor for ModifiedContent();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _AnchorWritingModifier<CGRect, AutoScrollKey> and conformance _AnchorWritingModifier<A, B>, &demangling cache variable for type metadata for _AnchorWritingModifier<CGRect, AutoScrollKey>);
  *(_QWORD *)(v6 - 192) = v5;
  *(_QWORD *)(v6 - 184) = v13;
  v14 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v12, v6 - 192);
  v15 = v10;
  v1[2] = v10;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v6 - 176) = v12;
  *(_QWORD *)(v6 - 168) = AssociatedTypeWitness;
  *(_QWORD *)(v6 - 160) = v14;
  *(_QWORD *)(v6 - 152) = AssociatedConformanceWitness;
  v17 = type metadata accessor for IDView();
  v18 = v1[21];
  *(_QWORD *)(v6 - 176) = v18;
  *(_QWORD *)(v6 - 168) = AssociatedTypeWitness;
  *(_QWORD *)(v6 - 160) = v17;
  *(_QWORD *)(v6 - 152) = v3;
  v19 = v3;
  v1[1] = v3;
  *(_QWORD *)(v6 - 144) = AssociatedConformanceWitness;
  v20 = type metadata accessor for ForEach();
  v21 = type metadata accessor for ModifiedContent();
  *(_QWORD *)(v6 - 200) = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDFB30], v17);
  v22 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDFEE8], v20, v6 - 200);
  v23 = MEMORY[0x1E0CD8DA8];
  *(_QWORD *)(v6 - 216) = v22;
  *(_QWORD *)(v6 - 208) = v23;
  v24 = MEMORY[0x1E0CD9C20];
  MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v21, v6 - 216);
  type metadata accessor for LazyVStack();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _AnchorWritingModifier<CGRect, HighestBoundsKey>);
  type metadata accessor for ModifiedContent();
  swift_getTupleTypeMetadata3();
  v25 = type metadata accessor for TupleView();
  MEMORY[0x1C3B750C8](MEMORY[0x1E0CE0680], v25);
  v26 = type metadata accessor for VStack();
  MEMORY[0x1C3B750C8](MEMORY[0x1E0CDFCC0], v26);
  v27 = type metadata accessor for ZStack();
  v28 = type metadata accessor for ModifiedContent();
  v29 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDFCF8], v27);
  v30 = MEMORY[0x1E0CDA228];
  *(_QWORD *)(v6 - 232) = v29;
  *(_QWORD *)(v6 - 224) = v30;
  MEMORY[0x1C3B750C8](v24, v28, v6 - 232);
  v31 = type metadata accessor for ScrollView();
  v1[8] = *(_QWORD *)(v31 - 8);
  v1[4] = v31;
  MEMORY[0x1E0C80A78](v31);
  v1[3] = &v71[-v32];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _PreferenceActionModifier<HighestBoundsKey>);
  v33 = type metadata accessor for ModifiedContent();
  v1[7] = v33;
  v1[9] = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v1[5] = &v71[-((v34 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v35);
  v1[6] = &v71[-v36];
  v37 = v1[13];
  GeometryProxy.size.getter();
  v39 = v38;
  v41 = v40;
  static Axis.Set.vertical.getter();
  v1[30] = v1[25];
  v1[31] = v18;
  v42 = v1[24];
  v1[32] = v15;
  v1[33] = v42;
  v43 = v1[10];
  v44 = v1[27];
  v1[34] = v43;
  v1[35] = v44;
  v45 = v1[22];
  v1[36] = v19;
  v1[37] = v45;
  v46 = v1[16];
  v1[38] = v1[23];
  v1[39] = v46;
  v1[41] = 0;
  v1[42] = 0;
  v1[40] = v37;
  v1[43] = v39;
  v1[44] = v41;
  ScrollView.init(_:showsIndicators:content:)();
  v48 = v1[11];
  v47 = v1[12];
  v49 = v46;
  v50 = v1[14];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 16))(v48, v49, v50);
  v51 = v1[26];
  v52 = v1[17];
  v53 = v1[18];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v51 + 16))(v52, v37, v53);
  v54 = (*(unsigned __int8 *)(v47 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
  v55 = (v1[15] + *(unsigned __int8 *)(v51 + 80) + v54) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
  v56 = (char *)swift_allocObject();
  v57 = v1[21];
  *((_QWORD *)v56 + 2) = v1[25];
  *((_QWORD *)v56 + 3) = v57;
  v58 = v1[24];
  *((_QWORD *)v56 + 4) = v1[2];
  *((_QWORD *)v56 + 5) = v58;
  v59 = v1[27];
  *((_QWORD *)v56 + 6) = v43;
  *((_QWORD *)v56 + 7) = v59;
  v60 = v1[22];
  *((_QWORD *)v56 + 8) = v1[1];
  *((_QWORD *)v56 + 9) = v60;
  *((_QWORD *)v56 + 10) = v1[23];
  (*(void (**)(char *, uint64_t, uint64_t))(v47 + 32))(&v56[v54], v48, v50);
  (*(void (**)(char *, uint64_t, uint64_t))(v1[26] + 32))(&v56[v55], v52, v53);
  v61 = v1[4];
  v62 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD8558], v61);
  lazy protocol witness table accessor for type HighestBoundsKey and conformance HighestBoundsKey();
  lazy protocol witness table accessor for type ListAnchor? and conformance <A> A?();
  v63 = v1[5];
  v64 = v1[3];
  View.onPreferenceChange<A>(_:perform:)();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v1[8] + 8))(v64, v61);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _PreferenceActionModifier<HighestBoundsKey> and conformance _PreferenceActionModifier<A>, &demangling cache variable for type metadata for _PreferenceActionModifier<HighestBoundsKey>);
  *(_QWORD *)(v6 - 248) = v62;
  *(_QWORD *)(v6 - 240) = v65;
  v66 = v1[7];
  v67 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v66, v6 - 248);
  v68 = v1[6];
  static ViewBuilder.buildExpression<A>(_:)(v63, v66, v67);
  v69 = *(void (**)(uint64_t, uint64_t))(v1[9] + 8);
  v69(v63, v66);
  static ViewBuilder.buildBlock<A>(_:)(v68, v66, v1[20]);
  return ((uint64_t (*)(uint64_t, uint64_t))v69)(v68, v66);
}

uint64_t closure #1 in closure #1 in closure #1 in AutoScrollingList.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, double a12@<D2>, double a13@<D3>, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t AssociatedConformanceWitness;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  uint64_t v44;
  _QWORD v45[2];
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  double v69;
  double v70;
  double v71;
  double v72;
  _QWORD v73[2];
  _QWORD v74[2];
  _QWORD v75[3];
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD v79[2];

  v56 = a8;
  v54 = a7;
  v51 = a6;
  v47 = a4;
  v52 = a3;
  v55 = a2;
  v53 = a1;
  v57 = a9;
  v50 = a16;
  v48 = a14;
  v46 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Spacer, _FlexFrameLayout>);
  type metadata accessor for ModifiedContent();
  v45[1] = type metadata accessor for Optional();
  v49 = a5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _AnchorWritingModifier<CGRect, AutoScrollKey>);
  v23 = type metadata accessor for ModifiedContent();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _AnchorWritingModifier<CGRect, AutoScrollKey> and conformance _AnchorWritingModifier<A, B>, &demangling cache variable for type metadata for _AnchorWritingModifier<CGRect, AutoScrollKey>);
  v79[0] = a16;
  v79[1] = v24;
  v25 = MEMORY[0x1E0CD9C20];
  MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v23, v79);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v75[1] = a4;
  v75[2] = AssociatedTypeWitness;
  v76 = type metadata accessor for IDView();
  v77 = a14;
  v78 = AssociatedConformanceWitness;
  v27 = type metadata accessor for ForEach();
  v28 = type metadata accessor for ModifiedContent();
  v75[0] = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDFB30], v76);
  v74[0] = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDFEE8], v27, v75);
  v74[1] = MEMORY[0x1E0CD8DA8];
  MEMORY[0x1C3B750C8](v25, v28, v74);
  type metadata accessor for LazyVStack();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _AnchorWritingModifier<CGRect, HighestBoundsKey>);
  type metadata accessor for ModifiedContent();
  swift_getTupleTypeMetadata3();
  v29 = type metadata accessor for TupleView();
  MEMORY[0x1C3B750C8](MEMORY[0x1E0CE0680], v29);
  v30 = type metadata accessor for VStack();
  MEMORY[0x1C3B750C8](MEMORY[0x1E0CDFCC0], v30);
  v31 = type metadata accessor for ZStack();
  v32 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v34 = (char *)v45 - v33;
  v35 = type metadata accessor for ModifiedContent();
  v46 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v37 = (char *)v45 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v38);
  v40 = (char *)v45 - v39;
  static Alignment.bottomLeading.getter();
  v58 = v52;
  v59 = v47;
  v60 = v49;
  v61 = v51;
  v62 = v54;
  v63 = v56;
  v64 = v48;
  v65 = a15;
  v66 = v50;
  v67 = v53;
  v68 = v55;
  v69 = a10;
  v70 = a11;
  v71 = a12;
  v72 = a13;
  ZStack.init(alignment:content:)();
  GeometryProxy.size.getter();
  v44 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDFCF8], v31);
  default argument 6 of View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v31, v44);
  View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v31);
  v73[0] = v44;
  v73[1] = MEMORY[0x1E0CDA228];
  v41 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v35, v73);
  static ViewBuilder.buildExpression<A>(_:)(v37, v35, v41);
  v42 = *(void (**)(char *, uint64_t))(v46 + 8);
  v42(v37, v35);
  static ViewBuilder.buildBlock<A>(_:)((uint64_t)v40, v35, v57);
  return ((uint64_t (*)(char *, uint64_t))v42)(v40, v35);
}

uint64_t closure #1 in closure #1 in closure #1 in closure #1 in AutoScrollingList.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, double a12@<D2>, double a13@<D3>, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t AssociatedConformanceWitness;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  _QWORD v40[2];
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  double v60;
  double v61;
  double v62;
  double v63;
  _QWORD v64[2];
  _QWORD v65[3];
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD v69[2];

  v47 = a8;
  v45 = a7;
  v42 = a6;
  v43 = a3;
  v46 = a2;
  v44 = a1;
  v48 = a9;
  v41 = a16;
  v40[1] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Spacer, _FlexFrameLayout>);
  type metadata accessor for ModifiedContent();
  v40[0] = type metadata accessor for Optional();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _AnchorWritingModifier<CGRect, AutoScrollKey>);
  v23 = type metadata accessor for ModifiedContent();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _AnchorWritingModifier<CGRect, AutoScrollKey> and conformance _AnchorWritingModifier<A, B>, &demangling cache variable for type metadata for _AnchorWritingModifier<CGRect, AutoScrollKey>);
  v69[0] = a16;
  v69[1] = v24;
  v25 = MEMORY[0x1E0CD9C20];
  MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v23, v69);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v65[1] = a4;
  v65[2] = AssociatedTypeWitness;
  v66 = type metadata accessor for IDView();
  v67 = a14;
  v68 = AssociatedConformanceWitness;
  v27 = type metadata accessor for ForEach();
  v28 = type metadata accessor for ModifiedContent();
  v65[0] = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDFB30], v66);
  v64[0] = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDFEE8], v27, v65);
  v64[1] = MEMORY[0x1E0CD8DA8];
  MEMORY[0x1C3B750C8](v25, v28, v64);
  type metadata accessor for LazyVStack();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _AnchorWritingModifier<CGRect, HighestBoundsKey>);
  type metadata accessor for ModifiedContent();
  swift_getTupleTypeMetadata3();
  v29 = type metadata accessor for TupleView();
  MEMORY[0x1C3B750C8](MEMORY[0x1E0CE0680], v29);
  v30 = type metadata accessor for VStack();
  v31 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v33 = (char *)v40 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v34);
  v36 = (char *)v40 - v35;
  static HorizontalAlignment.leading.getter();
  v49 = v43;
  v50 = a4;
  v51 = a5;
  v52 = v42;
  v53 = v45;
  v54 = v47;
  v55 = a14;
  v56 = a15;
  v57 = v41;
  v58 = v44;
  v59 = v46;
  v60 = a10;
  v61 = a11;
  v62 = a12;
  v63 = a13;
  VStack.init(alignment:spacing:content:)();
  v37 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDFCC0], v30);
  static ViewBuilder.buildExpression<A>(_:)(v33, v30, v37);
  v38 = *(void (**)(char *, uint64_t))(v31 + 8);
  v38(v33, v30);
  static ViewBuilder.buildBlock<A>(_:)((uint64_t)v36, v30, v48);
  return ((uint64_t (*)(char *, uint64_t))v38)(v36, v30);
}

void closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in AutoScrollingList.body.getter(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t AssociatedTypeWitness;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t AssociatedConformanceWitness;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  char v95;
  char v96;
  char v97;
  char v98;
  char v99;
  char v100;
  _QWORD v101[2];
  uint64_t v102;
  _QWORD v103[3];
  char v104;
  uint64_t v105;
  char v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  char v110;
  uint64_t v111;
  char v112;
  uint64_t v113;
  char v114;
  uint64_t v115;
  uint64_t v116;

  v80 = a6;
  v81 = a8;
  v71 = a2;
  v72 = a7;
  v46 = a3;
  v82 = a1;
  v70 = a9;
  v77 = a12;
  v75 = a10;
  v14 = type metadata accessor for GeometryProxy();
  v65 = *(_QWORD *)(v14 - 8);
  v66 = v14;
  MEMORY[0x1E0C80A78](v14);
  v63 = v15;
  v64 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for PinnedScrollableViews();
  MEMORY[0x1E0C80A78](v16);
  v60 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = a11;
  v79 = a5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _AnchorWritingModifier<CGRect, AutoScrollKey>);
  v19 = type metadata accessor for ModifiedContent();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _AnchorWritingModifier<CGRect, AutoScrollKey> and conformance _AnchorWritingModifier<A, B>, &demangling cache variable for type metadata for _AnchorWritingModifier<CGRect, AutoScrollKey>);
  v103[0] = a12;
  v103[1] = v20;
  v21 = MEMORY[0x1E0CD9C20];
  v22 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v19, v103);
  v23 = v46;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v85 = v19;
  v86 = AssociatedTypeWitness;
  v87 = v22;
  v88 = AssociatedConformanceWitness;
  v25 = type metadata accessor for IDView();
  v85 = a4;
  v86 = AssociatedTypeWitness;
  v87 = v25;
  v88 = a10;
  v89 = AssociatedConformanceWitness;
  v26 = type metadata accessor for ForEach();
  v27 = type metadata accessor for ModifiedContent();
  v102 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDFB30], v25);
  v101[0] = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDFEE8], v26, &v102);
  v101[1] = MEMORY[0x1E0CD8DA8];
  v55 = MEMORY[0x1C3B750C8](v21, v27, v101);
  v56 = v27;
  v28 = type metadata accessor for LazyVStack();
  v58 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v57 = (char *)&v41 - v29;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _AnchorWritingModifier<CGRect, HighestBoundsKey>);
  v59 = v28;
  v69 = type metadata accessor for ModifiedContent();
  v62 = *(_QWORD *)(v69 - 8);
  MEMORY[0x1E0C80A78](v69);
  v68 = (char *)&v41 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v31);
  v67 = (char *)&v41 - v32;
  v33 = type metadata accessor for ModifiedContent();
  v45 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v43 = (char *)&v41 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v35);
  v44 = (char *)&v41 - v36;
  v42 = type metadata accessor for Optional();
  MEMORY[0x1E0C80A78](v42);
  MEMORY[0x1E0C80A78](v37);
  v84 = v33;
  v78 = type metadata accessor for Optional();
  v73 = *(_QWORD *)(v78 - 8);
  MEMORY[0x1E0C80A78](v78);
  v83 = (char *)&v41 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v39);
  v74 = (char *)&v41 - v40;
  static Alignment.center.getter();
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  v47 = v103[2];
  v48 = v105;
  v49 = v107;
  v50 = v109;
  v51 = v111;
  v52 = v113;
  v53 = v116;
  v54 = v115;
  v100 = 1;
  v99 = v104;
  v98 = v106;
  v97 = v108;
  v96 = v110;
  v95 = v112;
  v94 = v114;
  v85 = v23;
  v86 = a4;
  v61 = a4;
  v87 = v79;
  v88 = v80;
  v89 = v72;
  v90 = v81;
  v91 = v75;
  v92 = v76;
  v93 = v77;
  type metadata accessor for AutoScrollingList();
}

uint64_t sub_1BD3BD944(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int EnumTagSinglePayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, _QWORD);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t);

  (*(void (**)(void))(*(_QWORD *)(v1 + 328) + *(int *)(a1 + 108)))();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v2, 1, v7);
  v9 = MEMORY[0x1E0CD8D70];
  if (EnumTagSinglePayload == 1)
  {
    (*(void (**)(uint64_t, _QWORD))(v6 + 8))(v2, *(_QWORD *)(v1 + 8));
    v10 = *(_QWORD *)(v1 + 344);
    __swift_storeEnumTagSinglePayload(*(_QWORD *)(v1 + 336), 1, 1, v10);
    *(_QWORD *)(v1 + 608) = v5;
    *(_QWORD *)(v1 + 616) = v9;
    MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v10, v1 + 608);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v4, v2, v7);
    GeometryProxy.size.getter();
    static Alignment.center.getter();
    v11 = *(_QWORD *)(v1 + 16);
    View.frame(width:height:alignment:)();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v7);
    *(_QWORD *)(v1 + 352) = v5;
    *(_QWORD *)(v1 + 360) = v9;
    v12 = *(_QWORD *)(v1 + 344);
    v13 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v12, v1 + 352);
    v14 = *(_QWORD *)(v1 + 24);
    static ViewBuilder.buildExpression<A>(_:)(v11, v12, v13);
    v15 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 32) + 8);
    v15(v11, v12);
    v16 = *(_QWORD *)(v1 + 336);
    static ViewBuilder.buildBlock<A>(_:)(v14, v12, v16);
    v15(v14, v12);
    __swift_storeEnumTagSinglePayload(v16, 0, 1, v12);
  }
  v17 = *(_QWORD *)(v1 + 336);
  static ViewBuilder.buildIf<A>(_:)(v17, *(_QWORD *)(v1 + 264));
  v18 = *(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 + 256) + 8);
  *(_QWORD *)(v1 + 40) = v18;
  v18(v17, *(_QWORD *)(v1 + 296));
  v19 = static HorizontalAlignment.leading.getter();
  MEMORY[0x1E0C80A78](v19);
  v20 = *(_QWORD *)(v1 + 240);
  default argument 2 of LazyVStack.init(alignment:spacing:pinnedViews:content:)();
  v21 = *(_QWORD *)(v1 + 128);
  LazyVStack.init(alignment:spacing:pinnedViews:content:)();
  static Anchor.Source<A>.bounds.getter();
  v22 = *(_QWORD *)(v1 + 184);
  v23 = *(_QWORD *)(v1 + 192);
  v24 = *(_QWORD *)(v1 + 200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v22, v20, v24);
  v25 = (*(unsigned __int8 *)(v23 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  v26 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v23 + 32))(v26 + v25, v22, v24);
  type metadata accessor for CGRect(0);
  v27 = *(_QWORD *)(v1 + 144);
  v28 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD84E8], v27);
  lazy protocol witness table accessor for type HighestBoundsKey and conformance HighestBoundsKey();
  v29 = *(_QWORD *)(v1 + 216);
  View.anchorPreference<A, B>(key:value:transform:)();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 136) + 8))(v21, v27);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _AnchorWritingModifier<CGRect, HighestBoundsKey> and conformance _AnchorWritingModifier<A, B>, &demangling cache variable for type metadata for _AnchorWritingModifier<CGRect, HighestBoundsKey>);
  *(_QWORD *)(v1 + 592) = v28;
  *(_QWORD *)(v1 + 600) = v30;
  v31 = *(_QWORD *)(v1 + 224);
  v32 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v31, v1 + 592);
  v33 = *(_QWORD *)(v1 + 208);
  static ViewBuilder.buildExpression<A>(_:)(v29, v31, v32);
  v34 = *(_QWORD *)(v1 + 168);
  v35 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
  v35(v29, v31);
  *(_QWORD *)(v1 + 440) = 0;
  *(_BYTE *)(v1 + 448) = *(_BYTE *)(v1 + 680);
  *(_DWORD *)(v1 + 449) = *(_DWORD *)(v1 + 673);
  *(_DWORD *)(v1 + 452) = *(_DWORD *)(v1 + 676);
  *(_QWORD *)(v1 + 456) = *(_QWORD *)(v1 + 48);
  *(_BYTE *)(v1 + 464) = *(_BYTE *)(v1 + 672);
  *(_DWORD *)(v1 + 465) = *(_DWORD *)(v1 + 665);
  *(_DWORD *)(v1 + 468) = *(_DWORD *)(v1 + 668);
  *(_QWORD *)(v1 + 472) = *(_QWORD *)(v1 + 56);
  *(_BYTE *)(v1 + 480) = *(_BYTE *)(v1 + 664);
  *(_DWORD *)(v1 + 481) = *(_DWORD *)(v1 + 657);
  *(_DWORD *)(v1 + 484) = *(_DWORD *)(v1 + 660);
  *(_QWORD *)(v1 + 488) = *(_QWORD *)(v1 + 64);
  *(_BYTE *)(v1 + 496) = *(_BYTE *)(v1 + 656);
  *(_DWORD *)(v1 + 497) = *(_DWORD *)(v1 + 649);
  *(_DWORD *)(v1 + 500) = *(_DWORD *)(v1 + 652);
  *(_QWORD *)(v1 + 504) = *(_QWORD *)(v1 + 72);
  *(_BYTE *)(v1 + 512) = *(_BYTE *)(v1 + 648);
  *(_DWORD *)(v1 + 516) = *(_DWORD *)(v1 + 644);
  *(_DWORD *)(v1 + 513) = *(_DWORD *)(v1 + 641);
  *(_QWORD *)(v1 + 520) = *(_QWORD *)(v1 + 80);
  *(_BYTE *)(v1 + 528) = *(_BYTE *)(v1 + 640);
  *(_DWORD *)(v1 + 532) = *(_DWORD *)(v1 + 636);
  *(_DWORD *)(v1 + 529) = *(_DWORD *)(v1 + 633);
  *(_QWORD *)(v1 + 536) = *(_QWORD *)(v1 + 88);
  *(_BYTE *)(v1 + 544) = *(_BYTE *)(v1 + 632);
  *(_DWORD *)(v1 + 548) = *(_DWORD *)(v1 + 628);
  *(_DWORD *)(v1 + 545) = *(_DWORD *)(v1 + 625);
  *(_QWORD *)(v1 + 552) = *(_QWORD *)(v1 + 104);
  *(_QWORD *)(v1 + 560) = *(_QWORD *)(v1 + 96);
  *(_QWORD *)(v1 + 568) = v1 + 440;
  v36 = *(_QWORD *)(v1 + 264);
  v37 = *(_QWORD *)(v1 + 336);
  v38 = *(_QWORD *)(v1 + 296);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 + 256) + 16))(v37, v36, v38);
  *(_QWORD *)(v1 + 576) = v37;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16))(v29, v33, v31);
  *(_QWORD *)(v1 + 584) = v29;
  *(_QWORD *)(v1 + 416) = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Spacer, _FlexFrameLayout>);
  *(_QWORD *)(v1 + 424) = v38;
  *(_QWORD *)(v1 + 432) = v31;
  *(_QWORD *)(v1 + 392) = lazy protocol witness table accessor for type ModifiedContent<Spacer, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>();
  *(_QWORD *)(v1 + 376) = *(_QWORD *)(v1 + 248);
  *(_QWORD *)(v1 + 384) = MEMORY[0x1E0CD8D70];
  *(_QWORD *)(v1 + 368) = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], *(_QWORD *)(v1 + 344), v1 + 376);
  *(_QWORD *)(v1 + 400) = MEMORY[0x1C3B750C8](MEMORY[0x1E0CE0798], v38, v1 + 368);
  *(_QWORD *)(v1 + 408) = v32;
  static ViewBuilder.buildBlock<each A>(_:)((uint64_t *)(v1 + 568), 3, v1 + 416);
  v35(v33, v31);
  v39 = *(void (**)(uint64_t, uint64_t))(v1 + 40);
  v39(v36, v38);
  v35(v29, v31);
  return ((uint64_t (*)(uint64_t, uint64_t))v39)(v37, v38);
}

void closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in AutoScrollingList.body.getter(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[25];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v20[19] = a8;
  v20[18] = a7;
  v20[17] = a3;
  v20[20] = a2;
  v20[15] = a1;
  v20[21] = a9;
  v18 = type metadata accessor for GeometryProxy();
  v21 = *(_QWORD *)(v18 - 8);
  v22 = v18;
  v20[16] = *(_QWORD *)(v21 + 64);
  MEMORY[0x1E0C80A78](v18);
  v20[14] = (char *)v20 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = a3;
  v24 = a4;
  v25 = a5;
  v26 = a6;
  v20[9] = a6;
  v27 = a7;
  v28 = a8;
  v29 = a10;
  v30 = a11;
  v20[0] = a10;
  v31 = a12;
  v20[6] = a12;
  type metadata accessor for AutoScrollingList();
}

uint64_t sub_1BD3BE018(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t AssociatedTypeWitness;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t AssociatedConformanceWitness;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t, uint64_t);
  _BYTE v55[112];

  *(_QWORD *)(v6 - 272) = a1;
  v11 = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v6 - 264) = v11;
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](a1);
  *(_QWORD *)(v6 - 392) = &v55[-v13];
  v14 = v2;
  MEMORY[0x1E0C80A78](v15);
  *(_QWORD *)(v6 - 256) = &v55[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_QWORD *)(v6 - 424) = v1;
  *(_QWORD *)(v6 - 432) = v4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _AnchorWritingModifier<CGRect, AutoScrollKey>);
  v18 = type metadata accessor for ModifiedContent();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _AnchorWritingModifier<CGRect, AutoScrollKey> and conformance _AnchorWritingModifier<A, B>, &demangling cache variable for type metadata for _AnchorWritingModifier<CGRect, AutoScrollKey>);
  *(_QWORD *)(v6 - 208) = v5;
  *(_QWORD *)(v6 - 200) = v19;
  v20 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v18, v6 - 208);
  v21 = AssociatedTypeWitness;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v6 - 192) = v18;
  *(_QWORD *)(v6 - 184) = v21;
  *(_QWORD *)(v6 - 384) = v21;
  *(_QWORD *)(v6 - 176) = v20;
  *(_QWORD *)(v6 - 168) = AssociatedConformanceWitness;
  v23 = type metadata accessor for IDView();
  *(_QWORD *)(v6 - 416) = v23;
  *(_QWORD *)(v6 - 192) = v14;
  *(_QWORD *)(v6 - 184) = v21;
  v24 = v14;
  *(_QWORD *)(v6 - 176) = v23;
  *(_QWORD *)(v6 - 168) = v3;
  *(_QWORD *)(v6 - 160) = AssociatedConformanceWitness;
  v25 = type metadata accessor for ForEach();
  *(_QWORD *)(v6 - 352) = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  *(_QWORD *)(v6 - 440) = &v55[-v26];
  v27 = type metadata accessor for ModifiedContent();
  *(_QWORD *)(v6 - 360) = v27;
  *(_QWORD *)(v6 - 344) = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  *(_QWORD *)(v6 - 408) = &v55[-((v28 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v29);
  *(_QWORD *)(v6 - 368) = &v55[-v30];
  v31 = *(_QWORD *)(v6 - 272);
  v32 = *(_QWORD *)(v6 - 328);
  AutoScrollingList.rows.getter(v31);
  v33 = *(_QWORD *)(v6 - 264);
  v34 = *(_QWORD *)(v6 - 392);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 16))(v34, v32, v31);
  v35 = *(_QWORD *)(v6 - 248);
  v36 = *(_QWORD *)(v6 - 336);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(v35 + 16))(v36, *(_QWORD *)(v6 - 288), *(_QWORD *)(v6 - 240));
  v37 = (*(unsigned __int8 *)(v33 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  v38 = (v12 + v37 + 7) & 0xFFFFFFFFFFFFFFF8;
  v39 = (*(unsigned __int8 *)(v35 + 80) + v38 + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
  v40 = (char *)swift_allocObject();
  *((_QWORD *)v40 + 2) = *(_QWORD *)(v6 - 312);
  *((_QWORD *)v40 + 3) = v24;
  v41 = *(_QWORD *)(v6 - 376);
  *((_QWORD *)v40 + 4) = *(_QWORD *)(v6 - 432);
  *((_QWORD *)v40 + 5) = v41;
  v42 = *(_QWORD *)(v6 - 296);
  *((_QWORD *)v40 + 6) = *(_QWORD *)(v6 - 304);
  *((_QWORD *)v40 + 7) = v42;
  v43 = *(_QWORD *)(v6 - 424);
  *((_QWORD *)v40 + 8) = *(_QWORD *)(v6 - 448);
  *((_QWORD *)v40 + 9) = v43;
  *((_QWORD *)v40 + 10) = *(_QWORD *)(v6 - 400);
  (*(void (**)(char *, uint64_t, _QWORD))(*(_QWORD *)(v6 - 264) + 32))(&v40[v37], v34, *(_QWORD *)(v6 - 272));
  v44 = &v40[v38];
  *(_QWORD *)v44 = v10;
  *((_QWORD *)v44 + 1) = v9;
  *((_QWORD *)v44 + 2) = v8;
  *((_QWORD *)v44 + 3) = v7;
  (*(void (**)(char *, uint64_t, _QWORD))(*(_QWORD *)(v6 - 248) + 32))(&v40[v39], v36, *(_QWORD *)(v6 - 240));
  v45 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDFB30], *(_QWORD *)(v6 - 416));
  v46 = *(_QWORD *)(v6 - 440);
  ForEach<>.init(_:content:)();
  *(_QWORD *)(v6 - 216) = v45;
  v47 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDFEE8], v25, v6 - 216);
  ((void (*)(uint64_t, uint64_t))default argument 1 of View.scaleEffect(_:anchor:))(v25, v47);
  v48 = *(_QWORD *)(v6 - 408);
  View.scaleEffect(_:anchor:)();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 352) + 8))(v46, v25);
  v49 = MEMORY[0x1E0CD8DA8];
  *(_QWORD *)(v6 - 232) = v47;
  *(_QWORD *)(v6 - 224) = v49;
  v50 = *(_QWORD *)(v6 - 360);
  v51 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v50, v6 - 232);
  v52 = *(_QWORD *)(v6 - 368);
  static ViewBuilder.buildExpression<A>(_:)(v48, v50, v51);
  v53 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 344) + 8);
  v53(v48, v50);
  static ViewBuilder.buildBlock<A>(_:)(v52, v50, *(_QWORD *)(v6 - 280));
  return ((uint64_t (*)(uint64_t, uint64_t))v53)(v52, v50);
}

void closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in AutoScrollingList.body.getter(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[10];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v30 = a8;
  v29 = a5;
  v28 = a4;
  v32 = a3;
  v25 = a2;
  v40 = a1;
  v35 = a9;
  v27 = a11;
  v26 = a10;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v34 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v33 = (char *)v23 - v19;
  v24 = type metadata accessor for GeometryProxy();
  v38 = *(_QWORD *)(v24 - 8);
  v31 = *(_QWORD *)(v38 + 64);
  MEMORY[0x1E0C80A78](v24);
  v37 = (char *)v23 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = *(_QWORD *)(a6 - 8);
  v23[9] = *(_QWORD *)(v36 + 64);
  MEMORY[0x1E0C80A78](v21);
  v23[7] = (char *)v23 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = a4;
  v42 = a5;
  v43 = a6;
  v44 = a7;
  v45 = a8;
  v46 = a10;
  v47 = a11;
  v48 = a12;
  v39 = a12;
  v49 = a13;
  v23[5] = a13;
  type metadata accessor for AutoScrollingList();
}

uint64_t sub_1BD3BE6AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t AssociatedConformanceWitness;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t, uint64_t);
  _BYTE v55[112];

  v11 = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v5 - 256) = v11;
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](a1);
  v14 = &v55[-v13];
  *(_QWORD *)(v5 - 496) = &v55[-v13];
  *(_QWORD *)(v5 - 296) = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v5 - 464) = v3;
  MEMORY[0x1E0C80A78](v15);
  *(_QWORD *)(v5 - 480) = &v55[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _AnchorWritingModifier<CGRect, AutoScrollKey>);
  v17 = type metadata accessor for ModifiedContent();
  *(_QWORD *)(v5 - 288) = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(v5 - 400) = v17;
  MEMORY[0x1E0C80A78](v17);
  *(_QWORD *)(v5 - 424) = &v55[-v18];
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _AnchorWritingModifier<CGRect, AutoScrollKey> and conformance _AnchorWritingModifier<A, B>, &demangling cache variable for type metadata for _AnchorWritingModifier<CGRect, AutoScrollKey>);
  *(_QWORD *)(v5 - 208) = v1;
  *(_QWORD *)(v5 - 200) = v19;
  v20 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v17, v5 - 208);
  *(_QWORD *)(v5 - 384) = v20;
  *(_QWORD *)(v5 - 416) = v4;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v5 - 392) = AssociatedConformanceWitness;
  *(_QWORD *)(v5 - 192) = v17;
  *(_QWORD *)(v5 - 184) = v4;
  *(_QWORD *)(v5 - 176) = v20;
  *(_QWORD *)(v5 - 168) = AssociatedConformanceWitness;
  v22 = type metadata accessor for IDView();
  *(_QWORD *)(v5 - 320) = v22;
  *(_QWORD *)(v5 - 312) = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  *(_QWORD *)(v5 - 448) = &v55[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v25 = MEMORY[0x1E0C80A78](v24);
  *(_QWORD *)(v5 - 408) = &v55[-v26];
  *(_QWORD *)(v5 - 504) = a1;
  v27 = *(_QWORD *)(v5 - 376);
  v28 = *(_QWORD *)(v5 - 216);
  (*(void (**)(uint64_t, __n128))(v27 + *(int *)(a1 + 104)))(v28, v25);
  *(_QWORD *)(v5 - 488) = static Anchor.Source<A>.bounds.getter();
  v29 = *(_QWORD *)(v5 - 256);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v29 + 16))(v14, v27, a1);
  v30 = *(_QWORD *)(v5 - 248);
  v31 = *(_QWORD *)(v5 - 456);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16))(v31, v28, v2);
  v32 = *(_QWORD *)(v5 - 232);
  v33 = *(_QWORD *)(v5 - 432);
  (*(void (**)(_QWORD, _QWORD, uint64_t))(v32 + 16))(*(_QWORD *)(v5 - 240), *(_QWORD *)(v5 - 304), v33);
  v34 = (*(unsigned __int8 *)(v29 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  v35 = (v12 + *(unsigned __int8 *)(v30 + 80) + v34) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  v36 = (*(_QWORD *)(v5 - 440) + v35 + 7) & 0xFFFFFFFFFFFFFFF8;
  v37 = (*(unsigned __int8 *)(v32 + 80) + v36 + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  v38 = (char *)swift_allocObject();
  v39 = *(_QWORD *)(v5 - 344);
  *((_QWORD *)v38 + 2) = *(_QWORD *)(v5 - 352);
  *((_QWORD *)v38 + 3) = v39;
  v40 = *(_QWORD *)(v5 - 464);
  *((_QWORD *)v38 + 4) = v2;
  *((_QWORD *)v38 + 5) = v40;
  v41 = *(_QWORD *)(v5 - 368);
  *((_QWORD *)v38 + 6) = *(_QWORD *)(v5 - 336);
  *((_QWORD *)v38 + 7) = v41;
  v42 = *(_QWORD *)(v5 - 224);
  *((_QWORD *)v38 + 8) = *(_QWORD *)(v5 - 360);
  *((_QWORD *)v38 + 9) = v42;
  *((_QWORD *)v38 + 10) = *(_QWORD *)(v5 - 472);
  (*(void (**)(char *, _QWORD, _QWORD))(*(_QWORD *)(v5 - 256) + 32))(&v38[v34], *(_QWORD *)(v5 - 496), *(_QWORD *)(v5 - 504));
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 248) + 32))(&v38[v35], v31, v2);
  v43 = &v38[v36];
  *(_QWORD *)v43 = v9;
  *((_QWORD *)v43 + 1) = v8;
  *((_QWORD *)v43 + 2) = v7;
  *((_QWORD *)v43 + 3) = v6;
  (*(void (**)(char *, _QWORD, uint64_t))(*(_QWORD *)(v5 - 232) + 32))(&v38[v37], *(_QWORD *)(v5 - 240), v33);
  type metadata accessor for CGRect(0);
  lazy protocol witness table accessor for type AutoScrollKey and conformance AutoScrollKey();
  v44 = *(_QWORD *)(v5 - 424);
  v45 = *(_QWORD *)(v5 - 480);
  View.anchorPreference<A, B>(key:value:transform:)();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 296) + 8))(v45, v40);
  v46 = *(_QWORD *)(v5 - 280);
  dispatch thunk of RawRepresentable.rawValue.getter();
  v47 = *(_QWORD *)(v5 - 448);
  v48 = *(_QWORD *)(v5 - 400);
  v49 = *(_QWORD *)(v5 - 416);
  View.id<A>(_:)();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 272) + 8))(v46, v49);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 288) + 8))(v44, v48);
  v50 = *(_QWORD *)(v5 - 320);
  v51 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDFB30], v50);
  v52 = *(_QWORD *)(v5 - 408);
  static ViewBuilder.buildExpression<A>(_:)(v47, v50, v51);
  v53 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 312) + 8);
  v53(v47, v50);
  static ViewBuilder.buildBlock<A>(_:)(v52, v50, *(_QWORD *)(v5 - 264));
  return ((uint64_t (*)(uint64_t, uint64_t))v53)(v52, v50);
}

void closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in AutoScrollingList.body.getter(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __int128 a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t AssociatedTypeWitness;
  _QWORD v21[2];
  __int128 v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v27 = a3;
  v28 = a4;
  v23 = a2;
  v21[1] = a1;
  v29 = a9;
  v22 = a10;
  v17 = type metadata accessor for GeometryProxy();
  v18 = *(_QWORD *)(v17 - 8);
  v25 = v17;
  v26 = v18;
  MEMORY[0x1E0C80A78](v17);
  v24 = (char *)v21 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v30 = a5;
  v31 = a6;
  v32 = a7;
  v33 = a8;
  v34 = v22;
  v35 = a11;
  v36 = a12;
  v37 = a13;
  type metadata accessor for AutoScrollingList();
}

uint64_t sub_1BD3BECE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  CGFloat v4;
  CGFloat v5;
  CGFloat v6;
  CGFloat v7;
  uint64_t AssociatedConformanceWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t result;
  CGRect v19;

  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v10 = type metadata accessor for AutoScrollViewModel(0, v2, AssociatedConformanceWitness, v9);
  MEMORY[0x1C3B750C8](&protocol conformance descriptor for AutoScrollViewModel<A>, v10);
  StateObject.wrappedValue.getter();
  AutoScrollViewModel.stickyRowIDs.getter();
  swift_release();
  dispatch thunk of RawRepresentable.rawValue.getter();
  v11 = *(_QWORD *)(v3 - 232);
  v12 = Set.contains(_:)();
  swift_bridgeObjectRelease();
  v13 = *(void (**)(uint64_t, uint64_t))(v0 + 8);
  v14 = *(_QWORD *)(v3 - 224);
  v15 = v1;
  v16 = *(_QWORD *)(v3 - 240);
  v13(v15, v2);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v14 + 16))(v16, *(_QWORD *)(v3 - 208), v11);
  if ((v12 & 1) != 0)
  {
    type metadata accessor for CGRect(0);
    GeometryProxy.subscript.getter();
    v19.origin.x = v7;
    v19.origin.y = v6;
    v19.size.width = v5;
    v19.size.height = v4;
    v17 = CGRectIntersectsRect(v19, *(CGRect *)(v3 - 192));
    result = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v16, v11);
  }
  else
  {
    result = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v16, v11);
    v17 = 0;
  }
  **(_BYTE **)(v3 - 200) = v17;
  return result;
}

uint64_t default argument 2 of LazyVStack.init(alignment:spacing:pinnedViews:content:)()
{
  uint64_t v0;
  uint64_t v1;
  int v3;

  v0 = type metadata accessor for PinnedScrollableViews();
  v3 = 0;
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type PinnedScrollableViews and conformance PinnedScrollableViews, (void (*)(uint64_t))MEMORY[0x1E0CDBDB8]);
  return MEMORY[0x1C3B74228](&v3, v0, v1);
}

uint64_t closure #2 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in AutoScrollingList.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v5;
  __int128 v6;

  type metadata accessor for CGRect(0);
  GeometryProxy.subscript.getter();
  *(_OWORD *)a2 = v5;
  *(_OWORD *)(a2 + 16) = v6;
  *(_QWORD *)(a2 + 32) = a1;
  return swift_retain();
}

void closure #2 in closure #1 in closure #1 in AutoScrollingList.body.getter(uint64_t a1)
{
  uint64_t v2;
  _BYTE v3[48];

  v2 = type metadata accessor for GlobalCoordinateSpace();
  MEMORY[0x1E0C80A78](v2);
  _sypSgWObTm_0(a1, (uint64_t)v3, &demangling cache variable for type metadata for ListAnchor?);
  type metadata accessor for AutoScrollingList();
}

uint64_t sub_1BD3BEFFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_QWORD *)(*(_QWORD *)(v4 - 248) + *(int *)(a1 + 100));
  v6 = *(void (**)(uint64_t))(*(_QWORD *)v5 + 184);
  outlined retain of ListAnchor?(v4 - 160);
  v6(v4 - 160);
  static CoordinateSpaceProtocol<>.global.getter();
  GeometryProxy.frame<A>(in:)();
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v14 = v13;
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v3, v2);
  *(_QWORD *)(v4 - 232) = v8;
  *(_QWORD *)(v4 - 224) = v10;
  *(_QWORD *)(v4 - 216) = v12;
  *(_QWORD *)(v4 - 208) = v14;
  *(_BYTE *)(v4 - 200) = 0;
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 136))(v4 - 232);
}

void closure #2 in closure #1 in AutoScrollingList.body.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[20];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v25[18] = a8;
  v26 = a7;
  v27 = a3;
  v25[4] = a5;
  v25[14] = a4;
  v25[5] = a13;
  v25[17] = a10;
  v25[16] = a9;
  MEMORY[0x1E0C80A78](a1);
  v17 = *(_QWORD *)(a11 + 8);
  v25[9] = (char *)v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25[10] = v17;
  v25[19] = a11;
  v25[15] = v18;
  v19 = type metadata accessor for ReversedCollection();
  v20 = MEMORY[0x1E0C80A78](v19);
  v25[6] = (char *)v25 - v21;
  v25[7] = MEMORY[0x1C3B750C8](MEMORY[0x1E0DECD08], v19, v20);
  v22 = type metadata accessor for Slice();
  v23 = *(_QWORD *)(v22 - 8);
  v25[12] = v22;
  v25[13] = v23;
  MEMORY[0x1E0C80A78](v22);
  v25[1] = a12;
  v25[2] = (char *)v25 - v24;
  v28 = a5;
  v29 = a6;
  v30 = v26;
  v31 = a8;
  v32 = a9;
  v33 = a10;
  v34 = a11;
  v35 = a12;
  v36 = a13;
  type metadata accessor for AutoScrollingList();
}

uint64_t sub_1BD3BF1F8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t KeyPath;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v1[3] = AssociatedTypeWitness;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v1[11] = AssociatedConformanceWitness;
  v8 = type metadata accessor for AutoScrollViewModel(0, AssociatedTypeWitness, AssociatedConformanceWitness, v7);
  MEMORY[0x1C3B750C8](&protocol conformance descriptor for AutoScrollViewModel<A>, v8);
  v1[8] = StateObject.wrappedValue.getter();
  AutoScrollingList.rows.getter(a1);
  v9 = v1[15];
  BidirectionalCollection.reversed()();
  v10 = v1[2];
  Collection.prefix(_:)();
  v12 = v1[4];
  v11 = v1[5];
  *(_QWORD *)(v3 - 240) = v12;
  *(_QWORD *)(v3 - 232) = v9;
  v13 = v1[17];
  v14 = v1[18];
  *(_QWORD *)(v3 - 224) = v2;
  *(_QWORD *)(v3 - 216) = v14;
  v15 = v1[16];
  *(_QWORD *)(v3 - 208) = v15;
  *(_QWORD *)(v3 - 200) = v13;
  v16 = v1[19];
  v17 = v1[1];
  *(_QWORD *)(v3 - 192) = v16;
  *(_QWORD *)(v3 - 184) = v17;
  *(_QWORD *)(v3 - 176) = v11;
  KeyPath = swift_getKeyPath();
  v1[38] = v12;
  v1[39] = v9;
  v1[40] = v14;
  v1[41] = v15;
  v1[42] = v13;
  v1[43] = v16;
  v1[44] = v17;
  v1[45] = v11;
  v1[46] = KeyPath;
  v19 = v1[12];
  v20 = MEMORY[0x1C3B750C8](MEMORY[0x1E0DEDE48], v19);
  v21 = v10;
  v23 = _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lF((void (*)(char *, uint64_t))partial apply for implicit closure #1 in closure #2 in closure #1 in AutoScrollingList.body.getter, (uint64_t)(v1 + 36), v19, v1[3], MEMORY[0x1E0DEDCE8], v20, MEMORY[0x1E0DEDD18], v22);
  (*(void (**)(uint64_t, uint64_t))(v1[13] + 8))(v21, v19);
  swift_release();
  *(_QWORD *)(v3 - 160) = v23;
  v24 = type metadata accessor for Array();
  MEMORY[0x1C3B750C8](MEMORY[0x1E0DEAF38], v24);
  Set.init<A>(_:)();
  AutoScrollViewModel.stickyRowIDs.setter();
  swift_release();
  v25 = v1[15];
  v1[24] = v12;
  v1[25] = v25;
  v26 = v1[18];
  v1[26] = v1[20];
  v1[27] = v26;
  v27 = v1[17];
  v1[28] = v1[16];
  v1[29] = v27;
  v1[30] = v1[19];
  v1[31] = v17;
  v28 = v1[21];
  v1[32] = v11;
  v1[33] = v28;
  v1[34] = v1[14];
  static Animation.default.getter();
  withAnimation<A>(_:_:)();
  return swift_release();
}

uint64_t key path getter for Identifiable.id : <A, B, C, D>C()
{
  return dispatch thunk of RawRepresentable.rawValue.getter();
}

void closure #1 in closure #2 in closure #1 in AutoScrollingList.body.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[2];
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v33 = a8;
  v34 = a1;
  v16 = *(_QWORD *)(a4 - 8);
  v26 = a2;
  v27 = v16;
  MEMORY[0x1E0C80A78](a1);
  v31 = (char *)v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for Optional();
  v22[1] = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v24 = (char *)v22 - v18;
  swift_getAssociatedTypeWitness();
  v19 = type metadata accessor for Optional();
  v20 = *(_QWORD *)(v19 - 8);
  v28 = v19;
  v29 = v20;
  MEMORY[0x1E0C80A78](v19);
  v30 = (char *)v22 - v21;
  v35 = a3;
  v36 = a4;
  v25 = a4;
  v37 = a5;
  v38 = a6;
  v39 = a7;
  v40 = v33;
  v32 = a9;
  v41 = a9;
  v42 = a10;
  v43 = a11;
  type metadata accessor for AutoScrollingList();
}

uint64_t sub_1BD3BF5F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedConformanceWitness;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  int EnumTagSinglePayload;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v6 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  v8 = (char *)&v29 - v7;
  v10 = *(_QWORD *)(v4 - 168);
  *(_QWORD *)(v4 - 176) = *(_QWORD *)(v10 + *(int *)(v9 + 112) + 8);
  *(_QWORD *)(v4 - 280) = v2;
  *(_QWORD *)(v4 - 200) = v3;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v4 - 216) = v1;
  v13 = type metadata accessor for AutoScrollViewModel(0, v1, AssociatedConformanceWitness, v12);
  MEMORY[0x1C3B750C8](&protocol conformance descriptor for AutoScrollViewModel<A>, v13);
  StateObject.wrappedValue.getter();
  v14 = AutoScrollViewModel.shouldAutoScroll.getter();
  swift_release();
  v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v10, a1);
  if ((v14 & 1) == 0)
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, a1);
  *(_QWORD *)(v4 - 176) = AssociatedConformanceWitness;
  v16 = *(_QWORD *)(v4 - 208);
  v17 = *(_QWORD *)(v4 - 200);
  v18 = (*(uint64_t (**)(uint64_t))(**(_QWORD **)&v8[*(int *)(a1 + 100)] + 272))(v15);
  result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, a1);
  if ((v18 & 1) != 0)
  {
    AutoScrollingList.rows.getter(a1);
    v20 = *(_QWORD *)(v4 - 272);
    v21 = *(_QWORD *)(v4 - 264);
    BidirectionalCollection.last.getter();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 248) + 8))(v16, v21);
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v20, 1, v17);
    v23 = *(_QWORD *)(v4 - 240);
    v24 = *(_QWORD *)(v4 - 232);
    v26 = *(_QWORD *)(v4 - 224);
    v25 = *(_QWORD *)(v4 - 216);
    if (EnumTagSinglePayload == 1)
    {
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v4 - 296) + 8))(v20, *(_QWORD *)(v4 - 288));
      v27 = 1;
    }
    else
    {
      dispatch thunk of RawRepresentable.rawValue.getter();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v20, v17);
      v27 = 0;
    }
    v28 = *(_QWORD *)(v4 - 176);
    __swift_storeEnumTagSinglePayload(v26, v27, 1, v25);
    *(_QWORD *)(v4 - 72) = v28;
    MEMORY[0x1C3B750C8](MEMORY[0x1E0DEE990], v23, v4 - 72);
    ScrollViewProxy.scrollTo<A>(_:anchor:)();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 8))(v26, v23);
  }
  return result;
}

uint64_t closure #3 in closure #1 in AutoScrollingList.body.getter()
{
  return withAnimation<A>(_:_:)();
}

void closure #1 in closure #3 in closure #1 in AutoScrollingList.body.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  MEMORY[0x1E0C80A78](a1);
  v1 = type metadata accessor for Optional();
  MEMORY[0x1E0C80A78](v1);
  swift_getAssociatedTypeWitness();
  v2 = type metadata accessor for Optional();
  MEMORY[0x1E0C80A78](v2);
  type metadata accessor for AutoScrollingList();
}

uint64_t sub_1BD3BFA0C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  AutoScrollingList.rows.getter(a1);
  BidirectionalCollection.last.getter();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 192) + 8))(v2, v7);
  if (__swift_getEnumTagSinglePayload(v1, 1, v3) == 1)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v8 - 256) + 8))(v1, *(_QWORD *)(v8 - 248));
    v9 = 1;
  }
  else
  {
    dispatch thunk of RawRepresentable.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v1, v3);
    v9 = 0;
  }
  __swift_storeEnumTagSinglePayload(v5, v9, 1, v6);
  *(_QWORD *)(v8 - 72) = swift_getAssociatedConformanceWitness();
  MEMORY[0x1C3B750C8](MEMORY[0x1E0DEE990], v4, v8 - 72);
  ScrollViewProxy.scrollTo<A>(_:anchor:)();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 184) + 8))(v5, v4);
}

uint64_t key path setter for AutoScrollViewModel.stickyRowIDs : <A>AutoScrollViewModel<A>()
{
  swift_bridgeObjectRetain();
  return AutoScrollViewModel.stickyRowIDs.setter();
}

uint64_t outlined retain of ListAnchor?(uint64_t a1)
{
  swift_retain();
  return a1;
}

void sub_1BD3BFBA8()
{
  _BYTE *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))(v1 + 224))() & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD3BFBD0()
{
  PositionalData.isBottomVisible.setter();
  OUTLINED_FUNCTION_0();
}

void sub_1BD3BFBF0()
{
  _BYTE *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))(v1 + 272))() & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD3BFC18()
{
  PositionalData.isWithinAutoScrollTolerance.setter();
  OUTLINED_FUNCTION_0();
}

void partial apply for closure #1 in AutoScrollingList.body.getter()
{
  partial apply for closure #1 in AutoScrollingList.body.getter();
}

{
  OUTLINED_FUNCTION_438();
  type metadata accessor for AutoScrollingList();
}

uint64_t associated type witness table accessor for View.Body : View in AutoScrollingList<A, B, C, D>()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1BD3BFC8C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_83_1();
  (*(void (**)(void))(v0 + 152))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD3BFCB0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_83_1();
  (*(void (**)(void))(v0 + 200))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD3BFCD4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_83_1();
  (*(void (**)(void))(v0 + 248))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD3BFCF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for PositionalData.$isBottomVisible : PositionalData(a1, a2, a3, a4, (void (*)(uint64_t))PositionalData.$isBottomVisible.setter);
}

void sub_1BD3BFD10()
{
  uint64_t v0;

  OUTLINED_FUNCTION_83_1();
  (*(void (**)(void))(v0 + 296))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD3BFD30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for PositionalData.$isBottomVisible : PositionalData(a1, a2, a3, a4, (void (*)(uint64_t))PositionalData.$isWithinAutoScrollTolerance.setter);
}

void sub_1BD3BFD4C()
{
  double *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(double (**)(void))(v1 + 320))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD3BFD70(double *a1, uint64_t a2)
{
  (*(void (**)(double))(**(_QWORD **)a2 + 328))(*a1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD3BFDA0()
{
  OUTLINED_FUNCTION_31_52();
}

void sub_1BD3BFDB4()
{
  OUTLINED_FUNCTION_31_52();
}

uint64_t destroy for ListAnchor()
{
  return swift_release();
}

uint64_t initializeWithCopy for ListAnchor(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for ListAnchor(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for ListAnchor(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ListAnchor(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 40))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 32);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ListAnchor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ListAnchor()
{
  return &type metadata for ListAnchor;
}

uint64_t ObjC metadata update function for PositionalData()
{
  return type metadata accessor for PositionalData();
}

uint64_t type metadata accessor for PositionalData()
{
  uint64_t result;

  result = type metadata singleton initialization cache for PositionalData;
  if (!type metadata singleton initialization cache for PositionalData)
    return swift_getSingletonMetadata();
  return result;
}

void type metadata completion function for PositionalData()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  type metadata accessor for Published<TURoute?>(319, &lazy cache variable for type metadata for Published<CGRect?>, &demangling cache variable for type metadata for CGRect?);
  if (v0 <= 0x3F)
  {
    type metadata accessor for Published<TURoute?>(319, &lazy cache variable for type metadata for Published<ListAnchor?>, &demangling cache variable for type metadata for ListAnchor?);
    if (v1 <= 0x3F)
    {
      type metadata accessor for Published<Bool>();
      if (v2 <= 0x3F)
        swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for PositionalData()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PositionalData.description.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of PositionalData.scrollViewBounds.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

void dispatch thunk of PositionalData.scrollViewBounds.setter(uint64_t a1)
{
  uint64_t v1;
  char v2;
  void (*v3)(_OWORD *);
  __int128 v4;
  _OWORD v5[2];
  char v6;

  v2 = *(_BYTE *)(a1 + 32);
  v3 = *(void (**)(_OWORD *))(*(_QWORD *)v1 + 136);
  v4 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v4;
  v6 = v2;
  v3(v5);
  OUTLINED_FUNCTION_43_1();
}

uint64_t dispatch thunk of PositionalData.scrollViewBounds.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of PositionalData.$scrollViewBounds.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of PositionalData.$scrollViewBounds.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of PositionalData.$scrollViewBounds.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of PositionalData.listBounds.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

void dispatch thunk of PositionalData.listBounds.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void (*v3)(_OWORD *);
  __int128 v4;
  _OWORD v5[2];
  uint64_t v6;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(void (**)(_OWORD *))(*(_QWORD *)v1 + 184);
  v4 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v4;
  v6 = v2;
  v3(v5);
  OUTLINED_FUNCTION_43_1();
}

uint64_t dispatch thunk of PositionalData.listBounds.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of PositionalData.$listBounds.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of PositionalData.$listBounds.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of PositionalData.$listBounds.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of PositionalData.isBottomVisible.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of PositionalData.$isBottomVisible.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of PositionalData.isWithinAutoScrollTolerance.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of PositionalData.$isWithinAutoScrollTolerance.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t dispatch thunk of PositionalData.autoScrollTolerance.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 320))();
}

uint64_t dispatch thunk of PositionalData.autoScrollTolerance.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 328))();
}

uint64_t dispatch thunk of PositionalData.autoScrollTolerance.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 336))();
}

uint64_t dispatch thunk of PositionalData.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 352))();
}

void type metadata completion function for AutoScrollViewModel()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for Set();
  type metadata accessor for Published();
  if (v0 <= 0x3F)
  {
    type metadata accessor for Published<Bool>();
    if (v1 <= 0x3F)
      swift_initClassMetadata2();
  }
}

uint64_t type metadata accessor for AutoScrollViewModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AutoScrollViewModel);
}

uint64_t type metadata instantiation function for AutoScrollingList()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t type metadata completion function for AutoScrollingList()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Binding();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for AutoScrollingList(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v4 = *(_QWORD *)(a3 + 24);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = ((v6 + 16) & ~v6) + *(_QWORD *)(v5 + 64);
  v8 = *(_DWORD *)(v5 + 80) & 0x100000;
  v9 = *a2;
  *a1 = *a2;
  if (v6 > 7
    || v8 != 0
    || ((((((((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
         + 23) & 0xFFFFFFFFFFFFFFF8)
       + 23) & 0xFFFFFFFFFFFFFFF8)
     + 17 > 0x18)
  {
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    v13 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    v14 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v13 = *v14;
    v15 = ((unint64_t)v13 + v6 + 8) & ~v6;
    v16 = ((unint64_t)v14 + v6 + 8) & ~v6;
    v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_retain();
    swift_retain();
    v17(v15, v16, v4);
    v18 = (_QWORD *)(((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFF8);
    v19 = (_QWORD *)(((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFF8);
    *v19 = *v18;
    v20 = (_QWORD *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFF8);
    v21 = (_QWORD *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFF8);
    *v21 = *v20;
    v22 = (_QWORD *)(((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFF8);
    v23 = (_QWORD *)(((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFF8);
    *v23 = *v22;
    v24 = (_QWORD *)(((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFFFF8);
    v25 = (_QWORD *)(((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8);
    v26 = v25[1];
    *v24 = *v25;
    v24[1] = v26;
    v27 = (_QWORD *)(((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFFFF8);
    v28 = (_QWORD *)(((unint64_t)v25 + 23) & 0xFFFFFFFFFFFFFFF8);
    v29 = v28[1];
    *v27 = *v28;
    v27[1] = v29;
    v30 = ((unint64_t)v27 + 23) & 0xFFFFFFFFFFFFFFF8;
    v31 = ((unint64_t)v28 + 23) & 0xFFFFFFFFFFFFFFF8;
    v32 = *(_QWORD *)v31;
    v33 = *(_QWORD *)(v31 + 8);
    LOBYTE(v16) = *(_BYTE *)(v31 + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    outlined copy of StateObject<SyncedScreeningAlphaGradientView<A>.AnimatedState>.Storage<A>();
    *(_QWORD *)v30 = v32;
    *(_QWORD *)(v30 + 8) = v33;
    *(_BYTE *)(v30 + 16) = v16;
  }
  return a1;
}

uint64_t destroy for AutoScrollingList(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = a1 + 15;
  swift_release();
  swift_release();
  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 8))(((v3 & 0xFFFFFFFFFFFFFFF8)
                                                                                            + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80)
                                                                                            + 8) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80));
  swift_release();
  swift_release();
  swift_release();
  return outlined consume of StateObject<SyncedScreeningAlphaGradientView<A>.AnimatedState>.Storage<A>();
}

_QWORD *initializeWithCopy for AutoScrollingList(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;

  *a1 = *a2;
  v5 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v6 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v5 = *v6;
  v7 = *(_QWORD *)(a3 + 24);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = ((unint64_t)v5 + v9 + 8) & ~v9;
  v11 = ((unint64_t)v6 + v9 + 8) & ~v9;
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  swift_retain();
  swift_retain();
  v12(v10, v11, v7);
  v13 = ((v9 + 16) & ~v9) + *(_QWORD *)(v8 + 64) + 7;
  v14 = (unint64_t)a1 + v13;
  v15 = (_QWORD *)(((unint64_t)a2 + v13) & 0xFFFFFFFFFFFFFFF8);
  v14 &= 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v14 = *v15;
  v16 = (_QWORD *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8);
  v17 = (_QWORD *)((v14 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v17 = *v16;
  v18 = (_QWORD *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFF8);
  v19 = (_QWORD *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFF8);
  *v19 = *v18;
  v20 = (_QWORD *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8);
  v21 = (_QWORD *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  v23 = (_QWORD *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
  v24 = (_QWORD *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
  v25 = v24[1];
  *v23 = *v24;
  v23[1] = v25;
  v26 = ((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8;
  v27 = ((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFFFF8;
  v28 = *(_QWORD *)v27;
  v29 = *(_QWORD *)(v27 + 8);
  LOBYTE(v11) = *(_BYTE *)(v27 + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  outlined copy of StateObject<SyncedScreeningAlphaGradientView<A>.AnimatedState>.Storage<A>();
  *(_QWORD *)v26 = v28;
  *(_QWORD *)(v26 + 8) = v29;
  *(_BYTE *)(v26 + 16) = v11;
  return a1;
}

_QWORD *assignWithCopy for AutoScrollingList(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v6 = (unint64_t)a2 + 15;
  *a1 = *a2;
  swift_retain();
  swift_release();
  v7 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v6 &= 0xFFFFFFFFFFFFFFF8;
  *v7 = *(_QWORD *)v6;
  swift_retain();
  swift_release();
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  (*(void (**)(unint64_t, unint64_t))(v8 + 24))(((unint64_t)v7 + v9 + 8) & ~v9, (v9 + 8 + v6) & ~v9);
  v10 = ((v9 + 16) & ~v9) + *(_QWORD *)(v8 + 64) + 7;
  v11 = (_QWORD *)(((unint64_t)a1 + v10) & 0xFFFFFFFFFFFFFFF8);
  v12 = (_QWORD *)(((unint64_t)a2 + v10) & 0xFFFFFFFFFFFFFFF8);
  *v11 = *v12;
  v13 = ((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFF8;
  v14 = ((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8;
  v15 = *(_QWORD *)v14;
  v14 += 15;
  *(_QWORD *)v13 = v15;
  v13 += 15;
  v16 = (v14 & 0xFFFFFFFFFFFFF8) + 15;
  *(_QWORD *)(v13 & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(v14 & 0xFFFFFFFFFFFFF8);
  v17 = (v13 & 0xFFFFFFFFFFFFFFF8) + 15;
  swift_retain();
  swift_release();
  v17 &= 0xFFFFFFFFFFFFFFF8;
  v16 &= 0xFFFFFFFFFFFFFFF8;
  v18 = *(_QWORD *)(v16 + 8);
  *(_QWORD *)v17 = *(_QWORD *)v16;
  *(_QWORD *)(v17 + 8) = v18;
  swift_retain();
  swift_release();
  v19 = (_QWORD *)((v17 + 23) & 0xFFFFFFFFFFFFFFF8);
  v20 = (_QWORD *)((v16 + 23) & 0xFFFFFFFFFFFFFFF8);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  swift_retain();
  swift_release();
  v22 = ((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8;
  v23 = ((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8;
  v24 = *(_QWORD *)v23;
  v25 = *(_QWORD *)(v23 + 8);
  LOBYTE(v20) = *(_BYTE *)(v23 + 16);
  outlined copy of StateObject<SyncedScreeningAlphaGradientView<A>.AnimatedState>.Storage<A>();
  *(_QWORD *)v22 = v24;
  *(_QWORD *)(v22 + 8) = v25;
  *(_BYTE *)(v22 + 16) = (_BYTE)v20;
  outlined consume of StateObject<SyncedScreeningAlphaGradientView<A>.AnimatedState>.Storage<A>();
  return a1;
}

_QWORD *initializeWithTake for AutoScrollingList(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  _OWORD *v16;
  _OWORD *v17;
  _OWORD *v18;
  _OWORD *v19;
  unint64_t v20;
  char v21;
  __int128 v22;
  unint64_t v23;

  *a1 = *a2;
  v5 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v6 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v5 = *v6;
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  (*(void (**)(unint64_t, unint64_t))(v7 + 32))(((unint64_t)v5 + v8 + 8) & ~v8, ((unint64_t)v6 + v8 + 8) & ~v8);
  v9 = ((v8 + 16) & ~v8) + *(_QWORD *)(v7 + 64) + 7;
  v10 = (_QWORD *)(((unint64_t)a1 + v9) & 0xFFFFFFFFFFFFFFF8);
  v11 = (_QWORD *)(((unint64_t)a2 + v9) & 0xFFFFFFFFFFFFFFF8);
  *v10 = *v11;
  v12 = (_QWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFF8);
  v13 = (_QWORD *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v12 = *v13;
  v14 = (_QWORD *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_QWORD *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v14 = *v15;
  v16 = (_OWORD *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFF8);
  v17 = (_OWORD *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFF8);
  *v16 = *v17;
  v18 = (_OWORD *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFF8);
  v19 = (_OWORD *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFF8);
  *v18 = *v19;
  v20 = ((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8;
  v21 = *(_BYTE *)(v20 + 16);
  v22 = *(_OWORD *)v20;
  v23 = ((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)v23 = v22;
  *(_BYTE *)(v23 + 16) = v21;
  return a1;
}

_QWORD *assignWithTake for AutoScrollingList(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  unint64_t v16;
  _OWORD *v17;
  _OWORD *v18;
  uint64_t v19;
  __int128 v20;
  unint64_t v21;
  char v22;

  v6 = (unint64_t)a2 + 15;
  *a1 = *a2;
  swift_release();
  v7 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v6 &= 0xFFFFFFFFFFFFFFF8;
  *v7 = *(_QWORD *)v6;
  swift_release();
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  (*(void (**)(unint64_t, unint64_t))(v8 + 40))(((unint64_t)v7 + v9 + 8) & ~v9, (v9 + 8 + v6) & ~v9);
  v10 = ((v9 + 16) & ~v9) + *(_QWORD *)(v8 + 64) + 7;
  v11 = (_QWORD *)(((unint64_t)a1 + v10) & 0xFFFFFFFFFFFFFFF8);
  v12 = (_QWORD *)(((unint64_t)a2 + v10) & 0xFFFFFFFFFFFFFFF8);
  *v11 = *v12;
  v13 = ((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFF8;
  v14 = (_QWORD *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
  *(_QWORD *)v13 = *v14;
  v13 += 15;
  v15 = (_QWORD *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFF8);
  *(_QWORD *)(v13 & 0xFFFFFFFFFFFFFFF8) = *v15;
  v16 = (v13 & 0xFFFFFFFFFFFFFFF8) + 15;
  swift_release();
  v16 &= 0xFFFFFFFFFFFFFFF8;
  v17 = (_OWORD *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFF8);
  *(_OWORD *)v16 = *v17;
  swift_release();
  v18 = (_OWORD *)((v16 + 23) & 0xFFFFFFFFFFFFFFF8);
  v19 = ((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFF8;
  v20 = *(_OWORD *)v19;
  v19 += 23;
  *v18 = v20;
  swift_release();
  v21 = ((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8;
  v22 = *(_BYTE *)((v19 & 0xFFFFFFFFFFFFFFF8) + 16);
  *(_OWORD *)v21 = *(_OWORD *)(v19 & 0xFFFFFFFFFFFFFFF8);
  *(_BYTE *)(v21 + 16) = v22;
  outlined consume of StateObject<SyncedScreeningAlphaGradientView<A>.AnimatedState>.Storage<A>();
  return a1;
}

uint64_t getEnumTagSinglePayload for AutoScrollingList(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unint64_t v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  unint64_t *v15;
  unint64_t v16;

  v4 = *(_QWORD *)(a3 + 24);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v8 = *(unsigned __int8 *)(v5 + 80);
  if (v7 >= a2)
  {
    v15 = (unint64_t *)((a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    if ((v6 & 0x80000000) != 0)
    {
      return __swift_getEnumTagSinglePayload(((unint64_t)v15 + v8 + 8) & ~v8, v6, v4);
    }
    else
    {
      v16 = *v15;
      if (v16 >= 0xFFFFFFFF)
        LODWORD(v16) = -1;
      return (v16 + 1);
    }
  }
  else
  {
    v9 = ((((((((((((*(_QWORD *)(v5 + 64) + ((v8 + 16) & ~v8) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
               + 15) & 0xFFFFFFFFFFFFFFF8)
             + 15) & 0xFFFFFFFFFFFFFFF8)
           + 23) & 0xFFFFFFFFFFFFFFF8)
         + 23) & 0xFFFFFFFFFFFFFFF8)
       + 17;
    v10 = (a2 - v7 + 255) >> (8 * v9);
    if (v9 < 4)
      v11 = v10 + 1;
    else
      v11 = 2;
    if (v11 >= 0x10000)
      v12 = 4;
    else
      v12 = 2;
    if (v11 < 0x100)
      v12 = 1;
    if (v11 >= 2)
      v13 = v12;
    else
      v13 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1BD3C0B30 + 4 * byte_1BD65C650[v13]))();
  }
}

void storeEnumTagSinglePayload for AutoScrollingList(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((((((((((((*(_QWORD *)(v5 + 64)
                 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
                 + 7) & 0xFFFFFFFFFFFFFFF8)
               + 15) & 0xFFFFFFFFFFFFFFF8)
             + 15) & 0xFFFFFFFFFFFFFFF8)
           + 15) & 0xFFFFFFFFFFFFFFF8)
         + 23) & 0xFFFFFFFFFFFFFFF8)
       + 23) & 0xFFFFFFFFFFFFFFF8)
     + 17;
  if (v6 >= a3)
  {
    v10 = 0u;
  }
  else
  {
    if (v7 <= 3)
      v8 = ((a3 - v6 + 255) >> (8 * v7)) + 1;
    else
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
  }
  if (v6 < a2)
  {
    v11 = ~v6 + a2;
    v12 = (~(_BYTE)v6 + a2);
    if (v7 >= 4)
      v13 = v11;
    else
      v13 = v12;
    bzero(a1, v7);
    if ((_DWORD)v7 == 1)
      *a1 = v13;
    else
      *(_DWORD *)a1 = v13;
    __asm { BR              X10 }
  }
  __asm { BR              X12 }
}

void sub_1BD3C0D18()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1BD3C0D84);
}

void sub_1BD3C0D20(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1BD3C0D28);
  JUMPOUT(0x1BD3C0D84);
}

void sub_1BD3C0D40()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1BD3C0D84);
}

void sub_1BD3C0D48()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1BD3C0D84);
}

void sub_1BD3C0D50(uint64_t a1, int a2, int a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_WORD *)(v3 + v4) = 0;
  if (a2)
  {
    if ((a3 & 0x80000000) == 0)
    {
      if ((a2 & 0x80000000) == 0)
        JUMPOUT(0x1BD3C0D80);
      JUMPOUT(0x1BD3C0D7CLL);
    }
    JUMPOUT(0x1BD3C0D5CLL);
  }
  JUMPOUT(0x1BD3C0D84);
}

void sub_1BD3C0D9C()
{
  OUTLINED_FUNCTION_41_32();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Spacer, _FlexFrameLayout>);
  OUTLINED_FUNCTION_0_115();
  OUTLINED_FUNCTION_42_15();
  OUTLINED_FUNCTION_53_34();
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _AnchorWritingModifier<CGRect, AutoScrollKey>);
  OUTLINED_FUNCTION_52_31();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _AnchorWritingModifier<CGRect, AutoScrollKey> and conformance _AnchorWritingModifier<A, B>, &demangling cache variable for type metadata for _AnchorWritingModifier<CGRect, AutoScrollKey>);
  OUTLINED_FUNCTION_17_13();
}

void sub_1BD3C0E58()
{
  swift_getAssociatedConformanceWitness();
  type metadata accessor for IDView();
  type metadata accessor for ForEach();
  type metadata accessor for ModifiedContent();
  OUTLINED_FUNCTION_59_26();
}

void sub_1BD3C0ED4()
{
  OUTLINED_FUNCTION_45_3();
}

void sub_1BD3C0EE8()
{
  OUTLINED_FUNCTION_17_13();
}

void sub_1BD3C0F00()
{
  type metadata accessor for LazyVStack();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _AnchorWritingModifier<CGRect, HighestBoundsKey>);
  OUTLINED_FUNCTION_50_32();
  type metadata accessor for ModifiedContent();
  OUTLINED_FUNCTION_44_12();
  OUTLINED_FUNCTION_41_0();
  OUTLINED_FUNCTION_8_81();
}

void sub_1BD3C0F50()
{
  OUTLINED_FUNCTION_49_40();
  type metadata accessor for VStack();
  OUTLINED_FUNCTION_8_81();
}

void sub_1BD3C0F68()
{
  OUTLINED_FUNCTION_49_40();
  type metadata accessor for ZStack();
  type metadata accessor for ModifiedContent();
  OUTLINED_FUNCTION_8_81();
}

void sub_1BD3C0F98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v16;
  uint64_t v17;

  a15 = a1;
  a16 = MEMORY[0x1E0CDA228];
  MEMORY[0x1C3B750C8](v16, v17, &a15);
  type metadata accessor for ScrollView();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _PreferenceActionModifier<HighestBoundsKey>);
  OUTLINED_FUNCTION_49_40();
  type metadata accessor for ModifiedContent();
  OUTLINED_FUNCTION_8_81();
}

void sub_1BD3C0FF0()
{
  uint64_t *v0;

  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _PreferenceActionModifier<HighestBoundsKey> and conformance _PreferenceActionModifier<A>, v0);
  OUTLINED_FUNCTION_45_3();
}

void sub_1BD3C101C()
{
  OUTLINED_FUNCTION_50_32();
  type metadata accessor for GeometryReader();
  OUTLINED_FUNCTION_8_81();
}

void sub_1BD3C1034(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;

  a22 = a1;
  a23 = a10;
  MEMORY[0x1C3B75050](255, &a20, MEMORY[0x1E0CDF150], 0);
  type metadata accessor for ModifiedContent();
  a20 = v23;
  a21 = v24;
  a22 = a1;
  a23 = a10;
  swift_getOpaqueTypeConformance2();
  OUTLINED_FUNCTION_59_26();
}

uint64_t sub_1BD3C10A8()
{
  uint64_t v0;

  OUTLINED_FUNCTION_53_34();
  v0 = type metadata accessor for ScrollViewReader();
  return MEMORY[0x1C3B750C8](MEMORY[0x1E0CDA0C8], v0);
}

void *type metadata accessor for HighestBoundsKey()
{
  return &unk_1E7631F80;
}

void *type metadata accessor for AutoScrollKey()
{
  return &unk_1E7631FA0;
}

{
  return &unk_1E7645150;
}

uint64_t Set.init(_nonEmptyArrayLiteral:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  Swift::Bool IsNativeType;
  uint64_t (*v18)(char *, unint64_t, uint64_t);
  uint64_t result;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  void (*v33)(char *, uint64_t);
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;

  v5 = a1;
  v45 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v44 = (char *)&v37 - v9;
  v37 = v10;
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v37 - v13;
  if (MEMORY[0x1C3B730D0](v12))
  {
    type metadata accessor for _SetStorage();
    v15 = static _SetStorage.allocate(capacity:)();
  }
  else
  {
    v15 = MEMORY[0x1E0DEE9E8];
  }
  v40 = MEMORY[0x1C3B73100](v5, a2);
  if (v40)
  {
    v16 = 0;
    v43 = v15 + 56;
    v38 = v14;
    v39 = v5;
    while (1)
    {
      IsNativeType = Array._hoistableIsNativeTypeChecked()();
      Array._checkSubscript(_:wasNativeTypeChecked:)();
      if (IsNativeType)
      {
        v18 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v45 + 16);
        result = v18(v14, v5+ ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80))+ *(_QWORD *)(v45 + 72) * v16, a2);
      }
      else
      {
        result = _ArrayBuffer._getElementSlowPath(_:)();
        if (v37 != 8)
          goto LABEL_24;
        v46 = result;
        v18 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v45 + 16);
        v18(v14, (unint64_t)&v46, a2);
        result = swift_unknownObjectRelease();
      }
      v20 = __OFADD__(v16, 1);
      v21 = v16 + 1;
      if (v20)
        break;
      v22 = v45;
      v41 = *(void (**)(char *, char *, uint64_t))(v45 + 32);
      v42 = v21;
      v41(v44, v14, a2);
      v23 = dispatch thunk of Hashable._rawHashValue(seed:)();
      v24 = -1 << *(_BYTE *)(v15 + 32);
      v25 = v23 & ~v24;
      v26 = v25 >> 6;
      v27 = *(_QWORD *)(v43 + 8 * (v25 >> 6));
      v28 = 1 << v25;
      v29 = *(_QWORD *)(v22 + 72);
      if (((1 << v25) & v27) != 0)
      {
        v30 = ~v24;
        while (1)
        {
          v18(v7, *(_QWORD *)(v15 + 48) + v29 * v25, a2);
          v31 = a3;
          v32 = dispatch thunk of static Equatable.== infix(_:_:)();
          v33 = *(void (**)(char *, uint64_t))(v45 + 8);
          v33(v7, a2);
          if ((v32 & 1) != 0)
            break;
          v25 = (v25 + 1) & v30;
          v26 = v25 >> 6;
          v27 = *(_QWORD *)(v43 + 8 * (v25 >> 6));
          v28 = 1 << v25;
          a3 = v31;
          if ((v27 & (1 << v25)) == 0)
          {
            v14 = v38;
            v5 = v39;
            goto LABEL_14;
          }
        }
        v33(v44, a2);
        a3 = v31;
        v14 = v38;
        v5 = v39;
      }
      else
      {
LABEL_14:
        v34 = v44;
        *(_QWORD *)(v43 + 8 * v26) = v28 | v27;
        result = ((uint64_t (*)(unint64_t, char *, uint64_t))v41)(*(_QWORD *)(v15 + 48) + v29 * v25, v34, a2);
        v35 = *(_QWORD *)(v15 + 16);
        v20 = __OFADD__(v35, 1);
        v36 = v35 + 1;
        if (v20)
          goto LABEL_23;
        *(_QWORD *)(v15 + 16) = v36;
      }
      v16 = v42;
      if (v42 == v40)
        goto LABEL_21;
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
  }
  else
  {
LABEL_21:
    swift_bridgeObjectRelease();
    return v15;
  }
  return result;
}

void objectdestroy_22Tm()
{
  type metadata accessor for AutoScrollingList();
}

uint64_t sub_1BD3C145C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_5_110();
  swift_release();
  swift_release();
  v0 = OUTLINED_FUNCTION_29_55();
  OUTLINED_FUNCTION_22_68(v0);
  OUTLINED_FUNCTION_71_20();
  OUTLINED_FUNCTION_301();
  OUTLINED_FUNCTION_301();
  return OUTLINED_FUNCTION_15_81();
}

void partial apply for closure #1 in closure #1 in AutoScrollingList.body.getter()
{
  partial apply for closure #1 in AutoScrollingList.body.getter();
}

void sub_1BD3C1524(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void (*a15)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v22 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  a15(a14, v15 + ((v22 + 88) & ~v22), v16, v17, v18, v19, v20, v21);
  OUTLINED_FUNCTION_243();
}

void sub_1BD3C156C()
{
  objectdestroy_45Tm();
}

void partial apply for closure #2 in closure #1 in AutoScrollingList.body.getter()
{
  OUTLINED_FUNCTION_41_32();
  type metadata accessor for AutoScrollingList();
}

#error "1BD3C1610: call analysis failed (funcsize=19)"

void sub_1BD3C1614()
{
  OUTLINED_FUNCTION_81_1();
}

void sub_1BD3C161C()
{
  OUTLINED_FUNCTION_73_19();
  type metadata accessor for AutoScrollingList();
}

uint64_t sub_1BD3C1684()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_52(v0 + v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  swift_release();
  swift_release();
  v3 = OUTLINED_FUNCTION_29_55();
  OUTLINED_FUNCTION_22_68(v3);
  OUTLINED_FUNCTION_71_20();
  OUTLINED_FUNCTION_301();
  OUTLINED_FUNCTION_301();
  return OUTLINED_FUNCTION_15_81();
}

void partial apply for closure #3 in closure #1 in AutoScrollingList.body.getter()
{
  OUTLINED_FUNCTION_438();
  OUTLINED_FUNCTION_73_19();
  OUTLINED_FUNCTION_5_110();
  type metadata accessor for AutoScrollingList();
}

void sub_1BD3C1778()
{
  closure #3 in closure #1 in AutoScrollingList.body.getter();
  OUTLINED_FUNCTION_243();
}

uint64_t partial apply for closure #1 in closure #3 in closure #1 in AutoScrollingList.body.getter()
{
  return partial apply for closure #1 in closure #3 in closure #1 in AutoScrollingList.body.getter((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))closure #1 in closure #3 in closure #1 in AutoScrollingList.body.getter);
}

void sub_1BD3C17DC()
{
  OUTLINED_FUNCTION_31_52();
}

uint64_t partial apply for implicit closure #1 in closure #2 in closure #1 in AutoScrollingList.body.getter()
{
  return swift_getAtKeyPath();
}

uint64_t partial apply for closure #1 in closure #2 in closure #1 in AutoScrollingList.body.getter()
{
  return partial apply for closure #1 in closure #3 in closure #1 in AutoScrollingList.body.getter((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))closure #1 in closure #2 in closure #1 in AutoScrollingList.body.getter);
}

uint64_t partial apply for closure #1 in closure #3 in closure #1 in AutoScrollingList.body.getter(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[11], v1[12], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], v1[9], v1[10]);
}

void sub_1BD3C186C(_BYTE *a1@<X8>)
{
  *a1 = AutoScrollViewModel.shouldAutoScroll.getter() & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD3C1894()
{
  AutoScrollViewModel.shouldAutoScroll.setter();
  OUTLINED_FUNCTION_0();
}

void sub_1BD3C18B4()
{
  OUTLINED_FUNCTION_31_52();
}

void sub_1BD3C18C0(uint64_t *a1@<X8>)
{
  *a1 = AutoScrollViewModel.stickyRowIDs.getter();
  OUTLINED_FUNCTION_0();
}

void sub_1BD3C18E8()
{
  OUTLINED_FUNCTION_31_52();
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in AutoScrollingList.body.getter()
{
  return partial apply for closure #1 in closure #1 in closure #1 in AutoScrollingList.body.getter();
}

{
  uint64_t v0;
  uint64_t (*v1)(_QWORD, _QWORD, double, double, double, double);

  OUTLINED_FUNCTION_67_16();
  return v1(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(double *)(v0 + 104), *(double *)(v0 + 112), *(double *)(v0 + 120), *(double *)(v0 + 128));
}

void sub_1BD3C1900()
{
  objectdestroy_45Tm();
}

void objectdestroy_45Tm()
{
  type metadata accessor for AutoScrollingList();
}

void sub_1BD3C1960()
{
  void (*v0)(_QWORD);
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_72_20();
  v0(0);
  OUTLINED_FUNCTION_26_56();
  swift_release();
  v2 = OUTLINED_FUNCTION_30_55();
  OUTLINED_FUNCTION_13_91(v1 + *(int *)(v2 + 32));
  swift_release();
  OUTLINED_FUNCTION_301();
  OUTLINED_FUNCTION_301();
  OUTLINED_FUNCTION_18_76();
  swift_deallocObject();
  OUTLINED_FUNCTION_0_47();
}

void partial apply for closure #2 in closure #1 in closure #1 in AutoScrollingList.body.getter()
{
  OUTLINED_FUNCTION_438();
  type metadata accessor for AutoScrollingList();
}

void sub_1BD3C1A44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  OUTLINED_FUNCTION_5_110();
  OUTLINED_FUNCTION_16_72();
  closure #2 in closure #1 in closure #1 in AutoScrollingList.body.getter(a15);
}

void sub_1BD3C1A90()
{
  OUTLINED_FUNCTION_243();
}

unint64_t lazy protocol witness table accessor for type HighestBoundsKey and conformance HighestBoundsKey()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type HighestBoundsKey and conformance HighestBoundsKey;
  if (!lazy protocol witness table cache variable for type HighestBoundsKey and conformance HighestBoundsKey)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for HighestBoundsKey, &unk_1E7631F80);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type HighestBoundsKey and conformance HighestBoundsKey);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ListAnchor? and conformance <A> A?()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = lazy protocol witness table cache variable for type ListAnchor? and conformance <A> A?;
  if (!lazy protocol witness table cache variable for type ListAnchor? and conformance <A> A?)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ListAnchor?);
    v2 = lazy protocol witness table accessor for type ListAnchor and conformance ListAnchor();
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0DEE998], v1, &v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ListAnchor? and conformance <A> A?);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ListAnchor and conformance ListAnchor()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ListAnchor and conformance ListAnchor;
  if (!lazy protocol witness table cache variable for type ListAnchor and conformance ListAnchor)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ListAnchor, &type metadata for ListAnchor);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ListAnchor and conformance ListAnchor);
  }
  return result;
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in closure #1 in AutoScrollingList.body.getter()
{
  return partial apply for closure #1 in closure #1 in closure #1 in AutoScrollingList.body.getter();
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in AutoScrollingList.body.getter()
{
  return partial apply for closure #1 in closure #1 in closure #1 in AutoScrollingList.body.getter();
}

void partial apply for closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in AutoScrollingList.body.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_67_16();
  closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in AutoScrollingList.body.getter(v0[11], v0[16], v1, v2, v3, v4, v5, v6, v7, v8, v9, v0[10]);
}

uint64_t sub_1BD3C1C00()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_16_72();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  OUTLINED_FUNCTION_48_38();
  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in AutoScrollingList.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  OUTLINED_FUNCTION_16_72();
  return closure #2 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in AutoScrollingList.body.getter(a1, a2);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<Spacer, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<Spacer, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<Spacer, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Spacer, _FlexFrameLayout>);
    v2[0] = MEMORY[0x1E0CDFBE8];
    v2[1] = MEMORY[0x1E0CDA228];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<Spacer, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

void sub_1BD3C1D04()
{
  type metadata accessor for AutoScrollingList();
}

void sub_1BD3C1D54()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_72_20();
  OUTLINED_FUNCTION_16_72();
  OUTLINED_FUNCTION_26_56();
  swift_release();
  v1 = OUTLINED_FUNCTION_30_55();
  OUTLINED_FUNCTION_13_91(v0 + *(int *)(v1 + 32));
  swift_release();
  OUTLINED_FUNCTION_301();
  OUTLINED_FUNCTION_301();
  OUTLINED_FUNCTION_18_76();
  swift_deallocObject();
  OUTLINED_FUNCTION_0_47();
}

void partial apply for closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in AutoScrollingList.body.getter()
{
  OUTLINED_FUNCTION_41_32();
  type metadata accessor for AutoScrollingList();
}

#error "1BD3C1EA0: call analysis failed (funcsize=25)"

void sub_1BD3C1EA4()
{
  OUTLINED_FUNCTION_81_1();
}

void sub_1BD3C1EAC()
{
  type metadata accessor for AutoScrollingList();
}

uint64_t sub_1BD3C1F00(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v2 = *(_QWORD *)(a1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v13 - 8);
  v5 = (v3 + *(_QWORD *)(v2 + 64) + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = OUTLINED_FUNCTION_16_72();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = (v6 + *(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v12 = v7;
  swift_release();
  swift_release();
  v10 = type metadata accessor for Binding();
  OUTLINED_FUNCTION_13_91(v1 + v3 + *(int *)(v10 + 32));
  swift_release();
  OUTLINED_FUNCTION_301();
  OUTLINED_FUNCTION_301();
  outlined consume of StateObject<SyncedScreeningAlphaGradientView<A>.AnimatedState>.Storage<A>();
  (*(void (**)(unint64_t))(v4 + 8))(v1 + v5);
  (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v1 + v9, v12);
  return swift_deallocObject();
}

void partial apply for closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in AutoScrollingList.body.getter()
{
  type metadata accessor for AutoScrollingList();
}

#error "1BD3C2108: call analysis failed (funcsize=32)"

unint64_t lazy protocol witness table accessor for type AutoScrollKey and conformance AutoScrollKey()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type AutoScrollKey and conformance AutoScrollKey;
  if (!lazy protocol witness table cache variable for type AutoScrollKey and conformance AutoScrollKey)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for AutoScrollKey, &unk_1E7631FA0);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AutoScrollKey and conformance AutoScrollKey);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_39_51()
{
  uint64_t (*v0)(void);

  return v0();
}

void *OUTLINED_FUNCTION_75_15()
{
  return malloc(0xA8uLL);
}

uint64_t EffectsBrowserViewConstraintManager.__allocating_init(layoutIdiom:containingGuide:effectsBrowserView:controlsView:localParticipantView:)(char *a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  uint64_t v10;

  v10 = swift_allocObject();
  EffectsBrowserViewConstraintManager.init(layoutIdiom:containingGuide:effectsBrowserView:controlsView:localParticipantView:)(a1, a2, a3, a4, a5);
  return v10;
}

uint64_t EffectsBrowserViewConstraintManager.init(layoutIdiom:containingGuide:effectsBrowserView:controlsView:localParticipantView:)(char *a1, uint64_t a2, id a3, void *a4, void *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  id v31;
  id v32;
  id v33;

  v7 = v5;
  v12 = *a1;
  *(_QWORD *)(v7 + 56) = 0;
  *(_QWORD *)(v7 + 64) = 0;
  v13 = objc_msgSend(a3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  if (a5)
  {
    v14 = OUTLINED_FUNCTION_9((uint64_t)v13, sel_heightAnchor);
    v15 = objc_msgSend(v14, sel_constraintEqualToConstant_, 75.0);

    v16 = *(void **)(v7 + 56);
    *(_QWORD *)(v7 + 56) = v15;

    *(_QWORD *)(v7 + 48) = MEMORY[0x1E0DEE9D8];
    *(_BYTE *)(v7 + 16) = v12;
    *(_QWORD *)(v7 + 24) = a2;
    *(_QWORD *)(v7 + 32) = a3;
    type metadata accessor for LocalParticipantView();
    v17 = swift_dynamicCastClass();
    if (!v17)
    {

      v17 = 0;
    }
  }
  else
  {
    v18 = OUTLINED_FUNCTION_9((uint64_t)v13, sel_topAnchor);
    v19 = OUTLINED_FUNCTION_2_11((uint64_t)v18, sel_topAnchor);
    v20 = objc_msgSend(v18, sel_constraintEqualToAnchor_constant_, v19, 17.0);

    v21 = *(void **)(v7 + 64);
    *(_QWORD *)(v7 + 64) = v20;

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_1BD644B60;
    v23 = OUTLINED_FUNCTION_9(v22, sel_bottomAnchor);
    v24 = OUTLINED_FUNCTION_2_11((uint64_t)v23, sel_bottomAnchor);
    v25 = OUTLINED_FUNCTION_34_1();
    OUTLINED_FUNCTION_8_5();

    *(_QWORD *)(v22 + 32) = v6;
    v27 = OUTLINED_FUNCTION_9(v26, sel_leadingAnchor);
    v28 = OUTLINED_FUNCTION_2_11((uint64_t)v27, sel_leadingAnchor);
    v29 = OUTLINED_FUNCTION_34_1();
    OUTLINED_FUNCTION_8_5();

    *(_QWORD *)(v22 + 40) = v6;
    v31 = OUTLINED_FUNCTION_9(v30, sel_trailingAnchor);
    v32 = OUTLINED_FUNCTION_2_11((uint64_t)v31, sel_trailingAnchor);
    v33 = OUTLINED_FUNCTION_34_1();
    OUTLINED_FUNCTION_8_5();

    *(_QWORD *)(v22 + 48) = v6;
    OUTLINED_FUNCTION_26_0();

    v17 = 0;
    *(_QWORD *)(v7 + 48) = v22;
    *(_BYTE *)(v7 + 16) = v12;
    *(_QWORD *)(v7 + 24) = a2;
    *(_QWORD *)(v7 + 32) = a3;
  }
  *(_QWORD *)(v7 + 40) = v17;
  return v7;
}

uint64_t EffectsBrowserViewConstraintManager.constraintsForLayout(_:in:deviceOrientation:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  unsigned int v3;
  void *v4;
  double v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  char *v12;
  id v13;
  void *v14;
  char *v15;
  id v16;
  id v17;
  uint64_t v19;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(unsigned __int8 *)(a1 + 17);
  v4 = (void *)v1[7];
  v19 = v1[6];
  if (v4)
  {
    if (v2 == 6 || v2 == 3)
      v6 = 75.0;
    else
      v6 = 58.0;
    swift_bridgeObjectRetain();
    v7 = v4;
    objc_msgSend(v7, sel_setConstant_, v6);
    v8 = v7;
    OUTLINED_FUNCTION_36_0();
  }
  swift_bridgeObjectRetain();
  v9 = (void *)v1[8];
  if (v9)
  {
    v10 = v9;
    objc_msgSend(v10, sel_setConstant_, 17.0);
    v11 = v10;
    OUTLINED_FUNCTION_36_0();
  }
  v12 = (char *)v1[5];
  if (v12)
  {
    if (v3 >= 0x81)
    {
      v14 = *(void **)&v12[OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_controlsView];
      v15 = v12;
      v13 = objc_msgSend(v14, sel_bottomAnchor);
      if (one-time initialization token for browserVerticalPaddingFull == -1)
        goto LABEL_16;
    }
    else
    {
      v13 = objc_msgSend(v12, sel_bottomAnchor);
      if (one-time initialization token for browserVerticalPadding == -1)
      {
LABEL_16:
        v16 = OUTLINED_FUNCTION_2_11((uint64_t)v13, sel_topAnchor);
        v17 = OUTLINED_FUNCTION_29_44(v16, sel_constraintEqualToAnchor_constant_);

        OUTLINED_FUNCTION_36_0();
      }
    }
    v13 = (id)swift_once();
    goto LABEL_16;
  }
  return v19;
}

id *EffectsBrowserViewConstraintManager.deinit()
{
  id *v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t EffectsBrowserViewConstraintManager.__deallocating_deinit()
{
  EffectsBrowserViewConstraintManager.deinit();
  return swift_deallocClassInstance();
}

uint64_t protocol witness for ViewConstraintManager.constraintsForLayout(_:in:deviceOrientation:) in conformance EffectsBrowserViewConstraintManager()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 192))();
}

uint64_t type metadata accessor for EffectsBrowserViewConstraintManager()
{
  return objc_opt_self();
}

uint64_t method lookup function for EffectsBrowserViewConstraintManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of EffectsBrowserViewConstraintManager.__allocating_init(layoutIdiom:containingGuide:effectsBrowserView:controlsView:localParticipantView:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of EffectsBrowserViewConstraintManager.constraintsForLayout(_:in:deviceOrientation:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

BOOL static CameraPosition.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t CameraPosition.avDevicePosition.getter(unsigned __int8 a1)
{
  return 2 - a1;
}

void *CameraPosition.default.unsafeMutableAddressor()
{
  return &static CameraPosition.default;
}

ConversationKit::CameraPosition_optional __swiftcall CameraPosition.init(avDevicePosition:)(AVCaptureDevicePosition avDevicePosition)
{
  ConversationKit::CameraPosition_optional result;
  Swift::String v2;
  Swift::String v3;

  if ((unint64_t)avDevicePosition < (AVCaptureDevicePositionFront|AVCaptureDevicePositionBack))
    return (ConversationKit::CameraPosition_optional)(2 - avDevicePosition);
  _StringGuts.grow(_:)(65);
  v2._object = (void *)0x80000001BD6890D0;
  v2._countAndFlagsBits = 0xD00000000000003FLL;
  String.append(_:)(v2);
  v3._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v3);
  swift_bridgeObjectRelease();
  result.value = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t static CameraPosition.default.getter()
{
  return 0;
}

void CameraPosition.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
  Hasher._combine(_:)(a2);
}

Swift::Int CameraPosition.hashValue.getter(unsigned __int8 a1)
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1);
  return Hasher._finalize()();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance CameraPosition(char *a1, char *a2)
{
  return static CameraPosition.== infix(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance CameraPosition()
{
  unsigned __int8 *v0;

  return CameraPosition.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance CameraPosition(uint64_t a1)
{
  unsigned __int8 *v1;

  CameraPosition.hash(into:)(a1, *v1);
}

unint64_t lazy protocol witness table accessor for type CameraPosition and conformance CameraPosition()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type CameraPosition and conformance CameraPosition;
  if (!lazy protocol witness table cache variable for type CameraPosition and conformance CameraPosition)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for CameraPosition, &type metadata for CameraPosition);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CameraPosition and conformance CameraPosition);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CameraPosition(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BD3C2CF4 + 4 * byte_1BD65CBBD[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BD3C2D28 + 4 * byte_1BD65CBB8[v4]))();
}

uint64_t sub_1BD3C2D28(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD3C2D30(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD3C2D38);
  return result;
}

uint64_t sub_1BD3C2D44(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD3C2D4CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BD3C2D50(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD3C2D58(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CameraPosition()
{
  return &type metadata for CameraPosition;
}

double SpringAnimationParameters.duration.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

void SpringAnimationParameters.duration.setter(double a1)
{
  double *v1;

  *v1 = a1;
}

uint64_t (*SpringAnimationParameters.duration.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double SpringAnimationParameters.mass.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

void SpringAnimationParameters.mass.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 8) = a1;
}

uint64_t (*SpringAnimationParameters.mass.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double SpringAnimationParameters.stiffness.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

void SpringAnimationParameters.stiffness.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 16) = a1;
}

uint64_t (*SpringAnimationParameters.stiffness.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double SpringAnimationParameters.damping.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

void SpringAnimationParameters.damping.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 24) = a1;
}

uint64_t (*SpringAnimationParameters.damping.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double SpringAnimationParameters.initialVelocity.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

void SpringAnimationParameters.initialVelocity.setter(double a1, double a2)
{
  uint64_t v2;

  *(double *)(v2 + 32) = a1;
  *(double *)(v2 + 40) = a2;
}

uint64_t (*SpringAnimationParameters.initialVelocity.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double default argument 4 of SpringAnimationParameters.init(duration:mass:stiffness:damping:initialVelocity:)()
{
  return 0.0;
}

void SpringAnimationParameters.init(duration:mass:stiffness:damping:initialVelocity:)(double *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>, double a6@<D4>, double a7@<D5>)
{
  *a1 = a2;
  a1[1] = a3;
  a1[2] = a4;
  a1[3] = a5;
  a1[4] = a6;
  a1[5] = a7;
}

id SpringAnimationParameters.provider.getter()
{
  double *v0;

  return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3CA0]), sel_initWithMass_stiffness_damping_initialVelocity_, v0[1], v0[2], v0[3], v0[4], v0[5]);
}

ValueMetadata *type metadata accessor for SpringAnimationParameters()
{
  return &type metadata for SpringAnimationParameters;
}

uint64_t dispatch thunk of PowerSaverObserver.update(with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of PowerSaverManaging.shouldDisplayThermalWarning.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PowerSaverManaging.shouldDisplayPowerSaver.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of PowerSaverManaging.powerSaverMessage.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of PowerSaverManaging.powerSaverStateEvent.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

BOOL static Bool.< infix(_:_:)(char a1, char a2)
{
  id v3;
  id v4;
  id v5;
  id v6;

  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithBool_, a1 & 1);
  v4 = objc_msgSend(v3, sel_integerValue);

  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithBool_, a2 & 1);
  v6 = objc_msgSend(v5, sel_integerValue);

  return (uint64_t)v4 < (uint64_t)v6;
}

uint64_t base witness table accessor for Equatable in Bool()
{
  return MEMORY[0x1E0DEAFB8];
}

BOOL protocol witness for static Comparable.< infix(_:_:) in conformance Bool(char *a1, char *a2)
{
  return static Bool.< infix(_:_:)(*a1, *a2);
}

BOOL protocol witness for static Comparable.<= infix(_:_:) in conformance Bool(char *a1, char *a2)
{
  return specialized static Comparable.<= infix(_:_:)(*a1, *a2);
}

BOOL protocol witness for static Comparable.>= infix(_:_:) in conformance Bool(char *a1, char *a2)
{
  return specialized static Comparable.>= infix(_:_:)(*a1, *a2);
}

BOOL protocol witness for static Comparable.> infix(_:_:) in conformance Bool(char *a1, char *a2)
{
  return specialized static Comparable.> infix(_:_:)(*a1, *a2);
}

id CubicAnimationParameters.mediaTimingFunction.getter()
{
  double *v0;
  float v1;
  float v2;
  float v3;
  float v4;
  id v5;
  double v6;
  double v7;
  double v8;
  double v9;

  v1 = v0[1];
  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = objc_allocWithZone(MEMORY[0x1E0CD27D0]);
  *(float *)&v6 = v1;
  *(float *)&v7 = v2;
  *(float *)&v8 = v3;
  *(float *)&v9 = v4;
  return objc_msgSend(v5, sel_initWithControlPoints__::, v6, v7, v8, v9);
}

UIViewPropertyAnimator __swiftcall UIViewPropertyAnimator.init(cubicAnimationParameters:)(ConversationKit::CubicAnimationParameters *cubicAnimationParameters)
{
  id v2;
  double duration;
  id v4;
  id v5;

  v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  duration = cubicAnimationParameters->duration;
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC36D8]), sel_initWithControlPoint1_controlPoint2_, cubicAnimationParameters->controlPoint1.x, cubicAnimationParameters->controlPoint1.y, cubicAnimationParameters->controlPoint2.x, cubicAnimationParameters->controlPoint2.y);
  v5 = objc_msgSend(v2, sel_initWithDuration_timingParameters_, v4, duration);

  return (UIViewPropertyAnimator)v5;
}

double CubicAnimationParameters.duration.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

double CubicAnimationParameters.controlPoint1.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

double CubicAnimationParameters.controlPoint2.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

void __swiftcall CubicAnimationParameters.init(duration:controlPoint1:controlPoint2:)(ConversationKit::CubicAnimationParameters *__return_ptr retstr, Swift::Double duration, CGPoint controlPoint1, CGPoint controlPoint2)
{
  retstr->duration = duration;
  retstr->controlPoint1.x = controlPoint1.x;
  retstr->controlPoint1.y = controlPoint1.y;
  retstr->controlPoint2.x = controlPoint2.x;
  retstr->controlPoint2.y = controlPoint2.y;
}

id CubicAnimationParameters.cubicTimingParameters.getter()
{
  id v0;
  id v1;
  SEL v2;

  v0 = objc_allocWithZone(MEMORY[0x1E0DC36D8]);
  OUTLINED_FUNCTION_66();
  return OUTLINED_FUNCTION_0_130(v1, v2);
}

id CubicAnimationParameters.provider.getter()
{
  id v0;
  id v1;
  SEL v2;

  v0 = objc_allocWithZone(MEMORY[0x1E0DC36D8]);
  OUTLINED_FUNCTION_66();
  return OUTLINED_FUNCTION_0_130(v1, v2);
}

uint64_t getEnumTagSinglePayload for CubicAnimationParameters(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for CubicAnimationParameters(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 40) = v3;
  return result;
}

ValueMetadata *type metadata accessor for CubicAnimationParameters()
{
  return &type metadata for CubicAnimationParameters;
}

uint64_t VideoMessagePlayerManager.player.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 96);
  OUTLINED_FUNCTION_2_0();
  v4 = type metadata accessor for Optional();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t key path getter for VideoMessagePlayerManager.hostViewController : <A>VideoMessagePlayerManager<A>@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)a1 + *(_QWORD *)(**(_QWORD **)a1 + 128);
  swift_beginAccess();
  result = MEMORY[0x1C3B752C0](v3);
  *a2 = result;
  return result;
}

uint64_t key path setter for VideoMessagePlayerManager.hostViewController : <A>VideoMessagePlayerManager<A>()
{
  swift_beginAccess();
  return swift_unknownObjectWeakAssign();
}

uint64_t VideoMessagePlayerManager.hostViewController.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 128);
  OUTLINED_FUNCTION_2_0();
  return MEMORY[0x1C3B752C0](v1);
}

void VideoMessagePlayerManager.hostViewController.setter(void *a1)
{
  OUTLINED_FUNCTION_2_0();
  swift_unknownObjectWeakAssign();

}

void (*VideoMessagePlayerManager.hostViewController.modify(_QWORD *a1))(id **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 128);
  v3[5] = v4;
  v5 = v1 + v4;
  OUTLINED_FUNCTION_2_0();
  v3[3] = MEMORY[0x1C3B752C0](v5);
  return TapInteraction.view.modify;
}

void VideoMessagePlayerManager.__allocating_init(videoMessageViewModel:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_allocObject();
  VideoMessagePlayerManager.init(videoMessageViewModel:)(a1, v2, v3);
  OUTLINED_FUNCTION_0();
}

void VideoMessagePlayerManager.init(videoMessageViewModel:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  OUTLINED_FUNCTION_77_0(v3 + *(_QWORD *)(*(_QWORD *)v3 + 96), a2, a3, *(_QWORD *)(*(_QWORD *)v3 + 80));
  *(_QWORD *)(v3 + *(_QWORD *)(*(_QWORD *)v3 + 112)) = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(v3 + *(_QWORD *)(*(_QWORD *)v3 + 120)) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v3 + *(_QWORD *)(*(_QWORD *)v3 + 104)) = a1;
  OUTLINED_FUNCTION_0();
}

void VideoMessagePlayerManager.setupVideo(with:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  uint64_t (*v13)();
  uint64_t v14;

  v2 = v1;
  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 80);
  v6 = type metadata accessor for Optional();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v14 - v9;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(*(_QWORD *)(v5 - 8) + 16))((char *)&v14 - v9, a1, v5, v8);
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v5);
  v11 = (uint64_t)v2 + *(_QWORD *)(*v2 + 96);
  OUTLINED_FUNCTION_2_0();
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 40))(v11, v10, v6);
  swift_endAccess();
  v12 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v4 + 88) + 32))(v5);
  v13 = implicit closure #1 in VideoMessagePlayerManager.setupVideo(with:)();
  if (v12)
  {
    ((void (*)(void *))v13)(v12);
    OUTLINED_FUNCTION_43();

  }
  else
  {
    OUTLINED_FUNCTION_43();
  }
  VideoMessagePlayerManager.setUpNotifications()();
  OUTLINED_FUNCTION_65_1();
}

uint64_t (*implicit closure #1 in VideoMessagePlayerManager.setupVideo(with:)())()
{
  swift_retain();
  return partial apply for implicit closure #2 in implicit closure #1 in VideoMessagePlayerManager.setupVideo(with:);
}

_QWORD *VideoMessagePlayerManager.fetchDuration(from:)(void *a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;

  v3 = v1;
  v5 = (_QWORD *)*v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_16_2();
  v7 = *(_QWORD **)((char *)v1 + v5[13]);
  result = (*(_QWORD *(**)(uint64_t *__return_ptr))((*MEMORY[0x1E0DEEDD8] & *v7) + 0x120))(&v15);
  if ((v15 & 1) == 0)
  {
    v9 = type metadata accessor for TaskPriority();
    OUTLINED_FUNCTION_77_0(v2, v10, v11, v9);
    OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_4_115();
    v12 = (_QWORD *)OUTLINED_FUNCTION_15();
    v12[2] = 0;
    v12[3] = 0;
    v12[4] = v5[10];
    v12[5] = v5[11];
    v12[6] = v7;
    v12[7] = a1;
    v13 = a1;
    v14 = _sScTss5NeverORs_rlE8detached8priority9operationScTyxABGScPSg_xyYaYAcntFZyt_Tgm5(v2, (uint64_t)&async function pointer to partial apply for closure #1 in VideoMessagePlayerManager.fetchDuration(from:), (uint64_t)v12);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v2, &demangling cache variable for type metadata for TaskPriority?);
    *(_QWORD *)((char *)v3 + *(_QWORD *)(*v3 + 120)) = v14;
    return (_QWORD *)swift_release();
  }
  return result;
}

uint64_t VideoMessagePlayerManager.setUpNotifications()()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t EnumTagSinglePayload;
  void *v27;
  id v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  _QWORD *v35;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;

  v2 = v0;
  v3 = (_QWORD *)*v0;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<VideoMessageControlsView.PlayState>.Publisher);
  v43 = *(_QWORD *)(v4 - 8);
  v44 = v4;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_16_2();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_77();
  v9 = v8 - v7;
  v10 = type metadata accessor for NSNotificationCenter.Publisher();
  v39 = *(_QWORD *)(v10 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_77();
  v14 = v13 - v12;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.ReceiveOn<NSNotificationCenter.Publisher, NSRunLoop>);
  v41 = *(_QWORD *)(v15 - 8);
  v42 = v15;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_77();
  v40 = v18 - v17;
  v19 = v3[10];
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v21);
  OUTLINED_FUNCTION_77();
  v24 = v23 - v22;
  v25 = (uint64_t)v2 + v3[12];
  OUTLINED_FUNCTION_2_0();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v25, 1, v19);
  if (!(_DWORD)EnumTagSinglePayload)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(v24, v25, v19);
    v38 = v3[11];
    v27 = (void *)(*(uint64_t (**)(uint64_t))(v38 + 32))(v19);
    EnumTagSinglePayload = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8))(v24, v19);
    if (v27)
    {
      v28 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
      v29 = (void *)MEMORY[0x1C3B72E00](0xD000000000000028, 0x80000001BD689150);
      v37 = v27;
      NSNotificationCenter.publisher(for:object:)();

      v45 = objc_msgSend((id)objc_opt_self(), sel_mainRunLoop);
      v30 = type metadata accessor for NSRunLoop.SchedulerOptions();
      OUTLINED_FUNCTION_77_0(v9, v31, v32, v30);
      _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSRunLoop);
      lazy protocol witness table accessor for type NSNotificationCenter.Publisher and conformance NSNotificationCenter.Publisher();
      lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop();
      Publisher.receive<A>(on:options:)();
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v9, (uint64_t *)&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);

      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v14, v10);
      OUTLINED_FUNCTION_15();
      OUTLINED_FUNCTION_4_115();
      v33 = (_QWORD *)OUTLINED_FUNCTION_15();
      v33[2] = v19;
      v33[3] = v38;
      v33[4] = v14;
      lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type Publishers.ReceiveOn<NSNotificationCenter.Publisher, NSRunLoop> and conformance Publishers.ReceiveOn<A, B>, &demangling cache variable for type metadata for Publishers.ReceiveOn<NSNotificationCenter.Publisher, NSRunLoop>, MEMORY[0x1E0C95CB8]);
      Publisher<>.sink(receiveValue:)();
      OUTLINED_FUNCTION_114_0();
      (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v40, v42);
      OUTLINED_FUNCTION_2_0();
      AnyCancellable.store(in:)();
      swift_endAccess();

      EnumTagSinglePayload = OUTLINED_FUNCTION_43();
    }
  }
  v34 = *(_QWORD **)((char *)v2 + *(_QWORD *)(*v2 + 104));
  (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v34) + 0x108))(EnumTagSinglePayload);
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_4_115();
  v35 = (_QWORD *)OUTLINED_FUNCTION_15();
  v35[2] = v19;
  v35[3] = v3[11];
  v35[4] = v34;
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type Published<VideoMessageControlsView.PlayState>.Publisher and conformance Published<A>.Publisher, &demangling cache variable for type metadata for Published<VideoMessageControlsView.PlayState>.Publisher, MEMORY[0x1E0C96190]);
  Publisher<>.sink(receiveValue:)();
  OUTLINED_FUNCTION_114_0();
  (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v1, v44);
  OUTLINED_FUNCTION_2_0();
  AnyCancellable.store(in:)();
  swift_endAccess();
  return OUTLINED_FUNCTION_43();
}

void VideoMessagePlayerManager.setupVideo(with:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSURL *v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(void *, uint64_t, uint64_t);
  id v21;

  v3 = v2;
  v6 = *v3;
  v7 = type metadata accessor for URL();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_77();
  v11 = v10 - v9;
  _sSo8NSObjectCMaTm_0(0, &lazy cache variable for type metadata for AVAsset);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v11, a1, v7);
  @nonobjc AVAsset.__allocating_init(url:)(v11, v12);
  v14 = v13;
  v15 = objc_allocWithZone(MEMORY[0x1E0C8B300]);
  @nonobjc AVPlayerItem.init(asset:automaticallyLoadedAssetKeys:)(v14, (uint64_t)&outlined read-only object #0 of VideoMessagePlayerManager.setupVideo(with:));
  v17 = v16;
  v18 = *(_QWORD *)(v6 + 80);
  v19 = *(_QWORD *)(v6 + 88);
  v20 = *(void (**)(void *, uint64_t, uint64_t))(v19 + 40);
  v21 = v16;
  v20(v17, v18, v19);
  VideoMessagePlayerManager.setupVideo(with:)(a2);

  OUTLINED_FUNCTION_65_1();
}

void @nonobjc AVAsset.__allocating_init(url:)(uint64_t a1@<X0>, NSURL *a2@<X8>)
{
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;

  URL._bridgeToObjectiveC()(a2);
  v4 = v3;
  v5 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_assetWithURL_, v3);

  v6 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
  OUTLINED_FUNCTION_18();
}

void closure #1 in VideoMessagePlayerManager.setUpNotifications()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t Strong;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v6 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  v10 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  if (Strong)
  {
    v11 = *(id *)(Strong + *(_QWORD *)(*(_QWORD *)Strong + 104));
    v12 = swift_release();
    v13 = (*(unsigned __int8 (**)(uint64_t))((*v10 & *v11) + 0xF0))(v12);

    if (!v13)
      goto LABEL_5;
  }
  swift_beginAccess();
  v14 = swift_weakLoadStrong();
  if (v14)
  {
    v15 = *(id *)(v14 + *(_QWORD *)(*(_QWORD *)v14 + 104));
    v16 = swift_release();
    v17 = (*(unsigned __int8 (**)(uint64_t))((*v10 & *v15) + 0xF0))(v16);

    if (v17 == 1)
    {
LABEL_5:
      swift_beginAccess();
      v18 = swift_weakLoadStrong();
      if (v18)
      {
        v19 = *(id *)(v18 + *(_QWORD *)(*(_QWORD *)v18 + 104));
        swift_release();
        (*(void (**)(uint64_t))((*v10 & *v19) + 0xF8))(3);

      }
      swift_beginAccess();
      v20 = swift_weakLoadStrong();
      if (v20)
      {
        v21 = v20 + *(_QWORD *)(*(_QWORD *)v20 + 96);
        swift_beginAccess();
        if (__swift_getEnumTagSinglePayload(v21, 1, a3))
        {
          swift_release();
        }
        else
        {
          (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v21, a3);
          swift_release();
          (*(void (**)(_QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(a4 + 48))(*MEMORY[0x1E0CA2E68], *(_QWORD *)(MEMORY[0x1E0CA2E68] + 8), *(_QWORD *)(MEMORY[0x1E0CA2E68] + 16), a3, a4);
          (*(void (**)(char *, uint64_t))(v6 + 8))(v8, a3);
        }
      }
    }
  }
}

uint64_t closure #2 in VideoMessagePlayerManager.setUpNotifications()(char *a1)
{
  char v1;
  uint64_t result;

  v1 = *a1;
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    VideoMessagePlayerManager.updatePlayer(with:)(v1);
    swift_release();
  }
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    VideoMessagePlayerManager.updateHostController(using:)(v1);
    return swift_release();
  }
  return result;
}

uint64_t VideoMessagePlayerManager.updatePlayer(with:)(unsigned __int8 a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  __n128 v7;

  v2 = *v1;
  v3 = (uint64_t)v1 + *(_QWORD *)(*v1 + 96);
  if (a1 > 1u)
  {
    swift_beginAccess();
    v6 = *(_QWORD *)(v2 + 80);
    if (!__swift_getEnumTagSinglePayload(v3, 1, v6))
    {
      v7.n128_u32[0] = 0;
      (*(void (**)(uint64_t, __n128))(*(_QWORD *)(v2 + 88) + 16))(v6, v7);
    }
  }
  else
  {
    swift_beginAccess();
    v4 = *(_QWORD *)(v2 + 80);
    if (!__swift_getEnumTagSinglePayload(v3, 1, v4))
    {
      v5.n128_u32[0] = 1.0;
      (*(void (**)(uint64_t, __n128))(*(_QWORD *)(v2 + 88) + 16))(v4, v5);
    }
  }
  return swift_endAccess();
}

void VideoMessagePlayerManager.updateHostController(using:)(char a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  void *v5;
  _QWORD v6[6];

  v3 = (void *)objc_opt_self();
  v4 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v4 + 16) = v1;
  *(_BYTE *)(v4 + 24) = a1;
  v6[4] = partial apply for closure #1 in VideoMessagePlayerManager.updateHostController(using:);
  v6[5] = v4;
  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 1107296256;
  v6[2] = thunk for @escaping @callee_guaranteed () -> ();
  v6[3] = &block_descriptor_72;
  v5 = _Block_copy(v6);
  swift_retain();
  swift_release();
  objc_msgSend(v3, sel_animateWithDuration_animations_, v5, 0.25);
  _Block_release(v5);
}

uint64_t closure #1 in VideoMessagePlayerManager.fetchDuration(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 64) = a4;
  *(_QWORD *)(v5 + 72) = a5;
  return swift_task_switch();
}

uint64_t closure #1 in VideoMessagePlayerManager.fetchDuration(from:)()
{
  uint64_t v0;
  uint64_t Strong;

  OUTLINED_FUNCTION_2_0();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 80) = Strong;
  if (!Strong)
    return (*(uint64_t (**)(void))(v0 + 8))();
  *(_QWORD *)(v0 + 88) = type metadata accessor for MainActor();
  *(_QWORD *)(v0 + 96) = static MainActor.shared.getter();
  OUTLINED_FUNCTION_34();
  return OUTLINED_FUNCTION_2_8();
}

{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 72);
  swift_release();
  *(_QWORD *)(v0 + 104) = objc_msgSend(v1, sel_asset);
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_4_4();
}

{
  uint64_t v0;
  _QWORD *v1;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AVAsyncProperty<AVAsset, CMTime>);
  *(_QWORD *)(v0 + 112) = static AVPartialAsyncProperty<A>.duration.getter();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v1;
  *v1 = v0;
  v1[1] = closure #1 in VideoMessagePlayerManager.fetchDuration(from:);
  return AVAsynchronousKeyValueLoading.load<A>(_:)();
}

{
  void *v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;

  v2 = *v1;
  *(_QWORD *)(*v1 + 128) = v0;
  swift_task_dealloc();
  v3 = *(void **)(v2 + 104);
  if (v0)

  swift_release();
  OUTLINED_FUNCTION_2_14();
  return swift_task_switch();
}

{
  uint64_t v0;

  *(_OWORD *)(v0 + 136) = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v0 + 152) = *(_QWORD *)(v0 + 56);
  *(_QWORD *)(v0 + 160) = static MainActor.shared.getter();
  OUTLINED_FUNCTION_34();
  return OUTLINED_FUNCTION_2_8();
}

{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  swift_release();
  closure #1 in closure #1 in VideoMessagePlayerManager.fetchDuration(from:)(v1);
  OUTLINED_FUNCTION_2_14();
  return swift_task_switch();
}

{
  uint64_t v0;

  swift_release();
  return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t closure #1 in closure #1 in VideoMessagePlayerManager.fetchDuration(from:)(uint64_t a1)
{
  _QWORD *v1;
  double v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD **)(a1 + *(_QWORD *)(*(_QWORD *)a1 + 104));
  CMTime.seconds.getter();
  if (v2 <= 0.0)
    goto LABEL_6;
  if (one-time initialization token for timeFormatter != -1)
    swift_once();
  v3 = (id)static NSDateComponentsFormatter.timeFormatter;
  CMTime.seconds.getter();
  v4 = objc_msgSend(v3, sel_stringFromTimeInterval_);

  if (v4)
  {
    v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v7 = v6;

  }
  else
  {
LABEL_6:
    v5 = static String.localizedStringWithFormat(_:_:)();
    v7 = v8;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x158))(v5, v7);
}

void closure #1 in VideoMessagePlayerManager.updateHostController(using:)(uint64_t a1, char a2)
{
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  double v8;

  v3 = a1 + *(_QWORD *)(*(_QWORD *)a1 + 128);
  swift_beginAccess();
  v4 = (void *)MEMORY[0x1C3B752C0](v3);
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(v4, sel_navigationController);

    if (v6)
    {
      v7 = objc_msgSend(v6, sel_navigationBar);

      v8 = 1.0;
      if (!a2)
        v8 = 0.0;
      objc_msgSend(v7, sel_setAlpha_, v8);

    }
  }
}

void VideoMessagePlayerManager.deinit()
{
  uint64_t v0;
  uint64_t v1;

  v1 = type metadata accessor for Optional();
  OUTLINED_FUNCTION_17_1(v1);

  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectWeakDestroy();
  OUTLINED_FUNCTION_0();
}

uint64_t VideoMessagePlayerManager.__deallocating_deinit()
{
  VideoMessagePlayerManager.deinit();
  return swift_deallocClassInstance();
}

id protocol witness for VideoMessagePlayer.rate.getter in conformance AVPlayer()
{
  return @nonobjc AVPlayer.rate.getter();
}

id @nonobjc AVPlayer.rate.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_rate);
}

void protocol witness for VideoMessagePlayer.rate.setter in conformance AVPlayer()
{
  @nonobjc AVPlayer.rate.setter();
  OUTLINED_FUNCTION_0();
}

id (*protocol witness for VideoMessagePlayer.rate.modify in conformance AVPlayer(uint64_t a1))(uint64_t a1, double a2)
{
  void **v1;
  void *v3;
  int v4;

  v3 = *v1;
  *(_QWORD *)a1 = *v1;
  objc_msgSend(v3, sel_rate);
  *(_DWORD *)(a1 + 8) = v4;
  return protocol witness for VideoMessagePlayer.rate.modify in conformance AVPlayer;
}

id protocol witness for VideoMessagePlayer.rate.modify in conformance AVPlayer(uint64_t a1, double a2)
{
  LODWORD(a2) = *(_DWORD *)(a1 + 8);
  return objc_msgSend(*(id *)a1, sel_setRate_, a2);
}

void protocol witness for VideoMessagePlayer.currentItem.getter in conformance AVPlayer()
{
  @nonobjc AVPlayer.currentItem.getter();
  OUTLINED_FUNCTION_0();
}

void protocol witness for VideoMessagePlayer.init(playerItem:) in conformance AVPlayer(AVPlayerItem_optional a1@<0:X0, 8:X1, 16:W2.1>, Class *a2@<X8>)
{
  *a2 = AVPlayer.__allocating_init(playerItem:)(a1).super.isa;
  OUTLINED_FUNCTION_0();
}

void protocol witness for VideoMessagePlayer.seek(to:) in conformance AVPlayer(uint64_t a1, uint64_t a2, uint64_t a3)
{
  @nonobjc AVPlayer.seek(to:)(a1, a2, a3);
  OUTLINED_FUNCTION_0();
}

void @nonobjc AVPlayerItem.init(asset:automaticallyLoadedAssetKeys:)(void *a1, uint64_t a2)
{
  void *v2;
  NSArray v4;

  if (a2)
  {
    v4.super.isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v4.super.isa = 0;
  }
  objc_msgSend(v2, sel_initWithAsset_automaticallyLoadedAssetKeys_, a1, v4.super.isa);

  OUTLINED_FUNCTION_18();
}

uint64_t sub_1BD3C47FC()
{
  return 16;
}

__n128 sub_1BD3C4808(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t dispatch thunk of VideoMessagePlayer.rate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of VideoMessagePlayer.rate.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of VideoMessagePlayer.rate.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of VideoMessagePlayer.currentItem.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of VideoMessagePlayer.init(playerItem:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of VideoMessagePlayer.seek(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 48))();
}

uint64_t type metadata completion function for VideoMessagePlayerManager()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Optional();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for VideoMessagePlayerManager(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for VideoMessagePlayerManager);
}

uint64_t method lookup function for VideoMessagePlayerManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of VideoMessagePlayerManager.__allocating_init(videoMessageViewModel:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t sub_1BD3C4904()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BD3C4928()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in VideoMessagePlayerManager.fetchDuration(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v2 = swift_task_alloc();
  v3 = *(_OWORD *)(v0 + 48);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = partial apply for closure #1 in AsyncCancellableTimer.wait(with:);
  *(_OWORD *)(v2 + 64) = v3;
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_4_4();
}

uint64_t sub_1BD3C49B0()
{
  swift_release();
  return swift_deallocObject();
}

void partial apply for closure #1 in VideoMessagePlayerManager.updateHostController(using:)()
{
  uint64_t v0;

  closure #1 in VideoMessagePlayerManager.updateHostController(using:)(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_1BD3C49E0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in VideoMessagePlayerManager.setUpNotifications()(char *a1)
{
  return closure #2 in VideoMessagePlayerManager.setUpNotifications()(a1);
}

void partial apply for closure #1 in VideoMessagePlayerManager.setUpNotifications()(uint64_t a1)
{
  uint64_t *v1;

  closure #1 in VideoMessagePlayerManager.setUpNotifications()(a1, v1[4], v1[2], v1[3]);
}

void specialized Array.reserveCapacity(_:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1;
  if (!swift_isUniquelyReferenced_nonNull_native() || a1 > *(_QWORD *)(v3 + 24) >> 1)
  {
    specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    v3 = v4;
  }
  *v1 = v3;
}

void *CellularAudioSampleNormalizer.Constants.numBands.unsafeMutableAddressor()
{
  return &static CellularAudioSampleNormalizer.Constants.numBands;
}

uint64_t static CellularAudioSampleNormalizer.Constants.numBands.getter()
{
  return 14;
}

uint64_t static CellularAudioSampleNormalizer.Errors.== infix(_:_:)()
{
  return 1;
}

void CellularAudioSampleNormalizer.Errors.hash(into:)()
{
  Hasher._combine(_:)(0);
  OUTLINED_FUNCTION_0();
}

Swift::Int CellularAudioSampleNormalizer.Errors.hashValue.getter()
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(0);
  return Hasher._finalize()();
}

void CellularAudioSampleNormalizer.frameCount.getter()
{
  uint64_t v0;
  float v1;
  float v2;

  if (*(_BYTE *)(v0 + 24) == 1)
  {
    v1 = (*(float (**)(void))(*(_QWORD *)v0 + 480))();
    v2 = ceilf(v1 / (*(float (**)(void))(*(_QWORD *)v0 + 504))());
    if ((~LODWORD(v2) & 0x7F800000) != 0)
    {
      if (v2 > -9.2234e18)
      {
        if (v2 < 9.2234e18)
        {
          *(_QWORD *)(v0 + 16) = (uint64_t)v2;
          *(_BYTE *)(v0 + 24) = 0;
          return;
        }
        goto LABEL_9;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_9:
    __break(1u);
  }
}

uint64_t CellularAudioSampleNormalizer.frameCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  *(_BYTE *)(v1 + 24) = 0;
  return result;
}

void CellularAudioSampleNormalizer.frameCount.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_8_3(a1);
  CellularAudioSampleNormalizer.frameCount.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_0();
}

_QWORD *CellularAudioSampleNormalizer.frameCount.modify(_QWORD *result)
{
  uint64_t v1;

  v1 = result[1];
  *(_QWORD *)(v1 + 16) = *result;
  *(_BYTE *)(v1 + 24) = 0;
  return result;
}

void CellularAudioSampleNormalizer.log2FrameCount.getter()
{
  uint64_t v0;
  uint64_t v1;
  double v2;

  if (*(_BYTE *)(v0 + 40) == 1)
  {
    v1 = (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
    v2 = round(log2((double)v1));
    if ((~*(_QWORD *)&v2 & 0x7FF0000000000000) != 0)
    {
      if (v2 > -1.0)
      {
        if (v2 < 1.84467441e19)
        {
          *(_QWORD *)(v0 + 32) = (unint64_t)v2;
          *(_BYTE *)(v0 + 40) = 0;
          return;
        }
        goto LABEL_9;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_9:
    __break(1u);
  }
}

uint64_t CellularAudioSampleNormalizer.log2FrameCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = result;
  *(_BYTE *)(v1 + 40) = 0;
  return result;
}

void CellularAudioSampleNormalizer.log2FrameCount.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_8_3(a1);
  CellularAudioSampleNormalizer.log2FrameCount.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_0();
}

_QWORD *CellularAudioSampleNormalizer.log2FrameCount.modify(_QWORD *result)
{
  uint64_t v1;

  v1 = result[1];
  *(_QWORD *)(v1 + 32) = *result;
  *(_BYTE *)(v1 + 40) = 0;
  return result;
}

uint64_t CellularAudioSampleNormalizer.bufferSizePowerOf2.getter()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t result;

  if (*(_BYTE *)(v0 + 56) != 1)
    return *(_QWORD *)(v0 + 48);
  v1 = OUTLINED_FUNCTION_9_88();
  if (v1 >= 0x40)
    result = 0;
  else
    result = 1 << v1;
  *(_QWORD *)(v0 + 48) = result;
  *(_BYTE *)(v0 + 56) = 0;
  return result;
}

uint64_t CellularAudioSampleNormalizer.bufferSizePowerOf2.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 48) = result;
  *(_BYTE *)(v1 + 56) = 0;
  return result;
}

void CellularAudioSampleNormalizer.bufferSizePowerOf2.modify(uint64_t a1)
{
  uint64_t *v1;

  OUTLINED_FUNCTION_8_3(a1);
  *v1 = CellularAudioSampleNormalizer.bufferSizePowerOf2.getter();
  OUTLINED_FUNCTION_0();
}

_QWORD *CellularAudioSampleNormalizer.bufferSizePowerOf2.modify(_QWORD *result)
{
  uint64_t v1;

  v1 = result[1];
  *(_QWORD *)(v1 + 48) = *result;
  *(_BYTE *)(v1 + 56) = 0;
  return result;
}

uint64_t CellularAudioSampleNormalizer.inputCount.getter()
{
  uint64_t v0;
  uint64_t result;

  if (*(_BYTE *)(v0 + 72) != 1)
    return *(_QWORD *)(v0 + 64);
  result = OUTLINED_FUNCTION_10_97() / 2;
  *(_QWORD *)(v0 + 64) = result;
  *(_BYTE *)(v0 + 72) = 0;
  return result;
}

uint64_t CellularAudioSampleNormalizer.inputCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 64) = result;
  *(_BYTE *)(v1 + 72) = 0;
  return result;
}

void CellularAudioSampleNormalizer.inputCount.modify(uint64_t a1)
{
  uint64_t *v1;

  OUTLINED_FUNCTION_8_3(a1);
  *v1 = CellularAudioSampleNormalizer.inputCount.getter();
  OUTLINED_FUNCTION_0();
}

_QWORD *CellularAudioSampleNormalizer.inputCount.modify(_QWORD *result)
{
  uint64_t v1;

  v1 = result[1];
  *(_QWORD *)(v1 + 64) = *result;
  *(_BYTE *)(v1 + 72) = 0;
  return result;
}

float CellularAudioSampleNormalizer.normalizationFactor.getter()
{
  uint64_t v0;
  float result;

  if ((*(_BYTE *)(v0 + 80) & 1) == 0)
    return *(float *)(v0 + 76);
  result = 2.0 / (float)OUTLINED_FUNCTION_5_111();
  *(float *)(v0 + 76) = result;
  *(_BYTE *)(v0 + 80) = 0;
  return result;
}

void CellularAudioSampleNormalizer.normalizationFactor.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 76) = a1;
  *(_BYTE *)(v1 + 80) = 0;
}

void CellularAudioSampleNormalizer.normalizationFactor.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(float *)(a1 + 8) = CellularAudioSampleNormalizer.normalizationFactor.getter();
  OUTLINED_FUNCTION_0();
}

uint64_t *CellularAudioSampleNormalizer.normalizationFactor.modify(uint64_t *result)
{
  uint64_t v1;

  v1 = *result;
  *(_DWORD *)(v1 + 76) = *((_DWORD *)result + 2);
  *(_BYTE *)(v1 + 80) = 0;
  return result;
}

uint64_t key path setter for CellularAudioSampleNormalizer.realBuffer : CellularAudioSampleNormalizer(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)a2 + 320);
  v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

void CellularAudioSampleNormalizer.realBuffer.getter()
{
  uint64_t v0;
  uint64_t v1;

  if (!*(_QWORD *)(v0 + 88))
  {
    v1 = OUTLINED_FUNCTION_5_111();
    *(_QWORD *)(v0 + 88) = OUTLINED_FUNCTION_12_92(v1);
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_2_1();
  }
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_18();
}

uint64_t CellularAudioSampleNormalizer.realBuffer.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 88) = a1;
  return OUTLINED_FUNCTION_2_4();
}

void CellularAudioSampleNormalizer.realBuffer.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_8_3(a1);
  CellularAudioSampleNormalizer.realBuffer.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_0();
}

uint64_t CellularAudioSampleNormalizer.realBuffer.modify(uint64_t *a1, char a2)
{
  return CellularAudioSampleNormalizer.realBuffer.modify(a1, a2, CellularAudioSampleNormalizer.realBuffer.setter);
}

uint64_t key path setter for CellularAudioSampleNormalizer.imagBuffer : CellularAudioSampleNormalizer(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)a2 + 344);
  v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

void CellularAudioSampleNormalizer.imagBuffer.getter()
{
  uint64_t v0;
  uint64_t v1;

  if (!*(_QWORD *)(v0 + 96))
  {
    v1 = OUTLINED_FUNCTION_5_111();
    *(_QWORD *)(v0 + 96) = OUTLINED_FUNCTION_12_92(v1);
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_2_1();
  }
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_18();
}

uint64_t CellularAudioSampleNormalizer.imagBuffer.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 96) = a1;
  return OUTLINED_FUNCTION_2_4();
}

void CellularAudioSampleNormalizer.imagBuffer.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_8_3(a1);
  CellularAudioSampleNormalizer.imagBuffer.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_0();
}

uint64_t CellularAudioSampleNormalizer.imagBuffer.modify(uint64_t *a1, char a2)
{
  return CellularAudioSampleNormalizer.realBuffer.modify(a1, a2, CellularAudioSampleNormalizer.imagBuffer.setter);
}

uint64_t key path setter for CellularAudioSampleNormalizer.transferBuffer : CellularAudioSampleNormalizer(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)a2 + 368);
  v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

void CellularAudioSampleNormalizer.transferBuffer.getter()
{
  uint64_t v0;
  uint64_t v1;

  if (!*(_QWORD *)(v0 + 104))
  {
    v1 = OUTLINED_FUNCTION_10_97();
    *(_QWORD *)(v0 + 104) = OUTLINED_FUNCTION_12_92(v1);
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_2_1();
  }
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_18();
}

uint64_t CellularAudioSampleNormalizer.transferBuffer.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 104) = a1;
  return OUTLINED_FUNCTION_2_4();
}

void CellularAudioSampleNormalizer.transferBuffer.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_8_3(a1);
  CellularAudioSampleNormalizer.transferBuffer.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_0();
}

uint64_t CellularAudioSampleNormalizer.transferBuffer.modify(uint64_t *a1, char a2)
{
  return CellularAudioSampleNormalizer.realBuffer.modify(a1, a2, CellularAudioSampleNormalizer.transferBuffer.setter);
}

uint64_t key path setter for CellularAudioSampleNormalizer.magnitudes : CellularAudioSampleNormalizer(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)a2 + 392);
  v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

void CellularAudioSampleNormalizer.magnitudes.getter()
{
  uint64_t v0;
  uint64_t v1;

  if (!*(_QWORD *)(v0 + 112))
  {
    v1 = OUTLINED_FUNCTION_5_111();
    *(_QWORD *)(v0 + 112) = OUTLINED_FUNCTION_12_92(v1);
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_2_1();
  }
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_18();
}

uint64_t CellularAudioSampleNormalizer.magnitudes.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 112) = a1;
  return OUTLINED_FUNCTION_2_4();
}

void CellularAudioSampleNormalizer.magnitudes.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_8_3(a1);
  CellularAudioSampleNormalizer.magnitudes.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_0();
}

uint64_t CellularAudioSampleNormalizer.magnitudes.modify(uint64_t *a1, char a2)
{
  return CellularAudioSampleNormalizer.realBuffer.modify(a1, a2, CellularAudioSampleNormalizer.magnitudes.setter);
}

uint64_t key path setter for CellularAudioSampleNormalizer.hannWindow : CellularAudioSampleNormalizer(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)a2 + 416);
  v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

void CellularAudioSampleNormalizer.hannWindow.getter()
{
  uint64_t v0;

  if (!*(_QWORD *)(v0 + 120))
  {
    *(_QWORD *)(v0 + 120) = closure #1 in CellularAudioSampleNormalizer.hannWindow.getter(v0);
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_2_1();
  }
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_18();
}

uint64_t closure #1 in CellularAudioSampleNormalizer.hannWindow.getter(uint64_t a1)
{
  uint64_t (*v1)(void);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  vDSP_Length v5;
  uint64_t v6;
  uint64_t result;

  v1 = *(uint64_t (**)(void))(*(_QWORD *)a1 + 240);
  v2 = ((uint64_t (*)(uint64_t))v1)(a1);
  v3 = specialized Array.init(repeating:count:)(v2, 0.0);
  v4 = v1();
  if (v4 < 0)
  {
    result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    v5 = v4;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      v3 = v6;
    }
    vDSP_hann_window((float *)(v3 + 32), v5, 2);
    return v3;
  }
  return result;
}

uint64_t CellularAudioSampleNormalizer.hannWindow.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 120) = a1;
  return OUTLINED_FUNCTION_2_4();
}

void CellularAudioSampleNormalizer.hannWindow.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_8_3(a1);
  CellularAudioSampleNormalizer.hannWindow.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_0();
}

uint64_t CellularAudioSampleNormalizer.hannWindow.modify(uint64_t *a1, char a2)
{
  return CellularAudioSampleNormalizer.realBuffer.modify(a1, a2, CellularAudioSampleNormalizer.hannWindow.setter);
}

uint64_t CellularAudioSampleNormalizer.realBuffer.modify(uint64_t *a1, char a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;

  if ((a2 & 1) == 0)
    return a3(*a1);
  v4 = swift_bridgeObjectRetain();
  a3(v4);
  return swift_bridgeObjectRelease();
}

FFTSetup CellularAudioSampleNormalizer.fftSetup.getter()
{
  uint64_t v0;
  vDSP_Length v1;
  FFTSetup result;

  if (*(_BYTE *)(v0 + 136) != 1)
    return *(FFTSetup *)(v0 + 128);
  v1 = OUTLINED_FUNCTION_9_88();
  result = vDSP_create_fftsetup(v1, 0);
  *(_QWORD *)(v0 + 128) = result;
  *(_BYTE *)(v0 + 136) = 0;
  return result;
}

uint64_t CellularAudioSampleNormalizer.fftSetup.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 128) = result;
  *(_BYTE *)(v1 + 136) = 0;
  return result;
}

void CellularAudioSampleNormalizer.fftSetup.modify(uint64_t a1)
{
  FFTSetup *v1;

  OUTLINED_FUNCTION_8_3(a1);
  *v1 = CellularAudioSampleNormalizer.fftSetup.getter();
  OUTLINED_FUNCTION_0();
}

_QWORD *CellularAudioSampleNormalizer.fftSetup.modify(_QWORD *result)
{
  uint64_t v1;

  v1 = result[1];
  *(_QWORD *)(v1 + 128) = *result;
  *(_BYTE *)(v1 + 136) = 0;
  return result;
}

uint64_t CellularAudioSampleNormalizer.tapType.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_2_0();
  return *(unsigned __int8 *)(v0 + 137);
}

uint64_t CellularAudioSampleNormalizer.tapType.setter(char a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = a1 & 1;
  result = OUTLINED_FUNCTION_2_0();
  *(_BYTE *)(v1 + 137) = v2;
  return result;
}

void CellularAudioSampleNormalizer.tapType.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

float CellularAudioSampleNormalizer.sampleRate.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_2_0();
  return *(float *)(v0 + 140);
}

void CellularAudioSampleNormalizer.sampleRate.setter(float a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_2_0();
  *(float *)(v1 + 140) = a1;
  OUTLINED_FUNCTION_14_89();
}

void CellularAudioSampleNormalizer.sampleRate.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

float CellularAudioSampleNormalizer.refreshFrequency.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_2_0();
  return *(float *)(v0 + 144);
}

void CellularAudioSampleNormalizer.refreshFrequency.setter(float a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_2_0();
  *(float *)(v1 + 144) = a1;
  OUTLINED_FUNCTION_14_89();
}

void CellularAudioSampleNormalizer.refreshFrequency.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t CellularAudioSampleNormalizer.__allocating_init(with:)(char a1)
{
  char v1;
  uint64_t v2;

  v1 = a1 & 1;
  v2 = swift_allocObject();
  CellularAudioSampleNormalizer.init(with:)(v1);
  return v2;
}

uint64_t CellularAudioSampleNormalizer.init(with:)(char a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = 0;
  *(_BYTE *)(v1 + 24) = 1;
  *(_QWORD *)(v1 + 32) = 0;
  *(_BYTE *)(v1 + 40) = 1;
  *(_QWORD *)(v1 + 48) = 0;
  *(_BYTE *)(v1 + 56) = 1;
  *(_QWORD *)(v1 + 64) = 0;
  *(_BYTE *)(v1 + 72) = 1;
  *(_DWORD *)(v1 + 76) = 0;
  *(_BYTE *)(v1 + 80) = 1;
  *(_OWORD *)(v1 + 88) = 0u;
  *(_OWORD *)(v1 + 104) = 0u;
  *(_OWORD *)(v1 + 120) = 0u;
  *(_BYTE *)(v1 + 136) = 1;
  *(_QWORD *)(v1 + 140) = 0x41A00000473B8000;
  *(_BYTE *)(v1 + 137) = a1 & 1;
  return v1;
}

uint64_t CellularAudioSampleNormalizer.deinit()
{
  uint64_t v0;
  OpaqueFFTSetup *v1;

  v1 = (OpaqueFFTSetup *)(*(uint64_t (**)(void))(*(_QWORD *)v0 + 432))();
  vDSP_destroy_fftsetup(v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t CellularAudioSampleNormalizer.__deallocating_deinit()
{
  CellularAudioSampleNormalizer.deinit();
  return swift_deallocClassInstance();
}

uint64_t CellularAudioSampleNormalizer.process(_:sampleCount:)(const float *a1, unsigned int a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  result = CellularAudioSampleNormalizer.fft(samples:count:)(a1, a2);
  if (!v2)
  {
    CellularAudioSampleNormalizer.bin(fftSamples:)(result);
    v5 = v4;
    swift_bridgeObjectRelease();
    return v5;
  }
  return result;
}

uint64_t CellularAudioSampleNormalizer.fft(samples:count:)(const float *a1, unsigned int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v6)(void);
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  float *v16;
  void (*v17)(_BYTE *, _QWORD);
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  char v21;
  float *v22;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(_QWORD *, _QWORD);
  float *v27[2];
  _BYTE v28[32];
  float *v29[2];
  _QWORD v30[4];
  uint64_t v31;

  v3 = v2;
  v31 = specialized Array.init(repeating:count:)(a2, 0.0);
  v6 = *(uint64_t (**)(void))(*(_QWORD *)v2 + 264);
  if (v6() >= a2)
  {
    v26 = (void (*)(_QWORD *, _QWORD))(*(uint64_t (**)(_QWORD *))(*(_QWORD *)v2 + 328))(v30);
    v13 = v12;
    v14 = *v12;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v13 = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      specialized _ArrayBuffer._consumeAndCreateNew()();
      v14 = v24;
      *v13 = v24;
    }
    v16 = *(float **)(v14 + 16);
    v29[0] = (float *)(v14 + 32);
    v29[1] = v16;
    v17 = (void (*)(_BYTE *, _QWORD))(*(uint64_t (**)(_BYTE *))(*(_QWORD *)v2 + 352))(v28);
    v19 = v18;
    v20 = *v18;
    v21 = swift_isUniquelyReferenced_nonNull_native();
    *v19 = v20;
    if ((v21 & 1) == 0)
    {
      specialized _ArrayBuffer._consumeAndCreateNew()();
      v20 = v25;
      *v19 = v25;
    }
    v22 = *(float **)(v20 + 16);
    v27[0] = (float *)(v20 + 32);
    v27[1] = v22;
    closure #1 in closure #1 in CellularAudioSampleNormalizer.fft(samples:count:)(v27, v29, a1, v3, a2, (uint64_t)&v31);
    *v19 = v20;
    v17(v28, 0);
    *v13 = v14;
    v26(v30, 0);
    return v31;
  }
  else
  {
    if (one-time initialization token for audioNormalizer != -1)
      swift_once();
    v7 = type metadata accessor for Logger();
    __swift_project_value_buffer(v7, (uint64_t)&static Logger.audioNormalizer);
    swift_retain();
    v8 = Logger.logObject.getter();
    v9 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = swift_slowAlloc();
      *(_DWORD *)v10 = 67109376;
      v11 = UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v10 + 8) = 2048;
      v30[0] = ((uint64_t (*)(uint64_t))v6)(v11);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      _os_log_impl(&dword_1BD004000, v8, v9, "Invalid sample. count (%u) > bufferSize (%ld)", (uint8_t *)v10, 0x12u);
      MEMORY[0x1C3B751B8](v10, -1, -1);

    }
    else
    {

      swift_release();
    }
    lazy protocol witness table accessor for type CellularAudioSampleNormalizer.Errors and conformance CellularAudioSampleNormalizer.Errors();
    swift_allocError();
    swift_willThrow();
    return swift_bridgeObjectRelease();
  }
}

void CellularAudioSampleNormalizer.bin(fftSamples:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  float (*v5)(void);
  float v6;
  float v7;
  float v8;
  uint64_t v9;
  uint64_t v10;
  float v11;
  unint64_t v12;
  float v13;
  unint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v23;
  uint64_t (*v24)(void);
  char v25;
  unint64_t v26;
  unint64_t v27;
  float v28;
  float v29;
  float v30;
  float v31;
  float v32;
  float v33;
  uint64_t v34;
  uint64_t v35;

  v2 = v1;
  v4 = static Array._allocateBufferUninitialized(minimumCapacity:)();
  *(_OWORD *)(v4 + 32) = 0u;
  *(_QWORD *)(v4 + 16) = 14;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_OWORD *)(v4 + 64) = 0u;
  *(_QWORD *)(v4 + 80) = 0;
  v5 = *(float (**)(void))(*(_QWORD *)v1 + 480);
  v6 = v5();
  v34 = *(_QWORD *)(a1 + 16);
  v7 = (float)(100.0 / v6) * (float)v34;
  if ((~LODWORD(v7) & 0x7F800000) == 0)
  {
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  if (v7 <= -9.2234e18)
  {
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  if (v7 >= 9.2234e18)
  {
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  v8 = (float)(8000.0 / v5()) * (float)v34;
  if ((~LODWORD(v8) & 0x7F800000) == 0)
  {
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
  if (v8 <= -9.2234e18)
  {
LABEL_65:
    __break(1u);
    goto LABEL_66;
  }
  if (v8 >= 9.2234e18)
  {
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
  v9 = (uint64_t)v7;
  v10 = (uint64_t)v8;
  if ((uint64_t)v8 < (uint64_t)v7)
  {
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  if (!__OFSUB__((uint64_t)v8, (uint64_t)v7))
  {
    v11 = (float)((uint64_t)v8 - (uint64_t)v7);
    v12 = v9;
    while (1)
    {
      if (__OFSUB__(v12, v9))
      {
        __break(1u);
LABEL_51:
        __break(1u);
        goto LABEL_52;
      }
      v13 = (float)((float)(uint64_t)(v12 - v9) * 14.0) / v11;
      if ((LODWORD(v13) & 0x7F800000) != 0x7F800000 || (LODWORD(v13) & 0x7FFFFF) == 0)
      {
        if ((LODWORD(v13) & 0x7F800000) == 0x7F800000)
          goto LABEL_53;
        if (v13 <= -9.2234e18)
          goto LABEL_54;
        if (v13 >= 9.2234e18)
          goto LABEL_55;
        v15 = (uint64_t)v13;
        if ((uint64_t)v13 <= 13)
        {
          if (v12 >= v34)
            goto LABEL_58;
          if ((v15 & 0x8000000000000000) != 0)
            goto LABEL_59;
          if (*(_QWORD *)(v4 + 16) <= v15)
            goto LABEL_60;
          *(float *)(v4 + 32 + 4 * v15) = *(float *)(a1 + 32 + 4 * v12) + *(float *)(v4 + 32 + 4 * v15);
        }
      }
      else
      {
        (*(void (**)(void))(*(_QWORD *)v2 + 456))();
        if (one-time initialization token for audioNormalizer != -1)
          swift_once();
        v16 = type metadata accessor for Logger();
        __swift_project_value_buffer(v16, (uint64_t)&static Logger.audioNormalizer);
        v17 = Logger.logObject.getter();
        v18 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v17, v18))
        {
          v19 = swift_slowAlloc();
          v35 = swift_slowAlloc();
          *(_DWORD *)v19 = 136315138;
          v20 = String.init<A>(reflecting:)();
          *(_QWORD *)(v19 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v20, v21, &v35);
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1BD004000, v17, v18, "current band for tapType %s is NaN", (uint8_t *)v19, 0xCu);
          swift_arrayDestroy();
          OUTLINED_FUNCTION_60();
        }

      }
      if (v10 == v12)
        break;
      if (__OFADD__(v12++, 1))
        goto LABEL_51;
    }
    v23 = 0;
    v24 = *(uint64_t (**)(void))(*(_QWORD *)v2 + 456);
    while (1)
    {
      v25 = v24();
      v26 = *(_QWORD *)(v4 + 16);
      if ((v25 & 1) != 0)
      {
        if (v23 >= v26)
          goto LABEL_57;
        v27 = v4 + 4 * v23;
        v28 = *(float *)(v27 + 32) * 3.0;
      }
      else
      {
        if (v23 >= v26)
          goto LABEL_56;
        v27 = v4 + 4 * v23;
        v28 = *(float *)(v27 + 32) * 6.0;
      }
      *(float *)(v27 + 32) = v28;
      if (v23 >= v26)
        break;
      v29 = powf(v28, 0.66667);
      if (v29 <= 1.0)
        v30 = v29;
      else
        v30 = 1.0;
      v31 = (float)(uint64_t)v23;
      if (v23 > 4)
        v32 = (float)((float)(v31 + -5.0) * -0.08) + 1.0;
      else
        v32 = (float)(powf(v31 * 0.4, 0.33333) * 0.5) + 0.5;
      v33 = v30 * v32;
      if (v33 > 1.0)
        v33 = 1.0;
      *(float *)(v4 + 4 * v23++ + 32) = v33;
      if (v23 == 14)
        return;
    }
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
LABEL_68:
  __break(1u);
}

uint64_t protocol witness for AudioSampleNormalizer.sampleRate.getter in conformance CellularAudioSampleNormalizer()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 480))();
}

uint64_t protocol witness for AudioSampleNormalizer.refreshFrequency.getter in conformance CellularAudioSampleNormalizer()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 504))();
}

uint64_t protocol witness for AudioSampleNormalizer.tapType.getter in conformance CellularAudioSampleNormalizer()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 456))() & 1;
}

uint64_t protocol witness for AudioSampleNormalizer.process(_:sampleCount:) in conformance CellularAudioSampleNormalizer()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 536))();
}

uint64_t protocol witness for AudioSampleNormalizer.init(with:) in conformance CellularAudioSampleNormalizer@<X0>(char a1@<W0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(_QWORD))(v2 + 528))(a1 & 1);
  *a2 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance CellularAudioSampleNormalizer(uint64_t a1)
{
  uint64_t (**v2)(uint64_t, uint64_t);

  v2 = (uint64_t (**)(uint64_t, uint64_t))MEMORY[0x1C3B750C8](&protocol conformance descriptor for CellularAudioSampleNormalizer, a1);
  return AudioSampleNormalizer.description.getter(a1, v2);
}

uint64_t closure #1 in closure #1 in CellularAudioSampleNormalizer.fft(samples:count:)(float **a1, float **a2, const float *a3, uint64_t a4, unsigned int a5, uint64_t a6)
{
  float *v6;
  const float *v11;
  uint64_t (*v12)(_QWORD *);
  void (*v13)(_QWORD *, _QWORD);
  uint64_t *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t (*v17)(_QWORD *, _QWORD);
  const DSPComplex **v18;
  const DSPComplex **v19;
  const DSPComplex *v20;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  uint64_t v23;
  OpaqueFFTSetup *v24;
  vDSP_Length v25;
  void (*v26)(_QWORD *, _QWORD);
  uint64_t *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  const float *v35;
  const DSPComplex *v37;
  DSPSplitComplex __Z;
  _QWORD __B[5];

  __B[4] = *MEMORY[0x1E0C80C00];
  if (!*a2)
  {
    __break(1u);
    goto LABEL_8;
  }
  v6 = *a1;
  if (!*a1)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __Z.realp = *a2;
  __Z.imagp = v6;
  v11 = (const float *)((*(uint64_t (**)(void))(*(_QWORD *)a4 + 408))() + 32);
  v12 = *(uint64_t (**)(_QWORD *))(*(_QWORD *)a4 + 376);
  v13 = (void (*)(_QWORD *, _QWORD))v12(__B);
  v15 = v14;
  specialized Array.reserveCapacity(_:)(0);
  v16 = *v15;
  swift_bridgeObjectRetain();
  vDSP_vmul(a3, 1, v11, 1, (float *)(v16 + 32), 1, a5);
  v13(__B, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v17 = (uint64_t (*)(_QWORD *, _QWORD))v12(__B);
  v19 = v18;
  v20 = *v18;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v19 = v20;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    specialized _ArrayBuffer._consumeAndCreateNew()();
    v20 = v37;
    *v19 = v37;
  }
  (*(void (**)(void))(*(_QWORD *)a4 + 360))();
  swift_bridgeObjectRelease();
  vDSP_ctoz(v20 + 4, 2, &__Z, 1, a5);
  *v19 = v20;
  v22 = v17(__B, 0);
  v23 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a4 + 432))(v22);
  if (!v23)
LABEL_9:
    __break(1u);
  v24 = (OpaqueFFTSetup *)v23;
  v25 = (*(uint64_t (**)(void))(*(_QWORD *)a4 + 216))();
  vDSP_fft_zrip(v24, &__Z, 1, v25, 1);
  v26 = (void (*)(_QWORD *, _QWORD))(*(uint64_t (**)(_QWORD *))(*(_QWORD *)a4 + 400))(__B);
  v28 = v27;
  specialized Array.reserveCapacity(_:)(0);
  v29 = *v28;
  swift_bridgeObjectRetain();
  vDSP_zvmags(&__Z, 1, (float *)(v29 + 32), 1, a5);
  v26(__B, 0);
  v30 = swift_bridgeObjectRelease();
  v31 = *(uint64_t (**)(uint64_t))(*(_QWORD *)a4 + 384);
  __B[0] = v31(v30);
  MEMORY[0x1E0C80A78](*(_QWORD *)(__B[0] + 16));
  v33 = specialized Array.init(_unsafeUninitializedCapacity:initializingWith:)(v32, (uint64_t (*)(_QWORD *, uint64_t *))partial apply for specialized closure #1 in static vForce.sqrt<A>(_:));
  swift_bridgeObjectRelease();
  v34 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a4 + 392))(v33);
  v35 = (const float *)(v31(v34) + 32);
  LODWORD(__B[0]) = (*(float (**)(void))(*(_QWORD *)a4 + 288))();
  specialized Array.reserveCapacity(_:)(0);
  vDSP_vsmul(v35, 1, (const float *)__B, (float *)(*(_QWORD *)a6 + 32), 1, a5);
  return swift_bridgeObjectRelease();
}

unint64_t lazy protocol witness table accessor for type CellularAudioSampleNormalizer.Errors and conformance CellularAudioSampleNormalizer.Errors()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type CellularAudioSampleNormalizer.Errors and conformance CellularAudioSampleNormalizer.Errors;
  if (!lazy protocol witness table cache variable for type CellularAudioSampleNormalizer.Errors and conformance CellularAudioSampleNormalizer.Errors)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for CellularAudioSampleNormalizer.Errors, &type metadata for CellularAudioSampleNormalizer.Errors);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CellularAudioSampleNormalizer.Errors and conformance CellularAudioSampleNormalizer.Errors);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type CellularAudioSampleNormalizer.Errors and conformance CellularAudioSampleNormalizer.Errors;
  if (!lazy protocol witness table cache variable for type CellularAudioSampleNormalizer.Errors and conformance CellularAudioSampleNormalizer.Errors)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for CellularAudioSampleNormalizer.Errors, &type metadata for CellularAudioSampleNormalizer.Errors);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CellularAudioSampleNormalizer.Errors and conformance CellularAudioSampleNormalizer.Errors);
  }
  return result;
}

unint64_t instantiation function for generic protocol witness table for CellularAudioSampleNormalizer(uint64_t a1)
{
  unint64_t result;

  result = lazy protocol witness table accessor for type CellularAudioSampleNormalizer and conformance CellularAudioSampleNormalizer();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t lazy protocol witness table accessor for type CellularAudioSampleNormalizer and conformance CellularAudioSampleNormalizer()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type CellularAudioSampleNormalizer and conformance CellularAudioSampleNormalizer;
  if (!lazy protocol witness table cache variable for type CellularAudioSampleNormalizer and conformance CellularAudioSampleNormalizer)
  {
    v1 = type metadata accessor for CellularAudioSampleNormalizer();
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for CellularAudioSampleNormalizer, v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CellularAudioSampleNormalizer and conformance CellularAudioSampleNormalizer);
  }
  return result;
}

uint64_t type metadata accessor for CellularAudioSampleNormalizer()
{
  return objc_opt_self();
}

void sub_1BD3C6310()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))(v1 + 192))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD3C6334()
{
  uint64_t v0;

  OUTLINED_FUNCTION_8_22();
  (*(void (**)(void))(v0 + 200))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD3C6358()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))(v1 + 216))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD3C637C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_8_22();
  (*(void (**)(void))(v0 + 224))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD3C63A0()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))(v1 + 240))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD3C63C4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_8_22();
  (*(void (**)(void))(v0 + 248))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD3C63E8()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))(v1 + 264))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD3C640C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_8_22();
  (*(void (**)(void))(v0 + 272))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD3C6430()
{
  float *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(float (**)(void))(v1 + 288))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD3C6454()
{
  uint64_t v0;

  OUTLINED_FUNCTION_8_22();
  (*(void (**)(void))(v0 + 296))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD3C6478()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))(v1 + 312))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD3C64A0()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))(v1 + 336))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD3C64C8()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))(v1 + 360))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD3C64F0()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))(v1 + 384))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD3C6518()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))(v1 + 408))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD3C6540()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))(v1 + 432))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD3C6564()
{
  uint64_t v0;

  OUTLINED_FUNCTION_8_22();
  (*(void (**)(void))(v0 + 440))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD3C6588()
{
  _BYTE *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))(v1 + 456))() & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD3C65B0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_8_22();
  (*(void (**)(void))(v0 + 464))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD3C65D4()
{
  float *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(float (**)(void))(v1 + 480))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD3C65F8()
{
  uint64_t v0;

  OUTLINED_FUNCTION_8_22();
  (*(void (**)(void))(v0 + 488))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD3C661C()
{
  float *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(float (**)(void))(v1 + 504))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD3C6640()
{
  uint64_t v0;

  OUTLINED_FUNCTION_8_22();
  (*(void (**)(void))(v0 + 512))();
  OUTLINED_FUNCTION_0();
}

uint64_t method lookup function for CellularAudioSampleNormalizer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.frameCount.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.frameCount.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.frameCount.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.log2FrameCount.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.log2FrameCount.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.log2FrameCount.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.bufferSizePowerOf2.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.bufferSizePowerOf2.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.bufferSizePowerOf2.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.inputCount.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.inputCount.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.inputCount.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.normalizationFactor.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.normalizationFactor.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.normalizationFactor.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.realBuffer.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 312))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.realBuffer.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 320))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.realBuffer.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 328))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.imagBuffer.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 336))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.imagBuffer.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 344))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.imagBuffer.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 352))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.transferBuffer.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 360))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.transferBuffer.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 368))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.transferBuffer.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 376))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.magnitudes.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 384))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.magnitudes.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 392))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.magnitudes.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 400))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.hannWindow.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 408))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.hannWindow.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 416))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.hannWindow.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 424))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.fftSetup.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 432))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.fftSetup.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 440))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.fftSetup.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 448))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.tapType.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 456))() & 1;
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.tapType.setter(char a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)v1 + 464))(a1 & 1);
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.tapType.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 472))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.sampleRate.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 480))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.sampleRate.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 488))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.sampleRate.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 496))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.refreshFrequency.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 504))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.refreshFrequency.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 512))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.refreshFrequency.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 520))();
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.__allocating_init(with:)(char a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 528))(a1 & 1);
}

uint64_t dispatch thunk of CellularAudioSampleNormalizer.process(_:sampleCount:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 536))();
}

ValueMetadata *type metadata accessor for CellularAudioSampleNormalizer.Constants()
{
  return &type metadata for CellularAudioSampleNormalizer.Constants;
}

uint64_t storeEnumTagSinglePayload for CellularAudioSampleNormalizer.Errors(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BD3C6900 + 4 * byte_1BD65CE20[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BD3C6920 + 4 * byte_1BD65CE25[v4]))();
}

_BYTE *sub_1BD3C6900(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BD3C6920(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BD3C6928(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BD3C6930(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BD3C6938(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BD3C6940(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for CellularAudioSampleNormalizer.Errors()
{
  return &type metadata for CellularAudioSampleNormalizer.Errors;
}

void specialized closure #1 in static vForce.sqrt<A>(_:)(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  specialized static vForce.sqrt<A, B>(_:result:)(a3, a1);
  *a2 = *(_QWORD *)(a3 + 16);
}

uint64_t specialized Array.init(_unsafeUninitializedCapacity:initializingWith:)(uint64_t result, uint64_t (*a2)(_QWORD *, uint64_t *))
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[2];
  uint64_t v8;

  if (result < 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  v4 = result;
  if (result)
  {
    v5 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(_QWORD *)(v5 + 16) = v4;
  }
  else
  {
    v5 = MEMORY[0x1E0DEE9D8];
  }
  v6 = v5 + 32;
  v7[1] = v4;
  v8 = 0;
  v7[0] = v5 + 32;
  result = a2(v7, &v8);
  if (v2)
  {
    if (v8 <= v4)
    {
      if (!v7[0])
      {
LABEL_20:
        __break(1u);
        goto LABEL_21;
      }
      if (v6 == v7[0])
      {
        *(_QWORD *)(v5 + 16) = v8;
        swift_bridgeObjectRelease();
        return v5;
      }
      goto LABEL_17;
    }
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v8 > v4)
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v7[0])
  {
    if (v6 == v7[0])
    {
      *(_QWORD *)(v5 + 16) = v8;
      return v5;
    }
    goto LABEL_19;
  }
LABEL_21:
  __break(1u);
  return result;
}

void specialized static vForce.sqrt<A, B>(_:result:)(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  int v3;
  uint64_t v4;

  v4 = *MEMORY[0x1E0C80C00];
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 8))
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v2 >> 31)
  {
LABEL_6:
    __break(1u);
LABEL_7:
    __break(1u);
  }
  v3 = *(_QWORD *)(a1 + 16);
  if (!*(_QWORD *)a2)
    goto LABEL_7;
  vvsqrtf(*(float **)a2, (const float *)(a1 + 32), &v3);
}

void specialized closure #1 in static vForce.sqrt<A>(_:)(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  specialized closure #1 in static vForce.sqrt<A>(_:)(a1, a2, *a3);
}

void partial apply for specialized closure #1 in static vForce.sqrt<A>(_:)(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  specialized closure #1 in static vForce.sqrt<A>(_:)(a1, a2, *(uint64_t **)(v2 + 16));
}

double ShutterModel.maxTime.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

void key path getter for ShutterModel.targetPercentComplete : ShutterModel(uint64_t a1@<X0>, double *a2@<X8>)
{
  *a2 = (*(double (**)(void))(**(_QWORD **)a1 + 176))();
}

uint64_t key path setter for ShutterModel.targetPercentComplete : ShutterModel(double *a1, uint64_t a2)
{
  return (*(uint64_t (**)(double))(**(_QWORD **)a2 + 184))(*a1);
}

double ShutterModel.targetPercentComplete.getter()
{
  return ShutterModel.targetPercentComplete.getter();
}

{
  double v1;

  swift_getKeyPath();
  OUTLINED_FUNCTION_23_64();
  OUTLINED_FUNCTION_488();
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_11_0();
  return v1;
}

void sub_1BD3C6BC4()
{
  double *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(double (**)(void))(v1 + 176))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD3C6BE8()
{
  uint64_t v0;

  OUTLINED_FUNCTION_8_22();
  (*(void (**)(void))(v0 + 184))();
  OUTLINED_FUNCTION_0();
}

uint64_t ShutterModel.targetPercentComplete.setter()
{
  return ShutterModel.targetPercentComplete.setter();
}

{
  swift_getKeyPath();
  OUTLINED_FUNCTION_23_64();
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  return static Published.subscript.setter();
}

void ShutterModel.targetPercentComplete.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t KeyPath;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_80((uint64_t)v1);
  KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_72_0(KeyPath);
  v3 = swift_getKeyPath();
  *(_QWORD *)(v0 + 48) = OUTLINED_FUNCTION_19_4(v3);
  OUTLINED_FUNCTION_18();
}

uint64_t key path setter for ShutterModel.$targetPercentComplete : ShutterModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CGFloat>.Publisher);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v8 + 16))(v7, a1, v5);
  return (*(uint64_t (**)(char *))(**(_QWORD **)a2 + 208))(v7);
}

uint64_t ShutterModel.$targetPercentComplete.getter()
{
  return ShareCardViewModel.$shouldShowEndActivity.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit12ShutterModel__targetPercentComplete, &demangling cache variable for type metadata for Published<CGFloat>);
}

uint64_t ShutterModel.$targetPercentComplete.setter(uint64_t a1)
{
  return ShutterModel.$targetPercentComplete.setter(a1, &demangling cache variable for type metadata for Published<CGFloat>.Publisher, (uint64_t)&OBJC_IVAR____TtC15ConversationKit12ShutterModel__targetPercentComplete, &demangling cache variable for type metadata for Published<CGFloat>);
}

void ShutterModel.$targetPercentComplete.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;

  v1 = OUTLINED_FUNCTION_46_17();
  OUTLINED_FUNCTION_35_11((uint64_t)v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CGFloat>.Publisher);
  *(_QWORD *)(v0 + 48) = OUTLINED_FUNCTION_15_3(v2);
  v3 = OUTLINED_FUNCTION_21_50();
  OUTLINED_FUNCTION_70_13((uint64_t)v3);
  OUTLINED_FUNCTION_7_17();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CGFloat>);
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_18();
}

void ShutterModel.$targetPercentComplete.modify(uint64_t a1, char a2)
{
  LinkDetailHeaderView.$invitedMemberHandles.modify(a1, a2, (void (*)(void *))ShutterModel.$targetPercentComplete.setter);
}

uint64_t key path setter for ShutterModel.isActive : ShutterModel(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 232))(*a1);
}

void ShutterModel.isActive.getter()
{
  ShutterModel.isActive.getter();
}

{
  swift_getKeyPath();
  OUTLINED_FUNCTION_23_64();
  OUTLINED_FUNCTION_488();
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_45_0();
}

void sub_1BD3C6DE0()
{
  _BYTE *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))(v1 + 224))() & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD3C6E08()
{
  uint64_t v0;

  OUTLINED_FUNCTION_8_22();
  (*(void (**)(void))(v0 + 232))();
  OUTLINED_FUNCTION_0();
}

void ShutterModel.isActive.setter()
{
  ShareCardViewModel.shouldShowEndActivity.setter();
}

void ShutterModel.isActive.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t KeyPath;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_80((uint64_t)v1);
  KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_72_0(KeyPath);
  v3 = swift_getKeyPath();
  *(_QWORD *)(v0 + 48) = OUTLINED_FUNCTION_19_4(v3);
  OUTLINED_FUNCTION_18();
}

uint64_t key path setter for ShutterModel.$isActive : ShutterModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v8 + 16))(v7, a1, v5);
  return (*(uint64_t (**)(char *))(**(_QWORD **)a2 + 256))(v7);
}

uint64_t ShutterModel.$isActive.getter()
{
  return ShareCardViewModel.$shouldShowEndActivity.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit12ShutterModel__isActive, (uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
}

uint64_t ShutterModel.$isActive.setter(uint64_t a1)
{
  return ShutterModel.$targetPercentComplete.setter(a1, &demangling cache variable for type metadata for Published<Bool>.Publisher, (uint64_t)&OBJC_IVAR____TtC15ConversationKit12ShutterModel__isActive, (uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
}

void ShutterModel.$isActive.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;

  v1 = OUTLINED_FUNCTION_46_17();
  OUTLINED_FUNCTION_35_11((uint64_t)v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  *(_QWORD *)(v0 + 48) = OUTLINED_FUNCTION_15_3(v2);
  v3 = OUTLINED_FUNCTION_21_50();
  OUTLINED_FUNCTION_70_13((uint64_t)v3);
  OUTLINED_FUNCTION_7_17();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_18();
}

void ShutterModel.$isActive.modify(uint64_t a1, char a2)
{
  LinkDetailHeaderView.$invitedMemberHandles.modify(a1, a2, (void (*)(void *))ShutterModel.$isActive.setter);
}

uint64_t key path getter for ShutterModel.mode : ShutterModel@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 272))();
  *a2 = result;
  return result;
}

uint64_t key path setter for ShutterModel.mode : ShutterModel(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 280))(*a1);
}

void ShutterModel.mode.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_45_0();
}

void sub_1BD3C7074()
{
  _BYTE *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))(v1 + 272))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD3C7098()
{
  uint64_t v0;
  unsigned __int8 *v1;

  OUTLINED_FUNCTION_8_22();
  (*(void (**)(_QWORD))(v0 + 280))(*v1);
  OUTLINED_FUNCTION_0();
}

void ShutterModel.mode.setter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  static Published.subscript.setter();
  OUTLINED_FUNCTION_45_0();
}

void ShutterModel.mode.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t KeyPath;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_80((uint64_t)v1);
  KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_72_0(KeyPath);
  v3 = swift_getKeyPath();
  *(_QWORD *)(v0 + 48) = OUTLINED_FUNCTION_19_4(v3);
  OUTLINED_FUNCTION_18();
}

uint64_t key path setter for ShutterModel.$mode : ShutterModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<ShutterButtonStyle.InnerStyle>.Publisher);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v8 + 16))(v7, a1, v5);
  return (*(uint64_t (**)(char *))(**(_QWORD **)a2 + 304))(v7);
}

uint64_t ShutterModel.$mode.getter()
{
  return ShareCardViewModel.$shouldShowEndActivity.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit12ShutterModel__mode, &demangling cache variable for type metadata for Published<ShutterButtonStyle.InnerStyle>);
}

uint64_t ShutterModel.$mode.setter(uint64_t a1)
{
  return ShutterModel.$targetPercentComplete.setter(a1, &demangling cache variable for type metadata for Published<ShutterButtonStyle.InnerStyle>.Publisher, (uint64_t)&OBJC_IVAR____TtC15ConversationKit12ShutterModel__mode, &demangling cache variable for type metadata for Published<ShutterButtonStyle.InnerStyle>);
}

void ShutterModel.$mode.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;

  v1 = OUTLINED_FUNCTION_46_17();
  OUTLINED_FUNCTION_35_11((uint64_t)v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<ShutterButtonStyle.InnerStyle>.Publisher);
  *(_QWORD *)(v0 + 48) = OUTLINED_FUNCTION_15_3(v2);
  v3 = OUTLINED_FUNCTION_21_50();
  OUTLINED_FUNCTION_70_13((uint64_t)v3);
  OUTLINED_FUNCTION_7_17();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<ShutterButtonStyle.InnerStyle>);
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_18();
}

void ShutterModel.$mode.modify(uint64_t a1, char a2)
{
  LinkDetailHeaderView.$invitedMemberHandles.modify(a1, a2, (void (*)(void *))ShutterModel.$mode.setter);
}

void key path getter for ShutterModel.diameter : ShutterModel(uint64_t a1@<X0>, double *a2@<X8>)
{
  *a2 = (*(double (**)(void))(**(_QWORD **)a1 + 320))();
}

uint64_t key path setter for ShutterModel.diameter : ShutterModel(double *a1, uint64_t a2)
{
  return (*(uint64_t (**)(double))(**(_QWORD **)a2 + 328))(*a1);
}

double ShutterModel.diameter.getter()
{
  return ShutterModel.targetPercentComplete.getter();
}

void sub_1BD3C7304()
{
  double *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(double (**)(void))(v1 + 320))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD3C7328()
{
  uint64_t v0;

  OUTLINED_FUNCTION_8_22();
  (*(void (**)(void))(v0 + 328))();
  OUTLINED_FUNCTION_0();
}

uint64_t ShutterModel.diameter.setter()
{
  return ShutterModel.targetPercentComplete.setter();
}

void ShutterModel.diameter.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t KeyPath;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_80((uint64_t)v1);
  KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_72_0(KeyPath);
  v3 = swift_getKeyPath();
  *(_QWORD *)(v0 + 48) = OUTLINED_FUNCTION_19_4(v3);
  OUTLINED_FUNCTION_18();
}

uint64_t key path setter for ShutterModel.$diameter : ShutterModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CGFloat>.Publisher);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v8 + 16))(v7, a1, v5);
  return (*(uint64_t (**)(char *))(**(_QWORD **)a2 + 352))(v7);
}

uint64_t ShutterModel.$diameter.getter()
{
  return ShareCardViewModel.$shouldShowEndActivity.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit12ShutterModel__diameter, &demangling cache variable for type metadata for Published<CGFloat>);
}

uint64_t ShutterModel.$diameter.setter(uint64_t a1)
{
  return ShutterModel.$targetPercentComplete.setter(a1, &demangling cache variable for type metadata for Published<CGFloat>.Publisher, (uint64_t)&OBJC_IVAR____TtC15ConversationKit12ShutterModel__diameter, &demangling cache variable for type metadata for Published<CGFloat>);
}

void ShutterModel.$diameter.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;

  v1 = OUTLINED_FUNCTION_46_17();
  OUTLINED_FUNCTION_35_11((uint64_t)v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CGFloat>.Publisher);
  *(_QWORD *)(v0 + 48) = OUTLINED_FUNCTION_15_3(v2);
  v3 = OUTLINED_FUNCTION_21_50();
  OUTLINED_FUNCTION_70_13((uint64_t)v3);
  OUTLINED_FUNCTION_7_17();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CGFloat>);
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_18();
}

void ShutterModel.$diameter.modify(uint64_t a1, char a2)
{
  LinkDetailHeaderView.$invitedMemberHandles.modify(a1, a2, (void (*)(void *))ShutterModel.$diameter.setter);
}

void key path getter for ShutterModel.lineThickness : ShutterModel(uint64_t a1@<X0>, double *a2@<X8>)
{
  *a2 = (*(double (**)(void))(**(_QWORD **)a1 + 368))();
}

uint64_t key path setter for ShutterModel.lineThickness : ShutterModel(double *a1, uint64_t a2)
{
  return (*(uint64_t (**)(double))(**(_QWORD **)a2 + 376))(*a1);
}

double ShutterModel.lineThickness.getter()
{
  return ShutterModel.targetPercentComplete.getter();
}

void sub_1BD3C754C()
{
  double *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(double (**)(void))(v1 + 368))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD3C7570()
{
  uint64_t v0;

  OUTLINED_FUNCTION_8_22();
  (*(void (**)(void))(v0 + 376))();
  OUTLINED_FUNCTION_0();
}

uint64_t ShutterModel.lineThickness.setter()
{
  return ShutterModel.targetPercentComplete.setter();
}

void ShutterModel.lineThickness.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t KeyPath;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_80((uint64_t)v1);
  KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_72_0(KeyPath);
  v3 = swift_getKeyPath();
  *(_QWORD *)(v0 + 48) = OUTLINED_FUNCTION_19_4(v3);
  OUTLINED_FUNCTION_18();
}

uint64_t key path setter for ShutterModel.$lineThickness : ShutterModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CGFloat>.Publisher);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v8 + 16))(v7, a1, v5);
  return (*(uint64_t (**)(char *))(**(_QWORD **)a2 + 400))(v7);
}

uint64_t ShutterModel.$lineThickness.getter()
{
  return ShareCardViewModel.$shouldShowEndActivity.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit12ShutterModel__lineThickness, &demangling cache variable for type metadata for Published<CGFloat>);
}

uint64_t ShutterModel.$lineThickness.setter(uint64_t a1)
{
  return ShutterModel.$targetPercentComplete.setter(a1, &demangling cache variable for type metadata for Published<CGFloat>.Publisher, (uint64_t)&OBJC_IVAR____TtC15ConversationKit12ShutterModel__lineThickness, &demangling cache variable for type metadata for Published<CGFloat>);
}

void ShutterModel.$lineThickness.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;

  v1 = OUTLINED_FUNCTION_46_17();
  OUTLINED_FUNCTION_35_11((uint64_t)v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CGFloat>.Publisher);
  *(_QWORD *)(v0 + 48) = OUTLINED_FUNCTION_15_3(v2);
  v3 = OUTLINED_FUNCTION_21_50();
  OUTLINED_FUNCTION_70_13((uint64_t)v3);
  OUTLINED_FUNCTION_7_17();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CGFloat>);
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_18();
}

void ShutterModel.$lineThickness.modify(uint64_t a1, char a2)
{
  LinkDetailHeaderView.$invitedMemberHandles.modify(a1, a2, (void (*)(void *))ShutterModel.$lineThickness.setter);
}

void key path getter for ShutterModel.gapWidth : ShutterModel(uint64_t a1@<X0>, double *a2@<X8>)
{
  *a2 = (*(double (**)(void))(**(_QWORD **)a1 + 416))();
}

uint64_t key path setter for ShutterModel.gapWidth : ShutterModel(double *a1, uint64_t a2)
{
  return (*(uint64_t (**)(double))(**(_QWORD **)a2 + 424))(*a1);
}

double ShutterModel.gapWidth.getter()
{
  return ShutterModel.targetPercentComplete.getter();
}

void sub_1BD3C7794()
{
  double *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(double (**)(void))(v1 + 416))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD3C77B8()
{
  uint64_t v0;

  OUTLINED_FUNCTION_8_22();
  (*(void (**)(void))(v0 + 424))();
  OUTLINED_FUNCTION_0();
}

uint64_t ShutterModel.gapWidth.setter()
{
  return ShutterModel.targetPercentComplete.setter();
}

void ShutterModel.gapWidth.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t KeyPath;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_80((uint64_t)v1);
  KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_72_0(KeyPath);
  v3 = swift_getKeyPath();
  *(_QWORD *)(v0 + 48) = OUTLINED_FUNCTION_19_4(v3);
  OUTLINED_FUNCTION_18();
}

uint64_t key path setter for ShutterModel.$gapWidth : ShutterModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CGFloat>.Publisher);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v8 + 16))(v7, a1, v5);
  return (*(uint64_t (**)(char *))(**(_QWORD **)a2 + 448))(v7);
}

uint64_t ShutterModel.$gapWidth.getter()
{
  return ShareCardViewModel.$shouldShowEndActivity.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit12ShutterModel__gapWidth, &demangling cache variable for type metadata for Published<CGFloat>);
}

uint64_t ShutterModel.$gapWidth.setter(uint64_t a1)
{
  return ShutterModel.$targetPercentComplete.setter(a1, &demangling cache variable for type metadata for Published<CGFloat>.Publisher, (uint64_t)&OBJC_IVAR____TtC15ConversationKit12ShutterModel__gapWidth, &demangling cache variable for type metadata for Published<CGFloat>);
}

void ShutterModel.$gapWidth.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;

  v1 = OUTLINED_FUNCTION_46_17();
  OUTLINED_FUNCTION_35_11((uint64_t)v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CGFloat>.Publisher);
  *(_QWORD *)(v0 + 48) = OUTLINED_FUNCTION_15_3(v2);
  v3 = OUTLINED_FUNCTION_21_50();
  OUTLINED_FUNCTION_70_13((uint64_t)v3);
  OUTLINED_FUNCTION_7_17();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CGFloat>);
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_18();
}

void ShutterModel.$gapWidth.modify(uint64_t a1, char a2)
{
  LinkDetailHeaderView.$invitedMemberHandles.modify(a1, a2, (void (*)(void *))ShutterModel.$gapWidth.setter);
}

void key path getter for ShutterModel.actualPercentComplete : ShutterModel(uint64_t a1@<X0>, double *a2@<X8>)
{
  *a2 = (*(double (**)(void))(**(_QWORD **)a1 + 464))();
}

uint64_t key path setter for ShutterModel.actualPercentComplete : ShutterModel()
{
  return ShutterModel.actualPercentComplete.setter();
}

double ShutterModel.actualPercentComplete.getter()
{
  return ShutterModel.targetPercentComplete.getter();
}

void sub_1BD3C7A20()
{
  double *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(double (**)(void))(v1 + 464))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD3C7A44()
{
  ShutterModel.actualPercentComplete.setter();
  OUTLINED_FUNCTION_0();
}

uint64_t ShutterModel.actualPercentComplete.setter()
{
  return ShutterModel.targetPercentComplete.setter();
}

uint64_t key path setter for ShutterModel.$actualPercentComplete : ShutterModel(uint64_t a1)
{
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CGFloat>.Publisher);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v6 + 16))(v5, a1, v3);
  return ShutterModel.$actualPercentComplete.setter((uint64_t)v5);
}

uint64_t ShutterModel.$actualPercentComplete.getter()
{
  return ShareCardViewModel.$shouldShowEndActivity.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit12ShutterModel__actualPercentComplete, &demangling cache variable for type metadata for Published<CGFloat>);
}

uint64_t ShutterModel.$actualPercentComplete.setter(uint64_t a1)
{
  return ShutterModel.$targetPercentComplete.setter(a1, &demangling cache variable for type metadata for Published<CGFloat>.Publisher, (uint64_t)&OBJC_IVAR____TtC15ConversationKit12ShutterModel__actualPercentComplete, &demangling cache variable for type metadata for Published<CGFloat>);
}

uint64_t key path getter for ShutterModel.showsProgress : ShutterModel@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 512))();
  *a2 = result & 1;
  return result;
}

uint64_t key path setter for ShutterModel.showsProgress : ShutterModel(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 520))(*a1);
}

void ShutterModel.showsProgress.getter()
{
  ShutterModel.isActive.getter();
}

void sub_1BD3C7C40()
{
  _BYTE *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))(v1 + 512))() & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD3C7C68()
{
  uint64_t v0;

  OUTLINED_FUNCTION_8_22();
  (*(void (**)(void))(v0 + 520))();
  OUTLINED_FUNCTION_0();
}

void ShutterModel.showsProgress.setter()
{
  ShareCardViewModel.shouldShowEndActivity.setter();
}

void ShutterModel.showsProgress.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t KeyPath;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_80((uint64_t)v1);
  KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_72_0(KeyPath);
  v3 = swift_getKeyPath();
  *(_QWORD *)(v0 + 48) = OUTLINED_FUNCTION_19_4(v3);
  OUTLINED_FUNCTION_18();
}

void ShutterModel.targetPercentComplete.modify(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 48))(*a1, 0);
  swift_release();
  OUTLINED_FUNCTION_11_0();
  free(v1);
}

uint64_t key path setter for ShutterModel.$showsProgress : ShutterModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v8 + 16))(v7, a1, v5);
  return (*(uint64_t (**)(char *))(**(_QWORD **)a2 + 544))(v7);
}

uint64_t ShutterModel.$showsProgress.getter()
{
  return ShareCardViewModel.$shouldShowEndActivity.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit12ShutterModel__showsProgress, (uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
}

uint64_t ShutterModel.$showsProgress.setter(uint64_t a1)
{
  return ShutterModel.$targetPercentComplete.setter(a1, &demangling cache variable for type metadata for Published<Bool>.Publisher, (uint64_t)&OBJC_IVAR____TtC15ConversationKit12ShutterModel__showsProgress, (uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
}

uint64_t ShutterModel.$targetPercentComplete.setter(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_77();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v9 - v8, a1, v6);
  OUTLINED_FUNCTION_60_0();
  __swift_instantiateConcreteTypeFromMangledName(a4);
  Published.projectedValue.setter();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
}

void ShutterModel.$showsProgress.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;

  v1 = OUTLINED_FUNCTION_46_17();
  OUTLINED_FUNCTION_35_11((uint64_t)v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  *(_QWORD *)(v0 + 48) = OUTLINED_FUNCTION_15_3(v2);
  v3 = OUTLINED_FUNCTION_21_50();
  OUTLINED_FUNCTION_70_13((uint64_t)v3);
  OUTLINED_FUNCTION_7_17();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_18();
}

void ShutterModel.$showsProgress.modify(uint64_t a1, char a2)
{
  LinkDetailHeaderView.$invitedMemberHandles.modify(a1, a2, (void (*)(void *))ShutterModel.$showsProgress.setter);
}

uint64_t ShutterModel.__allocating_init(_:)(double a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  ShutterModel.init(_:)(a1);
  return v2;
}

uint64_t ShutterModel.init(_:)(double a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<ShutterButtonStyle.InnerStyle>);
  v23 = *(_QWORD *)(v3 - 8);
  v24 = v3;
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_77();
  v6 = v5 - v4;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_77();
  v11 = v10 - v9;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CGFloat>);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_77();
  v16 = v15 - v14;
  v17 = v1 + OBJC_IVAR____TtC15ConversationKit12ShutterModel__targetPercentComplete;
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32))(v17, v16, v12);
  v18 = v1 + OBJC_IVAR____TtC15ConversationKit12ShutterModel__isActive;
  Published.init(initialValue:)();
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32);
  v19(v18, v11, v7);
  v20 = v1 + OBJC_IVAR____TtC15ConversationKit12ShutterModel__mode;
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 32))(v20, v6, v24);
  Published.init(initialValue:)();
  OUTLINED_FUNCTION_11_87();
  OUTLINED_FUNCTION_13_92();
  OUTLINED_FUNCTION_11_87();
  OUTLINED_FUNCTION_13_92();
  OUTLINED_FUNCTION_11_87();
  OUTLINED_FUNCTION_13_92();
  OUTLINED_FUNCTION_11_87();
  v21 = v1 + OBJC_IVAR____TtC15ConversationKit12ShutterModel__showsProgress;
  Published.init(initialValue:)();
  v19(v21, v11, v7);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit12ShutterModel__percentComplete) = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit12ShutterModel_timerSink) = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit12ShutterModel_timerUpdateInterval) = 0x3F91111111111111;
  *(double *)(v1 + 16) = a1;
  return v1;
}

Swift::Void __swiftcall ShutterModel.start()()
{
  double *v0;
  double *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_77();
  v5 = v4 - v3;
  (*(void (**)(_QWORD))(*(_QWORD *)v0 + 232))(0);
  v6 = OBJC_IVAR____TtC15ConversationKit12ShutterModel_timerSink;
  if (!*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC15ConversationKit12ShutterModel_timerSink))
  {
    v7 = OUTLINED_FUNCTION_15();
    *(double *)(v7 + 16) = (*(double (**)(void))(*(_QWORD *)v0 + 176))() * v0[2];
    (*(void (**)(double))(*(_QWORD *)v0 + 184))(1.0);
    type metadata accessor for NSTimer();
    v8 = objc_msgSend((id)objc_opt_self(), sel_mainRunLoop);
    v9 = type metadata accessor for NSRunLoop.SchedulerOptions();
    __swift_storeEnumTagSinglePayload(v5, 1, 1, v9);
    static NSTimer.publish(every:tolerance:on:in:options:)();

    outlined destroy of NSRunLoop.SchedulerOptions?(v5);
    type metadata accessor for NSTimer.TimerPublisher();
    lazy protocol witness table accessor for type NSTimer.TimerPublisher and conformance NSTimer.TimerPublisher();
    ConnectablePublisher.autoconnect()();
    swift_release();
    v10 = OUTLINED_FUNCTION_15();
    swift_weakInit();
    v11 = OUTLINED_FUNCTION_15();
    *(_QWORD *)(v11 + 16) = v10;
    *(_QWORD *)(v11 + 24) = v7;
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.Autoconnect<NSTimer.TimerPublisher>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>();
    v12 = Publisher<>.sink(receiveValue:)();
    swift_release();
    swift_release();
    *(_QWORD *)((char *)v1 + v6) = v12;
    OUTLINED_FUNCTION_11_0();
    swift_release();
  }
}

uint64_t sub_1BD3C8424()
{
  return swift_deallocObject();
}

unint64_t lazy protocol witness table accessor for type NSTimer.TimerPublisher and conformance NSTimer.TimerPublisher()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type NSTimer.TimerPublisher and conformance NSTimer.TimerPublisher;
  if (!lazy protocol witness table cache variable for type NSTimer.TimerPublisher and conformance NSTimer.TimerPublisher)
  {
    v1 = type metadata accessor for NSTimer.TimerPublisher();
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CB2088], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type NSTimer.TimerPublisher and conformance NSTimer.TimerPublisher);
  }
  return result;
}

uint64_t sub_1BD3C8474()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t closure #1 in ShutterModel.start()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  double *v5;
  double v6;
  double v7;
  double v8;
  uint64_t v9;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v5 = (double *)result;
    v6 = *(double *)(result + OBJC_IVAR____TtC15ConversationKit12ShutterModel_timerUpdateInterval);
    swift_beginAccess();
    v7 = v6 + *(double *)(a3 + 16);
    *(double *)(a3 + 16) = v7;
    v8 = v5[2];
    *(double *)((char *)v5 + OBJC_IVAR____TtC15ConversationKit12ShutterModel__percentComplete) = v7 / v8;
    ShutterModel.actualPercentComplete.setter();
    v9 = swift_beginAccess();
    if (v8 <= *(double *)(a3 + 16))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 632))(v9);
    return swift_release();
  }
  return result;
}

uint64_t sub_1BD3C8570()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ShutterModel.start()(uint64_t a1)
{
  uint64_t v1;

  return closure #1 in ShutterModel.start()(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

unint64_t lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>;
  if (!lazy protocol witness table cache variable for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Publishers.Autoconnect<NSTimer.TimerPublisher>);
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0C95768], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>);
  }
  return result;
}

Swift::Void __swiftcall ShutterModel.pause()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit12ShutterModel_timerSink) = 0;
  v1 = swift_release();
  (*(void (**)(uint64_t, double))(*(_QWORD *)v0 + 184))(v1, *(double *)(v0 + OBJC_IVAR____TtC15ConversationKit12ShutterModel__percentComplete));
  (*(void (**)(uint64_t))(*(_QWORD *)v0 + 232))(1);
}

Swift::Void __swiftcall ShutterModel.stop()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit12ShutterModel__percentComplete) = 0;
  v1 = ShutterModel.actualPercentComplete.setter();
  (*(void (**)(uint64_t, double))(*(_QWORD *)v0 + 184))(v1, 0.0);
  (*(void (**)(void))(*(_QWORD *)v0 + 624))();
}

uint64_t ShutterModel.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit12ShutterModel__targetPercentComplete;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CGFloat>);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC15ConversationKit12ShutterModel__isActive;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(v3, v4);
  v6 = v0 + OBJC_IVAR____TtC15ConversationKit12ShutterModel__mode;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<ShutterButtonStyle.InnerStyle>);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  OUTLINED_FUNCTION_17_66(OBJC_IVAR____TtC15ConversationKit12ShutterModel__diameter);
  OUTLINED_FUNCTION_17_66(OBJC_IVAR____TtC15ConversationKit12ShutterModel__lineThickness);
  OUTLINED_FUNCTION_17_66(OBJC_IVAR____TtC15ConversationKit12ShutterModel__gapWidth);
  OUTLINED_FUNCTION_17_66(OBJC_IVAR____TtC15ConversationKit12ShutterModel__actualPercentComplete);
  v5(v0 + OBJC_IVAR____TtC15ConversationKit12ShutterModel__showsProgress, v4);
  swift_release();
  return v0;
}

uint64_t ShutterModel.__deallocating_deinit()
{
  ShutterModel.deinit();
  return swift_deallocClassInstance();
}

uint64_t protocol witness for ObservableObject.objectWillChange.getter in conformance ShutterModel@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for ShutterModel();
  result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

void sub_1BD3C87D8()
{
  uint64_t v0;

  OUTLINED_FUNCTION_83_1();
  (*(void (**)(void))(v0 + 200))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD3C87FC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_83_1();
  (*(void (**)(void))(v0 + 248))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD3C8820()
{
  uint64_t v0;

  OUTLINED_FUNCTION_83_1();
  (*(void (**)(void))(v0 + 296))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD3C8844()
{
  uint64_t v0;

  OUTLINED_FUNCTION_83_1();
  (*(void (**)(void))(v0 + 344))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD3C8868()
{
  uint64_t v0;

  OUTLINED_FUNCTION_83_1();
  (*(void (**)(void))(v0 + 392))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD3C888C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_83_1();
  (*(void (**)(void))(v0 + 440))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD3C88B0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_83_1();
  (*(void (**)(void))(v0 + 488))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD3C88D4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_83_1();
  (*(void (**)(void))(v0 + 536))();
  OUTLINED_FUNCTION_0();
}

uint64_t ObjC metadata update function for ShutterModel()
{
  return type metadata accessor for ShutterModel();
}

uint64_t type metadata accessor for ShutterModel()
{
  uint64_t result;

  result = type metadata singleton initialization cache for ShutterModel;
  if (!type metadata singleton initialization cache for ShutterModel)
    return swift_getSingletonMetadata();
  return result;
}

void type metadata completion function for ShutterModel()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  type metadata accessor for Published<CGFloat>(319, &lazy cache variable for type metadata for Published<CGFloat>);
  if (v0 <= 0x3F)
  {
    type metadata accessor for Published<CGFloat>(319, (unint64_t *)&lazy cache variable for type metadata for Published<Bool>);
    if (v1 <= 0x3F)
    {
      type metadata accessor for Published<CGFloat>(319, &lazy cache variable for type metadata for Published<ShutterButtonStyle.InnerStyle>);
      if (v2 <= 0x3F)
        swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for ShutterModel()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ShutterModel.targetPercentComplete.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of ShutterModel.targetPercentComplete.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of ShutterModel.targetPercentComplete.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of ShutterModel.$targetPercentComplete.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of ShutterModel.$targetPercentComplete.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of ShutterModel.$targetPercentComplete.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of ShutterModel.isActive.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of ShutterModel.isActive.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of ShutterModel.isActive.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of ShutterModel.$isActive.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of ShutterModel.$isActive.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of ShutterModel.$isActive.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of ShutterModel.mode.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of ShutterModel.mode.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of ShutterModel.mode.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

uint64_t dispatch thunk of ShutterModel.$mode.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t dispatch thunk of ShutterModel.$mode.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
}

uint64_t dispatch thunk of ShutterModel.$mode.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 312))();
}

uint64_t dispatch thunk of ShutterModel.diameter.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 320))();
}

uint64_t dispatch thunk of ShutterModel.diameter.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 328))();
}

uint64_t dispatch thunk of ShutterModel.diameter.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 336))();
}

uint64_t dispatch thunk of ShutterModel.$diameter.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 344))();
}

uint64_t dispatch thunk of ShutterModel.$diameter.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 352))();
}

uint64_t dispatch thunk of ShutterModel.$diameter.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 360))();
}

uint64_t dispatch thunk of ShutterModel.lineThickness.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 368))();
}

uint64_t dispatch thunk of ShutterModel.lineThickness.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 376))();
}

uint64_t dispatch thunk of ShutterModel.lineThickness.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 384))();
}

uint64_t dispatch thunk of ShutterModel.$lineThickness.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 392))();
}

uint64_t dispatch thunk of ShutterModel.$lineThickness.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 400))();
}

uint64_t dispatch thunk of ShutterModel.$lineThickness.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 408))();
}

uint64_t dispatch thunk of ShutterModel.gapWidth.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 416))();
}

uint64_t dispatch thunk of ShutterModel.gapWidth.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 424))();
}

uint64_t dispatch thunk of ShutterModel.gapWidth.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 432))();
}

uint64_t dispatch thunk of ShutterModel.$gapWidth.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 440))();
}

uint64_t dispatch thunk of ShutterModel.$gapWidth.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 448))();
}

uint64_t dispatch thunk of ShutterModel.$gapWidth.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 456))();
}

uint64_t dispatch thunk of ShutterModel.actualPercentComplete.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 464))();
}

uint64_t dispatch thunk of ShutterModel.$actualPercentComplete.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 488))();
}

uint64_t dispatch thunk of ShutterModel.showsProgress.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 512))();
}

uint64_t dispatch thunk of ShutterModel.showsProgress.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 520))();
}

uint64_t dispatch thunk of ShutterModel.showsProgress.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 528))();
}

uint64_t dispatch thunk of ShutterModel.$showsProgress.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 536))();
}

uint64_t dispatch thunk of ShutterModel.$showsProgress.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 544))();
}

uint64_t dispatch thunk of ShutterModel.$showsProgress.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 552))();
}

uint64_t dispatch thunk of ShutterModel.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 608))();
}

uint64_t dispatch thunk of ShutterModel.start()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 616))();
}

uint64_t dispatch thunk of ShutterModel.pause()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 624))();
}

uint64_t dispatch thunk of ShutterModel.stop()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 632))();
}

void type metadata accessor for Published<CGFloat>(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = type metadata accessor for Published();
    if (!v4)
      atomic_store(v3, a2);
  }
}

uint64_t dispatch thunk of InCallControlsViewControllerParticipantDelegate.inCallControlsViewController(_:didTapBuzz:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of InCallControlsViewControllerParticipantDelegate.inCallControlsViewController(_:didApprove:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of InCallControlsViewControllerParticipantDelegate.inCallControlsViewController(_:didDismiss:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of InCallControlsViewControllerParticipantDelegate.inCallControlsViewController(_:didKick:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t HUDActivityManager.BannerUpdate.init(score:type:requestedSizeClass:temporary:associatedCall:uuid:controlsManager:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t result;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  OUTLINED_FUNCTION_149_1();
  v41 = v9;
  v42 = v10;
  v37 = v11;
  v38 = v12;
  v14 = v13;
  v16 = v15;
  v18 = v17;
  v20 = v19;
  v22 = v21;
  v39 = v23;
  v40 = a9;
  v24 = OUTLINED_FUNCTION_33();
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v27 = (char *)&v37 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = *v20;
  v29 = (int *)type metadata accessor for HUDActivityManager.BannerUpdate(0);
  v30 = v22 + v29[11];
  *(_QWORD *)(v30 + 8) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)v22 = v28;
  outlined init with copy of ConversationControlsType(v18, v22 + 8);
  *(_QWORD *)(v22 + 56) = v16;
  *(_BYTE *)(v22 + 64) = v14 & 1;
  *(_QWORD *)(v30 + 8) = v37;
  swift_unknownObjectWeakAssign();
  *(_BYTE *)(v22 + 65) = v38;
  v31 = v22 + v29[8];
  v32 = OUTLINED_FUNCTION_33_0();
  v33 = *(_QWORD *)(v32 - 8);
  v34 = v31;
  v35 = v39;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 16))(v34, v39, v32);
  static Date.now.getter();
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v35, v32);
  outlined destroy of ConversationControlsType(v18);
  result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v25 + 32))(v22 + v29[9], v27, v24);
  *(_QWORD *)(v22 + v29[10]) = v40;
  return result;
}

uint64_t type metadata accessor for HUDActivityManager.BannerUpdate(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for HUDActivityManager.BannerUpdate);
}

BOOL specialized static Comparable.> infix(_:_:)(unsigned __int8 a1, unsigned __int8 a2)
{
  return a2 < a1;
}

void specialized static Comparable.> infix(_:_:)()
{
  static HUDActivityManager.BannerUpdate.< infix(_:_:)();
}

BOOL specialized static Comparable.> infix(_:_:)(double a1, double a2)
{
  return a2 < a1;
}

BOOL specialized static Comparable.> infix(_:_:)(char a1, char a2)
{
  return static Bool.< infix(_:_:)(a2, a1);
}

BOOL specialized static Comparable.>= infix(_:_:)(unsigned __int8 a1, unsigned __int8 a2)
{
  return a1 >= a2;
}

BOOL specialized static Comparable.>= infix(_:_:)()
{
  char v0;

  static HUDActivityManager.BannerUpdate.< infix(_:_:)();
  return (v0 & 1) == 0;
}

BOOL specialized static Comparable.>= infix(_:_:)(double a1, double a2)
{
  return a1 >= a2;
}

BOOL specialized static Comparable.>= infix(_:_:)(char a1, char a2)
{
  return !static Bool.< infix(_:_:)(a1, a2);
}

uint64_t ConversationControlsType.defaultRelevanceScore.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  BOOL v4;
  BOOL v5;
  int8x16_t v6;
  int8x8_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  int8x16_t v11;
  int8x16_t v12;
  char v13;

  result = outlined init with copy of ConversationControlsType(v1, (uint64_t)&v10);
  if (v13 == 3)
  {
    result = swift_bridgeObjectRelease();
  }
  else
  {
    if (v13 == 4)
    {
      v9 = 0x4085E00000000000;
      goto LABEL_18;
    }
    if (v13 != 6
      || ((v10 & 0xFFFFFFFFFFFFFFFELL) != 0x18 ? (v4 = v10 == 21) : (v4 = 1),
          !v4 ? (v5 = v10 == 6) : (v5 = 1),
          (v6 = vorrq_s8(v11, v12), v7 = vorr_s8(*(int8x8_t *)v6.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v6, v6, 8uLL)), v5)
        ? (v8 = *(_QWORD *)&v7 == 0)
        : (v8 = 0),
          !v8))
    {
      *a1 = 0x4082C00000000000;
      return outlined destroy of ConversationControlsType((uint64_t)&v10);
    }
  }
  v9 = 0x4089000000000000;
LABEL_18:
  *a1 = v9;
  return result;
}

uint64_t ConversationControlsType.isTemporary.getter()
{
  uint64_t v0;
  uint64_t v2;
  BOOL v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  outlined init with copy of ConversationControlsType(v0, (uint64_t)&v6);
  if (v11 == 3 || v11 == 5)
  {
    v2 = 0;
  }
  else
  {
    if (v11 == 6)
    {
      if (!(v9 | v10 | v6 | v8 | v7))
        return 0;
      v3 = (v6 & 0xFFFFFFFFFFFFFFEFLL) == 9 || v6 == 7;
      if (v3 && (v9 | v10 | v8 | v7) == 0)
        return 0;
    }
    v2 = 1;
  }
  outlined destroy of ConversationControlsType((uint64_t)&v6);
  return v2;
}

uint64_t key path getter for HUDActivity.dismissed : HUDActivity@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 112))();
  *a2 = result & 1;
  return result;
}

uint64_t key path setter for HUDActivity.dismissed : HUDActivity(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 120))(*a1);
}

uint64_t HUDActivity.dismissed.getter()
{
  unsigned __int8 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

void sub_1BD3C9128()
{
  _BYTE *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))(v1 + 112))() & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD3C9150(unsigned __int8 *a1, uint64_t a2)
{
  (*(void (**)(_QWORD))(**(_QWORD **)a2 + 120))(*a1);
  OUTLINED_FUNCTION_0();
}

void HUDActivity.dismissed.setter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  static Published.subscript.setter();
  OUTLINED_FUNCTION_43_1();
}

void HUDActivity.dismissed.modify(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = static Published.subscript.modify();
  OUTLINED_FUNCTION_18();
}

{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 48))(*a1, 0);
  OUTLINED_FUNCTION_43();
  swift_release();
  OUTLINED_FUNCTION_4_2(v1);
}

uint64_t key path setter for HUDActivity.$dismissed : HUDActivity(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v8 + 16))(v7, a1, v5);
  return (*(uint64_t (**)(char *))(**(_QWORD **)a2 + 144))(v7);
}

void HUDActivity.$dismissed.getter()
{
  OUTLINED_FUNCTION_60_0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  Published.projectedValue.getter();
  swift_endAccess();
  OUTLINED_FUNCTION_43_1();
}

void HUDActivity.$dismissed.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  OUTLINED_FUNCTION_117_2();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_16_2();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, a1, v4);
  OUTLINED_FUNCTION_60_0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  Published.projectedValue.setter();
  swift_endAccess();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(a1, v4);
  OUTLINED_FUNCTION_91();
}

void HUDActivity.$dismissed.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;

  v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  v3[4] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[5] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[6] = malloc(v6);
  v3[7] = malloc(v6);
  OUTLINED_FUNCTION_60_0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  Published.projectedValue.getter();
  swift_endAccess();
  OUTLINED_FUNCTION_18();
}

void HUDActivity.$dismissed.modify(uint64_t a1, char a2)
{
  _QWORD *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 48);
  v4 = *(void **)(*(_QWORD *)a1 + 56);
  if ((a2 & 1) != 0)
  {
    v5 = v2[4];
    v6 = v2[5];
    (*(void (**)(_QWORD, void *, uint64_t))(v6 + 16))(*(_QWORD *)(*(_QWORD *)a1 + 48), v4, v5);
    HUDActivity.$dismissed.setter((uint64_t)v3);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    HUDActivity.$dismissed.setter(*(_QWORD *)(*(_QWORD *)a1 + 56));
  }
  free(v4);
  free(v3);
  free(v2);
}

uint64_t HUDActivity.activityId.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_33_0();
  v0 = OUTLINED_FUNCTION_70_2();
  return OUTLINED_FUNCTION_31_0(v0, v1, v2, v3);
}

uint64_t key path setter for HUDActivity.relatedUpdate : HUDActivity(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v4 = type metadata accessor for HUDActivityManager.BannerUpdate(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of HUDActivityManager.BannerUpdate(a1, (uint64_t)v6);
  return (*(uint64_t (**)(char *))(**(_QWORD **)a2 + 192))(v6);
}

void HUDActivity.relatedUpdate.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit11HUDActivity_relatedUpdate;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_38_50(v1);
  OUTLINED_FUNCTION_43_1();
}

uint64_t outlined init with copy of HUDActivityManager.BannerUpdate(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for HUDActivityManager.BannerUpdate(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void HUDActivity.relatedUpdate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15ConversationKit11HUDActivity_relatedUpdate;
  OUTLINED_FUNCTION_60_0();
  outlined assign with take of HUDActivityManager.BannerUpdate(a1, v3);
  swift_endAccess();
  OUTLINED_FUNCTION_43_1();
}

uint64_t outlined assign with take of HUDActivityManager.BannerUpdate(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for HUDActivityManager.BannerUpdate(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void HUDActivity.relatedUpdate.modify()
{
  OUTLINED_FUNCTION_60_0();
  OUTLINED_FUNCTION_0();
}

void HUDActivity.isPersistent.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v3[48];

  type metadata accessor for HUDActivityManager.BannerUpdate(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_30_6();
  (*(void (**)(void))(*(_QWORD *)v1 + 184))();
  outlined init with copy of ConversationControlsType(v0 + 8, (uint64_t)v3);
  OUTLINED_FUNCTION_28_55();
  ConversationControlsType.isTemporary.getter();
  outlined destroy of ConversationControlsType((uint64_t)v3);
  OUTLINED_FUNCTION_0();
}

uint64_t HUDActivity.__allocating_init(withUpdate:dismissHandler:)()
{
  uint64_t v0;

  v0 = swift_allocObject();
  OUTLINED_FUNCTION_315_0();
  HUDActivity.init(withUpdate:dismissHandler:)();
  return v0;
}

void HUDActivity.init(withUpdate:dismissHandler:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_93();
  v17 = v4;
  v6 = v5;
  v8 = v7;
  v9 = OUTLINED_FUNCTION_33_0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_16_2();
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  OUTLINED_FUNCTION_117_2();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_77_1();
  v13 = v0 + OBJC_IVAR____TtC15ConversationKit11HUDActivity__dismissed;
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v13, v3, v11);
  v14 = (uint64_t *)(v0 + OBJC_IVAR____TtC15ConversationKit11HUDActivity_dismissHandler);
  *v14 = 0;
  v14[1] = 0;
  outlined init with copy of HUDActivityManager.BannerUpdate(v8, v0 + OBJC_IVAR____TtC15ConversationKit11HUDActivity_relatedUpdate);
  v15 = *v14;
  *v14 = v6;
  v14[1] = v17;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v15);
  v16 = type metadata accessor for HUDActivityManager.BannerUpdate(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v1, v8 + *(int *)(v16 + 32), v9);
  OUTLINED_FUNCTION_13_93();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v0 + OBJC_IVAR____TtC15ConversationKit11HUDActivity_activityId, v1, v9);
  OUTLINED_FUNCTION_52_1();
}

Swift::Void __swiftcall HUDActivity.end()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  unint64_t v9;
  void (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_149_1();
  v12 = v1;
  v13 = v2;
  v3 = v0;
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v4 = OUTLINED_FUNCTION_17_2();
  v5 = __swift_project_value_buffer(v4, (uint64_t)&static Logger.conversationControls);
  OUTLINED_FUNCTION_29_1();
  Logger.logObject.getter();
  v6 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_28_4(v5))
  {
    v7 = (uint8_t *)OUTLINED_FUNCTION_105();
    v11 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v7 = 136315138;
    ObjC metadata update function for HUDActivity();
    OUTLINED_FUNCTION_11_8();
    v8 = String.init<A>(reflecting:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v8, v9, &v11);
    OUTLINED_FUNCTION_31_3();
    OUTLINED_FUNCTION_25();
    OUTLINED_FUNCTION_23_0();
    OUTLINED_FUNCTION_48(&dword_1BD004000, v5, v6, "HUDActivity %s ending", v7);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_23_0();

  (*(void (**)(uint64_t))(*(_QWORD *)v3 + 120))(1);
  v10 = *(void (**)(uint64_t))(v3 + OBJC_IVAR____TtC15ConversationKit11HUDActivity_dismissHandler);
  if (v10)
  {
    partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
    v10(v3);
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v10);
  }
}

void HUDActivity.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  OUTLINED_FUNCTION_17_1(v1);
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(*(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit11HUDActivity_dismissHandler));
  v2 = OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_17_1(v2);
  outlined destroy of HUDActivityManager.BannerUpdate(v0 + OBJC_IVAR____TtC15ConversationKit11HUDActivity_relatedUpdate);
  OUTLINED_FUNCTION_0();
}

uint64_t HUDActivity.__deallocating_deinit()
{
  HUDActivity.deinit();
  return swift_deallocClassInstance();
}

uint64_t CoupledHUDActivity.childActivityObserver.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1
                 + OBJC_IVAR____TtC15ConversationKitP33_1110C52F52D8EDCF5F7A893547109D2918CoupledHUDActivity_childActivityObserver);
  *(_QWORD *)(v1
            + OBJC_IVAR____TtC15ConversationKitP33_1110C52F52D8EDCF5F7A893547109D2918CoupledHUDActivity_childActivityObserver) = a1;
  swift_retain();
  if (v2)
  {
    MEMORY[0x1C3B73268](v2, MEMORY[0x1E0DEE9C0] + 8, MEMORY[0x1E0DEDCE8], MEMORY[0x1E0DEDD18]);
    swift_release();
  }
  return swift_release();
}

uint64_t CoupledHUDActivity.childActivity.didset()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncPublisher<Published<Bool>.Publisher>);
  v9 = *(_QWORD *)(v27 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](v27);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v28 = (char *)&v25 - v13;
  result = CoupledHUDActivity.childActivityObserver.setter(0);
  v15 = *(_QWORD *)(v0
                  + OBJC_IVAR____TtC15ConversationKitP33_1110C52F52D8EDCF5F7A893547109D2918CoupledHUDActivity_childActivity);
  if (v15)
  {
    v26 = v4;
    v16 = *(uint64_t (**)(uint64_t))(**(_QWORD **)(v0
                                                          + OBJC_IVAR____TtC15ConversationKitP33_1110C52F52D8EDCF5F7A893547109D2918CoupledHUDActivity_parentActivity)
                                            + 208);
    v17 = swift_retain();
    if ((v16(v17) & 1) != 0)
    {
      return swift_release();
    }
    else
    {
      (*(void (**)(void))(*(_QWORD *)v15 + 136))();
      lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Published<Bool>.Publisher and conformance Published<A>.Publisher, &demangling cache variable for type metadata for Published<Bool>.Publisher);
      v18 = v28;
      MEMORY[0x1C3B71234](v5, v19);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      v20 = type metadata accessor for TaskPriority();
      __swift_storeEnumTagSinglePayload((uint64_t)v26, 1, 1, v20);
      v21 = v27;
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v18, v27);
      v22 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      v23 = swift_allocObject();
      *(_QWORD *)(v23 + 16) = 0;
      *(_QWORD *)(v23 + 24) = 0;
      (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v23 + v22, v11, v21);
      *(_QWORD *)(v23 + ((v10 + v22 + 7) & 0xFFFFFFFFFFFFFFF8)) = v1;
      swift_retain();
      _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
      CoupledHUDActivity.childActivityObserver.setter(v24);
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v28, v21);
    }
  }
  return result;
}

uint64_t closure #1 in CoupledHUDActivity.childActivity.didset(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[5] = a4;
  v5[6] = a5;
  v5[7] = *a5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncPublisher<Published<Bool>.Publisher>.Iterator);
  v5[8] = v6;
  v5[9] = *(_QWORD *)(v6 - 8);
  v5[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t closure #1 in CoupledHUDActivity.childActivity.didset()
{
  uint64_t v0;
  _QWORD *v1;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncPublisher<Published<Bool>.Publisher>);
  AsyncPublisher.makeAsyncIterator()();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(lazy protocol witness table cache variable for type AsyncPublisher<Published<Bool>.Publisher>.Iterator and conformance AsyncPublisher<A>.Iterator, &demangling cache variable for type metadata for AsyncPublisher<Published<Bool>.Publisher>.Iterator);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v1;
  *v1 = v0;
  v1[1] = closure #1 in CoupledHUDActivity.childActivity.didset;
  return dispatch thunk of AsyncIteratorProtocol.next()();
}

{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_4_4();
}

{
  uint64_t v0;

  *(_BYTE *)(v0 + 113) = *(_BYTE *)(v0 + 112);
  return swift_task_switch();
}

{
  uint64_t v0;
  int v1;
  _QWORD *v3;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v1 = *(unsigned __int8 *)(v0 + 113);
  if (v1 == 2)
  {
    OUTLINED_FUNCTION_88_12();
    swift_task_dealloc();
    OUTLINED_FUNCTION_121_1();
    __asm { BR              X0 }
  }
  if ((v1 & 1) != 0)
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v5 = OUTLINED_FUNCTION_17_2();
    v6 = __swift_project_value_buffer(v5, (uint64_t)&static Logger.conversationControls);
    OUTLINED_FUNCTION_29_1();
    Logger.logObject.getter();
    v7 = OUTLINED_FUNCTION_12_0();
    if (OUTLINED_FUNCTION_23_5(v7))
    {
      v8 = *(_QWORD *)(v0 + 48);
      v9 = (uint8_t *)OUTLINED_FUNCTION_105();
      v12 = OUTLINED_FUNCTION_105();
      *(_DWORD *)v9 = 136315138;
      *(_QWORD *)(v0 + 24) = v8;
      swift_retain();
      v10 = String.init<A>(reflecting:)();
      *(_QWORD *)(v0 + 32) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v10, v11, &v12);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_21_0();
      OUTLINED_FUNCTION_23_0();
      OUTLINED_FUNCTION_48(&dword_1BD004000, v6, (os_log_type_t)v6, "CoupledHUDActivity - Learned about childActivity dismissing. Ending CoupledHUDActivity %s", v9);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }
    OUTLINED_FUNCTION_23_0();

    type metadata accessor for MainActor();
    *(_QWORD *)(v0 + 104) = static MainActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    OUTLINED_FUNCTION_121_1();
    return swift_task_switch();
  }
  else
  {
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(lazy protocol witness table cache variable for type AsyncPublisher<Published<Bool>.Publisher>.Iterator and conformance AsyncPublisher<A>.Iterator, &demangling cache variable for type metadata for AsyncPublisher<Published<Bool>.Publisher>.Iterator);
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 88) = v3;
    *v3 = v0;
    v3[1] = closure #1 in CoupledHUDActivity.childActivity.didset;
    OUTLINED_FUNCTION_121_1();
    return dispatch thunk of AsyncIteratorProtocol.next()();
  }
}

{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 96);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
  swift_dynamicCast();
  return swift_willThrowTypedImpl();
}

{
  swift_release();
  CoupledHUDActivity.end()();
  return OUTLINED_FUNCTION_4_4();
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_88_12();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t CoupledHUDActivity.end()()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;

  result = (*(uint64_t (**)(void))(**(_QWORD **)(v0
                                              + OBJC_IVAR____TtC15ConversationKitP33_1110C52F52D8EDCF5F7A893547109D2918CoupledHUDActivity_parentActivity)
                                + 224))();
  v2 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtC15ConversationKitP33_1110C52F52D8EDCF5F7A893547109D2918CoupledHUDActivity_childActivity);
  if (v2)
  {
    v3 = *(void (**)(uint64_t))(*(_QWORD *)v2 + 224);
    v4 = swift_retain();
    v3(v4);
    return swift_release();
  }
  return result;
}

uint64_t CoupledHUDActivity.childActivity.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1
            + OBJC_IVAR____TtC15ConversationKitP33_1110C52F52D8EDCF5F7A893547109D2918CoupledHUDActivity_childActivity) = a1;
  swift_retain();
  swift_release();
  CoupledHUDActivity.childActivity.didset();
  return swift_release();
}

uint64_t CoupledHUDActivity.__allocating_init(withUpdate:dismissHandler:)(uint64_t a1, uint64_t a2)
{
  swift_allocObject();
  return CoupledHUDActivity.init(withUpdate:dismissHandler:)(a1, a2);
}

uint64_t CoupledHUDActivity.init(withUpdate:dismissHandler:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v3 = v2;
  v6 = type metadata accessor for HUDActivityManager.BannerUpdate(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC15ConversationKitP33_1110C52F52D8EDCF5F7A893547109D2918CoupledHUDActivity_banner + 8) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v2
            + OBJC_IVAR____TtC15ConversationKitP33_1110C52F52D8EDCF5F7A893547109D2918CoupledHUDActivity_childActivityObserver) = 0;
  *(_QWORD *)(v2
            + OBJC_IVAR____TtC15ConversationKitP33_1110C52F52D8EDCF5F7A893547109D2918CoupledHUDActivity_childActivity) = 0;
  outlined init with copy of HUDActivityManager.BannerUpdate(a1, (uint64_t)v8);
  type metadata accessor for HUDActivity(0);
  v9 = swift_allocObject();
  swift_retain();
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(a2);
  HUDActivity.init(withUpdate:dismissHandler:)();
  *(_QWORD *)(v3
            + OBJC_IVAR____TtC15ConversationKitP33_1110C52F52D8EDCF5F7A893547109D2918CoupledHUDActivity_parentActivity) = v9;
  swift_release();
  outlined init with copy of HUDActivityManager.BannerUpdate(a1, (uint64_t)v8);
  HUDActivity.init(withUpdate:dismissHandler:)();
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(a2);
  outlined destroy of HUDActivityManager.BannerUpdate(a1);
  return v3;
}

uint64_t CoupledHUDActivity.relatedUpdate.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)(v0
                                            + OBJC_IVAR____TtC15ConversationKitP33_1110C52F52D8EDCF5F7A893547109D2918CoupledHUDActivity_parentActivity)
                              + 184))();
}

uint64_t CoupledHUDActivity.relatedUpdate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v3 = type metadata accessor for HUDActivityManager.BannerUpdate(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1
                 + OBJC_IVAR____TtC15ConversationKitP33_1110C52F52D8EDCF5F7A893547109D2918CoupledHUDActivity_parentActivity);
  outlined init with copy of HUDActivityManager.BannerUpdate(a1, (uint64_t)v5);
  (*(void (**)(char *))(*(_QWORD *)v6 + 192))(v5);
  return outlined destroy of HUDActivityManager.BannerUpdate(a1);
}

void (*CoupledHUDActivity.relatedUpdate.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  size_t v3;

  *a1 = v1;
  v3 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for HUDActivityManager.BannerUpdate(0) - 8) + 64);
  a1[1] = malloc(v3);
  a1[2] = malloc(v3);
  (*(void (**)(void))(**(_QWORD **)(v1
                                  + OBJC_IVAR____TtC15ConversationKitP33_1110C52F52D8EDCF5F7A893547109D2918CoupledHUDActivity_parentActivity)
                    + 184))();
  return CoupledHUDActivity.relatedUpdate.modify;
}

void CoupledHUDActivity.relatedUpdate.modify(uint64_t a1, char a2)
{
  void *v2;
  void *v3;

  v2 = *(void **)(a1 + 8);
  v3 = *(void **)(a1 + 16);
  if ((a2 & 1) != 0)
  {
    OUTLINED_FUNCTION_38_50((uint64_t)v3);
    CoupledHUDActivity.relatedUpdate.setter((uint64_t)v2);
    OUTLINED_FUNCTION_13_93();
  }
  else
  {
    CoupledHUDActivity.relatedUpdate.setter((uint64_t)v3);
  }
  free(v3);
  OUTLINED_FUNCTION_4_2(v2);
}

uint64_t CoupledHUDActivity.__ivar_destroyer()
{
  uint64_t v0;

  swift_release();
  outlined destroy of weak ConversationControlsCountdownJoinButtonDelegate?(v0 + OBJC_IVAR____TtC15ConversationKitP33_1110C52F52D8EDCF5F7A893547109D2918CoupledHUDActivity_banner);
  swift_release();
  return swift_release();
}

uint64_t CoupledHUDActivity.deinit()
{
  uint64_t v0;

  HUDActivity.deinit();
  swift_release();
  outlined destroy of weak ConversationControlsCountdownJoinButtonDelegate?(v0 + OBJC_IVAR____TtC15ConversationKitP33_1110C52F52D8EDCF5F7A893547109D2918CoupledHUDActivity_banner);
  swift_release();
  swift_release();
  return v0;
}

uint64_t CoupledHUDActivity.__deallocating_deinit()
{
  CoupledHUDActivity.deinit();
  return swift_deallocClassInstance();
}

void one-time initialization function for shared(uint64_t a1)
{
  one-time initialization function for shared(a1, type metadata accessor for HUDActivityManager, &static HUDActivityManager.shared);
}

{
  one-time initialization function for shared(a1, type metadata accessor for BannerActivityManager, &static BannerActivityManager.shared);
}

id HUDActivityManager.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id static HUDActivityManager.shared.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for shared, (id *)&static HUDActivityManager.shared);
}

uint64_t key path setter for HUDActivityManager.displayResolver : HUDActivityManager(uint64_t a1, _QWORD **a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x80);
  v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

uint64_t HUDActivityManager.displayResolver.getter()
{
  OUTLINED_FUNCTION_2_0();
  return swift_unknownObjectRetain();
}

void HUDActivityManager.displayResolver.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + OBJC_IVAR___CNKHUDActivityManager_displayResolver);
  OUTLINED_FUNCTION_2_0();
  *v5 = a1;
  v5[1] = a2;
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_9_0();
}

void HUDActivityManager.displayResolver.modify()
{
  OUTLINED_FUNCTION_60_0();
  OUTLINED_FUNCTION_0();
}

ConversationKit::HUDActivityManager::RelevanceScore __swiftcall HUDActivityManager.RelevanceScore.init(rawValue:)(ConversationKit::HUDActivityManager::RelevanceScore rawValue)
{
  ConversationKit::HUDActivityManager::RelevanceScore *v1;

  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static HUDActivityManager.RelevanceScore.emergency.getter(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_112_10(a1);
}

void static HUDActivityManager.RelevanceScore.userInput.getter(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_112_10(a1);
}

void static HUDActivityManager.RelevanceScore.notice.getter(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_112_10(a1);
}

void static HUDActivityManager.RelevanceScore.default.getter(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_112_10(a1);
}

void static HUDActivityManager.RelevanceScore.low.getter(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_112_10(a1);
}

double HUDActivityManager.RelevanceScore.rawValue.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

BOOL static HUDActivityManager.RelevanceScore.< infix(_:_:)(double *a1, double *a2)
{
  return *a1 < *a2;
}

void protocol witness for Hashable.hashValue.getter in conformance HUDActivityManager.RelevanceScore()
{
  specialized RawRepresentable<>.hashValue.getter();
}

void protocol witness for Hashable.hash(into:) in conformance HUDActivityManager.RelevanceScore()
{
  double *v0;

  specialized RawRepresentable<>.hash(into:)(*v0);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance HUDActivityManager.RelevanceScore()
{
  specialized RawRepresentable<>._rawHashValue(seed:)();
}

BOOL protocol witness for static Comparable.<= infix(_:_:) in conformance HUDActivityManager.RelevanceScore(double *a1, double *a2)
{
  return specialized static Comparable.<= infix(_:_:)(*a1, *a2);
}

BOOL protocol witness for static Comparable.>= infix(_:_:) in conformance HUDActivityManager.RelevanceScore(double *a1, double *a2)
{
  return specialized static Comparable.>= infix(_:_:)(*a1, *a2);
}

BOOL protocol witness for static Comparable.> infix(_:_:) in conformance HUDActivityManager.RelevanceScore(double *a1, double *a2)
{
  return specialized static Comparable.> infix(_:_:)(*a1, *a2);
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance HUDActivityManager.RelevanceScore(Swift::Double *a1@<X0>, uint64_t a2@<X8>)
{
  HUDActivityManager.RelevanceScore.init(rawValue:)(*a1);
  *(_BYTE *)(a2 + 8) = 0;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance HUDActivityManager.RelevanceScore(double *a1@<X8>)
{
  *a1 = HUDActivityManager.RelevanceScore.rawValue.getter();
  OUTLINED_FUNCTION_0();
}

double HUDActivityManager.BannerUpdate.score.getter@<D0>(_QWORD *a1@<X8>)
{
  double *v1;
  double result;

  result = *v1;
  *a1 = *(_QWORD *)v1;
  return result;
}

uint64_t HUDActivityManager.BannerUpdate.type.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return outlined init with copy of ConversationControlsType(v1 + 8, a1);
}

uint64_t HUDActivityManager.BannerUpdate.requestedSizeClass.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 56);
}

uint64_t HUDActivityManager.BannerUpdate.temporary.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 65);
}

uint64_t HUDActivityManager.BannerUpdate.uuid.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  type metadata accessor for HUDActivityManager.BannerUpdate(0);
  OUTLINED_FUNCTION_33_0();
  v0 = OUTLINED_FUNCTION_70_2();
  return OUTLINED_FUNCTION_31_0(v0, v1, v2, v3);
}

uint64_t HUDActivityManager.BannerUpdate.timestamp.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_63_0();
  OUTLINED_FUNCTION_33();
  v0 = OUTLINED_FUNCTION_70_2();
  return OUTLINED_FUNCTION_31_0(v0, v1, v2, v3);
}

void HUDActivityManager.BannerUpdate.controlsManager.getter()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(v0 + *(int *)(OUTLINED_FUNCTION_63_0() + 40));
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for HUDActivityManager.BannerUpdate.associatedCall : HUDActivityManager.BannerUpdate@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  v4 = type metadata accessor for HUDActivityManager.BannerUpdate(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of HUDActivityManager.BannerUpdate(a1, (uint64_t)v6);
  v7 = &v6[*(int *)(v4 + 44)];
  v8 = MEMORY[0x1C3B752C0](v7);
  v9 = *((_QWORD *)v7 + 1);
  result = outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v6);
  *a2 = v8;
  a2[1] = v9;
  return result;
}

uint64_t key path setter for HUDActivityManager.BannerUpdate.associatedCall : HUDActivityManager.BannerUpdate(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a2 + *(int *)(type metadata accessor for HUDActivityManager.BannerUpdate(0) + 44) + 8) = v2;
  return swift_unknownObjectWeakAssign();
}

void HUDActivityManager.BannerUpdate.associatedCall.getter()
{
  OUTLINED_FUNCTION_63_0();
  OUTLINED_FUNCTION_113_11();
}

void sub_1BD3CAB88()
{
  OUTLINED_FUNCTION_0();
}

void static HUDActivityManager.BannerUpdate.< infix(_:_:)()
{
  double *v0;
  uint64_t v1;
  uint64_t v2;
  double *v3;
  double *v4;
  double *v5;
  double *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double *v12;
  double v13;
  double v14;
  double v15;
  double v16;
  _BYTE v17[48];
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;

  OUTLINED_FUNCTION_149_1();
  v20 = v1;
  v21 = v2;
  v4 = v3;
  v6 = v5;
  OUTLINED_FUNCTION_63_0();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_101_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_99_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_18_30();
  MEMORY[0x1E0C80A78](v10);
  v12 = (double *)&v17[-v11];
  outlined init with copy of ConversationControlsType((uint64_t)(v6 + 1), (uint64_t)v17);
  outlined init with copy of ConversationControlsType((uint64_t)(v4 + 1), (uint64_t)&v18);
  if (!v17[40])
  {
    if (v19)
    {
      OUTLINED_FUNCTION_172_2();
      OUTLINED_FUNCTION_181_4();
      goto LABEL_13;
    }
LABEL_7:
    OUTLINED_FUNCTION_181_4();
    OUTLINED_FUNCTION_172_2();
    goto LABEL_13;
  }
  if (!v19)
    goto LABEL_7;
  v13 = *v6;
  v14 = *v4;
  OUTLINED_FUNCTION_185_3((uint64_t)v6);
  OUTLINED_FUNCTION_38_50((uint64_t)v4);
  if (v13 >= v14)
  {
    v15 = *v12;
    v16 = *v0;
    OUTLINED_FUNCTION_106_12((uint64_t)v12);
    OUTLINED_FUNCTION_66_22((uint64_t)v0);
    if (v15 == v16)
      Date.compare(_:)();
    OUTLINED_FUNCTION_13_93();
    OUTLINED_FUNCTION_59_27();
  }
  OUTLINED_FUNCTION_28_55();
  OUTLINED_FUNCTION_116_6();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v17, &demangling cache variable for type metadata for (ConversationControlsType, ConversationControlsType));
LABEL_13:
  OUTLINED_FUNCTION_7_7();
}

void static HUDActivityManager.BannerUpdate.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double *v5;
  double *v6;
  double *v7;
  double *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  double v17;
  char v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t ObjectType;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  OUTLINED_FUNCTION_149_1();
  v6 = v5;
  v8 = v7;
  v9 = type metadata accessor for HUDActivityManager.BannerUpdate(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_101_1();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_18_30();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_81_2();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_132_9();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_108_0();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_138_6();
  v16 = *v8;
  v17 = *v6;
  OUTLINED_FUNCTION_58_28((uint64_t)v8);
  OUTLINED_FUNCTION_44_43((uint64_t)v6);
  if (v16 != v17)
  {
    OUTLINED_FUNCTION_83_19();
    OUTLINED_FUNCTION_25_55();
    OUTLINED_FUNCTION_100_7();
    OUTLINED_FUNCTION_98_10((uint64_t)v6);
    goto LABEL_7;
  }
  static ConversationControlsType.== infix(_:_:)(v4 + 8);
  v19 = v18;
  OUTLINED_FUNCTION_83_19();
  OUTLINED_FUNCTION_25_55();
  OUTLINED_FUNCTION_100_7();
  OUTLINED_FUNCTION_98_10((uint64_t)v6);
  if ((v19 & 1) == 0)
    goto LABEL_7;
  v20 = *(_BYTE *)(v3 + 64);
  if ((*(_BYTE *)(v2 + 64) & 1) != 0)
  {
    OUTLINED_FUNCTION_27_52();
    OUTLINED_FUNCTION_68_19();
    if ((v20 & 1) != 0)
    {
      OUTLINED_FUNCTION_38_50((uint64_t)v8);
      OUTLINED_FUNCTION_54_33();
      goto LABEL_13;
    }
    goto LABEL_8;
  }
  if ((*(_BYTE *)(v3 + 64) & 1) != 0)
  {
LABEL_7:
    OUTLINED_FUNCTION_27_52();
    OUTLINED_FUNCTION_68_19();
LABEL_8:
    OUTLINED_FUNCTION_38_50((uint64_t)v8);
    OUTLINED_FUNCTION_54_33();
LABEL_9:
    OUTLINED_FUNCTION_13_93();
    OUTLINED_FUNCTION_28_55();
    goto LABEL_10;
  }
  v21 = *(_QWORD *)(v2 + 56);
  v22 = *(_QWORD *)(v3 + 56);
  OUTLINED_FUNCTION_27_52();
  OUTLINED_FUNCTION_68_19();
  OUTLINED_FUNCTION_38_50((uint64_t)v8);
  OUTLINED_FUNCTION_54_33();
  if (v21 != v22)
    goto LABEL_9;
LABEL_13:
  v23 = v0 + *(int *)(v9 + 44);
  if (MEMORY[0x1C3B752C0](v23))
  {
    v24 = *(_QWORD *)(v23 + 8);
    ObjectType = swift_getObjectType();
    v26 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 48))(ObjectType, v24);
    v28 = v27;
    OUTLINED_FUNCTION_10();
  }
  else
  {
    v26 = 0;
    v28 = 0;
  }
  v29 = v1 + *(int *)(v9 + 44);
  if (MEMORY[0x1C3B752C0](v29))
  {
    v30 = *(_QWORD *)(v29 + 8);
    v31 = swift_getObjectType();
    v32 = (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 48))(v31, v30);
    v34 = v33;
    swift_unknownObjectRelease();
    if (v28)
    {
      if (v34)
      {
        if (v26 != v32 || v28 != v34)
          _stringCompareWithSmolCheck(_:_:expecting:)();
        OUTLINED_FUNCTION_27();
        OUTLINED_FUNCTION_13_93();
        OUTLINED_FUNCTION_28_55();
        OUTLINED_FUNCTION_133();
        goto LABEL_10;
      }
LABEL_25:
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_13_93();
      OUTLINED_FUNCTION_28_55();
      swift_bridgeObjectRelease_n();
      goto LABEL_10;
    }
  }
  else
  {
    if (v28)
      goto LABEL_25;
    v34 = 0;
  }
  OUTLINED_FUNCTION_13_93();
  OUTLINED_FUNCTION_28_55();
  if (v34)
    OUTLINED_FUNCTION_27();
LABEL_10:
  OUTLINED_FUNCTION_7_7();
}

uint64_t key path setter for HUDActivityManager.bannerPresentationManager : HUDActivityManager(id *a1, _QWORD **a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & **a2) + 0xB0);
  v4 = *a1;
  return v3(v2);
}

void HUDActivityManager.bannerPresentationManager.setter()
{
  OUTLINED_FUNCTION_113_11();
}

void sub_1BD3CB040(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{

  if (!a1)
    swift_unknownObjectWeakAssign();
  OUTLINED_FUNCTION_7_1(a10);
}

void HUDActivityManager.bannerPresentationManager.getter()
{
  JUMPOUT(0x1C3B752C0);
}

void HUDActivityManager.bannerPresentationManager.modify(_QWORD *a1)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = MEMORY[0x1C3B752C0](v1 + OBJC_IVAR___CNKHUDActivityManager__bannerPresentationManager);
  OUTLINED_FUNCTION_0();
}

void HUDActivityManager.bannerPresentationManager.modify(id *a1, char a2)
{
  if ((a2 & 1) != 0)
  {
    *a1;
    HUDActivityManager.bannerPresentationManager.setter();
  }
  HUDActivityManager.bannerPresentationManager.setter();
}

void sub_1BD3CB0EC()
{
  OUTLINED_FUNCTION_36();
}

uint64_t HUDActivityManager.presentedActivity.setter(uint64_t a1)
{
  return OUTLINED_FUNCTION_117_1(a1);
}

void HUDActivityManager.updateWith(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t);
  uint64_t v12;
  char v13;
  char v14;
  NSObject *v15;
  NSObject *v16;
  uint64_t v17;
  uint64_t v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  uint64_t isa;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  char v43;
  uint64_t v44;
  uint64_t v45;

  OUTLINED_FUNCTION_93();
  v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_30_6();
  v6 = type metadata accessor for HUDActivityManager.BannerUpdate(0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_79();
  OUTLINED_FUNCTION_99_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_108_0();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_138_6();
  v39 = v0;
  v10 = *(_QWORD *)(v0 + OBJC_IVAR___CNKHUDActivityManager_presentedActivity);
  if (v10)
  {
    v11 = *(void (**)(uint64_t))(**(_QWORD **)(v10
                                                       + OBJC_IVAR____TtC15ConversationKitP33_1110C52F52D8EDCF5F7A893547109D2918CoupledHUDActivity_parentActivity)
                                         + 184);
    v12 = OUTLINED_FUNCTION_21_7();
    v11(v12);
    static HUDActivityManager.BannerUpdate.== infix(_:_:)();
    v14 = v13;
    OUTLINED_FUNCTION_25_55();
    if ((v14 & 1) != 0)
    {
      v40 = 25;
      v41 = 0u;
      v42 = 0u;
      v43 = 6;
      static ConversationControlsType.== infix(_:_:)(v4 + 8);
      v16 = v15;
      outlined destroy of ConversationControlsType((uint64_t)&v40);
      if ((v16 & 1) != 0)
      {
        if (one-time initialization token for conversationControls != -1)
          swift_once();
        v17 = OUTLINED_FUNCTION_17_2();
        v18 = OUTLINED_FUNCTION_133_7(v17, (uint64_t)&static Logger.conversationControls);
        OUTLINED_FUNCTION_44_43(v18);
        Logger.logObject.getter();
        v19 = OUTLINED_FUNCTION_12_0();
        if (OUTLINED_FUNCTION_4_14(v19))
        {
          v20 = (uint8_t *)OUTLINED_FUNCTION_105();
          v21 = OUTLINED_FUNCTION_105();
          *(_DWORD *)v20 = 136315138;
          v40 = v21;
          OUTLINED_FUNCTION_38_50(v2);
          OUTLINED_FUNCTION_92_13();
          v23 = v22;
          OUTLINED_FUNCTION_96_3(v22, &demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
          v45 = OUTLINED_FUNCTION_162(v23, v24, &v40);
          OUTLINED_FUNCTION_26_38();
          OUTLINED_FUNCTION_58_1();
          OUTLINED_FUNCTION_83_19();
          OUTLINED_FUNCTION_48(&dword_1BD004000, v16, (os_log_type_t)v1, "HUDActivityManager - adding bannerUpdate: %s, same as presentedActivity, not adding", v20);
          OUTLINED_FUNCTION_21();
          OUTLINED_FUNCTION_60();
        }
        OUTLINED_FUNCTION_83_19();

        goto LABEL_16;
      }
    }
    swift_release();
  }
  v25 = (v39 + OBJC_IVAR___CNKHUDActivityManager_updates);
  OUTLINED_FUNCTION_2_0();
  isa = (uint64_t)v25->isa;
  swift_bridgeObjectRetain();
  specialized Collection<>.firstIndex(of:)(v4, isa);
  v28 = v27;
  OUTLINED_FUNCTION_25();
  if ((v28 & 1) == 0)
  {
    OUTLINED_FUNCTION_60_0();
    specialized Array.remove(at:)();
    OUTLINED_FUNCTION_25_55();
    OUTLINED_FUNCTION_13_33();
  }
  OUTLINED_FUNCTION_60_0();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  v29 = *((_QWORD *)v25->isa + 2);
  specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v29);
  *((_QWORD *)v25->isa + 2) = v29 + 1;
  OUTLINED_FUNCTION_119_3();
  outlined init with copy of HUDActivityManager.BannerUpdate(v4, v30 + *(_QWORD *)(v7 + 72) * v29);
  OUTLINED_FUNCTION_13_33();
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v31 = OUTLINED_FUNCTION_17_2();
  v32 = OUTLINED_FUNCTION_133_7(v31, (uint64_t)&static Logger.conversationControls);
  OUTLINED_FUNCTION_106_12(v32);
  Logger.logObject.getter();
  v33 = OUTLINED_FUNCTION_12_0();
  if (os_log_type_enabled(v25, v33))
  {
    v34 = (uint8_t *)OUTLINED_FUNCTION_105();
    v45 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v34 = 136315138;
    OUTLINED_FUNCTION_38_50(v1);
    OUTLINED_FUNCTION_92_13();
    OUTLINED_FUNCTION_96_3(v35, &demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
    v36 = OUTLINED_FUNCTION_315_0();
    v44 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v36, v37, v38);
    OUTLINED_FUNCTION_26_38();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_59_27();
    OUTLINED_FUNCTION_48(&dword_1BD004000, v25, v33, "HUDActivityManager - adding bannerUpdate: %s", v34);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_59_27();

  HUDActivityManager.checkUpdatesAndPresentIfNeeded()();
LABEL_16:
  OUTLINED_FUNCTION_52_1();
}

uint64_t HUDActivityManager.checkUpdatesAndPresentIfNeeded()()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  NSObject *v30;
  int v31;
  _BOOL4 v32;
  uint8_t *v33;
  void *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  char v51;
  char v52;
  char *v53;
  NSObject *v54;
  os_log_type_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(uint64_t);
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  NSObject *v81;
  os_log_type_t v82;
  uint8_t *v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  _QWORD *v90;
  void *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  NSObject *v95;
  os_log_type_t v96;
  uint8_t *v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  char v101;
  uint64_t v102;
  _QWORD *v103;
  void *v104;
  _QWORD *v105;
  uint64_t v106;
  uint64_t ObjectType;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t (*v111)(void);
  char v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char v116;
  int v117;
  int v118;
  uint64_t v119;
  NSObject *v120;
  int v121;
  _BOOL4 v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  unint64_t v133;
  uint64_t v134;
  unint64_t v135;
  unint64_t v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;
  unint64_t v140;
  unint64_t v141;
  os_log_t v142;
  void *v143;
  uint64_t v144;
  uint64_t v145;
  int v146;
  NSObject *v147;
  os_log_type_t v148;
  uint64_t v149;
  void *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  unint64_t v161;
  unint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  char *v166;
  _QWORD *v167;
  uint64_t (*v168)(void);
  char *v169;
  _QWORD *v170;
  void *v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  void (*v175)(uint64_t *, uint64_t, _QWORD, char *, _QWORD, char *, char *);
  char *v176;
  char *v177;
  uint64_t v178;
  char *v179;
  void *v180;
  id v181;
  uint64_t v182;
  uint64_t v183;
  NSObject *v184;
  os_log_type_t v185;
  uint8_t *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  unint64_t v196;
  unint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  id v201;
  id v202;
  NSObject *v203;
  os_log_type_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  unint64_t v214;
  unint64_t v215;
  id v216;
  uint64_t v217;
  unint64_t v218;
  void *v219;
  _BYTE *v220;
  _QWORD *v221;
  uint64_t v222;
  int8x16_t v223;
  uint64_t v224;
  NSObject *v225;
  os_log_type_t v226;
  uint8_t *v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  unint64_t v237;
  unint64_t v238;
  _QWORD *v239;
  void *v240;
  void *v241;
  uint64_t v242;
  uint64_t v243;
  unint64_t v244;
  unint64_t v245;
  uint64_t v246;
  void *v247;
  NSObject *v248;
  os_log_type_t v249;
  uint8_t *v250;
  _BYTE *v251;
  char *v252;
  char v253;
  uint64_t v255;
  void *v256;
  void *v257;
  os_log_t v258;
  uint8_t *v259;
  NSObject *v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t *v264;
  uint64_t v265;
  char *v266;
  char *v267;
  char *v268;
  uint64_t v269;
  uint64_t v270;
  void *v271;
  uint64_t v272;
  char *v273;
  uint64_t v274;
  char *v275;
  void *v276;
  _BYTE aBlock[48];
  uint64_t v278;
  uint64_t v279;
  char v280;
  id v281[2];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
  MEMORY[0x1E0C80A78](v1);
  v273 = (char *)&v255 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v274 = type metadata accessor for HUDActivityManager.BannerUpdate(0);
  v3 = *(_QWORD *)(v274 - 8);
  MEMORY[0x1E0C80A78](v274);
  v266 = (char *)&v255 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v263 = (uint64_t)&v255 - v6;
  MEMORY[0x1E0C80A78](v7);
  v262 = (uint64_t)&v255 - v8;
  MEMORY[0x1E0C80A78](v9);
  v270 = (uint64_t)&v255 - v10;
  MEMORY[0x1E0C80A78](v11);
  v269 = (uint64_t)&v255 - v12;
  MEMORY[0x1E0C80A78](v13);
  v268 = (char *)&v255 - v14;
  MEMORY[0x1E0C80A78](v15);
  v267 = (char *)&v255 - v16;
  MEMORY[0x1E0C80A78](v17);
  v272 = (uint64_t)&v255 - v18;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v255 - v20;
  v261 = v22;
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v255 - v24;
  v26 = (uint64_t *)&v0[OBJC_IVAR___CNKHUDActivityManager_updates];
  swift_beginAccess();
  specialized MutableCollection<>.sort(by:)(v26);
  v271 = 0;
  swift_endAccess();
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v27 = type metadata accessor for Logger();
  v28 = __swift_project_value_buffer(v27, (uint64_t)&static Logger.conversationControls);
  v29 = v0;
  v276 = (void *)v28;
  v30 = Logger.logObject.getter();
  v31 = static os_log_type_t.default.getter();
  v32 = os_log_type_enabled(v30, (os_log_type_t)v31);
  v275 = v21;
  v265 = v3;
  v264 = v26;
  if (v32)
  {
    v33 = (uint8_t *)swift_slowAlloc();
    v34 = (void *)swift_slowAlloc();
    v35 = v34;
    v281[0] = v34;
    *(_DWORD *)v33 = 136315138;
    v36 = *v26;
    v37 = *(_QWORD *)(*v26 + 16);
    v38 = MEMORY[0x1E0DEE9D8];
    if (v37)
    {
      v257 = v34;
      LODWORD(v258) = v31;
      v259 = v33;
      v260 = v30;
      v279 = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRetain();
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      v39 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
      v256 = (void *)v36;
      v40 = v36 + v39;
      v41 = *(_QWORD *)(v3 + 72);
      v38 = v279;
      do
      {
        outlined init with copy of HUDActivityManager.BannerUpdate(v40, (uint64_t)v25);
        outlined init with copy of ConversationControlsType((uint64_t)(v25 + 8), (uint64_t)aBlock);
        v278 = *(_QWORD *)v25;
        outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v25);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          v38 = v279;
        }
        v42 = *(_QWORD *)(v38 + 16);
        if (v42 >= *(_QWORD *)(v38 + 24) >> 1)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          v38 = v279;
        }
        *(_QWORD *)(v38 + 16) = v42 + 1;
        v43 = v38 + 56 * v42;
        v44 = *(_OWORD *)aBlock;
        v45 = *(_OWORD *)&aBlock[16];
        v46 = *(_OWORD *)&aBlock[32];
        *(_QWORD *)(v43 + 80) = v278;
        *(_OWORD *)(v43 + 48) = v45;
        *(_OWORD *)(v43 + 64) = v46;
        *(_OWORD *)(v43 + 32) = v44;
        v40 += v41;
        --v37;
      }
      while (v37);
      swift_bridgeObjectRelease();
      v30 = v260;
      v33 = v259;
      LOBYTE(v31) = (_BYTE)v258;
      v35 = v257;
    }
    v47 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ConversationControlsType, HUDActivityManager.RelevanceScore));
    v48 = MEMORY[0x1C3B7304C](v38, v47);
    v50 = v49;
    swift_bridgeObjectRelease();
    *(_QWORD *)aBlock = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v48, v50, (uint64_t *)v281);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BD004000, v30, (os_log_type_t)v31, "HUDActivityManager currentUpdates: %s", v33, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v35, -1, -1);
    MEMORY[0x1C3B751B8](v33, -1, -1);
  }
  else
  {

  }
  HUDActivityManager.shouldReplace()();
  v52 = v51;
  v53 = v29;
  v54 = Logger.logObject.getter();
  v55 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v54, v55))
  {
    v56 = swift_slowAlloc();
    v57 = swift_slowAlloc();
    *(_QWORD *)aBlock = v57;
    *(_DWORD *)v56 = 67109378;
    LODWORD(v281[0]) = v52 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v56 + 8) = 2080;
    HUDActivityManager.shouldUpdate()();
    LOBYTE(v281[0]) = v58 & 1;
    v59 = String.init<A>(reflecting:)();
    v281[0] = (id)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v59, v60, (uint64_t *)aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BD004000, v54, v55, "HUDActivityManager - shouldReplace: %{BOOL}d shouldUpdate: %s", (uint8_t *)v56, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v57, -1, -1);
    MEMORY[0x1C3B751B8](v56, -1, -1);
  }
  else
  {

  }
  v61 = (uint64_t)v273;
  if ((v52 & 1) == 0)
  {
    HUDActivityManager.shouldUpdate()();
    if ((v62 & 1) == 0)
      return 0;
  }
  HUDActivityManager.getCurrentUpdate()(v61);
  if (__swift_getEnumTagSinglePayload(v61, 1, v274) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v61, &demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
    return 0;
  }
  outlined init with take of HUDActivityManager.BannerUpdate(v61, (uint64_t)v275);
  v64 = HUDActivityManager.presentedDynamicIsland.getter();
  v273 = v65;
  v66 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  if (v64)
  {
    v67 = v64;
    goto LABEL_24;
  }
  v90 = (_QWORD *)(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)v53) + 0xA8))();
  if (v90)
  {
    v91 = v90;
    v92 = (*(uint64_t (**)(void))((*v66 & *v90) + 0x1E0))();

    if (v92)
    {
      type metadata accessor for SystemBannerHostViewController();
      v93 = swift_dynamicCastClass();
      if (v93)
      {
        v67 = v93;
        v273 = (char *)&protocol witness table for SystemBannerHostViewController;
LABEL_24:
        v68 = *(_QWORD *)&v53[OBJC_IVAR___CNKHUDActivityManager_presentedActivity];
        v260 = v67;
        if ((v52 & 1) != 0)
        {
          v69 = v265;
          if (v68)
          {
            v70 = OBJC_IVAR____TtC15ConversationKitP33_1110C52F52D8EDCF5F7A893547109D2918CoupledHUDActivity_parentActivity;
            v71 = *(void (**)(uint64_t))(**(_QWORD **)(v68
                                                               + OBJC_IVAR____TtC15ConversationKitP33_1110C52F52D8EDCF5F7A893547109D2918CoupledHUDActivity_parentActivity)
                                                 + 184);
            v72 = swift_retain();
            v71(v72);
            v73 = v25[65];
            v74 = outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v25);
            if ((v73 & 1) == 0)
            {
              (*(void (**)(uint64_t))(**(_QWORD **)(v68 + v70) + 184))(v74);
              v75 = v264;
              swift_beginAccess();
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
              v76 = *(_QWORD *)(*v75 + 16);
              specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v76);
              v77 = *v75;
              *(_QWORD *)(v77 + 16) = v76 + 1;
              outlined init with take of HUDActivityManager.BannerUpdate((uint64_t)v25, v77+ ((*(unsigned __int8 *)(v69 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80))+ *(_QWORD *)(v69 + 72) * v76);
              swift_endAccess();
            }
          }
          v78 = (uint64_t)v275;
          outlined init with copy of HUDActivityManager.BannerUpdate((uint64_t)v275, (uint64_t)v25);
          swift_allocObject();
          swift_unknownObjectWeakInit();
          type metadata accessor for CoupledHUDActivity(0);
          swift_allocObject();
          v79 = CoupledHUDActivity.init(withUpdate:dismissHandler:)((uint64_t)v25, (uint64_t)partial apply for closure #2 in HUDActivityManager.checkUpdatesAndPresentIfNeeded());
          swift_release();
          v80 = v53;
          v81 = Logger.logObject.getter();
          v82 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v81, v82))
          {
            v83 = (uint8_t *)swift_slowAlloc();
            v84 = (void *)swift_slowAlloc();
            v281[0] = v84;
            *(_DWORD *)v83 = 136315138;
            v85 = HUDActivityManager.presentedDynamicIsland.getter();
            if (v85)
            {
              *(_QWORD *)aBlock = v85;
              *(_QWORD *)&aBlock[8] = v86;
              __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ActivityBanner);
              v87 = String.init<A>(reflecting:)();
              v89 = v88;
            }
            else
            {
              v87 = 7104878;
              v89 = 0xE300000000000000;
            }
            *(_QWORD *)aBlock = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v87, v89, (uint64_t *)v281);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();

            _os_log_impl(&dword_1BD004000, v81, v82, "HUDActivityManager - current DI %s", v83, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x1C3B751B8](v84, -1, -1);
            MEMORY[0x1C3B751B8](v83, -1, -1);

            v78 = (uint64_t)v275;
          }
          else
          {

          }
          *(_QWORD *)(v79
                    + OBJC_IVAR____TtC15ConversationKitP33_1110C52F52D8EDCF5F7A893547109D2918CoupledHUDActivity_banner
                    + 8) = v273;
          v94 = swift_unknownObjectWeakAssign();
          v68 = v79;
          v66 = (_QWORD *)MEMORY[0x1E0DEEDD8];
        }
        else
        {
          v94 = swift_retain();
          v78 = (uint64_t)v275;
        }
        if (((*(uint64_t (**)(uint64_t))((*v66 & **(_QWORD **)&v53[OBJC_IVAR___CNKHUDActivityManager_features])
                                                 + 0x50))(v94) & 1) == 0)
        {
          v95 = Logger.logObject.getter();
          v96 = static os_log_type_t.fault.getter();
          if (os_log_type_enabled(v95, v96))
          {
            v97 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v97 = 0;
            _os_log_impl(&dword_1BD004000, v95, v96, "HUDActivityManager - Invalid state: features.isSystemApertureEnabled is false but presentedSystemApertureElement != nil", v97, 2u);
            MEMORY[0x1C3B751B8](v97, -1, -1);
          }

        }
        v264 = (uint64_t *)(v78 + 8);
        ConversationControlsType.associatedNotice.getter((uint64_t)aBlock);
        v98 = *(_QWORD *)&aBlock[24];
        if (*(_QWORD *)&aBlock[24])
        {
          v99 = *(_QWORD *)&aBlock[32];
          __swift_project_boxed_opaque_existential_1(aBlock, *(uint64_t *)&aBlock[24]);
          (*(void (**)(id *__return_ptr, uint64_t, uint64_t))(v99 + 64))(v281, v98, v99);
          v100 = (char)v281[0];
          __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
          if ((v100 & 1) != 0)
          {
            v101 = _stringCompareWithSmolCheck(_:_:expecting:)();
            v102 = swift_bridgeObjectRelease();
            if ((v101 & 1) == 0)
              goto LABEL_54;
          }
          else
          {
            v102 = swift_bridgeObjectRelease();
          }
          v103 = (_QWORD *)(*(uint64_t (**)(uint64_t))((*v66 & *(_QWORD *)v53) + 0xA8))(v102);
          if (v103)
          {
            v104 = v103;
            v105 = (_QWORD *)(*(uint64_t (**)(void))((*v66 & *v103) + 0x188))();

            if (v105)
            {
              v106 = (*(uint64_t (**)(void))((*v66 & *v105) + 0x1D8))();

              if (v106 == 3)
              {
                ObjectType = swift_getObjectType();
                LODWORD(v259) = (*((uint64_t (**)(uint64_t))v273 + 1))(ObjectType);
                goto LABEL_55;
              }
            }
          }
        }
        else
        {
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)aBlock, (uint64_t *)&demangling cache variable for type metadata for Notice?);
        }
LABEL_54:
        LODWORD(v259) = 1;
LABEL_55:
        v108 = (uint64_t)v267;
        v109 = (uint64_t)v268;
        v110 = swift_getObjectType();
        v111 = (uint64_t (*)(void))*((_QWORD *)v273 + 1);
        v268 = (char *)v110;
        v112 = v111();
        v113 = v272;
        outlined init with copy of HUDActivityManager.BannerUpdate(v78, v272);
        if ((v112 & 1) != 0)
        {
          ConversationControlsType.associatedNotice.getter((uint64_t)aBlock);
          v114 = *(_QWORD *)&aBlock[24];
          if (*(_QWORD *)&aBlock[24])
          {
            v115 = *(_QWORD *)&aBlock[32];
            __swift_project_boxed_opaque_existential_1(aBlock, *(uint64_t *)&aBlock[24]);
            (*(void (**)(id *__return_ptr, uint64_t, uint64_t))(v115 + 64))(v281, v114, v115);
            v116 = (char)v281[0];
            __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
            specialized == infix<A>(_:_:)(v116, 0);
            v118 = v117;
          }
          else
          {
            outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)aBlock, (uint64_t *)&demangling cache variable for type metadata for Notice?);
            v118 = 0;
          }
          v113 = v272;
        }
        else
        {
          v118 = 0;
        }
        outlined destroy of HUDActivityManager.BannerUpdate(v113);
        outlined init with copy of HUDActivityManager.BannerUpdate(v78, v108);
        outlined init with copy of HUDActivityManager.BannerUpdate(v78, v109);
        v119 = v269;
        outlined init with copy of HUDActivityManager.BannerUpdate(v78, v269);
        swift_unknownObjectRetain_n();
        v120 = Logger.logObject.getter();
        v121 = static os_log_type_t.default.getter();
        v122 = os_log_type_enabled(v120, (os_log_type_t)v121);
        v272 = v68;
        if (v122)
        {
          LODWORD(v257) = v121;
          v258 = v120;
          LODWORD(v267) = v118;
          v123 = swift_slowAlloc();
          v256 = (void *)swift_slowAlloc();
          v281[0] = v256;
          *(_DWORD *)v123 = 136447490;
          outlined init with copy of ConversationControlsType(v108 + 8, (uint64_t)aBlock);
          v131 = specialized >> prefix<A>(_:)((uint64_t)aBlock, v124, v125, v126, v127, v128, v129, v130);
          v133 = v132;
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)aBlock, &demangling cache variable for type metadata for ConversationControlsType?);
          *(_QWORD *)aBlock = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v131, v133, (uint64_t *)v281);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          outlined destroy of HUDActivityManager.BannerUpdate(v108);
          *(_WORD *)(v123 + 12) = 2080;
          ConversationControlsType.associatedNotice.getter((uint64_t)aBlock);
          v134 = specialized >> prefix<A>(_:)((uint64_t)aBlock);
          v136 = v135;
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)aBlock, (uint64_t *)&demangling cache variable for type metadata for Notice?);
          *(_QWORD *)aBlock = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v134, v136, (uint64_t *)v281);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          outlined destroy of HUDActivityManager.BannerUpdate(v109);
          *(_WORD *)(v123 + 22) = 2082;
          *(_QWORD *)aBlock = (*((uint64_t (**)(char *))v273 + 2))(v268);
          v137 = String.init<A>(reflecting:)();
          *(_QWORD *)aBlock = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v137, v138, (uint64_t *)v281);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease_n();
          *(_WORD *)(v123 + 32) = 2082;
          if ((*(_BYTE *)(v119 + 64) & 1) != 0)
          {
            v139 = 7104878;
            v140 = 0xE300000000000000;
          }
          else
          {
            *(_QWORD *)aBlock = *(_QWORD *)(v119 + 56);
            v139 = String.init<A>(reflecting:)();
            v140 = v141;
          }
          *(_QWORD *)aBlock = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v139, v140, (uint64_t *)v281);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          outlined destroy of HUDActivityManager.BannerUpdate(v119);
          *(_WORD *)(v123 + 42) = 1024;
          *(_DWORD *)aBlock = v259 & 1;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v123 + 48) = 1024;
          LOBYTE(v118) = (_BYTE)v267;
          *(_DWORD *)aBlock = v267 & 1;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          v142 = v258;
          _os_log_impl(&dword_1BD004000, v258, (os_log_type_t)v257, "HUDActivityManager - updateSystemApertureElement type:%{public}s,\nnotice:%s,\ncurrent sizeClass:%{public}s,\nupdated sizeClass:%{public}s,\nshouldDismissPresentedBanner:%{BOOL}d,\nshouldIgnoreSizeClassUpdate:%{BOOL}d", (uint8_t *)v123, 0x36u);
          v143 = v256;
          swift_arrayDestroy();
          MEMORY[0x1C3B751B8](v143, -1, -1);
          MEMORY[0x1C3B751B8](v123, -1, -1);

        }
        else
        {
          outlined destroy of HUDActivityManager.BannerUpdate(v108);
          outlined destroy of HUDActivityManager.BannerUpdate(v109);
          swift_unknownObjectRelease_n();
          outlined destroy of HUDActivityManager.BannerUpdate(v119);

        }
        v144 = (uint64_t)v275;
        v145 = v270;
        if ((v118 & 1) != 0)
        {
          v269 = 0;
          v146 = 1;
        }
        else
        {
          v269 = *((_QWORD *)v275 + 7);
          v146 = v275[64];
        }
        LODWORD(v267) = v146;
        outlined init with copy of HUDActivityManager.BannerUpdate((uint64_t)v275, v270);
        v147 = Logger.logObject.getter();
        v148 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v147, v148))
        {
          v149 = swift_slowAlloc();
          v150 = (void *)swift_slowAlloc();
          v281[0] = v150;
          *(_DWORD *)v149 = 136446210;
          v258 = (os_log_t)(v149 + 4);
          outlined init with copy of ConversationControlsType(v145 + 8, (uint64_t)aBlock);
          v158 = specialized >> prefix<A>(_:)((uint64_t)aBlock, v151, v152, v153, v154, v155, v156, v157);
          v159 = v53;
          v160 = v145;
          v162 = v161;
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)aBlock, &demangling cache variable for type metadata for ConversationControlsType?);
          *(_QWORD *)aBlock = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v158, v162, (uint64_t *)v281);
          v163 = (uint64_t)v275;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          v164 = v160;
          v53 = v159;
          v144 = v163;
          outlined destroy of HUDActivityManager.BannerUpdate(v164);
          _os_log_impl(&dword_1BD004000, v147, v148, "HUDActivityManager - Updating banner %{public}s", (uint8_t *)v149, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C3B751B8](v150, -1, -1);
          MEMORY[0x1C3B751B8](v149, -1, -1);
        }
        else
        {
          outlined destroy of HUDActivityManager.BannerUpdate(v145);
        }

        v165 = *(char **)(v144 + *(int *)(v274 + 40));
        v166 = v165;
        if (!v165)
        {
          if (MEMORY[0x1C3B752C0](v144 + *(int *)(v274 + 44)))
          {
            type metadata accessor for ConversationControlsManager(0);
            swift_getObjectType();
            swift_unknownObjectRetain();
            v166 = specialized ConversationControlsManager.__allocating_init(activeCall:)();
            v167 = (_QWORD *)MEMORY[0x1E0DEEDD8];
            v168 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)v53) + 0xA8);
            v169 = v166;
            v170 = (_QWORD *)v168();
            if (v170)
            {
              v171 = v170;
              v172 = (*(uint64_t (**)(void))((*v167 & *v170) + 0x100))();

            }
            else
            {
              v172 = 0;
            }
            v173 = (*(uint64_t (**)(uint64_t))((*v167 & *(_QWORD *)v169) + 0x468))(v172);
            ((uint64_t (*)(uint64_t))v168)(v173);
            (*(void (**)(void))((*v167 & *(_QWORD *)v169) + 0x408))();
            swift_unknownObjectRelease();

            v144 = (uint64_t)v275;
          }
          else
          {
            v166 = 0;
          }
        }
        v174 = v273;
        v175 = (void (*)(uint64_t *, uint64_t, _QWORD, char *, _QWORD, char *, char *))*((_QWORD *)v273 + 4);
        v176 = v165;
        v177 = v166;
        v178 = (uint64_t)v264;
        v179 = v166;
        v180 = v271;
        v175(v264, v269, v267, v179, 0, v268, v174);
        if (v180)
        {

          v281[0] = v180;
          v181 = v180;
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
          if (swift_dynamicCast())
          {
            v182 = (uint64_t)v266;
            if (v280 == 3)
            {

              v224 = v263;
              outlined init with copy of HUDActivityManager.BannerUpdate(v144, v263);
              v225 = Logger.logObject.getter();
              v226 = static os_log_type_t.default.getter();
              if (os_log_type_enabled(v225, v226))
              {
                v227 = (uint8_t *)swift_slowAlloc();
                v228 = swift_slowAlloc();
                v279 = v228;
                *(_DWORD *)v227 = 136446210;
                outlined init with copy of ConversationControlsType(v224 + 8, (uint64_t)aBlock);
                v236 = specialized >> prefix<A>(_:)((uint64_t)aBlock, v229, v230, v231, v232, v233, v234, v235);
                v238 = v237;
                outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)aBlock, &demangling cache variable for type metadata for ConversationControlsType?);
                *(_QWORD *)aBlock = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v236, v238, &v279);
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                swift_bridgeObjectRelease();
                outlined destroy of HUDActivityManager.BannerUpdate(v224);
                _os_log_impl(&dword_1BD004000, v225, v226, "HUDActivityManager - Unable to update presented system aperture element during continuity session for type %{public}s", v227, 0xCu);
                swift_arrayDestroy();
                MEMORY[0x1C3B751B8](v228, -1, -1);
                MEMORY[0x1C3B751B8](v227, -1, -1);
              }
              else
              {
                outlined destroy of HUDActivityManager.BannerUpdate(v224);
              }

              lazy protocol witness table accessor for type BannerPresentationError and conformance BannerPresentationError();
              v63 = swift_allocError();
              v253 = 10;
              goto LABEL_116;
            }
            if (v280 == 2)
            {

              v183 = v262;
              outlined init with copy of HUDActivityManager.BannerUpdate(v144, v262);
              v184 = Logger.logObject.getter();
              v185 = static os_log_type_t.error.getter();
              if (os_log_type_enabled(v184, v185))
              {
                v186 = (uint8_t *)swift_slowAlloc();
                v187 = swift_slowAlloc();
                v279 = v187;
                *(_DWORD *)v186 = 136446210;
                outlined init with copy of ConversationControlsType(v183 + 8, (uint64_t)aBlock);
                v195 = specialized >> prefix<A>(_:)((uint64_t)aBlock, v188, v189, v190, v191, v192, v193, v194);
                v197 = v196;
                outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)aBlock, &demangling cache variable for type metadata for ConversationControlsType?);
                *(_QWORD *)aBlock = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v195, v197, &v279);
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                swift_bridgeObjectRelease();
                outlined destroy of HUDActivityManager.BannerUpdate(v183);
                _os_log_impl(&dword_1BD004000, v184, v185, "HUDActivityManager - Unable to update presented system aperture element for unsupported type %{public}s", v186, 0xCu);
                swift_arrayDestroy();
                MEMORY[0x1C3B751B8](v187, -1, -1);
                MEMORY[0x1C3B751B8](v186, -1, -1);
              }
              else
              {
                outlined destroy of HUDActivityManager.BannerUpdate(v183);
              }

              lazy protocol witness table accessor for type BannerPresentationError and conformance BannerPresentationError();
              v63 = swift_allocError();
              v253 = 9;
LABEL_116:
              *v252 = v253;
              swift_unknownObjectRelease();
              outlined destroy of HUDActivityManager.BannerUpdate(v144);

LABEL_117:
              swift_release();
              return v63;
            }
          }
          else
          {
            v182 = (uint64_t)v266;
          }

          outlined init with copy of HUDActivityManager.BannerUpdate(v144, v182);
          v201 = v180;
          v202 = v180;
          v203 = Logger.logObject.getter();
          v204 = static os_log_type_t.fault.getter();
          if (os_log_type_enabled(v203, v204))
          {
            v205 = swift_slowAlloc();
            v276 = (void *)swift_slowAlloc();
            v281[0] = v276;
            *(_DWORD *)v205 = 136446466;
            outlined init with copy of ConversationControlsType(v182 + 8, (uint64_t)aBlock);
            v213 = specialized >> prefix<A>(_:)((uint64_t)aBlock, v206, v207, v208, v209, v210, v211, v212);
            v215 = v214;
            outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)aBlock, &demangling cache variable for type metadata for ConversationControlsType?);
            *(_QWORD *)aBlock = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v213, v215, (uint64_t *)v281);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            v144 = (uint64_t)v275;
            swift_bridgeObjectRelease();
            outlined destroy of HUDActivityManager.BannerUpdate(v182);
            *(_WORD *)(v205 + 12) = 2080;
            *(_QWORD *)aBlock = v180;
            v216 = v180;
            v217 = String.init<A>(reflecting:)();
            *(_QWORD *)aBlock = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v217, v218, (uint64_t *)v281);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();

            _os_log_impl(&dword_1BD004000, v203, v204, "HUDActivityManager - Unable to update presented system aperture element for type %{public}s: %s", (uint8_t *)v205, 0x16u);
            v219 = v276;
            swift_arrayDestroy();
            MEMORY[0x1C3B751B8](v219, -1, -1);
            MEMORY[0x1C3B751B8](v205, -1, -1);
          }
          else
          {
            outlined destroy of HUDActivityManager.BannerUpdate(v182);

          }
          dismissExistingBanner #1 () in HUDActivityManager.checkUpdatesAndPresentIfNeeded()(v259 & 1);
          lazy protocol witness table accessor for type BannerPresentationError and conformance BannerPresentationError();
          v63 = swift_allocError();
          *v220 = 8;

          swift_unknownObjectRelease();
          outlined destroy of HUDActivityManager.BannerUpdate(v144);
          goto LABEL_117;
        }

        v198 = v272;
        v199 = swift_retain();
        HUDActivityManager.presentedActivity.setter(v199);
        if (v198)
          v200 = MEMORY[0x1C3B752C0](v198+ OBJC_IVAR____TtC15ConversationKitP33_1110C52F52D8EDCF5F7A893547109D2918CoupledHUDActivity_banner);
        else
          v200 = 0;
        v221 = (_QWORD *)MEMORY[0x1E0DEEDD8];
        HUDActivityManager.presentedDynamicIsland.setter(v200);
        v222 = outlined init with copy of ConversationControlsType(v178, (uint64_t)aBlock);
        if (aBlock[40] == 3)
        {
          v222 = outlined destroy of ConversationControlsType((uint64_t)aBlock);
        }
        else if (aBlock[40] != 4)
        {
          if (aBlock[40] != 6
            || *(_QWORD *)aBlock != 25
            || (v223 = vorrq_s8(*(int8x16_t *)&aBlock[8], *(int8x16_t *)&aBlock[24]),
                *(_QWORD *)&vorr_s8(*(int8x8_t *)v223.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v223, v223, 8uLL))))
          {
            outlined destroy of ConversationControlsType((uint64_t)aBlock);
            goto LABEL_106;
          }
        }
        v239 = (_QWORD *)(*(uint64_t (**)(uint64_t))((*v221 & *(_QWORD *)v53) + 0xA8))(v222);
        if (v239)
        {
          v240 = v239;
          v241 = (void *)(*(uint64_t (**)(void))((*v221 & *v239) + 0xE8))();

          if (v241)
          {
            v242 = swift_allocObject();
            swift_unknownObjectWeakInit();
            v243 = swift_allocObject();
            swift_weakInit();
            outlined init with copy of HUDActivityManager.BannerUpdate(v144, (uint64_t)v25);
            v244 = (*(unsigned __int8 *)(v265 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v265 + 80);
            v245 = (v261 + v244 + 7) & 0xFFFFFFFFFFFFFFF8;
            v246 = swift_allocObject();
            *(_QWORD *)(v246 + 16) = v242;
            outlined init with take of HUDActivityManager.BannerUpdate((uint64_t)v25, v246 + v244);
            *(_QWORD *)(v246 + v245) = v243;
            *(_QWORD *)&aBlock[32] = partial apply for closure #3 in HUDActivityManager.checkUpdatesAndPresentIfNeeded();
            *(_QWORD *)&aBlock[40] = v246;
            *(_QWORD *)aBlock = MEMORY[0x1E0C809B0];
            *(_QWORD *)&aBlock[8] = 1107296256;
            *(_QWORD *)&aBlock[16] = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ();
            *(_QWORD *)&aBlock[24] = &block_descriptor_73;
            v247 = _Block_copy(aBlock);
            swift_release();
            objc_msgSend(v241, sel_bannerPresentationManagerRequestToPresentBanner_, v247);
            _Block_release(v247);
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
            outlined destroy of HUDActivityManager.BannerUpdate(v144);
LABEL_107:

            return 0;
          }
        }
LABEL_106:
        outlined destroy of HUDActivityManager.BannerUpdate(v144);
        swift_unknownObjectRelease();
        goto LABEL_107;
      }
      swift_unknownObjectRelease();
    }
  }
  v248 = Logger.logObject.getter();
  v249 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v248, v249))
  {
    v250 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v250 = 0;
    _os_log_impl(&dword_1BD004000, v248, v249, "HUDActivityManager - Unable to makeSystemApertureElementProvider", v250, 2u);
    MEMORY[0x1C3B751B8](v250, -1, -1);
  }

  lazy protocol witness table accessor for type BannerPresentationError and conformance BannerPresentationError();
  v63 = swift_allocError();
  *v251 = 8;
  outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v275);
  return v63;
}

void HUDActivityManager.activityWith(_:)()
{
  _QWORD *v0;

  OUTLINED_FUNCTION_0();
}

Swift::Void __swiftcall HUDActivityManager.dismissPresentedActivity()()
{
  char *v0;
  char *v1;

  if (*(_QWORD *)&v0[OBJC_IVAR___CNKHUDActivityManager_presentedActivity])
  {
    v1 = v0;
    OUTLINED_FUNCTION_11_8();
    HUDActivityManager.dismissActivity(_:)();
    swift_release();
    OUTLINED_FUNCTION_7_1(v1);
  }
  else
  {
    OUTLINED_FUNCTION_36();
  }
}

Swift::Void __swiftcall HUDActivityManager.reset()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = (_QWORD *)((char *)v0 + OBJC_IVAR___CNKHUDActivityManager_updates);
  OUTLINED_FUNCTION_2_0();
  *v1 = MEMORY[0x1E0DEE9D8];
  v2 = swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))(v2);
  OUTLINED_FUNCTION_43_1();
}

Swift::Void __swiftcall HUDActivityManager.dismissTemporaryActivity()()
{
  uint64_t v0;
  char v1;

  if (*(_QWORD *)(v0 + OBJC_IVAR___CNKHUDActivityManager_presentedActivity))
  {
    OUTLINED_FUNCTION_11_8();
    HUDActivity.isPersistent.getter();
    if ((v1 & 1) == 0)
      HUDActivityManager.dismissActivity(_:)();
    swift_release();
  }
  else
  {
    OUTLINED_FUNCTION_18();
  }
}

void HUDActivityManager.shouldUpdate()()
{
  uint64_t v0;
  uint64_t v1;
  double *v2;
  uint64_t v3;
  uint64_t v4;
  double *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t);
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  int v37;
  uint64_t v38;
  _QWORD v39[7];
  uint64_t v40[4];

  OUTLINED_FUNCTION_93();
  v6 = OUTLINED_FUNCTION_63_0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_58_0();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_132_9();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_81_2();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_99_1();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_101_1();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v36 - v13;
  v15 = v0 + OBJC_IVAR___CNKHUDActivityManager_updates;
  OUTLINED_FUNCTION_2_0();
  v16 = *(_QWORD *)(*(_QWORD *)v15 + 16);
  if (v16)
  {
    OUTLINED_FUNCTION_38_50(*(_QWORD *)v15+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * (v16 - 1));
    v17 = *(_QWORD *)(v0 + OBJC_IVAR___CNKHUDActivityManager_presentedActivity);
    if (v17)
    {
      v18 = *(void (**)(uint64_t))(**(_QWORD **)(v17
                                                         + OBJC_IVAR____TtC15ConversationKitP33_1110C52F52D8EDCF5F7A893547109D2918CoupledHUDActivity_parentActivity)
                                           + 184);
      v19 = swift_retain();
      v18(v19);
      swift_release();
      outlined init with take of HUDActivityManager.BannerUpdate(v3, v1);
      static ConversationControlsType.== infix(_:_:)((uint64_t)(v14 + 8));
      v21 = v20;
      if (one-time initialization token for conversationControls != -1)
        swift_once();
      v22 = OUTLINED_FUNCTION_17_2();
      v23 = __swift_project_value_buffer(v22, (uint64_t)&static Logger.conversationControls);
      OUTLINED_FUNCTION_98_10(v1);
      outlined init with copy of HUDActivityManager.BannerUpdate(v1, v4);
      OUTLINED_FUNCTION_185_3((uint64_t)v14);
      Logger.logObject.getter();
      v24 = OUTLINED_FUNCTION_12_0();
      v25 = v24;
      if (os_log_type_enabled(v23, v24))
      {
        v26 = OUTLINED_FUNCTION_105();
        v37 = v25;
        v27 = v26;
        v38 = OUTLINED_FUNCTION_105();
        v40[0] = v38;
        *(_DWORD *)v27 = 136315906;
        OUTLINED_FUNCTION_143_6((uint64_t)(v5 + 1));
        v28 = OUTLINED_FUNCTION_61_25(*v5);
        v36 = v23;
        v30 = v29;
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v39, &demangling cache variable for type metadata for (ConversationControlsType, HUDActivityManager.RelevanceScore)?);
        v31 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v28, v30, v40);
        OUTLINED_FUNCTION_140_7(v31);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        OUTLINED_FUNCTION_27();
        OUTLINED_FUNCTION_27_52();
        *(_WORD *)(v27 + 12) = 2080;
        LOBYTE(v39[0]) = *(_BYTE *)(v4 + 65);
        v32 = OUTLINED_FUNCTION_178_2();
        v39[0] = OUTLINED_FUNCTION_141_5(v32, v33);
        OUTLINED_FUNCTION_137_0();
        OUTLINED_FUNCTION_21_0();
        OUTLINED_FUNCTION_68_19();
        *(_WORD *)(v27 + 22) = 2080;
        OUTLINED_FUNCTION_143_6((uint64_t)(v2 + 1));
        v34 = OUTLINED_FUNCTION_61_25(*v2);
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v39, &demangling cache variable for type metadata for (ConversationControlsType, HUDActivityManager.RelevanceScore)?);
        v39[0] = OUTLINED_FUNCTION_191(v34, v35, v40);
        OUTLINED_FUNCTION_137_0();
        OUTLINED_FUNCTION_21_0();
        OUTLINED_FUNCTION_116_6();
        *(_WORD *)(v27 + 32) = 1024;
        LODWORD(v39[0]) = v21 & 1;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        OUTLINED_FUNCTION_173_4(&dword_1BD004000, v36, (os_log_type_t)v37, "HUDActivityManager - current score: %s, temporary: %s, new score: %s shouldUpdate: %{BOOL}d");
        swift_arrayDestroy();
        OUTLINED_FUNCTION_60();
      }

      OUTLINED_FUNCTION_116_6();
      OUTLINED_FUNCTION_68_19();
      OUTLINED_FUNCTION_27_52();
      OUTLINED_FUNCTION_13_93();
      OUTLINED_FUNCTION_28_55();
    }
    else
    {
      OUTLINED_FUNCTION_28_55();
    }
  }
  OUTLINED_FUNCTION_52_1();
}

void HUDActivityManager.shouldReplace()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t EnumTagSinglePayload;
  uint64_t v21;
  void (*v22)(uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  int v28;
  uint64_t v29;
  double *v30;
  char v31;
  char v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  double *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  double *v47;
  uint64_t v48;
  _DWORD v49[14];
  uint64_t v50[4];

  OUTLINED_FUNCTION_93();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  v6 = OUTLINED_FUNCTION_62_30();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_5_27();
  v47 = v8;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_18_0();
  v48 = v10;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_81_2();
  MEMORY[0x1E0C80A78](v12);
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_108_0();
  MEMORY[0x1E0C80A78](v14);
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_101_1();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_62();
  v18 = v17;
  v19 = (uint64_t *)(v0 + OBJC_IVAR___CNKHUDActivityManager_updates);
  OUTLINED_FUNCTION_2_0();
  if (*(_QWORD *)(*v19 + 16) || *(_QWORD *)(v0 + OBJC_IVAR___CNKHUDActivityManager_presentedActivity))
  {
    specialized BidirectionalCollection.last.getter(*v19, v2);
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v2, 1, v6);
    if ((_DWORD)EnumTagSinglePayload == 1)
    {
      OUTLINED_FUNCTION_275(EnumTagSinglePayload, &demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
    }
    else
    {
      OUTLINED_FUNCTION_163_3(v2);
      v21 = *(_QWORD *)(v0 + OBJC_IVAR___CNKHUDActivityManager_presentedActivity);
      if (v21)
      {
        v22 = *(void (**)(uint64_t))(**(_QWORD **)(v21
                                                           + OBJC_IVAR____TtC15ConversationKitP33_1110C52F52D8EDCF5F7A893547109D2918CoupledHUDActivity_parentActivity)
                                             + 184);
        v23 = swift_retain();
        v22(v23);
        swift_release();
        v24 = OUTLINED_FUNCTION_315_0();
        outlined init with take of HUDActivityManager.BannerUpdate(v24, v25);
        static HUDActivityManager.BannerUpdate.< infix(_:_:)();
        v27 = v26;
        OUTLINED_FUNCTION_44_43(v1);
        if ((v27 & 1) != 0)
        {
          v28 = *(unsigned __int8 *)(v4 + 65);
          v29 = OUTLINED_FUNCTION_58_28(v4);
          v30 = v47;
          if (v28 == 1)
          {
            ConversationControlsType.isInterruptable.getter(v29);
            v32 = v31;
          }
          else
          {
            v32 = 0;
          }
          OUTLINED_FUNCTION_25_55();
        }
        else
        {
          v32 = 1;
          v30 = v47;
        }
        OUTLINED_FUNCTION_83_19();
        if (one-time initialization token for conversationControls != -1)
          swift_once();
        v33 = OUTLINED_FUNCTION_17_2();
        v34 = __swift_project_value_buffer(v33, (uint64_t)&static Logger.conversationControls);
        OUTLINED_FUNCTION_98_10(v1);
        OUTLINED_FUNCTION_106_12(v1);
        OUTLINED_FUNCTION_185_3(v18);
        Logger.logObject.getter();
        v35 = OUTLINED_FUNCTION_12_0();
        if (OUTLINED_FUNCTION_23_5(v35))
        {
          v36 = OUTLINED_FUNCTION_105();
          v50[0] = OUTLINED_FUNCTION_105();
          *(_DWORD *)v36 = 136315906;
          OUTLINED_FUNCTION_143_6((uint64_t)(v3 + 1));
          v37 = v30;
          v38 = OUTLINED_FUNCTION_61_25(*v3);
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v49, &demangling cache variable for type metadata for (ConversationControlsType, HUDActivityManager.RelevanceScore)?);
          v40 = OUTLINED_FUNCTION_162(v38, v39, v50);
          OUTLINED_FUNCTION_140_7(v40);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          OUTLINED_FUNCTION_58_1();
          OUTLINED_FUNCTION_27_52();
          *(_WORD *)(v36 + 12) = 2080;
          LOBYTE(v49[0]) = *(_BYTE *)(v48 + 65);
          v41 = OUTLINED_FUNCTION_178_2();
          v43 = OUTLINED_FUNCTION_141_5(v41, v42);
          OUTLINED_FUNCTION_107_8(v43);
          OUTLINED_FUNCTION_133();
          OUTLINED_FUNCTION_28_55();
          *(_WORD *)(v36 + 22) = 2080;
          OUTLINED_FUNCTION_143_6((uint64_t)(v37 + 1));
          v44 = OUTLINED_FUNCTION_61_25(*v37);
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v49, &demangling cache variable for type metadata for (ConversationControlsType, HUDActivityManager.RelevanceScore)?);
          v46 = OUTLINED_FUNCTION_191(v44, v45, v50);
          OUTLINED_FUNCTION_107_8(v46);
          OUTLINED_FUNCTION_21_0();
          OUTLINED_FUNCTION_25_55();
          *(_WORD *)(v36 + 32) = 1024;
          v49[0] = v32 & 1;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          OUTLINED_FUNCTION_173_4(&dword_1BD004000, v34, (os_log_type_t)v18, "HUDActivityManager - current score: %s, temporary: %s, new score: %s shouldReplace: %{BOOL}d");
          swift_arrayDestroy();
          OUTLINED_FUNCTION_60();
        }

        OUTLINED_FUNCTION_116_6();
        OUTLINED_FUNCTION_59_27();
        OUTLINED_FUNCTION_27_52();
        OUTLINED_FUNCTION_13_93();
        outlined destroy of HUDActivityManager.BannerUpdate(v18);
      }
      else
      {
        OUTLINED_FUNCTION_33_50();
      }
    }
  }
  OUTLINED_FUNCTION_52_1();
}

void HUDActivityManager.dismissActivity(_:)()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  char *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t *v23;
  uint64_t v24;

  OUTLINED_FUNCTION_93();
  v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_77_1();
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v5 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v5, (uint64_t)&static Logger.conversationControls);
  v6 = v0;
  OUTLINED_FUNCTION_29_1();
  v7 = (char *)v6;
  v8 = Logger.logObject.getter();
  v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = OUTLINED_FUNCTION_105();
    v24 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v10 = 136315394;
    v11 = *(_QWORD *)&v7[OBJC_IVAR___CNKHUDActivityManager_presentedActivity];
    if (v11)
    {
      v12 = v11 + OBJC_IVAR____TtC15ConversationKit11HUDActivity_activityId;
      v13 = OUTLINED_FUNCTION_33_0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v1, v12, v13);
      v14 = v1;
      v15 = 0;
    }
    else
    {
      v13 = OUTLINED_FUNCTION_33_0();
      v14 = v1;
      v15 = 1;
    }
    __swift_storeEnumTagSinglePayload(v14, v15, 1, v13);
    specialized >> prefix<A>(_:)(v1);
    v17 = v16;
    OUTLINED_FUNCTION_92_1(v16, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    OUTLINED_FUNCTION_191(v17, v18, &v24);
    OUTLINED_FUNCTION_137_0();
    OUTLINED_FUNCTION_21_0();

    *(_WORD *)(v10 + 12) = 2080;
    OUTLINED_FUNCTION_33_0();
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
    v19 = dispatch thunk of CustomStringConvertible.description.getter();
    OUTLINED_FUNCTION_118_12(v19, v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_27();
    OUTLINED_FUNCTION_23_0();
    OUTLINED_FUNCTION_26_6(&dword_1BD004000, v8, v9, "HUDActivityManager Trying to dismiss activity %s -- %s", (uint8_t *)v10);
    OUTLINED_FUNCTION_25_6();
    OUTLINED_FUNCTION_60();
  }

  OUTLINED_FUNCTION_23_0();
  if (*(_QWORD *)&v7[OBJC_IVAR___CNKHUDActivityManager_presentedActivity])
  {
    swift_retain();
    if ((static UUID.== infix(_:_:)() & 1) != 0)
    {
      v21 = HUDActivityManager.presentedActivity.setter(0);
      v22 = (void *)HUDActivityManager.checkUpdatesAndPresentIfNeeded()(v21);
      OUTLINED_FUNCTION_22();

      OUTLINED_FUNCTION_43();
LABEL_15:
      OUTLINED_FUNCTION_52_1();
      return;
    }
    OUTLINED_FUNCTION_22();
  }
  v23 = (uint64_t *)&v7[OBJC_IVAR___CNKHUDActivityManager_updates];
  OUTLINED_FUNCTION_60_0();
  OUTLINED_FUNCTION_11_8();
  if (*(_QWORD *)(*v23 + 16) >= OUTLINED_FUNCTION_159_5(v23, v3))
  {
    specialized Array.replaceSubrange<A>(_:with:)();
    OUTLINED_FUNCTION_13_33();
    goto LABEL_15;
  }
  __break(1u);
}

void HUDActivityManager.init()()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  id v6;
  objc_super v7;

  v1 = &v0[OBJC_IVAR___CNKHUDActivityManager_displayResolver];
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;
  v2 = OBJC_IVAR___CNKHUDActivityManager_features;
  v3 = one-time initialization token for shared;
  v4 = v0;
  if (v3 != -1)
    swift_once();
  v5 = static Features.shared;
  *(_QWORD *)&v4[v2] = static Features.shared;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v4[OBJC_IVAR___CNKHUDActivityManager_presentedActivity] = 0;
  *(_QWORD *)&v4[OBJC_IVAR___CNKHUDActivityManager_updates] = MEMORY[0x1E0DEE9D8];
  v6 = v5;

  v7.receiver = v4;
  v7.super_class = (Class)type metadata accessor for HUDActivityManager();
  objc_msgSendSuper2(&v7, sel_init);
  OUTLINED_FUNCTION_45_0();
}

id HUDActivityManager.__deallocating_deinit()
{
  return BaseButton.__deallocating_deinit(type metadata accessor for HUDActivityManager);
}

void SystemBannerHostViewController.systemApertureElementIsShowingHUD.getter()
{
  _QWORD *v0;
  _QWORD *v1;

  v1 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  if ((*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x550))() == 4)
    (*(void (**)(void))((*v1 & *v0) + 0x1D8))();
  OUTLINED_FUNCTION_0();
}

uint64_t HUDActivityManager.presentedDynamicIsland.getter()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  void *v3;
  uint64_t v4;

  v1 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v2 = (_QWORD *)(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
  if (!v2)
    return 0;
  v3 = v2;
  v4 = (*(uint64_t (**)(void))((*v1 & *v2) + 0x1A0))();

  return v4;
}

uint64_t HUDActivityManager.presentedDynamicIsland.setter(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v3 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v4 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v1) + 0xA8))();
  if (v4)
  {
    v5 = (_QWORD *)v4;
    if (a1)
    {
      type metadata accessor for SystemBannerHostViewController();
      v6 = swift_dynamicCastClass();
      if (v6)
        swift_unknownObjectRetain();
    }
    else
    {
      v6 = 0;
    }
    (*(void (**)(uint64_t))((*v3 & *v5) + 0x1A8))(v6);

  }
  return swift_unknownObjectRelease();
}

void HUDActivityManager.forceSuppressSystemApertureOverAssociatedScene.getter()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;
  void *v3;
  uint64_t (*v4)(void);
  _QWORD *v5;

  v1 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v2 = OUTLINED_FUNCTION_67_2(*v0);
  if (v2)
  {
    v3 = (void *)v2;
    OUTLINED_FUNCTION_152_6();
    v5 = (_QWORD *)v4();

    if (v5)
    {
      (*(void (**)(void))((*v1 & *v5) + 0x448))();

    }
  }
  OUTLINED_FUNCTION_18();
}

void HUDActivityManager.forceSuppressSystemApertureOverAssociatedScene.setter(char a1)
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t (*v6)(void);
  _QWORD *v7;

  v3 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v4 = OUTLINED_FUNCTION_67_2(*v1);
  if (v4 && (v5 = (void *)v4, OUTLINED_FUNCTION_152_6(), v7 = (_QWORD *)v6(), v5, v7))
  {
    (*(void (**)(_QWORD))((*v3 & *v7) + 0x450))(a1 & 1);
    OUTLINED_FUNCTION_15_9(v7);
  }
  else
  {
    OUTLINED_FUNCTION_43_1();
  }
}

void HUDActivityManager.forceSuppressSystemApertureOverAssociatedScene.modify(uint64_t a1)
{
  uint64_t v1;
  char v3;

  *(_QWORD *)a1 = v1;
  HUDActivityManager.forceSuppressSystemApertureOverAssociatedScene.getter();
  *(_BYTE *)(a1 + 8) = v3 & 1;
  OUTLINED_FUNCTION_0();
}

{
  HUDActivityManager.forceSuppressSystemApertureOverAssociatedScene.setter(*(_BYTE *)(a1 + 8));
  OUTLINED_FUNCTION_0();
}

uint64_t HUDActivityManager.getCurrentUpdate()@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30[2];
  uint64_t v31;
  unsigned __int8 v32;
  _OWORD v33[3];

  v3 = type metadata accessor for Date();
  v28 = *(_QWORD *)(v3 - 8);
  v29 = v3;
  MEMORY[0x1E0C80A78](v3);
  v27 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UUID();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (int *)type metadata accessor for HUDActivityManager.BannerUpdate(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v26 - v16;
  swift_beginAccess();
  specialized RangeReplaceableCollection<>.popLast()((uint64_t)v11);
  swift_endAccess();
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, (uint64_t)v12) != 1)
  {
    outlined init with take of HUDActivityManager.BannerUpdate((uint64_t)v11, (uint64_t)v17);
    outlined init with take of HUDActivityManager.BannerUpdate((uint64_t)v17, a1);
    goto LABEL_6;
  }
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v11, &demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
  if (!(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x78))())
  {
    v31 = 0;
    memset(v30, 0, sizeof(v30));
    v32 = -1;
    goto LABEL_8;
  }
  v19 = v18;
  ObjectType = swift_getObjectType();
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v19 + 40))(v30, ObjectType, v19);
  swift_unknownObjectRelease();
  if (v32 == 255)
  {
LABEL_8:
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v30, &demangling cache variable for type metadata for ConversationControlsType?);
    v23 = a1;
    v24 = 1;
    return __swift_storeEnumTagSinglePayload(v23, v24, 1, (uint64_t)v12);
  }
  outlined init with take of ConversationControlsType(v30, v33);
  outlined init with copy of ConversationControlsType((uint64_t)v33, (uint64_t)v30);
  UUID.init()();
  v21 = &v14[v12[11]];
  *((_QWORD *)v21 + 1) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)v14 = 0x4082C00000000000;
  outlined init with copy of ConversationControlsType((uint64_t)v30, (uint64_t)(v14 + 8));
  *((_QWORD *)v14 + 7) = 0;
  v14[64] = 1;
  *((_QWORD *)v21 + 1) = 0;
  swift_unknownObjectWeakAssign();
  v14[65] = 1;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(&v14[v12[8]], v8, v5);
  v22 = v27;
  static Date.now.getter();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  outlined destroy of ConversationControlsType((uint64_t)v30);
  (*(void (**)(char *, char *, uint64_t))(v28 + 32))(&v14[v12[9]], v22, v29);
  *(_QWORD *)&v14[v12[10]] = 0;
  outlined init with take of HUDActivityManager.BannerUpdate((uint64_t)v14, a1);
  outlined destroy of ConversationControlsType((uint64_t)v33);
LABEL_6:
  v23 = a1;
  v24 = 0;
  return __swift_storeEnumTagSinglePayload(v23, v24, 1, (uint64_t)v12);
}

uint64_t specialized RangeReplaceableCollection<>.popLast()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for HUDActivityManager.BannerUpdate(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return __swift_storeEnumTagSinglePayload(a1, 1, 1, v6);
  specialized Array._customRemoveLast()((uint64_t)v5);
  if (__swift_getEnumTagSinglePayload((uint64_t)v5, 1, v6) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v5, &demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
    specialized Array.remove(at:)();
  }
  else
  {
    outlined init with take of HUDActivityManager.BannerUpdate((uint64_t)v5, (uint64_t)v8);
    outlined init with take of HUDActivityManager.BannerUpdate((uint64_t)v8, a1);
  }
  return __swift_storeEnumTagSinglePayload(a1, 0, 1, v6);
}

void dismissExistingBanner #1 () in HUDActivityManager.checkUpdatesAndPresentIfNeeded()(char a1)
{
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  Swift::String v5;

  if ((a1 & 1) != 0)
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v1 = type metadata accessor for Logger();
    __swift_project_value_buffer(v1, (uint64_t)&static Logger.conversationControls);
    v2 = Logger.logObject.getter();
    v3 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v2, v3))
    {
      v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v4 = 0;
      _os_log_impl(&dword_1BD004000, v2, v3, "HUDActivityManager - Dismissing current banner", v4, 2u);
      MEMORY[0x1C3B751B8](v4, -1, -1);
    }

    v5._countAndFlagsBits = 0;
    v5._object = (void *)0xE000000000000000;
    HUDActivityManager.dismissPresentedBanner(forReason:animated:)(v5, 0);
  }
}

Swift::Void __swiftcall HUDActivityManager.dismissPresentedBanner(forReason:animated:)(Swift::String forReason, Swift::Bool animated)
{
  uint64_t *v2;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;

  v4 = OUTLINED_FUNCTION_67_2(*v2);
  if (v4)
  {
    v5 = (void *)v4;
    v6 = OUTLINED_FUNCTION_315_0();
    v7 = (void *)MEMORY[0x1C3B72E00](v6);
    objc_msgSend(v5, sel_dismissPresentedBannerForReason_animated_, v7, animated);

    OUTLINED_FUNCTION_15_9(v7);
  }
  else
  {
    OUTLINED_FUNCTION_43_1();
  }
}

uint64_t closure #3 in HUDActivityManager.checkUpdatesAndPresentIfNeeded()(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  _QWORD *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  int8x16_t v14;
  uint64_t result;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int8x16_t v23;
  int8x16_t v24;
  char v25;

  v6 = type metadata accessor for HUDActivityManager.BannerUpdate(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v9 = (_QWORD *)MEMORY[0x1C3B752C0](a2 + 16);
  v10 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  if (!v9)
    goto LABEL_6;
  v11 = v9;
  v12 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v9) + 0xA8))();

  if (!v12)
    goto LABEL_9;
  v13 = (void *)(*(uint64_t (**)(void))((*v10 & *(_QWORD *)v12) + 0xE8))();

  if (v13)
  {
    if ((objc_msgSend(v13, sel_respondsToSelector_, sel_bannerPresentationManagerWantsSpringBoardIsLockedStatus) & 1) != 0)LOBYTE(v12) = objc_msgSend(v13, sel_bannerPresentationManagerWantsSpringBoardIsLockedStatus);
    else
      LOBYTE(v12) = 0;
    swift_unknownObjectRelease();
  }
  else
  {
LABEL_6:
    LOBYTE(v12) = 0;
  }
LABEL_9:
  outlined init with copy of HUDActivityManager.BannerUpdate(a3, (uint64_t)v8);
  if ((a1 & 1) == 0)
    return outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v8);
  outlined init with copy of ConversationControlsType((uint64_t)(v8 + 8), (uint64_t)&v22);
  if (v25 == 4
    || v25 == 6
    && v22 == 25
    && (v14 = vorrq_s8(v23, v24),
        !*(_QWORD *)&vorr_s8(*(int8x8_t *)v14.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v14, v14, 8uLL))))
  {
    outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v8);
  }
  else
  {
    outlined destroy of ConversationControlsType((uint64_t)&v22);
    result = outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v8);
    if ((v12 & 1) != 0)
      return result;
  }
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v16 = type metadata accessor for Logger();
  __swift_project_value_buffer(v16, (uint64_t)&static Logger.conversationControls);
  v17 = Logger.logObject.getter();
  v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v19 = 0;
    _os_log_impl(&dword_1BD004000, v17, v18, "HUDActivityManager - Presenting banner because ICS full screen", v19, 2u);
    MEMORY[0x1C3B751B8](v19, -1, -1);
  }

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    if (one-time initialization token for shared != -1)
      swift_once();
    v20 = (*(uint64_t (**)(uint64_t))((*v10 & *(_QWORD *)static BannerActivityManager.shared) + 0x108))(a3);
    CoupledHUDActivity.childActivity.setter(v20);
    return swift_release();
  }
  return result;
}

void one-time initialization function for shared(uint64_t a1, uint64_t (*a2)(void), _QWORD *a3)
{
  *a3 = objc_msgSend(objc_allocWithZone((Class)a2()), sel_init);
  OUTLINED_FUNCTION_0();
}

id static BannerActivityManager.shared.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for shared, (id *)&static BannerActivityManager.shared);
}

uint64_t key path setter for BannerActivityManager.bannerPresentationManager : BannerActivityManager(uint64_t a1, _QWORD **a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x98);
  v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

uint64_t BannerActivityManager.bannerPresentationManager.setter(uint64_t a1, uint64_t a2)
{
  return BannerActivityManager.bannerPresentationManager.setter(a1, a2, &OBJC_IVAR____TtC15ConversationKit21BannerActivityManager__bannerPresentationManager);
}

void BannerActivityManager.bannerPresentationManager.getter()
{
  BannerActivityManager.bannerPresentationManager.getter();
}

{
  OUTLINED_FUNCTION_113_11();
}

void BannerActivityManager.bannerPresentationManager.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 16) = v1;
  OUTLINED_FUNCTION_154_5();
}

void sub_1BD3CEC14(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v2 + 8);
  *v1 = a1;
  v1[1] = v3;
  OUTLINED_FUNCTION_0();
}

void BannerActivityManager.bannerPresentationManager.modify(uint64_t *a1, char a2)
{
  BannerActivityManager.bannerPresentationManager.modify(a1, a2, (void (*)(uint64_t, uint64_t))BannerActivityManager.bannerPresentationManager.setter);
}

uint64_t key path setter for BannerActivityManager.callUIPresentationStateProvider : BannerActivityManager(uint64_t a1, _QWORD **a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0xC8);
  v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

uint64_t BannerActivityManager.callUIPresentationStateProvider.setter(uint64_t a1, uint64_t a2)
{
  return BannerActivityManager.bannerPresentationManager.setter(a1, a2, &OBJC_IVAR____TtC15ConversationKit21BannerActivityManager__callUIPresentationStateProvider);
}

uint64_t BannerActivityManager.bannerPresentationManager.setter(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v5;

  v5 = v3 + *a3;
  if (MEMORY[0x1C3B752C0](v5))
  {
    swift_unknownObjectRelease();
  }
  else
  {
    *(_QWORD *)(v5 + 8) = a2;
    swift_unknownObjectWeakAssign();
  }
  return OUTLINED_FUNCTION_9_8();
}

void BannerActivityManager.callUIPresentationStateProvider.getter()
{
  BannerActivityManager.bannerPresentationManager.getter();
}

void sub_1BD3CED08()
{
  OUTLINED_FUNCTION_0();
}

void BannerActivityManager.callUIPresentationStateProvider.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 16) = v1;
  OUTLINED_FUNCTION_154_5();
}

void sub_1BD3CED34(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v2 + 8);
  *v1 = a1;
  v1[1] = v3;
  OUTLINED_FUNCTION_0();
}

void BannerActivityManager.callUIPresentationStateProvider.modify(uint64_t *a1, char a2)
{
  BannerActivityManager.bannerPresentationManager.modify(a1, a2, (void (*)(uint64_t, uint64_t))BannerActivityManager.callUIPresentationStateProvider.setter);
}

void BannerActivityManager.bannerPresentationManager.modify(uint64_t *a1, char a2, void (*a3)(uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1[1];
  if ((a2 & 1) != 0)
  {
    v5 = swift_unknownObjectRetain();
    a3(v5, v4);
    OUTLINED_FUNCTION_9_8();
  }
  else
  {
    a3(*a1, v4);
    OUTLINED_FUNCTION_18();
  }
}

uint64_t static BannerActivityManager.DismissActivityRequest.Reason.== infix(_:_:)()
{
  return 1;
}

void BannerActivityManager.DismissActivityRequest.Reason.hash(into:)()
{
  Hasher._combine(_:)(0);
  OUTLINED_FUNCTION_0();
}

Swift::Int BannerActivityManager.DismissActivityRequest.Reason.hashValue.getter()
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(0);
  return Hasher._finalize()();
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance BannerActivityManager.DismissActivityRequest.Reason()
{
  return BannerActivityManager.DismissActivityRequest.Reason.hashValue.getter();
}

void protocol witness for Hashable.hash(into:) in conformance BannerActivityManager.DismissActivityRequest.Reason()
{
  BannerActivityManager.DismissActivityRequest.Reason.hash(into:)();
}

uint64_t BannerActivityManager.presentedActivity.setter(uint64_t a1)
{
  return OUTLINED_FUNCTION_117_1(a1);
}

void BannerActivityManager.start(_:)()
{
  _QWORD *v0;
  uint64_t v1;
  os_log_type_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void (*v20)(uint64_t);
  uint64_t v21;
  uint64_t v22[6];

  OUTLINED_FUNCTION_93();
  v3 = v0;
  v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_62_30();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_101_1();
  MEMORY[0x1E0C80A78](v8);
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v9 = OUTLINED_FUNCTION_17_2();
  v10 = __swift_project_value_buffer(v9, (uint64_t)&static Logger.conversationControls);
  OUTLINED_FUNCTION_106_12(v5);
  Logger.logObject.getter();
  v11 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_144_0(v11))
  {
    v12 = (uint8_t *)OUTLINED_FUNCTION_105();
    v22[0] = OUTLINED_FUNCTION_105();
    *(_DWORD *)v12 = 136315138;
    OUTLINED_FUNCTION_100_7();
    OUTLINED_FUNCTION_87_12();
    v14 = v13;
    v16 = v15;
    OUTLINED_FUNCTION_275(v13, &demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
    v17 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v14, v16, v22);
    OUTLINED_FUNCTION_139_7(v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_59_27();
    OUTLINED_FUNCTION_48(&dword_1BD004000, v10, v2, "BannerActivityManager - start bannerUpdate: %s", v12);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_59_27();

  v18 = (*(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v3) + 0x138))(v5);
  if (v18)
  {
    v20 = *(void (**)(uint64_t))(*(_QWORD *)v18 + 184);
    v21 = swift_retain();
    v20(v21);
    outlined init with copy of ConversationControlsType(v1 + 8, (uint64_t)v22);
    OUTLINED_FUNCTION_13_93();

    OUTLINED_FUNCTION_22();
    outlined destroy of ConversationControlsType((uint64_t)v22);
  }
  OUTLINED_FUNCTION_52_1();
}

void BannerActivityManager.dismissPresentedActivity(request:)()
{
  if (one-time initialization token for shared != -1)
    swift_once();
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)static HUDActivityManager.shared) + 0x110))();
  OUTLINED_FUNCTION_0();
}

void BannerActivityManager.dismissActivity(_:)()
{
  NSObject *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  _QWORD *v10;
  NSObject *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t *v25;
  _QWORD *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t *v31;
  _QWORD *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  OUTLINED_FUNCTION_93();
  v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v7 = OUTLINED_FUNCTION_17_2();
  v8 = __swift_project_value_buffer(v7, (uint64_t)&static Logger.conversationControls);
  v9 = v1;
  OUTLINED_FUNCTION_29_1();
  v10 = v9;
  v11 = OUTLINED_FUNCTION_55_1();
  v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, (os_log_type_t)v12))
  {
    v38 = v12;
    v13 = OUTLINED_FUNCTION_105();
    v37 = OUTLINED_FUNCTION_105();
    v41 = v37;
    *(_DWORD *)v13 = 136315394;
    v14 = *(_QWORD *)((char *)v10 + OBJC_IVAR____TtC15ConversationKit21BannerActivityManager_presentedActivity);
    v39 = v8;
    if (v14)
    {
      v15 = v14 + OBJC_IVAR____TtC15ConversationKit11HUDActivity_activityId;
      v16 = OUTLINED_FUNCTION_33_0();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v6, v15, v16);
      v17 = (uint64_t)v6;
      v18 = 0;
    }
    else
    {
      v16 = OUTLINED_FUNCTION_33_0();
      v17 = (uint64_t)v6;
      v18 = 1;
    }
    __swift_storeEnumTagSinglePayload(v17, v18, 1, v16);
    specialized >> prefix<A>(_:)((uint64_t)v6);
    v20 = v19;
    v22 = v21;
    OUTLINED_FUNCTION_109_0(v19, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    v40 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v20, v22, &v41);
    OUTLINED_FUNCTION_137_0();
    OUTLINED_FUNCTION_25();

    *(_WORD *)(v13 + 12) = 2080;
    OUTLINED_FUNCTION_33_0();
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
    v23 = dispatch thunk of CustomStringConvertible.description.getter();
    v40 = OUTLINED_FUNCTION_118_12(v23, v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_27();
    OUTLINED_FUNCTION_23_0();
    OUTLINED_FUNCTION_26_6(&dword_1BD004000, v11, (os_log_type_t)v38, "BannerActivityManager dismiss activity %s -- %s", (uint8_t *)v13);
    OUTLINED_FUNCTION_25_6();
    OUTLINED_FUNCTION_60();
  }

  OUTLINED_FUNCTION_23_0();
  if (*(_QWORD *)((char *)v10 + OBJC_IVAR____TtC15ConversationKit21BannerActivityManager_presentedActivity))
  {
    v0 = (v3 + OBJC_IVAR____TtC15ConversationKit11HUDActivity_activityId);
    swift_retain();
    if ((static UUID.== infix(_:_:)() & 1) != 0)
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))((*MEMORY[0x1E0DEEDD8] & *v10) + 0x150))(0xD000000000000015, 0x80000001BD689720, 1);
      BannerActivityManager.presentedActivity.setter(0);
      v25 = (_QWORD *)((char *)v10 + OBJC_IVAR____TtC15ConversationKit21BannerActivityManager_updates);
      OUTLINED_FUNCTION_60_0();
      swift_retain();
      if (*(_QWORD *)(*v25 + 16) >= OUTLINED_FUNCTION_159_5(v25, v3))
      {
        specialized Array.replaceSubrange<A>(_:with:)();
        OUTLINED_FUNCTION_13_33();
        v26 = v10;
        OUTLINED_FUNCTION_55_1();
        v27 = OUTLINED_FUNCTION_31_6();
        if (OUTLINED_FUNCTION_28_4(v0))
        {
          v28 = (uint8_t *)OUTLINED_FUNCTION_105();
          v41 = OUTLINED_FUNCTION_105();
          *(_DWORD *)v28 = 136315138;
          v40 = *v25;
          swift_bridgeObjectRetain();
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [HUDActivityManager.BannerUpdate]);
          v29 = String.init<A>(reflecting:)();
          v40 = OUTLINED_FUNCTION_118_12(v29, v30);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();

          OUTLINED_FUNCTION_48(&dword_1BD004000, v0, v27, "BannerActivityManager current updates left to present %s", v28);
          OUTLINED_FUNCTION_21();
          OUTLINED_FUNCTION_60();
        }

        BannerActivityManager.presentTopMostUpdate()();
        OUTLINED_FUNCTION_17_22();
LABEL_20:
        OUTLINED_FUNCTION_52_1();
        return;
      }
      goto LABEL_22;
    }
    OUTLINED_FUNCTION_17_22();
  }
  v31 = (_QWORD *)((char *)v10 + OBJC_IVAR____TtC15ConversationKit21BannerActivityManager_updates);
  OUTLINED_FUNCTION_60_0();
  swift_retain();
  if (*(_QWORD *)(*v31 + 16) >= OUTLINED_FUNCTION_159_5(v31, v3))
  {
    specialized Array.replaceSubrange<A>(_:with:)();
    OUTLINED_FUNCTION_13_33();
    v32 = v10;
    OUTLINED_FUNCTION_55_1();
    v33 = OUTLINED_FUNCTION_31_6();
    if (OUTLINED_FUNCTION_28_4(v0))
    {
      v34 = (uint8_t *)OUTLINED_FUNCTION_105();
      v41 = OUTLINED_FUNCTION_105();
      *(_DWORD *)v34 = 136315138;
      v40 = *v31;
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [HUDActivityManager.BannerUpdate]);
      v35 = String.init<A>(reflecting:)();
      v40 = OUTLINED_FUNCTION_118_12(v35, v36);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_133();

      OUTLINED_FUNCTION_48(&dword_1BD004000, v0, v33, "BannerActivityManager all updates %s left after dismissal", v34);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }

    goto LABEL_20;
  }
  __break(1u);
LABEL_22:
  __break(1u);
}

void BannerActivityManager.presentTopMostUpdate()()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t EnumTagSinglePayload;
  uint64_t v12;
  id v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint8_t *v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29[6];

  OUTLINED_FUNCTION_93();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_79();
  OUTLINED_FUNCTION_132_9();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v26 - v4;
  v6 = type metadata accessor for HUDActivityManager.BannerUpdate(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_58_0();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v26 - v9;
  OUTLINED_FUNCTION_60_0();
  specialized RangeReplaceableCollection<>.popLast()((uint64_t)v5);
  swift_endAccess();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v5, 1, v6);
  if ((_DWORD)EnumTagSinglePayload == 1)
  {
    OUTLINED_FUNCTION_219(EnumTagSinglePayload, &demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
  }
  else
  {
    OUTLINED_FUNCTION_163_3((uint64_t)v5);
    v12 = (*(uint64_t (**)(char *))((*MEMORY[0x1E0DEEDD8] & (uint64_t)v0->isa) + 0x138))(v10);

    if (v12)
    {
      if (one-time initialization token for conversationControls != -1)
        swift_once();
      v14 = OUTLINED_FUNCTION_17_2();
      __swift_project_value_buffer(v14, (uint64_t)&static Logger.conversationControls);
      OUTLINED_FUNCTION_29_1();
      v15 = Logger.logObject.getter();
      v16 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v15, v16))
      {
        v17 = (uint8_t *)OUTLINED_FUNCTION_105();
        v18 = OUTLINED_FUNCTION_105();
        v28 = v18;
        v29[0] = v18;
        v27 = v17;
        *(_DWORD *)v17 = 136315138;
        v26 = v17 + 4;
        (*(void (**)(uint64_t))(*(_QWORD *)v12 + 184))(v18);
        OUTLINED_FUNCTION_87_12();
        v20 = v19;
        OUTLINED_FUNCTION_275(v19, &demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
        v22 = OUTLINED_FUNCTION_191(v20, v21, v29);
        OUTLINED_FUNCTION_139_7(v22);
        OUTLINED_FUNCTION_26_38();
        OUTLINED_FUNCTION_21_0();
        OUTLINED_FUNCTION_23_0();
        OUTLINED_FUNCTION_48(&dword_1BD004000, v15, v16, "BannerActivityManager - HUDActivityPresenting: %s", v27);
        OUTLINED_FUNCTION_21();
        OUTLINED_FUNCTION_60();
      }
      OUTLINED_FUNCTION_23_0();

      (*(void (**)(void))(*(_QWORD *)v12 + 184))();
      outlined init with copy of ConversationControlsType(v1 + 8, (uint64_t)v29);
      OUTLINED_FUNCTION_116_6();

      OUTLINED_FUNCTION_17_22();
      outlined destroy of ConversationControlsType((uint64_t)v29);
    }
    else
    {
      if (one-time initialization token for conversationControls != -1)
        swift_once();
      v23 = OUTLINED_FUNCTION_17_2();
      OUTLINED_FUNCTION_3(v23, (uint64_t)&static Logger.conversationControls);
      v24 = OUTLINED_FUNCTION_12_0();
      if (os_log_type_enabled(v0, v24))
      {
        v25 = (uint8_t *)OUTLINED_FUNCTION_105();
        *(_WORD *)v25 = 0;
        _os_log_impl(&dword_1BD004000, v0, v24, "BannerActivityManager -No activity", v25, 2u);
        OUTLINED_FUNCTION_60();
      }

    }
    OUTLINED_FUNCTION_28_55();
  }
  OUTLINED_FUNCTION_52_1();
}

void BannerActivityManager.isPresentingFullScreenCallUI.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;

  if (OUTLINED_FUNCTION_5_83(*v0))
  {
    v2 = v1;
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(ObjectType, v2);
    OUTLINED_FUNCTION_10();
  }
  OUTLINED_FUNCTION_0();
}

void BannerActivityManager.canPresent(_:)()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t);
  uint64_t v50;
  uint64_t v51;
  NSObject *v52;
  NSObject *v53;
  os_log_type_t v54;
  _BOOL8 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  double *v63;
  uint64_t v64;
  uint64_t v65;
  uint8_t *v66;
  char v67;
  char v68;
  int EnumTagSinglePayload;
  NSObject *v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  os_log_type_t v74;
  uint8_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  os_log_type_t v90;
  _WORD *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  NSObject *v96;
  uint64_t v97;
  double *v98;
  uint64_t v99;
  os_log_type_t v100;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _BOOL4 v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  os_log_type_t v113;
  uint8_t *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  double *v123;
  os_log_type_t v124;
  uint64_t v126;
  uint64_t v127;
  _BOOL4 v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  _QWORD v135[2];
  double *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  double *v141;
  char *v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  NSObject *v146;
  NSObject *v147;
  uint64_t v148;
  uint64_t v149;
  NSObject *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint8_t *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157[5];

  OUTLINED_FUNCTION_93();
  v3 = v0;
  v5 = v4;
  v6 = OUTLINED_FUNCTION_17_2();
  v148 = *(_QWORD *)(v6 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_5_27();
  v154 = v8;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_62();
  v143 = v10;
  v11 = OUTLINED_FUNCTION_63_0();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_5_27();
  v138 = v13;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_18_0();
  v152 = v15;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_18_0();
  v151 = v17;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_18_0();
  v136 = v19;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_18_0();
  v139 = v21;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v22);
  v142 = (char *)v135 - v23;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v24);
  v26 = (double *)((char *)v135 - v25);
  MEMORY[0x1E0C80A78](v27);
  v141 = (double *)((char *)v135 - v28);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v29);
  OUTLINED_FUNCTION_18_0();
  v146 = v30;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v31);
  OUTLINED_FUNCTION_62();
  v137 = v32;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v33);
  OUTLINED_FUNCTION_5_27();
  v140 = v34;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v35);
  OUTLINED_FUNCTION_18_0();
  v145 = v36;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v37);
  OUTLINED_FUNCTION_18_0();
  v147 = v38;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v39);
  v144 = (char *)v135 - v40;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v41);
  OUTLINED_FUNCTION_108_0();
  MEMORY[0x1E0C80A78](v42);
  OUTLINED_FUNCTION_99_1();
  MEMORY[0x1E0C80A78](v43);
  v45 = (char *)v135 - v44;
  v46 = (uint64_t *)&v3[OBJC_IVAR____TtC15ConversationKit21BannerActivityManager_updates];
  OUTLINED_FUNCTION_2_0();
  v47 = *v46;
  v155 = v45;
  specialized BidirectionalCollection.last.getter(v47, (uint64_t)v45);
  v48 = *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit21BannerActivityManager_presentedActivity];
  if (v48)
  {
    v49 = *(void (**)(uint64_t))(*(_QWORD *)v48 + 184);
    v50 = partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
    v49(v50);
    OUTLINED_FUNCTION_43();
    v51 = 0;
  }
  else
  {
    v51 = 1;
  }
  v153 = v11;
  __swift_storeEnumTagSinglePayload(v1, v51, 1, v11);
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v52 = __swift_project_value_buffer(v6, (uint64_t)&static Logger.conversationControls);
  outlined init with copy of HUDActivityManager.BannerUpdate?(v1, v2);
  v53 = v3;
  v150 = v52;
  Logger.logObject.getter();
  v54 = OUTLINED_FUNCTION_12_0();
  v55 = os_log_type_enabled(v52, v54);
  v149 = v1;
  if (v55)
  {
    v56 = OUTLINED_FUNCTION_105();
    v57 = OUTLINED_FUNCTION_105();
    v135[0] = v26;
    v157[0] = v57;
    *(_DWORD *)v56 = 136315394;
    specialized >> prefix<A>(_:)(v2);
    v135[1] = v6;
    v156 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v58, v59, v157);
    OUTLINED_FUNCTION_130_1();
    v60 = OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_92_1(v60, &demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
    *(_WORD *)(v56 + 12) = 2080;
    OUTLINED_FUNCTION_165_5(*v46);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [HUDActivityManager.BannerUpdate]);
    v61 = OUTLINED_FUNCTION_176_3();
    v156 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v61, v62, v157);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    OUTLINED_FUNCTION_26_6(&dword_1BD004000, v52, v54, "BannerActivityManager -PresentedActivity:%s CurrentUpdates %s", (uint8_t *)v56);
    OUTLINED_FUNCTION_25_6();
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_92_1(v55, &demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);

  v63 = (double *)v151;
  v64 = v152;
  BannerActivityManager.isPresentingFullScreenCallUI.getter();
  v65 = v153;
  v66 = v154;
  if ((v67 & 1) != 0 && (ConversationControlsType.canShowOverICS.getter(), (v68 & 1) == 0))
  {
    v112 = v137;
    OUTLINED_FUNCTION_122_6(v5);
    OUTLINED_FUNCTION_171_2();
    v113 = OUTLINED_FUNCTION_31_6();
    if (OUTLINED_FUNCTION_131_0(v113))
    {
      v114 = (uint8_t *)OUTLINED_FUNCTION_105();
      v157[0] = OUTLINED_FUNCTION_105();
      *(_DWORD *)v114 = 136315138;
      v115 = (uint64_t)v144;
      OUTLINED_FUNCTION_106_12(v112);
      OUTLINED_FUNCTION_289(v115);
      specialized >> prefix<A>(_:)(v115);
      v117 = v116;
      v119 = v118;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v115, &demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
      v120 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v117, v119, v157);
      OUTLINED_FUNCTION_540(v120);
      OUTLINED_FUNCTION_31_3();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_33_50();
      OUTLINED_FUNCTION_48(&dword_1BD004000, v53, (os_log_type_t)v63, "BannerActivityManager - denying presentation of %s because CallUI is full-screen", v114);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_33_50();
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v1, &demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
  }
  else
  {
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v155, 1, v65);
    v70 = v147;
    v71 = outlined init with copy of HUDActivityManager.BannerUpdate?(v1, (uint64_t)v147);
    if (EnumTagSinglePayload == 1 && (v71 = OUTLINED_FUNCTION_131_7((uint64_t)v70), v72))
    {
      OUTLINED_FUNCTION_225_3(v71, &demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
      v73 = v138;
      OUTLINED_FUNCTION_44_43(v5);
      OUTLINED_FUNCTION_171_2();
      v74 = OUTLINED_FUNCTION_12_0();
      if (OUTLINED_FUNCTION_28_4(v70))
      {
        v75 = (uint8_t *)OUTLINED_FUNCTION_105();
        v157[0] = OUTLINED_FUNCTION_105();
        *(_DWORD *)v75 = 136315138;
        v154 = v75 + 4;
        v76 = v73;
        v77 = (uint64_t)v144;
        OUTLINED_FUNCTION_44_43(v76);
        v78 = OUTLINED_FUNCTION_84_11();
        OUTLINED_FUNCTION_36_43(v78, v79, v80, v65);
        v82 = v81;
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v77, &demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
        v84 = OUTLINED_FUNCTION_162(v82, v83, v157);
        OUTLINED_FUNCTION_540(v84);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        OUTLINED_FUNCTION_58_1();
        outlined destroy of HUDActivityManager.BannerUpdate(v138);
        OUTLINED_FUNCTION_48(&dword_1BD004000, v70, v74, "BannerActivityManager - allowing presentation of %s because no banners are tracked", v75);
        OUTLINED_FUNCTION_21();
        OUTLINED_FUNCTION_60();
      }

      v94 = OUTLINED_FUNCTION_83_19();
    }
    else
    {
      OUTLINED_FUNCTION_225_3(v71, &demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
      v85 = v145;
      outlined init with copy of HUDActivityManager.BannerUpdate?(v1, v145);
      v86 = OUTLINED_FUNCTION_131_7(v85);
      if (!v72)
      {
        v95 = v85;
        v96 = v146;
        OUTLINED_FUNCTION_163_3(v95);
        v97 = v143;
        OUTLINED_FUNCTION_142_2(*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v148 + 16));
        v98 = v141;
        OUTLINED_FUNCTION_66_22(v5);
        OUTLINED_FUNCTION_122_6((uint64_t)v96);
        v99 = (uint64_t)v142;
        OUTLINED_FUNCTION_58_28((uint64_t)v96);
        OUTLINED_FUNCTION_55_1();
        v100 = OUTLINED_FUNCTION_31_6();
        if (OUTLINED_FUNCTION_13_0(v100))
        {
          v102 = OUTLINED_FUNCTION_105();
          LODWORD(v154) = (_DWORD)v70;
          v103 = v102;
          v151 = OUTLINED_FUNCTION_105();
          v152 = v5;
          v157[0] = v151;
          *(_DWORD *)v103 = 67109378;
          v104 = v65;
          v105 = *v98 >= *v26;
          OUTLINED_FUNCTION_13_93();
          OUTLINED_FUNCTION_33_50();
          LODWORD(v156) = v105;
          OUTLINED_FUNCTION_130_1();
          *(_WORD *)(v103 + 8) = 2080;
          OUTLINED_FUNCTION_44_43(v99);
          v106 = OUTLINED_FUNCTION_84_11();
          OUTLINED_FUNCTION_36_43(v106, v107, v108, v104);
          v110 = v109;
          OUTLINED_FUNCTION_92_1(v109, &demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
          v156 = OUTLINED_FUNCTION_191(v110, v111, v157);
          OUTLINED_FUNCTION_136_4();
          OUTLINED_FUNCTION_21_0();
          OUTLINED_FUNCTION_33_50();
          OUTLINED_FUNCTION_169_2(&dword_1BD004000, v96, (os_log_type_t)v154, "BannerActivityManager - allowing presentation %{BOOL}d currently presented %s");
          OUTLINED_FUNCTION_21();
          OUTLINED_FUNCTION_60();
        }
        OUTLINED_FUNCTION_13_93();
        OUTLINED_FUNCTION_33_50();
        OUTLINED_FUNCTION_25_55();

        (*(void (**)(uint64_t, uint64_t))(v148 + 8))(v97, v6);
        v134 = (uint64_t)v146;
LABEL_33:
        outlined destroy of HUDActivityManager.BannerUpdate(v134);
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v1, &demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
        goto LABEL_34;
      }
      OUTLINED_FUNCTION_96_3(v86, &demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
      v87 = v140;
      outlined init with copy of HUDActivityManager.BannerUpdate?((uint64_t)v155, v140);
      v88 = OUTLINED_FUNCTION_131_7(v87);
      v89 = v148;
      if (!v72)
      {
        v121 = v87;
        v122 = v139;
        outlined init with take of HUDActivityManager.BannerUpdate(v121, v139);
        OUTLINED_FUNCTION_142_2(*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v89 + 16));
        v123 = v136;
        OUTLINED_FUNCTION_122_6(v5);
        OUTLINED_FUNCTION_54_33();
        OUTLINED_FUNCTION_58_28(v122);
        OUTLINED_FUNCTION_55_1();
        v124 = OUTLINED_FUNCTION_31_6();
        LODWORD(v151) = v124;
        if (os_log_type_enabled((os_log_t)v89, v124))
        {
          v126 = OUTLINED_FUNCTION_105();
          v127 = OUTLINED_FUNCTION_105();
          v152 = v5;
          v157[0] = v127;
          *(_DWORD *)v126 = 67109378;
          v128 = *v123 >= *v63;
          OUTLINED_FUNCTION_33_50();
          OUTLINED_FUNCTION_13_93();
          LODWORD(v156) = v128;
          OUTLINED_FUNCTION_130_1();
          *(_WORD *)(v126 + 8) = 2080;
          v129 = v64;
          v130 = (uint64_t)v144;
          OUTLINED_FUNCTION_58_28(v129);
          OUTLINED_FUNCTION_289(v130);
          OUTLINED_FUNCTION_177_3();
          v132 = v131;
          OUTLINED_FUNCTION_109_0(v131, &demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
          v156 = OUTLINED_FUNCTION_191(v132, v133, v157);
          OUTLINED_FUNCTION_136_4();
          OUTLINED_FUNCTION_21_0();
          OUTLINED_FUNCTION_33_50();
          OUTLINED_FUNCTION_169_2(&dword_1BD004000, v89, (os_log_type_t)v151, "BannerActivityManager - allowing presentation2 %{BOOL}d topMostUpdate: %s");
          OUTLINED_FUNCTION_21();
          OUTLINED_FUNCTION_60();
        }
        OUTLINED_FUNCTION_33_50();
        OUTLINED_FUNCTION_13_93();
        OUTLINED_FUNCTION_25_55();

        (*(void (**)(uint8_t *, uint64_t))(v89 + 8))(v66, v6);
        v134 = v139;
        goto LABEL_33;
      }
      OUTLINED_FUNCTION_225_3(v88, &demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
      OUTLINED_FUNCTION_171_2();
      v90 = OUTLINED_FUNCTION_31_6();
      if (OUTLINED_FUNCTION_13_0(v90))
      {
        v91 = (_WORD *)OUTLINED_FUNCTION_105();
        OUTLINED_FUNCTION_124_3(v91);
        OUTLINED_FUNCTION_14_14(&dword_1BD004000, v92, v93, "BannerActivityManager - allowing presentation3 ");
        OUTLINED_FUNCTION_60();
      }

    }
    OUTLINED_FUNCTION_219(v94, &demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
  }
LABEL_34:
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v155, &demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
  OUTLINED_FUNCTION_52_1();
}

void BannerActivityManager.presentIfAble(_:)()
{
  uint64_t v0;
  NSObject *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  os_log_type_t v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t);
  uint64_t v30;
  void *v31;
  void *v32;
  uint64_t v33;
  os_log_type_t v34;
  _WORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  _BYTE *v68;
  uint8_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint8_t *v72;
  uint64_t v73;
  NSObject *v74;
  uint64_t v75[6];
  uint64_t v76;

  OUTLINED_FUNCTION_93();
  v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_18_30();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v69 - v7;
  v9 = type metadata accessor for HUDActivityManager.BannerUpdate(0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_79();
  v13 = v11 - v12;
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_101_1();
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v69 - v17;
  if (((*(uint64_t (**)(uint64_t, __n128))((*MEMORY[0x1E0DEEDD8] & (uint64_t)v1->isa) + 0x130))(v4, v16) & 1) != 0)
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v19 = OUTLINED_FUNCTION_17_2();
    v20 = OUTLINED_FUNCTION_133_7(v19, (uint64_t)&static Logger.conversationControls);
    OUTLINED_FUNCTION_98_10(v20);
    Logger.logObject.getter();
    v21 = OUTLINED_FUNCTION_12_0();
    if (OUTLINED_FUNCTION_144_0(v21))
    {
      v22 = OUTLINED_FUNCTION_105();
      v74 = v1;
      v23 = (uint8_t *)v22;
      v73 = OUTLINED_FUNCTION_105();
      v75[0] = v73;
      *(_DWORD *)v23 = 136315138;
      v72 = v23 + 4;
      OUTLINED_FUNCTION_44_43((uint64_t)v18);
      OUTLINED_FUNCTION_36_43((uint64_t)v8, 0, 1, v9);
      v25 = v24;
      OUTLINED_FUNCTION_92_1(v24, &demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
      v27 = OUTLINED_FUNCTION_162(v25, v26, v75);
      OUTLINED_FUNCTION_61_0(v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_58_1();
      OUTLINED_FUNCTION_27_52();
      OUTLINED_FUNCTION_48(&dword_1BD004000, v1, (os_log_type_t)v13, "BannerActivityManager - presenting new bannerUpdate: %s", v23);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }
    OUTLINED_FUNCTION_27_52();

    OUTLINED_FUNCTION_66_22(v4);
    swift_allocObject();
    swift_unknownObjectWeakInit();
    ObjC metadata update function for HUDActivity();
    v38 = swift_allocObject();
    HUDActivity.init(withUpdate:dismissHandler:)();
    BannerActivityManager.presentedActivity.setter(v38);
    OUTLINED_FUNCTION_21_7();
    goto LABEL_25;
  }
  v70 = OBJC_IVAR____TtC15ConversationKit21BannerActivityManager_presentedActivity;
  v71 = v0;
  v28 = *(uint64_t *)((char *)&v1->isa + OBJC_IVAR____TtC15ConversationKit21BannerActivityManager_presentedActivity);
  if (v28)
  {
    v29 = *(void (**)(uint64_t))(*(_QWORD *)v28 + 184);
    v30 = OUTLINED_FUNCTION_21_7();
    v29(v30);
    outlined init with copy of ConversationControlsType(v2 + 8, (uint64_t)v75);
    OUTLINED_FUNCTION_13_93();
    static ConversationControlsType.== infix(_:_:)((uint64_t)v75);
    v32 = v31;
    outlined destroy of ConversationControlsType((uint64_t)v75);
    if ((v32 & 1) != 0)
    {
      if (one-time initialization token for conversationControls != -1)
        swift_once();
      v33 = OUTLINED_FUNCTION_17_2();
      OUTLINED_FUNCTION_3(v33, (uint64_t)&static Logger.conversationControls);
      v34 = OUTLINED_FUNCTION_31_6();
      if (OUTLINED_FUNCTION_13_0(v34))
      {
        v35 = (_WORD *)OUTLINED_FUNCTION_105();
        OUTLINED_FUNCTION_124_3(v35);
        OUTLINED_FUNCTION_14_14(&dword_1BD004000, v36, v37, "BannerActivityManager - allowing banner update since it has the same type as currently presented update");
        OUTLINED_FUNCTION_60();
      }

      goto LABEL_25;
    }
    swift_release();
  }
  v72 = (uint8_t *)v9;
  v39 = (uint64_t *)((char *)v1 + OBJC_IVAR____TtC15ConversationKit21BannerActivityManager_updates);
  OUTLINED_FUNCTION_60_0();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  v40 = *(_QWORD *)(*v39 + 16);
  specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v40);
  *(_QWORD *)(*v39 + 16) = v40 + 1;
  OUTLINED_FUNCTION_119_3();
  outlined init with copy of HUDActivityManager.BannerUpdate(v4, v41 + *(_QWORD *)(v10 + 72) * v40);
  specialized MutableCollection<>.sort(by:)(v39);
  swift_endAccess();
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v42 = OUTLINED_FUNCTION_17_2();
  v43 = OUTLINED_FUNCTION_133_7(v42, (uint64_t)&static Logger.conversationControls);
  OUTLINED_FUNCTION_58_28(v43);
  v73 = (uint64_t)v39;
  Logger.logObject.getter();
  v44 = OUTLINED_FUNCTION_369();
  if (os_log_type_enabled(0, v44))
  {
    v74 = v1;
    v45 = (uint8_t *)OUTLINED_FUNCTION_105();
    v75[0] = OUTLINED_FUNCTION_105();
    *(_DWORD *)v45 = 136315138;
    v69 = v45 + 4;
    OUTLINED_FUNCTION_44_43(v13);
    v46 = OUTLINED_FUNCTION_84_11();
    OUTLINED_FUNCTION_36_43(v46, v47, v48, (uint64_t)v72);
    v50 = v49;
    OUTLINED_FUNCTION_92_1(v49, &demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
    v52 = OUTLINED_FUNCTION_191(v50, v51, v75);
    OUTLINED_FUNCTION_61_0(v52);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_25_55();
    OUTLINED_FUNCTION_48(&dword_1BD004000, 0, v44, "BannerActivityManager - cannot present banner so queueing it up %s", v45);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_25_55();

  v53 = v1;
  Logger.logObject.getter();
  v54 = OUTLINED_FUNCTION_369();
  if (OUTLINED_FUNCTION_96_12(v54))
  {
    v55 = OUTLINED_FUNCTION_105();
    v75[0] = OUTLINED_FUNCTION_105();
    *(_DWORD *)v55 = 136315394;
    v56 = *(uint64_t *)((char *)&v1->isa + v70);
    if (v56)
    {
      v57 = *(void (**)(uint64_t))(*(_QWORD *)v56 + 184);
      v58 = partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
      v59 = v71;
      v57(v58);
      OUTLINED_FUNCTION_43();
      v60 = 0;
    }
    else
    {
      v60 = 1;
      v59 = v71;
    }
    __swift_storeEnumTagSinglePayload(v59, v60, 1, (uint64_t)v72);
    specialized >> prefix<A>(_:)(v59);
    v62 = v61;
    v64 = v63;
    OUTLINED_FUNCTION_219(v61, &demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
    v65 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v62, v64, v75);
    OUTLINED_FUNCTION_61_0(v65);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_53();

    *(_WORD *)(v55 + 12) = 2080;
    v76 = *v39;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [HUDActivityManager.BannerUpdate]);
    v66 = String.init<A>(reflecting:)();
    v76 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v66, v67, v75);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_27();

    OUTLINED_FUNCTION_26_6(&dword_1BD004000, 0, v54, "BannerActivityManager -Current state after queue:%s CurrentUpdates %s", (uint8_t *)v55);
    OUTLINED_FUNCTION_25_6();
    OUTLINED_FUNCTION_60();
  }

  lazy protocol witness table accessor for type BannerPresentationError and conformance BannerPresentationError();
  swift_allocError();
  *v68 = 8;
LABEL_25:
  OUTLINED_FUNCTION_52_1();
}

void closure #2 in HUDActivityManager.checkUpdatesAndPresentIfNeeded()(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v5 = a2 + 16;
  OUTLINED_FUNCTION_2_0();
  v6 = MEMORY[0x1C3B752C0](v5);
  if (v6)
  {
    v7 = (void *)v6;
    a3(a1);

  }
  OUTLINED_FUNCTION_9_0();
}

Swift::Bool __swiftcall BannerActivityManager.presentHUD()()
{
  NSObject *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  NSObject *v22;
  os_log_type_t v23;
  _BOOL4 v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  os_log_type_t v46;
  _WORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  os_log_type_t v51;
  uint8_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  _WORD *v62;
  uint64_t v63;
  uint64_t v64;
  os_log_type_t v65;
  uint8_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t ObjectType;
  uint64_t v77;
  Swift::Bool result;
  uint8_t *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD v86[6];
  uint64_t v87[5];
  char v88;

  OUTLINED_FUNCTION_93();
  v2 = type metadata accessor for HUDActivityManager.BannerUpdate(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_5_27();
  v80 = v4;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_18_0();
  v81 = v6;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v79 - v8;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_79();
  v13 = v11 - v12;
  MEMORY[0x1E0C80A78](v14);
  v83 = (char *)&v79 - v15;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v79 - v17;
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v19 = OUTLINED_FUNCTION_17_2();
  v20 = __swift_project_value_buffer(v19, (uint64_t)&static Logger.conversationControls);
  v21 = v1;
  v22 = OUTLINED_FUNCTION_26_31();
  v23 = static os_log_type_t.default.getter();
  v24 = os_log_type_enabled(v22, v23);
  v85 = v2;
  if (v24)
  {
    v82 = v9;
    v25 = OUTLINED_FUNCTION_105();
    v87[0] = OUTLINED_FUNCTION_105();
    *(_DWORD *)v25 = 136315394;
    v26 = *(_QWORD *)((char *)v21 + OBJC_IVAR____TtC15ConversationKit21BannerActivityManager_presentedActivity);
    v84 = v20;
    if (v26)
    {
      v27 = *(void (**)(uint64_t))(*(_QWORD *)v26 + 184);
      v28 = partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
      v27(v28);
      OUTLINED_FUNCTION_43();
      v29 = 0;
    }
    else
    {
      v29 = 1;
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v18, v29, 1, v2);
    specialized >> prefix<A>(_:)((uint64_t)v18);
    v31 = v30;
    OUTLINED_FUNCTION_92_1(v30, &demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
    v33 = OUTLINED_FUNCTION_191(v31, v32, v87);
    OUTLINED_FUNCTION_166_2(v33);
    OUTLINED_FUNCTION_137_0();
    OUTLINED_FUNCTION_21_0();

    *(_WORD *)(v25 + 12) = 2080;
    v34 = (_QWORD *)((char *)v21 + OBJC_IVAR____TtC15ConversationKit21BannerActivityManager_updates);
    OUTLINED_FUNCTION_2_0();
    v86[0] = *v34;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [HUDActivityManager.BannerUpdate]);
    v35 = String.init<A>(reflecting:)();
    v86[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v35, v36, v87);
    OUTLINED_FUNCTION_137_0();
    OUTLINED_FUNCTION_133();

    OUTLINED_FUNCTION_26_6(&dword_1BD004000, v22, v23, "BannerActivityManager -PresentedActivity:%s CurrentUpdates %s", (uint8_t *)v25);
    OUTLINED_FUNCTION_25_6();
    OUTLINED_FUNCTION_60();
  }

  v37 = *(_QWORD *)((char *)v21 + OBJC_IVAR____TtC15ConversationKit21BannerActivityManager_presentedActivity);
  v38 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  if (v37)
  {
    v0 = *(NSObject **)(*(_QWORD *)v37 + 208);
    v39 = swift_retain();
    if ((((uint64_t (*)(uint64_t))v0)(v39) & 1) != 0)
    {
      OUTLINED_FUNCTION_29_1();
      OUTLINED_FUNCTION_26_31();
      v40 = OUTLINED_FUNCTION_31_6();
      if (OUTLINED_FUNCTION_123_8(v40))
      {
        v41 = (uint8_t *)OUTLINED_FUNCTION_105();
        v87[0] = OUTLINED_FUNCTION_105();
        v84 = v20;
        OUTLINED_FUNCTION_95_14(4.8149e-34);
        OUTLINED_FUNCTION_127_6();
        OUTLINED_FUNCTION_36_43((uint64_t)"rolsViewControllerDelegate", 0, 1, v2);
        v43 = v42;
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)"rolsViewControllerDelegate", &demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
        v45 = OUTLINED_FUNCTION_162(v43, v44, v87);
        OUTLINED_FUNCTION_97_9(v45);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        OUTLINED_FUNCTION_58_1();
        OUTLINED_FUNCTION_23_0();
        OUTLINED_FUNCTION_48(&dword_1BD004000, v0, (os_log_type_t)v9, "BannerActivityManager - Presenting hud for presented activity: %s", v41);
        OUTLINED_FUNCTION_21();
        OUTLINED_FUNCTION_60();
      }
      OUTLINED_FUNCTION_23_0();

LABEL_25:
      swift_retain_n();
      OUTLINED_FUNCTION_26_31();
      v65 = OUTLINED_FUNCTION_31_6();
      if (OUTLINED_FUNCTION_123_8(v65))
      {
        v66 = (uint8_t *)OUTLINED_FUNCTION_105();
        v84 = OUTLINED_FUNCTION_105();
        v87[0] = v84;
        OUTLINED_FUNCTION_95_14(4.8149e-34);
        OUTLINED_FUNCTION_127_6();
        v67 = OUTLINED_FUNCTION_84_11();
        OUTLINED_FUNCTION_36_43(v67, v68, v69, v85);
        v71 = v70;
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v38, &demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
        v73 = OUTLINED_FUNCTION_162(v71, v72, v87);
        OUTLINED_FUNCTION_97_9(v73);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        OUTLINED_FUNCTION_58_1();
        OUTLINED_FUNCTION_23_0();
        OUTLINED_FUNCTION_48(&dword_1BD004000, v0, (os_log_type_t)v9, "BannerActivityManager - asked to present HUD: %s", v66);
        OUTLINED_FUNCTION_21();
        OUTLINED_FUNCTION_60();
      }
      OUTLINED_FUNCTION_23_0();

      if ((*(uint64_t (**)(void))((*v38 & *v21) + 0x90))())
      {
        v75 = v74;
        ObjectType = swift_getObjectType();
        memset(v87, 0, sizeof(v87));
        v88 = 6;
        v77 = v80;
        (*(void (**)(void))(*(_QWORD *)v37 + 184))();
        outlined init with copy of ConversationControlsType(v77 + 8, (uint64_t)v86);
        OUTLINED_FUNCTION_59_27();
        (*(void (**)(_QWORD, uint64_t *, _QWORD *, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v75 + 16))(0, v87, v86, v37 + OBJC_IVAR____TtC15ConversationKit11HUDActivity_activityId, 1, 0, 0, ObjectType, v75);
        swift_unknownObjectRelease();
        OUTLINED_FUNCTION_14_12();
        OUTLINED_FUNCTION_14_12();
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v86, &demangling cache variable for type metadata for ConversationControlsType?);
        outlined destroy of ConversationControlsType((uint64_t)v87);
      }
      else
      {
        OUTLINED_FUNCTION_14_12();
        OUTLINED_FUNCTION_14_12();
      }
      goto LABEL_30;
    }
    OUTLINED_FUNCTION_14_12();
  }
  OUTLINED_FUNCTION_60_0();
  specialized RangeReplaceableCollection<>.popLast()(v13);
  swift_endAccess();
  if (__swift_getEnumTagSinglePayload(v13, 1, v2) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v13, &demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
    OUTLINED_FUNCTION_26_31();
    v46 = OUTLINED_FUNCTION_31_6();
    if (OUTLINED_FUNCTION_13_0(v46))
    {
      v47 = (_WORD *)OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_124_3(v47);
      OUTLINED_FUNCTION_14_14(&dword_1BD004000, v48, v49, "BannerActivityManager - Default HUD should be presented");
      OUTLINED_FUNCTION_60();
    }

  }
  else
  {
    outlined init with take of HUDActivityManager.BannerUpdate(v13, (uint64_t)v9);
    v50 = v81;
    OUTLINED_FUNCTION_58_28((uint64_t)v9);
    OUTLINED_FUNCTION_26_31();
    v51 = OUTLINED_FUNCTION_31_6();
    if (OUTLINED_FUNCTION_131_0(v51))
    {
      v52 = (uint8_t *)OUTLINED_FUNCTION_105();
      v53 = OUTLINED_FUNCTION_105();
      v82 = v9;
      v87[0] = v53;
      v84 = v20;
      *(_DWORD *)v52 = 136315138;
      v79 = v52 + 4;
      v54 = (uint64_t)v83;
      OUTLINED_FUNCTION_122_6(v50);
      OUTLINED_FUNCTION_289(v54);
      specialized >> prefix<A>(_:)(v54);
      v56 = v55;
      v58 = v57;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v54, &demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
      v59 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v56, v58, v87);
      OUTLINED_FUNCTION_166_2(v59);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_27_52();
      OUTLINED_FUNCTION_48(&dword_1BD004000, v0, (os_log_type_t)"rolsViewControllerDelegate", "BannerActivityManager - Presenting hud for topmostupdate: %s", v52);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }
    OUTLINED_FUNCTION_25_55();

    v37 = (*(uint64_t (**)(char *))((*v38 & *v21) + 0x138))(v9);
    v0 = v60;
    OUTLINED_FUNCTION_68_19();

    if (v37)
      goto LABEL_25;
  }
  OUTLINED_FUNCTION_26_31();
  v61 = OUTLINED_FUNCTION_31_6();
  if (OUTLINED_FUNCTION_13_0(v61))
  {
    v62 = (_WORD *)OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_124_3(v62);
    OUTLINED_FUNCTION_14_14(&dword_1BD004000, v63, v64, "BannerActivityManager -No activity");
    OUTLINED_FUNCTION_60();
  }

LABEL_30:
  OUTLINED_FUNCTION_52_1();
  return result;
}

uint64_t BannerActivityManager.presentNewBanner(as:type:activityUUID:fromActivityManager:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;

  result = OUTLINED_FUNCTION_14_7(*v4);
  if (result)
  {
    v11 = v10;
    ObjectType = swift_getObjectType();
    v13 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 8))(a1, a2, a3, a4 & 1, ObjectType, v11);
    OUTLINED_FUNCTION_10();
    return v13;
  }
  return result;
}

Swift::Void __swiftcall BannerActivityManager.dismissPresentedBanner(forReason:animated:)(Swift::String forReason, Swift::Bool animated)
{
  uint64_t *v2;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;

  object = forReason._object;
  countAndFlagsBits = forReason._countAndFlagsBits;
  if (OUTLINED_FUNCTION_14_7(*v2))
  {
    v7 = v6;
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, void *, Swift::Bool, uint64_t, uint64_t))(v7 + 24))(countAndFlagsBits, object, animated, ObjectType, v7);
    swift_unknownObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_91();
  }
}

void BannerActivityManager.bannerDismissed(_:)()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  NSObject *v21;
  int v22;
  _BOOL4 v23;
  uint64_t v24;
  uint64_t ObjectType;
  NSObject *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  char *v39;
  os_log_type_t v40;
  uint8_t *v42;
  uint64_t *v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(void);
  uint64_t v49;
  uint64_t v50;
  int v51;
  char *v52;
  os_log_type_t v53;
  uint8_t *v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  NSObject *v62;
  NSObject *v63;
  os_log_type_t v64;
  uint8_t *v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  os_log_type_t v72;
  _WORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(uint64_t);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  NSObject *v92;
  os_log_type_t v93;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void (*v98)(uint64_t);
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  int v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  NSObject *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125[4];

  OUTLINED_FUNCTION_93();
  v122 = v3;
  v5 = v4;
  v6 = type metadata accessor for HUDActivityManager.BannerUpdate(0);
  v115 = *(_QWORD *)(v6 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_41();
  v117 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_18_30();
  MEMORY[0x1E0C80A78](v10);
  v111 = (char *)&v108 - v11;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v12);
  v114 = (char *)&v108 - v13;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_138_6();
  v15 = OUTLINED_FUNCTION_33_0();
  v120 = *(_QWORD *)(v15 - 8);
  v121 = v15;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_41();
  v119 = v17;
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v18 = OUTLINED_FUNCTION_17_2();
  v19 = __swift_project_value_buffer(v18, (uint64_t)&static Logger.conversationControls);
  swift_unknownObjectRetain_n();
  v20 = v1;
  v21 = OUTLINED_FUNCTION_69_17();
  v22 = static os_log_type_t.default.getter();
  v23 = os_log_type_enabled(v21, (os_log_type_t)v22);
  v112 = v0;
  v116 = v5;
  v118 = v6;
  if (v23)
  {
    v110 = v22;
    v113 = v19;
    v24 = OUTLINED_FUNCTION_105();
    v109 = OUTLINED_FUNCTION_105();
    v125[0] = v109;
    *(_DWORD *)v24 = 136315394;
    v108 = v24 + 4;
    ObjectType = swift_getObjectType();
    v26 = v119;
    (*(void (**)(uint64_t))(v122 + 24))(ObjectType);
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
    v27 = v121;
    v28 = dispatch thunk of CustomStringConvertible.description.getter();
    v30 = v29;
    (*(void (**)(NSObject *, uint64_t))(v120 + 8))(v26, v27);
    v123 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v28, v30, v125);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_27();
    OUTLINED_FUNCTION_26_1();
    *(_WORD *)(v24 + 12) = 2080;
    v31 = *(_QWORD *)&v20[OBJC_IVAR____TtC15ConversationKit21BannerActivityManager_presentedActivity];
    if (v31)
    {
      v32 = *(void (**)(uint64_t))(*(_QWORD *)v31 + 184);
      v33 = partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
      v32(v33);
      OUTLINED_FUNCTION_43();
      v34 = 0;
    }
    else
    {
      v34 = 1;
    }
    __swift_storeEnumTagSinglePayload(v2, v34, 1, v118);
    OUTLINED_FUNCTION_177_3();
    v36 = v35;
    v38 = v37;
    OUTLINED_FUNCTION_109_0(v35, &demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
    v123 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v36, v38, v125);
    OUTLINED_FUNCTION_137_0();
    OUTLINED_FUNCTION_25();

    OUTLINED_FUNCTION_26_6(&dword_1BD004000, v21, (os_log_type_t)v110, "BannerActivityManager - banner dismissed %s, presented activity %s", (uint8_t *)v24);
    OUTLINED_FUNCTION_25_6();
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_26_1();

  v39 = v20;
  OUTLINED_FUNCTION_69_17();
  v40 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_4_14(v40))
  {
    v42 = (uint8_t *)OUTLINED_FUNCTION_105();
    v125[0] = OUTLINED_FUNCTION_105();
    *(_DWORD *)v42 = 136315138;
    v43 = (uint64_t *)&v39[OBJC_IVAR____TtC15ConversationKit21BannerActivityManager_updates];
    OUTLINED_FUNCTION_2_0();
    OUTLINED_FUNCTION_165_5(*v43);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [HUDActivityManager.BannerUpdate]);
    v44 = OUTLINED_FUNCTION_176_3();
    v124 = OUTLINED_FUNCTION_141_5(v44, v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_25();

    OUTLINED_FUNCTION_48(&dword_1BD004000, &OBJC_IVAR____TtC15ConversationKit20ClarityUIPreferences__incomingCommunicationLimitObserver, (os_log_type_t)v20, "BannerActivityManager - banner dismissed updates %s", v42);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  v46 = OBJC_IVAR____TtC15ConversationKit21BannerActivityManager_presentedActivity;
  v47 = *(_QWORD *)&v39[OBJC_IVAR____TtC15ConversationKit21BannerActivityManager_presentedActivity];
  if (v47)
  {
    v48 = *(void (**)(void))(*(_QWORD *)v47 + 184);
    v49 = swift_retain();
    v50 = v117;
    ((void (*)(uint64_t))v48)(v49);
    v51 = *(unsigned __int8 *)(v50 + 65);
    OUTLINED_FUNCTION_13_93();
    if (v51 == 1)
    {
      v52 = v39;
      OUTLINED_FUNCTION_69_17();
      v53 = OUTLINED_FUNCTION_369();
      if (OUTLINED_FUNCTION_96_12(v53))
      {
        v54 = (uint8_t *)OUTLINED_FUNCTION_105();
        v55 = OUTLINED_FUNCTION_105();
        v125[0] = v55;
        *(_DWORD *)v54 = 136315138;
        v122 = v46;
        v56 = *(_QWORD *)&v39[v46];
        if (v56)
        {
          v57 = *(void (**)(uint64_t))(*(_QWORD *)v56 + 184);
          v58 = partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
          v59 = (uint64_t)v114;
          v57(v58);
          v55 = OUTLINED_FUNCTION_43();
          v60 = 0;
        }
        else
        {
          v60 = 1;
          v59 = (uint64_t)v114;
        }
        OUTLINED_FUNCTION_89_18(v55, v60);
        v77 = v76;
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v59, &demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
        v79 = OUTLINED_FUNCTION_162(v77, v78, v125);
        OUTLINED_FUNCTION_24_53(v79);
        OUTLINED_FUNCTION_58_1();

        OUTLINED_FUNCTION_48(&dword_1BD004000, v50, v53, "BannerActivityManager - temporary banner dismissed %s", v54);
        OUTLINED_FUNCTION_21();
        OUTLINED_FUNCTION_60();
      }

      v80 = *(_QWORD *)&v39[v46];
      if (v80)
      {
        v81 = *(void (**)(uint64_t))(*(_QWORD *)v80 + 224);
        v82 = partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
        v81(v82);
        OUTLINED_FUNCTION_43();
      }
      OUTLINED_FUNCTION_184_0();
      BannerActivityManager.presentTopMostUpdate()();
      OUTLINED_FUNCTION_17_22();
    }
    else
    {
      v61 = swift_getObjectType();
      v62 = v119;
      (*(void (**)(uint64_t))(v122 + 24))(v61);
      v63 = static UUID.== infix(_:_:)();
      (*(void (**)(NSObject *, uint64_t))(v120 + 8))(v62, v121);
      if ((v63 & 1) != 0)
      {
        v63 = v39;
        OUTLINED_FUNCTION_69_17();
        v64 = OUTLINED_FUNCTION_369();
        if (OUTLINED_FUNCTION_96_12(v64))
        {
          v65 = (uint8_t *)OUTLINED_FUNCTION_105();
          v66 = OUTLINED_FUNCTION_105();
          v121 = v66;
          v125[0] = v66;
          *(_DWORD *)v65 = 136315138;
          v122 = v46;
          v67 = *(_QWORD *)&v39[v46];
          v113 = v19;
          if (v67)
          {
            v68 = *(void (**)(uint64_t))(*(_QWORD *)v67 + 184);
            v69 = partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
            v70 = (uint64_t)v111;
            v68(v69);
            v66 = OUTLINED_FUNCTION_43();
            v71 = 0;
          }
          else
          {
            v71 = 1;
            v70 = (uint64_t)v111;
          }
          OUTLINED_FUNCTION_89_18(v66, v71);
          v84 = v83;
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v70, &demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
          v86 = OUTLINED_FUNCTION_162(v84, v85, v125);
          OUTLINED_FUNCTION_24_53(v86);
          OUTLINED_FUNCTION_58_1();

          OUTLINED_FUNCTION_48(&dword_1BD004000, v62, v64, "BannerActivityManager - presented activity dismissed so queueing%s", v65);
          OUTLINED_FUNCTION_21();
          OUTLINED_FUNCTION_60();
        }

        v87 = v117;
        v48();
        v88 = (uint64_t *)((char *)v63 + OBJC_IVAR____TtC15ConversationKit21BannerActivityManager_updates);
        OUTLINED_FUNCTION_60_0();
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        v89 = *(_QWORD *)(*v88 + 16);
        specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v89);
        *(_QWORD *)(*v88 + 16) = v89 + 1;
        OUTLINED_FUNCTION_119_3();
        outlined init with take of HUDActivityManager.BannerUpdate(v87, v91 + *(_QWORD *)(v90 + 72) * v89);
        specialized MutableCollection<>.sort(by:)(v88);
        swift_endAccess();
        OUTLINED_FUNCTION_184_0();
        v92 = v63;
        OUTLINED_FUNCTION_69_17();
        v93 = OUTLINED_FUNCTION_31_6();
        if (os_log_type_enabled(v63, v93))
        {
          v95 = OUTLINED_FUNCTION_105();
          v96 = OUTLINED_FUNCTION_105();
          v125[0] = v96;
          *(_DWORD *)v95 = 136315394;
          v97 = *(_QWORD *)&v39[v46];
          v122 = v96;
          if (v97)
          {
            v98 = *(void (**)(uint64_t))(*(_QWORD *)v97 + 184);
            v99 = partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
            v100 = v112;
            v98(v99);
            OUTLINED_FUNCTION_43();
            v101 = 0;
          }
          else
          {
            v101 = 1;
            v100 = v112;
          }
          __swift_storeEnumTagSinglePayload(v100, v101, 1, v118);
          OUTLINED_FUNCTION_177_3();
          v103 = v102;
          OUTLINED_FUNCTION_109_0(v102, &demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
          v105 = OUTLINED_FUNCTION_162(v103, v104, v125);
          OUTLINED_FUNCTION_24_53(v105);
          OUTLINED_FUNCTION_58_1();

          *(_WORD *)(v95 + 12) = 2080;
          OUTLINED_FUNCTION_165_5(*v88);
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [HUDActivityManager.BannerUpdate]);
          v106 = OUTLINED_FUNCTION_176_3();
          v124 = OUTLINED_FUNCTION_141_5(v106, v107);
          OUTLINED_FUNCTION_137_0();
          OUTLINED_FUNCTION_53();

          OUTLINED_FUNCTION_26_6(&dword_1BD004000, v63, v93, "BannerActivityManager -Current state after queue:%s CurrentUpdates %s", (uint8_t *)v95);
          OUTLINED_FUNCTION_25_6();
          OUTLINED_FUNCTION_60();
        }
        OUTLINED_FUNCTION_17_22();

      }
      else
      {
        OUTLINED_FUNCTION_69_17();
        v72 = OUTLINED_FUNCTION_31_6();
        if (OUTLINED_FUNCTION_13_0(v72))
        {
          v73 = (_WORD *)OUTLINED_FUNCTION_105();
          OUTLINED_FUNCTION_124_3(v73);
          OUTLINED_FUNCTION_14_14(&dword_1BD004000, v74, v75, "BannerActivityManager - not tracking dismissed banner");
          OUTLINED_FUNCTION_60();
        }
        OUTLINED_FUNCTION_17_22();
      }

    }
  }
  OUTLINED_FUNCTION_52_1();
}

Swift::Void __swiftcall BannerActivityManager.presentNextBannerIfNeeded()()
{
  char *v0;
  NSObject *v1;
  char *v2;
  uint64_t v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  char *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  NSObject *oslog;
  uint64_t v14;

  v2 = v0;
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v3 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v3, (uint64_t)&static Logger.conversationControls);
  v4 = OUTLINED_FUNCTION_369();
  if (OUTLINED_FUNCTION_28_4(v1))
  {
    v5 = (uint8_t *)OUTLINED_FUNCTION_105();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_1BD004000, v1, v4, "BannerActivityManager - Present next banner if needed", v5, 2u);
    OUTLINED_FUNCTION_60();
  }

  v6 = OBJC_IVAR____TtC15ConversationKit21BannerActivityManager_presentedActivity;
  if (*(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit21BannerActivityManager_presentedActivity])
  {
    v7 = v0;
    oslog = Logger.logObject.getter();
    v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v8))
    {
      v9 = (uint8_t *)OUTLINED_FUNCTION_105();
      v14 = OUTLINED_FUNCTION_105();
      *(_DWORD *)v9 = 136315138;
      if (*(_QWORD *)&v2[v6])
      {
        ObjC metadata update function for HUDActivity();
        OUTLINED_FUNCTION_11_8();
        v10 = String.init<A>(reflecting:)();
        v12 = v11;
      }
      else
      {
        v12 = 0xE300000000000000;
        v10 = 7104878;
      }
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v10, v12, &v14);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();

      OUTLINED_FUNCTION_48(&dword_1BD004000, oslog, v8, "BannerActivityManager - Already presenting an activity %s", v9);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }

  }
  else
  {
    BannerActivityManager.presentTopMostUpdate()();
  }
}

void BannerActivityManager.init()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  id v5;
  objc_super v6;

  v1 = OBJC_IVAR____TtC15ConversationKit21BannerActivityManager_features;
  v2 = one-time initialization token for shared;
  v3 = v0;
  if (v2 != -1)
    swift_once();
  v4 = static Features.shared;
  *(_QWORD *)&v3[v1] = static Features.shared;
  OUTLINED_FUNCTION_8_21(OBJC_IVAR____TtC15ConversationKit21BannerActivityManager__bannerPresentationManager);
  OUTLINED_FUNCTION_8_21(OBJC_IVAR____TtC15ConversationKit21BannerActivityManager__callUIPresentationStateProvider);
  *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit21BannerActivityManager_presentedActivity] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit21BannerActivityManager_updates] = MEMORY[0x1E0DEE9D8];
  v5 = v4;

  v6.receiver = v3;
  v6.super_class = (Class)type metadata accessor for BannerActivityManager();
  objc_msgSendSuper2(&v6, sel_init);
  OUTLINED_FUNCTION_45_0();
}

id BannerActivityManager.__deallocating_deinit()
{
  return BaseButton.__deallocating_deinit(type metadata accessor for BannerActivityManager);
}

uint64_t type metadata accessor for HUDActivity(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for HUDActivity);
}

uint64_t type metadata accessor for HUDActivityManager()
{
  return objc_opt_self();
}

uint64_t outlined init with copy of HUDActivityManager.BannerUpdate?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HUDActivityManager.BannerUpdate?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t lazy protocol witness table accessor for type BannerPresentationError and conformance BannerPresentationError()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type BannerPresentationError and conformance BannerPresentationError;
  if (!lazy protocol witness table cache variable for type BannerPresentationError and conformance BannerPresentationError)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for BannerPresentationError, &type metadata for BannerPresentationError);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type BannerPresentationError and conformance BannerPresentationError);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type BannerPresentationError and conformance BannerPresentationError;
  if (!lazy protocol witness table cache variable for type BannerPresentationError and conformance BannerPresentationError)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for BannerPresentationError, &type metadata for BannerPresentationError);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type BannerPresentationError and conformance BannerPresentationError);
  }
  return result;
}

uint64_t sub_1BD3D2434()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void partial apply for closure #1 in BannerActivityManager.presentIfAble(_:)(uint64_t a1)
{
  uint64_t v1;

  closure #2 in HUDActivityManager.checkUpdatesAndPresentIfNeeded()(a1, v1, (void (*)(uint64_t))BannerActivityManager.dismissActivity(_:));
}

uint64_t type metadata accessor for BannerActivityManager()
{
  return objc_opt_self();
}

unint64_t lazy protocol witness table accessor for type HUDActivityManager.RelevanceScore and conformance HUDActivityManager.RelevanceScore()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type HUDActivityManager.RelevanceScore and conformance HUDActivityManager.RelevanceScore;
  if (!lazy protocol witness table cache variable for type HUDActivityManager.RelevanceScore and conformance HUDActivityManager.RelevanceScore)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for HUDActivityManager.RelevanceScore, &type metadata for HUDActivityManager.RelevanceScore);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type HUDActivityManager.RelevanceScore and conformance HUDActivityManager.RelevanceScore);
  }
  return result;
}

void base witness table accessor for Equatable in HUDActivityManager.BannerUpdate()
{
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type HUDActivityManager.BannerUpdate and conformance HUDActivityManager.BannerUpdate, (void (*)(uint64_t))type metadata accessor for HUDActivityManager.BannerUpdate);
}

unint64_t lazy protocol witness table accessor for type BannerActivityManager.DismissActivityRequest.Reason and conformance BannerActivityManager.DismissActivityRequest.Reason()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type BannerActivityManager.DismissActivityRequest.Reason and conformance BannerActivityManager.DismissActivityRequest.Reason;
  if (!lazy protocol witness table cache variable for type BannerActivityManager.DismissActivityRequest.Reason and conformance BannerActivityManager.DismissActivityRequest.Reason)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for BannerActivityManager.DismissActivityRequest.Reason, &type metadata for BannerActivityManager.DismissActivityRequest.Reason);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type BannerActivityManager.DismissActivityRequest.Reason and conformance BannerActivityManager.DismissActivityRequest.Reason);
  }
  return result;
}

void sub_1BD3D2544(uint64_t a1)
{
  (*(void (**)(void))(**(_QWORD **)a1 + 136))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD3D256C(uint64_t a1)
{
  (*(void (**)(void))(**(_QWORD **)a1 + 184))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD3D2594()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x78))();
  v0[1] = v2;
  OUTLINED_FUNCTION_0();
}

void sub_1BD3D25D4()
{
  uint64_t *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = OUTLINED_FUNCTION_67_2(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD3D2604(_BYTE *a1@<X8>)
{
  char v2;

  HUDActivityManager.forceSuppressSystemApertureOverAssociatedScene.getter();
  *a1 = v2 & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD3D262C(char *a1)
{
  HUDActivityManager.forceSuppressSystemApertureOverAssociatedScene.setter(*a1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD3D264C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  *v0 = OUTLINED_FUNCTION_14_7(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_0();
}

void sub_1BD3D267C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  *v0 = OUTLINED_FUNCTION_5_83(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_0();
}

uint64_t ObjC metadata update function for HUDActivity()
{
  return type metadata accessor for HUDActivity(0);
}

void type metadata completion function for HUDActivity()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  type metadata accessor for Published<Bool>();
  if (v0 <= 0x3F)
  {
    type metadata accessor for UUID();
    if (v1 <= 0x3F)
    {
      type metadata accessor for HUDActivityManager.BannerUpdate(319);
      if (v2 <= 0x3F)
        swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for HUDActivity()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of HUDActivity.dismissed.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of HUDActivity.dismissed.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of HUDActivity.dismissed.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of HUDActivity.$dismissed.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of HUDActivity.$dismissed.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of HUDActivity.$dismissed.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of HUDActivity.relatedUpdate.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of HUDActivity.relatedUpdate.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of HUDActivity.relatedUpdate.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of HUDActivity.isPersistent.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of HUDActivity.__allocating_init(withUpdate:dismissHandler:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 216))();
}

uint64_t dispatch thunk of HUDActivity.end()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t ObjC metadata update function for CoupledHUDActivity()
{
  return type metadata accessor for CoupledHUDActivity(0);
}

uint64_t type metadata accessor for CoupledHUDActivity(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for CoupledHUDActivity);
}

uint64_t type metadata completion function for CoupledHUDActivity()
{
  return swift_updateClassMetadata2();
}

uint64_t method lookup function for HUDActivityManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of HUDActivityManager.displayResolver.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of HUDActivityManager.displayResolver.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of HUDActivityManager.displayResolver.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of HUDActivityManager.bannerPresentationManager.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of HUDActivityManager.bannerPresentationManager.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of HUDActivityManager.bannerPresentationManager.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of HUDActivityManager.updateWith(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of HUDActivityManager.activityWith(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of HUDActivityManager.dismissPresentedActivity()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of HUDActivityManager.reset()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of HUDActivityManager.dismissTemporaryActivity()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x110))();
}

void type metadata accessor for HUDActivityManager.RelevanceScore()
{
  OUTLINED_FUNCTION_34_0();
}

_QWORD *initializeBufferWithCopyOfBuffer for HUDActivityManager.BannerUpdate(_QWORD *a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  _OWORD *v7;
  void **v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  void *v13;
  id v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  char *v28;
  uint64_t v29;
  id v30;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v7 = a1 + 1;
    v8 = (void **)(a2 + 1);
    switch(*((_BYTE *)a2 + 48))
    {
      case 0:
        v9 = *((_OWORD *)a2 + 2);
        *((_OWORD *)v4 + 2) = v9;
        (**(void (***)(_OWORD *, void **))(v9 - 8))(v7, v8);
        *((_BYTE *)v4 + 48) = 0;
        break;
      case 1:
        v11 = a2[2];
        v4[1] = a2[1];
        v4[2] = v11;
        v12 = 1;
        goto LABEL_8;
      case 2:
        v13 = *v8;
        v4[1] = *v8;
        *((_BYTE *)v4 + 48) = 2;
        v14 = v13;
        break;
      case 3:
        v15 = a2[2];
        v4[1] = a2[1];
        v4[2] = v15;
        v12 = 3;
LABEL_8:
        *((_BYTE *)v4 + 48) = v12;
        swift_bridgeObjectRetain();
        break;
      case 5:
        *(_OWORD *)(v4 + 1) = *(_OWORD *)v8;
        *((_BYTE *)v4 + 48) = 5;
        swift_unknownObjectRetain();
        break;
      default:
        v16 = *(_OWORD *)(a2 + 3);
        *v7 = *(_OWORD *)v8;
        *(_OWORD *)(v4 + 3) = v16;
        *(_OWORD *)((char *)v4 + 33) = *(_OWORD *)((char *)a2 + 33);
        break;
    }
    v4[7] = a2[7];
    *((_WORD *)v4 + 32) = *((_WORD *)a2 + 32);
    v17 = a3[8];
    v18 = (char *)v4 + v17;
    v19 = (uint64_t)a2 + v17;
    v20 = type metadata accessor for UUID();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
    v21 = a3[9];
    v22 = (char *)v4 + v21;
    v23 = (uint64_t)a2 + v21;
    v24 = type metadata accessor for Date();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
    v25 = a3[10];
    v26 = a3[11];
    v27 = *(void **)((char *)a2 + v25);
    *(_QWORD *)((char *)v4 + v25) = v27;
    v28 = (char *)v4 + v26;
    v29 = (uint64_t)a2 + v26;
    v30 = v27;
    swift_unknownObjectWeakCopyInit();
    *((_QWORD *)v28 + 1) = *(_QWORD *)(v29 + 8);
  }
  return v4;
}

uint64_t destroy for HUDActivityManager.BannerUpdate(uint64_t a1, int *a2)
{
  int v4;
  id *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(unsigned __int8 *)(a1 + 48);
  v5 = (id *)(a1 + 8);
  switch(v4)
  {
    case 0:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
      break;
    case 1:
    case 3:
      swift_bridgeObjectRelease();
      break;
    case 2:

      break;
    case 5:
      swift_unknownObjectRelease();
      break;
    default:
      break;
  }
  v6 = a1 + a2[8];
  v7 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = a1 + a2[9];
  v9 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);

  return swift_unknownObjectWeakDestroy();
}

uint64_t initializeWithCopy for HUDActivityManager.BannerUpdate(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t *v6;
  uint64_t v7;
  _OWORD *v8;
  __int128 v9;
  uint64_t v10;
  char v11;
  void *v12;
  id v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;

  v7 = *a2;
  v6 = a2 + 1;
  *(_QWORD *)a1 = v7;
  v8 = (_OWORD *)(a1 + 8);
  switch(*((_BYTE *)a2 + 48))
  {
    case 0:
      v9 = *((_OWORD *)a2 + 2);
      *(_OWORD *)(a1 + 32) = v9;
      (**(void (***)(_OWORD *, uint64_t))(v9 - 8))(v8, (uint64_t)v6);
      *(_BYTE *)(a1 + 48) = 0;
      break;
    case 1:
      v10 = a2[2];
      *(_QWORD *)(a1 + 8) = a2[1];
      *(_QWORD *)(a1 + 16) = v10;
      v11 = 1;
      goto LABEL_6;
    case 2:
      v12 = (void *)*v6;
      *(_QWORD *)(a1 + 8) = *v6;
      *(_BYTE *)(a1 + 48) = 2;
      v13 = v12;
      break;
    case 3:
      v14 = a2[2];
      *(_QWORD *)(a1 + 8) = a2[1];
      *(_QWORD *)(a1 + 16) = v14;
      v11 = 3;
LABEL_6:
      *(_BYTE *)(a1 + 48) = v11;
      swift_bridgeObjectRetain();
      break;
    case 5:
      *(_OWORD *)(a1 + 8) = *(_OWORD *)v6;
      *(_BYTE *)(a1 + 48) = 5;
      swift_unknownObjectRetain();
      break;
    default:
      v15 = *((_OWORD *)v6 + 1);
      *v8 = *(_OWORD *)v6;
      v8[1] = v15;
      *(_OWORD *)((char *)v8 + 25) = *(_OWORD *)((char *)v6 + 25);
      break;
  }
  *(_QWORD *)(a1 + 56) = a2[7];
  *(_WORD *)(a1 + 64) = *((_WORD *)a2 + 32);
  v16 = a3[8];
  v17 = a1 + v16;
  v18 = (uint64_t)a2 + v16;
  v19 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  v20 = a3[9];
  v21 = a1 + v20;
  v22 = (uint64_t)a2 + v20;
  v23 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
  v24 = a3[10];
  v25 = a3[11];
  v26 = *(void **)((char *)a2 + v24);
  *(_QWORD *)(a1 + v24) = v26;
  v27 = a1 + v25;
  v28 = (uint64_t)a2 + v25;
  v29 = v26;
  swift_unknownObjectWeakCopyInit();
  *(_QWORD *)(v27 + 8) = *(_QWORD *)(v28 + 8);
  return a1;
}

uint64_t assignWithCopy for HUDActivityManager.BannerUpdate(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 *v6;
  _OWORD *v7;
  uint64_t v8;
  char v9;
  void *v10;
  id v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  id v26;
  uint64_t v27;

  v6 = (__int128 *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v7 = (_OWORD *)(a1 + 8);
  if (a1 != a2)
  {
    outlined destroy of ConversationControlsType(a1 + 8);
    switch(*(_BYTE *)(a2 + 48))
    {
      case 0:
        v8 = *(_QWORD *)(a2 + 32);
        *(_QWORD *)(a1 + 32) = v8;
        *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
        (**(void (***)(_OWORD *, __int128 *))(v8 - 8))(v7, v6);
        *(_BYTE *)(a1 + 48) = 0;
        break;
      case 1:
        *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        v9 = 1;
        goto LABEL_7;
      case 2:
        v10 = *(void **)v6;
        *(_QWORD *)(a1 + 8) = *(_QWORD *)v6;
        *(_BYTE *)(a1 + 48) = 2;
        v11 = v10;
        break;
      case 3:
        *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        v9 = 3;
LABEL_7:
        *(_BYTE *)(a1 + 48) = v9;
        swift_bridgeObjectRetain();
        break;
      case 5:
        *(_OWORD *)(a1 + 8) = *v6;
        *(_BYTE *)(a1 + 48) = 5;
        swift_unknownObjectRetain();
        break;
      default:
        v12 = *v6;
        v13 = v6[1];
        *(_OWORD *)((char *)v7 + 25) = *(__int128 *)((char *)v6 + 25);
        *v7 = v12;
        v7[1] = v13;
        break;
    }
  }
  v14 = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v14;
  *(_BYTE *)(a1 + 65) = *(_BYTE *)(a2 + 65);
  v15 = a3[8];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[9];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[10];
  v24 = *(void **)(a1 + v23);
  v25 = *(void **)(a2 + v23);
  *(_QWORD *)(a1 + v23) = v25;
  v26 = v25;

  v27 = a2 + a3[11];
  *(_QWORD *)(swift_unknownObjectWeakCopyAssign() + 8) = *(_QWORD *)(v27 + 8);
  return a1;
}

uint64_t initializeWithTake for HUDActivityManager.BannerUpdate(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v6 = *(_OWORD *)(a2 + 33);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
  v7 = a3[8];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_OWORD *)(a1 + 33) = v6;
  v10 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[9];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[11];
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  *(_QWORD *)(swift_unknownObjectWeakTakeInit() + 8) = *(_QWORD *)(a2 + v15 + 8);
  return a1;
}

uint64_t assignWithTake for HUDActivityManager.BannerUpdate(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  if (a1 != a2)
  {
    outlined destroy of ConversationControlsType(a1 + 8);
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 33) = *(_OWORD *)(a2 + 33);
  }
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_BYTE *)(a1 + 65) = *(_BYTE *)(a2 + 65);
  v6 = a3[8];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[9];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  v14 = a3[10];
  v15 = *(void **)(a1 + v14);
  *(_QWORD *)(a1 + v14) = *(_QWORD *)(a2 + v14);

  v16 = a2 + a3[11];
  *(_QWORD *)(swift_unknownObjectWeakTakeAssign() + 8) = *(_QWORD *)(v16 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for HUDActivityManager.BannerUpdate()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1BD3D3188(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = OUTLINED_FUNCTION_33_0();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = *(int *)(a3 + 32);
LABEL_5:
    __swift_getEnumTagSinglePayload(a1 + v8, a2, v7);
    return;
  }
  v9 = OUTLINED_FUNCTION_33();
  if (*(_DWORD *)(*(_QWORD *)(v9 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v9;
    v8 = *(int *)(a3 + 36);
    goto LABEL_5;
  }
  OUTLINED_FUNCTION_18();
}

uint64_t storeEnumTagSinglePayload for HUDActivityManager.BannerUpdate()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BD3D3228(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v8 = OUTLINED_FUNCTION_33_0();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = a4[8];
LABEL_5:
    __swift_storeEnumTagSinglePayload(a1 + v10, a2, a2, v9);
    return;
  }
  v11 = OUTLINED_FUNCTION_33();
  if (*(_DWORD *)(*(_QWORD *)(v11 - 8) + 84) == a3)
  {
    v9 = v11;
    v10 = a4[9];
    goto LABEL_5;
  }
  v12 = (_QWORD *)(a1 + a4[11]);
  *v12 = (a2 - 1);
  v12[1] = 1;
  OUTLINED_FUNCTION_18();
}

uint64_t type metadata completion function for HUDActivityManager.BannerUpdate()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for Date();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t dispatch thunk of ActivityBanner.systemApertureElementIsShowingHUD.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ActivityBanner.sizeClass.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ActivityBanner.activityUUID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of ActivityBanner.updateContent(for:using:controllingWith:fromActivityManager:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(a7 + 32))(a1, a2, a3 & 1);
}

uint64_t method lookup function for BannerActivityManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BannerActivityManager.bannerPresentationManager.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of BannerActivityManager.bannerPresentationManager.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of BannerActivityManager.bannerPresentationManager.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of BannerActivityManager.callUIPresentationStateProvider.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of BannerActivityManager.callUIPresentationStateProvider.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of BannerActivityManager.callUIPresentationStateProvider.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of BannerActivityManager.start(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of BannerActivityManager.dismissPresentedActivity(request:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x110))();
}

uint64_t dispatch thunk of BannerActivityManager.canPresent(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x130))();
}

uint64_t dispatch thunk of BannerActivityManager.presentIfAble(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x138))();
}

uint64_t dispatch thunk of BannerActivityManager.presentHUD()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x140))();
}

uint64_t dispatch thunk of BannerActivityManager.dismissPresentedBanner(forReason:animated:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x150))();
}

uint64_t dispatch thunk of BannerActivityManager.bannerDismissed(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x158))();
}

uint64_t dispatch thunk of BannerActivityManager.presentNextBannerIfNeeded()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x160))();
}

void type metadata accessor for BannerActivityManager.DismissActivityRequest()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t storeEnumTagSinglePayload for BannerActivityManager.DismissActivityRequest.Reason(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BD3D3594 + 4 * byte_1BD65D308[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BD3D35B4 + 4 * byte_1BD65D30D[v4]))();
}

_BYTE *sub_1BD3D3594(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BD3D35B4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BD3D35BC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BD3D35C4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BD3D35CC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BD3D35D4(_DWORD *result)
{
  *result = 0;
  return result;
}

void type metadata accessor for BannerActivityManager.DismissActivityRequest.Reason()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t dispatch thunk of BannerPresenter.presentNewBanner(as:type:activityUUID:fromActivityManager:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

uint64_t dispatch thunk of BannerPresenter.presentBanner(as:type:activityTypeForNewBanner:activityUUID:fromActivityManager:reply:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(void))(a9 + 16))();
}

uint64_t dispatch thunk of BannerPresenter.dismissPresentedBanner(forReason:animated:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

void specialized UnsafeMutableBufferPointer._stableSortImpl(by:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double *v9;
  uint64_t v10;
  double *v11;
  Swift::Int v12;
  Swift::Int v13;
  Swift::Int v14;
  Swift::Int v15;
  _QWORD *v16;
  Swift::Int v17;
  Swift::Int v18;
  Swift::Int v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  double v24;
  uint64_t v25;
  Swift::Int v26;
  uint64_t v27;
  Swift::Int v28;
  _BOOL4 v29;
  Swift::Int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  Swift::Int v34;
  uint64_t v35;
  Swift::Int v36;
  Swift::Int v38;
  uint64_t v39;
  Swift::Int v40;
  uint64_t v41;
  Swift::Int v42;
  uint64_t v43;
  double v44;
  double v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  _QWORD *v51;
  Swift::Int *v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  BOOL v64;
  unint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  BOOL v74;
  uint64_t v75;
  char v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  BOOL v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  _QWORD *v93;
  uint64_t *v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  unint64_t v98;
  _QWORD *v99;
  _QWORD *v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  unint64_t v105;
  _QWORD *v106;
  _QWORD *v107;
  _QWORD *v108;
  Swift::Int v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  Swift::Int v116;
  uint64_t v117;
  Swift::Int v118;
  uint64_t v119;
  uint64_t v120;
  Swift::Int v121;
  uint64_t v122;
  double *v123;
  double *v124;
  uint64_t *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  Swift::Int v129;

  OUTLINED_FUNCTION_150_4();
  v1 = v0;
  v3 = v2;
  v119 = *(_QWORD *)(OUTLINED_FUNCTION_63_0() - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_5_27();
  v117 = v5;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_18_0();
  v126 = v7;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_18_0();
  v124 = v9;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_62();
  v123 = v11;
  v12 = v3[1];
  v13 = _minimumMergeRunLength(_:)(v12);
  if (v13 < v12)
  {
    v14 = v13;
    v125 = v3;
    v110 = specialized static Array._allocateUninitialized(_:)(v12 / 2);
    v111 = v12;
    if (v12 <= 0)
      goto LABEL_100;
    v109 = v14;
    v15 = 0;
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v17 = v12;
    while (1)
    {
      v18 = v15;
      v19 = v15 + 1;
      if (v15 + 1 >= v17)
      {
        v26 = v15 + 1;
        v20 = v125;
      }
      else
      {
        v20 = v125;
        v21 = *v125;
        v22 = *(_QWORD *)(v119 + 72);
        v118 = v15;
        outlined init with copy of HUDActivityManager.BannerUpdate(*v125 + v22 * v19, (uint64_t)v123);
        outlined init with copy of HUDActivityManager.BannerUpdate(v21 + v22 * v18, (uint64_t)v124);
        v23 = *v123;
        v24 = *v124;
        outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v124);
        outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v123);
        v25 = v22;
        v26 = v18 + 2;
        v114 = v21;
        v127 = v25;
        if (v18 + 2 < v17)
        {
          v120 = v25 * v19;
          v27 = v21;
          v28 = v18 + 2;
          v115 = v25 * (v18 + 2);
          while (1)
          {
            outlined init with copy of HUDActivityManager.BannerUpdate(v27 + v115, (uint64_t)v123);
            outlined init with copy of HUDActivityManager.BannerUpdate(v27 + v120, (uint64_t)v124);
            v29 = *v123 >= *v124;
            outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v124);
            outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v123);
            if (v23 < v24 == v29)
              break;
            v25 = v127;
            v27 += v127;
            if (++v28 >= v17)
            {
              v26 = v17;
              v18 = v118;
              goto LABEL_12;
            }
          }
          v26 = v28;
          v18 = v118;
          v25 = v127;
        }
LABEL_12:
        if (v23 < v24)
        {
          if (v26 < v18)
            goto LABEL_134;
          if (v18 < v26)
          {
            v121 = v17;
            v107 = v16;
            v112 = v1;
            v30 = v26;
            v31 = 0;
            v32 = v25 * (v30 - 1);
            v33 = v30 * v25;
            v34 = v18;
            v35 = v18 * v25;
            do
            {
              v36 = v30;
              if (v34 != v30 + v31 - 1)
              {
                if (!v114)
                  goto LABEL_140;
                outlined init with take of HUDActivityManager.BannerUpdate(v114 + v35, v117);
                if (v35 < v32 || v114 + v35 >= (unint64_t)(v114 + v33))
                {
                  OUTLINED_FUNCTION_103_7();
                }
                else if (v35 != v32)
                {
                  swift_arrayInitWithTakeBackToFront();
                }
                outlined init with take of HUDActivityManager.BannerUpdate(v117, v114 + v32);
                v20 = v125;
                v25 = v127;
              }
              ++v34;
              --v31;
              v30 = v36;
              v32 -= v25;
              v33 -= v25;
              v35 += v25;
            }
            while (v34 < v36 + v31);
            v1 = v112;
            v16 = v107;
            v26 = v36;
            v18 = v118;
            v17 = v121;
          }
        }
      }
      if (v26 < v17)
      {
        if (__OFSUB__(v26, v18))
          goto LABEL_132;
        if (v26 - v18 < v109)
        {
          if (__OFADD__(v18, v109))
            goto LABEL_135;
          if (v18 + v109 >= v17)
            v38 = v17;
          else
            v38 = v18 + v109;
          if (v38 < v18)
          {
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
            return;
          }
          if (v26 != v38)
          {
            v108 = v16;
            v113 = v1;
            v39 = *(_QWORD *)(v119 + 72);
            v128 = v39 * (v26 - 1);
            v122 = v39;
            v40 = v26 * v39;
            v116 = v38;
            do
            {
              v41 = 0;
              v42 = v18;
              do
              {
                v43 = *v20;
                outlined init with copy of HUDActivityManager.BannerUpdate(v40 + v41 + *v20, (uint64_t)v123);
                outlined init with copy of HUDActivityManager.BannerUpdate(v128 + v41 + v43, (uint64_t)v124);
                v44 = *v123;
                v45 = *v124;
                outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v124);
                outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v123);
                if (v44 >= v45)
                  break;
                v46 = *v20;
                if (!*v20)
                  goto LABEL_138;
                v47 = v46 + v128 + v41;
                outlined init with take of HUDActivityManager.BannerUpdate(v46 + v40 + v41, v126);
                OUTLINED_FUNCTION_103_7();
                outlined init with take of HUDActivityManager.BannerUpdate(v126, v47);
                v41 -= v122;
                ++v42;
                v20 = v125;
              }
              while (v26 != v42);
              ++v26;
              v128 += v122;
              v40 += v122;
            }
            while (v26 != v116);
            v26 = v116;
            v1 = v113;
            v16 = v108;
          }
        }
      }
      if (v26 < v18)
        goto LABEL_131;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_160_1(0, v16[2] + 1);
        v16 = v99;
      }
      v49 = v16[2];
      v48 = v16[3];
      v50 = v49 + 1;
      if (v49 >= v48 >> 1)
      {
        OUTLINED_FUNCTION_160_1(v48 > 1, v49 + 1);
        v16 = v100;
      }
      v16[2] = v50;
      v51 = v16 + 4;
      v52 = &v16[2 * v49 + 4];
      *v52 = v18;
      v52[1] = v26;
      v129 = v26;
      if (v49)
      {
        while (1)
        {
          v53 = v50 - 1;
          if (v50 >= 4)
          {
            v58 = &v51[2 * v50];
            v59 = *(v58 - 8);
            v60 = *(v58 - 7);
            v64 = __OFSUB__(v60, v59);
            v61 = v60 - v59;
            if (v64)
              goto LABEL_117;
            v63 = *(v58 - 6);
            v62 = *(v58 - 5);
            v64 = __OFSUB__(v62, v63);
            v56 = v62 - v63;
            v57 = v64;
            if (v64)
              goto LABEL_118;
            v65 = v50 - 2;
            v66 = &v51[2 * v50 - 4];
            v68 = *v66;
            v67 = v66[1];
            v64 = __OFSUB__(v67, v68);
            v69 = v67 - v68;
            if (v64)
              goto LABEL_119;
            v64 = __OFADD__(v56, v69);
            v70 = v56 + v69;
            if (v64)
              goto LABEL_121;
            if (v70 >= v61)
            {
              v88 = &v51[2 * v53];
              v90 = *v88;
              v89 = v88[1];
              v64 = __OFSUB__(v89, v90);
              v91 = v89 - v90;
              if (v64)
                goto LABEL_127;
              v81 = v56 < v91;
              goto LABEL_82;
            }
          }
          else
          {
            if (v50 != 3)
            {
              v82 = v16[4];
              v83 = v16[5];
              v64 = __OFSUB__(v83, v82);
              v75 = v83 - v82;
              v76 = v64;
              goto LABEL_76;
            }
            v55 = v16[4];
            v54 = v16[5];
            v64 = __OFSUB__(v54, v55);
            v56 = v54 - v55;
            v57 = v64;
          }
          if ((v57 & 1) != 0)
            goto LABEL_120;
          v65 = v50 - 2;
          v71 = &v51[2 * v50 - 4];
          v73 = *v71;
          v72 = v71[1];
          v74 = __OFSUB__(v72, v73);
          v75 = v72 - v73;
          v76 = v74;
          if (v74)
            goto LABEL_122;
          v77 = &v51[2 * v53];
          v79 = *v77;
          v78 = v77[1];
          v64 = __OFSUB__(v78, v79);
          v80 = v78 - v79;
          if (v64)
            goto LABEL_124;
          if (__OFADD__(v75, v80))
            goto LABEL_126;
          if (v75 + v80 >= v56)
          {
            v81 = v56 < v80;
LABEL_82:
            if (v81)
              v53 = v65;
            goto LABEL_84;
          }
LABEL_76:
          if ((v76 & 1) != 0)
            goto LABEL_123;
          v84 = &v51[2 * v53];
          v86 = *v84;
          v85 = v84[1];
          v64 = __OFSUB__(v85, v86);
          v87 = v85 - v86;
          if (v64)
            goto LABEL_125;
          if (v87 < v75)
            goto LABEL_93;
LABEL_84:
          v92 = v53 - 1;
          if (v53 - 1 >= v50)
          {
            __break(1u);
LABEL_114:
            __break(1u);
LABEL_115:
            __break(1u);
LABEL_116:
            __break(1u);
LABEL_117:
            __break(1u);
LABEL_118:
            __break(1u);
LABEL_119:
            __break(1u);
LABEL_120:
            __break(1u);
LABEL_121:
            __break(1u);
LABEL_122:
            __break(1u);
LABEL_123:
            __break(1u);
LABEL_124:
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
            goto LABEL_136;
          }
          if (!*v125)
            goto LABEL_139;
          v93 = v16;
          v94 = &v51[2 * v92];
          v95 = *v94;
          v96 = &v51[2 * v53];
          v97 = v96[1];
          specialized _merge<A>(low:mid:high:buffer:by:)();
          if (v1)
            goto LABEL_98;
          if (v97 < v95)
            goto LABEL_114;
          if (v53 > v93[2])
            goto LABEL_115;
          *v94 = v95;
          v51[2 * v92 + 1] = v97;
          v98 = v93[2];
          if (v53 >= v98)
            goto LABEL_116;
          v16 = v93;
          v50 = v98 - 1;
          memmove(&v51[2 * v53], v96 + 2, 16 * (v98 - 1 - v53));
          v16[2] = v98 - 1;
          if (v98 <= 2)
            goto LABEL_93;
        }
      }
      v50 = 1;
LABEL_93:
      v17 = v125[1];
      v15 = v129;
      if (v129 >= v17)
      {
        while (v50 >= 2)
        {
          if (!*v125)
            goto LABEL_141;
          while (1)
          {
            v101 = v50 - 2;
            v102 = v16[2 * v50];
            v103 = v16[2 * v50 + 3];
            specialized _merge<A>(low:mid:high:buffer:by:)();
            if (v1)
              break;
            if (v103 < v102)
              goto LABEL_128;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              specialized _ArrayBuffer._consumeAndCreateNew()((uint64_t)v16);
              v16 = v106;
            }
            if (v101 >= v16[2])
              goto LABEL_129;
            v104 = &v16[2 * v101 + 4];
            *v104 = v102;
            v104[1] = v103;
            v105 = v16[2];
            if (v50 > v105)
              goto LABEL_130;
            memmove(&v16[2 * v50 + 2], &v16[2 * v50 + 4], 16 * (v105 - v50));
            v16[2] = v105 - 1;
            v50 = v105 - 1;
            if (v105 <= 2)
              goto LABEL_110;
          }
LABEL_98:
          swift_bridgeObjectRelease();
          if (v111 >= -1)
            goto LABEL_111;
          __break(1u);
LABEL_100:
          v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
          v50 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
        }
LABEL_110:
        swift_bridgeObjectRelease();
        if (v111 < -1)
          goto LABEL_137;
LABEL_111:
        *(_QWORD *)(v110 + 16) = 0;
        swift_bridgeObjectRelease();
        goto LABEL_112;
      }
    }
  }
  if (v12 < 0)
    goto LABEL_133;
  if (v12)
    specialized MutableCollection<>._insertionSort(within:sortedEnd:by:)();
LABEL_112:
  OUTLINED_FUNCTION_56_32();
}

void specialized MutableCollection<>._insertionSort(within:sortedEnd:by:)()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  OUTLINED_FUNCTION_150_4();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v25 = v6;
  v26 = OUTLINED_FUNCTION_63_0();
  MEMORY[0x1E0C80A78](v26);
  v29 = (uint64_t)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v8);
  v10 = (double *)((char *)&v23 - v9);
  MEMORY[0x1E0C80A78](v11);
  v14 = (double *)((char *)&v23 - v13);
  v28 = v3;
  v24 = v5;
  if (v3 != v5)
  {
    v15 = *(_QWORD *)(v12 + 72);
    v31 = v15 * (v28 - 1);
    v27 = v15;
    v30 = v15 * v28;
    while (2)
    {
      v16 = 0;
      v17 = v25;
      do
      {
        v18 = *v1;
        outlined init with copy of HUDActivityManager.BannerUpdate(v30 + v16 + *v1, (uint64_t)v14);
        outlined init with copy of HUDActivityManager.BannerUpdate(v31 + v16 + v18, (uint64_t)v10);
        v19 = *v14;
        v20 = *v10;
        outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v10);
        outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v14);
        if (v19 >= v20)
          break;
        v21 = *v1;
        if (!*v1)
        {
          __break(1u);
          return;
        }
        v22 = v21 + v31 + v16;
        outlined init with take of HUDActivityManager.BannerUpdate(v21 + v30 + v16, v29);
        swift_arrayInitWithTakeFrontToBack();
        outlined init with take of HUDActivityManager.BannerUpdate(v29, v22);
        v16 -= v27;
        ++v17;
      }
      while (v28 != v17);
      v31 += v27;
      v30 += v27;
      if (++v28 != v24)
        continue;
      break;
    }
  }
  OUTLINED_FUNCTION_56_32();
}

void specialized _merge<A>(low:mid:high:buffer:by:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  double *v11;
  uint64_t v12;
  uint64_t v13;
  double *v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  int64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  unint64_t v31;
  double v32;
  double v33;
  unint64_t v34;
  BOOL v37;
  BOOL v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  double *v46;
  double *v47;
  double v48;
  double v49;
  uint64_t v50;
  int64_t v54;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  double *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  OUTLINED_FUNCTION_150_4();
  v63 = v1;
  v64 = v2;
  v4 = v3;
  v57 = v5;
  v7 = v6;
  v9 = v8;
  v62 = OUTLINED_FUNCTION_63_0();
  MEMORY[0x1E0C80A78](v62);
  v11 = (double *)((char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v12);
  v14 = (double *)((char *)&v56 - v13);
  v16 = *(_QWORD *)(v15 + 72);
  if (!v16)
  {
    __break(1u);
LABEL_76:
    __break(1u);
LABEL_77:
    __break(1u);
    goto LABEL_78;
  }
  v17 = v7 - v9;
  if (v7 - v9 == 0x8000000000000000 && v16 == -1)
    goto LABEL_76;
  v19 = v57 - v7;
  if (v57 - v7 == 0x8000000000000000 && v16 == -1)
    goto LABEL_77;
  v61 = v4;
  v56 = v0;
  v21 = v17 / v16;
  v22 = v16;
  v23 = v19 / v16;
  if (v17 / v16 >= v19 / v16)
  {
    v26 = v61;
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(v7, v19 / v16, v61);
    v27 = v26 + v23 * v22;
    v38 = v23 * v22 < 1 || v9 >= v7;
    v30 = v22;
    if (v38)
      goto LABEL_70;
    v59 = -v22;
    v60 = v11;
    v39 = v57;
    v58 = v22;
    while (1)
    {
      v40 = v59;
      v41 = v39 + v59;
      v42 = v27 + v59;
      v43 = v27;
      outlined init with copy of HUDActivityManager.BannerUpdate(v27 + v59, (uint64_t)v14);
      v44 = v7 + v40;
      v45 = v7 + v40;
      v46 = v14;
      v47 = v60;
      outlined init with copy of HUDActivityManager.BannerUpdate(v45, (uint64_t)v60);
      v48 = *v46;
      v49 = *v47;
      v50 = (uint64_t)v47;
      v14 = v46;
      outlined destroy of HUDActivityManager.BannerUpdate(v50);
      outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v46);
      if (v48 < v49)
        break;
      if (v39 < v43 || v41 >= v43)
      {
        OUTLINED_FUNCTION_64_20();
        v27 = v42;
        v26 = v61;
LABEL_65:
        v30 = v58;
        v39 = v41;
        goto LABEL_66;
      }
      v26 = v61;
      if (v39 == v43)
      {
        v27 = v42;
        goto LABEL_65;
      }
      v39 = v41;
      OUTLINED_FUNCTION_65_22();
      v27 = v42;
      v30 = v58;
LABEL_66:
      if (v27 <= v26 || v7 <= v9)
        goto LABEL_70;
    }
    v57 = v43;
    if (v39 < v7 || v41 >= v7)
    {
      OUTLINED_FUNCTION_64_20();
      v7 = v44;
      v26 = v61;
      v30 = v58;
    }
    else
    {
      v30 = v58;
      if (v39 != v7)
      {
        v39 = v41;
        OUTLINED_FUNCTION_65_22();
        v7 = v44;
        v26 = v61;
LABEL_63:
        v27 = v57;
        goto LABEL_66;
      }
      v7 = v44;
      v26 = v61;
    }
    v39 = v41;
    goto LABEL_63;
  }
  v24 = v61;
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(v9, v17 / v16, v61);
  v25 = v21 * v22;
  v26 = v24;
  v27 = v24 + v25;
  v28 = v57;
  v29 = v25 < 1 || v7 >= v57;
  v30 = v22;
  if (!v29)
  {
    do
    {
      v31 = v27;
      outlined init with copy of HUDActivityManager.BannerUpdate(v7, (uint64_t)v14);
      outlined init with copy of HUDActivityManager.BannerUpdate(v26, (uint64_t)v11);
      v32 = *v14;
      v33 = *v11;
      outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v11);
      outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v14);
      if (v32 >= v33)
      {
        if (v9 < v26 || v9 >= v26 + v30)
        {
          OUTLINED_FUNCTION_64_20();
        }
        else if (v9 != v26)
        {
          OUTLINED_FUNCTION_65_22();
        }
        v34 = v7;
        v26 += v30;
        v28 = v57;
      }
      else
      {
        v34 = v7 + v30;
        if (v9 < v7 || v9 >= v34)
        {
          OUTLINED_FUNCTION_64_20();
        }
        else if (v9 != v7)
        {
          OUTLINED_FUNCTION_65_22();
        }
      }
      v27 = v31;
      v9 += v30;
      v37 = v26 >= v31 || v34 >= v28;
      v7 = v34;
    }
    while (!v37);
  }
  v7 = v9;
LABEL_70:
  v54 = v27 - v26;
  if (v30 != -1 || v54 != 0x8000000000000000)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(v26, v54 / v30, v7);
    return;
  }
LABEL_78:
  __break(1u);
}

uint64_t specialized Array._customRemoveLast()@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *v1;
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    result = specialized _ArrayBuffer._consumeAndCreateNew()();
    v3 = result;
  }
  v5 = *(_QWORD *)(v3 + 16);
  if (v5)
  {
    v6 = v5 - 1;
    v7 = type metadata accessor for HUDActivityManager.BannerUpdate(0);
    outlined init with take of HUDActivityManager.BannerUpdate(v3+ ((*(unsigned __int8 *)(*(_QWORD *)(v7 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v7 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v7 - 8) + 72) * v6, a1);
    *(_QWORD *)(v3 + 16) = v6;
    *v1 = v3;
    return __swift_storeEnumTagSinglePayload(a1, 0, 1, v7);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BD3D6634()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BD3D6658()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  id *v3;
  uint64_t v4;
  uint64_t v5;

  v1 = OUTLINED_FUNCTION_63_0();
  v2 = (*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_release();
  v3 = (id *)(v0 + v2 + 8);
  switch(*(_BYTE *)(v0 + v2 + 48))
  {
    case 0:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
      break;
    case 1:
    case 3:
      swift_bridgeObjectRelease();
      break;
    case 2:

      break;
    case 5:
      swift_unknownObjectRelease();
      break;
    default:
      break;
  }
  v4 = OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_15_27(v4);
  v5 = OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_15_27(v5);

  swift_unknownObjectWeakDestroy();
  swift_release();
  return OUTLINED_FUNCTION_17_33();
}

uint64_t partial apply for closure #3 in HUDActivityManager.checkUpdatesAndPresentIfNeeded()(char a1)
{
  uint64_t v1;
  uint64_t v3;

  type metadata accessor for HUDActivityManager.BannerUpdate(0);
  OUTLINED_FUNCTION_11_19();
  return closure #3 in HUDActivityManager.checkUpdatesAndPresentIfNeeded()(a1, *(_QWORD *)(v1 + 16), v1 + v3);
}

void specialized Array._customRemoveLast()(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    specialized _ArrayBuffer._consumeAndCreateNew()();
    v3 = v6;
  }
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    v5 = v4 - 1;
    outlined init with take of Notice((__int128 *)(v3 + 40 * (v4 - 1) + 32), a1);
    *(_QWORD *)(v3 + 16) = v5;
    *v1 = v3;
    OUTLINED_FUNCTION_18();
  }
  else
  {
    __break(1u);
  }
}

void partial apply for closure #2 in HUDActivityManager.checkUpdatesAndPresentIfNeeded()(uint64_t a1)
{
  uint64_t v1;

  closure #2 in HUDActivityManager.checkUpdatesAndPresentIfNeeded()(a1, v1, (void (*)(uint64_t))HUDActivityManager.dismissActivity(_:));
}

uint64_t sub_1BD3D681C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncPublisher<Published<Bool>.Publisher>);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return OUTLINED_FUNCTION_17_33();
}

uint64_t partial apply for closure #1 in CoupledHUDActivity.childActivity.didset(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncPublisher<Published<Bool>.Publisher>);
  OUTLINED_FUNCTION_11_19();
  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v7 = v1 + v6;
  v9 = *(_QWORD **)(v1 + v8);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = partial apply for closure #1 in AsyncCancellableTimer.wait(with:);
  return closure #1 in CoupledHUDActivity.childActivity.didset(a1, v4, v5, v7, v9);
}

void OUTLINED_FUNCTION_87_12()
{
  uint64_t v0;
  uint64_t v1;

  __swift_storeEnumTagSinglePayload(v0, 0, 1, v1);
  specialized >> prefix<A>(_:)(v0);
}

void OUTLINED_FUNCTION_89_18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  __swift_storeEnumTagSinglePayload(v2, a2, 1, *(_QWORD *)(v3 - 192));
  specialized >> prefix<A>(_:)(v2);
}

uint64_t OUTLINED_FUNCTION_103_7()
{
  return swift_arrayInitWithTakeFrontToBack();
}

uint64_t OUTLINED_FUNCTION_106_12(uint64_t a1)
{
  uint64_t v1;

  return outlined init with copy of HUDActivityManager.BannerUpdate(a1, v1);
}

void OUTLINED_FUNCTION_112_10(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = v1;
}

uint64_t OUTLINED_FUNCTION_116_6()
{
  uint64_t v0;

  return outlined destroy of HUDActivityManager.BannerUpdate(v0);
}

uint64_t OUTLINED_FUNCTION_118_12(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, (uint64_t *)(v2 - 104));
}

uint64_t OUTLINED_FUNCTION_127_6()
{
  uint64_t (*v0)(void);

  return v0();
}

uint64_t OUTLINED_FUNCTION_131_7(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_133_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  __swift_project_value_buffer(a1, a2);
  return v2;
}

uint64_t OUTLINED_FUNCTION_139_7(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 136) = a1;
  return v1 - 136;
}

uint64_t OUTLINED_FUNCTION_140_7(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 168) = a1;
  return v1 - 168;
}

uint64_t OUTLINED_FUNCTION_141_5(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, (uint64_t *)(v2 - 112));
}

uint64_t OUTLINED_FUNCTION_142_2@<X0>(uint64_t (*a1)(uint64_t, _QWORD, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return a1(v2, *(_QWORD *)(v3 - 176), v1);
}

uint64_t OUTLINED_FUNCTION_143_6(uint64_t a1)
{
  uint64_t v1;

  return outlined init with copy of ConversationControlsType(a1, v1 - 168);
}

void OUTLINED_FUNCTION_154_5()
{
  JUMPOUT(0x1C3B752C0);
}

uint64_t OUTLINED_FUNCTION_159_5(uint64_t *a1, uint64_t a2)
{
  return specialized MutableCollection._halfStablePartition(isSuffixElement:)(a1, a2);
}

void OUTLINED_FUNCTION_160_1(char a1, int64_t a2)
{
  char *v2;

  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, 1, v2);
}

uint64_t OUTLINED_FUNCTION_163_3(uint64_t a1)
{
  uint64_t v1;

  return outlined init with take of HUDActivityManager.BannerUpdate(a1, v1);
}

uint64_t OUTLINED_FUNCTION_165_5(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 128) = a1;
  return swift_bridgeObjectRetain();
}

void OUTLINED_FUNCTION_169_2(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  uint8_t *v4;

  _os_log_impl(a1, a2, a3, a4, v4, 0x12u);
}

uint64_t OUTLINED_FUNCTION_171_2()
{
  return Logger.logObject.getter();
}

uint64_t OUTLINED_FUNCTION_172_2()
{
  uint64_t v0;

  return outlined destroy of ConversationControlsType(v0 - 192);
}

void OUTLINED_FUNCTION_173_4(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  uint8_t *v4;

  _os_log_impl(a1, a2, a3, a4, v4, 0x26u);
}

uint64_t OUTLINED_FUNCTION_176_3()
{
  return String.init<A>(reflecting:)();
}

uint64_t OUTLINED_FUNCTION_181_4()
{
  uint64_t v0;

  return outlined destroy of ConversationControlsType(v0);
}

void InCallControlsPTTCallDetailsViewModel.init(pttCall:)(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = objc_msgSend(a1, sel_provider);
  v5 = objc_msgSend(v4, sel_localizedName);

  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v8 = v7;

  outlined bridged method (ob) of @objc TUCallProvider.bundleIdentifier.getter(objc_msgSend(a1, sel_provider));
  if (v10)
    v11 = v9;
  else
    v11 = 0;
  if (v10)
    v12 = v10;
  else
    v12 = 0xE000000000000000;
  v13 = objc_msgSend(a1, sel_channelDisplayName);
  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v16 = v15;

  *a2 = v6;
  a2[1] = v8;
  a2[2] = v11;
  a2[3] = v12;
  a2[4] = v14;
  a2[5] = v16;
  a2[6] = (uint64_t)a1;
}

void InCallControlsPTTCallDetailsViewModel.providerName.getter()
{
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_0();
}

void InCallControlsPTTCallDetailsViewModel.providerBundleIdentifier.getter()
{
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_0();
}

void InCallControlsPTTCallDetailsViewModel.channelName.getter()
{
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_0();
}

id InCallControlsPTTCallDetailsViewModel.pttCall.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 48);
}

uint64_t InCallControlsPTTCallDetailsViewModel.init(providerName:providerBundleIdentifier:channelName:pttCall:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, _QWORD *a8@<X8>)
{
  *a8 = result;
  a8[1] = a2;
  a8[2] = a3;
  a8[3] = a4;
  a8[4] = a5;
  a8[5] = a6;
  a8[6] = a7;
  return result;
}

void destroy for InCallControlsPTTCallDetailsViewModel(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

_QWORD *initializeWithCopy for InCallControlsPTTCallDetailsViewModel(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = (void *)a2[6];
  a1[6] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = v6;
  return a1;
}

_QWORD *assignWithCopy for InCallControlsPTTCallDetailsViewModel(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a2[6];
  v5 = (void *)a1[6];
  a1[6] = v4;
  v6 = v4;

  return a1;
}

uint64_t assignWithTake for InCallControlsPTTCallDetailsViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  v6 = *(void **)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);

  return a1;
}

ValueMetadata *type metadata accessor for InCallControlsPTTCallDetailsViewModel()
{
  return &type metadata for InCallControlsPTTCallDetailsViewModel;
}

uint64_t >> prefix<A>(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;

  v4 = type metadata accessor for Optional();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v17 - v7;
  v9 = *(_QWORD *)(a2 - 8);
  v10 = MEMORY[0x1E0C80A78](v6);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v17 - v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, a2) == 1)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    return 7104878;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v8, a2);
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, a2);
    v15 = String.init<A>(reflecting:)();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, a2);
  }
  return v15;
}

uint64_t Logger.conversationControls.unsafeMutableAddressor()
{
  return Logger.conversationControls.unsafeMutableAddressor(&one-time initialization token for conversationControls, (uint64_t)&static Logger.conversationControls);
}

uint64_t Logger.recordingSession.unsafeMutableAddressor()
{
  return Logger.conversationControls.unsafeMutableAddressor(&one-time initialization token for recordingSession, (uint64_t)&static Logger.recordingSession);
}

uint64_t Logger.conversationControls.unsafeMutableAddressor(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;

  if (*a1 != -1)
    OUTLINED_FUNCTION_36_8();
  v3 = OUTLINED_FUNCTION_17_2();
  return __swift_project_value_buffer(v3, a2);
}

uint64_t *OS_os_log.conversationKit.unsafeMutableAddressor()
{
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  return &static OS_os_log.conversationKit;
}

uint64_t Logger.sidebar.unsafeMutableAddressor()
{
  return Logger.conversationControls.unsafeMutableAddressor(&one-time initialization token for sidebar, (uint64_t)&static Logger.sidebar);
}

uint64_t Log.clarityUI.unsafeMutableAddressor()
{
  return Logger.conversationControls.unsafeMutableAddressor(&one-time initialization token for clarityUI, (uint64_t)&static Log.clarityUI);
}

uint64_t Logger.conversationKit.unsafeMutableAddressor()
{
  return Logger.conversationControls.unsafeMutableAddressor(&one-time initialization token for conversationKit, (uint64_t)&static Logger.conversationKit);
}

uint64_t Logger.audioTap.unsafeMutableAddressor()
{
  return Logger.conversationControls.unsafeMutableAddressor(&one-time initialization token for audioTap, (uint64_t)&static Logger.audioTap);
}

uint64_t Log.default.unsafeMutableAddressor()
{
  return Logger.conversationControls.unsafeMutableAddressor(&one-time initialization token for default, (uint64_t)&static Log.default);
}

uint64_t Log.screenSharing.unsafeMutableAddressor()
{
  return Logger.conversationControls.unsafeMutableAddressor(&one-time initialization token for screenSharing, (uint64_t)&static Log.screenSharing);
}

uint64_t Logger.videoMessaging.unsafeMutableAddressor()
{
  return Logger.conversationControls.unsafeMutableAddressor(&one-time initialization token for videoMessaging, (uint64_t)&static Logger.videoMessaging);
}

uint64_t Logger.peoplePicker.unsafeMutableAddressor()
{
  return Logger.conversationControls.unsafeMutableAddressor(&one-time initialization token for peoplePicker, (uint64_t)&static Logger.peoplePicker);
}

uint64_t Log.screenTime.unsafeMutableAddressor()
{
  return Logger.conversationControls.unsafeMutableAddressor(&one-time initialization token for screenTime, (uint64_t)&static Log.screenTime);
}

uint64_t Logger.answeringMachine.unsafeMutableAddressor()
{
  return Logger.conversationControls.unsafeMutableAddressor(&one-time initialization token for answeringMachine, (uint64_t)&static Logger.answeringMachine);
}

uint64_t Logger.preCall.unsafeMutableAddressor()
{
  return Logger.conversationControls.unsafeMutableAddressor(&one-time initialization token for preCall, (uint64_t)&static Logger.preCall);
}

uint64_t Logger.shareableContent.unsafeMutableAddressor()
{
  return Logger.conversationControls.unsafeMutableAddressor(&one-time initialization token for shareableContent, (uint64_t)&static Logger.shareableContent);
}

uint64_t String.init(namedPropertyValues:for:)(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  Swift::String v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  Swift::String v18;
  Swift::String v19;
  uint64_t v20;
  __int128 v23;
  uint64_t v24;
  _OWORD v25[2];
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v2 = a2;
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v31 = MEMORY[0x1E0DEE9D8];
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    v5 = a1 + 32;
    do
    {
      outlined init with copy of (name: String, value: Any?)(v5, (uint64_t)&v28, &demangling cache variable for type metadata for (name: String, value: Any?));
      v26 = v28;
      v27 = v29;
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_47_0(61);
      outlined init with copy of (name: String, value: Any?)((uint64_t)&v30, (uint64_t)&v23, &demangling cache variable for type metadata for Any?);
      if (v24)
      {
        outlined init with take of Any(&v23, v25);
        outlined init with copy of Any((uint64_t)v25, (uint64_t)&v23);
        v6 = String.init<A>(reflecting:)();
        v8 = v7;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
      }
      else
      {
        outlined destroy of Conversation?((uint64_t)&v23, &demangling cache variable for type metadata for Any?);
        v8 = (void *)0xE300000000000000;
        v6 = 7104878;
      }
      v9._countAndFlagsBits = v6;
      v9._object = v8;
      String.append(_:)(v9);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_47_0(41);
      v10 = v26;
      v11 = v27;
      outlined destroy of Conversation?((uint64_t)&v28, &demangling cache variable for type metadata for (name: String, value: Any?));
      v12 = v31;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        v12 = v31;
      }
      v13 = *(_QWORD *)(v12 + 16);
      if (v13 >= *(_QWORD *)(v12 + 24) >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        v12 = v31;
      }
      *(_QWORD *)(v12 + 16) = v13 + 1;
      v14 = v12 + 16 * v13;
      *(_QWORD *)(v14 + 32) = v10;
      *(_QWORD *)(v14 + 40) = v11;
      v5 += 48;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    v2 = a2;
  }
  else
  {
    swift_bridgeObjectRelease();
    v12 = MEMORY[0x1E0DEE9D8];
  }
  v28 = v12;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [String]);
  lazy protocol witness table accessor for type [String] and conformance [A]();
  v15 = BidirectionalCollection<>.joined(separator:)();
  v17 = v16;
  swift_bridgeObjectRelease();
  v28 = 60;
  v29 = 0xE100000000000000;
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  swift_getDynamicType();
  v18._countAndFlagsBits = _typeName(_:qualified:)();
  String.append(_:)(v18);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_47_0(32);
  v19._countAndFlagsBits = v15;
  v19._object = v17;
  String.append(_:)(v19);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_47_0(62);
  v20 = String.init<A>(_:)();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
  return v20;
}

uint64_t Logger.nickname.unsafeMutableAddressor()
{
  return Logger.conversationControls.unsafeMutableAddressor(&one-time initialization token for nickname, (uint64_t)&static Logger.nickname);
}

uint64_t Logger.audioNormalizer.unsafeMutableAddressor()
{
  return Logger.conversationControls.unsafeMutableAddressor(&one-time initialization token for audioNormalizer, (uint64_t)&static Logger.audioNormalizer);
}

id static OS_os_log.conversationKit.getter()
{
  return static OS_os_log.conversationKit.getter(&one-time initialization token for conversationKit, (id *)&static OS_os_log.conversationKit);
}

uint64_t one-time initialization function for conversationKitOversized()
{
  uint64_t result;

  type metadata accessor for OS_os_log();
  result = OS_os_log.init(subsystem:category:)();
  static OS_os_log.conversationKitOversized = result;
  return result;
}

uint64_t *OS_os_log.conversationKitOversized.unsafeMutableAddressor()
{
  if (one-time initialization token for conversationKitOversized != -1)
    swift_once();
  return &static OS_os_log.conversationKitOversized;
}

id static OS_os_log.conversationKitOversized.getter()
{
  return static OS_os_log.conversationKit.getter(&one-time initialization token for conversationKitOversized, (id *)&static OS_os_log.conversationKitOversized);
}

id static OS_os_log.conversationKit.getter(_QWORD *a1, id *a2)
{
  if (*a1 != -1)
    OUTLINED_FUNCTION_36_8();
  return *a2;
}

uint64_t static Log.default.getter@<X0>(uint64_t a1@<X8>)
{
  return static Log.default.getter(&one-time initialization token for default, (uint64_t)&static Log.default, a1);
}

void one-time initialization function for screenSharing()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_4_116(v0);
  OUTLINED_FUNCTION_0_131();
  OUTLINED_FUNCTION_8_93();
  Logger.init(subsystem:category:)();
  OUTLINED_FUNCTION_0();
}

uint64_t static Log.screenSharing.getter@<X0>(uint64_t a1@<X8>)
{
  return static Log.default.getter(&one-time initialization token for screenSharing, (uint64_t)&static Log.screenSharing, a1);
}

uint64_t one-time initialization function for requestToShare()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger();
  __swift_allocate_value_buffer(v0, static Log.requestToShare);
  __swift_project_value_buffer(v0, (uint64_t)static Log.requestToShare);
  return Logger.init(subsystem:category:)();
}

uint64_t Log.requestToShare.unsafeMutableAddressor()
{
  return Logger.conversationControls.unsafeMutableAddressor(&one-time initialization token for requestToShare, (uint64_t)static Log.requestToShare);
}

uint64_t static Log.requestToShare.getter@<X0>(uint64_t a1@<X8>)
{
  return static Log.default.getter(&one-time initialization token for requestToShare, (uint64_t)static Log.requestToShare, a1);
}

void one-time initialization function for screenTime()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_4_116(v0);
  OUTLINED_FUNCTION_0_131();
  OUTLINED_FUNCTION_8_93();
  Logger.init(subsystem:category:)();
  OUTLINED_FUNCTION_0();
}

uint64_t static Log.screenTime.getter@<X0>(uint64_t a1@<X8>)
{
  return static Log.default.getter(&one-time initialization token for screenTime, (uint64_t)&static Log.screenTime, a1);
}

void one-time initialization function for clarityUI()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_4_116(v0);
  OUTLINED_FUNCTION_0_131();
  OUTLINED_FUNCTION_5_112();
  Logger.init(subsystem:category:)();
  OUTLINED_FUNCTION_0();
}

uint64_t static Log.clarityUI.getter@<X0>(uint64_t a1@<X8>)
{
  return static Log.default.getter(&one-time initialization token for clarityUI, (uint64_t)&static Log.clarityUI, a1);
}

uint64_t static Logger.conversationKit.getter@<X0>(uint64_t a1@<X8>)
{
  return static Log.default.getter(&one-time initialization token for conversationKit, (uint64_t)&static Logger.conversationKit, a1);
}

void one-time initialization function for conversationControls()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_4_116(v0);
  OUTLINED_FUNCTION_0_131();
  OUTLINED_FUNCTION_1_125();
  OUTLINED_FUNCTION_0();
}

uint64_t static Logger.conversationControls.getter@<X0>(uint64_t a1@<X8>)
{
  return static Log.default.getter(&one-time initialization token for conversationControls, (uint64_t)&static Logger.conversationControls, a1);
}

void one-time initialization function for conversationController()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_4_116(v0);
  OUTLINED_FUNCTION_0_131();
  OUTLINED_FUNCTION_10_98();
  OUTLINED_FUNCTION_1_125();
  OUTLINED_FUNCTION_0();
}

uint64_t Logger.conversationController.unsafeMutableAddressor()
{
  return Logger.conversationControls.unsafeMutableAddressor(&one-time initialization token for conversationController, (uint64_t)&static Logger.conversationController);
}

uint64_t static Logger.conversationController.getter@<X0>(uint64_t a1@<X8>)
{
  return static Log.default.getter(&one-time initialization token for conversationController, (uint64_t)&static Logger.conversationController, a1);
}

void one-time initialization function for audioTap()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_4_116(v0);
  OUTLINED_FUNCTION_0_131();
  OUTLINED_FUNCTION_10_98();
  OUTLINED_FUNCTION_1_125();
  OUTLINED_FUNCTION_0();
}

uint64_t static Logger.audioTap.getter@<X0>(uint64_t a1@<X8>)
{
  return static Log.default.getter(&one-time initialization token for audioTap, (uint64_t)&static Logger.audioTap, a1);
}

void one-time initialization function for answeringMachine()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_4_116(v0);
  OUTLINED_FUNCTION_9_89();
  OUTLINED_FUNCTION_61();
  OUTLINED_FUNCTION_6_91();
  OUTLINED_FUNCTION_0();
}

uint64_t static Logger.answeringMachine.getter@<X0>(uint64_t a1@<X8>)
{
  return static Log.default.getter(&one-time initialization token for answeringMachine, (uint64_t)&static Logger.answeringMachine, a1);
}

void one-time initialization function for videoMessaging()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_4_116(v0);
  OUTLINED_FUNCTION_0_131();
  OUTLINED_FUNCTION_5_112();
  Logger.init(subsystem:category:)();
  OUTLINED_FUNCTION_0();
}

uint64_t static Logger.videoMessaging.getter@<X0>(uint64_t a1@<X8>)
{
  return static Log.default.getter(&one-time initialization token for videoMessaging, (uint64_t)&static Logger.videoMessaging, a1);
}

void one-time initialization function for shareableContent()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_4_116(v0);
  OUTLINED_FUNCTION_9_89();
  OUTLINED_FUNCTION_61();
  OUTLINED_FUNCTION_6_91();
  OUTLINED_FUNCTION_0();
}

uint64_t static Logger.shareableContent.getter@<X0>(uint64_t a1@<X8>)
{
  return static Log.default.getter(&one-time initialization token for shareableContent, (uint64_t)&static Logger.shareableContent, a1);
}

void one-time initialization function for sidebar()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_4_116(v0);
  OUTLINED_FUNCTION_0_131();
  OUTLINED_FUNCTION_7_105();
  Logger.init(subsystem:category:)();
  OUTLINED_FUNCTION_0();
}

uint64_t static Logger.sidebar.getter@<X0>(uint64_t a1@<X8>)
{
  return static Log.default.getter(&one-time initialization token for sidebar, (uint64_t)&static Logger.sidebar, a1);
}

void one-time initialization function for preCall()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_4_116(v0);
  OUTLINED_FUNCTION_0_131();
  OUTLINED_FUNCTION_7_105();
  Logger.init(subsystem:category:)();
  OUTLINED_FUNCTION_0();
}

uint64_t static Logger.preCall.getter@<X0>(uint64_t a1@<X8>)
{
  return static Log.default.getter(&one-time initialization token for preCall, (uint64_t)&static Logger.preCall, a1);
}

void one-time initialization function for nickname()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_4_116(v0);
  OUTLINED_FUNCTION_0_131();
  OUTLINED_FUNCTION_5_112();
  Logger.init(subsystem:category:)();
  OUTLINED_FUNCTION_0();
}

uint64_t static Logger.nickname.getter@<X0>(uint64_t a1@<X8>)
{
  return static Log.default.getter(&one-time initialization token for nickname, (uint64_t)&static Logger.nickname, a1);
}

void one-time initialization function for audioNormalizer()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_4_116(v0);
  OUTLINED_FUNCTION_0_131();
  OUTLINED_FUNCTION_5_112();
  Logger.init(subsystem:category:)();
  OUTLINED_FUNCTION_0();
}

uint64_t static Logger.audioNormalizer.getter@<X0>(uint64_t a1@<X8>)
{
  return static Log.default.getter(&one-time initialization token for audioNormalizer, (uint64_t)&static Logger.audioNormalizer, a1);
}

uint64_t one-time initialization function for attentionAwareness()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger();
  __swift_allocate_value_buffer(v0, static Logger.attentionAwareness);
  __swift_project_value_buffer(v0, (uint64_t)static Logger.attentionAwareness);
  return Logger.init(subsystem:category:)();
}

uint64_t Logger.attentionAwareness.unsafeMutableAddressor()
{
  return Logger.conversationControls.unsafeMutableAddressor(&one-time initialization token for attentionAwareness, (uint64_t)static Logger.attentionAwareness);
}

uint64_t static Logger.attentionAwareness.getter@<X0>(uint64_t a1@<X8>)
{
  return static Log.default.getter(&one-time initialization token for attentionAwareness, (uint64_t)static Logger.attentionAwareness, a1);
}

uint64_t one-time initialization function for dfrController()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger();
  __swift_allocate_value_buffer(v0, static Logger.dfrController);
  __swift_project_value_buffer(v0, (uint64_t)static Logger.dfrController);
  return Logger.init(subsystem:category:)();
}

uint64_t Logger.dfrController.unsafeMutableAddressor()
{
  return Logger.conversationControls.unsafeMutableAddressor(&one-time initialization token for dfrController, (uint64_t)static Logger.dfrController);
}

uint64_t static Logger.dfrController.getter@<X0>(uint64_t a1@<X8>)
{
  return static Log.default.getter(&one-time initialization token for dfrController, (uint64_t)static Logger.dfrController, a1);
}

void one-time initialization function for peoplePicker()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_4_116(v0);
  OUTLINED_FUNCTION_0_131();
  OUTLINED_FUNCTION_10_98();
  Logger.init(subsystem:category:)();
  OUTLINED_FUNCTION_0();
}

uint64_t static Logger.peoplePicker.getter@<X0>(uint64_t a1@<X8>)
{
  return static Log.default.getter(&one-time initialization token for peoplePicker, (uint64_t)&static Logger.peoplePicker, a1);
}

void one-time initialization function for recordingSession()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_4_116(v0);
  OUTLINED_FUNCTION_9_89();
  OUTLINED_FUNCTION_61();
  OUTLINED_FUNCTION_6_91();
  OUTLINED_FUNCTION_0();
}

uint64_t static Logger.recordingSession.getter@<X0>(uint64_t a1@<X8>)
{
  return static Log.default.getter(&one-time initialization token for recordingSession, (uint64_t)&static Logger.recordingSession, a1);
}

uint64_t static Log.default.getter@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    OUTLINED_FUNCTION_36_8();
  v5 = OUTLINED_FUNCTION_17_2();
  v6 = __swift_project_value_buffer(v5, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v6, v5);
}

uint64_t outlined init with copy of (name: String, value: Any?)(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

ValueMetadata *type metadata accessor for Log()
{
  return &type metadata for Log;
}

void specialized _dictionaryUpCast<A, B, C, D>(_:)()
{
  uint64_t v0;
  Swift::Int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  _OWORD *v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD *v29;
  int64_t v30;
  uint64_t v31;
  int64_t v32;
  _OWORD v33[2];

  OUTLINED_FUNCTION_27_53();
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<NSAttributedStringKey, Any>);
    v2 = OUTLINED_FUNCTION_2_112();
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9E0];
  }
  v31 = v0 + 64;
  OUTLINED_FUNCTION_11_88();
  v5 = v4 & v3;
  v30 = (unint64_t)(63 - v6) >> 6;
  v7 = v2 + 64;
  OUTLINED_FUNCTION_124();
  OUTLINED_FUNCTION_11_1();
  v32 = 0;
  if (!v5)
    goto LABEL_6;
LABEL_5:
  v5 &= v5 - 1;
  while (1)
  {
    OUTLINED_FUNCTION_32_42();
    *(_QWORD *)&v33[0] = v1;
    v17 = v16;
    swift_unknownObjectRetain();
    OUTLINED_FUNCTION_118_0();
    v18 = (_OWORD *)OUTLINED_FUNCTION_14_90();
    outlined init with take of Any(v18, v33);
    OUTLINED_FUNCTION_28_56();
    Hasher.init(_seed:)();
    String.hash(into:)();
    v1 = Hasher._finalize()();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_22_69();
    if (((v21 << v20) & ~*(_QWORD *)(v7 + 8 * v19)) == 0)
    {
      OUTLINED_FUNCTION_40_2();
      while (1)
      {
        OUTLINED_FUNCTION_144();
        if (v25)
        {
          if ((v22 & 1) != 0)
            break;
        }
        if (v23 == v24)
          v23 = 0;
        if (*(_QWORD *)(v7 + 8 * v23) != -1)
        {
          OUTLINED_FUNCTION_38_2();
          goto LABEL_36;
        }
      }
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    OUTLINED_FUNCTION_39_3();
LABEL_36:
    OUTLINED_FUNCTION_24_54();
    *(_QWORD *)(v7 + v26) |= v27;
    OUTLINED_FUNCTION_31_53(v28);
    OUTLINED_FUNCTION_9_90(v33, v29);
    if (v5)
      goto LABEL_5;
LABEL_6:
    v8 = v32 + 1;
    if (__OFADD__(v32, 1))
      goto LABEL_40;
    if (v8 >= v30)
      goto LABEL_38;
    v9 = *(_QWORD *)(v31 + 8 * v8);
    v10 = v32 + 1;
    if (!v9)
    {
      OUTLINED_FUNCTION_30_56();
      if (v11 == v12)
        goto LABEL_38;
      OUTLINED_FUNCTION_29_56();
      if (!v9)
      {
        OUTLINED_FUNCTION_30_56();
        if (v11 == v12)
          goto LABEL_38;
        OUTLINED_FUNCTION_29_56();
        if (!v9)
        {
          OUTLINED_FUNCTION_30_56();
          if (v11 == v12)
            goto LABEL_38;
          OUTLINED_FUNCTION_29_56();
          if (!v9)
            break;
        }
      }
    }
LABEL_25:
    v5 = (v9 - 1) & v9;
    v32 = v10;
  }
  v14 = v13 + 4;
  if (v14 >= v30)
  {
LABEL_38:
    swift_release();
    outlined consume of [String : Application].Iterator._Variant();
    return;
  }
  v9 = *(_QWORD *)(v31 + 8 * v14);
  if (v9)
  {
    v10 = v14;
    goto LABEL_25;
  }
  while (!__OFADD__(v14, 1))
  {
    OUTLINED_FUNCTION_30_56();
    if (v11 == v12)
      goto LABEL_38;
    OUTLINED_FUNCTION_29_56();
    v14 = v15 + 1;
    if (v9)
      goto LABEL_25;
  }
LABEL_41:
  __break(1u);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  _OWORD v27[2];
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  _OWORD v31[2];
  _OWORD v32[3];
  _OWORD v33[2];
  __int128 v34;
  _OWORD v35[2];

  OUTLINED_FUNCTION_27_53();
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<AnyHashable, Any>);
    v3 = OUTLINED_FUNCTION_2_112();
  }
  else
  {
    v3 = MEMORY[0x1E0DEE9E0];
  }
  OUTLINED_FUNCTION_0_132();
  OUTLINED_FUNCTION_124();
  OUTLINED_FUNCTION_11_1();
  if (!v2)
    goto LABEL_6;
LABEL_5:
  OUTLINED_FUNCTION_16_73();
  while (1)
  {
    v13 = (uint64_t *)(*(_QWORD *)(v0 + 48) + 16 * v4);
    v15 = *v13;
    v14 = v13[1];
    outlined init with copy of Any(*(_QWORD *)(v0 + 56) + 32 * v4, (uint64_t)v35);
    *(_QWORD *)&v34 = v15;
    *((_QWORD *)&v34 + 1) = v14;
    v32[2] = v34;
    v33[0] = v35[0];
    v33[1] = v35[1];
    *(_QWORD *)&v32[0] = v15;
    *((_QWORD *)&v32[0] + 1) = v14;
    OUTLINED_FUNCTION_5_0();
    OUTLINED_FUNCTION_118_0();
    outlined init with take of Any(v33, v27);
    v28 = v24;
    v29 = v25;
    v30 = v26;
    outlined init with take of Any(v27, v31);
    v24 = v28;
    v25 = v29;
    v26 = v30;
    outlined init with take of Any(v31, v32);
    outlined init with take of Any(v32, &v28);
    AnyHashable._rawHashValue(seed:)(*(_QWORD *)(v3 + 40));
    OUTLINED_FUNCTION_10_99();
    if (v16)
      break;
    OUTLINED_FUNCTION_39_3();
LABEL_36:
    OUTLINED_FUNCTION_3_111(v17);
    *(_OWORD *)v21 = v24;
    *(_OWORD *)(v21 + 16) = v25;
    *(_QWORD *)(v21 + 32) = v26;
    OUTLINED_FUNCTION_9_90(&v28, (_OWORD *)(*(_QWORD *)(v3 + 56) + 32 * v22));
    if (v2)
      goto LABEL_5;
LABEL_6:
    OUTLINED_FUNCTION_13_94();
    if (v5 == v6)
    {
LABEL_38:
      OUTLINED_FUNCTION_8_94();
      OUTLINED_FUNCTION_18_77();
      return;
    }
    OUTLINED_FUNCTION_21_73();
    if (!v7)
    {
      OUTLINED_FUNCTION_1_126();
      if (v5 == v6)
        goto LABEL_38;
      OUTLINED_FUNCTION_7_106();
      if (!v8)
      {
        OUTLINED_FUNCTION_1_126();
        if (v5 == v6)
          goto LABEL_38;
        OUTLINED_FUNCTION_7_106();
        if (!v9)
        {
          OUTLINED_FUNCTION_1_126();
          if (v5 == v6)
            goto LABEL_38;
          OUTLINED_FUNCTION_7_106();
          if (!v10)
          {
            OUTLINED_FUNCTION_13_94();
            if (v5 == v6)
              goto LABEL_38;
            if (!*(_QWORD *)(v23 + 8 * v11))
            {
              while (!__OFADD__(v11, 1))
              {
                OUTLINED_FUNCTION_1_126();
                if (v5 == v6)
                  goto LABEL_38;
                OUTLINED_FUNCTION_20_69();
                if (v12)
                  goto LABEL_25;
              }
              goto LABEL_40;
            }
          }
        }
      }
    }
LABEL_25:
    OUTLINED_FUNCTION_12_93();
  }
  OUTLINED_FUNCTION_40_2();
  while (1)
  {
    OUTLINED_FUNCTION_144();
    if (v16)
    {
      if ((v18 & 1) != 0)
        break;
    }
    if (v19 == v20)
      v19 = 0;
    if (*(_QWORD *)(v3 + 64 + 8 * v19) != -1)
    {
      OUTLINED_FUNCTION_38_2();
      goto LABEL_36;
    }
  }
  __break(1u);
  __break(1u);
LABEL_40:
  __break(1u);
}

{
  uint64_t v0;
  Swift::Int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  _OWORD *v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  uint64_t v26;
  _OWORD v27[2];

  OUTLINED_FUNCTION_27_53();
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<UIFontDescriptorAttributeName, Any>);
    v2 = OUTLINED_FUNCTION_2_112();
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9E0];
  }
  OUTLINED_FUNCTION_11_88();
  v5 = v4 & v3;
  v6 = v2 + 64;
  OUTLINED_FUNCTION_124();
  OUTLINED_FUNCTION_11_1();
  v26 = 0;
  if (!v5)
    goto LABEL_6;
LABEL_5:
  v5 &= v5 - 1;
  while (1)
  {
    OUTLINED_FUNCTION_32_42();
    *(_QWORD *)&v27[0] = v1;
    v13 = v12;
    OUTLINED_FUNCTION_5_0();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [[UIFontDescriptorFeatureKey : Int]]);
    OUTLINED_FUNCTION_118_0();
    v14 = (_OWORD *)OUTLINED_FUNCTION_14_90();
    outlined init with take of Any(v14, v27);
    OUTLINED_FUNCTION_28_56();
    Hasher.init(_seed:)();
    String.hash(into:)();
    v1 = Hasher._finalize()();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_22_69();
    if (((v17 << v16) & ~*(_QWORD *)(v6 + 8 * v15)) == 0)
    {
      OUTLINED_FUNCTION_40_2();
      while (1)
      {
        OUTLINED_FUNCTION_144();
        if (v21)
        {
          if ((v18 & 1) != 0)
            break;
        }
        if (v19 == v20)
          v19 = 0;
        if (*(_QWORD *)(v6 + 8 * v19) != -1)
        {
          OUTLINED_FUNCTION_38_2();
          goto LABEL_38;
        }
      }
      __break(1u);
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    OUTLINED_FUNCTION_39_3();
LABEL_38:
    OUTLINED_FUNCTION_24_54();
    *(_QWORD *)(v6 + v22) |= v23;
    OUTLINED_FUNCTION_31_53(v24);
    OUTLINED_FUNCTION_9_90(v27, v25);
    if (v5)
      goto LABEL_5;
LABEL_6:
    if (__OFADD__(v26, 1))
      goto LABEL_42;
    OUTLINED_FUNCTION_13_94();
    if (v7 == v8)
      goto LABEL_40;
    OUTLINED_FUNCTION_21_73();
    if (!v10)
    {
      OUTLINED_FUNCTION_1_126();
      if (v7 == v8)
        goto LABEL_40;
      OUTLINED_FUNCTION_7_106();
      if (!v10)
      {
        OUTLINED_FUNCTION_1_126();
        if (v7 == v8)
          goto LABEL_40;
        OUTLINED_FUNCTION_7_106();
        if (!v10)
        {
          OUTLINED_FUNCTION_1_126();
          if (v7 == v8)
            goto LABEL_40;
          OUTLINED_FUNCTION_7_106();
          if (!v10)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v10 - 1) & v10;
    v26 = v9;
  }
  OUTLINED_FUNCTION_13_94();
  if (v7 == v8)
  {
LABEL_40:
    OUTLINED_FUNCTION_8_94();
    outlined consume of [String : Application].Iterator._Variant();
    return;
  }
  v10 = *(_QWORD *)(v0 + 64 + 8 * v11);
  if (v10)
  {
    v9 = v11;
    goto LABEL_27;
  }
  while (!__OFADD__(v11, 1))
  {
    OUTLINED_FUNCTION_1_126();
    if (v7 == v8)
      goto LABEL_40;
    OUTLINED_FUNCTION_20_69();
    if (v10)
      goto LABEL_27;
  }
LABEL_43:
  __break(1u);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  _OWORD v30[2];
  _OWORD v31[2];

  OUTLINED_FUNCTION_27_53();
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<AnyHashable, Any>);
    v3 = OUTLINED_FUNCTION_2_112();
  }
  else
  {
    v3 = MEMORY[0x1E0DEE9E0];
  }
  OUTLINED_FUNCTION_0_132();
  OUTLINED_FUNCTION_124();
  OUTLINED_FUNCTION_11_1();
  if (!v2)
    goto LABEL_6;
LABEL_5:
  OUTLINED_FUNCTION_16_73();
  while (1)
  {
    v13 = (_QWORD *)(*(_QWORD *)(v0 + 48) + 16 * v4);
    v14 = v13[1];
    *(_QWORD *)&v31[0] = *v13;
    *((_QWORD *)&v31[0] + 1) = v14;
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_5_0();
    OUTLINED_FUNCTION_118_0();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for String?);
    OUTLINED_FUNCTION_118_0();
    v27 = v23;
    v28 = v24;
    v29 = v25;
    outlined init with take of Any(&v26, v30);
    v23 = v27;
    v24 = v28;
    v25 = v29;
    outlined init with take of Any(v30, v31);
    outlined init with take of Any(v31, &v27);
    AnyHashable._rawHashValue(seed:)(*(_QWORD *)(v3 + 40));
    OUTLINED_FUNCTION_10_99();
    if (v15)
      break;
    OUTLINED_FUNCTION_39_3();
LABEL_36:
    OUTLINED_FUNCTION_3_111(v16);
    *(_OWORD *)v20 = v23;
    *(_OWORD *)(v20 + 16) = v24;
    *(_QWORD *)(v20 + 32) = v25;
    OUTLINED_FUNCTION_9_90(&v27, (_OWORD *)(*(_QWORD *)(v3 + 56) + 32 * v21));
    if (v2)
      goto LABEL_5;
LABEL_6:
    OUTLINED_FUNCTION_13_94();
    if (v5 == v6)
    {
LABEL_38:
      OUTLINED_FUNCTION_8_94();
      OUTLINED_FUNCTION_18_77();
      return;
    }
    OUTLINED_FUNCTION_21_73();
    if (!v7)
    {
      OUTLINED_FUNCTION_1_126();
      if (v5 == v6)
        goto LABEL_38;
      OUTLINED_FUNCTION_7_106();
      if (!v8)
      {
        OUTLINED_FUNCTION_1_126();
        if (v5 == v6)
          goto LABEL_38;
        OUTLINED_FUNCTION_7_106();
        if (!v9)
        {
          OUTLINED_FUNCTION_1_126();
          if (v5 == v6)
            goto LABEL_38;
          OUTLINED_FUNCTION_7_106();
          if (!v10)
          {
            OUTLINED_FUNCTION_13_94();
            if (v5 == v6)
              goto LABEL_38;
            if (!*(_QWORD *)(v22 + 8 * v11))
            {
              while (!__OFADD__(v11, 1))
              {
                OUTLINED_FUNCTION_1_126();
                if (v5 == v6)
                  goto LABEL_38;
                OUTLINED_FUNCTION_20_69();
                if (v12)
                  goto LABEL_25;
              }
              goto LABEL_40;
            }
          }
        }
      }
    }
LABEL_25:
    OUTLINED_FUNCTION_12_93();
  }
  OUTLINED_FUNCTION_40_2();
  while (1)
  {
    OUTLINED_FUNCTION_144();
    if (v15)
    {
      if ((v17 & 1) != 0)
        break;
    }
    if (v18 == v19)
      v18 = 0;
    if (*(_QWORD *)(v3 + 64 + 8 * v18) != -1)
    {
      OUTLINED_FUNCTION_38_2();
      goto LABEL_36;
    }
  }
  __break(1u);
  __break(1u);
LABEL_40:
  __break(1u);
}

uint64_t specialized _dictionaryUpCast<A, B, C, D>(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char v20;
  unint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  _OWORD v29[2];
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  _OWORD v33[2];
  _OWORD v34[2];
  _OWORD v35[2];
  _OWORD v36[2];

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<AnyHashable, Any>);
    v2 = static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9E0];
  }
  v3 = a1 + 64;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v25 = (unint64_t)(63 - v4) >> 6;
  v7 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v9 = 0;
  if (!v6)
    goto LABEL_9;
LABEL_8:
  v10 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  v11 = v10 | (v9 << 6);
  while (1)
  {
    outlined init with copy of Any(*(_QWORD *)(a1 + 56) + 32 * v11, (uint64_t)v36);
    v35[0] = v36[0];
    v35[1] = v36[1];
    swift_dynamicCast();
    outlined init with take of Any(v35, v29);
    v30 = v26;
    v31 = v27;
    v32 = v28;
    outlined init with take of Any(v29, v33);
    v26 = v30;
    v27 = v31;
    v28 = v32;
    outlined init with take of Any(v33, v34);
    outlined init with take of Any(v34, &v30);
    result = AnyHashable._rawHashValue(seed:)(*(_QWORD *)(v2 + 40));
    v16 = -1 << *(_BYTE *)(v2 + 32);
    v17 = result & ~v16;
    v18 = v17 >> 6;
    if (((-1 << v17) & ~*(_QWORD *)(v7 + 8 * (v17 >> 6))) == 0)
    {
      v20 = 0;
      v21 = (unint64_t)(63 - v16) >> 6;
      while (++v18 != v21 || (v20 & 1) == 0)
      {
        v22 = v18 == v21;
        if (v18 == v21)
          v18 = 0;
        v20 |= v22;
        v23 = *(_QWORD *)(v7 + 8 * v18);
        if (v23 != -1)
        {
          v19 = __clz(__rbit64(~v23)) + (v18 << 6);
          goto LABEL_34;
        }
      }
      __break(1u);
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v7 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
LABEL_34:
    *(_QWORD *)(v7 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    v24 = *(_QWORD *)(v2 + 48) + 40 * v19;
    *(_OWORD *)v24 = v26;
    *(_OWORD *)(v24 + 16) = v27;
    *(_QWORD *)(v24 + 32) = v28;
    result = (uint64_t)outlined init with take of Any(&v30, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v19));
    ++*(_QWORD *)(v2 + 16);
    if (v6)
      goto LABEL_8;
LABEL_9:
    v12 = v9 + 1;
    if (__OFADD__(v9, 1))
      goto LABEL_38;
    if (v12 >= v25)
      goto LABEL_36;
    v13 = *(_QWORD *)(v3 + 8 * v12);
    v14 = v9 + 1;
    if (!v13)
    {
      v14 = v9 + 2;
      if (v9 + 2 >= v25)
        goto LABEL_36;
      v13 = *(_QWORD *)(v3 + 8 * v14);
      if (!v13)
      {
        v14 = v9 + 3;
        if (v9 + 3 >= v25)
          goto LABEL_36;
        v13 = *(_QWORD *)(v3 + 8 * v14);
        if (!v13)
        {
          v14 = v9 + 4;
          if (v9 + 4 >= v25)
            goto LABEL_36;
          v13 = *(_QWORD *)(v3 + 8 * v14);
          if (!v13)
            break;
        }
      }
    }
LABEL_24:
    v6 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v14 << 6);
    v9 = v14;
  }
  v15 = v9 + 5;
  if (v9 + 5 >= v25)
  {
LABEL_36:
    swift_release();
    outlined consume of [String : Application].Iterator._Variant();
    return v2;
  }
  v13 = *(_QWORD *)(v3 + 8 * v15);
  if (v13)
  {
    v14 = v9 + 5;
    goto LABEL_24;
  }
  while (1)
  {
    v14 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v14 >= v25)
      goto LABEL_36;
    v13 = *(_QWORD *)(v3 + 8 * v14);
    ++v15;
    if (v13)
      goto LABEL_24;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t static Notification.contextMenuWillPresent(target:)(void *a1)
{
  return static Notification.contextMenuWillPresent(target:)(a1, &one-time initialization token for contextMenuWillPresent, (void **)&static NSNotificationName.contextMenuWillPresent);
}

uint64_t static Notification.contextMenuDidDismiss(target:)(void *a1)
{
  return static Notification.contextMenuWillPresent(target:)(a1, &one-time initialization token for contextMenuDidDismiss, (void **)&static NSNotificationName.contextMenuDidDismiss);
}

uint64_t static Notification.contextMenuWillPresent(target:)(void *a1, _QWORD *a2, void **a3)
{
  void *v5;
  id v6;
  id v7;
  uint64_t v8;

  if (*a2 != -1)
    swift_once();
  v5 = *a3;
  type metadata accessor for UIView();
  v6 = v5;
  v7 = a1;
  v8 = UIView.contextMenuUserInfo.getter();
  specialized _dictionaryUpCast<A, B, C, D>(_:)(v8);
  swift_bridgeObjectRelease();
  return Notification.init(name:object:userInfo:)();
}

uint64_t NSNotificationCenter.post(_:afterAnimatorCompletes:)(uint64_t a1, void *a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  void (*v12)(char *, uint64_t, uint64_t);
  unint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  id v16;
  uint64_t v17;
  void *v18;
  _QWORD aBlock[6];

  v5 = OUTLINED_FUNCTION_23_65();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)aBlock - v10;
  v12 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v12((char *)aBlock - v10, a1, v5);
  v12(v9, (uint64_t)v11, v5);
  v13 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v14 + v13, v11, v5);
  *(_QWORD *)(v14 + ((v7 + v13 + 7) & 0xFFFFFFFFFFFFFFF8)) = v2;
  if (a2)
  {
    v15 = *(void (**)(char *, uint64_t))(v6 + 8);
    v16 = v2;
    swift_unknownObjectRetain();
    v15(v9, v5);
    v17 = swift_allocObject();
    *(_QWORD *)(v17 + 16) = partial apply for closure #1 in NSNotificationCenter.post(_:afterAnimatorCompletes:);
    *(_QWORD *)(v17 + 24) = v14;
    aBlock[4] = partial apply for thunk for @escaping @callee_guaranteed () -> (@unowned Font.Weight);
    aBlock[5] = v17;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
    aBlock[3] = &block_descriptor_74;
    v18 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(a2, sel_addCompletion_, v18);
    _Block_release(v18);
    swift_release();
    return swift_unknownObjectRelease();
  }
  else
  {
    closure #1 in NSNotificationCenter.post(_:afterAnimatorCompletes:)((uint64_t)v9, v2);
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
}

uint64_t *NSNotificationName.contextMenuWillPresent.unsafeMutableAddressor()
{
  if (one-time initialization token for contextMenuWillPresent != -1)
    swift_once();
  return &static NSNotificationName.contextMenuWillPresent;
}

uint64_t *NSNotificationName.contextMenuDidDismiss.unsafeMutableAddressor()
{
  if (one-time initialization token for contextMenuDidDismiss != -1)
    swift_once();
  return &static NSNotificationName.contextMenuDidDismiss;
}

uint64_t one-time initialization function for contextMenuWillPresent()
{
  uint64_t result;

  result = MEMORY[0x1C3B72E00](0xD000000000000022, 0x80000001BD6898E0);
  static NSNotificationName.contextMenuWillPresent = result;
  return result;
}

id static NSNotificationName.contextMenuWillPresent.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for contextMenuWillPresent, (id *)&static NSNotificationName.contextMenuWillPresent);
}

uint64_t one-time initialization function for contextMenuDidDismiss()
{
  uint64_t result;

  result = MEMORY[0x1C3B72E00](0xD000000000000021, 0x80000001BD6898B0);
  static NSNotificationName.contextMenuDidDismiss = result;
  return result;
}

id static NSNotificationName.contextMenuDidDismiss.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for contextMenuDidDismiss, (id *)&static NSNotificationName.contextMenuDidDismiss);
}

void closure #1 in NSNotificationCenter.post(_:afterAnimatorCompletes:)(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint8_t *v16;
  Class isa;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;

  v4 = type metadata accessor for Notification();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for default != -1)
    swift_once();
  v8 = type metadata accessor for Logger();
  __swift_project_value_buffer(v8, (uint64_t)&static Log.default);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  v9 = Logger.logObject.getter();
  v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    v18 = a1;
    v11 = swift_slowAlloc();
    v19 = a2;
    v12 = (uint8_t *)v11;
    v13 = swift_slowAlloc();
    v21 = v13;
    *(_DWORD *)v12 = 136315138;
    v20 = Notification.name.getter();
    type metadata accessor for NSNotificationName(0);
    v14 = String.init<A>(reflecting:)();
    v20 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v14, v15, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    _os_log_impl(&dword_1BD004000, v9, v10, "Posting %s", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v13, -1, -1);
    v16 = v12;
    a2 = v19;
    MEMORY[0x1C3B751B8](v16, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }

  isa = Notification._bridgeToObjectiveC()().super.isa;
  objc_msgSend(a2, sel_postNotification_, isa);

}

uint64_t sub_1BD3D9300()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = OUTLINED_FUNCTION_23_65();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

void partial apply for closure #1 in NSNotificationCenter.post(_:afterAnimatorCompletes:)()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(OUTLINED_FUNCTION_23_65() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  closure #1 in NSNotificationCenter.post(_:afterAnimatorCompletes:)(v0 + v2, *(void **)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1BD3D93AC()
{
  swift_release();
  return swift_deallocObject();
}

void one-time initialization function for labelSpacing()
{
  static LabeledButtonView.labelSpacing = 0x4014000000000000;
}

uint64_t key path setter for LabeledButtonView.control : LabeledButtonView(id *a1, _QWORD **a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x70);
  v4 = *a1;
  return v3(v2);
}

void *LabeledButtonView.control.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR____TtC15ConversationKit17LabeledButtonView_control);
  OUTLINED_FUNCTION_2_0();
  v2 = *v1;
  v3 = v2;
  return v2;
}

void LabeledButtonView.control.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;

  v3 = (void **)(v1 + OBJC_IVAR____TtC15ConversationKit17LabeledButtonView_control);
  OUTLINED_FUNCTION_2_0();
  v4 = *v3;
  *v3 = a1;

}

uint64_t (*LabeledButtonView.control.modify())()
{
  OUTLINED_FUNCTION_2_0();
  return CallRecordingPillViewController.cancellable.modify;
}

uint64_t key path setter for LabeledButtonView.label : LabeledButtonView(id *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x88))(*a1);
}

void LabeledButtonView.label.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v6;

  v1 = OBJC_IVAR____TtC15ConversationKit17LabeledButtonView____lazy_storage___label;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit17LabeledButtonView____lazy_storage___label);
  if (!v2)
  {
    v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
    OUTLINED_FUNCTION_18_4(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_);
    objc_msgSend(v3, sel_setNumberOfLines_, 3);
    objc_msgSend(v3, sel_setTextAlignment_, 1);
    v4 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v3;
    v5 = v3;

    v2 = 0;
  }
  v6 = v2;
  OUTLINED_FUNCTION_18();
}

void LabeledButtonView.label.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_4_3(a1, OBJC_IVAR____TtC15ConversationKit17LabeledButtonView____lazy_storage___label);
}

void (*LabeledButtonView.label.modify(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;
  uint64_t v3;

  a1[1] = v1;
  LabeledButtonView.label.getter();
  *a1 = v3;
  return LabeledButtonView.label.modify;
}

void LabeledButtonView.label.modify(void **a1, char a2)
{
  void *v2;
  id v3;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = v2;
    LabeledButtonView.label.setter((uint64_t)v3);

  }
  else
  {
    LabeledButtonView.label.setter((uint64_t)v2);
  }
}

uint64_t LabeledButtonView.preferredFocusEnvironments.getter()
{
  uint64_t *v0;
  uint64_t inited;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UIFocusEnvironment?>);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BD6441D0;
  *(_QWORD *)(inited + 32) = OUTLINED_FUNCTION_7_107(*v0);
  specialized Array._endMutation()();
  v2 = MEMORY[0x1E0DEE9D8];
  v5 = MEMORY[0x1E0DEE9D8];
  if (*(_QWORD *)(inited + 32))
  {
    v3 = swift_unknownObjectRetain();
    MEMORY[0x1C3B7301C](v3);
    if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    v2 = v5;
  }
  swift_bridgeObjectRelease();
  return v2;
}

void LabeledButtonView.labelTopConstraint.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_4_3(a1, OBJC_IVAR____TtC15ConversationKit17LabeledButtonView_labelTopConstraint);
}

void LabeledButtonView.__allocating_init(control:text:)(void *a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  id v7;

  v7 = objc_allocWithZone(v3);
  LabeledButtonView.init(control:text:)(a1, a2, a3);
  OUTLINED_FUNCTION_18();
}

_QWORD *LabeledButtonView.init(control:text:)(void *a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  void **v6;
  void *v7;
  id v8;
  _QWORD *v9;
  uint64_t (*v10)(void);
  _QWORD *v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  objc_super v18;

  v6 = (void **)&v3[OBJC_IVAR____TtC15ConversationKit17LabeledButtonView_control];
  *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit17LabeledButtonView_control] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit17LabeledButtonView____lazy_storage___label] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit17LabeledButtonView_labelTopConstraint] = 0;
  OUTLINED_FUNCTION_2_0();
  v7 = *v6;
  *v6 = a1;
  v8 = a1;

  v18.receiver = v3;
  v18.super_class = (Class)type metadata accessor for LabeledButtonView();
  v9 = objc_msgSendSuper2(&v18, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v10 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v9) + 0x80);
  v11 = v9;
  v12 = (void *)v10();
  v13 = v12;
  if (a3)
  {
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_13_35();
  }
  objc_msgSend(v12, sel_setText_, 0);

  if (a1)
  {
    v14 = v8;
    objc_msgSend(v8, sel_setAccessibilityLabel_, 0);

  }
  else
  {
    OUTLINED_FUNCTION_53();
  }
  LabeledButtonView.configureAppearance()();

  if (a1)
  {
    type metadata accessor for ConversationControlsButton();
    v15 = swift_dynamicCastClass();
    if (v15)
    {
      v16 = v15 + OBJC_IVAR___CNKConversationControlsButton_delegate;
      OUTLINED_FUNCTION_2_0();
      *(_QWORD *)(v16 + 8) = &protocol witness table for LabeledButtonView;
      swift_unknownObjectWeakAssign();
    }

  }
  return v11;
}

uint64_t type metadata accessor for LabeledButtonView()
{
  return objc_opt_self();
}

id LabeledButtonView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void LabeledButtonView.init(coder:)()
{
  char *v0;

  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit17LabeledButtonView_control] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit17LabeledButtonView____lazy_storage___label] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit17LabeledButtonView_labelTopConstraint] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void LabeledButtonView.configureAppearance()()
{
  uint64_t *v0;
  void *v1;
  uint64_t *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  id v27;
  id v28;
  Class isa;
  id v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  id v36;
  id v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  id v41;
  id v42;
  uint64_t v43;
  id v44;
  id v45;
  uint64_t v46;
  id v47;
  id v48;
  id v49;
  uint64_t v50;
  id v51;
  id v52;
  id v53;
  uint64_t v54;
  id v55;
  id v56;
  id v57;
  uint64_t v58;
  id v59;
  double v60;
  Class v61;
  double v62;
  void *v63;
  uint64_t v64;
  void *v65;
  double v66;
  void *v67;
  uint64_t v68;
  void *v69;
  id v70;
  void *v71;
  void *v72;
  id v73;
  _BYTE v74[224];
  uint64_t v75[28];

  v2 = v0;
  v3 = OUTLINED_FUNCTION_7_107(*v0);
  if (v3)
  {
    v4 = (void *)v3;
    objc_msgSend(v0, sel_addSubview_, v3);
    v5 = (void *)OUTLINED_FUNCTION_13_14();
    objc_msgSend(v2, sel_addSubview_, v5);

    OUTLINED_FUNCTION_18_4(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_);
    v6 = (void *)OUTLINED_FUNCTION_13_14();
    v7 = objc_msgSend(v6, sel_topAnchor);

    v9 = OUTLINED_FUNCTION_123(v8, sel_bottomAnchor);
    if (one-time initialization token for labelSpacing != -1)
      swift_once();
    v10 = objc_msgSend(v7, sel_constraintEqualToAnchor_constant_, v9, *(double *)&static LabeledButtonView.labelSpacing);

    LabeledButtonView.labelTopConstraint.setter((uint64_t)v10);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1BD644E30;
    v12 = OUTLINED_FUNCTION_9(v11, sel_widthAnchor);
    v13 = OUTLINED_FUNCTION_123((uint64_t)v12, sel_widthAnchor);
    v14 = OUTLINED_FUNCTION_4_117();
    OUTLINED_FUNCTION_10_20();

    *(_QWORD *)(v11 + 32) = v1;
    v16 = OUTLINED_FUNCTION_123(v15, sel_topAnchor);
    v17 = OUTLINED_FUNCTION_9((uint64_t)v16, sel_topAnchor);
    v18 = OUTLINED_FUNCTION_4_117();
    OUTLINED_FUNCTION_10_20();

    *(_QWORD *)(v11 + 40) = v1;
    v20 = OUTLINED_FUNCTION_123(v19, sel_centerXAnchor);
    v21 = OUTLINED_FUNCTION_9((uint64_t)v20, sel_centerXAnchor);
    v22 = OUTLINED_FUNCTION_4_117();
    OUTLINED_FUNCTION_10_20();

    *(_QWORD *)(v11 + 48) = v1;
    v23 = *(void **)((char *)v2 + OBJC_IVAR____TtC15ConversationKit17LabeledButtonView_labelTopConstraint);
    if (v23)
    {
      v73 = (id)objc_opt_self();
      *(_QWORD *)(v11 + 56) = v23;
      v24 = v23;
      v25 = objc_msgSend((id)OUTLINED_FUNCTION_13_14(), sel_centerXAnchor);
      OUTLINED_FUNCTION_10_20();
      v27 = OUTLINED_FUNCTION_9(v26, sel_centerXAnchor);
      v28 = objc_msgSend(v1, (SEL)0x1F37BEF4ELL, v27);

      *(_QWORD *)(v11 + 64) = v28;
      v75[0] = v11;
      specialized Array._endMutation()();
      type metadata accessor for NSLayoutConstraint();
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      objc_msgSend(v73, sel_activateConstraints_, isa);

      v30 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_init);
      OUTLINED_FUNCTION_18_4(v30, sel_setTranslatesAutoresizingMaskIntoConstraints_);
      objc_msgSend(v2, sel_addSubview_, v30);
      v31 = swift_allocObject();
      *(_OWORD *)(v31 + 16) = xmmword_1BD64C5C0;
      v32 = objc_msgSend((id)OUTLINED_FUNCTION_13_14(), sel_leadingAnchor);
      OUTLINED_FUNCTION_6_16();
      v34 = OUTLINED_FUNCTION_9(v33, (const char *)&selRef_activeCall + 6);
      static Layout.ConversationControls.values.getter((uint64_t)v74);
      v36 = OUTLINED_FUNCTION_21_74(v35, sel_constraintGreaterThanOrEqualToAnchor_constant_);
      OUTLINED_FUNCTION_6_41();

      *(_QWORD *)(v31 + 32) = 0x1F37BE000uLL;
      v37 = objc_msgSend((id)OUTLINED_FUNCTION_13_14(), sel_trailingAnchor);
      OUTLINED_FUNCTION_6_16();
      v39 = OUTLINED_FUNCTION_9(v38, sel_trailingAnchor);
      static Layout.ConversationControls.values.getter((uint64_t)v75);
      v41 = OUTLINED_FUNCTION_21_74(v40, sel_constraintLessThanOrEqualToAnchor_constant_);
      OUTLINED_FUNCTION_6_41();

      *(_QWORD *)(v31 + 40) = 0x1F37BE000uLL;
      v42 = objc_msgSend((id)OUTLINED_FUNCTION_13_14(), sel_bottomAnchor);
      OUTLINED_FUNCTION_6_16();
      v44 = OUTLINED_FUNCTION_2_2(v43, sel_topAnchor);
      v45 = objc_msgSend(v28, sel_constraintEqualToAnchor_, v44);
      OUTLINED_FUNCTION_6_41();

      *(_QWORD *)(v31 + 48) = 0x1F37BE000uLL;
      v47 = OUTLINED_FUNCTION_2_2(v46, sel_leadingAnchor);
      v48 = OUTLINED_FUNCTION_9((uint64_t)v47, sel_leadingAnchor);
      v49 = OUTLINED_FUNCTION_1_127((uint64_t)v48);
      OUTLINED_FUNCTION_45_6();

      *(_QWORD *)(v31 + 56) = 0x1F37BE000uLL;
      v51 = OUTLINED_FUNCTION_2_2(v50, sel_trailingAnchor);
      v52 = OUTLINED_FUNCTION_9((uint64_t)v51, sel_trailingAnchor);
      v53 = OUTLINED_FUNCTION_1_127((uint64_t)v52);
      OUTLINED_FUNCTION_45_6();

      *(_QWORD *)(v31 + 64) = 0x1F37BE000uLL;
      v55 = OUTLINED_FUNCTION_2_2(v54, sel_bottomAnchor);
      v56 = OUTLINED_FUNCTION_9((uint64_t)v55, sel_bottomAnchor);
      v57 = OUTLINED_FUNCTION_1_127((uint64_t)v56);
      OUTLINED_FUNCTION_45_6();

      *(_QWORD *)(v31 + 72) = 0x1F37BE000uLL;
      v59 = objc_msgSend(OUTLINED_FUNCTION_2_2(v58, sel_heightAnchor), sel_constraintEqualToConstant_, 0.0);
      OUTLINED_FUNCTION_6_16();
      LODWORD(v60) = 1132068864;
      objc_msgSend(&selRef_associatedAppBundleIdentifier, sel_setPriority_, v60);
      *(_QWORD *)(v31 + 80) = &selRef_associatedAppBundleIdentifier;
      specialized Array._endMutation()();
      v61 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      objc_msgSend(v73, sel_activateConstraints_, v61);

      OUTLINED_FUNCTION_17_67(v4, sel_setContentHuggingPriority_forAxis_, v62);
      v63 = (void *)OUTLINED_FUNCTION_13_14();
      type metadata accessor for UILayoutPriority(0);
      lazy protocol witness table accessor for type UILayoutPriority and conformance UILayoutPriority();
      v64 = OUTLINED_FUNCTION_3_112();
      OUTLINED_FUNCTION_15_82(v64, sel_setContentHuggingPriority_forAxis_);

      v65 = (void *)OUTLINED_FUNCTION_13_14();
      OUTLINED_FUNCTION_17_67(v65, sel_setContentHuggingPriority_forAxis_, v66);

      v67 = (void *)OUTLINED_FUNCTION_13_14();
      v68 = OUTLINED_FUNCTION_3_112();
      OUTLINED_FUNCTION_15_82(v68, sel_setContentCompressionResistancePriority_forAxis_);

      v69 = (void *)OUTLINED_FUNCTION_13_14();
      v70 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A98]);
      objc_msgSend(v69, sel_setFont_, v70);

      v71 = (void *)OUTLINED_FUNCTION_13_14();
      objc_msgSend(v71, sel_setMaximumContentSizeCategory_, *MEMORY[0x1E0DC4918]);

      v72 = (void *)OUTLINED_FUNCTION_13_14();
      objc_msgSend(v72, sel_setAdjustsFontForContentSizeCategory_, 1);

    }
    else
    {
      __break(1u);
    }
  }
}

id LabeledButtonView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void LabeledButtonView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id LabeledButtonView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LabeledButtonView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void LabeledButtonView.buttonDidUpdateLocalizedName(_:)(uint64_t a1)
{
  uint64_t *v1;
  void *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v3 = (void *)OUTLINED_FUNCTION_13_5(*v1);
  v4 = (uint64_t *)(a1 + OBJC_IVAR___CNKConversationControlsButton_localizedName);
  OUTLINED_FUNCTION_2_0();
  v5 = v4[1];
  if (v5)
  {
    v6 = *v4;
    swift_bridgeObjectRetain();
    v7 = (void *)MEMORY[0x1C3B72E00](v6, v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = 0;
  }
  objc_msgSend(v3, sel_setText_, v7);

}

uint64_t sub_1BD3DA3A0@<X0>(uint64_t **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = OUTLINED_FUNCTION_7_107(**a1);
  *a2 = result;
  return result;
}

uint64_t sub_1BD3DA3DC@<X0>(uint64_t **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = OUTLINED_FUNCTION_13_5(**a1);
  *a2 = result;
  return result;
}

uint64_t method lookup function for LabeledButtonView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of LabeledButtonView.control.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of LabeledButtonView.control.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of LabeledButtonView.control.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of LabeledButtonView.label.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of LabeledButtonView.label.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of LabeledButtonView.label.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of LabeledButtonView.__allocating_init(control:text:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

id ParticipantMediaPriorities.remoteIdentifiers.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  id v7;

  v2 = *(_QWORD *)(v1 + 8);
  v7 = *(id *)v1;
  v3 = *(_BYTE *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v4 = *(_QWORD *)(v1 + 32);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  return v7;
}

uint64_t ParticipantMediaPriorities.remoteIdentifiers.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  v4 = *((_BYTE *)a1 + 16);
  v5 = a1[3];
  v6 = a1[4];

  result = swift_bridgeObjectRelease();
  *(_QWORD *)v1 = v2;
  *(_QWORD *)(v1 + 8) = v3;
  *(_BYTE *)(v1 + 16) = v4;
  *(_QWORD *)(v1 + 24) = v5;
  *(_QWORD *)(v1 + 32) = v6;
  return result;
}

uint64_t (*ParticipantMediaPriorities.remoteIdentifiers.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

float ParticipantMediaPriorities.audioPriority.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 40);
}

void ParticipantMediaPriorities.audioPriority.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 40) = a1;
}

uint64_t (*ParticipantMediaPriorities.audioPriority.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

float ParticipantMediaPriorities.videoPriority.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 44);
}

void ParticipantMediaPriorities.videoPriority.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 44) = a1;
}

uint64_t (*ParticipantMediaPriorities.videoPriority.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ParticipantMediaPriorities.init(remoteIdentifiers:audioPriority:videoPriority:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>, float a3@<S0>, float a4@<S1>)
{
  uint64_t v4;
  char v5;

  v4 = *(_QWORD *)(result + 8);
  v5 = *(_BYTE *)(result + 16);
  *(_QWORD *)a2 = *(_QWORD *)result;
  *(_QWORD *)(a2 + 8) = v4;
  *(_BYTE *)(a2 + 16) = v5;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(result + 24);
  *(float *)(a2 + 40) = a3;
  *(float *)(a2 + 44) = a4;
  return result;
}

float ParticipantMediaPriorities.init(conversationParticipant:)@<S0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  float v12;
  id v13;
  float result;

  v4 = objc_msgSend(a1, sel_handle);
  v5 = OUTLINED_FUNCTION_25_1((uint64_t)v4, sel_identifier);
  v6 = OUTLINED_FUNCTION_25_1((uint64_t)v5, sel_avcIdentifier);
  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v9 = v8;

  v11 = OUTLINED_FUNCTION_25_1(v10, sel_audioPriority);
  v12 = (float)(uint64_t)v11;
  v13 = OUTLINED_FUNCTION_25_1((uint64_t)v11, sel_videoPriority);

  result = (float)(uint64_t)v13;
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = v5;
  *(_BYTE *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = v7;
  *(_QWORD *)(a2 + 32) = v9;
  *(float *)(a2 + 40) = v12;
  *(float *)(a2 + 44) = (float)(uint64_t)v13;
  return result;
}

uint64_t destroy for ParticipantMediaPriorities(id *a1)
{

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ParticipantMediaPriorities(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v6 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ParticipantMediaPriorities(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v7;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  return a1;
}

uint64_t assignWithTake for ParticipantMediaPriorities(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

ValueMetadata *type metadata accessor for ParticipantMediaPriorities()
{
  return &type metadata for ParticipantMediaPriorities;
}

BOOL static Platform.istvOS.getter()
{
  return static Platform.current.getter() == 2;
}

uint64_t static Platform.current.getter()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
  v1 = objc_msgSend(v0, sel_userInterfaceIdiom);

  if ((unint64_t)v1 >= 6)
    return 0;
  else
    return (0x10000020100uLL >> (8 * v1));
}

BOOL static Platform.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t static Platform.isCatalystOrMacOS.getter()
{
  static Platform.current.getter();
  return 0;
}

BOOL static Platform.isIPad.getter()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
  v1 = objc_msgSend(v0, sel_userInterfaceIdiom);

  return v1 == (id)1;
}

BOOL static Platform.isiOS.getter()
{
  return static Platform.current.getter() < 2u;
}

uint64_t static Platform.isCatalyst.getter()
{
  return 0;
}

uint64_t static Platform.isMacOS.getter()
{
  static Platform.current.getter();
  return 0;
}

uint64_t static Platform.isNotMacOS.getter()
{
  static Platform.current.getter();
  return 1;
}

void Platform.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
  Hasher._combine(_:)(a2);
}

Swift::Int Platform.hashValue.getter(unsigned __int8 a1)
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1);
  return Hasher._finalize()();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance Platform(char *a1, char *a2)
{
  return static Platform.== infix(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance Platform()
{
  unsigned __int8 *v0;

  return Platform.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance Platform(uint64_t a1)
{
  unsigned __int8 *v1;

  Platform.hash(into:)(a1, *v1);
}

unint64_t lazy protocol witness table accessor for type Platform and conformance Platform()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Platform and conformance Platform;
  if (!lazy protocol witness table cache variable for type Platform and conformance Platform)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for Platform, &type metadata for Platform);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Platform and conformance Platform);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for Platform(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BD3DAA7C + 4 * byte_1BD65D801[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BD3DAAB0 + 4 * asc_1BD65D7FC[v4]))();
}

uint64_t sub_1BD3DAAB0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD3DAAB8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD3DAAC0);
  return result;
}

uint64_t sub_1BD3DAACC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD3DAAD4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BD3DAAD8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD3DAAE0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Platform()
{
  return &type metadata for Platform;
}

id CNKCrossFadeAnimatorFactory.makeAnimator()()
{
  return objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CrossFadeAnimator()), sel_init);
}

id CrossFadeAnimator.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

uint64_t type metadata accessor for CrossFadeAnimator()
{
  return objc_opt_self();
}

CNKCrossFadeAnimatorFactory __swiftcall CNKCrossFadeAnimatorFactory.init()()
{
  return (CNKCrossFadeAnimatorFactory)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
}

id CNKCrossFadeAnimatorFactory.init()()
{
  objc_super v1;

  v1.super_class = (Class)CNKCrossFadeAnimatorFactory;
  return objc_msgSendSuper2(&v1, sel_init);
}

id CrossFadeAnimator.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CrossFadeAnimator();
  return objc_msgSendSuper2(&v2, sel_init);
}

double CrossFadeAnimator.transitionDuration(using:)()
{
  return 0.3;
}

void CrossFadeAnimator.animateTransition(using:)(void *a1)
{
  id v2;
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = objc_msgSend(a1, sel_viewForKey_, *MEMORY[0x1E0DC55D0]);
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, sel_setAlpha_, 0.0);
    v4 = objc_msgSend(a1, sel_containerView);
    objc_msgSend(v4, sel_addSubview_, v3);

    objc_msgSend(v3, sel_layoutIfNeeded);
    v5 = (void *)objc_opt_self();
    *(_QWORD *)(OUTLINED_FUNCTION_7_0() + 16) = v3;
    v6 = MEMORY[0x1E0C809B0];
    v7 = OUTLINED_FUNCTION_9_2((uint64_t)thunk for @escaping @callee_guaranteed () -> (), MEMORY[0x1E0C809B0], 1107296256, v10, v12);
    v8 = v3;
    swift_release();
    *(_QWORD *)(OUTLINED_FUNCTION_7_0() + 16) = a1;
    v9 = OUTLINED_FUNCTION_9_2((uint64_t)thunk for @escaping @callee_guaranteed (@unowned Bool) -> (), v6, 1107296256, v11, v13);
    swift_unknownObjectRetain();
    swift_release();
    objc_msgSend(v5, sel_animateWithDuration_delay_options_animations_completion_, 0, v7, v9, 0.3, 0.0);

    _Block_release(v9);
    _Block_release(v7);
  }
  else
  {
    objc_msgSend(a1, sel_completeTransition_, 0);
  }
}

uint64_t sub_1BD3DAE4C()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BD3DAE70()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

id partial apply for closure #2 in CrossFadeAnimator.animateTransition(using:)()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_completeTransition_, 1);
}

id CrossFadeAnimator.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CrossFadeAnimator();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t type metadata accessor for CNKCrossFadeAnimatorFactory()
{
  unint64_t result;

  result = lazy cache variable for type metadata for CNKCrossFadeAnimatorFactory;
  if (!lazy cache variable for type metadata for CNKCrossFadeAnimatorFactory)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for CNKCrossFadeAnimatorFactory);
  }
  return result;
}

uint64_t method lookup function for CrossFadeAnimator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CrossFadeAnimator.transitionDuration(using:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x50))();
}

uint64_t dispatch thunk of CrossFadeAnimator.animateTransition(using:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x58))();
}

void _ss14_ArrayProtocolPsE6filterySay7ElementQzGSbAEKXEKFSay15ConversationKit15RecentsCallItemVG_Tg5041_s5UIKit28NSDiffableDataSourceSnapshotV15ef78E24appendItemsRemovingDupes_9toSection6onDupeySayq_G_xSgyq_cSgtFSbq_XEfU_AD021g23CollectionViewM0O_AD0P8hI4VTg5ShyAIGxRi_zRi0_zlyAIIsegn_SgTf1cn_n(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  Swift::Int v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  _QWORD v30[2];
  void (*v31)(char *);
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v30[1] = a4;
  v34 = a2;
  v33 = type metadata accessor for RecentsCallItem(0);
  v37 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v38 = (uint64_t)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v35 = (uint64_t)v30 - v9;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v30 - v11;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v30 - v14;
  v16 = MEMORY[0x1E0DEE9D8];
  v41 = MEMORY[0x1E0DEE9D8];
  v36 = *(_QWORD *)(a1 + 16);
  if (!v36)
  {
LABEL_20:
    swift_bridgeObjectRelease();
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(a3);
    return;
  }
  v31 = (void (*)(char *))a3;
  v32 = a1;
  v30[0] = v4;
  v17 = 0;
  v18 = v34;
  while (v17 < *(_QWORD *)(a1 + 16))
  {
    v19 = *(_QWORD *)(v37 + 72);
    v39 = (*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
    v40 = v16;
    outlined init with copy of ConversationControlsAction(a1 + v39 + v19 * v17, (uint64_t)v15, type metadata accessor for RecentsCallItem);
    v20 = *v18;
    if (*(_QWORD *)(*v18 + 16))
    {
      Hasher.init(_seed:)();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      String.hash(into:)();
      swift_bridgeObjectRelease();
      v21 = Hasher._finalize()();
      v22 = -1 << *(_BYTE *)(v20 + 32);
      v23 = v21 & ~v22;
      if (((*(_QWORD *)(v20 + 56 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) != 0)
      {
        v24 = ~v22;
        while (1)
        {
          outlined init with copy of ConversationControlsAction(*(_QWORD *)(v20 + 48) + v23 * v19, (uint64_t)v12, type metadata accessor for RecentsCallItem);
          static RecentsCallItem.== infix(_:_:)();
          v26 = v25;
          outlined destroy of RecentsCallItem((uint64_t)v12);
          if ((v26 & 1) != 0)
            break;
          v23 = (v23 + 1) & v24;
          if (((*(_QWORD *)(v20 + 56 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) == 0)
            goto LABEL_9;
        }
        swift_bridgeObjectRelease();
        if (v31)
          v31(v15);
        outlined destroy of RecentsCallItem((uint64_t)v15);
        a1 = v32;
        v18 = v34;
        v16 = v40;
        goto LABEL_15;
      }
LABEL_9:
      swift_bridgeObjectRelease();
      a1 = v32;
      v18 = v34;
    }
    outlined init with copy of ConversationControlsAction((uint64_t)v15, v35, type metadata accessor for RecentsCallItem);
    specialized Set._Variant.insert(_:)();
    outlined destroy of RecentsCallItem((uint64_t)v12);
    outlined init with take of RecentsCallItem((uint64_t)v15, v38);
    v27 = v40;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(v27 + 16) + 1, 1);
    v16 = v41;
    v29 = *(_QWORD *)(v41 + 16);
    v28 = *(_QWORD *)(v41 + 24);
    if (v29 >= v28 >> 1)
    {
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v28 > 1, v29 + 1, 1);
      v16 = v41;
    }
    *(_QWORD *)(v16 + 16) = v29 + 1;
    outlined init with take of RecentsCallItem(v38, v16 + v39 + v29 * v19);
LABEL_15:
    if (++v17 == v36)
    {
      a3 = (uint64_t)v31;
      goto LABEL_20;
    }
  }
  __break(1u);
}

uint64_t specialized _arrayConditionalCast<A, B>(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t i;
  unint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[32];
  uint64_t v11;

  v2 = *(_QWORD *)(a1 + 16);
  v11 = MEMORY[0x1E0DEE9D8];
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  v3 = v11;
  if (v2)
  {
    for (i = a1 + 32; ; i += 32)
    {
      outlined init with copy of Any(i, (uint64_t)v10);
      if (!swift_dynamicCast())
        break;
      if ((OUTLINED_FUNCTION_83_8() & 1) == 0)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        v3 = v11;
      }
      v5 = *(_QWORD *)(v3 + 16);
      if (v5 >= *(_QWORD *)(v3 + 24) >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        v3 = v11;
      }
      *(_QWORD *)(v3 + 16) = v5 + 1;
      v6 = v3 + 16 * v5;
      *(_QWORD *)(v6 + 32) = v8;
      *(_QWORD *)(v6 + 40) = v9;
      if (!--v2)
        return v3;
    }
    OUTLINED_FUNCTION_43();
    swift_bridgeObjectRelease();
    return 0;
  }
  return v3;
}

{
  uint64_t v2;
  uint64_t i;
  _BYTE v5[32];
  uint64_t v6;

  v6 = MEMORY[0x1E0DEE9D8];
  v2 = *(_QWORD *)(a1 + 16);
  specialized ContiguousArray.reserveCapacity(_:)();
  if (!v2)
    return v6;
  for (i = a1 + 32; ; i += 32)
  {
    outlined init with copy of Any(i, (uint64_t)v5);
    type metadata accessor for NSObject(0, &lazy cache variable for type metadata for IMSPIMessage);
    if (!swift_dynamicCast())
      break;
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
    specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized ContiguousArray._endMutation()();
    if (!--v2)
      return v6;
  }
  swift_release();

  return 0;
}

void RecentsCollectionViewCollator.__allocating_init(recentsController:conversationManager:linkController:messageInboxController:dataSource:)()
{
  objc_class *v0;
  id v1;

  v1 = objc_allocWithZone(v0);
  OUTLINED_FUNCTION_153_1();
  RecentsCollectionViewCollator.init(recentsController:conversationManager:linkController:messageInboxController:dataSource:)();
}

uint64_t RecentsControllable.recentCallsCount.getter()
{
  return 0;
}

id RecentsCollectionViewCollator.updateQueue.getter()
{
  return OUTLINED_FUNCTION_7(OBJC_IVAR____TtC15ConversationKit29RecentsCollectionViewCollator_updateQueue);
}

void RecentsCollectionViewCollator.recentsController.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  outlined init with copy of RadarReporting(v1 + OBJC_IVAR____TtC15ConversationKit29RecentsCollectionViewCollator_recentsController, a1);
}

id RecentsCollectionViewCollator.conversationManager.getter()
{
  return OUTLINED_FUNCTION_7(OBJC_IVAR____TtC15ConversationKit29RecentsCollectionViewCollator_conversationManager);
}

id RecentsCollectionViewCollator.dataSource.getter()
{
  return OUTLINED_FUNCTION_7(OBJC_IVAR____TtC15ConversationKit29RecentsCollectionViewCollator_dataSource);
}

uint64_t key path setter for RecentsCollectionViewCollator.linkController : RecentsCollectionViewCollator(uint64_t a1, _QWORD **a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0xC8);
  v3 = swift_retain();
  return v2(v3);
}

void RecentsCollectionViewCollator.linkController.setter()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_35_29();
  OUTLINED_FUNCTION_32();
}

void RecentsCollectionViewCollator.linkController.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path setter for RecentsCollectionViewCollator.messageInboxController : RecentsCollectionViewCollator(uint64_t a1, _QWORD **a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0xE0);
  v3 = swift_retain();
  return v2(v3);
}

void RecentsCollectionViewCollator.messageInboxController.setter()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_35_29();
  OUTLINED_FUNCTION_32();
}

void RecentsCollectionViewCollator.messageInboxController.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for RecentsCollectionViewCollator.hasFinishedFirstLoad : RecentsCollectionViewCollator@<X0>(_QWORD **a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0xF0))();
  *a2 = result & 1;
  return result;
}

uint64_t key path setter for RecentsCollectionViewCollator.hasFinishedFirstLoad : RecentsCollectionViewCollator()
{
  return RecentsCollectionViewCollator.hasFinishedFirstLoad.setter();
}

uint64_t key path setter for RecentsCollectionViewCollator.$hasFinishedFirstLoad : RecentsCollectionViewCollator(uint64_t a1)
{
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v6 + 16))(v5, a1, v3);
  return RecentsCollectionViewCollator.$hasFinishedFirstLoad.setter((uint64_t)v5);
}

void RecentsCollectionViewCollator.$hasFinishedFirstLoad.getter()
{
  OUTLINED_FUNCTION_2_0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  Published.projectedValue.getter();
  swift_endAccess();
  OUTLINED_FUNCTION_32();
}

uint64_t RecentsCollectionViewCollator.$hasFinishedFirstLoad.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t);

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_16_2();
  v4 = OUTLINED_FUNCTION_131();
  v5(v4);
  OUTLINED_FUNCTION_2_0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  Published.projectedValue.setter();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

uint64_t RecentsCollectionViewCollator.recentCallsDidChangeObserver.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit29RecentsCollectionViewCollator_recentCallsDidChangeObserver) = a1;
  return swift_unknownObjectRelease();
}

void sub_1BD3DB984()
{
  _BYTE *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0xF0))() & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD3DB9BC()
{
  RecentsCollectionViewCollator.hasFinishedFirstLoad.setter();
  OUTLINED_FUNCTION_0();
}

id RecentsCollectionViewCollator.__deallocating_deinit()
{
  char *v0;
  char *v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  void (*v4)(_QWORD, _QWORD);
  objc_super v6;

  RecentsCollectionViewCollator.deregisterRecentCallsDidChangeObserver()();
  v1 = &v0[OBJC_IVAR____TtC15ConversationKit29RecentsCollectionViewCollator_linkController];
  OUTLINED_FUNCTION_2_0();
  v2 = *(void (**)(uint64_t))(**(_QWORD **)v1 + 264);
  v3 = partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  v2(v3);
  OUTLINED_FUNCTION_43();
  v4 = *(void (**)(_QWORD, _QWORD))(**(_QWORD **)v1 + 136);
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  v4(0, 0);
  OUTLINED_FUNCTION_43();
  v6.receiver = v0;
  v6.super_class = (Class)ObjC metadata update function for RecentsCollectionViewCollator();
  return objc_msgSendSuper2(&v6, sel_dealloc);
}

void RecentsCollectionViewCollator.callItem(for:identifier:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;

  OUTLINED_FUNCTION_93();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_11_2();
  v9 = *v7;
  v10 = OUTLINED_FUNCTION_52_6();
  OUTLINED_FUNCTION_77_0(v1, v11, v12, v10);
  v13 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v13 + 16) = v1;
  *(_QWORD *)(v13 + 24) = v0;
  *(_BYTE *)(v13 + 32) = v9;
  *(_QWORD *)(v13 + 40) = v5;
  *(_QWORD *)(v13 + 48) = v3;
  v14 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v14 + 16) = partial apply for closure #1 in RecentsCollectionViewCollator.callItem(for:identifier:);
  *(_QWORD *)(v14 + 24) = v13;
  OUTLINED_FUNCTION_15_1((uint64_t)thunk for @escaping @callee_guaranteed () -> ());
  OUTLINED_FUNCTION_133_8();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_21_7();
  OUTLINED_FUNCTION_14_12();
  OUTLINED_FUNCTION_124_8();
  OUTLINED_FUNCTION_50_3();
  v15 = OUTLINED_FUNCTION_80_14();
  OUTLINED_FUNCTION_74();
  if ((v15 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_121_4();
    OUTLINED_FUNCTION_22();
    OUTLINED_FUNCTION_52_1();
  }
}

uint64_t closure #1 in RecentsCollectionViewCollator.callItem(for:identifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;

  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  RecentsCollectionViewCollator.model.getter(&v33);
  v12 = v33;
  if (!*(_QWORD *)(v33 + 16) || (v13 = specialized __RawDictionaryStorage.find<A>(_:)(a3), (v14 & 1) == 0))
  {
    v36 = 0;
    v34 = 0u;
    v35 = 0u;
LABEL_15:
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  v15 = *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v13);
  v16 = *(_QWORD *)(v15 + 16);
  if (!v16)
  {
    swift_bridgeObjectRetain();
LABEL_14:
    v36 = 0;
    v34 = 0u;
    v35 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  v29 = a1;
  v17 = v15 + 32;
  swift_bridgeObjectRetain_n();
  while (1)
  {
    outlined init with copy of RadarReporting(v17, (uint64_t)&v30);
    v18 = v31;
    v19 = v32;
    __swift_project_boxed_opaque_existential_1(&v30, v31);
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v19 + 24))(v18, v19) == a4 && v20 == a5)
      break;
    v22 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v22 & 1) != 0)
      goto LABEL_21;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
    v17 += 40;
    if (!--v16)
    {
      swift_bridgeObjectRelease();
      a1 = v29;
      goto LABEL_14;
    }
  }
  swift_bridgeObjectRelease();
LABEL_21:
  swift_bridgeObjectRelease();
  outlined init with take of Notice(&v30, (uint64_t)&v34);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1 = v29;
LABEL_16:
  if (*((_QWORD *)&v35 + 1))
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RecentsCollectionViewSectionable);
    v23 = type metadata accessor for RecentsCallItem(0);
    v24 = swift_dynamicCast() ^ 1;
    v25 = (uint64_t)v11;
    v26 = v23;
  }
  else
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)&v34, &demangling cache variable for type metadata for RecentsCollectionViewSectionable?);
    v26 = type metadata accessor for RecentsCallItem(0);
    v25 = (uint64_t)v11;
    v24 = 1;
  }
  __swift_storeEnumTagSinglePayload(v25, v24, 1, v26);
  return outlined assign with take of RecentsCallItem?((uint64_t)v11, a1);
}

void RecentsCollectionViewCollator.callItem(for:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  char v12;

  OUTLINED_FUNCTION_93();
  v3 = v2;
  v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_11_2();
  v7 = OUTLINED_FUNCTION_52_6();
  OUTLINED_FUNCTION_77_0(v1, v8, v9, v7);
  v10 = (_QWORD *)OUTLINED_FUNCTION_15();
  v10[2] = v1;
  v10[3] = v0;
  v10[4] = v5;
  v10[5] = v3;
  v11 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v11 + 16) = partial apply for closure #1 in RecentsCollectionViewCollator.callItem(for:);
  *(_QWORD *)(v11 + 24) = v10;
  OUTLINED_FUNCTION_15_1((uint64_t)thunk for @escaping @callee_guaranteed () -> ());
  OUTLINED_FUNCTION_133_8();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_21_7();
  OUTLINED_FUNCTION_14_12();
  OUTLINED_FUNCTION_124_8();
  OUTLINED_FUNCTION_50_3();
  v12 = OUTLINED_FUNCTION_80_14();
  OUTLINED_FUNCTION_74();
  if ((v12 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_121_4();
    OUTLINED_FUNCTION_11_0();
    OUTLINED_FUNCTION_52_1();
  }
}

uint64_t closure #1 in RecentsCollectionViewCollator.callItem(for:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  RecentsCollectionViewCollator.model.getter(&v7);
  v6 = v7;
  RecentsCollectionViewModel.sectionable(with:)();
  swift_bridgeObjectRelease();
  return outlined assign with take of RecentsCallItem?((uint64_t)v4, a1);
}

void RecentsCollectionViewCollator.videoMessageCallItem(withUUID:)()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  char *v19;
  char v20;
  _QWORD v21[6];

  OUTLINED_FUNCTION_93();
  v2 = v1;
  v4 = v3;
  v5 = OUTLINED_FUNCTION_33_0();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](v5);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = OUTLINED_FUNCTION_52_6();
  OUTLINED_FUNCTION_77_0((uint64_t)v10, v12, v13, v11);
  v14 = *(NSObject **)&v0[OBJC_IVAR____TtC15ConversationKit29RecentsCollectionViewCollator_updateQueue];
  OUTLINED_FUNCTION_139((uint64_t)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16));
  v15 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = v10;
  *(_QWORD *)(v16 + 24) = v0;
  OUTLINED_FUNCTION_139(v16 + v15, (uint64_t)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 32));
  v17 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v17 + 16) = partial apply for closure #1 in RecentsCollectionViewCollator.videoMessageCallItem(withUUID:);
  *(_QWORD *)(v17 + 24) = v16;
  v21[4] = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  v21[5] = v17;
  v21[0] = MEMORY[0x1E0C809B0];
  v21[1] = 1107296256;
  v18 = OUTLINED_FUNCTION_15_1((uint64_t)thunk for @escaping @callee_guaranteed () -> ());
  v19 = v0;
  swift_retain();
  swift_release();
  dispatch_sync(v14, v18);
  _Block_release(v18);
  v20 = OUTLINED_FUNCTION_80_14();
  swift_release();
  if ((v20 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    outlined init with take of RecentsCallItem?((uint64_t)v10, v4);
    OUTLINED_FUNCTION_22();
    OUTLINED_FUNCTION_52_1();
  }
}

#error "1BD3DC318: call analysis failed (funcsize=41)"

BOOL RecentsCollectionViewCollator.isActive.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_5_83(*v0);
  OUTLINED_FUNCTION_120();
  v2 = (*(uint64_t (**)(void))(v1 + 128))();
  OUTLINED_FUNCTION_43();
  if (v2)
    swift_unknownObjectRelease();
  return v2 != 0;
}

Swift::Void __swiftcall RecentsCollectionViewCollator.suspend()()
{
  _QWORD *v0;
  id v1;
  void (*v2)(id);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  RecentsCollectionViewCollator.deregisterRecentCallsDidChangeObserver()();
  v1 = objc_msgSend(*(id *)((char *)v0 + OBJC_IVAR____TtC15ConversationKit29RecentsCollectionViewCollator_conversationManager), sel_removeDelegate_, v0);
  v2 = *(void (**)(id))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0);
  v2(v1);
  OUTLINED_FUNCTION_120();
  (*(void (**)(void))(v3 + 264))();
  v4 = OUTLINED_FUNCTION_43();
  v2((id)v4);
  OUTLINED_FUNCTION_120();
  (*(void (**)(_QWORD, _QWORD))(v5 + 136))(0, 0);
  swift_release();
}

void closure #1 in RecentsCollectionViewCollator.doReloadData(completion:)(uint64_t a1, void *a2)
{
  uint64_t v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  id v16;
  uint64_t v17;

  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v3 = type metadata accessor for Logger();
  __swift_project_value_buffer(v3, (uint64_t)&static Logger.conversationKit);
  v4 = a2;
  swift_bridgeObjectRetain_n();
  v16 = v4;
  v5 = Logger.logObject.getter();
  v6 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    v17 = v9;
    *(_DWORD *)v7 = 138412546;
    v10 = v16;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *v8 = v16;

    *(_WORD *)(v7 + 12) = 2080;
    v11 = type metadata accessor for RecentsCallItem(0);
    v12 = swift_bridgeObjectRetain();
    v13 = MEMORY[0x1C3B7304C](v12, v11);
    v15 = v14;
    swift_bridgeObjectRelease();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v13, v15, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v5, v6, "When updating %@ found dupes in items %s", (uint8_t *)v7, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v8, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v9, -1, -1);
    MEMORY[0x1C3B751B8](v7, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

void closure #2 in RecentsCollectionViewCollator.doReloadData(completion:)(uint64_t a1, void (*a2)(void))
{
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v3 = type metadata accessor for Logger();
  __swift_project_value_buffer(v3, (uint64_t)&static Logger.conversationKit);
  swift_bridgeObjectRetain();
  v4 = Logger.logObject.getter();
  v5 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v4, v5))
  {

    swift_bridgeObjectRelease();
    if (!a2)
      return;
    goto LABEL_7;
  }
  v6 = (uint8_t *)swift_slowAlloc();
  *(_DWORD *)v6 = 134217984;
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_1BD004000, v4, v5, "reloadData done. call items count: %ld", v6, 0xCu);
  MEMORY[0x1C3B751B8](v6, -1, -1);

  if (a2)
LABEL_7:
    a2();
}

void RecentsCollectionViewCollator.deleteCallItems(_:completion:)()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  char *v16;
  _QWORD v17[2];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)();
  _QWORD *v23;

  OUTLINED_FUNCTION_93();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v8 = type metadata accessor for DispatchWorkItemFlags();
  v18 = *(_QWORD *)(v8 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = OUTLINED_FUNCTION_16_61();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_11_2();
  v17[1] = *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit29RecentsCollectionViewCollator_updateQueue];
  v14 = (_QWORD *)OUTLINED_FUNCTION_15();
  v14[2] = v0;
  v14[3] = v7;
  v14[4] = v5;
  v14[5] = v3;
  v22 = partial apply for closure #1 in RecentsCollectionViewCollator.deleteCallItems(_:completion:);
  v23 = v14;
  v20 = MEMORY[0x1E0C809B0];
  v21 = 1107296256;
  v15 = OUTLINED_FUNCTION_15_1((uint64_t)thunk for @escaping @callee_guaranteed @Sendable () -> ());
  v16 = v0;
  OUTLINED_FUNCTION_33_1();
  OUTLINED_FUNCTION_76_18();
  static DispatchQoS.unspecified.getter();
  v19 = MEMORY[0x1E0DEE9D8];
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))MEMORY[0x1E0DEF4F8]);
  OUTLINED_FUNCTION_31_11();
  OUTLINED_FUNCTION_34_7(&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  MEMORY[0x1C3B7361C](0, v1, v11, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v11, v8);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v1, v12);
  OUTLINED_FUNCTION_58_2();
  OUTLINED_FUNCTION_52_1();
}

uint64_t closure #1 in RecentsCollectionViewCollator.deleteCallItems(_:completion:)(uint64_t a1, Swift::OpaquePointer a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSDiffableDataSourceSnapshot<RecentsCollectionViewSection, RecentsCallItem>);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();
  NSDiffableDataSourceSnapshot.deleteItems(_:)(a2);
  RecentsCollectionViewCollator.apply(_:animatingDifferences:completion:)();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void closure #1 in RecentsCollectionViewCollator.registerRecentCallsDidChangeObserver()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  void *v4;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = (_QWORD *)MEMORY[0x1C3B752C0](v2);
  if (v3)
  {
    v4 = v3;
    (*(void (**)(_QWORD, _QWORD))((*MEMORY[0x1E0DEEDD8] & *v3) + 0x1E8))(0, 0);

  }
}

void RecentsCollectionViewCollator.deregisterRecentCallsDidChangeObserver()()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit29RecentsCollectionViewCollator_recentCallsDidChangeObserver);
  if (v1)
  {
    v2 = (void *)objc_opt_self();
    swift_unknownObjectRetain();
    v3 = objc_msgSend(v2, sel_defaultCenter);
    objc_msgSend(v3, sel_removeObserver_, v1);

    RecentsCollectionViewCollator.recentCallsDidChangeObserver.setter(0);
    swift_unknownObjectRelease();
  }
}

id RecentsCollectionViewCollator.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void RecentsCollectionViewCollator.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

BOOL static CombiningType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void CombiningType.hash(into:)()
{
  unsigned __int8 *v0;

  Hasher._combine(_:)(*v0);
  OUTLINED_FUNCTION_0();
}

Swift::Int CombiningType.hashValue.getter()
{
  unsigned __int8 *v0;
  Swift::UInt v1;

  v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void static RecentsCollectionViewCollator.combinables(combining:with:now:using:combiningType:)()
{
  uint64_t v0;
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  char v29;
  BOOL v30;
  uint64_t v31;
  char v32;
  BOOL v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int64_t v53;
  uint64_t v54;
  int64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  unint64_t v66;
  BOOL v67;
  uint64_t v68;
  uint64_t v69;
  int64_t v70;
  int64_t v71;
  _QWORD v73[2];
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD v84[6];

  OUTLINED_FUNCTION_93();
  v2 = v1;
  v4 = v3;
  v75 = v5;
  v76 = v6;
  v77 = v7;
  v9 = v8;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v10);
  v12 = (unint64_t)v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = OUTLINED_FUNCTION_33_0();
  v14 = (void (*)(uint64_t))MEMORY[0x1E0CB0998];
  v15 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_81();
  LODWORD(v81) = *v2;
  v83 = MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [GroupCombinable]);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UUID and conformance UUID, v14);
  v82 = Dictionary.init(dictionaryLiteral:)();
  v16 = *(_QWORD *)(v9 + 16);
  if (v16)
  {
    v73[1] = v9;
    v74 = v4;
    v17 = v9 + 32;
    OUTLINED_FUNCTION_35_0();
    v78 = xmmword_1BD6441D0;
    v79 = v15;
    v80 = v13;
    while (1)
    {
      v18 = (_QWORD *)OUTLINED_FUNCTION_131();
      __swift_project_boxed_opaque_existential_1(v18, v19);
      LOBYTE(v84[0]) = v81;
      OUTLINED_FUNCTION_147_4((uint64_t)v84);
      if (__swift_getEnumTagSinglePayload(v12, 1, v13) == 1)
      {
        outlined destroy of OS_dispatch_queue.SchedulerOptions?(v12, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        OUTLINED_FUNCTION_116_7(v20, (uint64_t)v84);
        v21 = v83;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          OUTLINED_FUNCTION_39_52();
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          v21 = v44;
        }
        v22 = *(_QWORD *)(v21 + 16);
        if (v22 >= *(_QWORD *)(v21 + 24) >> 1)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          v21 = v45;
        }
        *(_QWORD *)(v21 + 16) = v22 + 1;
        OUTLINED_FUNCTION_108_10(v21 + 40 * v22);
        v83 = v21;
        goto LABEL_34;
      }
      OUTLINED_FUNCTION_139(v0, v12, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 32));
      v23 = v82;
      if (*(_QWORD *)(v82 + 16) && (v24 = OUTLINED_FUNCTION_66_23(), (v25 & 1) != 0))
      {
        v26 = *(_QWORD *)(*(_QWORD *)(v23 + 56) + 8 * v24);
        OUTLINED_FUNCTION_116_7(v24, (uint64_t)v84);
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          OUTLINED_FUNCTION_39_52();
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          v26 = v46;
        }
        v27 = *(_QWORD *)(v26 + 16);
        if (v27 >= *(_QWORD *)(v26 + 24) >> 1)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          v26 = v47;
        }
        *(_QWORD *)(v26 + 16) = v27 + 1;
        OUTLINED_FUNCTION_108_10(v26 + 40 * v27);
        OUTLINED_FUNCTION_83_8();
        OUTLINED_FUNCTION_55_29();
        OUTLINED_FUNCTION_138_7();
        if (v30)
          goto LABEL_85;
        v31 = v28;
        v32 = v29;
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<UUID, [GroupCombinable]>);
        v33 = OUTLINED_FUNCTION_74_14();
        v15 = v79;
        v13 = v80;
        if (v33)
        {
          OUTLINED_FUNCTION_66_23();
          OUTLINED_FUNCTION_36_44();
          if (!v35)
            goto LABEL_88;
          v31 = v34;
        }
        v36 = v84[0];
        if ((v32 & 1) == 0)
        {
          OUTLINED_FUNCTION_19_65();
          *(_QWORD *)(*(_QWORD *)(v36 + 56) + 8 * v31) = v26;
          OUTLINED_FUNCTION_140_8();
          if (v30)
            goto LABEL_86;
LABEL_32:
          *(_QWORD *)(v36 + 16) = v37;
          goto LABEL_33;
        }
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<GroupCombinable>);
        v26 = OUTLINED_FUNCTION_15();
        *(_OWORD *)(v26 + 16) = v78;
        OUTLINED_FUNCTION_116_7(v26, v26 + 32);
        OUTLINED_FUNCTION_83_8();
        OUTLINED_FUNCTION_55_29();
        OUTLINED_FUNCTION_138_7();
        if (v30)
          goto LABEL_83;
        v31 = v38;
        v40 = v39;
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<UUID, [GroupCombinable]>);
        v41 = OUTLINED_FUNCTION_74_14();
        v15 = v79;
        v13 = v80;
        if (v41)
        {
          OUTLINED_FUNCTION_66_23();
          OUTLINED_FUNCTION_36_44();
          if (!v35)
            goto LABEL_88;
          v31 = v42;
        }
        v36 = v84[0];
        if ((v40 & 1) == 0)
        {
          OUTLINED_FUNCTION_19_65();
          *(_QWORD *)(*(_QWORD *)(v36 + 56) + 8 * v31) = v26;
          OUTLINED_FUNCTION_140_8();
          if (v30)
            goto LABEL_84;
          goto LABEL_32;
        }
      }
      v43 = *(_QWORD *)(v36 + 56);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v43 + 8 * v31) = v26;
LABEL_33:
      v82 = v36;
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_371(v0, *(uint64_t (**)(uint64_t, uint64_t))(v15 + 8));
LABEL_34:
      v17 += 40;
      if (!--v16)
      {
        swift_bridgeObjectRelease();
        v4 = v74;
        break;
      }
    }
  }
  v48 = *(_QWORD *)(v77 + 16);
  if (v48)
  {
    v49 = (_QWORD *)(v77 + 32);
    OUTLINED_FUNCTION_35_0();
    v15 = v75;
    v13 = v76;
    v12 = v81;
    do
    {
      closure #2 in static RecentsCollectionViewCollator.combinables(combining:with:now:using:combiningType:)(v49, v12, &v83, &v82, (void (*)(__int128 *__return_ptr, uint64_t, _QWORD *))v13, v4, v15);
      v49 += 5;
      --v48;
    }
    while (v48);
    swift_bridgeObjectRelease();
  }
  v50 = v82;
  specialized _NativeDictionary.makeIterator()(v84, v82);
  v80 = v50;
  v81 = v84[1];
  v51 = v84[3];
  v52 = v84[4];
  v53 = (unint64_t)(v84[2] + 64) >> 6;
  OUTLINED_FUNCTION_59_5();
  v54 = MEMORY[0x1E0DEE9D8];
  if (!v52)
    goto LABEL_42;
LABEL_41:
  OUTLINED_FUNCTION_100_8();
  while (1)
  {
    OUTLINED_FUNCTION_103_8();
    if (v30)
      break;
    swift_bridgeObjectRetain();
    if (!swift_isUniquelyReferenced_nonNull_native() || v16 > *(_QWORD *)(v54 + 24) >> 1)
    {
      OUTLINED_FUNCTION_49_41();
      v54 = v64;
    }
    if (*(_QWORD *)(v13 + 16))
    {
      OUTLINED_FUNCTION_134_6();
      if (v65 != v30)
        goto LABEL_80;
      OUTLINED_FUNCTION_48_39();
      v67 = v67 || v12 >= v66;
      if (!v67)
        goto LABEL_87;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GroupCombinable);
      OUTLINED_FUNCTION_68_20();
      if (v15)
      {
        v68 = *(_QWORD *)(v54 + 16);
        v30 = __OFADD__(v68, v15);
        v69 = v68 + v15;
        if (v30)
          goto LABEL_81;
        *(_QWORD *)(v54 + 16) = v69;
      }
    }
    else if (v15)
    {
      goto LABEL_79;
    }
    OUTLINED_FUNCTION_30_4();
    if (v52)
      goto LABEL_41;
LABEL_42:
    v55 = v51 + 1;
    if (__OFADD__(v51, 1))
      goto LABEL_82;
    if (v55 >= v53)
      goto LABEL_77;
    if (!*(_QWORD *)(v81 + 8 * v55))
    {
      if (v51 + 2 >= v53)
        goto LABEL_77;
      OUTLINED_FUNCTION_113_12();
      if (!v57)
      {
        if (v56 + 2 >= v53)
          goto LABEL_77;
        OUTLINED_FUNCTION_113_12();
        if (!v59)
        {
          if (v58 + 3 >= v53)
            goto LABEL_77;
          OUTLINED_FUNCTION_113_12();
          if (!v61)
          {
            if (v60 + 4 >= v53)
              goto LABEL_77;
            OUTLINED_FUNCTION_113_12();
            if (!v63)
            {
              v70 = v62 + 5;
              if (v70 >= v53)
                goto LABEL_77;
              if (!*(_QWORD *)(v81 + 8 * v70))
              {
                v71 = v51 + 7;
                while (v71 < v53)
                {
                  if (*(_QWORD *)(v81 + 8 * v71++))
                    goto LABEL_53;
                }
LABEL_77:
                OUTLINED_FUNCTION_13_3();
                OUTLINED_FUNCTION_43();
                specialized Array.append<A>(contentsOf:)();
                OUTLINED_FUNCTION_13_3();
                OUTLINED_FUNCTION_52_1();
                return;
              }
            }
          }
        }
      }
    }
LABEL_53:
    OUTLINED_FUNCTION_79_17();
  }
  __break(1u);
LABEL_79:
  __break(1u);
LABEL_80:
  __break(1u);
LABEL_81:
  __break(1u);
LABEL_82:
  __break(1u);
LABEL_83:
  __break(1u);
LABEL_84:
  __break(1u);
LABEL_85:
  __break(1u);
LABEL_86:
  __break(1u);
LABEL_87:
  OUTLINED_FUNCTION_82_10();
  OUTLINED_FUNCTION_58_29();
  __break(1u);
LABEL_88:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
}

void closure #1 in RecentsCollectionViewCollator.linkCallItems(combining:with:)()
{
  uint64_t v0;
  void (*v1)(char *, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  _BYTE v35[40];

  OUTLINED_FUNCTION_93();
  v33 = v1;
  v34 = v0;
  v3 = v2;
  v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_79();
  v9 = v7 - v8;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v32 - v11;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v32 - v14;
  v16 = OUTLINED_FUNCTION_52_6();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_79();
  v20 = v18 - v19;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v32 - v22;
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v32 - v25;
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)&v32 - v28;
  outlined init with copy of RadarReporting(v3, (uint64_t)v35);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GroupCombinable);
  if ((OUTLINED_FUNCTION_72_21() & 1) == 0)
  {
    OUTLINED_FUNCTION_83_0((uint64_t)v15, 1);
    v30 = (uint64_t)v15;
LABEL_7:
    outlined destroy of OS_dispatch_queue.SchedulerOptions?(v30, (uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
    *(_QWORD *)(v5 + 32) = 0;
    *(_OWORD *)v5 = 0u;
    *(_OWORD *)(v5 + 16) = 0u;
    goto LABEL_8;
  }
  OUTLINED_FUNCTION_83_0((uint64_t)v15, 0);
  outlined init with take of RecentsCallItem((uint64_t)v15, (uint64_t)v29);
  outlined init with copy of RadarReporting(v34, (uint64_t)v35);
  if ((OUTLINED_FUNCTION_72_21() & 1) == 0)
  {
    OUTLINED_FUNCTION_83_0((uint64_t)v12, 1);
    OUTLINED_FUNCTION_120_5();
    v30 = (uint64_t)v12;
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_83_0((uint64_t)v12, 0);
  outlined init with take of RecentsCallItem((uint64_t)v12, (uint64_t)v26);
  outlined init with copy of ConversationControlsAction((uint64_t)v29, (uint64_t)v23, type metadata accessor for RecentsCallItem);
  outlined init with copy of ConversationControlsAction((uint64_t)v26, v20, type metadata accessor for RecentsCallItem);
  v33(v23, v20);
  if (__swift_getEnumTagSinglePayload(v9, 1, v16) == 1)
  {
    outlined destroy of RecentsCallItem((uint64_t)v26);
    OUTLINED_FUNCTION_120_5();
    outlined destroy of OS_dispatch_queue.SchedulerOptions?(v9, (uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
    *(_OWORD *)v5 = 0u;
    *(_OWORD *)(v5 + 16) = 0u;
    *(_QWORD *)(v5 + 32) = 0;
  }
  else
  {
    *(_QWORD *)(v5 + 24) = v16;
    *(_QWORD *)(v5 + 32) = &protocol witness table for RecentsCallItem;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)v5);
    outlined init with take of RecentsCallItem(v9, (uint64_t)boxed_opaque_existential_1);
    outlined destroy of RecentsCallItem((uint64_t)v26);
    OUTLINED_FUNCTION_120_5();
  }
LABEL_8:
  OUTLINED_FUNCTION_52_1();
}

void specialized closure #2 in static RecentsCollectionViewCollator.combinables(combining:with:now:using:combiningType:)(_QWORD *a1, char a2, uint64_t *a3, _QWORD *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  char v33;

  v27[1] = a6;
  v29 = a4;
  v32 = a2 & 1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for UUID();
  v28 = *(_QWORD *)(v12 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_41();
  v30 = v14;
  v16 = a1[3];
  v15 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v16);
  v33 = v32;
  v17 = v16;
  v18 = v12;
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(&v33, v17, v15);
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12) == 1)
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v11, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    OUTLINED_FUNCTION_83_20();
    OUTLINED_FUNCTION_21_75();
    OUTLINED_FUNCTION_18_78();
    return;
  }
  v19 = v28;
  v20 = v30;
  (*(void (**)(uint64_t, char *, uint64_t))(v28 + 32))(v30, v11, v18);
  v21 = specialized Dictionary.subscript.getter(v20, *v29);
  v22 = v20;
  if (!v21)
    goto LABEL_9;
  v23 = *(_QWORD *)(v21 + 16);
  if (!v23)
  {
    OUTLINED_FUNCTION_27();
LABEL_9:
    OUTLINED_FUNCTION_83_20();
    OUTLINED_FUNCTION_21_75();
    OUTLINED_FUNCTION_18_78();
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v22, v18);
    return;
  }
  v31 = MEMORY[0x1E0DEE9D8];
  v24 = v21 + 32;
  do
  {
    specialized closure #1 in closure #2 in static RecentsCollectionViewCollator.combinables(combining:with:now:using:combiningType:)(v24, a1, a3, &v31, a5);
    v24 += 40;
    --v23;
  }
  while (v23);
  OUTLINED_FUNCTION_27();
  v25 = swift_bridgeObjectRetain();
  v26 = v30;
  specialized Dictionary._Variant.setValue(_:forKey:)(v25, v30);
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v26, v18);
  swift_bridgeObjectRelease();
}

void closure #2 in static RecentsCollectionViewCollator.combinables(combining:with:now:using:combiningType:)(_QWORD *a1, char a2, uint64_t *a3, _QWORD *a4, void (*a5)(__int128 *__return_ptr, uint64_t, _QWORD *), uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  char v39;

  v32 = a6;
  v33 = a7;
  v36 = a4;
  LODWORD(v37) = a2 & 1;
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for UUID();
  v34 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v35 = (uint64_t)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1[3];
  v16 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v15);
  v39 = v37;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(&v39, v15, v16);
  v37 = v13;
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13) == 1)
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v12, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    v17 = *(_QWORD *)(*a3 + 16);
    specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v17);
    v18 = *a3;
    *(_QWORD *)(v18 + 16) = v17 + 1;
    outlined init with copy of RadarReporting((uint64_t)a1, v18 + 40 * v17 + 32);
    return;
  }
  v20 = v34;
  v19 = v35;
  (*(void (**)(uint64_t, char *, uint64_t))(v34 + 32))(v35, v12, v37);
  v21 = specialized Dictionary.subscript.getter(v19, *v36);
  v22 = v19;
  if (!v21)
    goto LABEL_9;
  v23 = *(_QWORD *)(v21 + 16);
  if (!v23)
  {
    swift_bridgeObjectRelease();
LABEL_9:
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    v29 = *(_QWORD *)(*a3 + 16);
    specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v29);
    v30 = *a3;
    *(_QWORD *)(v30 + 16) = v29 + 1;
    outlined init with copy of RadarReporting((uint64_t)a1, v30 + 40 * v29 + 32);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v22, v37);
    return;
  }
  v38 = MEMORY[0x1E0DEE9D8];
  v24 = v21 + 32;
  v25 = v32;
  v26 = v33;
  do
  {
    closure #1 in closure #2 in static RecentsCollectionViewCollator.combinables(combining:with:now:using:combiningType:)(v24, a5, v25, a1, a3, &v38, v26);
    v24 += 40;
    --v23;
  }
  while (v23);
  swift_bridgeObjectRelease();
  v27 = swift_bridgeObjectRetain();
  v28 = v35;
  specialized Dictionary._Variant.setValue(_:forKey:)(v27, v35);
  (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v28, v37);
  swift_bridgeObjectRelease();
}

void specialized closure #1 in closure #2 in static RecentsCollectionViewCollator.combinables(combining:with:now:using:combiningType:)(uint64_t a1, _QWORD *a2, uint64_t *a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE v34[40];
  uint64_t v35;

  closure #1 in RecentsCollectionViewCollator.linkCallItems(combining:with:)();
  if (!v32)
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)&v31, &demangling cache variable for type metadata for GroupCombinable?);
    OUTLINED_FUNCTION_83_20();
    OUTLINED_FUNCTION_21_75();
    v29 = *a3;
    *(_QWORD *)(v29 + 16) = a5 + 1;
    outlined init with copy of RadarReporting(a1, v29 + 40 * a5 + 32);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    OUTLINED_FUNCTION_21_75();
    v30 = *a3;
    *(_QWORD *)(v30 + 16) = a5 + 1;
    outlined init with copy of RadarReporting((uint64_t)a2, v30 + 40 * a5 + 32);
    return;
  }
  outlined init with take of Notice(&v31, (uint64_t)v34);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  v11 = *(_QWORD *)(*a4 + 16);
  specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v11);
  v12 = *a4;
  *(_QWORD *)(v12 + 16) = v11 + 1;
  outlined init with copy of RadarReporting((uint64_t)v34, v12 + 40 * v11 + 32);
  v13 = a2[3];
  v14 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v13);
  v15 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 24))(a5, v13, v14);
  outlined init with copy of RadarReporting((uint64_t)a2, (uint64_t)&v31);
  if ((v15 & 1) == 0)
    goto LABEL_16;
  v16 = *a3;
  v17 = *(_QWORD *)(*a3 + 16);
  if (v17)
  {
    v35 = v5;
    v18 = (_QWORD *)(v16 + 32);
    swift_bridgeObjectRetain();
    while (1)
    {
      __swift_project_boxed_opaque_existential_1(v18, v18[3]);
      v19 = OUTLINED_FUNCTION_88_13();
      v21 = v20(v19);
      v23 = v22;
      v25 = v32;
      v24 = v33;
      __swift_project_boxed_opaque_existential_1(&v31, v32);
      if (v21 == (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 8))(v25, v24) && v23 == v26)
      {
        OUTLINED_FUNCTION_135_5();
        swift_bridgeObjectRelease_n();
        goto LABEL_16;
      }
      v28 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_27();
      if ((v28 & 1) != 0)
        break;
      v18 += 5;
      if (!--v17)
      {
        OUTLINED_FUNCTION_135_5();
        goto LABEL_12;
      }
    }
    OUTLINED_FUNCTION_135_5();
LABEL_16:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v31);
    goto LABEL_17;
  }
LABEL_12:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v31);
  OUTLINED_FUNCTION_83_20();
  OUTLINED_FUNCTION_21_75();
  OUTLINED_FUNCTION_18_78();
LABEL_17:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
}

void closure #1 in closure #2 in static RecentsCollectionViewCollator.combinables(combining:with:now:using:combiningType:)(uint64_t a1, void (*a2)(__int128 *__return_ptr, uint64_t, _QWORD *), uint64_t a3, _QWORD *a4, uint64_t *a5, uint64_t *a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE v40[40];
  uint64_t v41;

  a2(&v37, a1, a4);
  if (!v38)
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)&v37, &demangling cache variable for type metadata for GroupCombinable?);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    v33 = *(_QWORD *)(*a5 + 16);
    specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v33);
    v34 = *a5;
    *(_QWORD *)(v34 + 16) = v33 + 1;
    outlined init with copy of RadarReporting(a1, v34 + 40 * v33 + 32);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    v35 = *(_QWORD *)(*a5 + 16);
    specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v35);
    v36 = *a5;
    *(_QWORD *)(v36 + 16) = v35 + 1;
    outlined init with copy of RadarReporting((uint64_t)a4, v36 + 40 * v35 + 32);
    return;
  }
  outlined init with take of Notice(&v37, (uint64_t)v40);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  v13 = *(_QWORD *)(*a6 + 16);
  specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v13);
  v14 = *a6;
  *(_QWORD *)(v14 + 16) = v13 + 1;
  outlined init with copy of RadarReporting((uint64_t)v40, v14 + 40 * v13 + 32);
  v15 = a4[3];
  v16 = a4[4];
  __swift_project_boxed_opaque_existential_1(a4, v15);
  v17 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 24))(a7, v15, v16);
  outlined init with copy of RadarReporting((uint64_t)a4, (uint64_t)&v37);
  if ((v17 & 1) == 0)
    goto LABEL_16;
  v18 = *a5;
  v19 = *(_QWORD *)(*a5 + 16);
  if (v19)
  {
    v41 = v7;
    v20 = (_QWORD *)(v18 + 32);
    swift_bridgeObjectRetain();
    while (1)
    {
      v21 = v20[3];
      v22 = v20[4];
      __swift_project_boxed_opaque_existential_1(v20, v21);
      v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8))(v21, v22);
      v25 = v24;
      v27 = v38;
      v26 = v39;
      __swift_project_boxed_opaque_existential_1(&v37, v38);
      if (v23 == (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 8))(v27, v26) && v25 == v28)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        goto LABEL_16;
      }
      v30 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v30 & 1) != 0)
        break;
      v20 += 5;
      if (!--v19)
      {
        swift_bridgeObjectRelease();
        goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
LABEL_16:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v37);
    goto LABEL_17;
  }
LABEL_12:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v37);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  v31 = *(_QWORD *)(*a5 + 16);
  specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v31);
  v32 = *a5;
  *(_QWORD *)(v32 + 16) = v31 + 1;
  outlined init with copy of RadarReporting((uint64_t)a4, v32 + 40 * v31 + 32);
LABEL_17:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
}

uint64_t RecentsCollectionViewCollator.conversationManager(_:addedActiveConversation:)()
{
  return RecentsCollectionViewCollator.conversationManager(_:addedActiveConversation:)();
}

{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);

  if (one-time initialization token for conversationKit != -1)
    swift_once();
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  v0 = OUTLINED_FUNCTION_53_35();
  return v1(v0);
}

uint64_t RecentsCollectionViewCollator.conversationManager(_:stateChangedFor:)()
{
  return RecentsCollectionViewCollator.conversationManager(_:addedActiveConversation:)();
}

uint64_t RecentsCollectionViewCollator.conversationManager(_:removedActiveConversation:)()
{
  return RecentsCollectionViewCollator.conversationManager(_:addedActiveConversation:)();
}

uint64_t RecentsCollectionViewCollator.conversationManager(_:didChangeActivatedLinks:)(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;

  OUTLINED_FUNCTION_5_83(*v2);
  OUTLINED_FUNCTION_120();
  (*(void (**)(uint64_t))(v4 + 336))(a2);
  return OUTLINED_FUNCTION_155_2();
}

uint64_t RecentsCollectionViewCollator.conversationManager(_:linkChangedFor:)()
{
  uint64_t *v0;
  uint64_t v1;

  if (one-time initialization token for conversationKit != -1)
    swift_once();
  static os_log_type_t.default.getter();
  OUTLINED_FUNCTION_55_0();
  OUTLINED_FUNCTION_5_83(*v0);
  OUTLINED_FUNCTION_120();
  (*(void (**)(void))(v1 + 344))();
  return OUTLINED_FUNCTION_155_2();
}

uint64_t RecentsCollectionViewCollator.recentsLinkControllerRefreshedLinks(_:)()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);

  if (one-time initialization token for conversationKit != -1)
    swift_once();
  static os_log_type_t.default.getter();
  OUTLINED_FUNCTION_55_0();
  v0 = OUTLINED_FUNCTION_53_35();
  return v1(v0);
}

uint64_t sub_1BD3DE290()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BD3DE2B4()
{
  OUTLINED_FUNCTION_110_5();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in RecentsCollectionViewCollator.callItem(for:identifier:)()
{
  uint64_t v0;

  return closure #1 in RecentsCollectionViewCollator.callItem(for:identifier:)(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(unsigned __int8 *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t outlined init with take of RecentsCallItem?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BD3DE338()
{
  OUTLINED_FUNCTION_110_5();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in RecentsCollectionViewCollator.callItem(for:)()
{
  uint64_t v0;

  return closure #1 in RecentsCollectionViewCollator.callItem(for:)(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1BD3DE370()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = OUTLINED_FUNCTION_33_0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  OUTLINED_FUNCTION_110_5();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in RecentsCollectionViewCollator.videoMessageCallItem(withUUID:)()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_33_0() - 8) + 80);
  return closure #1 in RecentsCollectionViewCollator.videoMessageCallItem(withUUID:)(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), v0 + ((v1 + 32) & ~v1));
}

uint64_t sub_1BD3DE40C()
{
  return objectdestroy_31Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

void partial apply for closure #4 in RecentsCollectionViewCollator.reloadData(completion:)()
{
  RecentsCollectionViewCollator.doReloadData(completion:)();
  OUTLINED_FUNCTION_0();
}

uint64_t sub_1BD3DE448()
{
  uint64_t v0;

  OUTLINED_FUNCTION_115();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 32))
    swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in RecentsCollectionViewCollator.deleteCallItems(_:completion:)()
{
  uint64_t v0;
  Swift::OpaquePointer v1;

  v1._rawValue = *(void **)(v0 + 24);
  return closure #1 in RecentsCollectionViewCollator.deleteCallItems(_:completion:)(*(_QWORD *)(v0 + 16), v1);
}

void specialized _NativeDictionary.setValue(_:forKey:isUnique:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  char v12;
  char v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  OUTLINED_FUNCTION_93();
  OUTLINED_FUNCTION_26_57();
  OUTLINED_FUNCTION_168();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_16_74();
  OUTLINED_FUNCTION_0_133();
  if (v15)
  {
    __break(1u);
LABEL_9:
    OUTLINED_FUNCTION_117_10();
    __break(1u);
    return;
  }
  OUTLINED_FUNCTION_149_0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _NativeDictionary<UUID, Date>);
  if (OUTLINED_FUNCTION_12_94(v13 & 1))
  {
    OUTLINED_FUNCTION_60_24();
    OUTLINED_FUNCTION_11_63();
    if (!v16)
      goto LABEL_9;
  }
  if ((v12 & 1) != 0)
  {
    OUTLINED_FUNCTION_33();
    OUTLINED_FUNCTION_52_1();
    v20(v17, v18, v19, v20, v21, v22, v23, v24, a9, a10, a11, a12);
  }
  else
  {
    OUTLINED_FUNCTION_33_51();
    v25 = OUTLINED_FUNCTION_59_28();
    specialized _NativeDictionary._insert(at:key:value:)(v25, v26, v27, v28);
    OUTLINED_FUNCTION_52_1();
  }
}

uint64_t specialized _NativeDictionary.setValue(_:forKey:isUnique:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5)
{
  return specialized _NativeDictionary.setValue(_:forKey:isUnique:)(a1, a2, a3, a4, a5, &demangling cache variable for type metadata for _NativeDictionary<MultiwayViewConstraintsController.OverallLayoutState, [NSLayoutConstraint]>, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))specialized _NativeDictionary._insert(at:key:value:));
}

{
  return specialized _NativeDictionary.setValue(_:forKey:isUnique:)(a1, a2, a3, a4, a5, &demangling cache variable for type metadata for _NativeDictionary<MultiwayViewConstraintsController.OverallLayoutState, [()]>, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))specialized _NativeDictionary._insert(at:key:value:));
}

id specialized _NativeDictionary.setValue(_:forKey:isUnique:)(uint64_t a1, void *a2)
{
  uint64_t *v2;
  unint64_t v4;
  char v5;
  char v6;
  unint64_t v7;
  char v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  id result;

  specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)a2);
  OUTLINED_FUNCTION_0_133();
  if (v6)
  {
    __break(1u);
LABEL_10:
    type metadata accessor for NSAttributedStringKey(0);
    result = (id)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  v7 = v4;
  v8 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<NSAttributedStringKey, Swift.AnyObject>);
  if (OUTLINED_FUNCTION_22_70())
  {
    specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)a2);
    OUTLINED_FUNCTION_36_44();
    if (!v10)
      goto LABEL_10;
    v7 = v9;
  }
  v11 = *v2;
  if ((v8 & 1) != 0)
  {
    v12 = *(_QWORD *)(v11 + 56);
    result = (id)swift_unknownObjectRelease();
    *(_QWORD *)(v12 + 8 * v7) = a1;
  }
  else
  {
    specialized _NativeDictionary._insert(at:key:value:)(v7, (uint64_t)a2, a1, v11);
    return a2;
  }
  return result;
}

void specialized _NativeDictionary.setValue(_:forKey:isUnique:)()
{
  char v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_93();
  OUTLINED_FUNCTION_26_57();
  OUTLINED_FUNCTION_168();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_16_74();
  OUTLINED_FUNCTION_0_133();
  if (v3)
  {
    __break(1u);
LABEL_9:
    OUTLINED_FUNCTION_117_10();
    __break(1u);
    return;
  }
  OUTLINED_FUNCTION_149_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<UUID, ParticipantGridView.FrozenFrameOverlayState>);
  if (OUTLINED_FUNCTION_12_94(v1 & 1))
  {
    OUTLINED_FUNCTION_60_24();
    OUTLINED_FUNCTION_11_63();
    if (!v4)
      goto LABEL_9;
  }
  if ((v0 & 1) != 0)
  {
    OUTLINED_FUNCTION_52_1();
    outlined assign with take of ParticipantGridView.FrozenFrameOverlayState(v5, v6);
  }
  else
  {
    OUTLINED_FUNCTION_33_51();
    v7 = OUTLINED_FUNCTION_59_28();
    specialized _NativeDictionary._insert(at:key:value:)(v7, v8, v9, v10);
    OUTLINED_FUNCTION_52_1();
  }
}

{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_96();
  OUTLINED_FUNCTION_15_83(v0, v1);
  specialized __RawDictionaryStorage.find<A>(_:)();
  OUTLINED_FUNCTION_0_133();
  if (v3)
  {
    __break(1u);
LABEL_9:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  v4 = v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _NativeDictionary<ObjectIdentifier, ScreenSharingStateMonitor.Observation>);
  if (OUTLINED_FUNCTION_4_118())
  {
    OUTLINED_FUNCTION_85_17();
    specialized __RawDictionaryStorage.find<A>(_:)();
    OUTLINED_FUNCTION_36_44();
    if (!v5)
      goto LABEL_9;
  }
  OUTLINED_FUNCTION_65_1();
  if ((v4 & 1) != 0)
    outlined assign with take of ScreenSharingStateMonitor.Observation(v6, v7);
  else
    specialized _NativeDictionary._insert(at:key:value:)(v6, v7, v8, v9);
}

{
  char v0;
  char v1;
  char v2;
  char v3;
  _OWORD *v4;
  _OWORD *v5;
  unint64_t v6;
  _OWORD *v7;
  uint64_t v8;

  specialized __RawDictionaryStorage.find<A>(_:)();
  OUTLINED_FUNCTION_0_133();
  if (v1)
  {
    __break(1u);
LABEL_9:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  v2 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<ContextMenuNotificationUserInfoKey, Any>);
  if (OUTLINED_FUNCTION_22_70())
  {
    specialized __RawDictionaryStorage.find<A>(_:)();
    OUTLINED_FUNCTION_36_44();
    if (!v3)
      goto LABEL_9;
  }
  if ((v2 & 1) != 0)
  {
    v4 = (_OWORD *)OUTLINED_FUNCTION_101_14();
    outlined init with take of Any(v4, v5);
  }
  else
  {
    v6 = OUTLINED_FUNCTION_131();
    specialized _NativeDictionary._insert(at:key:value:)(v6, v7, v8);
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_96();
  v7 = OUTLINED_FUNCTION_15_83(v5, v6);
  specialized __RawDictionaryStorage.find<A>(_:)(v7);
  OUTLINED_FUNCTION_0_133();
  if (v8)
  {
    __break(1u);
LABEL_10:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  OUTLINED_FUNCTION_56_33();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<MomentsIndicatorType, MomentsIndicatorBubble>);
  if (OUTLINED_FUNCTION_4_118())
  {
    specialized __RawDictionaryStorage.find<A>(_:)(v1);
    OUTLINED_FUNCTION_13_95();
    if (!v10)
      goto LABEL_10;
    v3 = v9;
  }
  if ((v4 & 1) != 0)
  {
    v11 = *(_QWORD *)(*(_QWORD *)v2 + 56);

    *(_QWORD *)(v11 + 8 * v3) = v0;
    OUTLINED_FUNCTION_65_1();
  }
  else
  {
    OUTLINED_FUNCTION_91_13();
    OUTLINED_FUNCTION_65_1();
    specialized _NativeDictionary._insert(at:key:value:)(v12, v13, v14, v15);
  }
}

{
  uint64_t v0;
  char v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  _QWORD *v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;

  OUTLINED_FUNCTION_96();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  specialized __RawDictionaryStorage.find<A>(_:)(v3);
  OUTLINED_FUNCTION_0_133();
  if (v11)
  {
    __break(1u);
LABEL_10:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  v12 = v9;
  v13 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<PlatformAlertActionStyle, ()>);
  if (OUTLINED_FUNCTION_12_94(v2 & 1))
  {
    specialized __RawDictionaryStorage.find<A>(_:)(v4);
    OUTLINED_FUNCTION_13_95();
    if (!v15)
      goto LABEL_10;
    v12 = v14;
  }
  if ((v13 & 1) != 0)
  {
    v16 = (_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 56) + 16 * v12);
    swift_release();
    *v16 = v8;
    v16[1] = v6;
    OUTLINED_FUNCTION_65_1();
  }
  else
  {
    OUTLINED_FUNCTION_65_1();
    specialized _NativeDictionary._insert(at:key:value:)(v17, v18, v19, v20, v21);
  }
}

{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t *v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  char v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_96();
  v8 = OUTLINED_FUNCTION_15_83(v6, v7);
  specialized __RawDictionaryStorage.find<A>(_:)(v8);
  OUTLINED_FUNCTION_0_133();
  if (v9)
  {
    __break(1u);
LABEL_10:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  OUTLINED_FUNCTION_56_33();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<Bool, [NSLayoutConstraint]>);
  if (OUTLINED_FUNCTION_4_118())
  {
    v1 = *v3;
    specialized __RawDictionaryStorage.find<A>(_:)(v2 & 1);
    OUTLINED_FUNCTION_13_95();
    if (!v11)
      goto LABEL_10;
    v4 = v10;
  }
  if ((v5 & 1) != 0)
  {
    OUTLINED_FUNCTION_44_44();
    *(_QWORD *)(v1 + 8 * v4) = v0;
    OUTLINED_FUNCTION_65_1();
  }
  else
  {
    OUTLINED_FUNCTION_65_1();
    specialized _NativeDictionary._insert(at:key:value:)(v12, v13, v14, v15);
  }
}

{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_96();
  OUTLINED_FUNCTION_6_92(v3, v4, v5);
  OUTLINED_FUNCTION_0_133();
  if (v8)
  {
    __break(1u);
LABEL_10:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  v9 = v6;
  v10 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<String, ParticipantContactDetailsCache>);
  if (OUTLINED_FUNCTION_12_94(v2 & 1))
  {
    OUTLINED_FUNCTION_29_57();
    OUTLINED_FUNCTION_51_35();
    if (!v12)
      goto LABEL_10;
    v9 = v11;
  }
  if ((v10 & 1) != 0)
  {
    v13 = *(_QWORD *)(*(_QWORD *)v1 + 56);
    swift_release();
    *(_QWORD *)(v13 + 8 * v9) = v0;
    OUTLINED_FUNCTION_65_1();
  }
  else
  {
    v14 = OUTLINED_FUNCTION_57_15();
    specialized _NativeDictionary._insert(at:key:value:)(v14, v15, v16, v17, v18);
    OUTLINED_FUNCTION_7_108();
  }
}

{
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)();
}

{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_96();
  OUTLINED_FUNCTION_6_92(v3, v4, v5);
  OUTLINED_FUNCTION_0_133();
  if (v8)
  {
    __break(1u);
LABEL_10:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  v9 = v6;
  v10 = v7;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _NativeDictionary<String, [TranscriptionViewModel.Caption]>);
  if (OUTLINED_FUNCTION_12_94(v2 & 1))
  {
    OUTLINED_FUNCTION_29_57();
    OUTLINED_FUNCTION_51_35();
    if (!v12)
      goto LABEL_10;
    v9 = v11;
  }
  if ((v10 & 1) != 0)
  {
    v13 = *(_QWORD *)(*(_QWORD *)v1 + 56);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v13 + 8 * v9) = v0;
    OUTLINED_FUNCTION_65_1();
  }
  else
  {
    v14 = OUTLINED_FUNCTION_57_15();
    specialized _NativeDictionary._insert(at:key:value:)(v14, v15, v16, v17, v18);
    OUTLINED_FUNCTION_7_108();
  }
}

{
  uint64_t *v0;
  uint64_t v1;
  char v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_96();
  v3 = v0;
  v5 = v4;
  v7 = v6 & 1;
  v8 = *v0;
  specialized __RawDictionaryStorage.find<A>(_:)(v6 & 1);
  OUTLINED_FUNCTION_0_133();
  if (v9)
  {
    __break(1u);
LABEL_10:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  OUTLINED_FUNCTION_56_33();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<SharePlayDiscoverabilityType, [Application]>);
  if (OUTLINED_FUNCTION_4_118())
  {
    v8 = *v3;
    specialized __RawDictionaryStorage.find<A>(_:)(v7);
    OUTLINED_FUNCTION_13_95();
    if (!v11)
      goto LABEL_10;
    v1 = v10;
  }
  if ((v2 & 1) != 0)
  {
    OUTLINED_FUNCTION_44_44();
    *(_QWORD *)(v8 + 8 * v1) = v5;
    OUTLINED_FUNCTION_65_1();
  }
  else
  {
    OUTLINED_FUNCTION_91_13();
    OUTLINED_FUNCTION_65_1();
    specialized _NativeDictionary._insert(at:key:value:)(v12, v13);
  }
}

{
  _QWORD **v0;
  char v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  char v13;
  unint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  _QWORD *v18;
  uint64_t *v19;

  OUTLINED_FUNCTION_93();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  specialized __RawDictionaryStorage.find<A>(_:)(v5, v3);
  OUTLINED_FUNCTION_0_133();
  if (v13)
  {
    __break(1u);
LABEL_10:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  v14 = v11;
  v15 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<String, String>);
  if (OUTLINED_FUNCTION_114_12(v2 & 1))
  {
    specialized __RawDictionaryStorage.find<A>(_:)(v6, v4);
    OUTLINED_FUNCTION_51_35();
    if (!v17)
      goto LABEL_10;
    v14 = v16;
  }
  v18 = *v0;
  if ((v15 & 1) != 0)
  {
    v19 = (uint64_t *)(v18[7] + 16 * v14);
    swift_bridgeObjectRelease();
    *v19 = v10;
    v19[1] = v8;
    OUTLINED_FUNCTION_52_1();
  }
  else
  {
    specialized _NativeDictionary._insert(at:key:value:)(v14, v6, v4, v10, v8, v18);
    OUTLINED_FUNCTION_52_1();
    swift_bridgeObjectRetain();
  }
}

{
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)();
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(unint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t *v4;
  uint64_t *v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  char v14;
  unint64_t v15;
  char v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(unint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v22;

  OUTLINED_FUNCTION_93();
  v21 = v3;
  v22 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v10 = OUTLINED_FUNCTION_33_0();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_6_0();
  specialized __RawDictionaryStorage.find<A>(_:)(v9);
  OUTLINED_FUNCTION_0_133();
  if (v14)
  {
    __break(1u);
    goto LABEL_10;
  }
  v15 = v12;
  v16 = v13;
  __swift_instantiateConcreteTypeFromMangledName(v5);
  if (OUTLINED_FUNCTION_114_12(v7 & 1))
  {
    v17 = specialized __RawDictionaryStorage.find<A>(_:)(v9);
    if ((v16 & 1) == (v18 & 1))
    {
      v15 = v17;
      goto LABEL_5;
    }
LABEL_10:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
LABEL_5:
  v19 = *v0;
  if ((v16 & 1) != 0)
  {
    v20 = *(_QWORD *)(v19 + 56);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v20 + 8 * v15) = v22;
  }
  else
  {
    OUTLINED_FUNCTION_291(v1, v9, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 16));
    v21(v15, v1, v22, v19);
  }
  OUTLINED_FUNCTION_52_1();
}

{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t *v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_96();
  v8 = OUTLINED_FUNCTION_15_83(v6, v7);
  specialized __RawDictionaryStorage.find<A>(_:)(v8);
  OUTLINED_FUNCTION_0_133();
  if (v9)
  {
    __break(1u);
LABEL_10:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  OUTLINED_FUNCTION_56_33();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<InCallBannerState, [NSLayoutConstraint]>);
  if (OUTLINED_FUNCTION_4_118())
  {
    v1 = *v3;
    specialized __RawDictionaryStorage.find<A>(_:)(v2);
    OUTLINED_FUNCTION_13_95();
    if (!v11)
      goto LABEL_10;
    v4 = v10;
  }
  if ((v5 & 1) != 0)
  {
    OUTLINED_FUNCTION_44_44();
    *(_QWORD *)(v1 + 8 * v4) = v0;
    OUTLINED_FUNCTION_65_1();
  }
  else
  {
    OUTLINED_FUNCTION_91_13();
    OUTLINED_FUNCTION_65_1();
    specialized _NativeDictionary._insert(at:key:value:)(v12, v13);
  }
}

{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_96();
  OUTLINED_FUNCTION_6_92(v3, v4, v5);
  OUTLINED_FUNCTION_0_133();
  if (v8)
  {
    __break(1u);
LABEL_10:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  v9 = v6;
  v10 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<String, UIImage?>);
  if (OUTLINED_FUNCTION_12_94(v2 & 1))
  {
    OUTLINED_FUNCTION_29_57();
    OUTLINED_FUNCTION_51_35();
    if (!v12)
      goto LABEL_10;
    v9 = v11;
  }
  if ((v10 & 1) != 0)
  {
    v13 = *(_QWORD *)(*(_QWORD *)v1 + 56);

    *(_QWORD *)(v13 + 8 * v9) = v0;
    OUTLINED_FUNCTION_65_1();
  }
  else
  {
    v14 = OUTLINED_FUNCTION_57_15();
    specialized _NativeDictionary._insert(at:key:value:)(v14, v15, v16, v17, v18);
    OUTLINED_FUNCTION_7_108();
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_93();
  OUTLINED_FUNCTION_26_57();
  OUTLINED_FUNCTION_168();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_16_74();
  OUTLINED_FUNCTION_0_133();
  if (v6)
  {
    __break(1u);
LABEL_11:
    OUTLINED_FUNCTION_117_10();
    __break(1u);
    return;
  }
  OUTLINED_FUNCTION_149_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<UUID, DispatchWorkItem>);
  if (OUTLINED_FUNCTION_12_94(v4 & 1))
  {
    OUTLINED_FUNCTION_60_24();
    OUTLINED_FUNCTION_11_63();
    if (!v8)
      goto LABEL_11;
    v2 = v7;
  }
  if ((v3 & 1) != 0)
  {
    v9 = *(_QWORD *)(*(_QWORD *)v1 + 56);
    swift_release();
    *(_QWORD *)(v9 + 8 * v2) = v0;
  }
  else
  {
    OUTLINED_FUNCTION_33_51();
    v10 = OUTLINED_FUNCTION_59_28();
    specialized _NativeDictionary._insert(at:key:value:)(v10, v11, v12, v13);
  }
  OUTLINED_FUNCTION_52_1();
}

{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  void *v7;
  const void *v8;
  size_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_96();
  v3 = OUTLINED_FUNCTION_15_83(v1, v2);
  specialized __RawDictionaryStorage.find<A>(_:)(v3);
  OUTLINED_FUNCTION_0_133();
  if (v4)
  {
    __break(1u);
LABEL_9:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  OUTLINED_FUNCTION_56_33();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<UInt64, ParticipantPresentationContext>);
  if (OUTLINED_FUNCTION_4_118())
  {
    v5 = OUTLINED_FUNCTION_85_17();
    specialized __RawDictionaryStorage.find<A>(_:)(v5);
    OUTLINED_FUNCTION_13_95();
    if (!v6)
      goto LABEL_9;
  }
  OUTLINED_FUNCTION_65_1();
  if ((v0 & 1) != 0)
    memcpy(v7, v8, v9);
  else
    specialized _NativeDictionary._insert(at:key:value:)((unint64_t)v7, (uint64_t)v8, v9, v10);
}

{
  Swift::Int *v0;
  uint64_t v1;
  Swift::Int *v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::Int v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;

  OUTLINED_FUNCTION_93();
  v2 = v0;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  type metadata accessor for ObjectTracker.RuleGroup(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_11_2();
  v10 = *v0;
  specialized __RawDictionaryStorage.find<A>(_:)(v6);
  OUTLINED_FUNCTION_0_133();
  if (v13)
  {
    __break(1u);
LABEL_11:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  v14 = v11;
  v15 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<ObjectTracker.RuleGroup, ObjectTracker.Objects>);
  if (_NativeDictionary.ensureUnique(isUnique:capacity:)(v4 & 1, v10))
  {
    v16 = OUTLINED_FUNCTION_85_17();
    specialized __RawDictionaryStorage.find<A>(_:)(v16);
    OUTLINED_FUNCTION_11_63();
    if (!v18)
      goto LABEL_11;
    v14 = v17;
  }
  v19 = (_QWORD *)*v2;
  if ((v15 & 1) != 0)
  {
    v20 = v19[7];
    swift_release();
    *(_QWORD *)(v20 + 8 * v14) = v8;
  }
  else
  {
    outlined init with copy of ConversationControlsAction(v6, v1, type metadata accessor for ObjectTracker.RuleGroup);
    v21 = OUTLINED_FUNCTION_153_1();
    specialized _NativeDictionary._insert(at:key:value:)(v21, v22, v8, v19);
  }
  OUTLINED_FUNCTION_52_1();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_96();
  OUTLINED_FUNCTION_15_83(v4, v5);
  specialized __RawDictionaryStorage.find<A>(_:)();
  OUTLINED_FUNCTION_0_133();
  if (v6)
  {
    __break(1u);
LABEL_10:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  OUTLINED_FUNCTION_56_33();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<Int, [InCallControlsState : CGRect]>);
  if (OUTLINED_FUNCTION_4_118())
  {
    OUTLINED_FUNCTION_85_17();
    specialized __RawDictionaryStorage.find<A>(_:)();
    OUTLINED_FUNCTION_13_95();
    if (!v8)
      goto LABEL_10;
    v2 = v7;
  }
  if ((v3 & 1) != 0)
  {
    OUTLINED_FUNCTION_44_44();
    *(_QWORD *)(v1 + 8 * v2) = v0;
    OUTLINED_FUNCTION_65_1();
  }
  else
  {
    OUTLINED_FUNCTION_65_1();
    specialized _NativeDictionary._insert(at:key:value:)(v9, v10, v11, v12);
  }
}

uint64_t specialized _NativeDictionary.setValue(_:forKey:isUnique:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5, uint64_t *a6, uint64_t (*a7)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v7;
  uint64_t v8;
  char v9;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;

  v14 = a2 & 1;
  v15 = a4 & 0x10101FF01FFFFLL;
  specialized __RawDictionaryStorage.find<A>(_:)(a2 & 1, a3, a4 & 0x10101FF01FFFFLL);
  OUTLINED_FUNCTION_0_133();
  if (v16)
  {
    __break(1u);
LABEL_10:
    result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_149_0();
  __swift_instantiateConcreteTypeFromMangledName(a6);
  if (OUTLINED_FUNCTION_12_94(a5 & 1))
  {
    specialized __RawDictionaryStorage.find<A>(_:)(v14, a3, v15);
    OUTLINED_FUNCTION_11_63();
    if (!v18)
      goto LABEL_10;
    v8 = v17;
  }
  v19 = *v7;
  if ((v9 & 1) == 0)
    return a7(v8, v14, a3, v15, a1, v19);
  v20 = *(_QWORD *)(v19 + 56);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v20 + 8 * v8) = a1;
  return result;
}

_OWORD *specialized _NativeDictionary.setValue(_:forKey:isUnique:)()
{
  _OWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD **v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  char v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  char v14;
  _OWORD *v15;
  _OWORD *v16;
  _OWORD *result;

  OUTLINED_FUNCTION_96();
  OUTLINED_FUNCTION_6_92(v5, v6, v7);
  OUTLINED_FUNCTION_0_133();
  if (v10)
  {
    __break(1u);
LABEL_10:
    result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  v11 = v8;
  v12 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<String, Any>);
  if (OUTLINED_FUNCTION_12_94(v4 & 1))
  {
    OUTLINED_FUNCTION_29_57();
    OUTLINED_FUNCTION_13_95();
    if (!v14)
      goto LABEL_10;
    v11 = v13;
  }
  if ((v12 & 1) != 0)
  {
    OUTLINED_FUNCTION_101_14();
    OUTLINED_FUNCTION_65_1();
    return outlined init with take of Any(v15, v16);
  }
  else
  {
    specialized _NativeDictionary._insert(at:key:value:)(v11, v2, v1, v0, *v3);
    return (_OWORD *)OUTLINED_FUNCTION_7_108();
  }
}

void specialized _NativeDictionary.setValue(_:forKey:isUnique:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  _BYTE v15[40];

  v7 = OUTLINED_FUNCTION_15_83(a1, a2);
  specialized __RawDictionaryStorage.find<A>(_:)(v7);
  OUTLINED_FUNCTION_0_133();
  if (v8)
  {
    __break(1u);
LABEL_10:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  OUTLINED_FUNCTION_56_33();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<AnyHashable, Any>);
  if (OUTLINED_FUNCTION_4_118())
  {
    v9 = OUTLINED_FUNCTION_85_17();
    specialized __RawDictionaryStorage.find<A>(_:)(v9);
    OUTLINED_FUNCTION_13_95();
    if (!v11)
      goto LABEL_10;
    v5 = v10;
  }
  v12 = *v4;
  if ((v6 & 1) != 0)
  {
    v13 = (_OWORD *)OUTLINED_FUNCTION_101_14();
    outlined init with take of Any(v13, v14);
  }
  else
  {
    outlined init with copy of AnyHashable(v3, (uint64_t)v15);
    specialized _NativeDictionary._insert(at:key:value:)(v5, (uint64_t)v15, v2, v12);
    OUTLINED_FUNCTION_3_6();
  }
}

unint64_t specialized _NativeDictionary.setValue(_:forKey:isUnique:)(uint64_t a1, double a2, double a3)
{
  uint64_t *v3;
  unint64_t v7;
  char v8;
  char v9;
  unint64_t v10;
  char v11;
  unint64_t result;
  char v13;
  uint64_t v14;
  double *v15;

  specialized __RawDictionaryStorage.find<A>(_:)(a1);
  OUTLINED_FUNCTION_0_133();
  if (v9)
  {
    __break(1u);
    goto LABEL_9;
  }
  v10 = v7;
  v11 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<LayoutPosition, CGSize>);
  result = OUTLINED_FUNCTION_22_70();
  if ((result & 1) == 0)
    goto LABEL_5;
  result = specialized __RawDictionaryStorage.find<A>(_:)(a1);
  if ((v11 & 1) != (v13 & 1))
  {
LABEL_9:
    result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  v10 = result;
LABEL_5:
  v14 = *v3;
  if ((v11 & 1) == 0)
    return specialized _NativeDictionary._insert(at:key:value:)(v10, a1, v14);
  v15 = (double *)(*(_QWORD *)(v14 + 56) + 16 * v10);
  *v15 = a2;
  v15[1] = a3;
  return result;
}

unint64_t specialized _NativeDictionary.setValue(_:forKey:isUnique:)(uint64_t a1, double a2, double a3, double a4, double a5)
{
  uint64_t *v5;
  unint64_t v11;
  char v12;
  char v13;
  unint64_t v14;
  char v15;
  unint64_t result;
  char v17;
  uint64_t v18;
  double *v19;

  specialized __RawDictionaryStorage.find<A>(_:)(a1);
  OUTLINED_FUNCTION_0_133();
  if (v13)
  {
    __break(1u);
    goto LABEL_9;
  }
  v14 = v11;
  v15 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<InCallControlsState, CGRect>);
  result = OUTLINED_FUNCTION_22_70();
  if ((result & 1) == 0)
    goto LABEL_5;
  result = specialized __RawDictionaryStorage.find<A>(_:)(a1);
  if ((v15 & 1) != (v17 & 1))
  {
LABEL_9:
    result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  v14 = result;
LABEL_5:
  v18 = *v5;
  if ((v15 & 1) == 0)
    return specialized _NativeDictionary._insert(at:key:value:)(v14, a1, v18);
  v19 = (double *)(*(_QWORD *)(v18 + 56) + 32 * v14);
  *v19 = a2;
  v19[1] = a3;
  v19[2] = a4;
  v19[3] = a5;
  return result;
}

unint64_t lazy protocol witness table accessor for type CombiningType and conformance CombiningType()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type CombiningType and conformance CombiningType;
  if (!lazy protocol witness table cache variable for type CombiningType and conformance CombiningType)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for CombiningType, &type metadata for CombiningType);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CombiningType and conformance CombiningType);
  }
  return result;
}

void sub_1BD3DF778()
{
  uint64_t *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = OUTLINED_FUNCTION_5_83(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD3DF7A8()
{
  uint64_t *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = OUTLINED_FUNCTION_50_4(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD3DF7D8(_QWORD **a1)
{
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x108))();
  OUTLINED_FUNCTION_0();
}

uint64_t dispatch thunk of RecentsControllable.recentCallItems.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of RecentsControllable.recentCallsCount.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of RecentsControllable.recentFaceTimeCallsCount.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of RecentsControllable.prePopulateContactsCache()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of RecentsControllable.isLoadingOlderCalls()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of RecentsControllable.finishedLoadingOlderCalls()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t ObjC metadata update function for RecentsCollectionViewCollator()
{
  return type metadata accessor for RecentsCollectionViewCollator();
}

uint64_t method lookup function for RecentsCollectionViewCollator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RecentsCollectionViewCollator.linkController.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of RecentsCollectionViewCollator.linkController.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of RecentsCollectionViewCollator.linkController.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of RecentsCollectionViewCollator.messageInboxController.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of RecentsCollectionViewCollator.messageInboxController.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of RecentsCollectionViewCollator.messageInboxController.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of RecentsCollectionViewCollator.hasFinishedFirstLoad.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of RecentsCollectionViewCollator.$hasFinishedFirstLoad.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of RecentsCollectionViewCollator.__allocating_init(recentsController:conversationManager:linkController:messageInboxController:dataSource:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 432))();
}

uint64_t dispatch thunk of RecentsCollectionViewCollator.callItem(for:identifier:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1B8))();
}

uint64_t dispatch thunk of RecentsCollectionViewCollator.callItem(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1C0))();
}

uint64_t dispatch thunk of RecentsCollectionViewCollator.videoMessageCallItem(withUUID:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1C8))();
}

uint64_t dispatch thunk of RecentsCollectionViewCollator.isActive.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1D0))();
}

uint64_t dispatch thunk of RecentsCollectionViewCollator.resume()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1D8))();
}

uint64_t dispatch thunk of RecentsCollectionViewCollator.suspend()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1E0))();
}

uint64_t dispatch thunk of RecentsCollectionViewCollator.reloadData(completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1E8))();
}

uint64_t dispatch thunk of RecentsCollectionViewCollator.deleteCallItems(_:completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x200))();
}

uint64_t dispatch thunk of GroupCombinable.combiningUUID(forType:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of GroupCombinable.includeOriginalIfCombined(after:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t storeEnumTagSinglePayload for CombiningType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BD3DFA80 + 4 * byte_1BD65D8C5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BD3DFAB4 + 4 * byte_1BD65D8C0[v4]))();
}

uint64_t sub_1BD3DFAB4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD3DFABC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD3DFAC4);
  return result;
}

uint64_t sub_1BD3DFAD0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD3DFAD8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BD3DFADC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD3DFAE4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CombiningType()
{
  return &type metadata for CombiningType;
}

uint64_t sub_1BD3DFB00()
{
  return objectdestroy_31Tm((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t objectdestroy_31Tm(void (*a1)(_QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 16));
  if (*(_QWORD *)(v1 + 24))
    swift_release();
  return swift_deallocObject();
}

void partial apply for closure #2 in RecentsCollectionViewCollator.doReloadData(completion:)()
{
  uint64_t v0;

  closure #2 in RecentsCollectionViewCollator.doReloadData(completion:)(*(_QWORD *)(v0 + 16), *(void (**)(void))(v0 + 24));
}

uint64_t sub_1BD3DFB50()
{
  OUTLINED_FUNCTION_115();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void partial apply for closure #1 in RecentsCollectionViewCollator.doReloadData(completion:)(uint64_t a1)
{
  uint64_t v1;

  closure #1 in RecentsCollectionViewCollator.doReloadData(completion:)(a1, *(void **)(v1 + 16));
}

void partial apply for closure #1 in RecentsCollectionViewCollator.registerRecentCallsDidChangeObserver()(uint64_t a1)
{
  uint64_t v1;

  closure #1 in RecentsCollectionViewCollator.registerRecentCallsDidChangeObserver()(a1, v1);
}

uint64_t outlined assign with take of RecentsCallItem?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t outlined assign with take of ParticipantGridView.FrozenFrameOverlayState(uint64_t a1, uint64_t a2)
{
  assignWithTake for ParticipantGridView.FrozenFrameOverlayState(a2, a1);
  return a2;
}

uint64_t outlined assign with take of ScreenSharingStateMonitor.Observation(uint64_t a1, uint64_t a2)
{
  assignWithTake for ScreenSharingStateMonitor.Observation(a2, a1);
  return a2;
}

uint64_t OUTLINED_FUNCTION_39_52()
{
  return 0;
}

BOOL OUTLINED_FUNCTION_75_16()
{
  Swift::Bool v0;
  Swift::Int v1;

  return _NativeDictionary.ensureUnique(isUnique:capacity:)(v0, v1);
}

uint64_t OUTLINED_FUNCTION_76_18()
{
  uint64_t v0;

  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v0);
}

uint64_t OUTLINED_FUNCTION_85_17()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_87_13(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 272))(a1);
}

_QWORD *OUTLINED_FUNCTION_89_19()
{
  _QWORD *v0;

  return __swift_project_boxed_opaque_existential_1(v0, v0[3]);
}

uint64_t OUTLINED_FUNCTION_101_14()
{
  uint64_t v0;
  uint64_t v1;

  __swift_destroy_boxed_opaque_existential_1(v1);
  return v0;
}

void OUTLINED_FUNCTION_116_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  outlined init with copy of RadarReporting(v2, a2);
}

uint64_t OUTLINED_FUNCTION_117_10()
{
  return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t OUTLINED_FUNCTION_121_4()
{
  uint64_t v0;
  uint64_t v1;

  return outlined init with take of RecentsCallItem?(v1, v0);
}

void OUTLINED_FUNCTION_124_8()
{
  NSObject *v0;
  void *v1;

  dispatch_sync(v0, v1);
}

void OUTLINED_FUNCTION_128_7()
{
  specialized Array.append<A>(contentsOf:)();
}

id OUTLINED_FUNCTION_133_8()
{
  void *v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_135_5()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_147_4(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return v1(a1, v2, v3);
}

id TULinkShareItem.linkMetadata.getter()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v12;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend(v0, sel_tuConversationLink);
  v5 = objc_msgSend(v4, sel_URL);

  if (v5)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    v6 = OUTLINED_FUNCTION_32_3();
    v7 = 0;
  }
  else
  {
    v6 = OUTLINED_FUNCTION_32_3();
    v7 = 1;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v3, v7, 1, v6);
  v8 = outlined bridged method (pb) of @objc SWCollaborationHighlight.title.getter(v0);
  v10 = TULinkShareItem.linkMetadata(forURL:withTitle:)((uint64_t)v3, v8, v9);
  swift_bridgeObjectRelease();
  outlined destroy of URL?((uint64_t)v3);
  return v10;
}

void TULinkShareItem.activityViewControllerPlaceholderItem(_:)(uint64_t *a1@<X8>)
{
  void *v1;
  id v3;

  v3 = objc_msgSend(v1, sel_placeholder);
  a1[3] = OUTLINED_FUNCTION_32_3();
  __swift_allocate_boxed_opaque_existential_1(a1);
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

}

id @objc TULinkShareItem.activityViewControllerPlaceholderItem(_:)(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;
  void *v6;
  uint64_t v8[4];

  v4 = a3;
  v5 = a1;
  TULinkShareItem.activityViewControllerPlaceholderItem(_:)(v8);

  __swift_project_boxed_opaque_existential_1(v8, v8[3]);
  v6 = (void *)_bridgeAnythingToObjectiveC<A>(_:)();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  return v6;
}

uint64_t TULinkShareItem.activityViewController(_:itemForActivityType:)@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v18;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v8 = MEMORY[0x1E0C80A78](v7).n128_u64[0];
  v10 = (char *)&v18 - v9;
  v11 = objc_msgSend(v2, sel_tuConversationLink, v8);
  v12 = objc_msgSend(v11, sel_URL);

  if (v12)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    v13 = OUTLINED_FUNCTION_32_3();
    v14 = (uint64_t)v6;
    v15 = 0;
  }
  else
  {
    v13 = OUTLINED_FUNCTION_32_3();
    v14 = (uint64_t)v6;
    v15 = 1;
  }
  __swift_storeEnumTagSinglePayload(v14, v15, 1, v13);
  outlined init with take of URL?((uint64_t)v6, (uint64_t)v10);
  OUTLINED_FUNCTION_32_3();
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v13) == 1)
  {
    result = outlined destroy of URL?((uint64_t)v10);
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  else
  {
    *(_QWORD *)(a1 + 24) = v13;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a1);
    return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(boxed_opaque_existential_1, v10, v13);
  }
  return result;
}

id @objc TULinkShareItem.activityViewController(_:itemForActivityType:)(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  void *v15;
  _QWORD v17[3];
  uint64_t v18;

  v6 = a3;
  v7 = a4;
  v8 = a1;
  TULinkShareItem.activityViewController(_:itemForActivityType:)((uint64_t)v17);

  v9 = v18;
  if (!v18)
    return 0;
  v10 = __swift_project_boxed_opaque_existential_1(v17, v18);
  v11 = *(_QWORD *)(v9 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v11 + 16))(v14, v12);
  v15 = (void *)_bridgeAnythingToObjectiveC<A>(_:)();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v9);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  return v15;
}

Swift::String __swiftcall TULinkShareItem.activityViewController(_:subjectForActivityType:)(UIActivityViewController *_, UIActivityType_optional subjectForActivityType)
{
  void *v2;
  uint64_t v3;
  void *v4;
  Swift::String result;

  outlined bridged method (ob) of @objc TUConversationLink.linkName.getter(objc_msgSend(v2, sel_tuConversationLink));
  if (!v4)
  {
    v3 = 0;
    v4 = (void *)0xE000000000000000;
  }
  result._object = v4;
  result._countAndFlagsBits = v3;
  return result;
}

id @objc TULinkShareItem.activityViewController(_:subjectForActivityType:)(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6;
  id v7;
  UIActivityViewController *v8;
  UIActivityType_optional v9;
  Swift::String v10;
  void *v11;

  v6 = a3;
  v7 = a4;
  v8 = a1;
  v10 = TULinkShareItem.activityViewController(_:subjectForActivityType:)(v8, v9);

  v11 = (void *)MEMORY[0x1C3B72E00](v10._countAndFlagsBits, v10._object);
  swift_bridgeObjectRelease();
  return v11;
}

id @objc TULinkShareItem.activityViewControllerLinkMetadata(_:)(void *a1, uint64_t a2, void *a3)
{
  id v4;
  UIActivityViewController *v5;
  void *v6;

  v4 = a3;
  v5 = a1;
  v6 = (void *)TULinkShareItem.activityViewControllerLinkMetadata(_:)(v5);

  return v6;
}

id TULinkShareItem.linkMetadata(forURL:withTitle:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  NSURL *v14;
  void *v15;
  void *v16;
  NSURL *v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v22;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v22 - v10;
  v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CC11A8]), sel_init);
  outlined init with copy of URL?(a1, (uint64_t)v11);
  v13 = type metadata accessor for URL();
  v15 = 0;
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v13) != 1)
  {
    URL._bridgeToObjectiveC()(v14);
    v15 = v16;
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v11, v13);
  }
  objc_msgSend(v12, sel_setOriginalURL_, v15);

  outlined init with copy of URL?(a1, (uint64_t)v9);
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v13) == 1)
  {
    v18 = 0;
  }
  else
  {
    URL._bridgeToObjectiveC()(v17);
    v18 = v19;
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v9, v13);
  }
  objc_msgSend(v12, sel_setURL_, v18);

  v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CC1158]), sel_init);
  if (a3)
    outlined bridged method (mbgnn) of @objc LPFaceTimeInviteMetadata.title.setter(a2, a3, v20);
  objc_msgSend(v12, sel_setSpecialization_, v20);

  return v12;
}

void TULinkShareItem.dataRepresentation.getter()
{
  id v0;
  id v1;

  v0 = TULinkShareItem.linkMetadata.getter();
  v1 = objc_msgSend(v0, sel_dataRepresentation);

  static Data._unconditionallyBridgeFromObjectiveC(_:)();
  OUTLINED_FUNCTION_18();
}

void outlined bridged method (mbgnn) of @objc LPFaceTimeInviteMetadata.title.setter(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = (id)MEMORY[0x1C3B72E00]();
  objc_msgSend(a3, sel_setTitle_, v4);

}

uint64_t outlined init with take of URL?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void outlined bridged method (ob) of @objc TUConversationLink.linkName.getter(void *a1)
{
  id v2;

  v2 = objc_msgSend(a1, sel_linkName);

  if (v2)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();

  }
  OUTLINED_FUNCTION_18();
}

uint64_t View.screenSharingTouchShield(isActive:isCapturingTouch:)(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;

  v22 = 0;
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Task<(), Error>?);
  State.init(wrappedValue:)();
  v12 = v15;
  v13 = v16;
  LOBYTE(v15) = a1;
  v16 = xmmword_1BD65DAA0;
  v17 = v12;
  v18 = v13;
  v19 = a2;
  v20 = a3;
  v21 = a4;
  MEMORY[0x1C3B724A0](&v15, a5, &type metadata for ScreenSharingTouchShield, a6);
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t ScreenSharingTouchShield.isActive.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t ScreenSharingTouchShield.isCapturingTouch.getter()
{
  uint64_t v0;
  uint64_t v2;

  OUTLINED_FUNCTION_8_9();
  v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<Bool>);
  MEMORY[0x1C3B72860](&v2, v0);
  return v2;
}

uint64_t ScreenSharingTouchShield.isCapturingTouch.setter()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<Bool>);
  return Binding.wrappedValue.setter();
}

void (*ScreenSharingTouchShield.isCapturingTouch.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = *(_QWORD *)(v1 + 40);
  v5 = *(_QWORD *)(v1 + 48);
  v3[4] = v4;
  v3[5] = v5;
  v6 = *(_BYTE *)(v1 + 56);
  *((_BYTE *)v3 + 19) = v6;
  v3[3] = v4;
  *v3 = v4;
  v3[1] = v5;
  *((_BYTE *)v3 + 16) = v6;
  outlined retain of AnyLocation<String>?((uint64_t)(v3 + 3));
  swift_retain();
  v3[6] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<Bool>);
  MEMORY[0x1C3B72860]();
  return ClarityUIDialerView.isPresented.modify;
}

uint64_t ScreenSharingTouchShield.$isCapturingTouch.getter()
{
  uint64_t v1;

  OUTLINED_FUNCTION_8_9();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<Bool>);
  Binding.projectedValue.getter();
  return v1;
}

uint64_t ScreenSharingTouchShield.gesture.getter@<X0>(uint64_t a1@<X8>)
{
  _OWORD *v1;
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _OWORD *v13;
  __int128 v14;
  _OWORD *v15;
  __int128 v16;
  _QWORD v18[2];

  v2 = v1;
  v18[1] = a1;
  v3 = type metadata accessor for LocalCoordinateSpace();
  MEMORY[0x1E0C80A78](v3);
  v4 = type metadata accessor for DragGesture();
  v5 = (void (*)(uint64_t))MEMORY[0x1E0CD87B0];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ChangedGesture<DragGesture>);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  static CoordinateSpaceProtocol<>.local.getter();
  DragGesture.init<A>(minimumDistance:coordinateSpace:)();
  v13 = (_OWORD *)swift_allocObject();
  v14 = v2[1];
  v13[1] = *v2;
  v13[2] = v14;
  v13[3] = v2[2];
  *(_OWORD *)((char *)v13 + 57) = *(_OWORD *)((char *)v2 + 41);
  outlined retain of ScreenSharingTouchShield((uint64_t)v2);
  _s15ConversationKit22TranscriptionViewModelCAC7Combine16ObservableObjectAAWlTm_0(&lazy protocol witness table cache variable for type DragGesture and conformance DragGesture, v5);
  _s15ConversationKit22TranscriptionViewModelCAC7Combine16ObservableObjectAAWlTm_0(&lazy protocol witness table cache variable for type DragGesture.Value and conformance DragGesture.Value, MEMORY[0x1E0CD8798]);
  Gesture<>.onChanged(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v4);
  v15 = (_OWORD *)swift_allocObject();
  v16 = v2[1];
  v15[1] = *v2;
  v15[2] = v16;
  v15[3] = v2[2];
  *(_OWORD *)((char *)v15 + 57) = *(_OWORD *)((char *)v2 + 41);
  outlined retain of ScreenSharingTouchShield((uint64_t)v2);
  lazy protocol witness table accessor for type Published<Bool>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type _ChangedGesture<DragGesture> and conformance _ChangedGesture<A>, &demangling cache variable for type metadata for _ChangedGesture<DragGesture>);
  Gesture.onEnded(_:)();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

_QWORD *closure #1 in ScreenSharingTouchShield.gesture.getter()
{
  uint64_t v0;
  _QWORD *result;
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Task<(), Error>?>);
  State.wrappedValue.getter();
  if (v2)
  {
    v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
    MEMORY[0x1C3B73268](v2, MEMORY[0x1E0DEE9C0] + 8, v0, MEMORY[0x1E0DEDB38]);
    swift_release();
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<Bool>);
  result = MEMORY[0x1C3B72860](&v2);
  if ((v2 & 1) == 0)
  {
    LOBYTE(v2) = 1;
    return (_QWORD *)Binding.wrappedValue.setter();
  }
  return result;
}

uint64_t closure #2 in ScreenSharingTouchShield.gesture.getter(uint64_t a1, _OWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  _QWORD v13[2];
  __int128 v14;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload((uint64_t)v5, 1, 1, v6);
  type metadata accessor for MainActor();
  outlined retain of ScreenSharingTouchShield((uint64_t)a2);
  v7 = static MainActor.shared.getter();
  v8 = swift_allocObject();
  v9 = MEMORY[0x1E0DF06E8];
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v9;
  v10 = a2[1];
  *(_OWORD *)(v8 + 32) = *a2;
  *(_OWORD *)(v8 + 48) = v10;
  *(_OWORD *)(v8 + 64) = a2[2];
  *(_OWORD *)(v8 + 73) = *(_OWORD *)((char *)a2 + 41);
  v11 = _sScTss5Error_pRs_rlE8priority9operationScTyxsAA_pGScPSg_xyYaKYAcntcfCyt_Tgm5((uint64_t)v5, (uint64_t)&async function pointer to partial apply for closure #1 in closure #2 in ScreenSharingTouchShield.gesture.getter, v8);
  v14 = *(_OWORD *)((char *)a2 + 24);
  v13[1] = v11;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Task<(), Error>?>);
  return State.wrappedValue.setter();
}

uint64_t closure #1 in closure #2 in ScreenSharingTouchShield.gesture.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[5] = a4;
  v5 = type metadata accessor for ContinuousClock();
  v4[6] = v5;
  v4[7] = *(_QWORD *)(v5 - 8);
  v4[8] = swift_task_alloc();
  type metadata accessor for MainActor();
  v4[9] = static MainActor.shared.getter();
  v4[10] = dispatch thunk of Actor.unownedExecutor.getter();
  v4[11] = v6;
  return swift_task_switch();
}

uint64_t closure #1 in closure #2 in ScreenSharingTouchShield.gesture.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  v1 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v1 + 8);
  v2 = *(_QWORD *)(v1 + 16);
  ContinuousClock.init()();
  v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&async function pointer to specialized Clock.sleep(for:tolerance:)
                                                                        + async function pointer to specialized Clock.sleep(for:tolerance:));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v4;
  *v4 = v0;
  v4[1] = closure #1 in closure #2 in ScreenSharingTouchShield.gesture.getter;
  return v6(v3, v2, 0, 0, 1);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch();
}

{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;

  v1 = *(_QWORD *)(v0 + 40);
  swift_release();
  v2 = *(_OWORD *)(v1 + 40);
  *(_BYTE *)(v0 + 32) = *(_BYTE *)(v1 + 56);
  *(_OWORD *)(v0 + 16) = v2;
  *(_BYTE *)(v0 + 33) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<Bool>);
  Binding.wrappedValue.setter();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t ScreenSharingTouchShield.body(content:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _OWORD *v23;
  __int128 v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v2 = v1;
  v4 = type metadata accessor for SensoryFeedback();
  v26 = *(_QWORD *)(v4 - 8);
  v27 = v4;
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_77();
  v7 = v6 - v5;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<ScreenSharingTouchShield>, _OverlayModifier<(<<opaque return type of View.gesture<A>(_:including:)>>.0)?>>);
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_77();
  v11 = v10 - v9;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.sensoryFeedback<A>(_:trigger:condition:)>>.0);
  v28 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_77();
  v15 = v14 - v13;
  v16 = static Alignment.center.getter();
  v18 = v17;
  v19 = v11 + *(int *)(v8 + 36);
  closure #1 in ScreenSharingTouchShield.body(content:)((_BYTE *)v2, v19);
  v20 = (uint64_t *)(v19
                  + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _OverlayModifier<(<<opaque return type of View.gesture<A>(_:including:)>>.0)?>)
                           + 36));
  *v20 = v16;
  v20[1] = v18;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ViewModifier_Content<ScreenSharingTouchShield>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v11, a1, v21);
  static SensoryFeedback.error.getter();
  v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<Bool>);
  MEMORY[0x1C3B72860](&v29, v22);
  lazy protocol witness table accessor for type ModifiedContent<_ViewModifier_Content<ScreenSharingTouchShield>, _OverlayModifier<(<<opaque return type of View.gesture<A>(_:including:)>>.0)?>> and conformance <> ModifiedContent<A, B>();
  View.sensoryFeedback<A>(_:trigger:condition:)();
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v7, v27);
  outlined destroy of ModifiedContent<_ViewModifier_Content<ScreenSharingTouchShield>, _OverlayModifier<(<<opaque return type of View.gesture<A>(_:including:)>>.0)?>>(v11);
  LOBYTE(v29) = *(_BYTE *)v2;
  v23 = (_OWORD *)swift_allocObject();
  v24 = *(_OWORD *)(v2 + 16);
  v23[1] = *(_OWORD *)v2;
  v23[2] = v24;
  v23[3] = *(_OWORD *)(v2 + 32);
  *(_OWORD *)((char *)v23 + 57) = *(_OWORD *)(v2 + 41);
  outlined retain of ScreenSharingTouchShield(v2);
  OUTLINED_FUNCTION_7_18();
  View.onChange<A>(of:initial:_:)();
  swift_release();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 8))(v15, v12);
}

uint64_t closure #1 in ScreenSharingTouchShield.body(content:)@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _DWORD v13[4];
  uint64_t v14;
  char v15;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _EndedGesture<_ChangedGesture<DragGesture>>);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.gesture<A>(_:including:)>>.0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*a1 & 1) == 0)
    return __swift_storeEnumTagSinglePayload(a2, 1, 1, v8);
  v14 = static Color.clear.getter();
  v15 = 0;
  ScreenSharingTouchShield.gesture.getter((uint64_t)v7);
  v13[3] = static GestureMask.all.getter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Color, _ContentShapeModifier<Rectangle>>);
  lazy protocol witness table accessor for type ModifiedContent<Color, _ContentShapeModifier<Rectangle>> and conformance <> ModifiedContent<A, B>();
  lazy protocol witness table accessor for type Published<Bool>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type _EndedGesture<_ChangedGesture<DragGesture>> and conformance _EndedGesture<A>, &demangling cache variable for type metadata for _EndedGesture<_ChangedGesture<DragGesture>>);
  View.gesture<A>(_:including:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_release();
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(a2, v11, v8);
  return __swift_storeEnumTagSinglePayload(a2, 0, 1, v8);
}

uint64_t closure #2 in ScreenSharingTouchShield.body(content:)(uint64_t a1, unsigned __int8 *a2)
{
  return *a2;
}

_BYTE *closure #3 in ScreenSharingTouchShield.body(content:)(_BYTE *result)
{
  uint64_t v1;
  uint64_t v2;

  if ((*result & 1) == 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Task<(), Error>?>);
    State.wrappedValue.getter();
    if (v2)
    {
      v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
      MEMORY[0x1C3B73268](v2, MEMORY[0x1E0DEE9C0] + 8, v1, MEMORY[0x1E0DEDB38]);
      swift_release();
    }
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<Bool>);
    return (_BYTE *)Binding.wrappedValue.setter();
  }
  return result;
}

__n128 ScreenSharingTouchShield.init(isActive:isCapturingTouch:)@<Q0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  __n128 result;
  __n128 v11;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Task<(), Error>?);
  State.init(wrappedValue:)();
  result = v11;
  *(_BYTE *)a5 = a1;
  *(_OWORD *)(a5 + 8) = xmmword_1BD65DAA0;
  *(__n128 *)(a5 + 24) = v11;
  *(_QWORD *)(a5 + 40) = a2;
  *(_QWORD *)(a5 + 48) = a3;
  *(_BYTE *)(a5 + 56) = a4;
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<_ViewModifier_Content<ScreenSharingTouchShield>, _OverlayModifier<(<<opaque return type of View.gesture<A>(_:including:)>>.0)?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<_ViewModifier_Content<ScreenSharingTouchShield>, _OverlayModifier<(<<opaque return type of View.gesture<A>(_:including:)>>.0)?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<_ViewModifier_Content<ScreenSharingTouchShield>, _OverlayModifier<(<<opaque return type of View.gesture<A>(_:including:)>>.0)?>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<ScreenSharingTouchShield>, _OverlayModifier<(<<opaque return type of View.gesture<A>(_:including:)>>.0)?>>);
    v2[0] = lazy protocol witness table accessor for type Published<Bool>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type _ViewModifier_Content<ScreenSharingTouchShield> and conformance _ViewModifier_Content<A>, &demangling cache variable for type metadata for _ViewModifier_Content<ScreenSharingTouchShield>);
    v2[1] = lazy protocol witness table accessor for type Published<Bool>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type _OverlayModifier<(<<opaque return type of View.gesture<A>(_:including:)>>.0)?> and conformance _OverlayModifier<A>, &demangling cache variable for type metadata for _OverlayModifier<(<<opaque return type of View.gesture<A>(_:including:)>>.0)?>);
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<_ViewModifier_Content<ScreenSharingTouchShield>, _OverlayModifier<(<<opaque return type of View.gesture<A>(_:including:)>>.0)?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t outlined destroy of ModifiedContent<_ViewModifier_Content<ScreenSharingTouchShield>, _OverlayModifier<(<<opaque return type of View.gesture<A>(_:including:)>>.0)?>>(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<ScreenSharingTouchShield>, _OverlayModifier<(<<opaque return type of View.gesture<A>(_:including:)>>.0)?>>);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_BYTE *partial apply for closure #3 in ScreenSharingTouchShield.body(content:)()
{
  uint64_t v0;

  return closure #3 in ScreenSharingTouchShield.body(content:)((_BYTE *)(v0 + 16));
}

uint64_t outlined retain of ScreenSharingTouchShield(uint64_t a1)
{
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t associated type witness table accessor for ViewModifier.Body : View in ScreenSharingTouchShield()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t protocol witness for ViewModifier.body(content:) in conformance ScreenSharingTouchShield(uint64_t a1)
{
  return ScreenSharingTouchShield.body(content:)(a1);
}

uint64_t sub_1BD3E15BC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = ScreenSharingTouchShield.isCapturingTouch.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1BD3E15E8()
{
  return ScreenSharingTouchShield.isCapturingTouch.setter();
}

uint64_t destroy for ScreenSharingTouchShield()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for ScreenSharingTouchShield(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v3;
  v4 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v4;
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ScreenSharingTouchShield(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

uint64_t assignWithTake for ScreenSharingTouchShield(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for ScreenSharingTouchShield(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 57))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 48);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ScreenSharingTouchShield(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 48) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 57) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ScreenSharingTouchShield()
{
  return &type metadata for ScreenSharingTouchShield;
}

uint64_t sub_1BD3E1868()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for <<opaque return type of View.sensoryFeedback<A>(_:trigger:condition:)>>.0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<ScreenSharingTouchShield>, _OverlayModifier<(<<opaque return type of View.gesture<A>(_:including:)>>.0)?>>);
  lazy protocol witness table accessor for type ModifiedContent<_ViewModifier_Content<ScreenSharingTouchShield>, _OverlayModifier<(<<opaque return type of View.gesture<A>(_:including:)>>.0)?>> and conformance <> ModifiedContent<A, B>();
  OUTLINED_FUNCTION_7_18();
  return OUTLINED_FUNCTION_7_18();
}

uint64_t sub_1BD3E18F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  v2 = type metadata accessor for ModifiedContent();
  v4[0] = v1;
  v4[1] = lazy protocol witness table accessor for type ScreenSharingTouchShield and conformance ScreenSharingTouchShield();
  return MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v2, v4);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<Color, _ContentShapeModifier<Rectangle>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<Color, _ContentShapeModifier<Rectangle>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<Color, _ContentShapeModifier<Rectangle>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Color, _ContentShapeModifier<Rectangle>>);
    v2 = lazy protocol witness table accessor for type Published<Bool>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type _ContentShapeModifier<Rectangle> and conformance _ContentShapeModifier<A>, &demangling cache variable for type metadata for _ContentShapeModifier<Rectangle>);
    v3[0] = MEMORY[0x1E0CDF5B0];
    v3[1] = v2;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v3);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<Color, _ContentShapeModifier<Rectangle>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

_QWORD *partial apply for closure #1 in ScreenSharingTouchShield.gesture.getter()
{
  return closure #1 in ScreenSharingTouchShield.gesture.getter();
}

uint64_t objectdestroyTm_13()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in ScreenSharingTouchShield.gesture.getter(uint64_t a1)
{
  uint64_t v1;

  return closure #2 in ScreenSharingTouchShield.gesture.getter(a1, (_OWORD *)(v1 + 16));
}

uint64_t sub_1BD3E1A20()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #2 in ScreenSharingTouchShield.gesture.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = partial apply for closure #1 in AsyncCancellableTimer.wait(with:);
  return closure #1 in closure #2 in ScreenSharingTouchShield.gesture.getter(a1, v4, v5, v1 + 32);
}

void static CallParticipantLabelDescriptor.labelDescriptor(for:callCount:alertAvailable:allowsDuration:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5)
{
  uint64_t v8;
  void *v9;

  objc_opt_self();
  v8 = swift_dynamicCastObjCClass();
  if (v8)
  {
    v9 = (void *)v8;
    swift_unknownObjectRetain();
    static CallParticipantLabelDescriptor.labelDescriptorWithStrings(for:callCount:alertAvailable:allowsDuration:)(v9, a3, a4 & 1, a5 & 1);
    swift_unknownObjectRelease();
  }
  OUTLINED_FUNCTION_91();
}

id thunk for @escaping @callee_guaranteed (@guaranteed TUCall) -> (@owned String?)(uint64_t a1, void *a2)
{
  uint64_t (*v3)(void);
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v5 = v3();
  v7 = v6;
  swift_release();

  if (v7)
  {
    v8 = (void *)MEMORY[0x1C3B72E00](v5, v7);
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = 0;
  }
  return v8;
}

uint64_t thunk for @escaping @callee_unowned @convention(block) (@unowned TUCall) -> (@autoreleased NSString?)(uint64_t a1, uint64_t a2)
{
  id v2;
  void *v3;
  uint64_t v4;

  v2 = (id)(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a2, a1);
  if (!v2)
    return 0;
  v3 = v2;
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v4;
}

uint64_t key path getter for CNKCallParticipantLabelDescriptorFactory.organizationNameProvider : CNKCallParticipantLabelDescriptorFactory@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id v3;
  uint64_t v4;
  uint64_t result;

  v3 = objc_msgSend(*a1, sel_organizationNameProvider);
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v3;
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = thunk for @escaping @callee_unowned @convention(block) (@unowned TUCall) -> (@autoreleased NSString?)partial apply;
  *(_QWORD *)(result + 24) = v4;
  *a2 = partial apply for thunk for @escaping @callee_guaranteed (@guaranteed TUCall) -> (@owned String?);
  a2[1] = result;
  return result;
}

void key path setter for CNKCallParticipantLabelDescriptorFactory.organizationNameProvider : CNKCallParticipantLabelDescriptorFactory(uint64_t *a1, void **a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  _QWORD v8[6];

  v4 = *a1;
  v3 = a1[1];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  v6 = *a2;
  v8[4] = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed TUCall) -> (@out String?);
  v8[5] = v5;
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 1107296256;
  v8[2] = thunk for @escaping @callee_guaranteed (@guaranteed TUCall) -> (@owned String?);
  v8[3] = &block_descriptor_19_0;
  v7 = _Block_copy(v8);
  swift_retain();
  swift_release();
  objc_msgSend(v6, sel_setOrganizationNameProvider_, v7);
  _Block_release(v7);
}

uint64_t thunk for @escaping @callee_guaranteed (@in_guaranteed TUCall) -> (@out String?)(uint64_t a1, void (*a2)(uint64_t *__return_ptr, uint64_t *))
{
  uint64_t v3;
  uint64_t v4;

  v4 = a1;
  a2(&v3, &v4);
  return v3;
}

id CNKCallParticipantLabelDescriptorFactory.makeLabel()()
{
  id v0;

  v0 = objc_allocWithZone((Class)type metadata accessor for CallParticipantLabelDescriptor());
  return OUTLINED_FUNCTION_43_48();
}

uint64_t CallParticipantLabelDescriptor.__allocating_init(string:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, _QWORD, uint64_t, _QWORD, _QWORD);
  uint64_t v7;
  uint64_t v8;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
    v5 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v5 + 16) = xmmword_1BD6441D0;
    *(_QWORD *)(v5 + 32) = a1;
    *(_QWORD *)(v5 + 40) = a2;
    v6 = *(uint64_t (**)(uint64_t, uint64_t, _QWORD, uint64_t, _QWORD, _QWORD))(v2 + 272);
    v7 = 0;
    v8 = 0;
  }
  else
  {
    v6 = *(uint64_t (**)(uint64_t, uint64_t, _QWORD, uint64_t, _QWORD, _QWORD))(v2 + 272);
    v5 = MEMORY[0x1E0DEE9D8];
    v7 = a1;
    v8 = a1;
  }
  return v6(v5, v7, 0, v8, 0, 0);
}

void CNKCallParticipantLabelDescriptorFactory.makeLabel(using:)(uint64_t a1, uint64_t a2)
{
  type metadata accessor for CallParticipantLabelDescriptor();
  OUTLINED_FUNCTION_124();
  CallParticipantLabelDescriptor.__allocating_init(string:)(a1, a2);
  OUTLINED_FUNCTION_18();
}

id CNKCallParticipantLabelDescriptorFactory.makeLabel(using:secondaryString:layoutState:)(uint64_t a1, uint64_t a2)
{
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v10;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<String?>);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BD6441D0;
  *(_QWORD *)(inited + 32) = a1;
  *(_QWORD *)(inited + 40) = a2;
  if (a2)
  {
    swift_bridgeObjectRetain_n();
    specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    v6 = v5;
    v7 = *(_QWORD *)(v5 + 16);
    if (v7 >= *(_QWORD *)(v5 + 24) >> 1)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      v6 = v10;
    }
    *(_QWORD *)(v6 + 16) = v7 + 1;
    v8 = v6 + 16 * v7;
    *(_QWORD *)(v8 + 32) = a1;
    *(_QWORD *)(v8 + 40) = a2;
  }
  swift_release();
  objc_allocWithZone((Class)type metadata accessor for CallParticipantLabelDescriptor());
  swift_bridgeObjectRetain();
  return CallParticipantLabelDescriptor.init(strings:secondaryString:durationString:layoutState:)();
}

id CallParticipantLabelDescriptor.__allocating_init(strings:secondaryString:durationString:layoutState:)()
{
  objc_class *v0;
  id v1;

  OUTLINED_FUNCTION_62_31();
  v1 = objc_allocWithZone(v0);
  return CallParticipantLabelDescriptor.init(strings:secondaryString:durationString:layoutState:)();
}

void CNKCallParticipantLabelDescriptorFactory.labelDescriptor(call:callCount:alertAvailable:allowsDuration:)(void *a1, uint64_t a2, char a3, int a4)
{
  type metadata accessor for CallParticipantLabelDescriptor();
  static CallParticipantLabelDescriptor.labelDescriptorWithStrings(for:callCount:alertAvailable:allowsDuration:)(a1, a2, a3, a4);
  OUTLINED_FUNCTION_18();
}

void static CallParticipantLabelDescriptor.labelDescriptorWithStrings(for:callCount:alertAvailable:allowsDuration:)(void *a1, uint64_t a2, char a3, int a4)
{
  id v8;

  v8 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  static CallParticipantLabelDescriptor.labelDescriptorWithStrings(for:callCount:callCenter:alertAvailable:allowsDuration:)(a1, a2, v8, a3, a4);

  OUTLINED_FUNCTION_91();
}

void CNKCallParticipantLabelDescriptorFactory.labelDescriptor(call:callCount:callCenter:alertAvailable:allowsDuration:)(void *a1, uint64_t a2, void *a3, char a4, int a5)
{
  type metadata accessor for CallParticipantLabelDescriptor();
  static CallParticipantLabelDescriptor.labelDescriptorWithStrings(for:callCount:callCenter:alertAvailable:allowsDuration:)(a1, a2, a3, a4, a5);
  OUTLINED_FUNCTION_91();
}

uint64_t *static CallParticipantLabelDescriptor.labelDescriptorWithStrings(for:callCount:callCenter:alertAvailable:allowsDuration:)(void *a1, uint64_t a2, void *a3, char a4, int a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _BYTE *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  id v29;
  uint64_t v30;
  id v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unsigned int v48;
  char **v49;
  char **v50;
  char **object;
  void *v52;
  uint64_t v53;
  unsigned int v54;
  void *v55;
  id v56;
  void *v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  char **v61;
  char **v62;
  unsigned int v63;
  id v64;
  char **v65;
  id v66;
  id v67;
  char v68;
  _BYTE *v69;
  unsigned int v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  char **v74;
  char **v75;
  char v76;
  char *v77;
  id v78;
  id v79;
  id v80;
  uint64_t v81;
  _BYTE *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  id v88;
  uint64_t v89;
  char **v90;
  uint64_t v91;
  char *v92;
  char *v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  id v101;
  id v102;
  char **v103;
  uint64_t v104;
  char *v105;
  char *v106;
  id v107;
  id v108;
  uint64_t v109;
  uint64_t v110;
  id v111;
  char **v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char v123;
  uint64_t v124;
  unint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  _QWORD *v133;
  id v134;
  unsigned int v135;
  uint64_t v136;
  id v137;
  char *v138;
  char **v139;
  uint64_t v140;
  uint64_t v141;
  char v142;
  id v143;
  uint64_t v144;
  id v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  _QWORD *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  id v160;
  id v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  _QWORD *v166;
  char **v167;
  id v168;
  uint64_t v169;
  char **v170;
  id v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  _QWORD *v178;
  uint64_t v179;
  uint64_t v180;
  char **v181;
  uint64_t v182;
  char **v183;
  uint64_t v184;
  uint64_t v185;
  char **v186;
  char **v187;
  char **v188;
  void *v189;
  char **v190;
  char **v191;
  uint64_t v192;
  uint64_t v193;
  id v194;
  char **v195;
  char v196;
  _BYTE *v197;
  uint64_t v198;
  id v199;
  char *v200;
  char **v201;
  uint64_t v202;
  uint64_t v203;
  id v204;
  char *v205;
  char *v206;
  char *v207;
  char *v208;
  char **v209;
  uint64_t v210;
  char **v211;
  uint64_t v212;
  char **v213;
  id v214;
  char *v215;
  char **v216;
  uint64_t v217;
  uint64_t v218;
  id v219;
  char **v220;
  char **v221;
  uint64_t v222;
  char *v223;
  uint64_t v224;
  char **v225;
  unint64_t v226;
  char **v227;
  char **v228;
  unint64_t v229;
  char **v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  char **v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  BOOL v246;
  char v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  char **v256;
  char **v257;
  uint64_t v258;
  Swift::String v259;
  Swift::String v260;
  char **v261;
  uint64_t v262;
  uint64_t v263;
  id v264;
  uint64_t v265;
  id v266;
  char **v267;
  char **v268;
  char **v269;
  char **v270;
  uint64_t v271;
  char **v272;
  uint64_t v273;
  uint64_t v274;
  char **v275;
  uint64_t v276;
  _BYTE v277[12];
  int v278;
  uint64_t v279;
  char *v280;
  uint64_t v281;
  id v282;
  void *v283;
  uint64_t v284;
  uint64_t v285;
  _BYTE *v286;
  uint64_t v287;
  id v288;
  uint64_t v289;
  _QWORD v290[3];
  char v291;
  char **v292;

  v288 = a3;
  v289 = a2;
  v8 = type metadata accessor for URL();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v286 = &v277[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = &v277[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v12);
  v16 = &v277[-v15];
  v292 = (char **)MEMORY[0x1E0DEE9D8];
  v291 = 0;
  v17 = objc_msgSend(a1, sel_provider);
  v18 = (uint64_t)objc_msgSend(v17, sel_isTelephonyProvider);
  v19 = 0;
  if ((v18 & 1) == 0)
  {
    TUCall.cnk_isAudio.getter(v18);
    OUTLINED_FUNCTION_66_24();
    v20 = v246;
    v19 = v18 & v20;
  }
  v21 = OUTLINED_FUNCTION_123(v18, sel_status);
  v22 = TUCallScreeningEnabled();
  if ((_DWORD)v22 && OUTLINED_FUNCTION_123(v22, sel_isScreening))
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
    v23 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v23 + 16) = xmmword_1BD6441D0;
    OUTLINED_FUNCTION_23_66();
    *(_QWORD *)(v23 + 32) = v24;
    *(_QWORD *)(v23 + 40) = v25;
    v26 = objc_allocWithZone((Class)type metadata accessor for CallParticipantLabelDescriptor());
    v27 = CallParticipantLabelDescriptor.init(strings:secondaryString:durationString:layoutState:)();

    return (uint64_t *)v27;
  }
  v284 = v8;
  v285 = v9;
  v29 = objc_msgSend(a1, sel_canDisplayAlertUI_, a4 & 1);
  if ((_DWORD)v29)
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.default.getter();
    OUTLINED_FUNCTION_50_33();
    OUTLINED_FUNCTION_22_71();
LABEL_17:
    String.localizedAlerts.getter();
    OUTLINED_FUNCTION_152_3();
    OUTLINED_FUNCTION_2_28();
    if (*(_QWORD *)(v30 + 16) >= *(_QWORD *)(v30 + 24) >> 1)
      OUTLINED_FUNCTION_2_28();
    OUTLINED_FUNCTION_86_12();
    v31 = objc_allocWithZone((Class)type metadata accessor for CallParticipantLabelDescriptor());
    v32 = (uint64_t *)OUTLINED_FUNCTION_43_48();
    (*(void (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & *v32) + 0xE8))(0);
    goto LABEL_266;
  }
  if (OUTLINED_FUNCTION_123((uint64_t)v29, sel_canDisplayRedirectingUI))
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.default.getter();
    OUTLINED_FUNCTION_50_33();
    OUTLINED_FUNCTION_61();
    goto LABEL_17;
  }
  v278 = a5;
  v282 = v17;
  v283 = a1;
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v281 = static OS_os_log.conversationKit;
  v279 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v33 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v33 + 16) = xmmword_1BD646730;
  LODWORD(v290[0]) = v21;
  type metadata accessor for TUCallStatus(0);
  v34 = String.init<A>(reflecting:)();
  v36 = v35;
  v37 = (void *)MEMORY[0x1E0DEA968];
  *(_QWORD *)(v33 + 56) = MEMORY[0x1E0DEA968];
  v38 = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v33 + 64) = v38;
  *(_QWORD *)(v33 + 32) = v34;
  *(_QWORD *)(v33 + 40) = v36;
  LOBYTE(v290[0]) = OUTLINED_FUNCTION_5_39(v38, sel_isEmergency);
  v39 = OUTLINED_FUNCTION_36_45();
  *(_QWORD *)(v33 + 96) = v37;
  *(_QWORD *)(v33 + 104) = v38;
  *(_QWORD *)(v33 + 72) = v39;
  *(_QWORD *)(v33 + 80) = v40;
  LOBYTE(v290[0]) = OUTLINED_FUNCTION_5_39(v39, sel_isFailureExpected);
  v41 = OUTLINED_FUNCTION_36_45();
  *(_QWORD *)(v33 + 136) = v37;
  *(_QWORD *)(v33 + 144) = v38;
  *(_QWORD *)(v33 + 112) = v41;
  *(_QWORD *)(v33 + 120) = v42;
  LOBYTE(v290[0]) = a4 & 1;
  v43 = OUTLINED_FUNCTION_36_45();
  *(_QWORD *)(v33 + 176) = v37;
  *(_QWORD *)(v33 + 184) = v38;
  *(_QWORD *)(v33 + 152) = v43;
  *(_QWORD *)(v33 + 160) = v44;
  LOBYTE(v290[0]) = OUTLINED_FUNCTION_5_39(v43, sel_hasBeenRedirected);
  v45 = OUTLINED_FUNCTION_36_45();
  *(_QWORD *)(v33 + 216) = v37;
  *(_QWORD *)(v33 + 224) = v38;
  v280 = (char *)v38;
  *(_QWORD *)(v33 + 192) = v45;
  *(_QWORD *)(v33 + 200) = v46;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  v47 = OUTLINED_FUNCTION_53();
  v48 = v21 - 1;
  v49 = &selRef_inputDevices;
  v50 = &selRef_inputDevices;
  switch(v48)
  {
    case 0u:
      object = &selRef_setTarget_;
      v52 = v283;
      if ((_DWORD)v19)
      {
        v53 = (uint64_t)OUTLINED_FUNCTION_20_4(v47, sel_isOutgoing);
        if ((v53 & 1) != 0 || (v53 = (uint64_t)OUTLINED_FUNCTION_20_4(v53, sel_isConnected), (v53 & 1) != 0))
        {
          v54 = OUTLINED_FUNCTION_20_4(v53, sel_wantsHoldMusic);
          v17 = v282;
          if (v54)
          {
LABEL_27:
            OUTLINED_FUNCTION_24_55();
LABEL_173:
            OUTLINED_FUNCTION_67_17();
            goto LABEL_174;
          }
          v102 = OUTLINED_FUNCTION_6_93();
          if ((_DWORD)v102)
          {
            if ((v278 & 1) != 0)
            {
              OUTLINED_FUNCTION_1_128();
              object = v103;
              v50 = (char **)OUTLINED_FUNCTION_0_134();
              *((_OWORD *)v50 + 1) = xmmword_1BD6441D0;
              v104 = OUTLINED_FUNCTION_24_55();
              v105 = v280;
              v50[7] = (char *)MEMORY[0x1E0DEA968];
              v50[8] = v105;
              v50[4] = (char *)v104;
              v50[5] = v106;
              OUTLINED_FUNCTION_21_76();
              OUTLINED_FUNCTION_53_36();
              swift_bridgeObjectRelease();
LABEL_174:
              v189 = v52;
              goto LABEL_197;
            }
            goto LABEL_172;
          }
          if (OUTLINED_FUNCTION_20_4((uint64_t)v102, sel_isThirdPartyVideo))
          {
            if ((v278 & 1) != 0)
              goto LABEL_176;
          }
          else if ((v278 & 1) != 0)
          {
LABEL_176:
            OUTLINED_FUNCTION_1_128();
            object = v201;
            v202 = OUTLINED_FUNCTION_15();
            specialized static Array._adoptStorage(_:count:)(v202, 2);
            OUTLINED_FUNCTION_45_8();
            v204 = OUTLINED_FUNCTION_257(v203, sel_localizedName);
            OUTLINED_FUNCTION_52_33();
            OUTLINED_FUNCTION_38_4();
            v205 = (char *)MEMORY[0x1E0DEA968];
            v206 = v280;
            selRef__preferredFontForTextStyle_weight_ = (char *)MEMORY[0x1E0DEA968];
            selRef_setContentHuggingPriority_forAxis_ = v280;
            selRef_inputDevices = (char *)&selRef_inputDevices;
            selRef_isConnected = (char *)v19;
            v189 = v283;
            v207 = (char *)specialized closure #1 in static CallParticipantLabelDescriptor.labelDescriptorWithStrings(for:callCount:callCenter:alertAvailable:allowsDuration:)(v283, &v291);
            selRef_string = v205;
            selRef_messageUUID = v206;
            selRef_setPreferredMaxLayoutWidth_ = v207;
            selRef__setWantsContentAwareTypesettingLanguage_ = v208;
            TPNumberPadCharacter.rawValue.getter(v16);
            v14 = (char *)OUTLINED_FUNCTION_39_53();
            v50 = v209;
            OUTLINED_FUNCTION_13_3();
            goto LABEL_197;
          }
          OUTLINED_FUNCTION_1_128();
          object = v216;
          v217 = OUTLINED_FUNCTION_0_134();
          OUTLINED_FUNCTION_10_100(v217);
          OUTLINED_FUNCTION_45_8();
          v219 = OUTLINED_FUNCTION_257(v218, sel_localizedName);
          OUTLINED_FUNCTION_52_33();
          OUTLINED_FUNCTION_38_4();
          OUTLINED_FUNCTION_48_40();
          v14 = (char *)OUTLINED_FUNCTION_39_53();
          v50 = v220;
        }
        else
        {
          object = (char **)0xD000000000000011;
          v17 = v282;
          v134 = objc_msgSend(v282, sel_isFaceTimeProvider);
          if ((_DWORD)v134)
          {
LABEL_172:
            OUTLINED_FUNCTION_1_128();
            goto LABEL_173;
          }
          OUTLINED_FUNCTION_20_4((uint64_t)v134, sel_isThirdPartyVideo);
          OUTLINED_FUNCTION_1_128();
          object = v213;
          v50 = (char **)OUTLINED_FUNCTION_0_134();
          *((_OWORD *)v50 + 1) = xmmword_1BD6441D0;
          v214 = OUTLINED_FUNCTION_257((uint64_t)v50, sel_localizedName);
          OUTLINED_FUNCTION_64_21();
          OUTLINED_FUNCTION_11_12();
          v215 = v280;
          v50[7] = (char *)MEMORY[0x1E0DEA968];
          v50[8] = v215;
          v50[4] = v14;
          v50[5] = (char *)&selRef_inputDevices;
          OUTLINED_FUNCTION_21_76();
          OUTLINED_FUNCTION_53_36();
        }
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_42_42();
        goto LABEL_196;
      }
      v67 = OUTLINED_FUNCTION_68_21();
      if ((_DWORD)v67)
      {
        v67 = OUTLINED_FUNCTION_20_4((uint64_t)v67, sel_isVideo);
        if ((_DWORD)v67)
        {
          if (!OUTLINED_FUNCTION_20_4((uint64_t)v67, sel_isConnected))
          {
            OUTLINED_FUNCTION_23_66();
            object = v187;
            v14 = (char *)String.init(format:_:)();
            v50 = v188;
            goto LABEL_152;
          }
          OUTLINED_FUNCTION_61();
LABEL_73:
          String.localizedCallStatus.getter();
          object = v90;
          v50 = (char **)OUTLINED_FUNCTION_0_134();
          *((_OWORD *)v50 + 1) = xmmword_1BD6441D0;
          v91 = OUTLINED_FUNCTION_24_55();
          v92 = v280;
          v50[7] = (char *)MEMORY[0x1E0DEA968];
          v50[8] = v92;
          v50[4] = (char *)v91;
          v50[5] = v93;
          OUTLINED_FUNCTION_21_76();
          OUTLINED_FUNCTION_53_36();
LABEL_152:
          swift_bridgeObjectRelease();
LABEL_153:
          v189 = v52;
          v17 = v282;
          goto LABEL_197;
        }
      }
      v89 = (uint64_t)OUTLINED_FUNCTION_20_4((uint64_t)v67, sel_isOutgoing);
      if ((v89 & 1) == 0)
      {
        v89 = (uint64_t)OUTLINED_FUNCTION_20_4(v89, sel_isConnected);
        if ((v89 & 1) == 0)
        {
          v89 = (uint64_t)OUTLINED_FUNCTION_20_4(v89, sel_isHostedOnCurrentDevice);
          if ((v89 & 1) == 0)
          {
            OUTLINED_FUNCTION_23_66();
            OUTLINED_FUNCTION_67_17();
            goto LABEL_153;
          }
        }
      }
      if (OUTLINED_FUNCTION_20_4(v89, sel_isEmergency))
      {
        OUTLINED_FUNCTION_22_71();
        goto LABEL_73;
      }
      v108 = OUTLINED_FUNCTION_25_56();
      v109 = v285;
      if (!v108)
        goto LABEL_178;
      outlined bridged method (ob) of @objc LSBundleRecord.bundleIdentifier.getter(v108, (SEL *)&selRef_callDirectoryLabel);
      if (!v110)
        goto LABEL_178;
      OUTLINED_FUNCTION_67_17();
      v111 = OUTLINED_FUNCTION_25_56();
      if (v111)
      {
        outlined bridged method (ob) of @objc LSBundleRecord.bundleIdentifier.getter(v111, (SEL *)&selRef_callDirectoryLocalizedExtensionContainingAppName);
        if (v113)
        {
          object = v112;
          v114 = v113;
          OUTLINED_FUNCTION_66_24();
          if (!v246)
          {
            OUTLINED_FUNCTION_27();
            OUTLINED_FUNCTION_24_55();
            OUTLINED_FUNCTION_67_17();
          }
          v17 = v282;
          OUTLINED_FUNCTION_1_128();
          v115 = OUTLINED_FUNCTION_0_134();
          v116 = OUTLINED_FUNCTION_10_100(v115);
          OUTLINED_FUNCTION_83_21(v116, v117);
          *v118 = object;
          v118[1] = v114;
          TPNumberPadCharacter.rawValue.getter(v119);
          String.init(format:_:)();
          OUTLINED_FUNCTION_149_0();
          swift_bridgeObjectRelease();
          goto LABEL_196;
        }
      }
      OUTLINED_FUNCTION_27();
LABEL_178:
      v17 = v282;
      if ((v278 & 1) == 0)
      {
        v14 = 0;
        v189 = v52;
        v50 = (char **)0xE000000000000000;
        goto LABEL_197;
      }
      if (one-time initialization token for shared != -1)
        swift_once();
      if ((OUTLINED_FUNCTION_3_67(*(_QWORD *)static Features.shared) & 1) == 0)
        goto LABEL_244;
      if (OUTLINED_FUNCTION_81_17())
      {
        OUTLINED_FUNCTION_61_26();

        OUTLINED_FUNCTION_51_36((uint64_t)v16, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v109 + 32));
        OUTLINED_FUNCTION_56_34((uint64_t)v16);
        if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, (uint64_t)&selRef_setTarget_) != 1)
        {
          v210 = outlined destroy of URL?((uint64_t)v16);
          OUTLINED_FUNCTION_15_84(v210, (SEL *)&selRef_localizedLabel);
          if (v211)
          {
            v50 = v211;
            OUTLINED_FUNCTION_66_24();
            if (v246)
            {
              v14 = (char *)v212;
              OUTLINED_FUNCTION_15_84(v212, (SEL *)&selRef_companyDepartment);
LABEL_196:
              v189 = v283;
LABEL_197:
              if (objc_msgSend(v189, sel_isConnected)
                && objc_msgSend(v283, sel_wantsHoldMusic))
              {
                OUTLINED_FUNCTION_27_54();
                object = v221;
                v222 = OUTLINED_FUNCTION_0_134();
                *(_OWORD *)(v222 + 16) = xmmword_1BD6441D0;
                v223 = v280;
                *(_QWORD *)(v222 + 56) = MEMORY[0x1E0DEA968];
                *(_QWORD *)(v222 + 64) = v223;
                *(_QWORD *)(v222 + 32) = v14;
                *(_QWORD *)(v222 + 40) = v50;
                v224 = String.init(format:_:)();
                v50 = v225;
                OUTLINED_FUNCTION_53();
                if ((OUTLINED_FUNCTION_73_20() & 1) == 0)
                {
                  OUTLINED_FUNCTION_36_12();
                  object = v269;
                }
                v226 = (unint64_t)object[2];
                if (v226 >= (unint64_t)object[3] >> 1)
                {
                  OUTLINED_FUNCTION_36_12();
                  object = v270;
                }
                object[2] = (char *)(v226 + 1);
                v227 = &object[2 * v226];
                v227[4] = (char *)v224;
                v228 = v227 + 4;
              }
              else
              {
                if ((OUTLINED_FUNCTION_73_20() & 1) == 0)
                {
                  OUTLINED_FUNCTION_36_12();
                  object = v267;
                }
                v229 = (unint64_t)object[2];
                if (v229 >= (unint64_t)object[3] >> 1)
                {
                  OUTLINED_FUNCTION_36_12();
                  object = v268;
                }
                object[2] = (char *)(v229 + 1);
                v230 = &object[2 * v229];
                v230[4] = v14;
                v228 = v230 + 4;
              }
              v228[1] = (char *)v50;
              v292 = object;
              if ((v278 & 1) != 0)
              {
                outlined bridged method (pb) of @objc TUCall.callDurationString.getter(v283, (SEL *)&selRef_callDurationString);
                v232 = v231;
                OUTLINED_FUNCTION_72_22();
                if (v232)
                {
                  OUTLINED_FUNCTION_2_0();
                  v291 = 1;
                }
              }
              goto LABEL_265;
            }
            OUTLINED_FUNCTION_27();
          }
LABEL_244:
          v50 = (char **)static Features.shared;
          v255 = OUTLINED_FUNCTION_3_67(*(_QWORD *)static Features.shared);
          if ((v255 & 1) != 0)
          {
            OUTLINED_FUNCTION_15_84(v255, (SEL *)&selRef_suggestedDisplayName);
            if (v256)
            {
              object = v256;
              OUTLINED_FUNCTION_66_24();
              if (v246)
              {
                v50 = v257;
                v258 = ((unint64_t)object >> 56) & 0xF;
                if (((unint64_t)object & 0x2000000000000000) == 0)
                  v258 = (unint64_t)v257 & 0xFFFFFFFFFFFFLL;
                if (v258)
                {
                  static String._createEmpty(withInitialCapacity:)(7);
                  OUTLINED_FUNCTION_72_22();
                  v290[0] = v50;
                  v290[1] = object;
                  v50 = (char **)v290;
                  v259._countAndFlagsBits = 2108704;
                  v259._object = (void *)0xE300000000000000;
                  String.append(_:)(v259);
                  v260._countAndFlagsBits = OUTLINED_FUNCTION_24_55();
                  object = (char **)v260._object;
                  String.append(_:)(v260);
                  OUTLINED_FUNCTION_13_3();
                  String.init(stringInterpolation:)();
                  goto LABEL_173;
                }
              }
              OUTLINED_FUNCTION_13_3();
            }
          }
          goto LABEL_27;
        }
      }
      else
      {
        OUTLINED_FUNCTION_55_30((uint64_t)v16);
      }
      outlined destroy of URL?((uint64_t)v16);
      goto LABEL_244;
    case 1u:
      if (!objc_msgSend(v288, sel_isAmbiguous))
        goto LABEL_47;
      specialized closure #1 in static CallParticipantLabelDescriptor.labelDescriptorWithStrings(for:callCount:callCenter:alertAvailable:allowsDuration:)(v283, &v291);
      goto LABEL_48;
    case 2u:
      v55 = v283;
      v56 = OUTLINED_FUNCTION_2_11(v47, sel_wasPulledToCurrentDevice);
      v17 = v282;
      if ((_DWORD)v56)
        goto LABEL_160;
      if (!(_DWORD)v19)
      {
        v94 = OUTLINED_FUNCTION_14_91();
        if ((_DWORD)v94
          && (v94 = OUTLINED_FUNCTION_2_11((uint64_t)v94, (const char *)&selRef_tapDoneButton + 5), (_DWORD)v94))
        {
          if (OUTLINED_FUNCTION_2_11((uint64_t)v94, sel_isConnecting))
            OUTLINED_FUNCTION_22_71();
          else
            OUTLINED_FUNCTION_61();
        }
        else
        {
          v107 = OUTLINED_FUNCTION_2_11((uint64_t)v94, sel_isEmergency);
          if ((_DWORD)v107)
            goto LABEL_160;
          if (OUTLINED_FUNCTION_2_11((uint64_t)v107, sel_wasDialAssisted))
          {
            String.localizedCallStatus.getter();
            OUTLINED_FUNCTION_9_91();
            OUTLINED_FUNCTION_4_119();
            v162 = OUTLINED_FUNCTION_8_95();
            TPNumberPadCharacter.rawValue.getter(v162);
          }
          outlined bridged method (pb) of @objc TUCall.callDurationString.getter(v55, (SEL *)&selRef_localizedLabel);
          if (v163)
          {
            if (String.count.getter() >= 1)
            {
              OUTLINED_FUNCTION_1_128();
              v164 = OUTLINED_FUNCTION_0_134();
              v165 = OUTLINED_FUNCTION_10_100(v164);
              OUTLINED_FUNCTION_59_29(v165, v166);
              v73 = OUTLINED_FUNCTION_40_45();
              v75 = v167;
              OUTLINED_FUNCTION_53();
              goto LABEL_257;
            }
            OUTLINED_FUNCTION_13_3();
          }
        }
        String.localizedCallStatus.getter();
        goto LABEL_256;
      }
      v16 = (_BYTE *)0xD000000000000011;
      v70 = OUTLINED_FUNCTION_2_11((uint64_t)v56, sel_isConnecting);
      v71 = OUTLINED_FUNCTION_14_91();
      if (!v70)
      {
        if ((_DWORD)v71)
          goto LABEL_160;
        OUTLINED_FUNCTION_2_11((uint64_t)v71, sel_isThirdPartyVideo);
        goto LABEL_261;
      }
      if ((_DWORD)v71)
      {
        OUTLINED_FUNCTION_1_128();
        v73 = v72;
        v75 = v74;
        v76 = OUTLINED_FUNCTION_30_57();
        v292 = &selRef_inputDevices;
        if ((v76 & 1) == 0)
        {
          OUTLINED_FUNCTION_13_96();
          OUTLINED_FUNCTION_79_18(v274);
        }
        v77 = sel_insertArrangedSubview_atIndex_;
        if ((unint64_t)sel_insertArrangedSubview_atIndex_ >= (unint64_t)sel__preferredFontForTextStyle_weight_ >> 1)
        {
          OUTLINED_FUNCTION_8_48();
          v292 = v275;
        }
        goto LABEL_259;
      }
      if (!OUTLINED_FUNCTION_2_11((uint64_t)v71, sel_isThirdPartyVideo))
        goto LABEL_261;
      OUTLINED_FUNCTION_1_128();
      v191 = v190;
      v192 = OUTLINED_FUNCTION_0_134();
      OUTLINED_FUNCTION_10_100(v192);
      OUTLINED_FUNCTION_45_8();
      v194 = OUTLINED_FUNCTION_257(v193, sel_localizedName);
      OUTLINED_FUNCTION_52_33();
      OUTLINED_FUNCTION_38_4();
      selRef__preferredFontForTextStyle_weight_ = (char *)MEMORY[0x1E0DEA968];
      selRef_setContentHuggingPriority_forAxis_ = v280;
      selRef_inputDevices = (char *)&selRef_inputDevices;
      selRef_isConnected = (char *)v19;
      v73 = OUTLINED_FUNCTION_58_30();
      v75 = v195;
      OUTLINED_FUNCTION_27();
      v196 = OUTLINED_FUNCTION_30_57();
      v292 = v191;
      if ((v196 & 1) == 0)
      {
        OUTLINED_FUNCTION_13_96();
        OUTLINED_FUNCTION_79_18(v276);
      }
      v77 = v191[2];
      goto LABEL_258;
    case 3u:
      v57 = v283;
      if ((_DWORD)v19)
      {
        v58 = OUTLINED_FUNCTION_68_21();
        if ((_DWORD)v58)
        {
          OUTLINED_FUNCTION_1_128();
          v60 = v59;
          v62 = v61;
        }
        else
        {
          OUTLINED_FUNCTION_20_4((uint64_t)v58, sel_isThirdPartyVideo);
          OUTLINED_FUNCTION_1_128();
          v136 = OUTLINED_FUNCTION_0_134();
          *(_OWORD *)(v136 + 16) = xmmword_1BD6441D0;
          v137 = objc_msgSend(v282, sel_localizedName);
          OUTLINED_FUNCTION_64_21();
          OUTLINED_FUNCTION_11_12();
          v138 = v280;
          *(_QWORD *)(v136 + 56) = MEMORY[0x1E0DEA968];
          *(_QWORD *)(v136 + 64) = v138;
          *(_QWORD *)(v136 + 32) = v14;
          *(_QWORD *)(v136 + 40) = 0x1E7672000;
          v60 = OUTLINED_FUNCTION_58_30();
          v62 = v139;
          OUTLINED_FUNCTION_27();
        }
        v140 = outlined bridged method (pb) of @objc TUCall.contactIdentifiers.getter(v57);
        if (v140)
        {
          v141 = *(_QWORD *)(v140 + 16);
          swift_bridgeObjectRelease();
          if (v141)
          {
            v142 = OUTLINED_FUNCTION_30_57();
            v292 = (char **)v141;
            if ((v142 & 1) == 0)
            {
              OUTLINED_FUNCTION_13_96();
              OUTLINED_FUNCTION_79_18(v271);
            }
            v17 = v282;
            v49 = *(char ***)(v141 + 16);
            if ((unint64_t)v49 >= *(_QWORD *)(v141 + 24) >> 1)
            {
              OUTLINED_FUNCTION_8_48();
              v292 = v272;
            }
            goto LABEL_150;
          }
        }
        v143 = OUTLINED_FUNCTION_25_56();
        if (v143)
        {
          outlined bridged method (ob) of @objc LSBundleRecord.bundleIdentifier.getter(v143, (SEL *)&selRef_callDirectoryLabel);
          if (v144)
          {
            OUTLINED_FUNCTION_149_0();
            v145 = objc_msgSend(v283, (SEL)0x1F26C6880);
            if (v145)
            {
              outlined bridged method (ob) of @objc LSBundleRecord.bundleIdentifier.getter(v145, (SEL *)&selRef_callDirectoryLocalizedExtensionContainingAppName);
              if (v147)
              {
                v148 = v146;
                v149 = v147;
                OUTLINED_FUNCTION_13_3();
                OUTLINED_FUNCTION_1_128();
                v150 = OUTLINED_FUNCTION_0_134();
                v151 = OUTLINED_FUNCTION_10_100(v150);
                OUTLINED_FUNCTION_83_21(v151, v152);
                *v153 = v148;
                v153[1] = v149;
                TPNumberPadCharacter.rawValue.getter(v154);
                v155 = String.init(format:_:)();
                v157 = v156;
                swift_bridgeObjectRelease();
                OUTLINED_FUNCTION_16_75();
                v158 = (uint64_t)v292[2];
                specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v158);
                v159 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v158, v155, v157);
                TPNumberPadCharacter.rawValue.getter(v159);
LABEL_29:
                v17 = v282;
                goto LABEL_265;
              }
            }
            OUTLINED_FUNCTION_25();
          }
        }
        outlined bridged method (pb) of @objc TUCall.callDurationString.getter(v283, (SEL *)&selRef_suggestedDisplayName);
        v17 = v282;
        if (!v181)
        {
          OUTLINED_FUNCTION_16_75();
          OUTLINED_FUNCTION_4_119();
LABEL_150:
          v184 = (uint64_t)v49;
          v185 = v60;
          v186 = v62;
          goto LABEL_263;
        }
        v182 = v180;
        v183 = v181;
        OUTLINED_FUNCTION_13_3();
        OUTLINED_FUNCTION_16_75();
        OUTLINED_FUNCTION_54_34();
        v184 = (uint64_t)v62;
        v185 = v182;
        v186 = v183;
LABEL_263:
        v265 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v184, v185, (uint64_t)v186);
        TPNumberPadCharacter.rawValue.getter(v265);
        goto LABEL_264;
      }
      v78 = OUTLINED_FUNCTION_20_4(v47, (const char *)&selRef_tapDoneButton + 5);
      if ((_DWORD)v78)
      {
        v79 = OUTLINED_FUNCTION_20_4((uint64_t)v78, sel_wantsHoldMusic);
        if ((_DWORD)v79)
        {
          v80 = OUTLINED_FUNCTION_20_4((uint64_t)v79, (const char *)&selRef_boundarySupplementaryItems);
          v17 = v282;
          if ((_DWORD)v80)
          {
            OUTLINED_FUNCTION_15_84((uint64_t)v80, (SEL *)&selRef_callDurationString);
            if (v81)
            {
              OUTLINED_FUNCTION_152_3();
              OUTLINED_FUNCTION_27_54();
              v16 = v82;
              v83 = OUTLINED_FUNCTION_0_134();
              v84 = OUTLINED_FUNCTION_10_100(v83);
              OUTLINED_FUNCTION_83_21(v84, v85);
              *v86 = v37;
              v86[1] = &selRef_inputDevices;
              TPNumberPadCharacter.rawValue.getter(v87);
              OUTLINED_FUNCTION_40_45();
              OUTLINED_FUNCTION_152_3();
LABEL_166:
              swift_bridgeObjectRelease();
LABEL_162:
              if ((OUTLINED_FUNCTION_63_24() & 1) != 0)
                goto LABEL_163;
              goto LABEL_49;
            }
          }
        }
        else
        {
          v135 = OUTLINED_FUNCTION_20_4((uint64_t)v79, sel_isConnecting);
          v17 = v282;
          if (!v135)
          {
LABEL_160:
            OUTLINED_FUNCTION_61();
            goto LABEL_161;
          }
        }
        OUTLINED_FUNCTION_22_71();
LABEL_161:
        String.localizedCallStatus.getter();
        OUTLINED_FUNCTION_152_3();
        goto LABEL_162;
      }
      v95 = outlined bridged method (pb) of @objc TUCall.contactIdentifiers.getter(v57);
      if (v95)
      {
        v37 = *(void **)(v95 + 16);
        v95 = swift_bridgeObjectRelease();
        if (v37)
        {
          OUTLINED_FUNCTION_15_84(v95, (SEL *)&selRef_supplementalInCallString);
          if (v96)
          {
            OUTLINED_FUNCTION_9_91();
            OUTLINED_FUNCTION_4_119();
            v97 = OUTLINED_FUNCTION_8_95();
            TPNumberPadCharacter.rawValue.getter(v97);
          }
          v98 = (*(uint64_t (**)(void *))(v287 + 280))(v57);
          v17 = v282;
          if (v99)
          {
            OUTLINED_FUNCTION_9_91();
            OUTLINED_FUNCTION_4_119();
            v100 = OUTLINED_FUNCTION_8_95();
            v98 = TPNumberPadCharacter.rawValue.getter(v100);
          }
          goto LABEL_255;
        }
      }
      if (!OUTLINED_FUNCTION_20_4(v95, sel_isInternational))
      {
        v168 = OUTLINED_FUNCTION_25_56();
        v169 = v285;
        if (v168)
        {
          outlined bridged method (ob) of @objc LSBundleRecord.bundleIdentifier.getter(v168, (SEL *)&selRef_callDirectoryLabel);
          if (v170)
          {
            v19 = (uint64_t)v168;
            v49 = v170;
            v171 = OUTLINED_FUNCTION_25_56();
            if (v171)
            {
              outlined bridged method (ob) of @objc LSBundleRecord.bundleIdentifier.getter(v171, (SEL *)&selRef_callDirectoryLocalizedExtensionContainingAppName);
              if (v172)
              {
                OUTLINED_FUNCTION_9_91();
                v173 = (uint64_t)v292[2];
                specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v173);
                v174 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v173, v19, (uint64_t)v49);
                TPNumberPadCharacter.rawValue.getter(v174);
                OUTLINED_FUNCTION_1_128();
                v175 = OUTLINED_FUNCTION_0_134();
                v176 = OUTLINED_FUNCTION_10_100(v175);
                OUTLINED_FUNCTION_83_21(v176, v177);
                *v178 = v37;
                v178[1] = v16;
                TPNumberPadCharacter.rawValue.getter(v179);
                String.init(format:_:)();
                OUTLINED_FUNCTION_53();
                goto LABEL_29;
              }
            }
            v168 = (id)OUTLINED_FUNCTION_53();
          }
        }
        OUTLINED_FUNCTION_15_84((uint64_t)v168, (SEL *)&selRef_supplementalInCallString);
        if (v236)
        {
          OUTLINED_FUNCTION_9_91();
          OUTLINED_FUNCTION_4_119();
          v237 = OUTLINED_FUNCTION_8_95();
          v235 = TPNumberPadCharacter.rawValue.getter(v237);
        }
        OUTLINED_FUNCTION_15_84(v235, (SEL *)&selRef_suggestedDisplayName);
        v17 = v282;
        if (v239)
        {
          OUTLINED_FUNCTION_9_91();
          OUTLINED_FUNCTION_4_119();
          v240 = OUTLINED_FUNCTION_8_95();
          v238 = TPNumberPadCharacter.rawValue.getter(v240);
        }
        if (OUTLINED_FUNCTION_20_4(v238, sel_isJunk))
        {
          String.localizedCallStatus.getter();
          v242 = v241;
          v244 = v243;
          (*(void (**)(void *))(v287 + 288))(v57);
          OUTLINED_FUNCTION_149_0();
          OUTLINED_FUNCTION_124();
          OUTLINED_FUNCTION_16_75();
          OUTLINED_FUNCTION_4_119();
          v245 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)((uint64_t)v49, v242, v244);
          TPNumberPadCharacter.rawValue.getter(v245);
          v246 = v242 == v19 && v244 == (_QWORD)v57;
          if (v246)
          {
            swift_bridgeObjectRelease_n();
          }
          else
          {
            v247 = _stringCompareWithSmolCheck(_:_:expecting:)();
            OUTLINED_FUNCTION_13_3();
            if ((v247 & 1) == 0)
              goto LABEL_265;
            OUTLINED_FUNCTION_25();
          }
          goto LABEL_264;
        }
        if (OUTLINED_FUNCTION_81_17())
        {
          OUTLINED_FUNCTION_61_26();

          OUTLINED_FUNCTION_51_36((uint64_t)v14, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v169 + 32));
          OUTLINED_FUNCTION_56_34((uint64_t)v14);
          if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, (uint64_t)v37) != 1)
          {
            v248 = outlined destroy of URL?((uint64_t)v14);
            OUTLINED_FUNCTION_15_84(v248, (SEL *)&selRef_localizedLabel);
            if (v249)
            {
              OUTLINED_FUNCTION_9_91();
              OUTLINED_FUNCTION_4_119();
              v250 = OUTLINED_FUNCTION_8_95();
              v251 = TPNumberPadCharacter.rawValue.getter(v250);
              OUTLINED_FUNCTION_15_84(v251, (SEL *)&selRef_companyDepartment);
              goto LABEL_265;
            }
            goto LABEL_255;
          }
        }
        else
        {
          OUTLINED_FUNCTION_55_30((uint64_t)v14);
        }
        v98 = outlined destroy of URL?((uint64_t)v14);
LABEL_255:
        OUTLINED_FUNCTION_15_84(v98, (SEL *)&selRef_localizedLabel);
        if (!v234)
        {
LABEL_264:
          OUTLINED_FUNCTION_42_42();
          goto LABEL_265;
        }
LABEL_256:
        v73 = v233;
        v75 = v234;
LABEL_257:
        OUTLINED_FUNCTION_16_75();
        v77 = v292[2];
LABEL_258:
        specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)((uint64_t)v77);
LABEL_259:
        v184 = (uint64_t)v77;
        v185 = v73;
        v186 = v75;
        goto LABEL_263;
      }
      OUTLINED_FUNCTION_1_128();
      v121 = v120;
      v122 = String.init(format:_:)();
      OUTLINED_FUNCTION_27();
      v123 = OUTLINED_FUNCTION_30_57();
      v292 = (char **)v121;
      v17 = v282;
      if ((v123 & 1) == 0)
      {
        OUTLINED_FUNCTION_13_96();
        OUTLINED_FUNCTION_79_18(v273);
      }
      v124 = *(_QWORD *)(v121 + 16);
      v125 = (unint64_t)&v292;
      specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v124);
      v126 = OUTLINED_FUNCTION_8_95();
      v127 = TPNumberPadCharacter.rawValue.getter(v126);
      OUTLINED_FUNCTION_15_84(v127, (SEL *)&selRef_suggestedDisplayName);
      if (!v129)
        goto LABEL_232;
      v125 = v128;
      v122 = v129;
      v130 = HIBYTE(v129) & 0xF;
      if ((v129 & 0x2000000000000000) == 0)
        v130 = v128 & 0xFFFFFFFFFFFFLL;
      if (v130)
      {
        OUTLINED_FUNCTION_1_128();
        v131 = OUTLINED_FUNCTION_0_134();
        v132 = OUTLINED_FUNCTION_10_100(v131);
        OUTLINED_FUNCTION_59_29(v132, v133);
        OUTLINED_FUNCTION_40_45();
        OUTLINED_FUNCTION_53();
      }
      else
      {
        v128 = OUTLINED_FUNCTION_13_3();
LABEL_232:
        OUTLINED_FUNCTION_15_84(v128, (SEL *)&selRef_localizedLabel);
        if (!v252)
          goto LABEL_264;
        OUTLINED_FUNCTION_152_3();
        v253 = OUTLINED_FUNCTION_72_22();
        v254 = HIBYTE(v125) & 0xF;
        if ((v125 & 0x2000000000000000) == 0)
          v254 = v122 & 0xFFFFFFFFFFFFLL;
        if (!v254)
          goto LABEL_264;
        OUTLINED_FUNCTION_15_84(v253, (SEL *)&selRef_localizedLabel);
        OUTLINED_FUNCTION_149_0();
      }
LABEL_265:
      v266 = objc_allocWithZone((Class)type metadata accessor for CallParticipantLabelDescriptor());
      swift_bridgeObjectRetain();
      v32 = (uint64_t *)CallParticipantLabelDescriptor.init(strings:secondaryString:durationString:layoutState:)();
      OUTLINED_FUNCTION_2_0();
      OUTLINED_FUNCTION_16_3(*v32);
      OUTLINED_FUNCTION_25();
LABEL_266:

      return v32;
    case 4u:
      v16 = v283;
      v63 = OUTLINED_FUNCTION_9(v47, sel_wasDeclined);
      v17 = v282;
      if (v63)
      {
        if (!(_DWORD)v19)
        {
          OUTLINED_FUNCTION_37_45();
          goto LABEL_161;
        }
        v64 = OUTLINED_FUNCTION_6_93();
        if ((_DWORD)v64)
          goto LABEL_160;
      }
      else
      {
        if (!(_DWORD)v19)
        {
          OUTLINED_FUNCTION_80_15();
          goto LABEL_161;
        }
        v64 = OUTLINED_FUNCTION_6_93();
        if ((_DWORD)v64)
          goto LABEL_160;
      }
      OUTLINED_FUNCTION_9((uint64_t)v64, sel_isThirdPartyVideo);
      OUTLINED_FUNCTION_1_128();
      v16 = v197;
      v198 = OUTLINED_FUNCTION_0_134();
      *(_OWORD *)(v198 + 16) = xmmword_1BD6441D0;
      v199 = OUTLINED_FUNCTION_257(v198, sel_localizedName);
      OUTLINED_FUNCTION_64_21();
      OUTLINED_FUNCTION_11_12();
      v200 = v280;
      *(_QWORD *)(v198 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v198 + 64) = v200;
      *(_QWORD *)(v198 + 32) = v14;
      *(_QWORD *)(v198 + 40) = 0x1E7672000;
      OUTLINED_FUNCTION_21_76();
      OUTLINED_FUNCTION_152_3();
      goto LABEL_166;
    case 5u:
      v65 = &selRef_setTarget_;
      v16 = v283;
      v66 = OUTLINED_FUNCTION_9(v47, sel_disconnectedReason);
      if ((_DWORD)v66 == 15)
      {
LABEL_47:
        String.localizedCallStatus.getter();
LABEL_48:
        OUTLINED_FUNCTION_152_3();
        v68 = OUTLINED_FUNCTION_63_24();
        v17 = v282;
        if ((v68 & 1) != 0)
          goto LABEL_163;
LABEL_49:
        OUTLINED_FUNCTION_2_28();
        v16 = v69;
LABEL_163:
        if (*((_QWORD *)v16 + 2) >= *((_QWORD *)v16 + 3) >> 1)
          OUTLINED_FUNCTION_2_28();
        OUTLINED_FUNCTION_42_42();
        OUTLINED_FUNCTION_86_12();
        goto LABEL_265;
      }
      v88 = OUTLINED_FUNCTION_9((uint64_t)v66, sel_disconnectedReason);
      v17 = v282;
      if ((_DWORD)v88 == 7)
        goto LABEL_161;
      v101 = OUTLINED_FUNCTION_9((uint64_t)v88, sel_disconnectedReasonRequiresCallFailureUI);
      if ((_DWORD)v101)
        goto LABEL_161;
      v160 = OUTLINED_FUNCTION_9((uint64_t)v101, sel_disconnectedReasonRequiresCallBackUI);
      if ((_DWORD)v160)
      {
        if (!(_DWORD)v19)
          goto LABEL_264;
        v161 = OUTLINED_FUNCTION_6_93();
        if ((_DWORD)v161)
          goto LABEL_193;
      }
      else if (OUTLINED_FUNCTION_9((uint64_t)v160, sel_wasDeclined))
      {
        if (!(_DWORD)v19)
        {
          OUTLINED_FUNCTION_37_45();
          goto LABEL_241;
        }
        v161 = OUTLINED_FUNCTION_6_93();
        if ((_DWORD)v161)
        {
LABEL_193:
          OUTLINED_FUNCTION_61();
LABEL_241:
          String.localizedCallStatus.getter();
          OUTLINED_FUNCTION_45_8();
LABEL_262:
          OUTLINED_FUNCTION_16_75();
          OUTLINED_FUNCTION_54_34();
          v184 = (uint64_t)v65;
          v185 = (uint64_t)v16;
          v186 = &selRef_inputDevices;
          goto LABEL_263;
        }
      }
      else
      {
        if (!(_DWORD)v19)
        {
          OUTLINED_FUNCTION_80_15();
          goto LABEL_241;
        }
        v161 = OUTLINED_FUNCTION_6_93();
        if ((_DWORD)v161)
          goto LABEL_193;
      }
      OUTLINED_FUNCTION_9((uint64_t)v161, sel_isThirdPartyVideo);
LABEL_261:
      OUTLINED_FUNCTION_1_128();
      v65 = v261;
      v262 = OUTLINED_FUNCTION_0_134();
      OUTLINED_FUNCTION_10_100(v262);
      OUTLINED_FUNCTION_45_8();
      v264 = OUTLINED_FUNCTION_257(v263, sel_localizedName);
      OUTLINED_FUNCTION_52_33();
      OUTLINED_FUNCTION_38_4();
      OUTLINED_FUNCTION_48_40();
      OUTLINED_FUNCTION_39_53();
      OUTLINED_FUNCTION_45_8();
      OUTLINED_FUNCTION_13_3();
      goto LABEL_262;
    default:
      OUTLINED_FUNCTION_42_42();
      goto LABEL_29;
  }
}

CNKCallParticipantLabelDescriptorFactory __swiftcall CNKCallParticipantLabelDescriptorFactory.init()()
{
  return (CNKCallParticipantLabelDescriptorFactory)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
}

id CNKCallParticipantLabelDescriptorFactory.init()()
{
  objc_super v1;

  v1.super_class = (Class)CNKCallParticipantLabelDescriptorFactory;
  return objc_msgSendSuper2(&v1, sel_init);
}

void CallParticipantLabelDescriptor.strings.getter()
{
  OUTLINED_FUNCTION_2_0();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_32();
}

void CallParticipantLabelDescriptor.strings.setter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit30CallParticipantLabelDescriptor_strings);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_32();
}

uint64_t key path setter for CallParticipantLabelDescriptor.strings : CallParticipantLabelDescriptor(uint64_t a1, _QWORD **a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x88);
  v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

void CallParticipantLabelDescriptor.strings.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void CallParticipantLabelDescriptor.secondaryString.getter()
{
  CallParticipantLabelDescriptor.secondaryString.getter();
}

{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_124();
  OUTLINED_FUNCTION_32();
}

void CallParticipantLabelDescriptor.secondaryString.setter(uint64_t a1, uint64_t a2)
{
  CallParticipantLabelDescriptor.secondaryString.setter(a1, a2, &OBJC_IVAR____TtC15ConversationKit30CallParticipantLabelDescriptor_secondaryString);
}

uint64_t key path setter for CallParticipantLabelDescriptor.secondaryString : CallParticipantLabelDescriptor(uint64_t *a1, _QWORD **a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0xA0);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

void CallParticipantLabelDescriptor.secondaryString.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

id @objc CallParticipantLabelDescriptor.secondaryString.getter(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v3 = a3();
  if (v4)
  {
    v5 = (void *)MEMORY[0x1C3B72E00](v3);
    OUTLINED_FUNCTION_13_3();
  }
  else
  {
    v5 = 0;
  }
  return v5;
}

void CallParticipantLabelDescriptor.durationString.getter()
{
  CallParticipantLabelDescriptor.secondaryString.getter();
}

void @objc CallParticipantLabelDescriptor.secondaryString.setter(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  id v8;

  if (a3)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    OUTLINED_FUNCTION_45_8();
  }
  else
  {
    v4 = 0;
    v5 = 0;
  }
  v8 = a1;
  a4(v4, v5);

}

void CallParticipantLabelDescriptor.durationString.setter(uint64_t a1, uint64_t a2)
{
  CallParticipantLabelDescriptor.secondaryString.setter(a1, a2, &OBJC_IVAR____TtC15ConversationKit30CallParticipantLabelDescriptor_durationString);
}

uint64_t key path setter for CallParticipantLabelDescriptor.durationString : CallParticipantLabelDescriptor(uint64_t *a1, _QWORD **a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0xB8);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

void CallParticipantLabelDescriptor.durationString.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void CallParticipantLabelDescriptor.layoutState.getter()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_32();
}

void CallParticipantLabelDescriptor.layoutState.setter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit30CallParticipantLabelDescriptor_layoutState);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  OUTLINED_FUNCTION_32();
}

void CallParticipantLabelDescriptor.layoutState.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t CallParticipantLabelDescriptor.isDynamic.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ConversationKit30CallParticipantLabelDescriptor_isDynamic);
  OUTLINED_FUNCTION_2_0();
  return *v1;
}

void CallParticipantLabelDescriptor.isDynamic.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit30CallParticipantLabelDescriptor_isDynamic);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  OUTLINED_FUNCTION_32();
}

void CallParticipantLabelDescriptor.isDynamic.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void CallParticipantLabelDescriptor.localizedSenderIdentity.getter()
{
  CallParticipantLabelDescriptor.secondaryString.getter();
}

void CallParticipantLabelDescriptor.localizedSenderIdentity.setter(uint64_t a1, uint64_t a2)
{
  CallParticipantLabelDescriptor.secondaryString.setter(a1, a2, &OBJC_IVAR____TtC15ConversationKit30CallParticipantLabelDescriptor_localizedSenderIdentity);
}

void CallParticipantLabelDescriptor.secondaryString.setter(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)(v3 + *a3);
  OUTLINED_FUNCTION_2_0();
  *v6 = a1;
  v6[1] = a2;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_9_0();
}

uint64_t key path setter for CallParticipantLabelDescriptor.localizedSenderIdentity : CallParticipantLabelDescriptor(uint64_t *a1, _QWORD **a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x100);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

void CallParticipantLabelDescriptor.localizedSenderIdentity.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t CallParticipantLabelDescriptor.__allocating_init(strings:)(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))(v1 + 272))(a1, 0, 0, 0, 0, 0);
}

id CallParticipantLabelDescriptor.init(strings:secondaryString:durationString:layoutState:)()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  objc_super v12;

  OUTLINED_FUNCTION_62_31();
  v6 = &v1[OBJC_IVAR____TtC15ConversationKit30CallParticipantLabelDescriptor_secondaryString];
  *v6 = 0;
  v6[1] = 0;
  v7 = &v1[OBJC_IVAR____TtC15ConversationKit30CallParticipantLabelDescriptor_durationString];
  *v7 = 0;
  v7[1] = 0;
  v1[OBJC_IVAR____TtC15ConversationKit30CallParticipantLabelDescriptor_isDynamic] = 0;
  v8 = &v1[OBJC_IVAR____TtC15ConversationKit30CallParticipantLabelDescriptor_localizedSenderIdentity];
  *v8 = 0;
  v8[1] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit30CallParticipantLabelDescriptor_strings] = v9;
  OUTLINED_FUNCTION_2_0();
  *v6 = v5;
  v6[1] = v4;
  v10 = v1;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_2_0();
  *v7 = v3;
  v7[1] = v2;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v10[OBJC_IVAR____TtC15ConversationKit30CallParticipantLabelDescriptor_layoutState] = v0;

  v12.receiver = v10;
  v12.super_class = (Class)type metadata accessor for CallParticipantLabelDescriptor();
  return objc_msgSendSuper2(&v12, sel_init);
}

uint64_t specialized closure #1 in static CallParticipantLabelDescriptor.labelDescriptorWithStrings(for:callCount:callCenter:alertAvailable:allowsDuration:)(void *a1, _BYTE *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  outlined bridged method (pb) of @objc TUCall.callDurationString.getter(a1, (SEL *)&selRef_callDurationString);
  if (v4)
  {
    v5 = v3;
    swift_beginAccess();
    *a2 = 1;
  }
  else
  {
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSString);
    v6 = (void *)NSString.init(stringLiteral:)();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1BD645380;
    v8 = MEMORY[0x1E0DEB418];
    v9 = MEMORY[0x1E0DEB490];
    *(_QWORD *)(v7 + 56) = MEMORY[0x1E0DEB418];
    *(_QWORD *)(v7 + 64) = v9;
    *(_QWORD *)(v7 + 32) = 0;
    *(_QWORD *)(v7 + 96) = v8;
    *(_QWORD *)(v7 + 104) = v9;
    *(_QWORD *)(v7 + 72) = 0;
    v10 = (void *)static NSString.localizedStringWithFormat(_:_:)();

    swift_bridgeObjectRelease();
    v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  }
  return v5;
}

uint64_t static CallParticipantLabelDescriptor.organizationName(for:)(void *a1)
{
  uint64_t (*v2)(void *);
  uint64_t v3;

  OUTLINED_FUNCTION_2_0();
  v2 = (uint64_t (*)(void *))static CallParticipantLabelDescriptor.organizationNameProvider;
  swift_retain();
  v3 = v2(a1);
  swift_release();
  return v3;
}

uint64_t static CallParticipantLabelDescriptor.identificationCategoryDisplayString(for:)(void *a1)
{
  NSBundle v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  unint64_t v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  unsigned int v18;
  id v19;
  id v20;
  id v21;
  Swift::String_optional v22;
  Swift::String v23;
  uint64_t v24;
  uint64_t v26;

  switch((unint64_t)objc_msgSend(a1, sel_identificationCategory))
  {
    case 3uLL:
      v3 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
      v4 = OUTLINED_FUNCTION_2_113() & 0xFFFFFFFFFFFFLL | 0x5542000000000000;
      v5 = 0x5353454E4953;
      goto LABEL_9;
    case 4uLL:
    case 7uLL:
      v9 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
      OUTLINED_FUNCTION_49_42();
      OUTLINED_FUNCTION_61();
      break;
    case 5uLL:
      v6 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
      v4 = OUTLINED_FUNCTION_2_113() & 0xFFFFFFFFFFFFLL | 0x4D45000000000000;
      v7 = 0xEF59434E45475245;
      break;
    case 6uLL:
      v8 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
      v4 = OUTLINED_FUNCTION_2_113() & 0xFFFFFFFFFFFFLL | 0x5246000000000000;
      v7 = 0xEB00000000445541;
      break;
    case 8uLL:
      v10 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
      v4 = OUTLINED_FUNCTION_2_113() & 0xFFFFFFFFFFFFLL | 0x4548000000000000;
      v11 = 1213484097;
      goto LABEL_15;
    case 9uLL:
    case 0xDuLL:
    case 0x12uLL:
      v20 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
      OUTLINED_FUNCTION_6_8();
      OUTLINED_FUNCTION_61();
      v4 = 0xD000000000000013;
      break;
    case 0xAuLL:
      v12 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
      v4 = OUTLINED_FUNCTION_2_113() & 0xFFFFFFFFFFFFLL | 0x4F4E000000000000;
      v7 = 0xEF5449464F52504ELL;
      break;
    case 0xBuLL:
      v13 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
      v4 = OUTLINED_FUNCTION_2_113() & 0xFFFFFFFFFFFFLL | 0x4550000000000000;
      v5 = 0x4C414E4F5352;
LABEL_9:
      v7 = v5 & 0xFFFFFFFFFFFFLL | 0xEE00000000000000;
      break;
    case 0xCuLL:
      v14 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
      v4 = OUTLINED_FUNCTION_2_113() & 0xFFFFFFFFFFFFLL | 0x4F50000000000000;
      v7 = 0xEF4C41434954494CLL;
      break;
    case 0xEuLL:
      v15 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
      v4 = OUTLINED_FUNCTION_2_113() & 0xFFFFFFFFFFFFLL | 0x5250000000000000;
      v11 = 1313821513;
      goto LABEL_15;
    case 0x10uLL:
      v17 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
      v4 = OUTLINED_FUNCTION_2_113() & 0xFFFFFFFFFFFFLL | 0x5053000000000000;
      v18 = 1162235727;
      goto LABEL_18;
    case 0x11uLL:
      v19 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
      v4 = OUTLINED_FUNCTION_2_113() & 0xFFFFFFFFFFFFLL | 0x5553000000000000;
      v11 = 1497716306;
LABEL_15:
      v7 = v11 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
      break;
    case 0x13uLL:
      v21 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
      v4 = OUTLINED_FUNCTION_2_113() & 0xFFFFFFFFFFFFLL | 0x5254000000000000;
      v18 = 1163154261;
LABEL_18:
      v7 = v18 | 0xED00004400000000;
      break;
    default:
      v16 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
      v4 = OUTLINED_FUNCTION_2_113() & 0xFFFFFFFFFFFFLL | 0x554A000000000000;
      v7 = 0xEA00000000004B4ELL;
      break;
  }
  v22.value._countAndFlagsBits = 0x746174536C6C6143;
  v22.value._object = (void *)0xEA00000000007375;
  v23._countAndFlagsBits = 0;
  v23._object = (void *)0xE000000000000000;
  v24 = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v4, v22, v1, v23, *(Swift::String *)(&v26 - 1));
  OUTLINED_FUNCTION_73();
  return v2;
}

uint64_t closure #1 in variable initialization expression of static CallParticipantLabelDescriptor.organizationNameProvider(void *a1)
{
  _QWORD *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  Class isa;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  id v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v49;
  id v50[4];

  v50[3] = *(id *)MEMORY[0x1E0C80C00];
  v2 = (_QWORD *)outlined bridged method (pb) of @objc TUCall.contactIdentifiers.getter(a1);
  if (!v2)
    return 0;
  if (!v2[2])
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  v4 = (void *)v2[4];
  v3 = (void *)v2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend((id)objc_opt_self(), sel_tu_contactStoreConfigurationForCall_, a1);
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97298]), sel_initWithConfiguration_, v5);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1BD644140;
  v8 = (void *)*MEMORY[0x1E0C966D0];
  v9 = (void *)*MEMORY[0x1E0C96780];
  *(_QWORD *)(v7 + 32) = *MEMORY[0x1E0C966D0];
  *(_QWORD *)(v7 + 40) = v9;
  v10 = (void *)*MEMORY[0x1E0C966C0];
  v11 = (void *)*MEMORY[0x1E0C967B8];
  *(_QWORD *)(v7 + 48) = *MEMORY[0x1E0C966C0];
  *(_QWORD *)(v7 + 56) = v11;
  specialized Array._endMutation()();
  v12 = v8;
  v13 = v9;
  v49 = v10;
  v14 = v11;
  v15 = (void *)MEMORY[0x1C3B72E00](v4, v3);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for CNKeyDescriptor);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v50[0] = 0;
  v17 = objc_msgSend(v6, sel_unifiedContactWithIdentifier_keysToFetch_error_, v15, isa, v50);

  if (!v17)
  {
    v41 = v50[0];
    v42 = (void *)_convertNSErrorToError(_:)();

    swift_willThrow();
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v43 = swift_allocObject();
    *(_OWORD *)(v43 + 16) = xmmword_1BD6441D0;
    v50[0] = v4;
    v50[1] = v3;
    v44 = MEMORY[0x1E0DEA968];
    v45 = String.init<A>(reflecting:)();
    v47 = v46;
    *(_QWORD *)(v43 + 56) = v44;
    *(_QWORD *)(v43 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v43 + 32) = v45;
    *(_QWORD *)(v43 + 40) = v47;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();

    goto LABEL_26;
  }
  v18 = v50[0];
  swift_bridgeObjectRelease();
  if (!objc_msgSend(v17, sel_isKeyAvailable_, v14))
    goto LABEL_22;
  v19 = objc_msgSend(v17, sel_organizationName);
  v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v22 = v21;

  swift_bridgeObjectRelease();
  v23 = HIBYTE(v22) & 0xF;
  if ((v22 & 0x2000000000000000) == 0)
    v23 = v20 & 0xFFFFFFFFFFFFLL;
  if (!v23)
  {
LABEL_22:

LABEL_26:
    return 0;
  }
  if (!objc_msgSend(v17, sel_isKeyAvailable_, v12))
    goto LABEL_19;
  v24 = objc_msgSend(v17, sel_givenName);
  v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v27 = v26;

  swift_bridgeObjectRelease();
  v28 = HIBYTE(v27) & 0xF;
  if ((v27 & 0x2000000000000000) == 0)
    v28 = v25 & 0xFFFFFFFFFFFFLL;
  if (!v28)
  {
LABEL_19:
    if (!objc_msgSend(v17, sel_isKeyAvailable_, v13))
      goto LABEL_32;
    v29 = objc_msgSend(v17, sel_middleName);
    v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v32 = v31;

    swift_bridgeObjectRelease();
    v33 = HIBYTE(v32) & 0xF;
    if ((v32 & 0x2000000000000000) == 0)
      v33 = v30 & 0xFFFFFFFFFFFFLL;
    if (!v33)
    {
LABEL_32:
      if (!objc_msgSend(v17, sel_isKeyAvailable_, v49))
        goto LABEL_29;
      v34 = objc_msgSend(v17, sel_familyName);
      v35 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v37 = v36;

      swift_bridgeObjectRelease();
      v38 = HIBYTE(v37) & 0xF;
      if ((v37 & 0x2000000000000000) == 0)
        v38 = v35 & 0xFFFFFFFFFFFFLL;
      if (!v38)
      {
LABEL_29:

        return 0;
      }
    }
  }
  v39 = objc_msgSend(v17, sel_organizationName);
  v40 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v40;
}

void CNKCallParticipantLabelDescriptorFactory.organizationNameProvider.getter()
{
  OUTLINED_FUNCTION_2_0();
  swift_retain();
  OUTLINED_FUNCTION_32();
}

void CNKCallParticipantLabelDescriptorFactory.organizationNameProvider.setter(uint64_t (*a1)(), uint64_t a2)
{
  OUTLINED_FUNCTION_2_0();
  static CallParticipantLabelDescriptor.organizationNameProvider = a1;
  qword_1EF4CDA58 = a2;
  swift_release();
  OUTLINED_FUNCTION_9_0();
}

void static CallParticipantLabelDescriptor.organizationNameProvider.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

id CallParticipantLabelDescriptor.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void CallParticipantLabelDescriptor.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id CallParticipantLabelDescriptor.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CallParticipantLabelDescriptor();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t @objc TUCall.disconnectedReasonRequiresCallBackUI.getter(void *a1)
{
  id v1;
  char v2;

  v1 = a1;
  v2 = TUCall.disconnectedReasonRequiresCallBackUI.getter();

  return v2 & 1;
}

uint64_t TUCall.disconnectedReasonRequiresCallBackUI.getter()
{
  void *v0;
  void *v1;
  unsigned int v2;
  id v4;
  id v5;
  uint64_t v6;
  unsigned int v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  BOOL v12;
  id v13;
  unsigned int v15;

  v1 = v0;
  v2 = objc_msgSend(v0, sel_disconnectedReason);
  if (v2 > 0x18 || ((1 << v2) & 0x1C2C020) == 0)
    return 0;
  v4 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v5 = objc_msgSend(v4, sel_activeConversationForCall_, v1);

  if (v5)
  {
    v7 = OUTLINED_FUNCTION_9(v6, sel_isOneToOneModeEnabled);
  }
  else
  {
    v8 = objc_msgSend(v1, sel_remoteParticipantHandles);
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
    lazy protocol witness table accessor for type TUHandle and conformance NSObject();
    v9 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    v10 = specialized Set.count.getter(v9);
    OUTLINED_FUNCTION_53();
    v7 = v10 == 1;
  }
  type metadata accessor for SpringBoardUtilities();
  OUTLINED_FUNCTION_61();
  v11 = static SpringBoardUtilities.checkSpringBoardState(for:)();
  v12 = v11;
  v13 = OUTLINED_FUNCTION_123(v11, sel_isIncoming);
  if ((_DWORD)v13 && (v13 = OUTLINED_FUNCTION_123((uint64_t)v13, sel_isConnecting), !(_DWORD)v13) || v12)
  {

    return 0;
  }
  v15 = OUTLINED_FUNCTION_123((uint64_t)v13, sel_isConversation);

  return v15 ^ 1 | v7;
}

uint64_t @objc TUCall.disconnectedReasonRequiresCallFailureUI.getter(void *a1)
{
  id v1;
  char v2;

  v1 = a1;
  v2 = TUCall.disconnectedReasonRequiresCallFailureUI.getter();

  return v2 & 1;
}

uint64_t TUCall.disconnectedReasonRequiresCallFailureUI.getter()
{
  void *v0;
  unsigned int v1;

  v1 = objc_msgSend(v0, sel_disconnectedReason);
  return (v1 < 0x19) & (0x1C24000u >> v1);
}

uint64_t type metadata accessor for CallParticipantLabelDescriptor()
{
  return objc_opt_self();
}

void outlined bridged method (pb) of @objc TUCall.callDurationString.getter(void *a1)
{
  outlined bridged method (pb) of @objc TUCall.callDurationString.getter(a1, (SEL *)&selRef_callDurationString);
}

void outlined bridged method (pb) of @objc TUCall.callDurationString.getter(void *a1, SEL *a2)
{
  id v2;
  void *v3;

  v2 = objc_msgSend(a1, *a2);
  if (v2)
  {
    v3 = v2;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    OUTLINED_FUNCTION_152_3();

  }
  OUTLINED_FUNCTION_18();
}

char *keypath_get_selector_organizationNameProvider()
{
  return sel_organizationNameProvider;
}

void sub_1BD3E5A98()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x80))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD3E5AD0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x98))();
  v0[1] = v2;
  OUTLINED_FUNCTION_0();
}

void sub_1BD3E5B08()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0xB0))();
  v0[1] = v2;
  OUTLINED_FUNCTION_0();
}

void sub_1BD3E5B40()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0xC8))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD3E5B74(_QWORD *a1, _QWORD **a2)
{
  (*(void (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & **a2) + 0xD0))(*a1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD3E5BAC()
{
  _BYTE *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0xE0))() & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD3E5BE4(uint64_t a1, uint64_t **a2)
{
  OUTLINED_FUNCTION_16_3(**a2);
  OUTLINED_FUNCTION_0();
}

void sub_1BD3E5C14()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0xF8))();
  v0[1] = v2;
  OUTLINED_FUNCTION_0();
}

void type metadata accessor for CNKCallParticipantLabelDescriptorFactory(uint64_t a1)
{
  type metadata accessor for NSObject(a1, &lazy cache variable for type metadata for CNKCallParticipantLabelDescriptorFactory);
}

uint64_t method lookup function for CallParticipantLabelDescriptor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CallParticipantLabelDescriptor.strings.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of CallParticipantLabelDescriptor.strings.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of CallParticipantLabelDescriptor.strings.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of CallParticipantLabelDescriptor.secondaryString.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of CallParticipantLabelDescriptor.secondaryString.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of CallParticipantLabelDescriptor.secondaryString.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of CallParticipantLabelDescriptor.durationString.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of CallParticipantLabelDescriptor.durationString.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of CallParticipantLabelDescriptor.durationString.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of CallParticipantLabelDescriptor.layoutState.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of CallParticipantLabelDescriptor.layoutState.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of CallParticipantLabelDescriptor.layoutState.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of CallParticipantLabelDescriptor.isDynamic.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of CallParticipantLabelDescriptor.isDynamic.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of CallParticipantLabelDescriptor.isDynamic.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of CallParticipantLabelDescriptor.localizedSenderIdentity.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of CallParticipantLabelDescriptor.localizedSenderIdentity.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of CallParticipantLabelDescriptor.localizedSenderIdentity.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of CallParticipantLabelDescriptor.__allocating_init(strings:secondaryString:durationString:layoutState:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 272))();
}

uint64_t dispatch thunk of static CallParticipantLabelDescriptor.organizationName(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 280))();
}

uint64_t dispatch thunk of static CallParticipantLabelDescriptor.identificationCategoryDisplayString(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 288))();
}

uint64_t sub_1BD3E5E7C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t partial apply for thunk for @escaping @callee_unowned @convention(block) (@unowned TUCall) -> (@autoreleased NSString?)(uint64_t a1)
{
  uint64_t v1;

  return thunk for @escaping @callee_unowned @convention(block) (@unowned TUCall) -> (@autoreleased NSString?)(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BD3E5EA8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed TUCall) -> (@out String?)(uint64_t a1)
{
  uint64_t v1;

  return thunk for @escaping @callee_guaranteed (@in_guaranteed TUCall) -> (@out String?)(a1, *(void (**)(uint64_t *__return_ptr, uint64_t *))(v1 + 16));
}

void partial apply for thunk for @escaping @callee_guaranteed (@guaranteed TUCall) -> (@owned String?)(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  *a2 = (*(uint64_t (**)(_QWORD))(v2 + 16))(*a1);
  a2[1] = v4;
  OUTLINED_FUNCTION_0();
}

uint64_t OUTLINED_FUNCTION_39_53()
{
  return String.init(format:_:)();
}

void CallScreening.MachineStateObserver.init(logger:stateMachine:statusService:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;

  v8 = OUTLINED_FUNCTION_17_2();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a4, a1, v8);
  v9 = type metadata accessor for CallScreening.MachineStateObserver(0);
  *(_QWORD *)(a4 + *(int *)(v9 + 20)) = a2;
  *(_QWORD *)(a4 + *(int *)(v9 + 24)) = a3;
  OUTLINED_FUNCTION_18();
}

uint64_t type metadata accessor for CallScreening.MachineStateObserver(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for CallScreening.MachineStateObserver);
}

void CallScreening.MachineStateObserver.start()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = v0;
  v2 = OUTLINED_FUNCTION_51_37();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x1E0C80A78](v2);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static TaskPriority.userInitiated.getter();
  v8 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v8);
  outlined init with copy of CallScreening.MachineStateObserver(v1, (uint64_t)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (one-time initialization token for shared != -1)
    swift_once();
  v9 = static CKStateMachineActor.shared;
  v10 = lazy protocol witness table accessor for type CKStateMachineActor.ActorType and conformance CKStateMachineActor.ActorType();
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v9;
  *(_QWORD *)(v12 + 24) = v10;
  outlined init with take of CallScreening.MachineStateObserver((uint64_t)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v12 + v11);
  swift_retain();
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
}

BOOL BackgroundTask.isInvalid.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0
                   + OBJC_IVAR____TtC15ConversationKitP33_63743B1C6178440FC5E37EF7A84CACCF14BackgroundTask_backgroundTask) == *MEMORY[0x1E0DC4878];
}

uint64_t BackgroundTask.init(onExpire:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;

  v3 = v2;
  v6 = v2 + OBJC_IVAR____TtC15ConversationKitP33_63743B1C6178440FC5E37EF7A84CACCF14BackgroundTask_logger;
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v7 = type metadata accessor for Logger();
  v8 = __swift_project_value_buffer(v7, (uint64_t)&static Logger.conversationKit);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v6, v8, v7);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC15ConversationKitP33_63743B1C6178440FC5E37EF7A84CACCF14BackgroundTask_backgroundTask) = *MEMORY[0x1E0DC4878];
  v9 = (_QWORD *)(v3 + OBJC_IVAR____TtC15ConversationKitP33_63743B1C6178440FC5E37EF7A84CACCF14BackgroundTask_onExpire);
  *v9 = a1;
  v9[1] = a2;
  swift_retain();
  v10 = Logger.logObject.getter();
  v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    v17 = v13;
    *(_DWORD *)v12 = 136446210;
    v14 = _typeName(_:qualified:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v14, v15, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v10, v11, "%{public}s created", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v13, -1, -1);
    MEMORY[0x1C3B751B8](v12, -1, -1);
  }

  swift_release();
  return v3;
}

void BackgroundTask.end()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  uint64_t v15;
  NSObject *oslog;
  uint64_t v17;

  v1 = v0;
  v2 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtC15ConversationKitP33_63743B1C6178440FC5E37EF7A84CACCF14BackgroundTask_backgroundTask);
  v3 = *MEMORY[0x1E0DC4878];
  oslog = Logger.logObject.getter();
  if (v2 == v3)
  {
    v4 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      v6 = swift_slowAlloc();
      v17 = v6;
      *(_DWORD *)v5 = 136446210;
      v7 = _typeName(_:qualified:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v7, v8, &v17);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD004000, oslog, v4, "%{public}s end failed", v5, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v6, -1, -1);
      MEMORY[0x1C3B751B8](v5, -1, -1);

    }
    else
    {

    }
  }
  else
  {
    v9 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      v11 = swift_slowAlloc();
      v17 = v11;
      *(_DWORD *)v10 = 136446210;
      v12 = _typeName(_:qualified:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v12, v13, &v17);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD004000, oslog, v9, "%{public}s endBackgroundTask", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v11, -1, -1);
      MEMORY[0x1C3B751B8](v10, -1, -1);
    }

    v14 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
    v15 = OBJC_IVAR____TtC15ConversationKitP33_63743B1C6178440FC5E37EF7A84CACCF14BackgroundTask_backgroundTask;
    objc_msgSend(v14, sel_endBackgroundTask_, *(_QWORD *)(v1+ OBJC_IVAR____TtC15ConversationKitP33_63743B1C6178440FC5E37EF7A84CACCF14BackgroundTask_backgroundTask));

    *(_QWORD *)(v1 + v15) = v3;
  }
}

void BackgroundTask.start()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  _QWORD *v11;
  void *v12;
  id v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  NSObject *oslog;
  uint64_t aBlock[6];
  uint64_t v21;

  v1 = v0;
  v2 = *v0;
  v3 = *(_QWORD *)((char *)v0
                 + OBJC_IVAR____TtC15ConversationKitP33_63743B1C6178440FC5E37EF7A84CACCF14BackgroundTask_backgroundTask);
  v4 = *MEMORY[0x1E0DC4878];
  oslog = Logger.logObject.getter();
  if (v3 == v4)
  {
    v5 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v5))
    {
      v6 = swift_slowAlloc();
      v7 = swift_slowAlloc();
      aBlock[0] = v7;
      *(_DWORD *)v6 = 136446466;
      v8 = _typeName(_:qualified:)();
      v21 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v8, v9, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v6 + 12) = 2082;
      v21 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000010, 0x80000001BD689830, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl(&dword_1BD004000, oslog, v5, "%{public}s beginBackgroundTask %{public}s", (uint8_t *)v6, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v7, -1, -1);
      MEMORY[0x1C3B751B8](v6, -1, -1);
    }

    v10 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
    v11 = (_QWORD *)swift_allocObject();
    v11[2] = v1;
    v11[3] = 0xD000000000000010;
    v11[4] = 0x80000001BD689830;
    v11[5] = v2;
    aBlock[4] = (uint64_t)partial apply for closure #1 in BackgroundTask.start();
    aBlock[5] = (uint64_t)v11;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)thunk for @escaping @callee_guaranteed @Sendable () -> ();
    aBlock[3] = (uint64_t)&block_descriptor_78;
    v12 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    v13 = outlined bridged method (mbgnnn) of @objc UIApplication.beginBackgroundTask(withName:expirationHandler:)(0xD000000000000010, 0x80000001BD689830, (uint64_t)v12, v10);
    _Block_release(v12);

    *(_QWORD *)((char *)v1
              + OBJC_IVAR____TtC15ConversationKitP33_63743B1C6178440FC5E37EF7A84CACCF14BackgroundTask_backgroundTask) = v13;
  }
  else
  {
    v14 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v16 = swift_slowAlloc();
      aBlock[0] = v16;
      *(_DWORD *)v15 = 136446210;
      v17 = _typeName(_:qualified:)();
      v21 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v17, v18, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD004000, oslog, v14, "%{public}s start failed", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v16, -1, -1);
      MEMORY[0x1C3B751B8](v15, -1, -1);

    }
    else
    {

    }
  }
}

uint64_t closure #1 in BackgroundTask.start()(uint64_t a1, uint64_t a2, unint64_t a3)
{
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  void (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v15;

  swift_bridgeObjectRetain_n();
  v6 = Logger.logObject.getter();
  v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc();
    v9 = swift_slowAlloc();
    v15 = v9;
    *(_DWORD *)v8 = 136446466;
    v10 = _typeName(_:qualified:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v10, v11, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2082;
    swift_bridgeObjectRetain();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a2, a3, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1BD004000, v6, v7, "%{public}s backgroundTask %{public}s expired", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v9, -1, -1);
    MEMORY[0x1C3B751B8](v8, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v12 = *(void (**)(uint64_t))(a1
                                       + OBJC_IVAR____TtC15ConversationKitP33_63743B1C6178440FC5E37EF7A84CACCF14BackgroundTask_onExpire);
  v13 = swift_retain();
  v12(v13);
  return swift_release();
}

uint64_t BackgroundTask.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC15ConversationKitP33_63743B1C6178440FC5E37EF7A84CACCF14BackgroundTask_logger;
  v2 = type metadata accessor for Logger();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t CallScreening.MachineStateObserver.logger.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_17_2();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t CallScreening.MachineStateObserver.stateMachine.getter()
{
  type metadata accessor for CallScreening.MachineStateObserver(0);
  return swift_retain();
}

uint64_t CallScreening.MachineStateObserver.statusService.getter()
{
  OUTLINED_FUNCTION_51_37();
  return swift_retain();
}

uint64_t closure #1 in CallScreening.MachineStateObserver.start()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4[40] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncPublisher<CurrentValueSubject<CKStateMachine<CallScreening.State>.StateUpdate, Never>>);
  v4[41] = v5;
  v4[42] = *(_QWORD *)(v5 - 8);
  v4[43] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncPublisher<CurrentValueSubject<CKStateMachine<CallScreening.State>.StateUpdate, Never>>.Iterator);
  v4[44] = v6;
  v4[45] = *(_QWORD *)(v6 - 8);
  v4[46] = swift_task_alloc();
  v7 = type metadata accessor for Logger();
  v4[47] = v7;
  v4[48] = *(_QWORD *)(v7 - 8);
  v4[49] = swift_task_alloc();
  v4[50] = swift_task_alloc();
  v4[51] = swift_task_alloc();
  v8 = type metadata accessor for CallScreening.MachineStateObserver(0);
  v4[52] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v4[53] = v9;
  v4[54] = *(_QWORD *)(v9 + 64);
  v4[55] = swift_task_alloc();
  if (one-time initialization token for shared != -1)
    swift_once();
  v4[56] = static CKStateMachineActor.shared;
  return swift_task_switch();
}

uint64_t closure #1 in CallScreening.MachineStateObserver.start()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v1 = v0[55];
  v2 = v0[53];
  v3 = v0[40];
  v0[33] = 0;
  v0[34] = 0;
  outlined init with copy of CallScreening.MachineStateObserver(v3, v1);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  v0[57] = v5;
  outlined init with take of CallScreening.MachineStateObserver(v1, v5 + v4);
  OUTLINED_FUNCTION_48_2();
  v0[58] = OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_56_0();
  OUTLINED_FUNCTION_63_1();
  return OUTLINED_FUNCTION_1_3();
}

{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 456);
  swift_release();
  type metadata accessor for BackgroundTask(0);
  swift_allocObject();
  *(_QWORD *)(v0 + 472) = BackgroundTask.init(onExpire:)((uint64_t)partial apply for closure #1 in closure #1 in CallScreening.MachineStateObserver.start(), v1);
  return OUTLINED_FUNCTION_0_6();
}

{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t, uint64_t);
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v21;

  v1 = v0[51];
  v2 = v0[47];
  v3 = v0[40];
  v4 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[48] + 16);
  v0[60] = v4;
  v4(v1, v3, v2);
  v5 = Logger.logObject.getter();
  v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    *(_WORD *)OUTLINED_FUNCTION_105() = 0;
    OUTLINED_FUNCTION_7_5(&dword_1BD004000, v5, v7, "Started listening to StateMachine changes for StateMachine");
    OUTLINED_FUNCTION_60();
  }
  v8 = v0[51];
  v9 = v0[52];
  v11 = v0[47];
  v10 = v0[48];
  v12 = v0[43];
  v21 = v0[42];
  v13 = v0[40];
  v14 = v0[41];

  v15 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  v0[61] = v15;
  v15(v8, v11);
  v16 = *(_QWORD *)(v13 + *(int *)(v9 + 20));
  v0[37] = *(_QWORD *)(v16 + *(_QWORD *)(*(_QWORD *)v16 + 120));
  v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<CKStateMachine<CallScreening.State>.StateUpdate, Never>);
  v18 = lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type CurrentValueSubject<CKStateMachine<CallScreening.State>.StateUpdate, Never> and conformance CurrentValueSubject<A, B>, &demangling cache variable for type metadata for CurrentValueSubject<CKStateMachine<CallScreening.State>.StateUpdate, Never>, MEMORY[0x1E0C95FB8]);
  MEMORY[0x1C3B71234](v17, v18);
  AsyncPublisher.makeAsyncIterator()();
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v12, v14);
  v0[63] = OUTLINED_FUNCTION_47_25(static CKStateMachineActor.shared);
  lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type AsyncPublisher<CurrentValueSubject<CKStateMachine<CallScreening.State>.StateUpdate, Never>>.Iterator and conformance AsyncPublisher<A>.Iterator, &demangling cache variable for type metadata for AsyncPublisher<CurrentValueSubject<CKStateMachine<CallScreening.State>.StateUpdate, Never>>.Iterator, MEMORY[0x1E0C95E78]);
  v19 = (_QWORD *)swift_task_alloc();
  v0[64] = v19;
  *v19 = v0;
  v19[1] = closure #1 in CallScreening.MachineStateObserver.start();
  return dispatch thunk of AsyncIteratorProtocol.next()();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  *(_QWORD *)(*v1 + 520) = v0;
  swift_task_dealloc();
  v3 = *(_QWORD *)(v2 + 496);
  if (v0)
  {
    if (v3)
      goto LABEL_5;
  }
  else if (v3)
  {
LABEL_5:
    OUTLINED_FUNCTION_57_16();
    OUTLINED_FUNCTION_55_31();
  }
  return OUTLINED_FUNCTION_1_3();
}

{
  uint64_t v0;
  __int128 v1;

  v1 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 528) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 544) = v1;
  *(_OWORD *)(v0 + 560) = *(_OWORD *)(v0 + 48);
  *(_QWORD *)(v0 + 576) = *(_QWORD *)(v0 + 64);
  *(_BYTE *)(v0 + 73) = *(_BYTE *)(v0 + 72);
  return swift_task_switch();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unsigned __int8 v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unsigned __int8 v20;
  NSObject *v21;
  os_log_type_t v22;
  _BOOL4 v23;
  int v24;
  uint64_t v25;
  _DWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unsigned __int8 v35;
  uint64_t v36;
  uint64_t v37;
  unsigned __int8 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unsigned __int8 v43;
  uint64_t v44;
  unint64_t v45;
  void (*v46)(NSObject *, uint64_t, uint64_t);
  NSObject *v47;
  uint64_t v48;
  uint64_t v49;
  os_log_type_t v50;
  uint64_t v51;
  void (*v52)(uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unsigned __int8 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unsigned __int8 v65;
  uint64_t v66;
  uint64_t v67;
  unsigned __int8 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unsigned __int8 v73;
  uint64_t v74;
  uint64_t v75;
  unsigned __int8 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unsigned __int8 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unsigned __int8 v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v105;
  uint64_t v106;
  unsigned __int8 v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  _QWORD *v112;
  os_log_type_t v113;
  uint64_t v114;
  _DWORD *v115;
  void (*v116)(uint64_t, uint64_t);
  Swift::String v117;
  Swift::String v118;

  if (*(unsigned __int8 *)(v0 + 73) == 255)
  {
    v46 = *(void (**)(NSObject *, uint64_t, uint64_t))(v0 + 480);
    v47 = *(NSObject **)(v0 + 400);
    v48 = *(_QWORD *)(v0 + 376);
    v49 = *(_QWORD *)(v0 + 320);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 360) + 8))(*(_QWORD *)(v0 + 368), *(_QWORD *)(v0 + 352));
    swift_bridgeObjectRelease();
    v46(v47, v49, v48);
    Logger.logObject.getter();
    v50 = OUTLINED_FUNCTION_12_0();
    if (os_log_type_enabled(v47, v50))
    {
      *(_WORD *)OUTLINED_FUNCTION_105() = 0;
      OUTLINED_FUNCTION_7_5(&dword_1BD004000, v47, v51, "stopped listening to changes for StateMachine");
      OUTLINED_FUNCTION_60();
    }
    v52 = *(void (**)(uint64_t, uint64_t))(v0 + 488);
    v53 = *(_QWORD *)(v0 + 400);
    v54 = *(_QWORD *)(v0 + 376);
    swift_release();

    v52(v53, v54);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_310();
    __asm { BR              X0 }
  }
  OUTLINED_FUNCTION_24_56();
  v4 = *(_QWORD *)(v0 + 392);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(v0 + 480))(v4, *(_QWORD *)(v0 + 320), *(_QWORD *)(v0 + 376));
  v5 = OUTLINED_FUNCTION_21_77();
  outlined copy of CKStateMachine<CallScreening.State>.StateUpdate?(v5, v6, v7, v8, v9, v10, v11, v12);
  v13 = OUTLINED_FUNCTION_21_77();
  outlined copy of CKStateMachine<CallScreening.State>.StateUpdate(v13, v14, v15, v16, v17, v18, v19, v20);
  v21 = Logger.logObject.getter();
  v22 = static os_log_type_t.default.getter();
  v23 = os_log_type_enabled(v21, v22);
  v24 = *(unsigned __int8 *)(v0 + 73);
  if (v23)
  {
    v113 = v22;
    v25 = v0 + 304;
    v26 = (_DWORD *)OUTLINED_FUNCTION_105();
    *(_QWORD *)(v0 + 304) = OUTLINED_FUNCTION_105();
    v115 = v26;
    *v26 = 136446210;
    if (v24)
    {
      if (v24 == 1)
      {
        v27 = *(_QWORD *)(v0 + 576);
        OUTLINED_FUNCTION_27_55();
        *(_QWORD *)(v0 + 192) = v25;
        *(_QWORD *)(v0 + 200) = v26;
        *(_QWORD *)(v0 + 208) = v1;
        *(_QWORD *)(v0 + 216) = v2;
        *(_QWORD *)(v0 + 224) = v4;
        *(_QWORD *)(v0 + 232) = v3;
        *(_QWORD *)(v0 + 240) = v27;
        *(_QWORD *)(v0 + 280) = 0x2064657265746E45;
        *(_QWORD *)(v0 + 288) = 0xE800000000000000;
        v28 = OUTLINED_FUNCTION_18_79();
        outlined copy of CKStateMachine<CallScreening.State>.StateUpdate?(v28, v29, v30, v31, v32, v33, v34, v35);
        v36 = OUTLINED_FUNCTION_18_79();
        outlined copy of CKStateMachine<CallScreening.State>.StateUpdate(v36, v37, v38, v39, v40, v41, v42, v43);
        CallScreening.State.description.getter();
        OUTLINED_FUNCTION_48_41(v117);
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_14_92();
        OUTLINED_FUNCTION_14_92();
        v44 = *(_QWORD *)(v0 + 280);
        v45 = *(_QWORD *)(v0 + 288);
      }
      else
      {
        v74 = OUTLINED_FUNCTION_1_129();
        outlined consume of CKStateMachine<CallScreening.State>.StateUpdate?(v74, v75, v76, v77, v78, v79, v80, 2u);
        v45 = 0xE700000000000000;
        v44 = 0x65756C61566F6ELL;
      }
    }
    else
    {
      v57 = *(_QWORD *)(v0 + 576);
      OUTLINED_FUNCTION_27_55();
      *(_QWORD *)(v0 + 80) = v25;
      *(_QWORD *)(v0 + 88) = v26;
      *(_QWORD *)(v0 + 96) = v1;
      *(_QWORD *)(v0 + 104) = v2;
      *(_QWORD *)(v0 + 112) = v4;
      *(_QWORD *)(v0 + 120) = v3;
      *(_QWORD *)(v0 + 128) = v57;
      *(_QWORD *)(v0 + 248) = 0x20676E6974697845;
      *(_QWORD *)(v0 + 256) = 0xE800000000000000;
      v58 = OUTLINED_FUNCTION_17_68();
      outlined copy of CKStateMachine<CallScreening.State>.StateUpdate?(v58, v59, v60, v61, v62, v63, v64, v65);
      v66 = OUTLINED_FUNCTION_17_68();
      outlined copy of CKStateMachine<CallScreening.State>.StateUpdate(v66, v67, v68, v69, v70, v71, v72, v73);
      CallScreening.State.description.getter();
      OUTLINED_FUNCTION_48_41(v118);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_13_97();
      OUTLINED_FUNCTION_13_97();
      v44 = *(_QWORD *)(v0 + 248);
      v45 = *(_QWORD *)(v0 + 256);
    }
    *(_QWORD *)(v115 + 1) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v44, v45, (uint64_t *)(v0 + 304));
    swift_bridgeObjectRelease();
    v81 = OUTLINED_FUNCTION_34_39();
    OUTLINED_FUNCTION_56_35(v81, v82, v83, v84, v85, v86);
    v87 = OUTLINED_FUNCTION_34_39();
    OUTLINED_FUNCTION_56_35(v87, v88, v89, v90, v91, v92);
    OUTLINED_FUNCTION_52_34(&dword_1BD004000, v21, v113, "StateMachine Reported statemachine update %{public}s");
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_24_56();
  v56 = *(_QWORD *)(v0 + 392);
  v114 = *(_QWORD *)(v0 + 376);
  v116 = *(void (**)(uint64_t, uint64_t))(v0 + 488);
  OUTLINED_FUNCTION_15_85();
  OUTLINED_FUNCTION_15_85();

  v116(v56, v114);
  if (*(_BYTE *)(v0 + 73))
  {
    if (*(_BYTE *)(v0 + 73) == 1)
    {
      v93 = OUTLINED_FUNCTION_1_129();
      *(_QWORD *)(v0 + 136) = v93;
      *(_QWORD *)(v0 + 144) = v94;
      *(_QWORD *)(v0 + 152) = v95;
      *(_QWORD *)(v0 + 160) = v96;
      *(_QWORD *)(v0 + 168) = v97;
      *(_QWORD *)(v0 + 176) = v98;
      *(_QWORD *)(v0 + 184) = v99;
      outlined copy of CKStateMachine<CallScreening.State>.StateUpdate(v93, v94, v95, v96, v97, v98, v99, 1u);
      v100 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 584) = v100;
      *v100 = v0;
      v100[1] = closure #1 in CallScreening.MachineStateObserver.start();
      OUTLINED_FUNCTION_310();
      return CallScreening.MachineStateObserver.handleNewStateEntered(stateChange:currentTrackedCallUUID:backgroundTask:)(v101, v102, v103);
    }
  }
  else
  {
    v105 = OUTLINED_FUNCTION_1_129();
    outlined consume of CKStateMachine<CallScreening.State>.StateUpdate?(v105, v106, v107, v108, v109, v110, v111, 0);
  }
  *(_QWORD *)(v0 + 504) = OUTLINED_FUNCTION_47_25(static CKStateMachineActor.shared);
  lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type AsyncPublisher<CurrentValueSubject<CKStateMachine<CallScreening.State>.StateUpdate, Never>>.Iterator and conformance AsyncPublisher<A>.Iterator, &demangling cache variable for type metadata for AsyncPublisher<CurrentValueSubject<CKStateMachine<CallScreening.State>.StateUpdate, Never>>.Iterator, MEMORY[0x1E0C95E78]);
  v112 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 512) = v112;
  OUTLINED_FUNCTION_29_58(v112);
  OUTLINED_FUNCTION_310();
  return dispatch thunk of AsyncIteratorProtocol.next()();
}

{
  uint64_t v0;

  *(_QWORD *)(v0 + 312) = *(_QWORD *)(v0 + 520);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
  swift_dynamicCast();
  return swift_willThrowTypedImpl();
}

{
  OUTLINED_FUNCTION_1_6();
  return OUTLINED_FUNCTION_4_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  _QWORD *v15;

  v1 = OUTLINED_FUNCTION_1_129();
  outlined consume of CKStateMachine<CallScreening.State>.StateUpdate?(v1, v2, v3, v4, v5, v6, v7, 1u);
  v8 = OUTLINED_FUNCTION_1_129();
  outlined consume of CKStateMachine<CallScreening.State>.StateUpdate?(v8, v9, v10, v11, v12, v13, v14, *(_BYTE *)(v0 + 73));
  *(_QWORD *)(v0 + 504) = OUTLINED_FUNCTION_47_25(static CKStateMachineActor.shared);
  lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type AsyncPublisher<CurrentValueSubject<CKStateMachine<CallScreening.State>.StateUpdate, Never>>.Iterator and conformance AsyncPublisher<A>.Iterator, &demangling cache variable for type metadata for AsyncPublisher<CurrentValueSubject<CKStateMachine<CallScreening.State>.StateUpdate, Never>>.Iterator, MEMORY[0x1E0C95E78]);
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 512) = v15;
  OUTLINED_FUNCTION_29_58(v15);
  return dispatch thunk of AsyncIteratorProtocol.next()();
}

uint64_t outlined init with copy of CallScreening.MachineStateObserver(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CallScreening.MachineStateObserver(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t closure #1 in closure #1 in CallScreening.MachineStateObserver.start()(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v11;

  v2 = type metadata accessor for Logger();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))(v6, a1, v2, v4);
  v7 = Logger.logObject.getter();
  v8 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_1BD004000, v7, v8, "MainAnsweringMachine: Recieved expiration notice for background task.", v9, 2u);
    MEMORY[0x1C3B751B8](v9, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t CallScreening.MachineStateObserver.handleNewStateEntered(stateChange:currentTrackedCallUUID:backgroundTask:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v4[39] = a3;
  v4[40] = v3;
  v4[37] = a1;
  v4[38] = a2;
  v5 = type metadata accessor for Logger();
  v4[41] = v5;
  v4[42] = *(_QWORD *)(v5 - 8);
  v4[43] = swift_task_alloc();
  v4[44] = swift_task_alloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

void CallScreening.MachineStateObserver.handleNewStateEntered(stateChange:currentTrackedCallUUID:backgroundTask:)()
{
  uint64_t v0;

  outlined init with take of CallScreening.State(*(__int128 **)(v0 + 296), v0 + 16);
  __asm { BR              X11 }
}

uint64_t sub_1BD3E78E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)(v1 + 304);
  OUTLINED_FUNCTION_53_37(a1);
  OUTLINED_FUNCTION_48_2();
  *v2 = 0;
  v2[1] = 0;
  *(_QWORD *)(v1 + 360) = static MainActor.shared.getter();
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_56_0();
  OUTLINED_FUNCTION_63_1();
  return OUTLINED_FUNCTION_12_95();
}

uint64_t CallScreening.MachineStateObserver.handleNewStateEntered(stateChange:currentTrackedCallUUID:backgroundTask:)()
{
  swift_release();
  BackgroundTask.end()();
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_4_4();
}

{
  _QWORD *v0;
  uint64_t *v1;
  unint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _DWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v1 = (uint64_t *)v0[38];
  v2 = v1[1];
  if (v2)
  {
    v3 = *v1;
    v4 = v0[44];
    OUTLINED_FUNCTION_19_66(v0[42]);
    OUTLINED_FUNCTION_45_38();
    Logger.logObject.getter();
    v5 = OUTLINED_FUNCTION_12_0();
    v6 = os_log_type_enabled(v4, v5);
    v7 = v0[44];
    v8 = v0[41];
    v9 = v0[42];
    if (v6)
    {
      v10 = (_DWORD *)OUTLINED_FUNCTION_105();
      v14 = OUTLINED_FUNCTION_105();
      *v10 = 136446210;
      OUTLINED_FUNCTION_35_0();
      v0[36] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v3, v2, &v14);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_43_49();
      OUTLINED_FUNCTION_52_34(&dword_1BD004000, v4, v5, "MainAnsweringMachine: Starting background task due to tracked call %{public}s");
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }
    OUTLINED_FUNCTION_22_5();

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    OUTLINED_FUNCTION_48_2();
    v0[46] = OUTLINED_FUNCTION_54_2();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_56_0();
  }
  else
  {
    v11 = v0[40];
    v12 = type metadata accessor for CallScreening.MachineStateObserver(0);
    v0[54] = v12;
    v0[55] = *(_QWORD *)(v11 + *(int *)(v12 + 24));
    OUTLINED_FUNCTION_48_2();
    v0[56] = OUTLINED_FUNCTION_54_2();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_56_0();
  }
  OUTLINED_FUNCTION_63_1();
  return OUTLINED_FUNCTION_12_95();
}

{
  swift_release();
  BackgroundTask.start()();
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_4_4();
}

{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = (_QWORD *)v0[38];
  v2 = v1[1];
  v0[47] = v2;
  v3 = v0[40];
  if (v2)
  {
    v0[48] = *v1;
    v4 = OUTLINED_FUNCTION_51_37();
    v0[49] = v4;
    v0[50] = *(_QWORD *)(v3 + *(int *)(v4 + 24));
    OUTLINED_FUNCTION_48_2();
    swift_bridgeObjectRetain();
    v0[51] = static MainActor.shared.getter();
  }
  else
  {
    v5 = type metadata accessor for CallScreening.MachineStateObserver(0);
    v0[54] = v5;
    v0[55] = *(_QWORD *)(v3 + *(int *)(v5 + 24));
    OUTLINED_FUNCTION_48_2();
    v0[56] = OUTLINED_FUNCTION_54_2();
  }
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_56_0();
  OUTLINED_FUNCTION_63_1();
  return OUTLINED_FUNCTION_0_6();
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  Swift::String v3;
  Swift::String v4;

  v2 = *(void **)(v0 + 376);
  v1 = *(_QWORD *)(v0 + 384);
  swift_release();
  v3._countAndFlagsBits = 0x6168436574617453;
  v3._object = (void *)0xEB0000000065676ELL;
  v4._countAndFlagsBits = v1;
  v4._object = v2;
  CallStatusService.currentStatus(updateSource:for:)((ConversationKit::AnsweringMachineCallStatus *)(v0 + 128), v3, v4);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_0_6();
}

{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 416) = v1;
  v2 = OUTLINED_FUNCTION_19_12(v1, (uint64_t)CallScreening.MachineStateObserver.handleNewStateEntered(stateChange:currentTrackedCallUUID:backgroundTask:));
  return OUTLINED_FUNCTION_9_92(v2);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 424) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_2_14();
    return OUTLINED_FUNCTION_0_6();
  }
  else
  {
    outlined release of AnsweringMachineCallStatus(v2 + 128);
    swift_task_dealloc();
    OUTLINED_FUNCTION_29_0();
    return OUTLINED_FUNCTION_6(*(uint64_t (**)(void))(v2 + 8));
  }
}

{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 456) = CallStatusService.currentStatusForAllCalls()();
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_4_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _QWORD *v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 456);
  v2 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 464) = v2;
  if (v2)
  {
    *(_DWORD *)(v0 + 124) = *(_DWORD *)(*(_QWORD *)(v0 + 432) + 20);
    *(_QWORD *)(v0 + 472) = 0;
    v4 = *(_OWORD *)(v1 + 48);
    v3 = *(_OWORD *)(v1 + 64);
    v5 = *(_OWORD *)(v1 + 32);
    *(_BYTE *)(v0 + 120) = *(_BYTE *)(v1 + 80);
    *(_OWORD *)(v0 + 88) = v4;
    *(_OWORD *)(v0 + 104) = v3;
    *(_OWORD *)(v0 + 72) = v5;
    outlined retain of AnsweringMachineCallStatus(v0 + 72);
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 480) = v6;
    v7 = OUTLINED_FUNCTION_19_12(v6, (uint64_t)CallScreening.MachineStateObserver.handleNewStateEntered(stateChange:currentTrackedCallUUID:backgroundTask:));
    return OUTLINED_FUNCTION_9_92(v7);
  }
  else
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_38_51();
    OUTLINED_FUNCTION_29_0();
    return OUTLINED_FUNCTION_6(*(uint64_t (**)(void))(v0 + 8));
  }
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 488) = v0;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  outlined release of AnsweringMachineCallStatus(v2 + 72);
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_1_3();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  _QWORD *v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 472) + 1;
  if (v1 == *(_QWORD *)(v0 + 464))
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_38_51();
    OUTLINED_FUNCTION_29_0();
    return OUTLINED_FUNCTION_6(*(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    *(_QWORD *)(v0 + 472) = v1;
    v3 = *(_QWORD *)(v0 + 456) + 56 * v1;
    v5 = *(_OWORD *)(v3 + 48);
    v4 = *(_OWORD *)(v3 + 64);
    v6 = *(_OWORD *)(v3 + 32);
    *(_BYTE *)(v0 + 120) = *(_BYTE *)(v3 + 80);
    *(_OWORD *)(v0 + 88) = v5;
    *(_OWORD *)(v0 + 104) = v4;
    *(_OWORD *)(v0 + 72) = v6;
    outlined retain of AnsweringMachineCallStatus(v0 + 72);
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 480) = v7;
    v8 = OUTLINED_FUNCTION_19_12(v7, (uint64_t)CallScreening.MachineStateObserver.handleNewStateEntered(stateChange:currentTrackedCallUUID:backgroundTask:));
    return OUTLINED_FUNCTION_9_92(v8);
  }
}

{
  uint64_t v0;
  os_log_type_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  _DWORD *v5;
  _QWORD *v6;
  uint64_t v7;

  outlined release of AnsweringMachineCallStatus(v0 + 128);
  OUTLINED_FUNCTION_19_66(*(_QWORD *)(v0 + 336));
  OUTLINED_FUNCTION_15_63();
  OUTLINED_FUNCTION_15_63();
  v3 = Logger.logObject.getter();
  v4 = static os_log_type_t.error.getter();
  if (OUTLINED_FUNCTION_4_14(v4))
  {
    v5 = (_DWORD *)OUTLINED_FUNCTION_105();
    v6 = (_QWORD *)OUTLINED_FUNCTION_105();
    *v5 = 138543362;
    OUTLINED_FUNCTION_15_63();
    v7 = _swift_stdlib_bridgeErrorToNSError();
    OUTLINED_FUNCTION_20_71(v7);
    *v6 = v2;
    OUTLINED_FUNCTION_19_2();
    OUTLINED_FUNCTION_19_2();
    OUTLINED_FUNCTION_28_57(&dword_1BD004000, v3, v1, "Failed to update stateMachine with callstatus error: %{public}@");
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_19_2();
  OUTLINED_FUNCTION_19_2();
  OUTLINED_FUNCTION_19_2();

  OUTLINED_FUNCTION_39_54();
  OUTLINED_FUNCTION_38_51();
  OUTLINED_FUNCTION_29_0();
  return OUTLINED_FUNCTION_21_2(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  os_log_type_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  _DWORD *v5;
  _QWORD *v6;
  uint64_t v7;

  OUTLINED_FUNCTION_19_66(*(_QWORD *)(v0 + 336));
  OUTLINED_FUNCTION_15_63();
  OUTLINED_FUNCTION_15_63();
  v3 = Logger.logObject.getter();
  v4 = static os_log_type_t.error.getter();
  if (OUTLINED_FUNCTION_4_14(v4))
  {
    v5 = (_DWORD *)OUTLINED_FUNCTION_105();
    v6 = (_QWORD *)OUTLINED_FUNCTION_105();
    *v5 = 138543362;
    OUTLINED_FUNCTION_15_63();
    v7 = _swift_stdlib_bridgeErrorToNSError();
    OUTLINED_FUNCTION_20_71(v7);
    *v6 = v2;
    OUTLINED_FUNCTION_19_2();
    OUTLINED_FUNCTION_19_2();
    OUTLINED_FUNCTION_28_57(&dword_1BD004000, v3, v1, "Failed to update stateMachine with callstatus error: %{public}@");
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_19_2();
  OUTLINED_FUNCTION_19_2();
  OUTLINED_FUNCTION_19_2();

  OUTLINED_FUNCTION_39_54();
  OUTLINED_FUNCTION_38_51();
  OUTLINED_FUNCTION_29_0();
  return OUTLINED_FUNCTION_21_2(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1BD3E839C()
{
  uint64_t v0;

  type metadata accessor for CallScreening.MachineStateObserver(0);
  swift_unknownObjectRelease();
  v0 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_15_27(v0);
  OUTLINED_FUNCTION_18_29();
  OUTLINED_FUNCTION_18_29();
  return OUTLINED_FUNCTION_6_10();
}

uint64_t outlined init with take of CallScreening.MachineStateObserver(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CallScreening.MachineStateObserver(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t partial apply for closure #1 in CallScreening.MachineStateObserver.start()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CallScreening.MachineStateObserver(0) - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = v1 + ((v4 + 32) & ~v4);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = partial apply for closure #1 in CallScreening.MachineStateObserver.start();
  return closure #1 in CallScreening.MachineStateObserver.start()(a1, v5, v6, v7);
}

uint64_t partial apply for closure #1 in CallScreening.MachineStateObserver.start()()
{
  uint64_t v0;

  OUTLINED_FUNCTION_1_6();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ObjC metadata update function for BackgroundTask()
{
  return type metadata accessor for BackgroundTask(0);
}

uint64_t type metadata accessor for BackgroundTask(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for BackgroundTask);
}

uint64_t type metadata completion function for BackgroundTask()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Logger();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for CallScreening.MachineStateObserver()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BD3E85C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = OUTLINED_FUNCTION_17_2();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for CallScreening.MachineStateObserver()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BD3E8644(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;

  v8 = OUTLINED_FUNCTION_17_2();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
    OUTLINED_FUNCTION_18();
  }
}

uint64_t sub_1BD3E86AC()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in BackgroundTask.start()()
{
  uint64_t v0;

  return closure #1 in BackgroundTask.start()(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

id outlined bridged method (mbgnnn) of @objc UIApplication.beginBackgroundTask(withName:expirationHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  void *v6;
  id v7;

  v6 = (void *)MEMORY[0x1C3B72E00]();
  v7 = objc_msgSend(a4, sel_beginBackgroundTaskWithName_expirationHandler_, v6, a3);

  return v7;
}

uint64_t sub_1BD3E8738()
{
  uint64_t v0;

  type metadata accessor for CallScreening.MachineStateObserver(0);
  v0 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_15_27(v0);
  OUTLINED_FUNCTION_18_29();
  OUTLINED_FUNCTION_18_29();
  return OUTLINED_FUNCTION_6_10();
}

uint64_t partial apply for closure #1 in closure #1 in CallScreening.MachineStateObserver.start()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CallScreening.MachineStateObserver(0) - 8) + 80);
  return closure #1 in closure #1 in CallScreening.MachineStateObserver.start()(v0 + ((v1 + 16) & ~v1));
}

uint64_t outlined copy of CKStateMachine<CallScreening.State>.StateUpdate?(uint64_t result, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, unsigned __int8 a8)
{
  if (a8 != 0xFF)
    return outlined copy of CKStateMachine<CallScreening.State>.StateUpdate(result, a2, a3, a4, a5, a6, a7, a8);
  return result;
}

uint64_t outlined copy of CKStateMachine<CallScreening.State>.StateUpdate(uint64_t result, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, unsigned __int8 a8)
{
  if (a8 <= 1u)
    return outlined copy of CallScreening.State(result, a2, a3, a4, a5, a6, a7);
  return result;
}

uint64_t outlined consume of CKStateMachine<CallScreening.State>.StateUpdate?(uint64_t result, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, unsigned __int8 a8)
{
  if (a8 != 0xFF)
    return outlined consume of CKStateMachine<CallScreening.State>.StateUpdate(result, a2, a3, a4, a5, a6, a7, a8);
  return result;
}

uint64_t outlined consume of CKStateMachine<CallScreening.State>.StateUpdate(uint64_t result, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, unsigned __int8 a8)
{
  if (a8 <= 1u)
    return outlined consume of CallScreening.State(result, a2, a3, a4, a5, a6, a7);
  return result;
}

uint64_t OUTLINED_FUNCTION_39_54()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[42] + 8))(v0[43], v0[41]);
}

id TUConversation.joinConversationRequest()()
{
  uint64_t v0;
  id v1;

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DBD308]), sel_initWithConversation_, v0);
  objc_msgSend(v1, sel_setWantsStagingArea_, 1);
  objc_msgSend(v1, sel_setAvMode_, OUTLINED_FUNCTION_0_135());
  objc_msgSend(v1, sel_setVideoEnabled_, OUTLINED_FUNCTION_0_135() == (id)2);
  return v1;
}

double SystemApertureIcon.init(asset:accessibilityLabel:wantsPillForDetachedAppearance:leadingOffsetForConcentricWhenCompact:)@<D0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>, double a6@<D0>)
{
  uint64_t v11;
  char v12;
  double result;
  __int128 v14;
  _OWORD v15[2];
  uint64_t v16;
  char v17;

  outlined init with take of ConversationControlsType(a1, v15);
  v11 = v16;
  v12 = v17;
  result = *(double *)v15;
  v14 = v15[1];
  *(_OWORD *)a5 = v15[0];
  *(_OWORD *)(a5 + 16) = v14;
  *(_QWORD *)(a5 + 32) = v11;
  *(_BYTE *)(a5 + 40) = v12;
  *(_QWORD *)(a5 + 48) = a2;
  *(_QWORD *)(a5 + 56) = a3;
  *(_BYTE *)(a5 + 64) = a4;
  *(double *)(a5 + 72) = a6;
  return result;
}

char *SystemApertureIconView.__allocating_init(icon:isDetached:)(uint64_t a1, char a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return SystemApertureIconView.init(icon:isDetached:)(a1, a2);
}

uint64_t static SystemApertureIconAsset.== infix(_:_:)(__int128 *a1, __int128 *a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v12;
  id v13;
  char v15;
  _OWORD *v16;
  char v17;
  __int128 v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  __int128 v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;

  outlined init with take of ConversationControlsType(a1, &v24);
  if ((v28 & 1) != 0)
  {
    v29 = v24;
    v5 = v25;
    v4 = v26;
    v6 = v27;
    outlined init with take of ConversationControlsType(a2, &v19);
    if (v23 != 1)
      goto LABEL_22;
    v8 = v20;
    v7 = v21;
    v9 = v22;
    v30 = v29;
    v31 = v19;
    v10 = v29;
    if ((_QWORD)v29 != (_QWORD)v19 || *((_QWORD *)&v29 + 1) != *((_QWORD *)&v19 + 1))
    {
      v10 = OUTLINED_FUNCTION_13();
      if ((v10 & 1) == 0)
        goto LABEL_22;
    }
    OUTLINED_FUNCTION_17_8(v10, (unint64_t *)&lazy cache variable for type metadata for NSObject);
    outlined retain of String((uint64_t)&v30);
    swift_bridgeObjectRetain();
    v12 = v5;
    outlined retain of String((uint64_t)&v31);
    swift_bridgeObjectRetain();
    v13 = v8;
    if ((static NSObject.== infix(_:_:)() & 1) != 0)
    {
      if (!v6)
      {
        OUTLINED_FUNCTION_30_3();
        if (!v9)
        {

          OUTLINED_FUNCTION_4_120();
          goto LABEL_29;
        }
        OUTLINED_FUNCTION_53();

        OUTLINED_FUNCTION_4_120();
        goto LABEL_21;
      }
      if (v9)
      {
        if (v4 != v7 || v6 != v9)
        {
          v15 = OUTLINED_FUNCTION_13();
          OUTLINED_FUNCTION_30_3();
          OUTLINED_FUNCTION_53();

          OUTLINED_FUNCTION_4_120();
          OUTLINED_FUNCTION_13_3();

          if ((v15 & 1) != 0)
            goto LABEL_30;
          goto LABEL_22;
        }
        OUTLINED_FUNCTION_30_3();
        OUTLINED_FUNCTION_53();

        OUTLINED_FUNCTION_4_120();
        OUTLINED_FUNCTION_13_3();
LABEL_29:

LABEL_30:
        v17 = 1;
        return v17 & 1;
      }
      OUTLINED_FUNCTION_30_3();
    }
    else
    {
      OUTLINED_FUNCTION_30_3();
      OUTLINED_FUNCTION_53();
    }

    OUTLINED_FUNCTION_4_120();
    OUTLINED_FUNCTION_13_3();
LABEL_21:

    goto LABEL_22;
  }
  v16 = outlined init with take of ConversationControlsType(a2, &v19);
  if ((v23 & 1) != 0)
  {
LABEL_22:
    v17 = 0;
    return v17 & 1;
  }
  OUTLINED_FUNCTION_17_8((uint64_t)v16, (unint64_t *)&lazy cache variable for type metadata for NSObject);
  outlined retain of SystemApertureIconAsset((uint64_t)a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined copy of SystemApertureIconAsset);
  outlined retain of SystemApertureIconAsset((uint64_t)a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined copy of SystemApertureIconAsset);
  v17 = static NSObject.== infix(_:_:)();
  outlined retain of SystemApertureIconAsset((uint64_t)a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined consume of SystemApertureIconAsset);
  outlined retain of SystemApertureIconAsset((uint64_t)a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined consume of SystemApertureIconAsset);
  return v17 & 1;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance SystemApertureIconAsset(__int128 *a1, __int128 *a2)
{
  __int128 v4[3];
  __int128 v5[3];

  outlined init with take of ConversationControlsType(a1, v4);
  outlined init with take of ConversationControlsType(a2, v5);
  return static SystemApertureIconAsset.== infix(_:_:)(v4, v5) & 1;
}

uint64_t SystemApertureIcon.asset.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return outlined init with copy of SystemApertureIconAsset(v1, a1);
}

uint64_t SystemApertureIcon.accessibilityLabel.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  OUTLINED_FUNCTION_5_0();
  return v1;
}

uint64_t SystemApertureIcon.wantsPillForDetachedAppearance.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 64);
}

double SystemApertureIcon.leadingOffsetForConcentricWhenCompact.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 72);
}

void SystemApertureIcon.leadingOffsetForConcentricWhenCompact.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 72) = a1;
}

uint64_t (*SystemApertureIcon.leadingOffsetForConcentricWhenCompact.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

BOOL static SystemApertureIcon.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  BOOL v4;
  char v5;
  _BOOL8 result;
  __int128 v7[3];
  __int128 v8[3];

  outlined init with take of ConversationControlsType((__int128 *)a1, v8);
  outlined init with take of ConversationControlsType((__int128 *)a2, v7);
  if ((static SystemApertureIconAsset.== infix(_:_:)(v8, v7) & 1) == 0)
    return 0;
  v4 = *(_QWORD *)(a1 + 48) == *(_QWORD *)(a2 + 48) && *(_QWORD *)(a1 + 56) == *(_QWORD *)(a2 + 56);
  if (v4 || (v5 = OUTLINED_FUNCTION_13(), result = 0, (v5 & 1) != 0))
  {
    if (((*(unsigned __int8 *)(a1 + 64) ^ *(unsigned __int8 *)(a2 + 64)) & 1) != 0)
      return 0;
    return *(double *)(a1 + 72) == *(double *)(a2 + 72);
  }
  return result;
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance SystemApertureIcon(void *__src, const void *a2)
{
  _BYTE v4[80];
  _BYTE __dst[80];

  memcpy(v4, __src, sizeof(v4));
  memcpy(__dst, a2, sizeof(__dst));
  return static SystemApertureIcon.== infix(_:_:)((uint64_t)v4, (uint64_t)__dst);
}

uint64_t key path setter for SystemApertureIconView.icon : SystemApertureIconView(void *__src, _QWORD **a2)
{
  uint64_t (*v3)(_BYTE *);
  _BYTE v5[80];

  memcpy(v5, __src, sizeof(v5));
  v3 = *(uint64_t (**)(_BYTE *))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x70);
  outlined retain of SystemApertureIcon((uint64_t)v5);
  return v3(v5);
}

id SystemApertureIconView.icon.didset(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  char v14;
  id result;
  int v16;
  __int128 v17[3];
  __int128 v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;

  v3 = v1 + OBJC_IVAR____TtC15ConversationKit22SystemApertureIconView_icon;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 8);
  v7 = *(void **)(v3 + 16);
  v6 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  v9 = *(_BYTE *)(v3 + 40);
  v10 = *(_QWORD *)(v3 + 48);
  v11 = *(_QWORD *)(v3 + 56);
  v16 = *(unsigned __int8 *)(v3 + 64);
  v12 = *(double *)(v3 + 72);
  *(_QWORD *)&v18 = *(_QWORD *)v3;
  v5 = (void *)v18;
  *((_QWORD *)&v18 + 1) = v4;
  v19 = v7;
  v20 = v6;
  v21 = v8;
  v22 = v9;
  outlined init with take of ConversationControlsType((__int128 *)a1, v17);
  outlined copy of SystemApertureIconAsset(v5, v4, v7, v6, v8, v9);
  swift_bridgeObjectRetain();
  if ((static SystemApertureIconAsset.== infix(_:_:)(&v18, v17) & 1) == 0)
  {
    outlined consume of SystemApertureIconAsset(v5, v4, v7, v6, v8, v9);
    swift_bridgeObjectRelease();
    return SystemApertureIconView.updateIconView()();
  }
  if (v10 == *(_QWORD *)(a1 + 48) && v11 == *(_QWORD *)(a1 + 56))
  {
    outlined consume of SystemApertureIconAsset(v5, v4, v7, v6, v8, v9);
    result = (id)swift_bridgeObjectRelease();
  }
  else
  {
    v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
    outlined consume of SystemApertureIconAsset(v5, v4, v7, v6, v8, v9);
    result = (id)swift_bridgeObjectRelease();
    if ((v14 & 1) == 0)
      return SystemApertureIconView.updateIconView()();
  }
  if (((v16 ^ *(unsigned __int8 *)(a1 + 64)) & 1) != 0 || v12 != *(double *)(a1 + 72))
    return SystemApertureIconView.updateIconView()();
  return result;
}

uint64_t SystemApertureIconView.icon.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;

  v3 = v1 + OBJC_IVAR____TtC15ConversationKit22SystemApertureIconView_icon;
  OUTLINED_FUNCTION_2_0();
  v4 = *(void **)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(void **)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  v9 = *(_BYTE *)(v3 + 40);
  v11 = *(_QWORD *)(v3 + 48);
  v10 = *(_QWORD *)(v3 + 56);
  v14 = *(_BYTE *)(v3 + 64);
  v12 = *(_QWORD *)(v3 + 72);
  outlined copy of SystemApertureIconAsset(*(void **)v3, v5, v6, v7, v8, v9);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v11;
  *(_QWORD *)(a1 + 56) = v10;
  *(_BYTE *)(a1 + 64) = v14;
  *(_QWORD *)(a1 + 72) = v12;
  return swift_bridgeObjectRetain();
}

uint64_t SystemApertureIconView.icon.setter(const void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _BYTE v11[80];

  v3 = (void **)(v1 + OBJC_IVAR____TtC15ConversationKit22SystemApertureIconView_icon);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_69_4(v11, v3);
  v4 = *v3;
  v5 = (uint64_t)v3[1];
  v6 = v3[2];
  v7 = (uint64_t)v3[3];
  v8 = (uint64_t)v3[4];
  v9 = *((_BYTE *)v3 + 40);
  OUTLINED_FUNCTION_69_4(v3, a1);
  outlined retain of SystemApertureIcon((uint64_t)v11);
  OUTLINED_FUNCTION_12_96();
  outlined consume of SystemApertureIconAsset(v4, v5, v6, v7, v8, v9);
  swift_bridgeObjectRelease();
  SystemApertureIconView.icon.didset((uint64_t)v11);
  outlined release of SystemApertureIcon((uint64_t)a1);
  return outlined release of SystemApertureIcon((uint64_t)v11);
}

void (*SystemApertureIconView.icon.modify(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;

  v3 = malloc(0x110uLL);
  *a1 = v3;
  v3[33] = v1;
  v4 = v1 + OBJC_IVAR____TtC15ConversationKit22SystemApertureIconView_icon;
  OUTLINED_FUNCTION_2_0();
  v5 = *(void **)v4;
  v6 = *(_QWORD *)(v4 + 8);
  v7 = *(void **)(v4 + 16);
  v8 = *(_QWORD *)(v4 + 24);
  v9 = *(_QWORD *)(v4 + 32);
  v10 = *(_BYTE *)(v4 + 40);
  v11 = *(_QWORD *)(v4 + 48);
  v12 = *(_QWORD *)(v4 + 56);
  v13 = *(_BYTE *)(v4 + 64);
  v14 = *(_QWORD *)(v4 + 72);
  v3[20] = *(_QWORD *)v4;
  v3[21] = v6;
  v3 += 20;
  v3[2] = v7;
  v3[3] = v8;
  v3[4] = v9;
  *((_BYTE *)v3 + 40) = v10;
  v3[6] = v11;
  v3[7] = v12;
  *((_BYTE *)v3 + 64) = v13;
  v3[9] = v14;
  outlined copy of SystemApertureIconAsset(v5, v6, v7, v8, v9, v10);
  OUTLINED_FUNCTION_5_0();
  return SystemApertureIconView.icon.modify;
}

void SystemApertureIconView.icon.modify(void **a1, char a2)
{
  char *v3;
  const void *v4;

  v3 = (char *)*a1;
  v4 = (char *)*a1 + 160;
  if ((a2 & 1) != 0)
  {
    OUTLINED_FUNCTION_69_4(*a1, v4);
    OUTLINED_FUNCTION_12_96();
    SystemApertureIconView.icon.setter(v3);
    outlined consume of SystemApertureIconAsset(*((void **)v3 + 20), *((_QWORD *)v3 + 21), *((void **)v3 + 22), *((_QWORD *)v3 + 23), *((_QWORD *)v3 + 24), v3[200]);
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_69_4(v3 + 80, v4);
    SystemApertureIconView.icon.setter(v3 + 80);
  }
  free(v3);
}

void SystemApertureIconView.iconView.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v3 = v2 + OBJC_IVAR____TtC15ConversationKit22SystemApertureIconView_iconView;
  v4 = *(void **)(v2 + OBJC_IVAR____TtC15ConversationKit22SystemApertureIconView_iconView);
  *(_QWORD *)v3 = a1;
  *(_BYTE *)(v3 + 8) = a2 & 1;

}

char *SystemApertureIconView.init(icon:isDetached:)(uint64_t a1, char a2)
{
  char *v2;
  char *v5;
  id v6;
  char *v7;
  double v8;
  id v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v22;
  objc_super v23;

  swift_getObjectType();
  v5 = &v2[OBJC_IVAR____TtC15ConversationKit22SystemApertureIconView_iconView];
  v6 = objc_allocWithZone(MEMORY[0x1E0DC3890]);
  v7 = v2;
  *(_QWORD *)v5 = objc_msgSend(v6, sel_init);
  v5[8] = 0;
  OUTLINED_FUNCTION_69_4(&v7[OBJC_IVAR____TtC15ConversationKit22SystemApertureIconView_icon], (const void *)a1);
  if ((a2 & 1) != 0 && (*(_BYTE *)(a1 + 64) & 1) != 0)
    v8 = 45.0;
  else
    v8 = 1.0;
  *(double *)&v7[OBJC_IVAR____TtC15ConversationKit22SystemApertureIconView_minimumWidth] = v8;
  OUTLINED_FUNCTION_12_96();

  v23.receiver = v7;
  v23.super_class = (Class)type metadata accessor for SystemApertureIconView();
  v9 = objc_msgSendSuper2(&v23, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v10 = one-time initialization token for conversationControls;
  v11 = (char *)v9;
  if (v10 != -1)
    swift_once();
  v12 = type metadata accessor for Logger();
  __swift_project_value_buffer(v12, (uint64_t)&static Logger.conversationControls);
  v13 = Logger.logObject.getter();
  v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    v22 = swift_slowAlloc();
    *(_DWORD *)v15 = 136446210;
    v16 = _typeName(_:qualified:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v16, v17, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v13, v14, "[SystemAperture] %{public}s created", v15, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_60();
  }

  SystemApertureIconView.updateIconView()();
  objc_msgSend(v11, sel_addSubview_, *(_QWORD *)&v11[OBJC_IVAR____TtC15ConversationKit22SystemApertureIconView_iconView]);
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  v20 = v11;
  swift_bridgeObjectRetain();
  outlined bridged method (mbgnn) of @objc NSObject.accessibilityLabel.setter(v18, v19, v20);
  outlined release of SystemApertureIcon(a1);
  swift_bridgeObjectRelease();

  return v20;
}

uint64_t outlined retain of SystemApertureIconAsset(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(unsigned __int8 *)(a1 + 40));
  return a1;
}

uint64_t outlined init with copy of SystemApertureIconAsset(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for SystemApertureIconAsset(a2, a1);
  return a2;
}

uint64_t type metadata accessor for SystemApertureIconView()
{
  return objc_opt_self();
}

id SystemApertureIconView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void SystemApertureIconView.init(frame:)()
{
  OUTLINED_FUNCTION_18_80((uint64_t)objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_init));
  OUTLINED_FUNCTION_0_16();
  __break(1u);
}

id SystemApertureIconView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void SystemApertureIconView.init(coder:)()
{
  OUTLINED_FUNCTION_18_80((uint64_t)objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_init));
  OUTLINED_FUNCTION_0_16();
  __break(1u);
}

Swift::Void __swiftcall SystemApertureIconView.layoutSubviews()()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  id v16;
  double v17;
  double v18;
  double v19;
  double v20;
  objc_super v21;
  CGRect v22;
  CGRect v23;

  v1 = type metadata accessor for FloatingPointRoundingRule();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_77();
  v5 = v4 - v3;
  v21.receiver = v0;
  v21.super_class = (Class)type metadata accessor for SystemApertureIconView();
  objc_msgSendSuper2(&v21, sel_layoutSubviews);
  v6 = OBJC_IVAR____TtC15ConversationKit22SystemApertureIconView_iconView;
  v7 = *(id *)&v0[OBJC_IVAR____TtC15ConversationKit22SystemApertureIconView_iconView];
  OUTLINED_FUNCTION_0_1();
  objc_msgSend(v7, sel_sizeThatFits_, v8, v9);
  v11 = v10;
  v13 = v12;

  OUTLINED_FUNCTION_0_1();
  v14 = (CGRectGetWidth(v22) - v11) * 0.5;
  OUTLINED_FUNCTION_0_1();
  v15 = (CGRectGetHeight(v23) - v13) * 0.5;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v5, *MEMORY[0x1E0DED508], v1);
  v16 = objc_msgSend(v0, sel_traitCollection);
  objc_msgSend(v16, sel_displayScale);
  v18 = v17;
  v19 = CGFloat.rounded(_:toScale:)(v5, v17, v14);
  v20 = CGFloat.rounded(_:toScale:)(v5, v18, v15);

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v5, v1);
  objc_msgSend(*(id *)&v0[v6], sel_setFrame_, v19, v20, v11, v13);
}

CGSize __swiftcall SystemApertureIconView.sizeThatFits(_:)(CGSize a1)
{
  uint64_t v1;
  double v2;
  double v3;
  CGSize result;

  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC15ConversationKit22SystemApertureIconView_iconView), sel_sizeThatFits_, a1.width, a1.height);
  if (v2 <= *(double *)(v1 + OBJC_IVAR____TtC15ConversationKit22SystemApertureIconView_minimumWidth))
    v2 = *(double *)(v1 + OBJC_IVAR____TtC15ConversationKit22SystemApertureIconView_minimumWidth);
  result.height = v3;
  result.width = v2;
  return result;
}

id SystemApertureIconView.sizeThatFits(_:for:)()
{
  void *v0;

  return objc_msgSend(v0, sel_sizeThatFits_);
}

_QWORD *SystemApertureIconView.preferredLayoutMargins.getter@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  void (*v3)(__int128 *__return_ptr);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD *result;
  char v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25[5];
  _QWORD v26[10];
  __int128 v27[3];
  __int128 v28;
  char v29;

  v3 = *(void (**)(__int128 *__return_ptr))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x68);
  v3(v25);
  outlined init with take of ConversationControlsType(v25, v27);
  v4 = outlined retain of SystemApertureIconAsset((uint64_t)v27, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined copy of SystemApertureIconAsset);
  OUTLINED_FUNCTION_11_89(v4, v5, v6, v7, v8, v9, v10, v11, *(uint64_t *)&v25[0]);
  outlined init with take of ConversationControlsType(v27, &v28);
  v12 = v29;
  result = (_QWORD *)outlined retain of SystemApertureIconAsset((uint64_t)v27, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined consume of SystemApertureIconAsset);
  if ((v12 & 1) != 0)
  {
    v1 = 0;
    v14 = 0;
    v15 = 0x4025000000000000;
    v16 = 0x4025000000000000;
  }
  else
  {
    v17 = ((_QWORD *(*)(_QWORD *__return_ptr, _QWORD *))v3)(v26, result);
    OUTLINED_FUNCTION_17_69((uint64_t)v17, v18, v19, v20, v21, v22, v23, v24, *(uint64_t *)&v25[0], *((uint64_t *)&v25[0] + 1));
    v15 = v26[9];
    result = v1;
    v16 = 0;
    v14 = 1;
  }
  *(_QWORD *)a1 = v1;
  *(_QWORD *)(a1 + 8) = v15;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = v16;
  *(_BYTE *)(a1 + 32) = v14;
  return result;
}

void SystemApertureIconView.updateIconView(using:)(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  void *v30;
  id v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  _QWORD aBlock[6];

  v2 = type metadata accessor for DispatchWorkItemFlags();
  v39 = *(_QWORD *)(v2 - 8);
  v40 = v2;
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_77();
  v5 = v4 - v3;
  v6 = type metadata accessor for DispatchQoS();
  v37 = *(_QWORD *)(v6 - 8);
  v38 = v6;
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_77();
  v9 = v8 - v7;
  v36 = type metadata accessor for DispatchTime();
  v10 = *(_QWORD *)(v36 - 8);
  v11 = MEMORY[0x1E0C80A78](v36);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v34 - v14;
  v16 = *a1;
  v17 = a1[1];
  v18 = (void *)a1[2];
  objc_allocWithZone(MEMORY[0x1E0D01910]);
  OUTLINED_FUNCTION_5_0();
  v19 = v18;
  v20 = @nonobjc BSUICAPackageView.init(packageName:in:)(v16, v17, v18);
  if (v20)
  {
    v21 = v20;
    v22 = v41;
    objc_msgSend(*(id *)&v41[OBJC_IVAR____TtC15ConversationKit22SystemApertureIconView_iconView], sel_removeFromSuperview);
    v23 = objc_msgSend(v22, sel_addSubview_, v21);
    v24 = a1[4];
    if (v24)
    {
      v25 = a1[3];
      OUTLINED_FUNCTION_17_8((uint64_t)v23, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
      swift_bridgeObjectRetain();
      v26 = (void *)static OS_dispatch_queue.main.getter();
      static DispatchTime.now()();
      MEMORY[0x1C3B72C50](v13, 1.0);
      v35 = *(void (**)(char *, uint64_t))(v10 + 8);
      v27 = v36;
      v35(v13, v36);
      v28 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v29 = (_QWORD *)swift_allocObject();
      v29[2] = v28;
      v29[3] = v21;
      v29[4] = v25;
      v29[5] = v24;
      aBlock[4] = partial apply for closure #1 in SystemApertureIconView.updateIconView(using:);
      aBlock[5] = v29;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
      aBlock[3] = &block_descriptor_79;
      v30 = _Block_copy(aBlock);
      v31 = v21;
      swift_release();
      static DispatchQoS.unspecified.getter();
      aBlock[0] = MEMORY[0x1E0DEE9D8];
      lazy protocol witness table accessor for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
      lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]();
      v32 = v40;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      MEMORY[0x1C3B735B0](v15, v9, v5, v30);
      _Block_release(v30);

      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v5, v32);
      (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v9, v38);
      v35(v15, v27);
    }
    v33 = v21;
    SystemApertureIconView.iconView.setter((uint64_t)v21, 1);

  }
}

void closure #1 in SystemApertureIconView.updateIconView(using:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v7 = a1 + 16;
  swift_beginAccess();
  v8 = MEMORY[0x1C3B752C0](v7);
  if (v8)
  {
    v9 = (void *)v8;
    if (*(void **)(v8 + OBJC_IVAR____TtC15ConversationKit22SystemApertureIconView_iconView) == a2)
      outlined bridged method (mbgnn) of @objc BSUICAPackageView.setState(_:)(a3, a4, a2);

  }
}

id SystemApertureIconView.updateIconView()()
{
  _QWORD *v0;
  void (*v1)(__int128 *__return_ptr);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v28[5];
  _QWORD v29[10];
  __int128 v30[3];
  _OWORD v31[2];
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  char v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  __int128 v40;
  _BYTE v41[16];

  v1 = *(void (**)(__int128 *__return_ptr))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68);
  v1(v28);
  outlined init with take of ConversationControlsType(v28, v30);
  v2 = outlined retain of SystemApertureIconAsset((uint64_t)v30, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined copy of SystemApertureIconAsset);
  OUTLINED_FUNCTION_11_89(v2, v3, v4, v5, v6, v7, v8, v9, *(uint64_t *)&v28[0]);
  v10 = *(void **)((char *)v0 + OBJC_IVAR____TtC15ConversationKit22SystemApertureIconView_iconView);
  v11 = *((_BYTE *)v0 + OBJC_IVAR____TtC15ConversationKit22SystemApertureIconView_iconView + 8);
  outlined init with take of ConversationControlsType(v30, &v33);
  if ((v36 & 1) != 0)
  {
    v37 = v33;
    v38 = v34;
    v39 = v35;
    v31[0] = v33;
    v31[1] = v34;
    v32 = v35;
    SystemApertureIconView.updateIconView(using:)((uint64_t *)v31);
    v40 = v37;
    OUTLINED_FUNCTION_30_3();

    outlined init with take of String?((uint64_t)&v38 + 8, (uint64_t)v41);
    v12 = outlined release of String((uint64_t)v41);
  }
  else
  {
    v13 = v33;
    if ((v11 & 1) != 0)
    {
      v14 = v10;
      objc_msgSend(v14, sel_removeFromSuperview);
      v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_init);
      objc_msgSend(v15, sel_setImage_, v13);
      objc_msgSend(v0, sel_addSubview_, v15);
      v16 = v15;
      SystemApertureIconView.iconView.setter((uint64_t)v15, 0);

    }
    else
    {
      objc_msgSend(v10, sel_setImage_, (_QWORD)v33);
    }
    v12 = outlined retain of SystemApertureIconAsset((uint64_t)v30, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined consume of SystemApertureIconAsset);
  }
  ((void (*)(_QWORD *__return_ptr, uint64_t))v1)(v29, v12);
  v17 = v29[6];
  v18 = v29[7];
  v19 = swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_17_69(v19, v20, v21, v22, v23, v24, v25, v26, *(uint64_t *)&v28[0], *((uint64_t *)&v28[0] + 1));
  outlined bridged method (mbnn) of @objc NSObject.accessibilityLabel.setter(v17, v18, v0);
  return objc_msgSend(v0, sel_setNeedsLayout);
}

uint64_t SystemApertureIconView.shouldReplace(_:)(void *a1)
{
  _QWORD *v1;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *(*v6)(uint64_t *__return_ptr);
  id v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v27[10];
  _QWORD v28[10];

  type metadata accessor for SystemApertureIconView();
  v3 = swift_dynamicCastClass();
  if (v3)
  {
    v4 = (_QWORD *)v3;
    v5 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    v6 = *(_QWORD *(**)(uint64_t *__return_ptr))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x68);
    v7 = a1;
    v8 = v6(v27);
    (*(void (**)(_QWORD *__return_ptr, _QWORD *))((*v5 & *v4) + 0x68))(v28, v8);
    LOBYTE(v4) = static SystemApertureIcon.== infix(_:_:)((uint64_t)v27, (uint64_t)v28);

    v17 = OUTLINED_FUNCTION_17_69(v9, v10, v11, v12, v13, v14, v15, v16, v27[0], v27[1]);
    OUTLINED_FUNCTION_11_89(v17, v18, v19, v20, v21, v22, v23, v24, v27[0]);
    v25 = v4 ^ 1;
  }
  else
  {
    v25 = 1;
  }
  return v25 & 1;
}

id SystemApertureIconView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SystemApertureIconView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t protocol witness for SystemApertureAccessoryView.shouldReplace(_:) in conformance SystemApertureIconView()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

id @nonobjc BSUICAPackageView.init(packageName:in:)(uint64_t a1, uint64_t a2, void *a3)
{
  void *v3;
  void *v5;
  id v6;

  if (a2)
  {
    v5 = (void *)MEMORY[0x1C3B72E00]();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = 0;
  }
  v6 = objc_msgSend(v3, sel_initWithPackageName_inBundle_, v5, a3);

  return v6;
}

void *sub_1BD3EA198@<X0>(_QWORD **a1@<X0>, void *a2@<X8>)
{
  _QWORD v4[10];

  (*(void (**)(_QWORD *__return_ptr))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x68))(v4);
  return OUTLINED_FUNCTION_69_4(a2, v4);
}

void destroy for SystemApertureIconAsset(uint64_t a1)
{
  outlined consume of SystemApertureIconAsset(*(void **)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
}

uint64_t initializeWithCopy for SystemApertureIconAsset(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(void **)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 40);
  outlined copy of SystemApertureIconAsset(*(void **)a2, v4, v5, v6, v7, v8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = v8;
  return a1;
}

uint64_t assignWithCopy for SystemApertureIconAsset(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(void **)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 40);
  outlined copy of SystemApertureIconAsset(*(void **)a2, v4, v5, v6, v7, v8);
  v9 = *(void **)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(void **)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  v13 = *(_QWORD *)(a1 + 32);
  v14 = *(_BYTE *)(a1 + 40);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = v8;
  outlined consume of SystemApertureIconAsset(v9, v10, v11, v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for SystemApertureIconAsset(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  __int128 v11;

  v3 = *(_QWORD *)(a2 + 32);
  v4 = *(_BYTE *)(a2 + 40);
  v5 = *(void **)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(void **)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_BYTE *)(a1 + 40);
  v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v11;
  *(_QWORD *)(a1 + 32) = v3;
  *(_BYTE *)(a1 + 40) = v4;
  outlined consume of SystemApertureIconAsset(v5, v7, v6, v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for SystemApertureIconAsset(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 41))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 40);
      if (v3 <= 1)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SystemApertureIconAsset(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_BYTE *)(result + 40) = -(char)a2;
  }
  return result;
}

uint64_t getEnumTag for SystemApertureIconAsset(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 40);
}

uint64_t destructiveInjectEnumTag for SystemApertureIconAsset(uint64_t result, char a2)
{
  *(_BYTE *)(result + 40) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for SystemApertureIconAsset()
{
  return &type metadata for SystemApertureIconAsset;
}

uint64_t destroy for SystemApertureIcon(uint64_t a1)
{
  outlined consume of SystemApertureIconAsset(*(void **)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SystemApertureIcon(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  v4 = *(void **)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(void **)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_BYTE *)(a2 + 40);
  outlined copy of SystemApertureIconAsset(*(void **)a2, v5, v6, v7, v8, v9);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 40) = v9;
  v10 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v10;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SystemApertureIcon(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;

  v4 = *(void **)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(void **)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_BYTE *)(a2 + 40);
  outlined copy of SystemApertureIconAsset(*(void **)a2, v5, v6, v7, v8, v9);
  v10 = *(void **)a1;
  v11 = *(_QWORD *)(a1 + 8);
  v12 = *(void **)(a1 + 16);
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 32);
  v15 = *(_BYTE *)(a1 + 40);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 40) = v9;
  outlined consume of SystemApertureIconAsset(v10, v11, v12, v13, v14, v15);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  return a1;
}

uint64_t assignWithTake for SystemApertureIcon(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  __int128 v12;
  uint64_t v13;

  v4 = *(_QWORD *)(a2 + 32);
  v5 = *(_BYTE *)(a2 + 40);
  v6 = *(void **)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(void **)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_BYTE *)(a1 + 40);
  v12 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v12;
  *(_QWORD *)(a1 + 32) = v4;
  *(_BYTE *)(a1 + 40) = v5;
  outlined consume of SystemApertureIconAsset(v6, v7, v8, v9, v10, v11);
  v13 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v13;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for SystemApertureIcon(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 80))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 56);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SystemApertureIcon(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 56) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SystemApertureIcon()
{
  return &type metadata for SystemApertureIcon;
}

uint64_t method lookup function for SystemApertureIconView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SystemApertureIconView.icon.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of SystemApertureIconView.icon.setter(uint64_t a1)
{
  uint64_t (*v1)(void);

  OUTLINED_FUNCTION_7_34(a1);
  OUTLINED_FUNCTION_1_20();
  return v1();
}

uint64_t dispatch thunk of SystemApertureIconView.icon.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of SystemApertureIconView.__allocating_init(icon:isDetached:)(uint64_t a1)
{
  uint64_t (*v1)(void);

  OUTLINED_FUNCTION_7_34(a1);
  OUTLINED_FUNCTION_1_20();
  return v1();
}

uint64_t dispatch thunk of SystemApertureIconView.sizeThatFits(_:for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of SystemApertureIconView.preferredLayoutMargins.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of SystemApertureIconView.shouldReplace(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t initializeBufferWithCopyOfBuffer for SystemApertureIconView.IconView(uint64_t a1, uint64_t a2)
{
  void *v3;
  char v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v4;
  v5 = v3;
  return a1;
}

uint64_t assignWithCopy for SystemApertureIconView.IconView(uint64_t a1, uint64_t a2)
{
  void *v3;
  char v4;
  void *v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(_BYTE *)(a2 + 8);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v4;
  v6 = v3;

  return a1;
}

uint64_t assignWithTake for SystemApertureIconView.IconView(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;

  return a1;
}

void *type metadata accessor for SystemApertureIconView.IconView()
{
  return &unk_1E7633A48;
}

uint64_t sub_1BD3EA854()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BD3EA878()
{
  uint64_t v0;

  swift_release();

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void partial apply for closure #1 in SystemApertureIconView.updateIconView(using:)()
{
  uint64_t v0;

  closure #1 in SystemApertureIconView.updateIconView(using:)(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

id outlined bridged method (mbgnn) of @objc BSUICAPackageView.setState(_:)(uint64_t a1, uint64_t a2, void *a3)
{
  void *v4;
  id v5;

  v4 = (void *)MEMORY[0x1C3B72E00]();
  v5 = objc_msgSend(a3, sel_setState_, v4);

  return v5;
}

uint64_t outlined init with take of String?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for String?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t TUConversationManager.conversation(with:)(uint64_t a1)
{
  void *v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[4];

  v3 = objc_msgSend(v1, sel_activeConversations);
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
  _sSo8TUHandleCSo8NSObjectCSH10ObjectiveCWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type TUConversation and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
  v4 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  v8[2] = a1;
  specialized Sequence.first(where:)(partial apply for closure #1 in CallCenter.setGridDisplayMode(mode:for:), (uint64_t)v8, v4);
  v6 = v5;
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t protocol witness for ConversationManager.activatedConversationLinks.getter in conformance TUConversationManager()
{
  return @nonobjc TUConversationManager.activatedConversationLinks.getter();
}

uint64_t @nonobjc TUConversationManager.activatedConversationLinks.getter()
{
  void *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(v0, sel_activatedConversationLinks);
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationLink);
  _sSo8TUHandleCSo8NSObjectCSH10ObjectiveCWlTm_0(&lazy protocol witness table cache variable for type TUConversationLink and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUConversationLink);
  v2 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  return v2;
}

id protocol witness for ConversationManager.add(_:queue:) in conformance TUConversationManager(uint64_t a1, uint64_t a2)
{
  return @nonobjc TUConversationManager.add(_:queue:)(a1, a2);
}

uint64_t dispatch thunk of ConversationManager.activatedConversationLinks.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ConversationManager.add(_:queue:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

id @nonobjc TUConversationManager.add(_:queue:)(uint64_t a1, uint64_t a2)
{
  void *v2;

  return objc_msgSend(v2, sel_addDelegate_queue_, a1, a2);
}

void CornerButtonViews.changeLayoutButton.setter(void *a1)
{
  id *v1;

  *v1 = a1;
  OUTLINED_FUNCTION_0();
}

uint64_t (*CornerButtonViews.changeLayoutButton.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void CornerButtonViews.changeLayoutButtonBackgroundView.getter(uint64_t a1, void *a2)
{
  id v2;

  v2 = a2;
  OUTLINED_FUNCTION_0();
}

void CornerButtonViews.changeLayoutButtonBackgroundView.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = a1;
  OUTLINED_FUNCTION_0();
}

uint64_t (*CornerButtonViews.changeLayoutButtonBackgroundView.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void CornerButtonViews.deskViewButton.getter(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  OUTLINED_FUNCTION_0();
}

void CornerButtonViews.deskViewButton.setter(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_115();
  *(_QWORD *)(v1 + 16) = a1;
  OUTLINED_FUNCTION_0();
}

uint64_t (*CornerButtonViews.deskViewButton.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void CornerButtonViews.stackView.getter(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v4;

  v4 = a4;
  OUTLINED_FUNCTION_0();
}

void CornerButtonViews.stackView.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  OUTLINED_FUNCTION_0();
}

uint64_t (*CornerButtonViews.stackView.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

id MultiwayViewController.createCornerButtonsViews(listViewControllerParticipantCount:)(uint64_t a1)
{
  id v2;
  id v3;
  id v4;
  BOOL v6;

  v2 = MultiwayViewController.createChangeLayoutButton()();
  if (static Platform.current.getter())
  {
    v3 = 0;
  }
  else
  {
    v4 = objc_allocWithZone((Class)type metadata accessor for ButtonGradientBackgroundView());
    v3 = ButtonGradientBackgroundView.init(participantCount:)(a1);
  }
  if (static Platform.current.getter() == 2
    || !static Platform.current.getter() && (MultiwayViewController.layoutIdiom.getter(&v6), !v6))
  {
    if (v3)
      objc_msgSend(v3, sel_setHidden_, 1);
    objc_msgSend(v2, sel_setHidden_, 1);
  }
  return v2;
}

id MultiwayViewController.createChangeLayoutButton()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  unsigned __int8 *v7;
  void *v8;
  char **v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  Swift::String v14;
  Swift::String_optional v15;
  Swift::String v16;
  Swift::String v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  _QWORD aBlock[6];
  Swift::String v24;

  v1 = v0;
  v2 = type metadata accessor for UIButton.Configuration();
  MEMORY[0x1E0C80A78](v2);
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIButton);
  MultiwayViewController.changeLayoutButtonConfiguration(wantsImage:)(1);
  v3 = (void *)UIButton.init(configuration:primaryAction:)();
  v4 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_BYTE *)(v5 + 24) = 1;
  aBlock[4] = partial apply for closure #1 in MultiwayViewController.createChangeLayoutButton();
  aBlock[5] = v5;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed @Sendable (@guaranteed NSTimer) -> ();
  aBlock[3] = &block_descriptor_15_5;
  v6 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v3, sel_setConfigurationUpdateHandler_, v6);
  _Block_release(v6);
  v7 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_layoutStyle);
  swift_beginAccess();
  LODWORD(v7) = *v7;
  v8 = (void *)objc_opt_self();
  v9 = &selRef_blackColor;
  if (!(_DWORD)v7)
    v9 = &selRef_whiteColor;
  v10 = objc_msgSend(v8, *v9);
  objc_msgSend(v3, sel_setTintColor_, v10);

  v11 = (void *)objc_opt_self();
  v12 = v3;
  v13 = objc_msgSend(v11, sel_conversationKit);
  v24._object = (void *)0xE000000000000000;
  v14._countAndFlagsBits = 1145655879;
  v14._object = (void *)0xE400000000000000;
  v15.value._countAndFlagsBits = 0x61737265766E6F43;
  v15.value._object = (void *)0xEF74694B6E6F6974;
  v16._countAndFlagsBits = 0;
  v16._object = (void *)0xE000000000000000;
  v24._countAndFlagsBits = 0;
  v17 = NSLocalizedString(_:tableName:bundle:value:comment:)(v14, v15, (NSBundle)v13, v16, v24);

  outlined bridged method (mbnn) of @objc NSObject.accessibilityLabel.setter(v17._countAndFlagsBits, (uint64_t)v17._object, v12);
  v18 = objc_msgSend(v12, sel_titleLabel);
  if (v18)
  {
    v19 = v18;
    v20 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A90]);
    objc_msgSend(v19, sel_setFont_, v20);

  }
  v21 = objc_msgSend(v12, sel_titleLabel);
  objc_msgSend(v21, sel_setAdjustsFontForContentSizeCategory_, 1);

  objc_msgSend(v12, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v12, sel_addTarget_action_forControlEvents_, v1, sel_didTapChangeLayoutButton, 64);
  return v12;
}

uint64_t MultiwayViewController.changeLayoutButtonConfiguration(wantsImage:)(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  Swift::String v9;
  Swift::String_optional v10;
  Swift::String v11;
  unsigned __int8 *v12;
  void *v13;
  id v14;
  id v15;
  uint64_t (*v16)(_QWORD *, _QWORD);
  uint64_t result;
  void *v18;
  id v19;
  _QWORD v21[4];
  __int16 v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  Swift::String v26;

  v2 = v1;
  v4 = type metadata accessor for UIButton.Configuration.CornerStyle();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  static UIButton.Configuration.gray()();
  v8 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v26._object = (void *)0xE000000000000000;
  v9._countAndFlagsBits = 1145655879;
  v9._object = (void *)0xE400000000000000;
  v10.value._countAndFlagsBits = 0x61737265766E6F43;
  v10.value._object = (void *)0xEF74694B6E6F6974;
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  v26._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v9, v10, (NSBundle)v8, v11, v26);

  UIButton.Configuration.title.setter();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DC3060], v4);
  UIButton.Configuration.cornerStyle.setter();
  v12 = (unsigned __int8 *)(v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_layoutStyle);
  swift_beginAccess();
  LODWORD(v12) = *v12;
  v13 = (void *)objc_opt_self();
  if ((_DWORD)v12 == 1)
    v14 = objc_msgSend(v13, sel_whiteColor);
  else
    v14 = objc_msgSend(v13, sel_tertiarySystemBackgroundColor);
  v15 = v14;
  v16 = (uint64_t (*)(_QWORD *, _QWORD))UIButton.Configuration.background.modify();
  UIBackgroundConfiguration.backgroundColor.setter();
  result = v16(v21, 0);
  if ((a1 & 1) != 0)
  {
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
    v18 = (void *)*MEMORY[0x1E0DC4A90];
    v21[0] = 0xD000000000000014;
    v21[1] = 0x80000001BD68AA30;
    v21[2] = 2;
    v21[3] = v18;
    v22 = 0;
    v23 = 4;
    v24 = 0;
    v25 = 0;
    v19 = v18;
    static UIImage.symbolImage(for:)((uint64_t)v21);

    swift_bridgeObjectRelease();
    UIButton.Configuration.image.setter();
    UIButton.Configuration.imagePadding.setter();
    return UIButton.Configuration.contentInsets.setter();
  }
  return result;
}

void closure #1 in MultiwayViewController.createChangeLayoutButton()(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIButton.Configuration?);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v8 = MEMORY[0x1C3B752C0](a2 + 16);
  if (v8)
  {
    v9 = (void *)v8;
    MultiwayViewController.changeLayoutButtonConfiguration(wantsImage:)(a3 & 1);
    v10 = type metadata accessor for UIButton.Configuration();
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v10);
    UIButton.configuration.setter();

  }
}

void sub_1BD3EB3B8()
{
  void *v0;

}

uint64_t MultiwayViewController.didTapDeskViewButton()()
{
  uint64_t v0;
  void (**v1)(uint64_t);
  uint64_t result;
  void (*v3)(uint64_t);
  uint64_t v4;

  v1 = (void (**)(uint64_t))(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_deskViewTapHandler);
  result = swift_beginAccess();
  v3 = *v1;
  if (*v1)
  {
    v4 = swift_retain();
    v3(v4);
    return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v3);
  }
  return result;
}

Swift::Void __swiftcall MultiwayViewController.updateChangeLayoutButtonAppearanceState()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  unsigned __int8 *v4;
  int v5;
  void *v6;
  id v7;
  char **v8;
  id v9;
  _BYTE v10[216];
  uint64_t v11[27];

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  v2 = OUTLINED_FUNCTION_8_19();
  OUTLINED_FUNCTION_3_113(v2, (uint64_t)v10);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v10, (uint64_t)v11);
  if (getEnumTag for TapInteraction.EventType(v11) != 1)
  {
    v3 = *(void **)(v1 + 168);
    if (v3)
    {
      v4 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_layoutStyle);
      OUTLINED_FUNCTION_8_19();
      v5 = *v4;
      v6 = (void *)objc_opt_self();
      v7 = v3;
      v8 = &selRef_blackColor;
      if (!v5)
        v8 = &selRef_whiteColor;
      v9 = objc_msgSend(v6, *v8);
      objc_msgSend(v7, sel_setTintColor_, v9);

    }
  }
}

Swift::Void __swiftcall MultiwayViewController.updateCornerButtonsVisibility()()
{
  MultiwayViewController.updateChangeLayoutButtonVisibilityIfNeeded()();
  MultiwayViewController.updateDeskViewButtonVisibility()();
  MultiwayViewController.updateTopCornerButtonsStackViewVisibility(animated:)(1);
}

Swift::Void __swiftcall MultiwayViewController.updateChangeLayoutButtonVisibilityIfNeeded()()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t Enum;
  void *v4;
  id v5;
  char v6;
  void *v7;
  uint64_t v8;
  void *v9;
  char *v10;
  _BYTE v11[216];
  uint64_t aBlock[27];
  _BYTE v13[216];
  uint64_t v14[28];

  v1 = &v0[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent];
  v2 = OUTLINED_FUNCTION_8_19();
  OUTLINED_FUNCTION_3_113(v2, (uint64_t)v13);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v13, (uint64_t)v14);
  Enum = getEnumTag for TapInteraction.EventType(v14);
  if ((_DWORD)Enum == 1 || !*((_QWORD *)v1 + 24))
  {
    v7 = (void *)objc_opt_self();
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = v0;
    aBlock[4] = (uint64_t)partial apply for closure #1 in MultiwayViewController.updateChangeLayoutButtonVisibilityIfNeeded();
    aBlock[5] = v8;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)thunk for @escaping @callee_guaranteed () -> ();
    aBlock[3] = (uint64_t)&block_descriptor_80;
    v9 = _Block_copy(aBlock);
    v10 = v0;
    swift_release();
    objc_msgSend(v7, sel_animateWithDuration_animations_, v9, 0.2);
    _Block_release(v9);
  }
  else
  {
    OUTLINED_FUNCTION_3_113(Enum, (uint64_t)v11);
    outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v11, (uint64_t)aBlock);
    if (getEnumTag for TapInteraction.EventType(aBlock) != 1)
    {
      v4 = (void *)*((_QWORD *)v1 + 21);
      if (v4)
      {
        v5 = v4;
        v6 = MultiwayViewController.shouldShowChangeLayoutButton.getter();
        OUTLINED_FUNCTION_2_114(v6, sel_setHidden_);

      }
    }
  }
}

Swift::Void __swiftcall MultiwayViewController.updateDeskViewButtonVisibility()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  char v5;
  _BYTE v6[216];
  uint64_t v7[27];

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  v2 = OUTLINED_FUNCTION_8_19();
  OUTLINED_FUNCTION_3_113(v2, (uint64_t)v6);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v6, (uint64_t)v7);
  if (getEnumTag for TapInteraction.EventType(v7) != 1)
  {
    v3 = *(void **)(v1 + 184);
    if (v3)
    {
      v4 = v3;
      ConversationController.hasAvailableDeskViewCameras.getter();
      OUTLINED_FUNCTION_2_114(v5, sel_setHidden_);

    }
  }
}

void MultiwayViewController.updateTopCornerButtonsStackViewVisibility(animated:)(char a1)
{
  void *v1;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  _QWORD aBlock[6];
  _QWORD v11[27];
  uint64_t v12[24];
  id v13;

  v3 = (uint64_t)v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of MultiwayViewController.ViewContent?(v3, (uint64_t)v11);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v11, (uint64_t)v12);
  if (getEnumTag for TapInteraction.EventType(v12) != 1)
  {
    v4 = v13;
    if (v13)
    {
      if ((a1 & 1) != 0)
      {
        v5 = (void *)objc_opt_self();
        v6 = swift_allocObject();
        *(_QWORD *)(v6 + 16) = v4;
        *(_QWORD *)(v6 + 24) = v1;
        aBlock[4] = partial apply for closure #1 in MultiwayViewController.updateTopCornerButtonsStackViewVisibility(animated:);
        aBlock[5] = v6;
        aBlock[0] = MEMORY[0x1E0C809B0];
        aBlock[1] = 1107296256;
        aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
        aBlock[3] = &block_descriptor_6_9;
        v7 = _Block_copy(aBlock);
        v8 = v4;
        outlined retain of MultiwayViewController.ViewContent?(v11, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined copy of MultiwayViewController.ViewContent?);
        v9 = v1;
        swift_release();
        objc_msgSend(v5, sel_animateWithDuration_animations_, v7, 0.2);

        outlined retain of MultiwayViewController.ViewContent?(v11, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined consume of MultiwayViewController.ViewContent?);
        _Block_release(v7);
      }
      else
      {
        objc_msgSend(v13, sel_setHidden_, !MultiwayViewController.areControlsVisible.getter());
      }
    }
  }
}

uint64_t MultiwayViewController.shouldShowChangeLayoutButton.getter()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 *v2;
  int v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v11;
  _QWORD v12[27];
  uint64_t v13[27];

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of MultiwayViewController.ViewContent?(v1, (uint64_t)v12);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v12, (uint64_t)v13);
  if (getEnumTag for TapInteraction.EventType(v13) != 1)
  {
    v2 = (unsigned __int8 *)(v13[6] + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
    swift_beginAccess();
    v3 = *v2;
    v4 = (uint64_t *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController)
                   + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
    swift_beginAccess();
    v5 = *v4;
    swift_bridgeObjectRetain();
    outlined retain of MultiwayViewController.ViewContent?(v12, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined copy of MultiwayViewController.ViewContent?);
    MultiwayViewController.activeRemoteParticipants(in:)(v5);
    v7 = v6;
    swift_bridgeObjectRelease();
    v8 = *(_QWORD *)(v7 + 16);
    swift_bridgeObjectRelease();
    if ((v13[24] || MultiwayViewController.areControlsVisible.getter()) && v8 >= 3 && v3 != 129)
    {
      v11 = ConversationController.isOneToOneModeEnabled.getter();
      outlined retain of MultiwayViewController.ViewContent?(v12, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined consume of MultiwayViewController.ViewContent?);
      v9 = v11 ^ 1;
      return v9 & 1;
    }
    outlined retain of MultiwayViewController.ViewContent?(v12, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined consume of MultiwayViewController.ViewContent?);
  }
  v9 = 0;
  return v9 & 1;
}

BOOL MultiwayViewController.areControlsVisible.getter()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 *v3;
  _BYTE v4[216];
  uint64_t v5[28];

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of MultiwayViewController.ViewContent?(v1, (uint64_t)v4);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v4, (uint64_t)v5);
  if (getEnumTag for TapInteraction.EventType(v5) == 1)
    return 0;
  v3 = (unsigned __int8 *)(*(_QWORD *)(v1 + 48)
                         + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallConversationBannerState);
  swift_beginAccess();
  return *v3 == 1;
}

BOOL MultiwayViewController.shouldShowChangeLayoutButtonBackground.getter()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[216];
  uint64_t v7[27];
  _BYTE v8[216];
  uint64_t v9[27];

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of MultiwayViewController.ViewContent?(v1, (uint64_t)v8);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v8, (uint64_t)v9);
  if (getEnumTag for TapInteraction.EventType(v9) != 1)
  {
    if (*(_QWORD *)(v1 + 176))
    {
      outlined init with take of MultiwayViewController.ViewContent?(v1, (uint64_t)v6);
      outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v6, (uint64_t)v7);
      if (getEnumTag for TapInteraction.EventType(v7) != 1)
      {
        v2 = *(id *)v1;
        if ((MultiwayViewController.shouldShowChangeLayoutButton.getter() & 1) != 0)
        {
          ParticipantListViewController.participantCount.getter();
          v4 = v3;

          return v4 > 0;
        }

      }
    }
  }
  return 0;
}

void closure #1 in MultiwayViewController.updateChangeLayoutButtonVisibilityIfNeeded()(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  id v3;
  char v4;
  double v5;
  void *v6;
  id v7;
  BOOL v8;
  double v9;
  _BYTE v10[216];
  uint64_t v11[27];
  _BYTE v12[216];
  uint64_t v13[27];

  v1 = a1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of MultiwayViewController.ViewContent?(v1, (uint64_t)v12);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v12, (uint64_t)v13);
  if (getEnumTag for TapInteraction.EventType(v13) != 1)
  {
    v2 = *(void **)(v1 + 168);
    if (v2)
    {
      v3 = v2;
      v4 = MultiwayViewController.shouldShowChangeLayoutButton.getter();
      v5 = 0.0;
      if ((v4 & 1) != 0)
        v5 = 1.0;
      objc_msgSend(v3, sel_setAlpha_, v5);

    }
  }
  outlined init with take of MultiwayViewController.ViewContent?(v1, (uint64_t)v10);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v10, (uint64_t)v11);
  if (getEnumTag for TapInteraction.EventType(v11) != 1)
  {
    v6 = *(void **)(v1 + 176);
    if (v6)
    {
      v7 = v6;
      v8 = MultiwayViewController.shouldShowChangeLayoutButtonBackground.getter();
      v9 = 0.0;
      if (v8)
        v9 = 1.0;
      objc_msgSend(v7, sel_setAlpha_, v9);

    }
  }
}

uint64_t sub_1BD3EBD00()
{
  OUTLINED_FUNCTION_115();
  return swift_deallocObject();
}

void partial apply for closure #1 in MultiwayViewController.updateChangeLayoutButtonVisibilityIfNeeded()()
{
  uint64_t v0;

  closure #1 in MultiwayViewController.updateChangeLayoutButtonVisibilityIfNeeded()(*(_QWORD *)(v0 + 16));
}

void destroy for CornerButtonViews(id *a1)
{

}

_QWORD *initializeWithCopy for CornerButtonViews(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(void **)(a2 + 16);
  v6 = *(void **)(a2 + 24);
  a1[2] = v5;
  a1[3] = v6;
  v7 = v3;
  v8 = v4;
  v9 = v5;
  v10 = v6;
  return a1;
}

uint64_t assignWithCopy for CornerButtonViews(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a1 + 8);
  v8 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v8;
  v9 = v8;

  v10 = *(void **)(a1 + 16);
  v11 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v11;
  v12 = v11;

  v13 = *(void **)(a1 + 24);
  v14 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v14;
  v15 = v14;

  return a1;
}

uint64_t assignWithTake for CornerButtonViews(uint64_t a1, _OWORD *a2)
{
  void *v4;
  void *v5;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = a2[1];

  return a1;
}

ValueMetadata *type metadata accessor for CornerButtonViews()
{
  return &type metadata for CornerButtonViews;
}

id outlined copy of MultiwayViewController.ViewContent?(id result, void *a2, void *a3, void *a4, void *a5, uint64_t a6, void *a7, void *a8, void *a9, void *a10, void *a11, void *a12, void *a13, void *a14, void *a15, void *a16, void *a17, void *a18, uint64_t a19, uint64_t a20,void *a21,void *a22,void *a23,void *a24,void *a25,void *a26,void *a27)
{
  void *v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;

  if (result)
  {
    v33 = result;
    v34 = a27;
    v35 = v33;
    v36 = a2;
    v37 = a3;
    v38 = a4;
    v39 = a5;
    v40 = a7;
    v41 = a8;
    v42 = a9;
    v43 = a10;
    v44 = a11;
    v45 = a12;
    v46 = a13;
    v47 = a14;
    v48 = a15;
    v49 = a16;
    v50 = a17;
    v51 = a18;
    swift_retain();
    swift_retain();
    v52 = a21;
    v53 = a22;
    v54 = a23;
    v55 = a24;
    v56 = a25;
    return a26;
  }
  return result;
}

_QWORD *outlined retain of MultiwayViewController.ViewContent?(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21],
    a1[22],
    a1[23],
    a1[24],
    a1[25],
    a1[26]);
  return a1;
}

void outlined consume of MultiwayViewController.ViewContent?(void *a1, void *a2, void *a3, void *a4, void *a5, uint64_t a6, void *a7, void *a8, void *a9, void *a10, void *a11, void *a12, void *a13, void *a14, void *a15, void *a16, void *a17, void *a18, uint64_t a19, uint64_t a20,void *a21,void *a22,void *a23,void *a24,void *a25,void *a26,void *a27)
{
  if (a1)
  {

    swift_release();
    swift_release();

  }
}

id closure #1 in MultiwayViewController.updateTopCornerButtonsStackViewVisibility(animated:)(void *a1)
{
  BOOL v2;
  double v3;

  v2 = MultiwayViewController.areControlsVisible.getter();
  v3 = 0.0;
  if (v2)
    v3 = 1.0;
  return objc_msgSend(a1, sel_setAlpha_, v3);
}

uint64_t sub_1BD3EC230()
{
  uint64_t v0;

  OUTLINED_FUNCTION_115();

  return swift_deallocObject();
}

id partial apply for closure #1 in MultiwayViewController.updateTopCornerButtonsStackViewVisibility(animated:)()
{
  uint64_t v0;

  return closure #1 in MultiwayViewController.updateTopCornerButtonsStackViewVisibility(animated:)(*(void **)(v0 + 16));
}

uint64_t sub_1BD3EC260()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BD3EC284()
{
  swift_release();
  return swift_deallocObject();
}

void partial apply for closure #1 in MultiwayViewController.createChangeLayoutButton()(uint64_t a1)
{
  uint64_t v1;

  closure #1 in MultiwayViewController.createChangeLayoutButton()(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24));
}

Swift::Bool __swiftcall TUCall.canDisplayAlertUI(_:)(Swift::Bool a1)
{
  Swift::Bool v1;
  id v2;
  _BOOL4 v3;
  id v4;

  v1 = a1;
  v2 = OUTLINED_FUNCTION_25_1(a1, sel_callStatus);
  if ((_DWORD)v2 == 6)
  {
    v3 = 1;
  }
  else
  {
    v2 = OUTLINED_FUNCTION_25_1((uint64_t)v2, sel_callStatus);
    v3 = (_DWORD)v2 == 1;
  }
  v4 = OUTLINED_FUNCTION_25_1((uint64_t)v2, sel_isEmergency);
  if (!(_DWORD)v4 || (OUTLINED_FUNCTION_25_1((uint64_t)v4, sel_isFailureExpected) ^ 1 | v3) == 1)
    return 0;
  return v1;
}

BOOL @objc TUCall.canDisplayAlertUI(_:)(void *a1, uint64_t a2, Swift::Bool a3)
{
  id v4;
  Swift::Bool v5;

  v4 = a1;
  v5 = TUCall.canDisplayAlertUI(_:)(a3);

  return v5;
}

Swift::Bool __swiftcall TUCall.canDisplayRedirectingUI()()
{
  uint64_t v0;
  id v1;
  BOOL v2;
  unsigned int v3;
  Swift::Bool result;

  v1 = OUTLINED_FUNCTION_25_1(v0, sel_callStatus);
  if ((_DWORD)v1 == 6)
  {
    v2 = 1;
  }
  else
  {
    v1 = OUTLINED_FUNCTION_25_1((uint64_t)v1, sel_callStatus);
    v2 = (_DWORD)v1 == 1;
  }
  v3 = OUTLINED_FUNCTION_25_1((uint64_t)v1, sel_isEmergency);
  result = 0;
  if (v3)
  {
    if (!v2)
      return OUTLINED_FUNCTION_25_1(0, sel_hasBeenRedirected);
  }
  return result;
}

BOOL @objc TUCall.canDisplayRedirectingUI()(void *a1)
{
  id v1;
  Swift::Bool v2;

  v1 = a1;
  v2 = TUCall.canDisplayRedirectingUI()();

  return v2;
}

uint64_t ScreeningService.__allocating_init(logger:callServices:viewModel:getStreamToken:maxSecondsForScreening:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return ScreeningService.__allocating_init(logger:callServices:viewModel:getStreamToken:maxSecondsForScreening:)(a1, a2, a3, a4, a5, a6, specialized ScreeningService.__allocating_init(logger:callServices:viewModel:getStreamToken:maxSecondsForScreening:));
}

uint64_t ScreeningService.init(logger:callServices:viewModel:getStreamToken:maxSecondsForScreening:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return ScreeningService.__allocating_init(logger:callServices:viewModel:getStreamToken:maxSecondsForScreening:)(a1, a2, a3, a4, a5, a6, specialized ScreeningService.init(logger:callServices:viewModel:getStreamToken:maxSecondsForScreening:));
}

uint64_t ScreeningService.__allocating_init(logger:callServices:viewModel:getStreamToken:maxSecondsForScreening:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v15 = *(_QWORD *)(a2 + 24);
  v14 = *(_QWORD *)(a2 + 32);
  v16 = __swift_mutable_project_boxed_opaque_existential_1(a2, v15);
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_77();
  v19 = v18 - v17;
  (*(void (**)(uint64_t))(v20 + 16))(v18 - v17);
  v21 = a7(a1, v19, a3, a4, a5, a6, v7, v15, v14);
  __swift_destroy_boxed_opaque_existential_1(a2);
  return v21;
}

void ScreeningService.startScreening(callUUID:endCall:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_77();
  v10 = (v4 + OBJC_IVAR____TtC15ConversationKit16ScreeningService_logger);
  Logger.traceFunctionStart(file:function:line:)();
  ScreeningService.screen(_:)(a1, a2);
  OUTLINED_FUNCTION_16_31();
  OUTLINED_FUNCTION_29_1();
  Logger.logObject.getter();
  v11 = OUTLINED_FUNCTION_12_0();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = OUTLINED_FUNCTION_105();
    v20 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v12 = 136446466;
    swift_bridgeObjectRetain();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, (unint64_t)a2, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_11_11();
    *(_WORD *)(v12 + 12) = 2050;
    OUTLINED_FUNCTION_74();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_74();
    OUTLINED_FUNCTION_31_54(&dword_1BD004000, v10, v11, "onEnterScreeningState: Starting timer for %{public}s with %{public}ld seconds");
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_19_1();

  swift_release_n();
  v13 = specialized static Duration.seconds<A>(_:)(*(_QWORD *)(v4
                                                             + OBJC_IVAR____TtC15ConversationKit16ScreeningService_maxSecondsForScreening));
  v15 = v14;
  v16 = (_QWORD *)OUTLINED_FUNCTION_15();
  v16[2] = v4;
  v16[3] = a1;
  v16[4] = a2;
  v16[5] = a3;
  v16[6] = a4;
  v17 = (_QWORD *)OUTLINED_FUNCTION_15();
  v18 = a1;
  v19 = (uint64_t)v17;
  v17[2] = v4;
  v17[3] = v18;
  v17[4] = a2;
  OUTLINED_FUNCTION_16_31();
  OUTLINED_FUNCTION_29_1();
  swift_retain();
  swift_retain();
  TimerService.start(duration:onFire:onCancel:)(v13, v15, (uint64_t)&async function pointer to partial apply for closure #1 in ScreeningService.startScreening(callUUID:endCall:), (uint64_t)v16, (uint64_t)&async function pointer to partial apply for closure #2 in ScreeningService.startScreening(callUUID:endCall:), v19);
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_14_12();
  swift_release();
  OUTLINED_FUNCTION_52_1();
}

uint64_t ScreeningService.screen(_:)(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  Swift::String v15;
  uint64_t v17;

  v3 = v2;
  v6 = type metadata accessor for MovingToScreeningStateService();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v3 + OBJC_IVAR____TtC15ConversationKit16ScreeningService_logger;
  v11 = *(_QWORD *)(v3 + OBJC_IVAR____TtC15ConversationKit16ScreeningService_getStreamToken);
  v10 = *(_QWORD *)(v3 + OBJC_IVAR____TtC15ConversationKit16ScreeningService_getStreamToken + 8);
  v12 = type metadata accessor for Logger();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v8, v9, v12);
  v13 = &v8[*(int *)(v6 + 20)];
  *(_QWORD *)v13 = v11;
  *((_QWORD *)v13 + 1) = v10;
  v14 = &v8[*(int *)(v6 + 24)];
  *(_QWORD *)v14 = &async function pointer to partial apply for closure #1 in ScreeningService.screen(_:);
  *((_QWORD *)v14 + 1) = v3;
  swift_retain();
  swift_retain();
  v15._countAndFlagsBits = a1;
  v15._object = a2;
  MovingToScreeningStateService.startScreening(callUUID:)(v15);
  return outlined destroy of MovingToScreeningStateService((uint64_t)v8);
}

uint64_t closure #1 in ScreeningService.startScreening(callUUID:endCall:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[7] = a4;
  v5[8] = a5;
  v5[5] = a2;
  v5[6] = a3;
  v5[4] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  v5[9] = swift_task_alloc();
  v5[10] = type metadata accessor for MainActor();
  v5[11] = static MainActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  return swift_task_switch();
}

uint64_t closure #1 in ScreeningService.startScreening(callUUID:endCall:)()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  v1 = *(_QWORD *)(v0 + 32);
  swift_release();
  OUTLINED_FUNCTION_29_1();
  OUTLINED_FUNCTION_16_31();
  v2 = Logger.logObject.getter();
  v3 = static os_log_type_t.error.getter();
  if (OUTLINED_FUNCTION_4_14(v3))
  {
    v4 = *(_QWORD *)(v0 + 48);
    v20 = *(_QWORD *)(v0 + 40);
    v5 = *(_QWORD *)(v0 + 32);
    v6 = OUTLINED_FUNCTION_105();
    v21 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v6 = 134349314;
    v7 = *(_QWORD *)(v5 + OBJC_IVAR____TtC15ConversationKit16ScreeningService_maxSecondsForScreening);
    OUTLINED_FUNCTION_14_12();
    *(_QWORD *)(v0 + 16) = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_14_12();
    *(_WORD *)(v6 + 12) = 2082;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 24) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v20, v4, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_11_11();
    OUTLINED_FUNCTION_31_54(&dword_1BD004000, v2, (os_log_type_t)v1, "onEnterScreeningState: timer was exceeded for %{public}ld seconds for call %{public}s");
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }
  swift_release_n();

  OUTLINED_FUNCTION_19_1();
  v8 = *(_QWORD *)(v0 + 72);
  v10 = *(_QWORD *)(v0 + 56);
  v9 = *(_QWORD *)(v0 + 64);
  v12 = *(_QWORD *)(v0 + 40);
  v11 = *(_QWORD *)(v0 + 48);
  static TaskPriority.userInitiated.getter();
  v13 = OUTLINED_FUNCTION_415();
  OUTLINED_FUNCTION_27_4(v8, v14, v15, v13);
  swift_bridgeObjectRetain();
  swift_retain();
  v16 = static MainActor.shared.getter();
  v17 = (_QWORD *)OUTLINED_FUNCTION_15();
  v18 = MEMORY[0x1E0DF06E8];
  v17[2] = v16;
  v17[3] = v18;
  v17[4] = v10;
  v17[5] = v9;
  v17[6] = v12;
  v17[7] = v11;
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
  swift_release();
  OUTLINED_FUNCTION_12();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t closure #1 in closure #1 in ScreeningService.startScreening(callUUID:endCall:)(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  _QWORD *v11;
  int *v13;

  v7[2] = type metadata accessor for MainActor();
  v7[3] = static MainActor.shared.getter();
  v13 = (int *)((char *)a4 + *a4);
  v11 = (_QWORD *)swift_task_alloc();
  v7[4] = v11;
  *v11 = v7;
  v11[1] = closure #1 in closure #1 in ScreeningService.startScreening(callUUID:endCall:);
  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))v13)(a6, a7, 0);
}

uint64_t closure #1 in closure #1 in ScreeningService.startScreening(callUUID:endCall:)()
{
  OUTLINED_FUNCTION_1_6();
  dispatch thunk of Actor.unownedExecutor.getter();
  return OUTLINED_FUNCTION_2_8();
}

uint64_t closure #2 in ScreeningService.startScreening(callUUID:endCall:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  type metadata accessor for MainActor();
  v3[6] = static MainActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  return swift_task_switch();
}

uint64_t closure #2 in ScreeningService.startScreening(callUUID:endCall:)()
{
  uint64_t v0;
  os_log_type_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  unint64_t v5;
  uint64_t v6;
  uint8_t *v7;
  uint64_t v9;

  v2 = *(_QWORD *)(v0 + 24);
  swift_release();
  v3 = (v2 + OBJC_IVAR____TtC15ConversationKit16ScreeningService_logger);
  OUTLINED_FUNCTION_16_31();
  Logger.logObject.getter();
  v4 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_4_14(v4))
  {
    v6 = *(_QWORD *)(v0 + 32);
    v5 = *(_QWORD *)(v0 + 40);
    v7 = (uint8_t *)OUTLINED_FUNCTION_105();
    v9 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v7 = 136446210;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 16) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v6, v5, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_11_11();
    _os_log_impl(&dword_1BD004000, v3, v1, "onEnterScreeningState: Canceled timer for %{public}s", v7, 0xCu);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  OUTLINED_FUNCTION_19_1();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t closure #3 in ScreeningService.startScreening(callUUID:endCall:)(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  _QWORD *v13;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t);

  v8[2] = type metadata accessor for MainActor();
  v8[3] = static MainActor.shared.getter();
  v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)a4 + *a4);
  v13 = (_QWORD *)swift_task_alloc();
  v8[4] = v13;
  *v13 = v8;
  v13[1] = closure #1 in closure #1 in ScreeningService.startScreening(callUUID:endCall:);
  return v15(a6, a7, a8);
}

Swift::Void __swiftcall ScreeningService.stopScreening()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t ObjectType;
  void (*v12)(_QWORD, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_77();
  v5 = v4 - v3;
  v6 = (v0 + OBJC_IVAR____TtC15ConversationKit16ScreeningService_logger);
  Logger.logObject.getter();
  v7 = OUTLINED_FUNCTION_12_0();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)OUTLINED_FUNCTION_105();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_1BD004000, v6, v7, "onExitScreeningState: exiting state and ending captions.", v8, 2u);
    OUTLINED_FUNCTION_60();
  }

  v9 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit16ScreeningService_provider);
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit16ScreeningService_provider))
  {
    v10 = v9[1];
    ObjectType = swift_getObjectType();
    v12 = *(void (**)(_QWORD, uint64_t, uint64_t))(v10 + 48);
    swift_unknownObjectRetain();
    v12(0, ObjectType, v10);
    swift_unknownObjectRelease();
    v13 = *v9;
  }
  else
  {
    v13 = 0;
  }
  v14 = v9[1];
  *v9 = 0;
  v9[1] = 0;
  if (one-time initialization token for viewModel != -1)
    swift_once();
  swift_retain();
  TranscriptionViewModel.state.setter();
  if (one-time initialization token for shared != -1)
    swift_once();
  v15 = static CallScreeningRTTHelper.shared;
  v16 = TranscriptionViewModel.captions.getter();
  v17 = TranscriptionViewModel.callUUID.getter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v15 + 160))(v16, v17, v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  TranscriptionViewModel.callUUID.setter();
  v19 = OBJC_IVAR____TtC15ConversationKit16ScreeningService_timerService;
  v20 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit16ScreeningService_timerService);
  type metadata accessor for TimerService();
  swift_allocObject();
  OUTLINED_FUNCTION_23_67();
  *(_QWORD *)(v1 + v19) = TimerService.init()();
  swift_release();
  static TaskPriority.userInitiated.getter();
  v21 = OUTLINED_FUNCTION_415();
  OUTLINED_FUNCTION_28_58(v5, v22, v23, v21);
  OUTLINED_FUNCTION_23_67();
  v24 = static MainActor.shared.getter();
  v25 = (_QWORD *)OUTLINED_FUNCTION_15();
  v26 = MEMORY[0x1E0DF06E8];
  v25[2] = v24;
  v25[3] = v26;
  v25[4] = v20;
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
  swift_release();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_74();
  $defer #1 () in ScreeningService.stopScreening()(v1, v13, v14);
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_52_1();
}

uint64_t $defer #1 () in ScreeningService.stopScreening()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v14;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 1, 1, v9);
  type metadata accessor for MainActor();
  swift_unknownObjectRetain();
  swift_retain();
  v10 = static MainActor.shared.getter();
  v11 = (_QWORD *)swift_allocObject();
  v12 = MEMORY[0x1E0DF06E8];
  v11[2] = v10;
  v11[3] = v12;
  v11[4] = a1;
  v11[5] = a2;
  v11[6] = a3;
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
  return swift_release();
}

uint64_t closure #1 in ScreeningService.stopScreening()()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[2] = type metadata accessor for MainActor();
  v0[3] = static MainActor.shared.getter();
  v1 = (_QWORD *)swift_task_alloc();
  v0[4] = v1;
  *v1 = v0;
  v1[1] = closure #1 in ScreeningService.stopScreening();
  return TimerService.cancel()();
}

{
  OUTLINED_FUNCTION_1_6();
  swift_release();
  dispatch thunk of Actor.unownedExecutor.getter();
  return swift_task_switch();
}

uint64_t closure #1 in ScreeningService.screen(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[3] = a2;
  v5[4] = a5;
  v5[2] = a1;
  v6 = type metadata accessor for Logger();
  v5[5] = v6;
  v5[6] = *(_QWORD *)(v6 - 8);
  v5[7] = swift_task_alloc();
  type metadata accessor for MainActor();
  v5[8] = static MainActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  return swift_task_switch();
}

uint64_t closure #1 in ScreeningService.screen(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _UNKNOWN **v11;
  uint64_t ObjectType;
  void (*v13)(uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 24);
  v5 = *(_QWORD *)(v0 + 32);
  v6 = *(_QWORD *)(v0 + 16);
  swift_release();
  v7 = (_QWORD *)(v5 + OBJC_IVAR____TtC15ConversationKit16ScreeningService_provider);
  *v7 = v6;
  v7[1] = v4;
  swift_unknownObjectRetain_n();
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v5 + OBJC_IVAR____TtC15ConversationKit16ScreeningService_logger, v2);
  v8 = OUTLINED_FUNCTION_15();
  swift_weakInit();
  type metadata accessor for ScreeningCaptions();
  swift_allocObject();
  v9 = ScreeningCaptions.init(logger:onUpdateCaptions:)(v1, (uint64_t)partial apply for closure #1 in closure #1 in ScreeningService.screen(_:), v8);
  v10 = OBJC_IVAR____TtC15ConversationKit16ScreeningService_screeningCaptions;
  *(_QWORD *)(v5 + OBJC_IVAR____TtC15ConversationKit16ScreeningService_screeningCaptions) = v9;
  swift_release();
  TranscriptionViewModel.state.setter();
  if (*(_QWORD *)(v5 + v10))
    v11 = &protocol witness table for ScreeningCaptions;
  else
    v11 = 0;
  ObjectType = swift_getObjectType();
  v13 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v4 + 24);
  v14 = swift_retain();
  v13(v14, v11, ObjectType, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(1, ObjectType, v4);
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_12();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t closure #1 in closure #1 in ScreeningService.screen(_:)(uint64_t a1)
{
  uint64_t result;
  char v3;
  char v4;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    if (a1)
    {
      swift_bridgeObjectRetain();
      swift_retain();
      TranscriptionViewModel.isGibberish.getter();
      v4 = v3;
      swift_release();
      if ((v4 & 1) != 0)
      {
        swift_retain();
        TranscriptionViewModel.isGibberish.setter();
        swift_release();
      }
      swift_retain();
      TranscriptionViewModel.captions.setter();
      swift_release();
    }
    else
    {
      swift_retain();
      TranscriptionViewModel.isGibberish.setter();
      swift_release();
    }
    return swift_release();
  }
  return result;
}

uint64_t ScreeningService.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit16ScreeningService_logger;
  v2 = OUTLINED_FUNCTION_17_2();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC15ConversationKit16ScreeningService_callServices);
  OUTLINED_FUNCTION_3_88();
  swift_release();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_3_88();
  OUTLINED_FUNCTION_3_88();
  return v0;
}

uint64_t ScreeningService.__deallocating_deinit()
{
  ScreeningService.deinit();
  return swift_deallocClassInstance();
}

uint64_t ScreeningService.EndCallReason.description.getter(void *a1)
{
  id v2;
  Swift::String v3;

  if (!a1)
    return 0x74756F656D6954;
  v2 = a1;
  v3._countAndFlagsBits = 0x28726F727245;
  v3._object = (void *)0xE600000000000000;
  String.append(_:)(v3);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
  _print_unlocked<A, B>(_:_:)();

  return 0;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance ScreeningService.EndCallReason()
{
  void **v0;

  return ScreeningService.EndCallReason.description.getter(*v0);
}

uint64_t closure #1 in $defer #1 () in ScreeningService.stopScreening()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  v7 = type metadata accessor for Logger();
  v6[5] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v6[6] = v8;
  v6[7] = *(_QWORD *)(v8 + 64);
  v6[8] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  v6[9] = swift_task_alloc();
  type metadata accessor for MainActor();
  v6[10] = static MainActor.shared.getter();
  v6[11] = dispatch thunk of Actor.unownedExecutor.getter();
  v6[12] = v9;
  return swift_task_switch();
}

uint64_t closure #1 in $defer #1 () in ScreeningService.stopScreening()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;

  v2 = v0[8];
  v1 = v0[9];
  v4 = v0[6];
  v3 = v0[7];
  v6 = v0[4];
  v5 = v0[5];
  v8 = v0[2];
  v7 = v0[3];
  MEMORY[0x1C3B731D8]();
  v9 = OUTLINED_FUNCTION_415();
  OUTLINED_FUNCTION_27_4(v1, v10, v11, v9);
  v12 = OBJC_IVAR____TtC15ConversationKit16ScreeningService_logger;
  v0[13] = OBJC_IVAR____TtC15ConversationKit16ScreeningService_logger;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v8 + v12, v5);
  v13 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v14 = (v3 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = 0;
  *(_QWORD *)(v15 + 24) = 0;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v15 + v13, v2, v5);
  v16 = (_QWORD *)(v15 + v14);
  *v16 = v7;
  v16[1] = v6;
  swift_unknownObjectRetain();
  v0[14] = _sScTss5NeverORs_rlE8detached8priority9operationScTyxABGScPSg_xyYaYAcntFZyt_Tgm5(v1, (uint64_t)&async function pointer to partial apply for closure #1 in closure #1 in $defer #1 () in ScreeningService.stopScreening(), v15);
  outlined destroy of TaskPriority?(v1);
  v17 = (_QWORD *)swift_task_alloc();
  v0[15] = v17;
  *v17 = v0;
  v17[1] = closure #1 in $defer #1 () in ScreeningService.stopScreening();
  return Task<>.value.getter();
}

{
  swift_task_dealloc();
  OUTLINED_FUNCTION_43();
  return OUTLINED_FUNCTION_2_8();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 16);
  swift_release();
  v3 = (void *)(v2 + v1);
  Logger.logObject.getter();
  v4 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_23_5(v4))
  {
    *(_WORD *)OUTLINED_FUNCTION_105() = 0;
    OUTLINED_FUNCTION_11_78(&dword_1BD004000, v5, v6, "Screening Service: Finished deinitialization of provider.");
    OUTLINED_FUNCTION_60();
  }

  OUTLINED_FUNCTION_12();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_14_3(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t closure #1 in closure #1 in $defer #1 () in ScreeningService.stopScreening()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch();
}

uint64_t closure #1 in closure #1 in $defer #1 () in ScreeningService.stopScreening()()
{
  uint64_t v0;
  void *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(void **)(v0 + 16);
  Logger.logObject.getter();
  v2 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_23_5(v2))
  {
    *(_WORD *)OUTLINED_FUNCTION_105() = 0;
    OUTLINED_FUNCTION_11_78(&dword_1BD004000, v3, v4, "Screening Service: About to deinitialize provider.");
    OUTLINED_FUNCTION_60();
  }

  return OUTLINED_FUNCTION_14_3(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t specialized ScreeningService.__allocating_init(logger:callServices:viewModel:getStreamToken:maxSecondsForScreening:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  v22 = a6;
  v15 = *(_QWORD *)(a8 - 8);
  MEMORY[0x1E0C80A78](a1);
  v17 = (char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a2, a8);
  v19 = specialized ScreeningService.init(logger:callServices:viewModel:getStreamToken:maxSecondsForScreening:)(a1, (uint64_t)v17, a3, a4, a5, v22, v18, a8, a9);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(a2, a8);
  return v19;
}

uint64_t specialized ScreeningService.init(logger:callServices:viewModel:getStreamToken:maxSecondsForScreening:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t *boxed_opaque_existential_1;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;

  v25 = a8;
  v26 = a9;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v24);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a8 - 8) + 32))(boxed_opaque_existential_1, a2, a8);
  v18 = (_QWORD *)(a7 + OBJC_IVAR____TtC15ConversationKit16ScreeningService_provider);
  *v18 = 0;
  v18[1] = 0;
  *(_QWORD *)(a7 + OBJC_IVAR____TtC15ConversationKit16ScreeningService_screeningCaptions) = 0;
  v19 = OBJC_IVAR____TtC15ConversationKit16ScreeningService_timerService;
  type metadata accessor for TimerService();
  swift_allocObject();
  *(_QWORD *)(a7 + v19) = TimerService.init()();
  v20 = a7 + OBJC_IVAR____TtC15ConversationKit16ScreeningService_logger;
  v21 = type metadata accessor for Logger();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v20, a1, v21);
  outlined init with take of Notice(&v24, a7 + OBJC_IVAR____TtC15ConversationKit16ScreeningService_callServices);
  *(_QWORD *)(a7 + OBJC_IVAR____TtC15ConversationKit16ScreeningService_viewModel) = a3;
  v22 = (_QWORD *)(a7 + OBJC_IVAR____TtC15ConversationKit16ScreeningService_getStreamToken);
  *v22 = a4;
  v22[1] = a5;
  *(_QWORD *)(a7 + OBJC_IVAR____TtC15ConversationKit16ScreeningService_maxSecondsForScreening) = a6;
  return a7;
}

uint64_t sub_1BD3EDEEC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_67_1();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t partial apply for closure #3 in ScreeningService.startScreening(callUUID:endCall:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_20_72();
  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = swift_task_alloc();
  v4 = (_QWORD *)OUTLINED_FUNCTION_61_5(v3);
  v5 = OUTLINED_FUNCTION_5_113(v4);
  return closure #3 in ScreeningService.startScreening(callUUID:endCall:)(v5, v6, v7, v8, v9, v10, v1, v2);
}

uint64_t sub_1BD3EDF90()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ScreeningService.startScreening(callUUID:endCall:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v0[4];
  v3 = v0[5];
  v4 = v0[6];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  v6 = OUTLINED_FUNCTION_22_72(v5, (uint64_t)_sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tgq5TATQ0_);
  return closure #1 in ScreeningService.startScreening(callUUID:endCall:)(v6, v7, v2, v3, v4);
}

uint64_t sub_1BD3EE02C()
{
  return objectdestroy_7Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30], (void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t partial apply for closure #2 in ScreeningService.startScreening(callUUID:endCall:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  v4 = OUTLINED_FUNCTION_22_72(v3, (uint64_t)_sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tgq5TATQ0_);
  return closure #2 in ScreeningService.startScreening(callUUID:endCall:)(v4, v5, v2);
}

uint64_t sub_1BD3EE094()
{
  return objectdestroy_7Tm((void (*)(_QWORD))MEMORY[0x1E0DEEEC0], (void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t objectdestroy_7Tm(void (*a1)(_QWORD), void (*a2)(_QWORD))
{
  uint64_t v2;

  a1(*(_QWORD *)(v2 + 16));
  a2(*(_QWORD *)(v2 + 32));
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ScreeningService.stopScreening()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = swift_task_alloc();
  v2 = (_QWORD *)OUTLINED_FUNCTION_61_5(v1);
  *v2 = v0;
  v2[1] = _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tgq5TATQ0_;
  return closure #1 in ScreeningService.stopScreening()();
}

uint64_t ObjC metadata update function for ScreeningService()
{
  return type metadata accessor for ScreeningService();
}

uint64_t type metadata accessor for ScreeningService()
{
  uint64_t result;

  result = type metadata singleton initialization cache for ScreeningService;
  if (!type metadata singleton initialization cache for ScreeningService)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata completion function for ScreeningService()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Logger();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for ScreeningService()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ScreeningService.__allocating_init(logger:callServices:viewModel:getStreamToken:maxSecondsForScreening:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

_QWORD *initializeBufferWithCopyOfBuffer for ScreeningService.EndCallReason(_QWORD *a1, id *a2)
{
  id v3;
  id v4;

  v3 = *a2;
  v4 = *a2;
  *a1 = v3;
  return a1;
}

void destroy for ScreeningService.EndCallReason(id *a1)
{

}

void **assignWithCopy for ScreeningService.EndCallReason(void **a1, id *a2)
{
  id v3;
  id v4;
  void *v5;

  v3 = *a2;
  v4 = *a2;
  v5 = *a1;
  *a1 = v3;

  return a1;
}

void **assignWithTake for ScreeningService.EndCallReason(void **a1, void **a2)
{
  void *v3;

  v3 = *a1;
  *a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for ScreeningService.EndCallReason()
{
  return &type metadata for ScreeningService.EndCallReason;
}

uint64_t sub_1BD3EE304()
{
  OUTLINED_FUNCTION_67_1();
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in $defer #1 () in ScreeningService.stopScreening()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  OUTLINED_FUNCTION_20_72();
  v7 = *(_QWORD *)(v1 + 48);
  v8 = swift_task_alloc();
  v9 = (_QWORD *)OUTLINED_FUNCTION_61_5(v8);
  *v9 = v3;
  v9[1] = partial apply for closure #1 in MultiwayViewController.registerForSystemEventsIfNecessary();
  return closure #1 in $defer #1 () in ScreeningService.stopScreening()(v0, v2, v4, v5, v6, v7);
}

uint64_t sub_1BD3EE3A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = OUTLINED_FUNCTION_17_2();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  OUTLINED_FUNCTION_67_1();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in $defer #1 () in ScreeningService.stopScreening()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_17_2() - 8) + 80);
  v3 = v0 + ((v2 + 32) & ~v2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tgq5TATQ0_;
  v4[2] = v3;
  return swift_task_switch();
}

uint64_t sub_1BD3EE4A4()
{
  OUTLINED_FUNCTION_67_1();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in ScreeningService.startScreening(callUUID:endCall:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_20_72();
  v1 = *(_QWORD *)(v0 + 56);
  v2 = swift_task_alloc();
  v3 = (_QWORD *)OUTLINED_FUNCTION_61_5(v2);
  v4 = OUTLINED_FUNCTION_5_113(v3);
  return closure #1 in closure #1 in ScreeningService.startScreening(callUUID:endCall:)(v4, v5, v6, v7, v8, v9, v1);
}

uint64_t partial apply for closure #1 in ScreeningService.screen(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v10;

  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v10;
  *v10 = v5;
  v10[1] = _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tgq5TATQ0_;
  return closure #1 in ScreeningService.screen(_:)(a1, a2, a3, a4, v4);
}

uint64_t outlined destroy of MovingToScreeningStateService(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MovingToScreeningStateService();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BD3EE5EC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in ScreeningService.screen(_:)(uint64_t a1)
{
  return closure #1 in closure #1 in ScreeningService.screen(_:)(a1);
}

uint64_t WeakBox.__allocating_init(_:)()
{
  uint64_t v0;

  v0 = swift_allocObject();
  WeakBox.init(_:)();
  return v0;
}

uint64_t WeakBox.box.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_2_0();
  return MEMORY[0x1C3B752C0](v0 + 16);
}

uint64_t WeakBox.box.setter()
{
  OUTLINED_FUNCTION_2_0();
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*WeakBox.box.modify(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  OUTLINED_FUNCTION_2_0();
  v3[3] = MEMORY[0x1C3B752C0](v1 + 16);
  return WeakBox.box.modify;
}

void WeakBox.box.modify(void **a1, char a2)
{
  void *v3;

  v3 = *a1;
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v3);
}

uint64_t WeakBox.init(_:)()
{
  uint64_t v0;

  swift_unknownObjectWeakInit();
  OUTLINED_FUNCTION_2_0();
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t WeakBox.deinit()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy();
  return v0;
}

uint64_t WeakBox.__deallocating_deinit()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocClassInstance();
}

uint64_t sub_1BD3EE85C()
{
  return 8;
}

_QWORD *sub_1BD3EE868(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t type metadata completion function for WeakBox()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for WeakBox(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for WeakBox);
}

uint64_t method lookup function for WeakBox()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of WeakBox.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

void specialized Sequence.first(where:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  id i;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  void *v38;

  v31 = a2;
  v4 = type metadata accessor for UUID();
  v29 = *(_QWORD *)(v4 - 8);
  v30 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = v2;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
    lazy protocol witness table accessor for type TUConversation and conformance NSObject();
    Set.Iterator.init(_cocoa:)();
    a1 = v33;
    v28 = v34;
    v7 = v35;
    v8 = v36;
    v9 = v37;
  }
  else
  {
    v10 = -1 << *(_BYTE *)(a1 + 32);
    v11 = *(_QWORD *)(a1 + 56);
    v28 = a1 + 56;
    v12 = ~v10;
    v13 = -v10;
    if (v13 < 64)
      v14 = ~(-1 << v13);
    else
      v14 = -1;
    v9 = v14 & v11;
    swift_bridgeObjectRetain();
    v7 = v12;
    v8 = 0;
  }
  v24 = v7;
  v27 = (unint64_t)(v7 + 64) >> 6;
  v26 = MEMORY[0x1E0DEE9B0] + 8;
  if (a1 < 0)
    goto LABEL_10;
LABEL_8:
  if (v9)
  {
    v15 = (v9 - 1) & v9;
    v16 = __clz(__rbit64(v9)) | (v8 << 6);
    v17 = v8;
    goto LABEL_29;
  }
  v20 = v8 + 1;
  if (!__OFADD__(v8, 1))
  {
    if (v20 < v27)
    {
      v21 = *(_QWORD *)(v28 + 8 * v20);
      v17 = v8 + 1;
      if (v21)
        goto LABEL_28;
      v17 = v8 + 2;
      if (v8 + 2 >= v27)
        goto LABEL_33;
      v21 = *(_QWORD *)(v28 + 8 * v17);
      if (v21)
        goto LABEL_28;
      v17 = v8 + 3;
      if (v8 + 3 >= v27)
        goto LABEL_33;
      v21 = *(_QWORD *)(v28 + 8 * v17);
      if (v21)
        goto LABEL_28;
      v17 = v8 + 4;
      if (v8 + 4 >= v27)
        goto LABEL_33;
      v21 = *(_QWORD *)(v28 + 8 * v17);
      if (v21)
      {
LABEL_28:
        v15 = (v21 - 1) & v21;
        v16 = __clz(__rbit64(v21)) + (v17 << 6);
LABEL_29:
        for (i = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v16); i; v15 = v9)
        {
          v23 = objc_msgSend(i, sel_UUID, v24);
          static UUID._unconditionallyBridgeFromObjectiveC(_:)();

          LOBYTE(v23) = static UUID.== infix(_:_:)();
          (*(void (**)(char *, uint64_t))(v29 + 8))(v6, v30);
          if ((v23 & 1) != 0)
            break;

          v8 = v17;
          v9 = v15;
          if ((a1 & 0x8000000000000000) == 0)
            goto LABEL_8;
LABEL_10:
          v18 = __CocoaSet.Iterator.next()();
          if (!v18)
            break;
          v32 = v18;
          _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
          swift_unknownObjectRetain();
          swift_dynamicCast();
          i = v38;
          swift_unknownObjectRelease();
          v17 = v8;
        }
        goto LABEL_33;
      }
      v17 = v8 + 5;
      if (v8 + 5 < v27)
      {
        v21 = *(_QWORD *)(v28 + 8 * v17);
        if (!v21)
        {
          v22 = v8 + 6;
          while (v22 < v27)
          {
            v21 = *(_QWORD *)(v28 + 8 * v22++);
            if (v21)
            {
              v17 = v22 - 1;
              goto LABEL_28;
            }
          }
          goto LABEL_33;
        }
        goto LABEL_28;
      }
    }
LABEL_33:
    outlined consume of [String : Application].Iterator._Variant();
    swift_release();
    return;
  }
  __break(1u);
}

void specialized Sequence.first(where:)(uint64_t a1, char *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char **v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  id i;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[2];
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  void *v43;

  v32 = a2;
  v3 = type metadata accessor for UUID();
  v30 = *(_QWORD *)(v3 - 8);
  v31 = v3;
  MEMORY[0x1E0C80A78](v3);
  v29 = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
    lazy protocol witness table accessor for type TUConversation and conformance NSObject();
    Set.Iterator.init(_cocoa:)();
    a1 = v38;
    v36 = v39;
    v5 = v40;
    v6 = v41;
    v7 = v42;
  }
  else
  {
    v8 = -1 << *(_BYTE *)(a1 + 32);
    v9 = *(_QWORD *)(a1 + 56);
    v36 = a1 + 56;
    v10 = ~v8;
    v11 = -v8;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v7 = v12 & v9;
    swift_bridgeObjectRetain();
    v5 = v10;
    v6 = 0;
  }
  v28[1] = v5;
  v34 = a1 & 0x7FFFFFFFFFFFFFFFLL;
  v35 = (unint64_t)(v5 + 64) >> 6;
  v13 = &selRef_associatedAppBundleIdentifier;
  v33 = MEMORY[0x1E0DEE9B0] + 8;
  if (a1 < 0)
    goto LABEL_10;
LABEL_8:
  if (v7)
  {
    v14 = (v7 - 1) & v7;
    v15 = __clz(__rbit64(v7)) | (v6 << 6);
    v16 = v6;
    goto LABEL_29;
  }
  v19 = v6 + 1;
  if (!__OFADD__(v6, 1))
  {
    if (v19 < v35)
    {
      v20 = *(_QWORD *)(v36 + 8 * v19);
      v16 = v6 + 1;
      if (v20)
        goto LABEL_28;
      v16 = v6 + 2;
      if (v6 + 2 >= v35)
        goto LABEL_36;
      v20 = *(_QWORD *)(v36 + 8 * v16);
      if (v20)
        goto LABEL_28;
      v16 = v6 + 3;
      if (v6 + 3 >= v35)
        goto LABEL_36;
      v20 = *(_QWORD *)(v36 + 8 * v16);
      if (v20)
        goto LABEL_28;
      v16 = v6 + 4;
      if (v6 + 4 >= v35)
        goto LABEL_36;
      v20 = *(_QWORD *)(v36 + 8 * v16);
      if (v20)
      {
LABEL_28:
        v14 = (v20 - 1) & v20;
        v15 = __clz(__rbit64(v20)) + (v16 << 6);
LABEL_29:
        for (i = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v15); i; v13 = &selRef_associatedAppBundleIdentifier)
        {
          if (objc_msgSend(i, v13[194]))
          {
            if (objc_msgSend(i, v13[194]) != (id)4)
            {
              if (!objc_msgSend(i, sel_avMode))
                break;
              v22 = (uint64_t *)&v32[OBJC_IVAR____TtC15ConversationKit21PlaceholderCallCenter_expectedAVLessConversationUUIDs];
              swift_beginAccess();
              v23 = *v22;
              swift_bridgeObjectRetain();
              v24 = objc_msgSend(i, sel_UUID);
              v25 = a1;
              v26 = (uint64_t)v29;
              static UUID._unconditionallyBridgeFromObjectiveC(_:)();

              LOBYTE(v24) = specialized Set.contains(_:)(v26, v23);
              swift_bridgeObjectRelease();
              v27 = v26;
              a1 = v25;
              v13 = &selRef_associatedAppBundleIdentifier;
              (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v27, v31);
              if ((v24 & 1) != 0)
                break;
            }
          }

          v6 = v16;
          v7 = v14;
          if ((a1 & 0x8000000000000000) == 0)
            goto LABEL_8;
LABEL_10:
          v17 = __CocoaSet.Iterator.next()();
          if (!v17)
            break;
          v37 = v17;
          _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
          swift_unknownObjectRetain();
          swift_dynamicCast();
          i = v43;
          swift_unknownObjectRelease();
          v16 = v6;
          v14 = v7;
        }
        goto LABEL_36;
      }
      v16 = v6 + 5;
      if (v6 + 5 < v35)
      {
        v20 = *(_QWORD *)(v36 + 8 * v16);
        if (!v20)
        {
          v21 = v6 + 6;
          while (v21 < v35)
          {
            v20 = *(_QWORD *)(v36 + 8 * v21++);
            if (v20)
            {
              v16 = v21 - 1;
              goto LABEL_28;
            }
          }
          goto LABEL_36;
        }
        goto LABEL_28;
      }
    }
LABEL_36:
    outlined consume of [String : Application].Iterator._Variant();

    return;
  }
  __break(1u);
}

void PlaceholderCallCenter.avLessConversation(for:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t ObjectType;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;

  OUTLINED_FUNCTION_93();
  v3 = v2;
  v5 = v4;
  v6 = OUTLINED_FUNCTION_33_0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_11_2();
  v8 = PlaceholderCallCenter.avLessConversation.getter();
  if (!v8)
    goto LABEL_6;
  v9 = (void *)v8;
  ObjectType = swift_getObjectType();
  v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 472))(ObjectType, v3);
  if ((v11 & 1) == 0)
  {
    v12 = (uint64_t *)(v0 + OBJC_IVAR____TtC15ConversationKit21PlaceholderCallCenter_expectedAVLessConversationUUIDs);
    swift_beginAccess();
    v13 = *v12;
    v14 = swift_bridgeObjectRetain();
    v15 = OUTLINED_FUNCTION_9(v14, sel_UUID);
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    LOBYTE(v15) = specialized Set.contains(_:)(v1, v13);
    swift_bridgeObjectRelease();
    v11 = OUTLINED_FUNCTION_40_0(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
    if ((v15 & 1) == 0)
    {

LABEL_6:
      *(_QWORD *)(v5 + 32) = 0;
      *(_OWORD *)v5 = 0u;
      *(_OWORD *)(v5 + 16) = 0u;
      goto LABEL_7;
    }
  }
  *(_QWORD *)(v5 + 24) = OUTLINED_FUNCTION_17_8(v11, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
  *(_QWORD *)(v5 + 32) = &protocol witness table for TUConversation;
  *(_QWORD *)v5 = v9;
LABEL_7:
  OUTLINED_FUNCTION_52_1();
}

uint64_t PlaceholderCallCenter.downgradeToAVLess(for:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = a1[3];
  v3 = a1[4];
  v4 = __swift_project_boxed_opaque_existential_1(a1, v2);
  return specialized PlaceholderCallCenter.downgradeToAVLess(for:)((uint64_t)v4, v1, v2, v3);
}

void PlaceholderCallCenter.updateAVModeSoon(for:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[6];

  OUTLINED_FUNCTION_93();
  v3 = v0;
  v5 = v4;
  v6 = type metadata accessor for DispatchWorkItemFlags();
  v22 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_77();
  v9 = v8 - v7;
  v21 = type metadata accessor for DispatchQoS();
  OUTLINED_FUNCTION_15_56();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_11_2();
  v11 = OUTLINED_FUNCTION_8_13();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_77();
  v15 = v14 - v13;
  v16 = *(void **)(v3 + OBJC_IVAR____TtC15ConversationKit21PlaceholderCallCenter_queue);
  *(_QWORD *)(v14 - v13) = v16;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v12 + 104))(v14 - v13, *MEMORY[0x1E0DEF740], v11);
  v16;
  LOBYTE(v16) = _dispatchPreconditionTest(_:)();
  v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v15, v11);
  if ((v16 & 1) != 0)
  {
    if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 160))(v17) & 1) == 0)
    {
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 168))(1);
      v18 = OUTLINED_FUNCTION_15();
      swift_unknownObjectWeakInit();
      v19 = OUTLINED_FUNCTION_15();
      *(_QWORD *)(v19 + 16) = v18;
      *(_QWORD *)(v19 + 24) = v5;
      v23[4] = partial apply for closure #1 in PlaceholderCallCenter.updateAVModeSoon(for:);
      v23[5] = v19;
      v23[0] = MEMORY[0x1E0C809B0];
      v23[1] = 1107296256;
      v23[2] = thunk for @escaping @callee_guaranteed @Sendable () -> ();
      v23[3] = &block_descriptor_81;
      v20 = _Block_copy(v23);
      swift_retain();
      swift_retain();
      static DispatchQoS.unspecified.getter();
      _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
      lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]();
      dispatch thunk of SetAlgebra.init<A>(_:)();
      MEMORY[0x1C3B7361C](0, v1, v9, v20);
      _Block_release(v20);
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v9, v6);
      (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v21);
      swift_release();
      swift_release();
    }
    OUTLINED_FUNCTION_52_1();
  }
  else
  {
    __break(1u);
  }
}

void PlaceholderCallCenter.activeConversation(for:)(uint64_t a1)
{
  uint64_t v1;
  id v3;
  uint64_t v4;

  v3 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC15ConversationKit21PlaceholderCallCenter_conversationManager), sel_activeConversations);
  OUTLINED_FUNCTION_17_8((uint64_t)v3, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
  lazy protocol witness table accessor for type TUConversation and conformance NSObject();
  v4 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  swift_retain();
  specialized Sequence.first(where:)(v4, a1);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_45_0();
}

void PlaceholderCallCenter.disconnect(_:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  void *v6;
  Class isa;

  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_15_56();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_16_2();
  v3 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit21PlaceholderCallCenter_queue);
  *v1 = v3;
  OUTLINED_FUNCTION_54_35(v4, *MEMORY[0x1E0DEF740]);
  v5 = v3;
  _dispatchPreconditionTest(_:)();
  OUTLINED_FUNCTION_41_33();
  if ((v3 & 1) != 0)
  {
    v6 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit21PlaceholderCallCenter_conversationManager);
    isa = UUID._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v6, sel_leaveConversationWithUUID_, isa);

    OUTLINED_FUNCTION_91();
  }
  else
  {
    __break(1u);
  }
}

void PlaceholderCallCenter.answer(_:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;

  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_15_56();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_16_2();
  v5 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit21PlaceholderCallCenter_queue);
  *v2 = v5;
  OUTLINED_FUNCTION_54_35(v6, *MEMORY[0x1E0DEF740]);
  v7 = v5;
  _dispatchPreconditionTest(_:)();
  OUTLINED_FUNCTION_41_33();
  if ((v5 & 1) != 0)
  {
    PlaceholderCallCenter.activeConversation(for:)(a1);
    if (v8)
    {
      v9 = v8;
      v10 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit21PlaceholderCallCenter_conversationManager);
      v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DBD308]), sel_initWithConversation_, v8);
      objc_msgSend(v10, sel_joinConversationWithRequest_, v11);

    }
    OUTLINED_FUNCTION_91();
  }
  else
  {
    __break(1u);
  }
}

void PlaceholderCallCenter.setSharingScreen(_:attributes:for:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  Class isa;

  OUTLINED_FUNCTION_96();
  v2 = v0;
  v4 = v3;
  v6 = v5;
  v7 = OUTLINED_FUNCTION_8_13();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_0_7();
  v9 = *(void **)(v2 + OBJC_IVAR____TtC15ConversationKit21PlaceholderCallCenter_queue);
  *v1 = v9;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v8 + 104))(v1, *MEMORY[0x1E0DEF740], v7);
  v10 = v9;
  LOBYTE(v9) = _dispatchPreconditionTest(_:)();
  (*(void (**)(_QWORD *, uint64_t))(v8 + 8))(v1, v7);
  if ((v9 & 1) != 0)
  {
    v11 = objc_msgSend((id)objc_opt_self(), sel_defaultAttributes);
    TUScreenShareAttributes.update(with:)(v4);
    v12 = *(void **)(v2 + OBJC_IVAR____TtC15ConversationKit21PlaceholderCallCenter_conversationManager);
    v13 = v11;
    isa = UUID._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v12, sel_setScreenEnabled_withScreenShareAttributes_forConversationWithUUID_, v6 & 1, v13, isa);

    OUTLINED_FUNCTION_65_1();
  }
  else
  {
    __break(1u);
  }
}

void PlaceholderCallCenter.__allocating_init(callCenter:)(void *a1)
{
  uint64_t v1;

  (*(void (**)(id, id))(v1 + 112))(objc_msgSend(a1, sel_conversationManager), objc_msgSend(a1, sel_queue));

  OUTLINED_FUNCTION_18();
}

id static PlaceholderCallCenter.shared.getter()
{
  if (one-time initialization token for shared != -1)
    swift_once();
  return (id)static PlaceholderCallCenter.shared;
}

void PlaceholderCallCenter.__allocating_init(conversationManager:queue:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  PlaceholderCallCenter.init(conversationManager:queue:)(a1, a2);
  OUTLINED_FUNCTION_18();
}

id PlaceholderCallCenter.init(conversationManager:queue:)(void *a1, void *a2)
{
  char *v2;
  uint64_t v5;
  void *v6;
  char *v7;
  id v8;
  id v9;
  id v10;
  objc_super v12;

  v5 = OBJC_IVAR____TtC15ConversationKit21PlaceholderCallCenter_activeCalls;
  v6 = (void *)objc_opt_self();
  v7 = v2;
  *(_QWORD *)&v2[v5] = objc_msgSend(v6, sel_strongToWeakObjectsMapTable);
  *(_QWORD *)&v7[OBJC_IVAR____TtC15ConversationKit21PlaceholderCallCenter_expectedAVLessConversationUUIDs] = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)&v7[OBJC_IVAR____TtC15ConversationKit21PlaceholderCallCenter_conversationManager] = a1;
  *(_QWORD *)&v7[OBJC_IVAR____TtC15ConversationKit21PlaceholderCallCenter_queue] = a2;
  v8 = a1;
  v9 = a2;

  v12.receiver = v7;
  v12.super_class = (Class)type metadata accessor for PlaceholderCallCenter();
  v10 = objc_msgSendSuper2(&v12, sel_init);
  objc_msgSend(v8, sel_addDelegate_queue_, v10, v9);

  return v10;
}

id PlaceholderCallCenter.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void PlaceholderCallCenter.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id PlaceholderCallCenter.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PlaceholderCallCenter();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t PlaceholderCallCenter.avLessConversation.getter()
{
  char *v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = v0;
  if (one-time initialization token for shared != -1)
    swift_once();
  if (((*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 856))() & 1) == 0)
    return 0;
  v2 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC15ConversationKit21PlaceholderCallCenter_conversationManager], sel_activeConversations);
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
  lazy protocol witness table accessor for type TUConversation and conformance NSObject();
  v3 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  specialized Sequence.first(where:)(v3, (char *)v1);
  v5 = v4;
  swift_bridgeObjectRelease();
  return v5;
}

void PlaceholderCallCenter.setAVMode(_:for:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  Class isa;

  OUTLINED_FUNCTION_96();
  v3 = v2;
  v4 = OUTLINED_FUNCTION_8_13();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_11_2();
  v6 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit21PlaceholderCallCenter_queue);
  *v1 = v6;
  OUTLINED_FUNCTION_77_13(*MEMORY[0x1E0DEF740], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 104));
  v7 = v6;
  LOBYTE(v6) = _dispatchPreconditionTest(_:)();
  OUTLINED_FUNCTION_40_0(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  if ((v6 & 1) != 0)
  {
    v8 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit21PlaceholderCallCenter_conversationManager);
    isa = UUID._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v8, sel_setLocalParticipantAudioVideoMode_forConversationUUID_, v3, isa);

    OUTLINED_FUNCTION_65_1();
  }
  else
  {
    __break(1u);
  }
}

void closure #1 in PlaceholderCallCenter.updateAVModeSoon(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v3 = a1 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1C3B752C0](v3);
  if (v4)
  {
    v5 = (void *)v4;
    if (((*(uint64_t (**)(void))(*(_QWORD *)a2 + 160))() & 1) != 0)
    {
      (*(void (**)(void))(*(_QWORD *)a2 + 184))();
      PlaceholderCallCenter.setAVMode(_:for:)();
      (*(void (**)(_QWORD))(*(_QWORD *)a2 + 168))(0);
    }

  }
}

_QWORD *PlaceholderCallCenter.activeCall.getter()
{
  char *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  void *v12;
  id v13;
  char v14;
  unsigned __int8 *v15;
  id v16;
  char *v17;
  id v18;
  _QWORD *result;
  void *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  unsigned __int8 v28;
  _QWORD *v29;
  unsigned __int8 v30;
  uint64_t v31;
  uint64_t v32;

  OUTLINED_FUNCTION_96();
  v31 = v3;
  v32 = v4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_77();
  v8 = v7 - v6;
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_0_7();
  v10 = (_QWORD *)OUTLINED_FUNCTION_8_13();
  v11 = *(v10 - 1);
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_11_2();
  v12 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit21PlaceholderCallCenter_queue];
  *v1 = v12;
  OUTLINED_FUNCTION_77_13(*MEMORY[0x1E0DEF740], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 104));
  v13 = v12;
  LOBYTE(v12) = _dispatchPreconditionTest(_:)();
  OUTLINED_FUNCTION_40_0(*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
  if ((v12 & 1) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  PlaceholderCallCenter.conversationNeedingPlaceholderCall.getter((uint64_t)&v29);
  v10 = v29;
  if (!v29)
    return 0;
  v14 = v30;
  v28 = v30;
  v15 = PlaceholderCallCenter.activeCall(for:purpose:)(v29, &v28);
  if (v15)
  {
    v1 = v15;

    return v1;
  }
  v16 = OUTLINED_FUNCTION_9_93();
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  v27 = v14;
  type metadata accessor for PlaceholderCall();
  swift_allocObject();
  v17 = v0;
  v1 = (_QWORD *)PlaceholderCall.init(for:placeholderCallCenter:purpose:)(v2, v17, &v27);
  v18 = *(id *)&v17[OBJC_IVAR____TtC15ConversationKit21PlaceholderCallCenter_activeCalls];
  OUTLINED_FUNCTION_15_22();
  result = OUTLINED_FUNCTION_9_93();
  if (result)
  {
    v20 = result;
    objc_msgSend(v18, sel_setObject_forKey_, v1, result);

    OUTLINED_FUNCTION_17_22();
    if (one-time initialization token for conversationKit == -1)
    {
LABEL_8:
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v21 = OUTLINED_FUNCTION_16_9();
      *(_OWORD *)(v21 + 16) = xmmword_1BD6441D0;
      v22 = OUTLINED_FUNCTION_9_93();
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      OUTLINED_FUNCTION_19_3(v8, 0);
      specialized >> prefix<A>(_:)(v8);
      v24 = v23;
      v26 = v25;
      outlined destroy of UUID?(v8);
      *(_QWORD *)(v21 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v21 + 64) = lazy protocol witness table accessor for type String and conformance String();
      *(_QWORD *)(v21 + 32) = v24;
      *(_QWORD *)(v21 + 40) = v26;
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();

      OUTLINED_FUNCTION_30_4();
      return v1;
    }
LABEL_11:
    swift_once();
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

void PlaceholderCallCenter.conversationNeedingPlaceholderCall.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  char v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v3 = type metadata accessor for DispatchPredicate();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (uint64_t *)((char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit21PlaceholderCallCenter_queue);
  *v6 = v7;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DEF740], v3);
  v8 = v7;
  v9 = _dispatchPreconditionTest(_:)();
  (*(void (**)(_QWORD *, uint64_t))(v4 + 8))(v6, v3);
  if ((v9 & 1) == 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  v10 = (void *)PlaceholderCallCenter.avLessConversation.getter();
  if (v10)
  {
    v9 = (uint64_t)v10;
    v11 = objc_msgSend(v10, sel_presentationContext);
    v12 = objc_msgSend(v11, sel_mode);

    if (v12 == (id)2)
    {
      v19 = 2;
LABEL_16:
      *(_QWORD *)a1 = v9;
      goto LABEL_17;
    }
    if (v12 == (id)1)
    {
LABEL_15:
      v19 = 1;
      goto LABEL_16;
    }
    if (v12)
    {
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      static os_log_type_t.fault.getter();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v20 = swift_allocObject();
      *(_OWORD *)(v20 + 16) = xmmword_1BD6441D0;
      v26 = v9;
      _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
      v21 = (id)v9;
      v22 = String.init<A>(reflecting:)();
      v24 = v23;
      *(_QWORD *)(v20 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v20 + 64) = lazy protocol witness table accessor for type String and conformance String();
      *(_QWORD *)(v20 + 32) = v22;
      *(_QWORD *)(v20 + 40) = v24;
      goto LABEL_14;
    }
    if (one-time initialization token for conversationKit == -1)
    {
LABEL_7:
      static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = xmmword_1BD6441D0;
      v26 = v9;
      _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
      v14 = (id)v9;
      v15 = String.init<A>(reflecting:)();
      v17 = v16;
      *(_QWORD *)(v13 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v13 + 64) = lazy protocol witness table accessor for type String and conformance String();
      *(_QWORD *)(v13 + 32) = v15;
      *(_QWORD *)(v13 + 40) = v17;
LABEL_14:
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();
      goto LABEL_15;
    }
LABEL_20:
    swift_once();
    goto LABEL_7;
  }
  v18 = PlaceholderCallCenter.handoffEligibleConversation.getter();
  if (v18)
  {
    *(_QWORD *)a1 = v18;
    v19 = 3;
LABEL_17:
    *(_BYTE *)(a1 + 8) = v19;
    return;
  }
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 0;
}

unsigned __int8 *PlaceholderCallCenter.activeCall(for:purpose:)(void *a1, unsigned __int8 *a2)
{
  uint64_t v2;
  int v4;
  id v5;
  unsigned __int8 *result;
  unsigned __int8 *v7;
  unsigned __int8 *v8;

  v4 = *a2;
  v5 = *(id *)(v2 + OBJC_IVAR____TtC15ConversationKit21PlaceholderCallCenter_activeCalls);
  result = (unsigned __int8 *)objc_msgSend(a1, sel_UUID);
  if (result)
  {
    v7 = result;
    v8 = (unsigned __int8 *)objc_msgSend(v5, sel_objectForKey_, result);

    if (v8)
    {
      if (v8[16] != v4)
      {
        swift_release();
        return 0;
      }
    }
    return v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id PlaceholderCallCenter.handoffEligibleConversation.getter()
{
  uint64_t v0;

  if (one-time initialization token for shared != -1)
    swift_once();
  if (((*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 584))() & 1) != 0)
    return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15ConversationKit21PlaceholderCallCenter_conversationManager), sel_handoffEligibleConversation);
  else
    return 0;
}

void PlaceholderCallCenter.conversationManager(_:stateChangedFor:)()
{
  int v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  id v9;
  unint64_t v10;

  OUTLINED_FUNCTION_93();
  v3 = v2;
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_11_2();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_59_3();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_33_2();
  if (objc_msgSend(v3, sel_state) != (id)3)
  {
    v7 = OUTLINED_FUNCTION_9_93();
    OUTLINED_FUNCTION_46_30();

    OUTLINED_FUNCTION_17_70();
    OUTLINED_FUNCTION_40_46();
    OUTLINED_FUNCTION_29_59();
    OUTLINED_FUNCTION_13_33();
    OUTLINED_FUNCTION_18_81();
    if (v0 != 1)
    {
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v8 = OUTLINED_FUNCTION_16_9();
      *(_OWORD *)(v8 + 16) = xmmword_1BD6441D0;
      v9 = OUTLINED_FUNCTION_9_93();
      OUTLINED_FUNCTION_332();

      OUTLINED_FUNCTION_45_39();
      OUTLINED_FUNCTION_51_38();
      *(_QWORD *)(v8 + 56) = MEMORY[0x1E0DEA968];
      v10 = lazy protocol witness table accessor for type String and conformance String();
      OUTLINED_FUNCTION_87_14(v10);
      OUTLINED_FUNCTION_48_42();
      OUTLINED_FUNCTION_133();
    }
  }
  OUTLINED_FUNCTION_52_1();
}

void PlaceholderCallCenter.conversationManager(_:removedActiveConversation:)()
{
  int v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  id v9;
  unint64_t v10;

  OUTLINED_FUNCTION_93();
  v3 = v2;
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_11_2();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_59_3();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_33_2();
  v7 = OUTLINED_FUNCTION_9_93();
  OUTLINED_FUNCTION_46_30();

  OUTLINED_FUNCTION_17_70();
  OUTLINED_FUNCTION_40_46();
  OUTLINED_FUNCTION_29_59();
  OUTLINED_FUNCTION_13_33();
  OUTLINED_FUNCTION_18_81();
  if (v0 != 1)
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v8 = OUTLINED_FUNCTION_16_9();
    *(_OWORD *)(v8 + 16) = xmmword_1BD6441D0;
    v9 = OUTLINED_FUNCTION_9_93();
    OUTLINED_FUNCTION_332();

    OUTLINED_FUNCTION_45_39();
    OUTLINED_FUNCTION_51_38();
    *(_QWORD *)(v8 + 56) = MEMORY[0x1E0DEA968];
    v10 = lazy protocol witness table accessor for type String and conformance String();
    OUTLINED_FUNCTION_87_14(v10);
    OUTLINED_FUNCTION_48_42();
    OUTLINED_FUNCTION_133();
  }
  OUTLINED_FUNCTION_52_1();
}

void PlaceholderCallCenter.conversationManager(_:avModeChangedFor:)()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 *v10;
  unsigned __int8 *v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;

  OUTLINED_FUNCTION_93();
  v3 = v2;
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_11_2();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_33_2();
  if (!OUTLINED_FUNCTION_9(v9, sel_avMode))
  {
    v29 = OUTLINED_FUNCTION_9(0, sel_UUID);
    OUTLINED_FUNCTION_46_30();

    OUTLINED_FUNCTION_17_70();
    OUTLINED_FUNCTION_40_46();
    OUTLINED_FUNCTION_29_59();
    OUTLINED_FUNCTION_13_33();
    OUTLINED_FUNCTION_18_81();
    if ((_DWORD)v0 != 1)
    {
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v30 = OUTLINED_FUNCTION_16_9();
      *(_OWORD *)(v30 + 16) = xmmword_1BD6441D0;
      v31 = OUTLINED_FUNCTION_9(v30, sel_UUID);
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      OUTLINED_FUNCTION_42_43();
      v33 = v32;
      v35 = v34;
      outlined destroy of UUID?((uint64_t)v7);
      *(_QWORD *)(v30 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v30 + 64) = lazy protocol witness table accessor for type String and conformance String();
      *(_QWORD *)(v30 + 32) = v33;
      *(_QWORD *)(v30 + 40) = v35;
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      goto LABEL_11;
    }
LABEL_12:
    OUTLINED_FUNCTION_52_1();
    return;
  }
  LOBYTE(v37) = 1;
  v10 = PlaceholderCallCenter.activeCall(for:purpose:)(v3, (unsigned __int8 *)&v37);
  if (!v10)
    goto LABEL_12;
  v11 = v10;
  v12 = *(id *)(v0 + OBJC_IVAR____TtC15ConversationKit21PlaceholderCallCenter_activeCalls);
  v13 = OUTLINED_FUNCTION_9((uint64_t)v12, sel_UUID);
  if (v13)
  {
    v14 = v13;
    objc_msgSend(v12, sel_removeObjectForKey_, v13);

    if (one-time initialization token for conversationKit != -1)
      swift_once();
    v36 = static OS_os_log.conversationKit;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v15 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v15 + 16) = xmmword_1BD646740;
    v37 = v11;
    type metadata accessor for PlaceholderCall();
    OUTLINED_FUNCTION_15_22();
    v16 = String.init<A>(reflecting:)();
    v18 = v17;
    v19 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v15 + 56) = MEMORY[0x1E0DEA968];
    v20 = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v15 + 64) = v20;
    *(_QWORD *)(v15 + 32) = v16;
    *(_QWORD *)(v15 + 40) = v18;
    v21 = OUTLINED_FUNCTION_9(v20, sel_UUID);
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    OUTLINED_FUNCTION_42_43();
    v23 = v22;
    v25 = v24;
    v26 = outlined destroy of UUID?((uint64_t)v7);
    *(_QWORD *)(v15 + 96) = v19;
    *(_QWORD *)(v15 + 104) = v20;
    *(_QWORD *)(v15 + 72) = v23;
    *(_QWORD *)(v15 + 80) = v25;
    v37 = OUTLINED_FUNCTION_9(v26, sel_avMode);
    type metadata accessor for TUConversationAVMode(0);
    v27 = String.init<A>(reflecting:)();
    *(_QWORD *)(v15 + 136) = v19;
    *(_QWORD *)(v15 + 144) = v20;
    *(_QWORD *)(v15 + 112) = v27;
    *(_QWORD *)(v15 + 120) = v28;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    OUTLINED_FUNCTION_17_22();
LABEL_11:
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  __break(1u);
}

void specialized _NativeSet.copy()()
{
  specialized _NativeSet.copy()();
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;

  OUTLINED_FUNCTION_93();
  v7 = v0;
  v8 = OUTLINED_FUNCTION_33_0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_11_2();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _SetStorage<UUID>);
  v10 = OUTLINED_FUNCTION_52_35();
  if (!*(_QWORD *)(v1 + 16))
  {
    OUTLINED_FUNCTION_22();
LABEL_28:
    *v7 = v10;
    OUTLINED_FUNCTION_52_1();
    return;
  }
  v11 = (void *)OUTLINED_FUNCTION_21_78();
  if (v14)
    v15 = (unint64_t)v11 >= v13;
  else
    v15 = 1;
  if (v15)
    OUTLINED_FUNCTION_69_18(v11, v12);
  OUTLINED_FUNCTION_10_101();
  if (!v6)
    goto LABEL_10;
LABEL_9:
  OUTLINED_FUNCTION_23_38();
  while (1)
  {
    v19 = *(_QWORD *)(v9 + 72) * v16;
    OUTLINED_FUNCTION_8_7(v2, *(_QWORD *)(v1 + 48) + v19, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16));
    OUTLINED_FUNCTION_8_7(*(_QWORD *)(v10 + 48) + v19, v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 32));
    if (v6)
      goto LABEL_9;
LABEL_10:
    v17 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v4)
      goto LABEL_26;
    ++v5;
    if (!*(_QWORD *)(v3 + 8 * v17))
    {
      v5 = v17 + 1;
      if (v17 + 1 >= v4)
        goto LABEL_26;
      if (!*(_QWORD *)(v3 + 8 * v5))
      {
        v5 = v17 + 2;
        if (v17 + 2 >= v4)
          goto LABEL_26;
        if (!*(_QWORD *)(v3 + 8 * v5))
          break;
      }
    }
LABEL_23:
    OUTLINED_FUNCTION_50_34();
  }
  v18 = v17 + 3;
  if (v18 >= v4)
  {
LABEL_26:
    OUTLINED_FUNCTION_22();
    v7 = v20;
    goto LABEL_28;
  }
  if (*(_QWORD *)(v3 + 8 * v18))
  {
    v5 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v5 >= v4)
      goto LABEL_26;
    ++v18;
    if (*(_QWORD *)(v3 + 8 * v5))
      goto LABEL_23;
  }
LABEL_30:
  __break(1u);
}

{
  specialized _NativeSet.copy()();
}

{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;

  OUTLINED_FUNCTION_96();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _SetStorage<String>);
  OUTLINED_FUNCTION_5_114();
  OUTLINED_FUNCTION_660();
  if (!v6)
  {
LABEL_26:
    OUTLINED_FUNCTION_11_0();
    *v0 = v0;
    OUTLINED_FUNCTION_65_1();
    return;
  }
  v7 = (void *)OUTLINED_FUNCTION_1_130();
  if (v10)
    v11 = (unint64_t)v7 >= v9;
  else
    v11 = 1;
  if (v11)
    OUTLINED_FUNCTION_11_90(v7, v8);
  OUTLINED_FUNCTION_4_121();
  if (!v5)
    goto LABEL_10;
LABEL_9:
  OUTLINED_FUNCTION_26_58();
  while (1)
  {
    v15 = (_QWORD *)(*(_QWORD *)(v1 + 48) + 16 * v12);
    v16 = v15[1];
    v17 = (_QWORD *)(v0[6] + 16 * v12);
    *v17 = *v15;
    v17[1] = v16;
    swift_bridgeObjectRetain();
    if (v5)
      goto LABEL_9;
LABEL_10:
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v13 >= v3)
      goto LABEL_26;
    ++v4;
    if (!*(_QWORD *)(v2 + 8 * v13))
    {
      v4 = v13 + 1;
      if (v13 + 1 >= v3)
        goto LABEL_26;
      if (!*(_QWORD *)(v2 + 8 * v4))
      {
        v4 = v13 + 2;
        if (v13 + 2 >= v3)
          goto LABEL_26;
        if (!*(_QWORD *)(v2 + 8 * v4))
          break;
      }
    }
LABEL_23:
    OUTLINED_FUNCTION_22_73();
  }
  v14 = v13 + 3;
  if (v14 >= v3)
    goto LABEL_26;
  if (*(_QWORD *)(v2 + 8 * v14))
  {
    v4 = v14;
    goto LABEL_23;
  }
  while (1)
  {
    v4 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v4 >= v3)
      goto LABEL_26;
    ++v14;
    if (*(_QWORD *)(v2 + 8 * v4))
      goto LABEL_23;
  }
LABEL_28:
  __break(1u);
}

{
  specialized _NativeSet.copy()();
}

{
  specialized _NativeSet.copy()();
}

{
  specialized _NativeSet.copy()();
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t (*v7)(_QWORD);
  uint64_t (*v8)(_QWORD);
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[2];

  OUTLINED_FUNCTION_93();
  v6 = v5;
  v8 = v7;
  v9 = v0;
  v10 = v7(0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v24 - v12;
  __swift_instantiateConcreteTypeFromMangledName(v6);
  v14 = OUTLINED_FUNCTION_52_35();
  if (!v6[2])
  {
    OUTLINED_FUNCTION_22();
LABEL_28:
    *v9 = v14;
    OUTLINED_FUNCTION_52_1();
    return;
  }
  v15 = (void *)OUTLINED_FUNCTION_21_78();
  if (v18)
    v19 = (unint64_t)v15 >= v17;
  else
    v19 = 1;
  if (v19)
    OUTLINED_FUNCTION_69_18(v15, v16);
  OUTLINED_FUNCTION_10_101();
  if (!v4)
    goto LABEL_10;
LABEL_9:
  OUTLINED_FUNCTION_23_38();
  while (1)
  {
    v23 = *(_QWORD *)(v11 + 72) * v20;
    outlined init with copy of ConversationControlsAppLaunchButtonType(v6[6] + v23, (uint64_t)v13, v8);
    outlined init with take of StagedCollaboration((uint64_t)v13, *(_QWORD *)(v14 + 48) + v23, v8);
    if (v4)
      goto LABEL_9;
LABEL_10:
    v21 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v2)
      goto LABEL_26;
    ++v3;
    if (!*(_QWORD *)(v1 + 8 * v21))
    {
      v3 = v21 + 1;
      if (v21 + 1 >= v2)
        goto LABEL_26;
      if (!*(_QWORD *)(v1 + 8 * v3))
      {
        v3 = v21 + 2;
        if (v21 + 2 >= v2)
          goto LABEL_26;
        if (!*(_QWORD *)(v1 + 8 * v3))
          break;
      }
    }
LABEL_23:
    OUTLINED_FUNCTION_50_34();
  }
  v22 = v21 + 3;
  if (v22 >= v2)
  {
LABEL_26:
    OUTLINED_FUNCTION_22();
    v9 = (uint64_t *)v24[1];
    goto LABEL_28;
  }
  if (*(_QWORD *)(v1 + 8 * v22))
  {
    v3 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    v3 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v3 >= v2)
      goto LABEL_26;
    ++v22;
    if (*(_QWORD *)(v1 + 8 * v3))
      goto LABEL_23;
  }
LABEL_30:
  __break(1u);
}

{
  specialized _NativeSet.copy()();
}

{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  OUTLINED_FUNCTION_96();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _SetStorage<RecentsCallHandle>);
  OUTLINED_FUNCTION_5_114();
  OUTLINED_FUNCTION_660();
  if (!v6)
  {
LABEL_26:
    OUTLINED_FUNCTION_11_0();
    *v0 = v0;
    OUTLINED_FUNCTION_65_1();
    return;
  }
  v7 = (void *)OUTLINED_FUNCTION_1_130();
  if (v10)
    v11 = (unint64_t)v7 >= v9;
  else
    v11 = 1;
  if (v11)
    OUTLINED_FUNCTION_11_90(v7, v8);
  OUTLINED_FUNCTION_4_121();
  if (!v5)
    goto LABEL_10;
LABEL_9:
  OUTLINED_FUNCTION_26_58();
  while (1)
  {
    v15 = 3 * v12;
    v16 = *(_QWORD *)(v1 + 48) + 8 * v15;
    v18 = *(_QWORD *)(v16 + 8);
    v17 = *(_QWORD *)(v16 + 16);
    v19 = v0[6] + 8 * v15;
    *(_BYTE *)v19 = *(_BYTE *)v16;
    *(_QWORD *)(v19 + 8) = v18;
    *(_QWORD *)(v19 + 16) = v17;
    swift_bridgeObjectRetain();
    if (v5)
      goto LABEL_9;
LABEL_10:
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v13 >= v3)
      goto LABEL_26;
    ++v4;
    if (!*(_QWORD *)(v2 + 8 * v13))
    {
      v4 = v13 + 1;
      if (v13 + 1 >= v3)
        goto LABEL_26;
      if (!*(_QWORD *)(v2 + 8 * v4))
      {
        v4 = v13 + 2;
        if (v13 + 2 >= v3)
          goto LABEL_26;
        if (!*(_QWORD *)(v2 + 8 * v4))
          break;
      }
    }
LABEL_23:
    OUTLINED_FUNCTION_22_73();
  }
  v14 = v13 + 3;
  if (v14 >= v3)
    goto LABEL_26;
  if (*(_QWORD *)(v2 + 8 * v14))
  {
    v4 = v14;
    goto LABEL_23;
  }
  while (1)
  {
    v4 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v4 >= v3)
      goto LABEL_26;
    ++v14;
    if (*(_QWORD *)(v2 + 8 * v4))
      goto LABEL_23;
  }
LABEL_28:
  __break(1u);
}

{
  specialized _NativeSet.copy()();
}

{
  specialized _NativeSet.copy()();
}

{
  specialized _NativeSet.copy()();
}

{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;

  OUTLINED_FUNCTION_96();
  OUTLINED_FUNCTION_58_31(v7);
  OUTLINED_FUNCTION_5_114();
  OUTLINED_FUNCTION_660();
  if (!v8)
  {
LABEL_26:
    OUTLINED_FUNCTION_11_0();
    *v0 = v1;
    OUTLINED_FUNCTION_65_1();
    return;
  }
  v9 = (void *)OUTLINED_FUNCTION_1_130();
  if (v12)
    v13 = (unint64_t)v9 >= v11;
  else
    v13 = 1;
  if (v13)
    OUTLINED_FUNCTION_11_90(v9, v10);
  OUTLINED_FUNCTION_4_121();
  if (!v6)
    goto LABEL_10;
LABEL_9:
  OUTLINED_FUNCTION_26_58();
  while (1)
  {
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v14);
    *(_QWORD *)(*(_QWORD *)(v1 + 48) + 8 * v14) = v17;
    v18 = v17;
    if (v6)
      goto LABEL_9;
LABEL_10:
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v15 >= v4)
      goto LABEL_26;
    ++v5;
    if (!*(_QWORD *)(v3 + 8 * v15))
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v4)
        goto LABEL_26;
      if (!*(_QWORD *)(v3 + 8 * v5))
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v4)
          goto LABEL_26;
        if (!*(_QWORD *)(v3 + 8 * v5))
          break;
      }
    }
LABEL_23:
    OUTLINED_FUNCTION_22_73();
  }
  v16 = v15 + 3;
  if (v16 >= v4)
    goto LABEL_26;
  if (*(_QWORD *)(v3 + 8 * v16))
  {
    v5 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v5 >= v4)
      goto LABEL_26;
    ++v16;
    if (*(_QWORD *)(v3 + 8 * v5))
      goto LABEL_23;
  }
LABEL_28:
  __break(1u);
}

{
  specialized _NativeSet.copy()();
}

{
  specialized _NativeSet.copy()((uint64_t *)&demangling cache variable for type metadata for _SetStorage<BezelEffect>);
}

{
  specialized _NativeSet.copy()((uint64_t *)&demangling cache variable for type metadata for _SetStorage<UInt64>);
}

{
  specialized _NativeSet.copy()(&demangling cache variable for type metadata for _SetStorage<VideoReaction>);
}

{
  specialized _NativeSet.copy()((uint64_t *)&demangling cache variable for type metadata for _SetStorage<TranscriptionViewModel.CaptionID>);
}

{
  specialized _NativeSet.copy()(&demangling cache variable for type metadata for _SetStorage<UnsafeMutableRawPointer>);
}

{
  specialized _NativeSet.copy()((uint64_t *)&demangling cache variable for type metadata for _SetStorage<CaptionSectioner.CaptionID>);
}

{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _SetStorage<InCallControlsState>);
  OUTLINED_FUNCTION_5_114();
  OUTLINED_FUNCTION_660();
  if (v2)
  {
    v3 = (void *)OUTLINED_FUNCTION_1_130();
    if (v6)
      v7 = (unint64_t)v3 >= v5;
    else
      v7 = 1;
    if (v7)
      OUTLINED_FUNCTION_11_90(v3, v4);
    OUTLINED_FUNCTION_2_115();
    if (!v10)
      goto LABEL_10;
LABEL_9:
    OUTLINED_FUNCTION_13_98();
    while (1)
    {
      OUTLINED_FUNCTION_36_46();
      if (v19)
        goto LABEL_9;
LABEL_10:
      if (__OFADD__(v9, 1))
      {
        __break(1u);
        goto LABEL_30;
      }
      if (v9 + 1 >= v8)
        goto LABEL_28;
      OUTLINED_FUNCTION_75_17();
      if (!v11)
      {
        OUTLINED_FUNCTION_74_15();
        if (v13 == v14)
          goto LABEL_28;
        if (!*(_QWORD *)(v1 + 8 * v12))
        {
          OUTLINED_FUNCTION_71_21();
          if (v13 == v14)
            goto LABEL_28;
          if (!*(_QWORD *)(v1 + 8 * v15))
          {
            OUTLINED_FUNCTION_70_19();
            if (v13 == v14)
              goto LABEL_28;
            if (!*(_QWORD *)(v1 + 8 * v17))
              break;
          }
        }
      }
LABEL_25:
      OUTLINED_FUNCTION_12_97();
    }
    while (!__OFADD__(v17, 1))
    {
      if (v17 + 1 >= v16)
        goto LABEL_28;
      OUTLINED_FUNCTION_72_23();
      if (v18)
        goto LABEL_25;
    }
LABEL_30:
    __break(1u);
  }
  else
  {
LABEL_28:
    OUTLINED_FUNCTION_11_0();
    *v0 = v0;
    OUTLINED_FUNCTION_18();
  }
}

void specialized _NativeSet.copy()(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  OUTLINED_FUNCTION_58_31(a1);
  OUTLINED_FUNCTION_5_114();
  OUTLINED_FUNCTION_660();
  if (v5)
  {
    v6 = (void *)OUTLINED_FUNCTION_1_130();
    if (v9)
      v10 = (unint64_t)v6 >= v8;
    else
      v10 = 1;
    if (v10)
      OUTLINED_FUNCTION_11_90(v6, v7);
    OUTLINED_FUNCTION_2_115();
    if (!v13)
      goto LABEL_10;
LABEL_9:
    OUTLINED_FUNCTION_13_98();
    while (1)
    {
      *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v3 + 48) + v15);
      if (v14)
        goto LABEL_9;
LABEL_10:
      if (__OFADD__(v12, 1))
      {
        __break(1u);
        goto LABEL_30;
      }
      if (v12 + 1 >= v11)
        goto LABEL_28;
      OUTLINED_FUNCTION_75_17();
      if (!v16)
      {
        OUTLINED_FUNCTION_74_15();
        if (v18 == v19)
          goto LABEL_28;
        if (!*(_QWORD *)(v4 + 8 * v17))
        {
          OUTLINED_FUNCTION_71_21();
          if (v18 == v19)
            goto LABEL_28;
          if (!*(_QWORD *)(v4 + 8 * v20))
          {
            OUTLINED_FUNCTION_70_19();
            if (v18 == v19)
              goto LABEL_28;
            if (!*(_QWORD *)(v4 + 8 * v22))
              break;
          }
        }
      }
LABEL_25:
      OUTLINED_FUNCTION_12_97();
    }
    while (!__OFADD__(v22, 1))
    {
      if (v22 + 1 >= v21)
        goto LABEL_28;
      OUTLINED_FUNCTION_72_23();
      if (v23)
        goto LABEL_25;
    }
LABEL_30:
    __break(1u);
  }
  else
  {
LABEL_28:
    OUTLINED_FUNCTION_11_0();
    *v1 = v2;
    OUTLINED_FUNCTION_18();
  }
}

{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  OUTLINED_FUNCTION_58_31(a1);
  OUTLINED_FUNCTION_5_114();
  OUTLINED_FUNCTION_660();
  if (v4)
  {
    v5 = (void *)OUTLINED_FUNCTION_1_130();
    if (v8)
      v9 = (unint64_t)v5 >= v7;
    else
      v9 = 1;
    if (v9)
      OUTLINED_FUNCTION_11_90(v5, v6);
    OUTLINED_FUNCTION_2_115();
    if (!v12)
      goto LABEL_10;
LABEL_9:
    OUTLINED_FUNCTION_13_98();
    while (1)
    {
      OUTLINED_FUNCTION_36_46();
      if (v21)
        goto LABEL_9;
LABEL_10:
      if (__OFADD__(v11, 1))
      {
        __break(1u);
        goto LABEL_30;
      }
      if (v11 + 1 >= v10)
        goto LABEL_28;
      OUTLINED_FUNCTION_75_17();
      if (!v13)
      {
        OUTLINED_FUNCTION_74_15();
        if (v15 == v16)
          goto LABEL_28;
        if (!*(_QWORD *)(v3 + 8 * v14))
        {
          OUTLINED_FUNCTION_71_21();
          if (v15 == v16)
            goto LABEL_28;
          if (!*(_QWORD *)(v3 + 8 * v17))
          {
            OUTLINED_FUNCTION_70_19();
            if (v15 == v16)
              goto LABEL_28;
            if (!*(_QWORD *)(v3 + 8 * v19))
              break;
          }
        }
      }
LABEL_25:
      OUTLINED_FUNCTION_12_97();
    }
    while (!__OFADD__(v19, 1))
    {
      if (v19 + 1 >= v18)
        goto LABEL_28;
      OUTLINED_FUNCTION_72_23();
      if (v20)
        goto LABEL_25;
    }
LABEL_30:
    __break(1u);
  }
  else
  {
LABEL_28:
    OUTLINED_FUNCTION_11_0();
    *v1 = v2;
    OUTLINED_FUNCTION_18();
  }
}

void specialized Set._Variant.remove(_:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, unint64_t, uint64_t);
  unint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_93();
  v2 = v1;
  v3 = OUTLINED_FUNCTION_33_0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_77();
  v7 = v6 - v5;
  v8 = *v0;
  _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, v9, MEMORY[0x1E0CB09C8]);
  swift_bridgeObjectRetain();
  v10 = dispatch thunk of Hashable._rawHashValue(seed:)();
  v11 = -1 << *(_BYTE *)(v8 + 32);
  v12 = v10 & ~v11;
  if (((*(_QWORD *)(v8 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0)
  {
    v21 = v0;
    v22 = v2;
    v13 = ~v11;
    v14 = *(_QWORD *)(v4 + 72);
    v23 = v4;
    v15 = *(void (**)(uint64_t, unint64_t, uint64_t))(v4 + 16);
    while (1)
    {
      v16 = v14 * v12;
      v15(v7, *(_QWORD *)(v8 + 48) + v14 * v12, v3);
      _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
      v17 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v7, v3);
      if ((v17 & 1) != 0)
        break;
      v12 = (v12 + 1) & v13;
      if (((*(_QWORD *)(v8 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      {
        OUTLINED_FUNCTION_21_0();
        v18 = 1;
        v2 = v22;
        goto LABEL_10;
      }
    }
    OUTLINED_FUNCTION_21_0();
    v19 = OUTLINED_FUNCTION_51_4();
    v20 = *v21;
    v24 = *v21;
    *v21 = 0x8000000000000000;
    if ((v19 & 1) == 0)
    {
      specialized _NativeSet.copy()();
      v20 = v24;
    }
    v2 = v22;
    OUTLINED_FUNCTION_8_7(v22, *(_QWORD *)(v20 + 48) + v16, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 32));
    specialized _NativeSet._delete(at:)(v12);
    OUTLINED_FUNCTION_16_76(v24);
    v18 = 0;
  }
  else
  {
    OUTLINED_FUNCTION_21_0();
    v18 = 1;
  }
LABEL_10:
  OUTLINED_FUNCTION_19_3(v2, v18);
  OUTLINED_FUNCTION_52_1();
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::Int v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_93();
  v3 = v2;
  v4 = type metadata accessor for CountdownVoucher(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_0_7();
  v6 = *v0;
  OUTLINED_FUNCTION_84_12();
  OUTLINED_FUNCTION_33_0();
  _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  swift_bridgeObjectRetain();
  dispatch thunk of Hashable.hash(into:)();
  v7 = Hasher._finalize()();
  v8 = -1 << *(_BYTE *)(v6 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0)
  {
    v17 = v3;
    v10 = ~v8;
    v11 = *(_QWORD *)(v5 + 72);
    while (1)
    {
      v12 = v11 * v9;
      OUTLINED_FUNCTION_95_1(*(_QWORD *)(v6 + 48) + v11 * v9, v1);
      v13 = static UUID.== infix(_:_:)();
      OUTLINED_FUNCTION_99_0(v1);
      if ((v13 & 1) != 0)
        break;
      v9 = (v9 + 1) & v10;
      if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
      {
        OUTLINED_FUNCTION_133();
        v14 = 1;
        v3 = v17;
        goto LABEL_10;
      }
    }
    OUTLINED_FUNCTION_133();
    v15 = OUTLINED_FUNCTION_51_4();
    v16 = *v0;
    v18 = *v0;
    *v0 = 0x8000000000000000;
    if ((v15 & 1) == 0)
    {
      specialized _NativeSet.copy()();
      v16 = v18;
    }
    v3 = v17;
    outlined init with take of StagedCollaboration(*(_QWORD *)(v16 + 48) + v12, v17, type metadata accessor for CountdownVoucher);
    specialized _NativeSet._delete(at:)();
    OUTLINED_FUNCTION_16_76(v18);
    v14 = 0;
  }
  else
  {
    OUTLINED_FUNCTION_133();
    v14 = 1;
  }
LABEL_10:
  __swift_storeEnumTagSinglePayload(v3, v14, 1, v4);
  OUTLINED_FUNCTION_52_1();
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  Swift::Int v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  BOOL v37;
  char v38;
  uint64_t v39;
  unsigned __int8 *v40;
  int v41;
  int v42;
  unsigned __int8 *v43;
  int v44;
  int v45;
  BOOL v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  int v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  OUTLINED_FUNCTION_93();
  v2 = v1;
  v4 = v3;
  v5 = type metadata accessor for Participant(0);
  v68 = *(char **)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v71 = (uint64_t)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v53 - v8;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v53 - v11;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v53 - v14;
  MEMORY[0x1E0C80A78](v16);
  v70 = (uint64_t)&v53 - v17;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v53 - v19;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v53 - v22;
  v53 = v0;
  v24 = *v0;
  Hasher.init(_seed:)();
  v62 = v5;
  v69 = OUTLINED_FUNCTION_33_0();
  _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  swift_bridgeObjectRetain();
  dispatch thunk of Hashable.hash(into:)();
  v25 = Hasher._finalize()();
  v26 = -1 << *(_BYTE *)(v24 + 32);
  v27 = v25 & ~v26;
  v69 = v24 + 56;
  if (((*(_QWORD *)(v24 + 56 + ((v27 >> 3) & 0xFFFFFFFFFFFFF8)) >> v27) & 1) != 0)
  {
    v54 = v4;
    v64 = ~v26;
    v65 = *((_QWORD *)v68 + 9);
    v67 = v15;
    v68 = v12;
    v66 = v24;
    while (1)
    {
      v28 = *(_QWORD *)(v24 + 48);
      v63 = v65 * v27;
      OUTLINED_FUNCTION_95_1(v28 + v65 * v27, (uint64_t)v23);
      static Participant.State.== infix(_:_:)();
      v30 = v29;
      OUTLINED_FUNCTION_95_1((uint64_t)v23, (uint64_t)v20);
      v31 = (uint64_t)v20;
      v32 = v70;
      OUTLINED_FUNCTION_95_1(v2, v70);
      if ((v30 & 1) == 0)
        break;
      v33 = static UUID.== infix(_:_:)();
      OUTLINED_FUNCTION_99_0(v32);
      OUTLINED_FUNCTION_99_0(v31);
      OUTLINED_FUNCTION_95_1((uint64_t)v23, (uint64_t)v15);
      OUTLINED_FUNCTION_95_1(v2, (uint64_t)v12);
      v20 = (char *)v31;
      if ((v33 & 1) == 0)
        goto LABEL_15;
      v34 = (uint64_t)v15;
      v35 = v71;
      v36 = v62;
      v37 = *(_QWORD *)(v34 + *(int *)(v62 + 28)) != 0;
      OUTLINED_FUNCTION_99_0(v34);
      LOBYTE(v36) = *(_QWORD *)&v12[*(int *)(v36 + 28)] == 0;
      OUTLINED_FUNCTION_99_0((uint64_t)v12);
      v38 = v37 ^ v36;
      OUTLINED_FUNCTION_95_1((uint64_t)v23, (uint64_t)v9);
      v20 = (char *)v31;
      OUTLINED_FUNCTION_95_1(v2, v35);
      if ((v38 & 1) == 0)
        goto LABEL_16;
      v39 = v62;
      v40 = (unsigned __int8 *)&v9[*(int *)(v62 + 24)];
      v41 = *v40;
      v60 = v40[1];
      v61 = v41;
      v59 = v40[2];
      v57 = v40[3];
      v42 = v40[4];
      OUTLINED_FUNCTION_99_0((uint64_t)v9);
      v43 = (unsigned __int8 *)(v71 + *(int *)(v39 + 24));
      v44 = *v43;
      v45 = v43[1];
      v58 = v43[2];
      v56 = v43[3];
      v55 = v43[4];
      OUTLINED_FUNCTION_99_0(v35);
      v46 = v61 == v44;
      v20 = (char *)v31;
      if (!v46 || ((v60 ^ v45) & 1) != 0 || ((v59 ^ v58) & 1) != 0 || ((v57 ^ v56) & 1) != 0)
        goto LABEL_17;
      OUTLINED_FUNCTION_99_0((uint64_t)v23);
      v46 = v42 == v55;
      v15 = v67;
      v12 = v68;
      if (v46)
      {
        swift_bridgeObjectRelease();
        v49 = v53;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v51 = *v49;
        v72 = *v49;
        *v49 = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          specialized _NativeSet.copy()();
          v51 = v72;
        }
        v52 = v54;
        outlined init with take of StagedCollaboration(*(_QWORD *)(v51 + 48) + v63, v54, type metadata accessor for Participant);
        specialized _NativeSet._delete(at:)();
        *v49 = v72;
        swift_bridgeObjectRelease();
        v47 = v52;
        v48 = 0;
        goto LABEL_22;
      }
LABEL_18:
      v27 = (v27 + 1) & v64;
      v24 = v66;
      if (((*(_QWORD *)(v69 + ((v27 >> 3) & 0xFFFFFFFFFFFFF8)) >> v27) & 1) == 0)
      {
        OUTLINED_FUNCTION_30_4();
        v4 = v54;
        goto LABEL_21;
      }
    }
    OUTLINED_FUNCTION_99_0(v32);
    OUTLINED_FUNCTION_99_0(v31);
    OUTLINED_FUNCTION_95_1((uint64_t)v23, (uint64_t)v15);
    OUTLINED_FUNCTION_95_1(v2, (uint64_t)v12);
    v20 = (char *)v31;
LABEL_15:
    OUTLINED_FUNCTION_99_0((uint64_t)v12);
    OUTLINED_FUNCTION_99_0((uint64_t)v15);
    OUTLINED_FUNCTION_95_1((uint64_t)v23, (uint64_t)v9);
    OUTLINED_FUNCTION_95_1(v2, v71);
LABEL_16:
    OUTLINED_FUNCTION_99_0(v71);
    OUTLINED_FUNCTION_99_0((uint64_t)v9);
LABEL_17:
    OUTLINED_FUNCTION_99_0((uint64_t)v23);
    v15 = v67;
    v12 = v68;
    goto LABEL_18;
  }
  OUTLINED_FUNCTION_30_4();
LABEL_21:
  v47 = v4;
  v48 = 1;
LABEL_22:
  __swift_storeEnumTagSinglePayload(v47, v48, 1, v62);
  OUTLINED_FUNCTION_52_1();
}

{
  char v0;
  char v1;
  char v2;
  int v3;
  unint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_59_30();
  static Hasher._hash(seed:_:)();
  OUTLINED_FUNCTION_24_57();
  if ((v0 & 1) != 0)
  {
    OUTLINED_FUNCTION_82_11();
    if (v1)
    {
LABEL_6:
      OUTLINED_FUNCTION_51_4();
      OUTLINED_FUNCTION_15_86();
      if (!v3)
        specialized _NativeSet.copy()(&demangling cache variable for type metadata for _SetStorage<UnsafeMutableRawPointer>);
      v4 = OUTLINED_FUNCTION_39_55();
      specialized _NativeSet._delete(at:)(v4);
      OUTLINED_FUNCTION_16_76(v5);
    }
    else
    {
      while (1)
      {
        OUTLINED_FUNCTION_19_67();
        if ((v2 & 1) == 0)
          break;
        OUTLINED_FUNCTION_82_11();
        if (v1)
          goto LABEL_6;
      }
    }
  }
  OUTLINED_FUNCTION_45_0();
}

uint64_t specialized Set._Variant.remove(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  Swift::Int v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  _QWORD *v11;
  BOOL v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  _QWORD *v18;
  BOOL v19;
  uint64_t v21;

  v5 = *v2;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  v6 = Hasher._finalize()();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  OUTLINED_FUNCTION_67_18();
  if ((v9 & 1) == 0)
  {
LABEL_18:
    OUTLINED_FUNCTION_53();
    return 0;
  }
  v10 = *(_QWORD *)(v5 + 48);
  v11 = (_QWORD *)(v10 + 16 * v8);
  v12 = *v11 == a1 && v11[1] == a2;
  if (!v12 && (OUTLINED_FUNCTION_60_25() & 1) == 0)
  {
    v16 = ~v7;
    do
    {
      v8 = (v8 + 1) & v16;
      OUTLINED_FUNCTION_67_18();
      if ((v17 & 1) == 0)
        goto LABEL_18;
      v18 = (_QWORD *)(v10 + 16 * v8);
      v19 = *v18 == a1 && v18[1] == a2;
    }
    while (!v19 && (OUTLINED_FUNCTION_60_25() & 1) == 0);
  }
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_51_4();
  OUTLINED_FUNCTION_15_86();
  if (!v14)
  {
    specialized _NativeSet.copy()();
    v13 = v21;
  }
  v15 = *(_QWORD *)(*(_QWORD *)(v13 + 48) + 16 * v8);
  specialized _NativeSet._delete(at:)(v8);
  OUTLINED_FUNCTION_16_76(v21);
  return v15;
}

uint64_t specialized Set._Variant.remove(_:)(void *a1)
{
  _QWORD *v1;
  void *v2;
  _QWORD *v3;
  uint64_t v5;
  id v6;
  char v7;
  uint64_t v8;
  Swift::Int v9;
  Swift::Int v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  int v20;
  uint64_t v22;

  v3 = v1;
  v5 = *v1;
  if ((*v1 & 0xC000000000000001) == 0)
  {
    v9 = *(_QWORD *)(v5 + 40);
    swift_bridgeObjectRetain();
    v10 = NSObject._rawHashValue(seed:)(v9);
    v11 = -1 << *(_BYTE *)(v5 + 32);
    v12 = v10 & ~v11;
    OUTLINED_FUNCTION_89_20();
    if ((v14 & 1) != 0)
    {
      OUTLINED_FUNCTION_17_8(v13, (unint64_t *)&lazy cache variable for type metadata for CNComposeRecipient);
      OUTLINED_FUNCTION_85_18();
      v15 = OUTLINED_FUNCTION_80_16();

      if ((v15 & 1) != 0)
      {
LABEL_9:
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_51_4();
        OUTLINED_FUNCTION_15_86();
        if (!v20)
        {
          specialized _NativeSet.copy()();
          v19 = v22;
        }
        v8 = *(_QWORD *)(*(_QWORD *)(v19 + 48) + 8 * v12);
        specialized _NativeSet._delete(at:)(v12);
        *v3 = v22;
        goto LABEL_12;
      }
      v16 = ~v11;
      while (1)
      {
        v12 = (v12 + 1) & v16;
        OUTLINED_FUNCTION_89_20();
        if ((v17 & 1) == 0)
          break;
        OUTLINED_FUNCTION_85_18();
        v18 = OUTLINED_FUNCTION_80_16();

        if ((v18 & 1) != 0)
          goto LABEL_9;
      }
    }
LABEL_13:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  v6 = a1;
  v7 = __CocoaSet.contains(_:)();

  if ((v7 & 1) == 0)
    goto LABEL_13;
  v8 = specialized Set._Variant._migrateToNative(_:removing:)();
LABEL_12:
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t specialized Set._Variant.remove(_:)()
{
  uint64_t v0;
  char v1;
  char v2;
  char v3;
  int v4;
  unint64_t v5;
  uint64_t v7;

  OUTLINED_FUNCTION_59_30();
  static Hasher._hash(seed:_:)();
  OUTLINED_FUNCTION_24_57();
  if ((v1 & 1) == 0)
    return 0;
  OUTLINED_FUNCTION_82_11();
  while (!v2)
  {
    OUTLINED_FUNCTION_19_67();
    if ((v3 & 1) == 0)
      return 0;
    OUTLINED_FUNCTION_82_11();
  }
  OUTLINED_FUNCTION_51_4();
  OUTLINED_FUNCTION_15_86();
  if (!v4)
    specialized _NativeSet.copy()((uint64_t *)&demangling cache variable for type metadata for _SetStorage<UInt64>);
  v5 = OUTLINED_FUNCTION_39_55();
  specialized _NativeSet._delete(at:)(v5);
  OUTLINED_FUNCTION_16_76(v7);
  return v0;
}

Swift::UInt specialized Set._Variant.remove(_:)(Swift::UInt a1)
{
  uint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  char v6;
  int v7;
  unint64_t v8;
  uint64_t v10;

  v3 = *v1;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1);
  v4 = Hasher._finalize()() & ~(-1 << *(_BYTE *)(v3 + 32));
  if (((*(_QWORD *)(v3 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) == 0)
    return 0;
  if (*(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v4) != a1)
  {
    do
    {
      OUTLINED_FUNCTION_19_67();
      if ((v6 & 1) == 0)
        return 0;
    }
    while (*(_QWORD *)(v5 + 8 * v4) != a1);
  }
  OUTLINED_FUNCTION_51_4();
  OUTLINED_FUNCTION_15_86();
  if (!v7)
    specialized _NativeSet.copy()();
  v8 = OUTLINED_FUNCTION_39_55();
  specialized _NativeSet._delete(at:)(v8);
  OUTLINED_FUNCTION_16_76(v10);
  return a1;
}

uint64_t specialized Set._Variant._migrateToNative(_:removing:)()
{
  Swift::Int *v0;
  Swift::Int *v1;
  uint64_t v2;
  uint64_t v3;
  Swift::Int v4;
  Swift::Int v5;
  Swift::Int v6;
  uint64_t v7;
  unint64_t v8;
  id v9;
  char v10;
  uint64_t v11;
  id v12;
  char v13;
  uint64_t v14;
  uint64_t result;
  Swift::Int v16;

  v1 = v0;
  swift_bridgeObjectRelease();
  v2 = __CocoaSet.count.getter();
  v3 = swift_unknownObjectRetain();
  v4 = specialized _NativeSet.init(_:capacity:)(v3, v2);
  v16 = v4;
  v5 = *(_QWORD *)(v4 + 40);
  swift_retain();
  v6 = NSObject._rawHashValue(seed:)(v5);
  v7 = -1 << *(_BYTE *)(v4 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
  {
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for CNComposeRecipient);
    v9 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v8);
    v10 = static NSObject.== infix(_:_:)();

    if ((v10 & 1) != 0)
    {
LABEL_6:
      swift_release();
      v14 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v8);
      specialized _NativeSet._delete(at:)(v8);
      if ((static NSObject.== infix(_:_:)() & 1) != 0)
      {
        *v1 = v16;
        return v14;
      }
      __break(1u);
    }
    else
    {
      v11 = ~v7;
      while (1)
      {
        v8 = (v8 + 1) & v11;
        if (((*(_QWORD *)(v4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
          break;
        v12 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v8);
        v13 = static NSObject.== infix(_:_:)();

        if ((v13 & 1) != 0)
          goto LABEL_6;
      }
    }
    swift_release();
    __break(1u);
  }
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t specialized _NativeSet._delete(at:)(int64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  void (*v30)(char *, unint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;

  v3 = type metadata accessor for UUID();
  v32 = *(_QWORD *)(v3 - 8);
  result = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v8 = *v1 + 56;
  v9 = -1 << *(_BYTE *)(*v1 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(v8 + 8 * (v10 >> 6))) != 0)
  {
    v29 = v1;
    v11 = ~v9;
    swift_retain();
    v12 = _HashTable.previousHole(before:)();
    v31 = v8;
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v13 = (v12 + 1) & v11;
      v14 = *(_QWORD *)(v32 + 72);
      v30 = *(void (**)(char *, unint64_t, uint64_t))(v32 + 16);
      while (1)
      {
        v15 = v14 * v10;
        v30(v6, *(_QWORD *)(v7 + 48) + v14 * v10, v3);
        _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
        v16 = dispatch thunk of Hashable._rawHashValue(seed:)();
        (*(void (**)(char *, uint64_t))(v32 + 8))(v6, v3);
        v17 = v16 & v11;
        if (a1 >= (uint64_t)v13)
        {
          if (v17 < v13 || a1 < (uint64_t)v17)
            goto LABEL_24;
        }
        else if (v17 < v13 && a1 < (uint64_t)v17)
        {
          goto LABEL_24;
        }
        v20 = *(_QWORD *)(v7 + 48);
        v21 = v14 * a1;
        v22 = v20 + v14 * a1;
        v23 = v20 + v15 + v14;
        if (v14 * a1 < v15 || v22 >= v23)
          break;
        a1 = v10;
        if (v21 != v15)
        {
          swift_arrayInitWithTakeBackToFront();
          goto LABEL_23;
        }
LABEL_24:
        v10 = (v10 + 1) & v11;
        if (((*(_QWORD *)(v31 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
          goto LABEL_25;
      }
      swift_arrayInitWithTakeFrontToBack();
LABEL_23:
      a1 = v10;
      goto LABEL_24;
    }
LABEL_25:
    *(_QWORD *)(v31 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    result = swift_release();
    v1 = v29;
  }
  else
  {
    *(_QWORD *)(v8 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  v25 = *v1;
  v26 = *(_QWORD *)(*v1 + 16);
  v27 = __OFSUB__(v26, 1);
  v28 = v26 - 1;
  if (v27)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v25 + 16) = v28;
    ++*(_DWORD *)(v25 + 36);
  }
  return result;
}

unint64_t specialized _NativeSet._delete(at:)(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  Swift::Int v10;
  Swift::Int v11;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  BOOL v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = _HashTable.previousHole(before:)();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        Hasher.init(_seed:)();
        swift_bridgeObjectRetain();
        String.hash(into:)();
        v10 = Hasher._finalize()();
        swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 >= v9 && v2 >= v11)
          {
LABEL_15:
            v14 = *(_QWORD *)(v3 + 48);
            v15 = (_OWORD *)(v14 + 16 * v2);
            v16 = (_OWORD *)(v14 + 16 * v6);
            v17 = v2 != v6 || v15 >= v16 + 1;
            v2 = v6;
            if (v17)
            {
              *v15 = *v16;
              v2 = v6;
            }
          }
        }
        else if (v11 >= v9 || v2 >= v11)
        {
          goto LABEL_15;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v18 = *(_QWORD *)(v3 + 16);
  v19 = __OFSUB__(v18, 1);
  v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v20;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  Swift::Int v10;
  id v11;
  Swift::Int v12;
  Swift::Int v13;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  BOOL v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = _HashTable.previousHole(before:)();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(_QWORD *)(v3 + 40);
        v11 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v6);
        v12 = NSObject._rawHashValue(seed:)(v10);

        v13 = v12 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v13 >= v9 && v2 >= v13)
          {
LABEL_15:
            v16 = *(_QWORD *)(v3 + 48);
            v17 = (_QWORD *)(v16 + 8 * v2);
            v18 = (_QWORD *)(v16 + 8 * v6);
            v19 = v2 != v6 || v17 >= v18 + 1;
            v2 = v6;
            if (v19)
            {
              *v17 = *v18;
              v2 = v6;
            }
          }
        }
        else if (v13 >= v9 || v2 >= v13)
        {
          goto LABEL_15;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v20 = *(_QWORD *)(v3 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v22;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = _HashTable.previousHole(before:)();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(_QWORD *)(v3 + 48);
        v11 = (_QWORD *)(v10 + 8 * v6);
        v12 = static Hasher._hash(seed:_:)() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v2 >= v12)
          {
LABEL_15:
            v15 = (_QWORD *)(v10 + 8 * v2);
            v16 = v2 != v6 || v15 >= v11 + 1;
            v2 = v6;
            if (v16)
            {
              *v15 = *v11;
              v2 = v6;
            }
          }
        }
        else if (v12 >= v9 || v2 >= v12)
        {
          goto LABEL_15;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v17 = *(_QWORD *)(v3 + 16);
  v18 = __OFSUB__(v17, 1);
  v19 = v17 - 1;
  if (v18)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v19;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = _HashTable.previousHole(before:)();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(_QWORD *)(v3 + 48);
        v11 = (_QWORD *)(v10 + 8 * v6);
        v12 = static Hasher._hash(seed:_:)() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v2 >= v12)
          {
LABEL_15:
            v15 = (_QWORD *)(v10 + 8 * v2);
            v16 = v2 != v6 || v15 >= v11 + 1;
            v2 = v6;
            if (v16)
            {
              *v15 = *v11;
              v2 = v6;
            }
          }
        }
        else if (v12 >= v9 || v2 >= v12)
        {
          goto LABEL_15;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v17 = *(_QWORD *)(v3 + 16);
  v18 = __OFSUB__(v17, 1);
  v19 = v17 - 1;
  if (v18)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v19;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

{
  uint64_t *v1;
  Swift::Int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  Swift::UInt v10;
  Swift::Int v11;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = _HashTable.previousHole(before:)();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v6);
        Hasher.init(_seed:)();
        Hasher._combine(_:)(v10);
        v11 = Hasher._finalize()() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 >= v9 && v2 >= v11)
          {
LABEL_15:
            v14 = *(_QWORD *)(v3 + 48);
            v15 = (_QWORD *)(v14 + 8 * v2);
            v16 = (_QWORD *)(v14 + 8 * v6);
            v17 = v2 != v6 || v15 >= v16 + 1;
            v2 = v6;
            if (v17)
            {
              *v15 = *v16;
              v2 = v6;
            }
          }
        }
        else if (v11 >= v9 || v2 >= v11)
        {
          goto LABEL_15;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v18 = *(_QWORD *)(v3 + 16);
  v19 = __OFSUB__(v18, 1);
  v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v20;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

void specialized _NativeSet._delete(at:)()
{
  uint64_t *v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t (*v3)(_QWORD);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  uint64_t (*v15)(_QWORD);
  uint64_t v16;
  Swift::Int v17;
  uint64_t v18;
  Swift::Int v19;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(_QWORD);
  uint64_t v35;
  uint64_t v36;

  OUTLINED_FUNCTION_93();
  v2 = v1;
  v34 = v3;
  v35 = v3(0);
  v4 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v33 = (uint64_t)&v30 - v5;
  v6 = *v0;
  v7 = *v0 + 56;
  v8 = -1 << *(_BYTE *)(*v0 + 32);
  v9 = (v2 + 1) & ~v8;
  if (((1 << v9) & *(_QWORD *)(v7 + 8 * (v9 >> 6))) != 0)
  {
    v31 = v0;
    v10 = ~v8;
    OUTLINED_FUNCTION_15_22();
    v11 = _HashTable.previousHole(before:)();
    if ((*(_QWORD *)(v7 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      v12 = (v11 + 1) & v10;
      v36 = *(_QWORD *)(v4 + 72);
      v32 = v7;
      do
      {
        v13 = v36 * v9;
        v14 = v2;
        v16 = v33;
        v15 = v34;
        outlined init with copy of ConversationControlsAppLaunchButtonType(*(_QWORD *)(v6 + 48) + v36 * v9, v33, v34);
        OUTLINED_FUNCTION_84_12();
        OUTLINED_FUNCTION_33_0();
        _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
        dispatch thunk of Hashable.hash(into:)();
        v17 = Hasher._finalize()();
        v18 = v16;
        v2 = v14;
        outlined destroy of RemoteControlRequest(v18, v15);
        v19 = v17 & v10;
        if (v14 >= (uint64_t)v12)
        {
          if (v19 < v12 || v14 < v19)
          {
LABEL_20:
            v7 = v32;
            goto LABEL_24;
          }
        }
        else if (v19 < v12 && v14 < v19)
        {
          goto LABEL_20;
        }
        v21 = *(_QWORD *)(v6 + 48);
        v22 = v21 + v36 * v14;
        v23 = v21 + v13 + v36;
        v24 = v36 * v14 < v13 || v22 >= v23;
        v7 = v32;
        if (v24)
        {
          swift_arrayInitWithTakeFrontToBack();
LABEL_23:
          v2 = v9;
          goto LABEL_24;
        }
        v2 = v9;
        if (v36 * v14 != v13)
        {
          swift_arrayInitWithTakeBackToFront();
          goto LABEL_23;
        }
LABEL_24:
        v9 = (v9 + 1) & v10;
      }
      while (((*(_QWORD *)(v7 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    *(_QWORD *)(v7 + ((v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    OUTLINED_FUNCTION_17_22();
    v0 = v31;
  }
  else
  {
    *(_QWORD *)(v7 + ((v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
  }
  v26 = *v0;
  v27 = *(_QWORD *)(*v0 + 16);
  v28 = __OFSUB__(v27, 1);
  v29 = v27 - 1;
  if (v28)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v26 + 16) = v29;
    ++*(_DWORD *)(v26 + 36);
    OUTLINED_FUNCTION_52_1();
  }
}

uint64_t specialized Set._Variant.update(with:)@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v2;
  *v2 = 0x8000000000000000;
  specialized _NativeSet.update(with:isUnique:)(a1, isUniquelyReferenced_nonNull_native, a2);
  *v2 = v7;
  return swift_bridgeObjectRelease();
}

uint64_t specialized _NativeSet.update(with:isUnique:)@<X0>(unint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  char v19;
  uint64_t *v20;
  uint64_t v21;
  _BOOL8 v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  void (*v34)(char *, unint64_t, uint64_t);
  char v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, unint64_t, uint64_t);
  uint64_t result;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;

  LODWORD(v48) = a2;
  v45 = a3;
  v5 = type metadata accessor for UUID();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = v3;
  v9 = *v3;
  _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, v10, MEMORY[0x1E0CB09C8]);
  v50 = a1;
  v47 = v11;
  v12 = dispatch thunk of Hashable._rawHashValue(seed:)();
  v13 = -1 << *(_BYTE *)(v9 + 32);
  v14 = v12 & ~v13;
  v15 = *(_QWORD *)(v9 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14;
  v49 = v6;
  if ((v15 & 1) != 0)
  {
    v16 = ~v13;
    v17 = *(_QWORD *)(v6 + 72);
    v18 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    do
    {
      v18(v8, *(_QWORD *)(v9 + 48) + v17 * v14, v5);
      _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
      v19 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v49 + 8))(v8, v5);
      if ((v19 & 1) != 0)
        break;
      v14 = (v14 + 1) & v16;
    }
    while (((*(_QWORD *)(v9 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0);
  }
  else
  {
    v19 = 0;
  }
  v20 = v46;
  v21 = *(_QWORD *)(*v46 + 16);
  v22 = (v19 & 1) == 0;
  v23 = v21 + v22;
  if (__OFADD__(v21, v22))
  {
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v24 = *(_QWORD *)(*v46 + 24);
  v25 = (_QWORD *)v49;
  if (v24 >= v23 && (v48 & 1) != 0)
  {
    if ((v19 & 1) != 0)
    {
LABEL_11:
      v26 = v25[9] * v14;
LABEL_28:
      v42 = *v20;
      v43 = (void (*)(uint64_t, unint64_t, uint64_t))v25[4];
      v41 = v45;
      v43(v45, *(_QWORD *)(v42 + 48) + v26, v5);
      v43(*(_QWORD *)(v42 + 48) + v26, v50, v5);
      v40 = 0;
      return __swift_storeEnumTagSinglePayload(v41, v40, 1, v5);
    }
    goto LABEL_16;
  }
  if ((v48 & 1) != 0)
  {
    specialized _NativeSet.resize(capacity:)();
  }
  else
  {
    if (v24 >= v23)
    {
      specialized _NativeSet.copy()();
      if ((v19 & 1) != 0)
        goto LABEL_11;
LABEL_16:
      v27 = v14 >> 6;
      v28 = 1 << v14;
LABEL_25:
      v36 = *v20;
      *(_QWORD *)(v36 + 8 * v27 + 56) |= v28;
      ((void (*)(unint64_t, unint64_t, uint64_t))v25[4])(*(_QWORD *)(v36 + 48) + v25[9] * v14, v50, v5);
      v37 = *(_QWORD *)(v36 + 16);
      v38 = __OFADD__(v37, 1);
      v39 = v37 + 1;
      if (!v38)
      {
        *(_QWORD *)(v36 + 16) = v39;
        v40 = 1;
        v41 = v45;
        return __swift_storeEnumTagSinglePayload(v41, v40, 1, v5);
      }
      goto LABEL_31;
    }
    specialized _NativeSet.copyAndResize(capacity:)();
  }
  v29 = *v20;
  v30 = dispatch thunk of Hashable._rawHashValue(seed:)();
  v31 = -1 << *(_BYTE *)(v29 + 32);
  v14 = v30 & ~v31;
  v27 = v14 >> 6;
  v48 = v29 + 56;
  v28 = 1 << v14;
  if (((1 << v14) & *(_QWORD *)(v29 + 56 + 8 * (v14 >> 6))) != 0)
  {
    v47 = ~v31;
    v32 = v25[9];
    v33 = v25;
    v34 = (void (*)(char *, unint64_t, uint64_t))v25[2];
    while (1)
    {
      v26 = v32 * v14;
      v34(v8, *(_QWORD *)(v29 + 48) + v32 * v14, v5);
      _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
      v35 = dispatch thunk of static Equatable.== infix(_:_:)();
      ((void (*)(char *, uint64_t))v33[1])(v8, v5);
      if ((v35 & 1) != 0)
        break;
      v14 = (v14 + 1) & v47;
      v27 = v14 >> 6;
      v28 = 1 << v14;
      if ((*(_QWORD *)(v48 + 8 * (v14 >> 6)) & (1 << v14)) == 0)
      {
        v20 = v46;
        if ((v19 & 1) != 0)
          goto LABEL_32;
        v25 = v33;
        goto LABEL_25;
      }
    }
    v20 = v46;
    v25 = v33;
    if ((v19 & 1) == 0)
      goto LABEL_32;
    goto LABEL_28;
  }
  if ((v19 & 1) == 0)
    goto LABEL_25;
LABEL_32:
  result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t specialized PlaceholderCallCenter.downgradeToAVLess(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void *v25;
  id v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v36 = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for UUID();
  v37 = *(_QWORD *)(v10 - 8);
  v38 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v35 - v14;
  v16 = type metadata accessor for DispatchPredicate();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (uint64_t *)((char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v21 = MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v35 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = v24;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v24 + 16))(v23, a1, a3, v21);
  v25 = *(void **)(a2 + OBJC_IVAR____TtC15ConversationKit21PlaceholderCallCenter_queue);
  *v19 = v25;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v17 + 104))(v19, *MEMORY[0x1E0DEF740], v16);
  v26 = v25;
  LOBYTE(v25) = _dispatchPreconditionTest(_:)();
  (*(void (**)(_QWORD *, uint64_t))(v17 + 8))(v19, v16);
  if ((v25 & 1) == 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  (*(void (**)(uint64_t))(v36 + 8))(a3);
  PlaceholderCallCenter.setAVMode(_:for:)();
  v28 = v37;
  v27 = (char *)v38;
  v17 = *(_QWORD *)(v37 + 16);
  ((void (*)(char *, char *, uint64_t))v17)(v12, v15, v38);
  swift_beginAccess();
  specialized Set._Variant.update(with:)((unint64_t)v12, (uint64_t)v9);
  outlined destroy of UUID?((uint64_t)v9);
  swift_endAccess();
  a2 = v28;
  v12 = v27;
  v16 = (uint64_t)v23;
  if (one-time initialization token for conversationKit != -1)
LABEL_5:
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_1BD6441D0;
  ((void (*)(char *, char *, char *))v17)(v9, v15, v12);
  __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, (uint64_t)v12);
  specialized >> prefix<A>(_:)((uint64_t)v9);
  v31 = v30;
  v33 = v32;
  outlined destroy of UUID?((uint64_t)v9);
  *(_QWORD *)(v29 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v29 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v29 + 32) = v31;
  *(_QWORD *)(v29 + 40) = v33;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, char *))(a2 + 8))(v15, v12);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v39 + 8))(v16, a3);
}

uint64_t sub_1BD3F376C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BD3F3790()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void partial apply for closure #1 in PlaceholderCallCenter.updateAVModeSoon(for:)()
{
  uint64_t v0;

  closure #1 in PlaceholderCallCenter.updateAVModeSoon(for:)(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t type metadata accessor for PlaceholderCallCenter()
{
  return objc_opt_self();
}

uint64_t method lookup function for PlaceholderCallCenter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PlaceholderCallCenter.__allocating_init(conversationManager:queue:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t OUTLINED_FUNCTION_39_55()
{
  uint64_t v0;

  return v0;
}

id OUTLINED_FUNCTION_85_18()
{
  uint64_t v0;
  uint64_t v1;

  return *(id *)(*(_QWORD *)(v0 + 48) + 8 * v1);
}

uint64_t OUTLINED_FUNCTION_87_14(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v3[8] = a1;
  v3[4] = v1;
  v3[5] = v2;
  return static os_log_type_t.default.getter();
}

void ClarityUIFavoritesView.navigationPath.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>);
  JUMPOUT(0x1C3B72860);
}

uint64_t key path setter for ClarityUIFavoritesView.navigationPath : ClarityUIFavoritesView(uint64_t a1)
{
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v2 = type metadata accessor for NavigationPath();
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v6 + 16))(v5, a1, v3);
  return ClarityUIFavoritesView.navigationPath.setter((uint64_t)v5);
}

uint64_t ClarityUIFavoritesView.navigationPath.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v7;

  v2 = OUTLINED_FUNCTION_9_1();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))((char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2, v4);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>);
  Binding.wrappedValue.setter();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

void (*ClarityUIFavoritesView.navigationPath.modify())(uint64_t a1, char a2)
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  size_t v5;
  uint64_t v6;
  void *v7;

  v2 = OUTLINED_FUNCTION_124_1();
  *v0 = v2;
  v3 = OUTLINED_FUNCTION_9_1();
  *v2 = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[1] = v4;
  v5 = *(_QWORD *)(v4 + 64);
  v2[2] = malloc(v5);
  v2[3] = malloc(v5);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>);
  v2[4] = v6;
  v7 = malloc(*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  v2[5] = v7;
  outlined init with copy of FeatureEligibility?(v1, (uint64_t)v7, &demangling cache variable for type metadata for Binding<NavigationPath>);
  MEMORY[0x1C3B72860](v6);
  return ClarityUIOutgoingCallActionsView.navigationPath.modify;
}

uint64_t ClarityUIFavoritesView.$navigationPath.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>);
  return Binding.projectedValue.getter();
}

uint64_t ClarityUIFavoritesView.isDialerPresented.getter()
{
  uint64_t v0;
  uint64_t v2;

  OUTLINED_FUNCTION_0_136();
  OUTLINED_FUNCTION_1_131();
  v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<Bool>);
  MEMORY[0x1C3B72860](&v2, v0);
  return v2;
}

uint64_t type metadata accessor for ClarityUIFavoritesView()
{
  uint64_t result;

  result = type metadata singleton initialization cache for ClarityUIFavoritesView;
  if (!type metadata singleton initialization cache for ClarityUIFavoritesView)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t ClarityUIFavoritesView.isDialerPresented.setter()
{
  OUTLINED_FUNCTION_0_136();
  OUTLINED_FUNCTION_1_131();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<Bool>);
  return Binding.wrappedValue.setter();
}

void (*ClarityUIFavoritesView.isDialerPresented.modify())(uint64_t a1)
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v2 = OUTLINED_FUNCTION_124_1();
  *v0 = v2;
  v3 = (uint64_t *)(v1 + *(int *)(OUTLINED_FUNCTION_0_136() + 20));
  v4 = *v3;
  v5 = v3[1];
  v2[3] = *v3;
  v2[4] = v5;
  LOBYTE(v3) = *((_BYTE *)v3 + 16);
  *((_BYTE *)v2 + 19) = (_BYTE)v3;
  *v2 = v4;
  v2[1] = v5;
  *((_BYTE *)v2 + 16) = (_BYTE)v3;
  swift_retain();
  swift_retain();
  v2[5] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<Bool>);
  MEMORY[0x1C3B72860]();
  return AnimatedSaveView.saveState.modify;
}

uint64_t ClarityUIFavoritesView.$isDialerPresented.getter()
{
  uint64_t v1;

  OUTLINED_FUNCTION_0_136();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<Bool>);
  Binding.projectedValue.getter();
  return v1;
}

uint64_t ClarityUIFavoritesView.body.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(ForEach<[ClarityUIFavorite], String, _ConditionalContent<<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0>?>, TupleView<(<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0)>?, Button<Label<Text, Image>>?)>);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type TupleView<(ForEach<[ClarityUIFavorite], String, _ConditionalContent<<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0>?>, TupleView<(<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0)>?, Button<Label<Text, Image>>?)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(ForEach<[ClarityUIFavorite], String, _ConditionalContent<<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0>?>, TupleView<(<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0)>?, Button<Label<Text, Image>>?)>, MEMORY[0x1E0CE0680]);
  return List<>.init(content:)();
}

uint64_t closure #1 in ClarityUIFavoritesView.body.getter@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char **v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  char *v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t result;
  uint64_t v45;
  id v46;
  void *v47;
  BOOL v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t);
  uint64_t v55;
  void (*v56)(char *, char *, uint64_t);
  char *v57;
  char *v58;
  char *v59;
  char *v60;
  void (*v61)(char *, char *, uint64_t);
  char *v62;
  uint64_t v63;
  void (*v64)(char *, uint64_t);
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  void (*v75)(char *, char *, uint64_t);
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  void (*v84)(char *, uint64_t);
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char **v88;
  char *v89;
  char *v90;
  uint64_t v91;
  char *v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  char *v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  char v112;
  char v113;
  uint64_t v114;

  v110 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<Label<Text, Image>>?);
  MEMORY[0x1E0C80A78](v3);
  v111 = (uint64_t)&v85 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v109 = (char *)&v85 - v6;
  v95 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NavigationLink<Label<Text, Image>, Never>);
  v91 = *(_QWORD *)(v95 - 8);
  MEMORY[0x1E0C80A78](v95);
  v93 = (char *)&v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v103 = (char *)&v85 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.badge(_:)>>.0);
  v96 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v98 = (char *)&v85 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v97 = (char *)&v85 - v13;
  MEMORY[0x1E0C80A78](v14);
  v94 = (char *)&v85 - v15;
  MEMORY[0x1E0C80A78](v16);
  v90 = (char *)&v85 - v17;
  MEMORY[0x1E0C80A78](v18);
  v92 = (char *)&v85 - v19;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0)>?);
  MEMORY[0x1E0C80A78](v20);
  v104 = (char *)&v85 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v85 - v23;
  v25 = type metadata accessor for ClarityUIFavoritesView();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(_QWORD *)(v26 + 64);
  MEMORY[0x1E0C80A78](v25);
  v108 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ForEach<[ClarityUIFavorite], String, _ConditionalContent<<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0>?>);
  v106 = *(_QWORD *)(v108 - 8);
  MEMORY[0x1E0C80A78](v108);
  v107 = (char *)&v85 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)&v85 - v30;
  v114 = ClarityUIFavoritesList.favorites.getter();
  outlined init with copy of ClarityUIFavoritesView(a1, (uint64_t)&v85 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  v32 = *(unsigned __int8 *)(v26 + 80);
  v33 = (char **)a1;
  v34 = (v32 + 16) & ~v32;
  v99 = v32 | 7;
  v100 = v34 + v27;
  v35 = swift_allocObject();
  v101 = v34;
  v102 = (uint64_t)&v85 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with take of ClarityUIFavoritesView(v102, v35 + v34);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [ClarityUIFavorite]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0>?);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type [ClarityUIFavorite] and conformance [A], &demangling cache variable for type metadata for [ClarityUIFavorite], MEMORY[0x1E0DEAF48]);
  lazy protocol witness table accessor for type _ConditionalContent<<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0>? and conformance <A> A?();
  lazy protocol witness table accessor for type ClarityUIFavorite and conformance ClarityUIFavorite();
  v105 = v31;
  ForEach<>.init(_:content:)();
  v36 = *(int *)(v25 + 24);
  if ((ClarityUIPreferences.canCallContacts.getter() & 1) != 0)
  {
    v89 = v24;
    v113 = 0;
    v37 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Label<Text, Image>);
    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type Label<Text, Image> and conformance Label<A, B>, &demangling cache variable for type metadata for Label<Text, Image>, MEMORY[0x1E0CDF8C8]);
    v39 = v38;
    lazy protocol witness table accessor for type ClarityUIRecentsNavigationDestination and conformance ClarityUIRecentsNavigationDestination();
    v40 = v103;
    NavigationLink<>.init<A>(value:label:)();
    v41 = ClarityUICallHistory.recentCalls.getter();
    v42 = v41;
    if (v41 >> 62)
      goto LABEL_20;
    v43 = *(_QWORD *)((v41 & 0xFFFFFFFFFFFFF8) + 0x10);
    for (result = swift_bridgeObjectRetain(); ; v43 = result)
    {
      v88 = v33;
      v87 = v36;
      v86 = v37;
      v85 = v39;
      if (!v43)
      {
LABEL_14:
        swift_bridgeObjectRelease_n();
        lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type NavigationLink<Label<Text, Image>, Never> and conformance NavigationLink<A, B>, &demangling cache variable for type metadata for NavigationLink<Label<Text, Image>, Never>, MEMORY[0x1E0CD9468]);
        v52 = v90;
        v53 = v95;
        View.badge(_:)();
        v54 = *(void (**)(char *, uint64_t))(v91 + 8);
        v54(v40, v53);
        v55 = v96;
        v56 = *(void (**)(char *, char *, uint64_t))(v96 + 32);
        v57 = v92;
        v56(v92, v52, v10);
        v112 = 0;
        lazy protocol witness table accessor for type ClarityUIContactsNavigationDestination and conformance ClarityUIContactsNavigationDestination();
        v58 = v93;
        NavigationLink<>.init<A>(value:label:)();
        v59 = v97;
        View.badge(_:)();
        v54(v58, v53);
        v60 = v94;
        v56(v94, v59, v10);
        v61 = *(void (**)(char *, char *, uint64_t))(v55 + 16);
        v61(v59, v57, v10);
        v62 = v98;
        v61(v98, v60, v10);
        v51 = (uint64_t)v104;
        v61(v104, v59, v10);
        v63 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0));
        v61((char *)(v51 + *(int *)(v63 + 48)), v62, v10);
        v64 = *(void (**)(char *, uint64_t))(v55 + 8);
        v64(v60, v10);
        v64(v57, v10);
        v64(v62, v10);
        v64(v59, v10);
        v65 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0)>);
        __swift_storeEnumTagSinglePayload(v51, 0, 1, v65);
        v50 = (uint64_t)v89;
        outlined init with take of Any?(v51, (uint64_t)v89, &demangling cache variable for type metadata for TupleView<(<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0)>?);
        v33 = v88;
        goto LABEL_15;
      }
      if (v43 < 1)
        break;
      v36 = 0;
      v45 = 0;
      v39 = v42 & 0xC000000000000001;
      v33 = &selRef_setTarget_;
      while (1)
      {
        v46 = v39 ? (id)MEMORY[0x1C3B73D18](v36, v42) : *(id *)(v42 + 8 * v36 + 32);
        v47 = v46;
        v37 = (uint64_t)objc_msgSend(v46, sel_unreadCount, v85, v86);

        v48 = __OFADD__(v45, v37);
        v45 += v37;
        if (v48)
          break;
        if (v43 == ++v36)
          goto LABEL_14;
      }
      __break(1u);
LABEL_20:
      swift_bridgeObjectRetain();
      result = _CocoaArrayWrapper.endIndex.getter();
    }
    __break(1u);
  }
  else
  {
    v49 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0)>);
    __swift_storeEnumTagSinglePayload((uint64_t)v24, 1, 1, v49);
    v50 = (uint64_t)v24;
    v51 = (uint64_t)v104;
LABEL_15:
    v66 = ClarityUIPreferences.dialerKeypadEnabled.getter();
    v67 = (uint64_t)v109;
    if ((v66 & 1) != 0)
    {
      v68 = (uint64_t)v33;
      v69 = v102;
      outlined init with copy of ClarityUIFavoritesView(v68, v102);
      v70 = swift_allocObject();
      outlined init with take of ClarityUIFavoritesView(v69, v70 + v101);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Label<Text, Image>);
      lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type Label<Text, Image> and conformance Label<A, B>, &demangling cache variable for type metadata for Label<Text, Image>, MEMORY[0x1E0CDF8C8]);
      Button.init(action:label:)();
      v71 = 0;
    }
    else
    {
      v71 = 1;
    }
    v72 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<Label<Text, Image>>);
    __swift_storeEnumTagSinglePayload(v67, v71, 1, v72);
    v73 = v106;
    v74 = v107;
    v75 = *(void (**)(char *, char *, uint64_t))(v106 + 16);
    v76 = v105;
    v77 = v67;
    v78 = v108;
    v75(v107, v105, v108);
    outlined init with copy of FeatureEligibility?(v50, v51, &demangling cache variable for type metadata for TupleView<(<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0)>?);
    v79 = v51;
    v80 = v111;
    outlined init with copy of FeatureEligibility?(v77, v111, &demangling cache variable for type metadata for Button<Label<Text, Image>>?);
    v81 = v50;
    v82 = v110;
    v75(v110, v74, v78);
    v83 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ForEach<[ClarityUIFavorite], String, _ConditionalContent<<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0>?>, TupleView<(<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0)>?, Button<Label<Text, Image>>?));
    outlined init with copy of FeatureEligibility?(v79, (uint64_t)&v82[*(int *)(v83 + 48)], &demangling cache variable for type metadata for TupleView<(<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0)>?);
    outlined init with copy of FeatureEligibility?(v80, (uint64_t)&v82[*(int *)(v83 + 64)], &demangling cache variable for type metadata for Button<Label<Text, Image>>?);
    outlined destroy of OS_dispatch_queue.SchedulerOptions?(v77, &demangling cache variable for type metadata for Button<Label<Text, Image>>?);
    outlined destroy of OS_dispatch_queue.SchedulerOptions?(v81, &demangling cache variable for type metadata for TupleView<(<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0)>?);
    v84 = *(void (**)(char *, uint64_t))(v73 + 8);
    v84(v76, v78);
    outlined destroy of OS_dispatch_queue.SchedulerOptions?(v80, &demangling cache variable for type metadata for Button<Label<Text, Image>>?);
    outlined destroy of OS_dispatch_queue.SchedulerOptions?(v79, &demangling cache variable for type metadata for TupleView<(<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0)>?);
    return ((uint64_t (*)(char *, uint64_t))v84)(v74, v78);
  }
  return result;
}

uint64_t partial apply for closure #1 in ClarityUIFavoritesView.body.getter@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return closure #1 in ClarityUIFavoritesView.body.getter(*(_QWORD *)(v1 + 16), a1);
}

void closure #1 in closure #1 in ClarityUIFavoritesView.body.getter(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (**v11)(_QWORD, _QWORD);
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  unint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  void (**v53)(_QWORD, _QWORD);
  char *v54;
  id v55;
  void (**v56)(_QWORD, _QWORD);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD v65[2];
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  void (**v73)(_QWORD, _QWORD);
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  __int128 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  uint64_t v90;
  ConversationKit::ClarityUIContact v91;
  ConversationKit::ClarityUIContact v92;

  v77 = a2;
  v78 = a3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0>.Storage);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0>?);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NavigationLink<Label<Text, ClarityUIContactAvatar>, Never>);
  v11 = *(void (***)(_QWORD, _QWORD))(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.badge(_:)>>.0);
  MEMORY[0x1E0C80A78](v14);
  MEMORY[0x1E0C80A78](v15);
  v90 = *((_QWORD *)a1 + 6);
  v17 = a1[2];
  v18 = *a1;
  v88 = a1[1];
  v89 = v17;
  v87 = v18;
  v19 = *(_QWORD *)(v88 + 16);
  if (v19 >= 2)
  {
    v75 = v4;
    v76 = v9;
    v20 = (void *)v89;
    v73 = v11;
    v22 = *((_QWORD *)&v89 + 1);
    v21 = v90;
    v79 = *((_QWORD *)&v88 + 1);
    v80 = v89;
    v81 = v90;
    v82 = v88;
    MEMORY[0x1E0C80A78](v16);
    v70 = v6;
    v65[-2] = &v87;
    v72 = v23;
    v74 = v24;
    v71 = v25;
    v27 = v26;
    v28 = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Label<Text, ClarityUIContactAvatar>);
    v69 = v10;
    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type Label<Text, ClarityUIContactAvatar> and conformance Label<A, B>, (uint64_t *)&demangling cache variable for type metadata for Label<Text, ClarityUIContactAvatar>, MEMORY[0x1E0CDF8C8]);
    lazy protocol witness table accessor for type ClarityUIOutgoingCallActionsNavigationDestination and conformance ClarityUIOutgoingCallActionsNavigationDestination();
    NavigationLink<>.init<A>(value:label:)();
    type metadata accessor for ClarityUIFavoritesView();
    v79 = (uint64_t)v27;
    *(_QWORD *)&v80 = v28;
    *((_QWORD *)&v80 + 1) = v22;
    v81 = v21;
    v29 = v27;
    v30 = v28;
    swift_bridgeObjectRetain();
    v91.cnContact.super.isa = (Class)&v79;
    ClarityUICallHistory.badgeCount(for:)(v91);
    swift_bridgeObjectRelease();

    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type NavigationLink<Label<Text, ClarityUIContactAvatar>, Never> and conformance NavigationLink<A, B>, &demangling cache variable for type metadata for NavigationLink<Label<Text, ClarityUIContactAvatar>, Never>, MEMORY[0x1E0CD9468]);
    v32 = v31;
    v33 = v71;
    v34 = v69;
    View.badge(_:)();
    v35 = v13;
    v36 = v34;
    ((void (**)(char *, uint64_t))v73)[1](v35, v34);
    v37 = v72;
    v38 = v74;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v72 + 32))(v74, v33, v14);
    (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v70, v38, v14);
    swift_storeEnumTagMultiPayload();
    v79 = v36;
    *(_QWORD *)&v80 = v32;
    swift_getOpaqueTypeConformance2();
    v39 = (uint64_t)v76;
    _ConditionalContent<>.init(storage:)();
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v38, v14);
LABEL_5:
    v63 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0>);
    __swift_storeEnumTagSinglePayload(v39, 0, 1, v63);
    outlined init with take of Any?(v39, v78, &demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0>?);
    return;
  }
  if (v19)
  {
    v67 = v65;
    v40 = *(_QWORD *)(v88 + 32);
    v41 = *(_QWORD *)(v88 + 40);
    v42 = *(unsigned __int8 *)(v88 + 48);
    v43 = *(_QWORD *)(v88 + 56);
    v44 = *(_QWORD *)(v88 + 64);
    v45 = (void *)*((_QWORD *)&v88 + 1);
    v66 = *((_QWORD *)&v89 + 1);
    v73 = (void (**)(_QWORD, _QWORD))v89;
    v75 = v4;
    v46 = v90;
    v79 = *((_QWORD *)&v88 + 1);
    v80 = v89;
    v81 = v90;
    v82 = v40;
    v83 = v41;
    v84 = v42;
    v85 = v43;
    v47 = v43;
    v86 = v44;
    MEMORY[0x1E0C80A78](v89);
    v76 = v9;
    v65[1] = &v65[-4];
    v65[-2] = &v87;
    v74 = v48;
    v69 = v49;
    v72 = v50;
    v68 = v14;
    v71 = v51;
    swift_bridgeObjectRetain();
    v70 = (char *)v47;
    _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v47);
    swift_bridgeObjectRetain();
    _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v47);
    v52 = v45;
    v53 = v73;
    swift_bridgeObjectRetain();
    v73 = v11;
    v54 = v6;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Label<Text, ClarityUIContactAvatar>);
    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type Label<Text, ClarityUIContactAvatar> and conformance Label<A, B>, (uint64_t *)&demangling cache variable for type metadata for Label<Text, ClarityUIContactAvatar>, MEMORY[0x1E0CDF8C8]);
    lazy protocol witness table accessor for type ClarityUIPreviewNavigationDestination and conformance ClarityUIPreviewNavigationDestination();
    NavigationLink<>.init<A>(value:label:)();
    type metadata accessor for ClarityUIFavoritesView();
    v79 = (uint64_t)v52;
    *(_QWORD *)&v80 = v53;
    *((_QWORD *)&v80 + 1) = v66;
    v81 = v46;
    v55 = v52;
    v56 = v53;
    swift_bridgeObjectRetain();
    v92.cnContact.super.isa = (Class)&v79;
    ClarityUICallHistory.badgeCount(for:)(v92);
    swift_bridgeObjectRelease();

    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type NavigationLink<Label<Text, ClarityUIContactAvatar>, Never> and conformance NavigationLink<A, B>, &demangling cache variable for type metadata for NavigationLink<Label<Text, ClarityUIContactAvatar>, Never>, MEMORY[0x1E0CD9468]);
    v58 = v57;
    v59 = v71;
    View.badge(_:)();
    ((void (**)(char *, uint64_t))v73)[1](v13, v10);
    v60 = v72;
    v61 = v74;
    v62 = v68;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v72 + 32))(v74, v59, v68);
    (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))(v54, v61, v62);
    swift_storeEnumTagMultiPayload();
    v79 = v10;
    *(_QWORD *)&v80 = v58;
    swift_getOpaqueTypeConformance2();
    v39 = (uint64_t)v76;
    _ConditionalContent<>.init(storage:)();
    swift_bridgeObjectRelease();
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v70);
    (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v61, v62);
    goto LABEL_5;
  }
  v64 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0>);
  __swift_storeEnumTagSinglePayload(v78, 1, 1, v64);
}

uint64_t closure #1 in closure #1 in closure #1 in ClarityUIFavoritesView.body.getter()
{
  lazy protocol witness table accessor for type ClarityUIContactAvatar and conformance ClarityUIContactAvatar();
  return Label.init(title:icon:)();
}

uint64_t closure #1 in closure #1 in closure #1 in closure #1 in ClarityUIFavoritesView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v3;
  uint64_t result;
  uint64_t v5;
  char v6;
  uint64_t v7;
  _OWORD v8[2];

  v3 = *(_OWORD *)(a1 + 40);
  v8[0] = *(_OWORD *)(a1 + 24);
  v8[1] = v3;
  outlined retain of ClarityUIContact((uint64_t)v8);
  CNContact.clarityUIDisplayName.getter();
  outlined release of ClarityUIContact((uint64_t)v8);
  lazy protocol witness table accessor for type String and conformance String();
  result = Text.init<A>(_:)();
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = v5;
  *(_BYTE *)(a2 + 16) = v6 & 1;
  *(_QWORD *)(a2 + 24) = v7;
  return result;
}

id closure #2 in closure #2 in closure #1 in closure #1 in ClarityUIFavoritesView.body.getter@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;
  id v3;
  id v5;

  v2 = *(void **)(a1 + 24);
  v5 = *(id *)(a1 + 32);
  *a2 = v2;
  a2[1] = v5;
  v3 = v2;
  return v5;
}

void closure #2 in closure #1 in ClarityUIFavoritesView.body.getter()
{
  closure #2 in closure #1 in ClarityUIFavoritesView.body.getter((void (*)(__n128))MEMORY[0x1E0D13368]);
}

void closure #4 in closure #1 in ClarityUIFavoritesView.body.getter()
{
  closure #2 in closure #1 in ClarityUIFavoritesView.body.getter((void (*)(__n128))MEMORY[0x1E0D13370]);
}

void closure #2 in closure #1 in ClarityUIFavoritesView.body.getter(void (*a1)(__n128))
{
  uint64_t v2;
  __n128 v3;

  v2 = type metadata accessor for ClarityUINavigationTitle();
  v3 = MEMORY[0x1E0C80A78](v2);
  a1(v3);
  Label<>.init(_:)();
  OUTLINED_FUNCTION_18();
}

uint64_t closure #5 in closure #1 in ClarityUIFavoritesView.body.getter()
{
  static Animation.default.getter();
  withAnimation<A>(_:_:)();
  return swift_release();
}

uint64_t closure #1 in closure #5 in closure #1 in ClarityUIFavoritesView.body.getter()
{
  type metadata accessor for ClarityUIFavoritesView();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<Bool>);
  return Binding.wrappedValue.setter();
}

uint64_t closure #6 in closure #1 in ClarityUIFavoritesView.body.getter()
{
  id v0;
  Swift::String v1;
  Swift::String_optional v2;
  Swift::String v3;
  Swift::String v5;

  v0 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v1._countAndFlagsBits = 0xD00000000000001ELL;
  v5._object = (void *)0xE000000000000000;
  v1._object = (void *)0x80000001BD68AF10;
  v2.value._countAndFlagsBits = 0x61737265766E6F43;
  v2.value._object = (void *)0xEF74694B6E6F6974;
  v3._countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  v5._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v1, v2, (NSBundle)v0, v3, v5);

  lazy protocol witness table accessor for type String and conformance String();
  return Label<>.init<A>(_:systemImage:)();
}

uint64_t ClarityUIFavoritesView.init(navigationPath:isDialerPresented:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  outlined init with take of Any?(a1, a5, &demangling cache variable for type metadata for Binding<NavigationPath>);
  v9 = (int *)OUTLINED_FUNCTION_0_136();
  v10 = a5 + v9[5];
  *(_QWORD *)v10 = a2;
  *(_QWORD *)(v10 + 8) = a3;
  *(_BYTE *)(v10 + 16) = a4;
  v11 = v9[6];
  if (one-time initialization token for shared != -1)
    swift_once();
  *(_QWORD *)(a5 + v11) = static ClarityUIPreferences.shared;
  v12 = v9[7];
  v13 = one-time initialization token for shared;
  swift_retain();
  if (v13 != -1)
    swift_once();
  *(_QWORD *)(a5 + v12) = static ClarityUICallHistory.shared;
  v14 = v9[8];
  v15 = one-time initialization token for shared;
  swift_retain();
  if (v15 != -1)
    swift_once();
  *(_QWORD *)(a5 + v14) = static ClarityUIFavoritesList.shared;
  return swift_retain();
}

uint64_t associated type witness table accessor for View.Body : View in ClarityUIFavoritesView()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1BD3F510C()
{
  ClarityUIFavoritesView.navigationPath.getter();
}

void sub_1BD3F5120()
{
  OUTLINED_FUNCTION_0();
}

void sub_1BD3F512C(_BYTE *a1@<X8>)
{
  *a1 = ClarityUIFavoritesView.isDialerPresented.getter() & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD3F5154()
{
  ClarityUIFavoritesView.isDialerPresented.setter();
  OUTLINED_FUNCTION_0();
}

uint64_t *initializeBufferWithCopyOfBuffer for ClarityUIFavoritesView(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
  }
  else
  {
    v7 = a1;
    a1[1] = a2[1];
    swift_retain();
    swift_retain();
    v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>)
                + 32);
    v9 = (char *)v7 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for NavigationPath();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[5];
    v13 = a3[6];
    v14 = (char *)v7 + v12;
    v15 = (char *)a2 + v12;
    v16 = *((_QWORD *)v15 + 1);
    *(_QWORD *)v14 = *(_QWORD *)v15;
    *((_QWORD *)v14 + 1) = v16;
    v14[16] = v15[16];
    *(uint64_t *)((char *)v7 + v13) = *(uint64_t *)((char *)a2 + v13);
    v17 = a3[8];
    *(uint64_t *)((char *)v7 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    *(uint64_t *)((char *)v7 + v17) = *(uint64_t *)((char *)a2 + v17);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v7;
}

uint64_t destroy for ClarityUIFavoritesView(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_release();
  swift_release();
  v2 = a1
     + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>)
              + 32);
  v3 = type metadata accessor for NavigationPath();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

_QWORD *initializeWithCopy for ClarityUIFavoritesView(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_retain();
  v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>)
              + 32);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for NavigationPath();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[5];
  v12 = a3[6];
  v13 = (char *)a1 + v11;
  v14 = (char *)a2 + v11;
  v15 = *((_QWORD *)v14 + 1);
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *((_QWORD *)v13 + 1) = v15;
  v13[16] = v14[16];
  *(_QWORD *)((char *)a1 + v12) = *(_QWORD *)((char *)a2 + v12);
  v16 = a3[8];
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  *(_QWORD *)((char *)a1 + v16) = *(_QWORD *)((char *)a2 + v16);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for ClarityUIFavoritesView(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;

  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>)
              + 32);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for NavigationPath();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[5];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  *(_QWORD *)((char *)a1 + v10) = *(_QWORD *)((char *)a2 + v10);
  swift_retain();
  swift_release();
  *((_QWORD *)v11 + 1) = *((_QWORD *)v12 + 1);
  swift_retain();
  swift_release();
  v11[16] = v12[16];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  swift_retain();
  swift_release();
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  swift_retain();
  swift_release();
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *initializeWithTake for ClarityUIFavoritesView(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  __int128 v15;
  uint64_t v16;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>)
              + 32);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for NavigationPath();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[5];
  v12 = a3[6];
  v13 = (char *)a1 + v11;
  v14 = (char *)a2 + v11;
  v15 = *(_OWORD *)v14;
  v13[16] = v14[16];
  *(_OWORD *)v13 = v15;
  *(_QWORD *)((char *)a1 + v12) = *(_QWORD *)((char *)a2 + v12);
  v16 = a3[8];
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  *(_QWORD *)((char *)a1 + v16) = *(_QWORD *)((char *)a2 + v16);
  return a1;
}

_QWORD *assignWithTake for ClarityUIFavoritesView(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;

  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>)
              + 32);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for NavigationPath();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[5];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  *(_QWORD *)((char *)a1 + v10) = *(_QWORD *)((char *)a2 + v10);
  swift_release();
  *((_QWORD *)v11 + 1) = *((_QWORD *)v12 + 1);
  swift_release();
  v11[16] = v12[16];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  swift_release();
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  swift_release();
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ClarityUIFavoritesView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BD3F56F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ClarityUIFavoritesView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BD3F5780(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>);
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
    OUTLINED_FUNCTION_18();
  }
}

void type metadata completion function for ClarityUIFavoritesView()
{
  unint64_t v0;

  type metadata accessor for Binding<NavigationPath>();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_1BD3F5878()
{
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type List<Never, TupleView<(ForEach<[ClarityUIFavorite], String, _ConditionalContent<<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0>?>, TupleView<(<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0)>?, Button<Label<Text, Image>>?)>> and conformance List<A, B>, &demangling cache variable for type metadata for List<Never, TupleView<(ForEach<[ClarityUIFavorite], String, _ConditionalContent<<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0>?>, TupleView<(<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0)>?, Button<Label<Text, Image>>?)>>, MEMORY[0x1E0CDD950]);
}

uint64_t outlined init with copy of ClarityUIFavoritesView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ClarityUIFavoritesView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined init with take of ClarityUIFavoritesView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ClarityUIFavoritesView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void partial apply for closure #1 in closure #1 in ClarityUIFavoritesView.body.getter(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  OUTLINED_FUNCTION_0_136();
  OUTLINED_FUNCTION_49_3();
  closure #1 in closure #1 in ClarityUIFavoritesView.body.getter(a1, v2 + v5, a2);
}

unint64_t lazy protocol witness table accessor for type _ConditionalContent<<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0>? and conformance <A> A?()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = lazy protocol witness table cache variable for type _ConditionalContent<<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0>? and conformance <A> A?;
  if (!lazy protocol witness table cache variable for type _ConditionalContent<<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0>? and conformance <A> A?)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0>?);
    v2 = lazy protocol witness table accessor for type _ConditionalContent<<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0> and conformance <> _ConditionalContent<A, B>();
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CE0798], v1, &v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _ConditionalContent<<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0>? and conformance <A> A?);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type _ConditionalContent<<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0> and conformance <> _ConditionalContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[4];

  result = lazy protocol witness table cache variable for type _ConditionalContent<<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0> and conformance <> _ConditionalContent<A, B>;
  if (!lazy protocol witness table cache variable for type _ConditionalContent<<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0> and conformance <> _ConditionalContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0>);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for NavigationLink<Label<Text, ClarityUIContactAvatar>, Never>);
    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type NavigationLink<Label<Text, ClarityUIContactAvatar>, Never> and conformance NavigationLink<A, B>, &demangling cache variable for type metadata for NavigationLink<Label<Text, ClarityUIContactAvatar>, Never>, MEMORY[0x1E0CD9468]);
    v4[2] = v2;
    v4[3] = v3;
    v4[0] = swift_getOpaqueTypeConformance2();
    v4[1] = v4[0];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDB8A0], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _ConditionalContent<<<opaque return type of View.badge(_:)>>.0, <<opaque return type of View.badge(_:)>>.0> and conformance <> _ConditionalContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ClarityUIFavorite and conformance ClarityUIFavorite()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ClarityUIFavorite and conformance ClarityUIFavorite;
  if (!lazy protocol witness table cache variable for type ClarityUIFavorite and conformance ClarityUIFavorite)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ClarityUIFavorite, &type metadata for ClarityUIFavorite);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ClarityUIFavorite and conformance ClarityUIFavorite);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ClarityUIFavorite and conformance ClarityUIFavorite;
  if (!lazy protocol witness table cache variable for type ClarityUIFavorite and conformance ClarityUIFavorite)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ClarityUIFavorite, &type metadata for ClarityUIFavorite);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ClarityUIFavorite and conformance ClarityUIFavorite);
  }
  return result;
}

uint64_t objectdestroyTm_14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_0_136() - 8) + 80);
  v2 = v0 + ((v1 + 16) & ~v1);
  swift_release();
  swift_release();
  v3 = v2
     + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>)
              + 32);
  v4 = OUTLINED_FUNCTION_9_1();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_10_102();
  OUTLINED_FUNCTION_10_102();
  OUTLINED_FUNCTION_10_102();
  return swift_deallocObject();
}

uint64_t partial apply for closure #5 in closure #1 in ClarityUIFavoritesView.body.getter()
{
  OUTLINED_FUNCTION_0_136();
  OUTLINED_FUNCTION_49_3();
  return closure #5 in closure #1 in ClarityUIFavoritesView.body.getter();
}

uint64_t partial apply for closure #1 in closure #5 in closure #1 in ClarityUIFavoritesView.body.getter()
{
  return closure #1 in closure #5 in closure #1 in ClarityUIFavoritesView.body.getter();
}

uint64_t partial apply for closure #2 in closure #1 in closure #1 in ClarityUIFavoritesView.body.getter()
{
  return closure #1 in closure #1 in closure #1 in ClarityUIFavoritesView.body.getter();
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in ClarityUIFavoritesView.body.getter()
{
  return closure #1 in closure #1 in closure #1 in ClarityUIFavoritesView.body.getter();
}

uint64_t outlined retain of ClarityUIContact(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;

  v2 = *(void **)(a1 + 8);
  v3 = *(id *)a1;
  v4 = v2;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t outlined release of ClarityUIContact(uint64_t a1)
{
  void *v2;
  void *v3;

  v2 = *(void **)a1;
  v3 = *(void **)(a1 + 8);
  swift_bridgeObjectRelease();

  return a1;
}

uint64_t partial apply for closure #1 in closure #2 in closure #1 in closure #1 in ClarityUIFavoritesView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return closure #1 in closure #1 in closure #1 in closure #1 in ClarityUIFavoritesView.body.getter(*(_QWORD *)(v1 + 16), a1);
}

id partial apply for closure #2 in closure #2 in closure #1 in closure #1 in ClarityUIFavoritesView.body.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return closure #2 in closure #2 in closure #1 in closure #1 in ClarityUIFavoritesView.body.getter(*(_QWORD *)(v1 + 16), a1);
}

char *MomentsIndicatorBubble.__allocating_init(model:)()
{
  uint64_t v0;

  OUTLINED_FUNCTION_16_1();
  return MomentsIndicatorBubble.init(model:)(v0);
}

id one-time initialization function for font()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 16.0);
  static MomentsIndicatorBubble.font = (uint64_t)result;
  return result;
}

uint64_t *MomentsIndicatorBubble.font.unsafeMutableAddressor()
{
  if (one-time initialization token for font != -1)
    swift_once();
  return &static MomentsIndicatorBubble.font;
}

id static MomentsIndicatorBubble.font.getter()
{
  if (one-time initialization token for font != -1)
    swift_once();
  return (id)static MomentsIndicatorBubble.font;
}

void one-time initialization function for layoutPadding()
{
  static MomentsIndicatorBubble.layoutPadding = 0x4024000000000000;
}

uint64_t *MomentsIndicatorBubble.layoutPadding.unsafeMutableAddressor()
{
  if (one-time initialization token for layoutPadding != -1)
    swift_once();
  return &static MomentsIndicatorBubble.layoutPadding;
}

double static MomentsIndicatorBubble.layoutPadding.getter()
{
  if (one-time initialization token for layoutPadding != -1)
    swift_once();
  return *(double *)&static MomentsIndicatorBubble.layoutPadding;
}

uint64_t key path setter for MomentsIndicatorBubble.model : MomentsIndicatorBubble(uint64_t a1, _QWORD **a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x80);
  v3 = swift_retain();
  return v2(v3);
}

void MomentsIndicatorBubble.model.getter()
{
  OUTLINED_FUNCTION_2_0();
  swift_retain();
  OUTLINED_FUNCTION_32();
}

void MomentsIndicatorBubble.model.setter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit22MomentsIndicatorBubble_model);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  swift_release();
  OUTLINED_FUNCTION_32();
}

void MomentsIndicatorBubble.model.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path setter for MomentsIndicatorBubble.delegate : MomentsIndicatorBubble(uint64_t a1, _QWORD **a2)
{
  _BYTE v4[40];

  outlined init with copy of MomentsIndicatorBubbleDelegate?(a1, (uint64_t)v4);
  return (*(uint64_t (**)(_BYTE *))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x98))(v4);
}

void MomentsIndicatorBubble.delegate.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15ConversationKit22MomentsIndicatorBubble_delegate;
  OUTLINED_FUNCTION_2_0();
  outlined init with copy of MomentsIndicatorBubbleDelegate?(v3, a1);
  OUTLINED_FUNCTION_32();
}

void MomentsIndicatorBubble.delegate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15ConversationKit22MomentsIndicatorBubble_delegate;
  OUTLINED_FUNCTION_2_0();
  outlined assign with take of MomentsIndicatorBubbleDelegate?(a1, v3);
  swift_endAccess();
  OUTLINED_FUNCTION_32();
}

void MomentsIndicatorBubble.delegate.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void MomentsIndicatorBubble.bottomConstraint.getter()
{
  uint64_t v0;
  id *v1;
  id v2;

  v1 = (id *)(v0 + OBJC_IVAR____TtC15ConversationKit22MomentsIndicatorBubble_bottomConstraint);
  OUTLINED_FUNCTION_2_0();
  v2 = *v1;
  OUTLINED_FUNCTION_32();
}

void MomentsIndicatorBubble.bottomConstraint.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;

  v3 = (void **)(v1 + OBJC_IVAR____TtC15ConversationKit22MomentsIndicatorBubble_bottomConstraint);
  OUTLINED_FUNCTION_2_0();
  v4 = *v3;
  *v3 = a1;

  OUTLINED_FUNCTION_32();
}

void MomentsIndicatorBubble.bottomConstraint.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void MomentsIndicatorBubble.timer.setter(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit22MomentsIndicatorBubble_timer);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit22MomentsIndicatorBubble_timer) = a1;

}

char *MomentsIndicatorBubble.init(model:)(uint64_t a1)
{
  char *v1;
  char *v3;
  uint64_t v4;
  id v5;
  char *v6;
  id v7;
  char *v8;
  id v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  void *v13;
  uint64_t (*v14)(void);
  id v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  id v38;
  id v39;
  id v40;
  Class isa;
  objc_super v43;

  swift_getObjectType();
  v3 = &v1[OBJC_IVAR____TtC15ConversationKit22MomentsIndicatorBubble_delegate];
  *(_OWORD *)v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((_QWORD *)v3 + 4) = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit22MomentsIndicatorBubble_bottomConstraint] = 0;
  v4 = OBJC_IVAR____TtC15ConversationKit22MomentsIndicatorBubble_indicator;
  v5 = objc_allocWithZone(MEMORY[0x1E0DC3990]);
  v6 = v1;
  *(_QWORD *)&v1[v4] = objc_msgSend(v5, sel_init);
  *(_QWORD *)&v6[OBJC_IVAR____TtC15ConversationKit22MomentsIndicatorBubble_timer] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15ConversationKit22MomentsIndicatorBubble_model] = a1;
  swift_retain();

  v43.receiver = v6;
  v43.super_class = (Class)type metadata accessor for MomentsIndicatorBubble();
  v7 = objc_msgSendSuper2(&v43, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v7, sel_setUserInteractionEnabled_, 0);
  v8 = (char *)v7;
  v9 = static MomentsIndicatorBubble.makeBackgroundColor()();
  OUTLINED_FUNCTION_48_1(v8, sel_setBackgroundColor_);

  v11 = OUTLINED_FUNCTION_9(v10, sel_layer);
  objc_msgSend(v11, sel_setCornerRadius_, 10.0);

  v12 = OBJC_IVAR____TtC15ConversationKit22MomentsIndicatorBubble_indicator;
  v13 = *(void **)&v8[OBJC_IVAR____TtC15ConversationKit22MomentsIndicatorBubble_indicator];
  OUTLINED_FUNCTION_48_1(v8, sel_addSubview_);
  v14 = *(uint64_t (**)(void))(*(_QWORD *)a1 + 104);
  v15 = v13;
  v16 = v14();
  outlined bridged method (mbnn) of @objc UILabel.text.setter(v16, v17, v15);

  v18 = *(void **)&v8[v12];
  v19 = (void *)objc_opt_self();
  v20 = v18;
  v21 = objc_msgSend(v19, sel_whiteColor);
  OUTLINED_FUNCTION_48_1(v20, sel_setTextColor_);

  v22 = one-time initialization token for font;
  v23 = *(id *)&v8[v12];
  if (v22 != -1)
    swift_once();
  objc_msgSend(v23, sel_setFont_, static MomentsIndicatorBubble.font);

  v24 = *(void **)&v8[v12];
  v26 = OUTLINED_FUNCTION_5_15(v25, sel_setLineBreakMode_);
  OUTLINED_FUNCTION_5_15((uint64_t)v26, sel_setNumberOfLines_);
  objc_msgSend(v24, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v27 = (void *)objc_opt_self();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_1BD644140;
  v29 = OUTLINED_FUNCTION_9((uint64_t)objc_msgSend(v24, sel_centerXAnchor), sel_centerXAnchor);
  v30 = OUTLINED_FUNCTION_36_3();
  OUTLINED_FUNCTION_1_4();

  *(_QWORD *)(v28 + 32) = v4;
  v31 = OUTLINED_FUNCTION_9((uint64_t)objc_msgSend(*(id *)&v8[v12], sel_centerYAnchor), sel_centerYAnchor);
  v32 = OUTLINED_FUNCTION_36_3();
  OUTLINED_FUNCTION_1_4();

  *(_QWORD *)(v28 + 40) = v4;
  v34 = OUTLINED_FUNCTION_9(v33, sel_heightAnchor);
  v35 = objc_msgSend(*(id *)&v8[v12], sel_heightAnchor);
  if (one-time initialization token for layoutPadding != -1)
    swift_once();
  v36 = OUTLINED_FUNCTION_4_122();
  OUTLINED_FUNCTION_1_4();

  *(_QWORD *)(v28 + 48) = v4;
  v38 = OUTLINED_FUNCTION_9(v37, sel_widthAnchor);
  v39 = objc_msgSend(*(id *)&v8[v12], sel_widthAnchor);
  v40 = OUTLINED_FUNCTION_4_122();
  OUTLINED_FUNCTION_1_4();

  *(_QWORD *)(v28 + 56) = v4;
  specialized Array._endMutation()();
  type metadata accessor for NSLayoutConstraint();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v27, sel_activateConstraints_, isa);

  swift_release();
  return v8;
}

uint64_t outlined init with copy of MomentsIndicatorBubbleDelegate?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MomentsIndicatorBubbleDelegate?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined assign with take of MomentsIndicatorBubbleDelegate?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MomentsIndicatorBubbleDelegate?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for MomentsIndicatorBubble()
{
  return objc_opt_self();
}

id static MomentsIndicatorBubble.makeBackgroundColor()()
{
  _BOOL4 IsReduceTransparencyEnabled;
  double v1;
  double v2;

  IsReduceTransparencyEnabled = UIAccessibilityIsReduceTransparencyEnabled();
  if (IsReduceTransparencyEnabled)
    v1 = 1.0;
  else
    v1 = 0.3;
  if (IsReduceTransparencyEnabled)
    v2 = 0.3;
  else
    v2 = 0.0;
  return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, v2, v2, v2, v1);
}

id MomentsIndicatorBubble.__allocating_init(coder:)()
{
  void *v0;
  id v1;

  v1 = objc_msgSend(OUTLINED_FUNCTION_16_1(), sel_initWithCoder_, v0);

  return v1;
}

void MomentsIndicatorBubble.init(coder:)()
{
  char *v0;
  char *v1;
  uint64_t v2;

  v1 = &v0[OBJC_IVAR____TtC15ConversationKit22MomentsIndicatorBubble_delegate];
  *(_OWORD *)v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((_QWORD *)v1 + 4) = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit22MomentsIndicatorBubble_bottomConstraint] = 0;
  v2 = OBJC_IVAR____TtC15ConversationKit22MomentsIndicatorBubble_indicator;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit22MomentsIndicatorBubble_timer] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Void __swiftcall MomentsIndicatorBubble.start()()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;
  _QWORD v7[6];

  v1 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit22MomentsIndicatorBubble_timer);
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v2, sel_invalidate);
    MomentsIndicatorBubble.timer.setter(0);

  }
  v3 = (void *)objc_opt_self();
  v4 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v7[4] = partial apply for closure #1 in MomentsIndicatorBubble.start();
  v7[5] = v4;
  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 1107296256;
  v7[2] = thunk for @escaping @callee_guaranteed @Sendable (@guaranteed NSTimer) -> ();
  v7[3] = &block_descriptor_82;
  v5 = _Block_copy(v7);
  swift_release();
  v6 = objc_msgSend(v3, sel_scheduledTimerWithTimeInterval_repeats_block_, 0, v5, 4.0);
  _Block_release(v5);
  MomentsIndicatorBubble.timer.setter((uint64_t)v6);
}

void closure #1 in MomentsIndicatorBubble.start()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t aBlock;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x1C3B752C0](v2);
  if (v3)
  {
    v4 = (void *)v3;
    MomentsIndicatorBubble.timer.setter(0);
    v5 = (void *)objc_opt_self();
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    v17 = partial apply for closure #1 in FlashView.flash(completion:);
    v18 = v6;
    v7 = MEMORY[0x1E0C809B0];
    aBlock = MEMORY[0x1E0C809B0];
    v14 = 1107296256;
    v15 = thunk for @escaping @callee_guaranteed () -> ();
    v16 = &block_descriptor_10_1;
    v8 = _Block_copy(&aBlock);
    v9 = v4;
    swift_release();
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = v9;
    v17 = partial apply for closure #2 in closure #1 in MomentsIndicatorBubble.start();
    v18 = v10;
    aBlock = v7;
    v14 = 1107296256;
    v15 = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ();
    v16 = &block_descriptor_16_1;
    v11 = _Block_copy(&aBlock);
    v12 = v9;
    swift_release();
    objc_msgSend(v5, sel_animateWithDuration_animations_completion_, v8, v11, 0.25);
    _Block_release(v11);
    _Block_release(v8);

  }
}

uint64_t closure #2 in closure #1 in MomentsIndicatorBubble.start()(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[3];
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[5];

  (*(void (**)(_QWORD *__return_ptr))((*MEMORY[0x1E0DEEDD8] & *a2) + 0x90))(v9);
  if (!v9[3])
    return outlined destroy of MomentsIndicatorBubbleDelegate?((uint64_t)v9);
  outlined init with copy of IDSLookupManager((uint64_t)v9, (uint64_t)v6);
  outlined destroy of MomentsIndicatorBubbleDelegate?((uint64_t)v9);
  v3 = v7;
  v4 = v8;
  __swift_project_boxed_opaque_existential_1(v6, v7);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v4 + 8))(a2, v3, v4);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
}

Swift::Void __swiftcall MomentsIndicatorBubble.refresh()()
{
  _QWORD *v0;
  uint64_t (*v1)(void);
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78);
  v2 = v1();
  (*(void (**)(uint64_t))(*(_QWORD *)v2 + 160))(v2);
  v3 = swift_release();
  v4 = *(void **)((char *)v0 + OBJC_IVAR____TtC15ConversationKit22MomentsIndicatorBubble_indicator);
  v5 = ((uint64_t (*)(uint64_t))v1)(v3);
  v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 104))(v5);
  v8 = v7;
  swift_release();
  outlined bridged method (mbnn) of @objc UILabel.text.setter(v6, v8, v4);
  objc_msgSend(*(id *)((char *)v0 + OBJC_IVAR____TtC15ConversationKit22MomentsIndicatorBubble_timer), sel_invalidate);
  objc_msgSend(v0, sel_start);
}

uint64_t MomentsIndicatorBubble.description.getter()
{
  char *v0;
  id v1;
  void *v2;
  uint64_t v3;
  objc_super v5;

  v1 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC15ConversationKit22MomentsIndicatorBubble_indicator], sel_text);
  if (!v1)
  {
    v5.receiver = v0;
    v5.super_class = (Class)type metadata accessor for MomentsIndicatorBubble();
    v1 = objc_msgSendSuper2(&v5, sel_description);
  }
  v2 = v1;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

id MomentsIndicatorBubble.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void MomentsIndicatorBubble.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id MomentsIndicatorBubble.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MomentsIndicatorBubble();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BD3F6E24()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void partial apply for closure #1 in MomentsIndicatorBubble.start()(uint64_t a1)
{
  uint64_t v1;

  closure #1 in MomentsIndicatorBubble.start()(a1, v1);
}

void sub_1BD3F6E50(_QWORD **a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x78))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD3F6E90(_QWORD **a1)
{
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x90))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD3F6EC8(_QWORD **a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0xA8))();
  OUTLINED_FUNCTION_0();
}

uint64_t dispatch thunk of MomentsIndicatorBubbleDelegate.didTimeOut(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t method lookup function for MomentsIndicatorBubble()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MomentsIndicatorBubble.model.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of MomentsIndicatorBubble.model.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of MomentsIndicatorBubble.model.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of MomentsIndicatorBubble.delegate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of MomentsIndicatorBubble.delegate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of MomentsIndicatorBubble.delegate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of MomentsIndicatorBubble.bottomConstraint.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of MomentsIndicatorBubble.bottomConstraint.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of MomentsIndicatorBubble.bottomConstraint.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of MomentsIndicatorBubble.__allocating_init(model:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 216))();
}

uint64_t dispatch thunk of MomentsIndicatorBubble.refresh()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t outlined destroy of MomentsIndicatorBubbleDelegate?(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MomentsIndicatorBubbleDelegate?);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BD3F707C()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in closure #1 in MomentsIndicatorBubble.start()(uint64_t a1)
{
  uint64_t v1;

  return closure #2 in closure #1 in MomentsIndicatorBubble.start()(a1, *(_QWORD **)(v1 + 16));
}

uint64_t key path setter for ProtectedAppsObserver.delegate : ProtectedAppsObserver(uint64_t a1, _QWORD **a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x60);
  v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

uint64_t ProtectedAppsObserver.delegate.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit21ProtectedAppsObserver_delegate;
  OUTLINED_FUNCTION_2_0();
  return MEMORY[0x1C3B752C0](v1);
}

uint64_t ProtectedAppsObserver.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + OBJC_IVAR____TtC15ConversationKit21ProtectedAppsObserver_delegate;
  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*ProtectedAppsObserver.delegate.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC15ConversationKit21ProtectedAppsObserver_delegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  OUTLINED_FUNCTION_2_0();
  v6 = MEMORY[0x1C3B752C0](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return InCallControlsBaseCell.delegate.modify;
}

id ProtectedAppsObserver.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id ProtectedAppsObserver.init()()
{
  char *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  objc_super v6;

  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit21ProtectedAppsObserver_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for ProtectedAppsObserver();
  v1 = objc_msgSendSuper2(&v6, sel_init);
  v2 = (void *)objc_opt_self();
  v3 = v1;
  v4 = objc_msgSend(objc_msgSend(v2, sel_subjectMonitorRegistry), sel_addMonitor_, v3);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return v3;
}

uint64_t type metadata accessor for ProtectedAppsObserver()
{
  return objc_opt_self();
}

uint64_t ProtectedAppsObserver.appProtectionSubjectsChanged(_:for:)()
{
  uint64_t *v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;

  result = OUTLINED_FUNCTION_306_0(*v0);
  if (result)
  {
    v3 = v2;
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(ObjectType, v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

void ProtectedAppsObserver.hiddenApps.getter()
{
  id v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v0 = objc_msgSend((id)objc_opt_self(), sel_hiddenApplications);
  type metadata accessor for APApplication();
  v1 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v2)
      goto LABEL_3;
LABEL_11:
    OUTLINED_FUNCTION_13_3();
    return;
  }
  swift_bridgeObjectRetain();
  v2 = _CocoaArrayWrapper.endIndex.getter();
  OUTLINED_FUNCTION_13_3();
  if (!v2)
    goto LABEL_11;
LABEL_3:
  v12 = MEMORY[0x1E0DEE9D8];
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  if ((v2 & 0x8000000000000000) == 0)
  {
    v3 = 0;
    do
    {
      if ((v1 & 0xC000000000000001) != 0)
        v4 = (id)MEMORY[0x1C3B73D18](v3, v1);
      else
        v4 = *(id *)(v1 + 8 * v3 + 32);
      v5 = v4;
      v6 = objc_msgSend(v4, sel_bundleIdentifier);
      v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v9 = v8;

      v10 = *(_QWORD *)(v12 + 16);
      if (v10 >= *(_QWORD *)(v12 + 24) >> 1)
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      ++v3;
      *(_QWORD *)(v12 + 16) = v10 + 1;
      v11 = v12 + 16 * v10;
      *(_QWORD *)(v11 + 32) = v7;
      *(_QWORD *)(v11 + 40) = v9;
    }
    while (v2 != v3);
    goto LABEL_11;
  }
  __break(1u);
}

id ProtectedAppsObserver.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ProtectedAppsObserver();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t protocol witness for ProtectedAppsObserverProtocol.delegate.getter in conformance ProtectedAppsObserver()
{
  _QWORD **v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **v0) + 0x58))();
}

uint64_t protocol witness for ProtectedAppsObserverProtocol.delegate.setter in conformance ProtectedAppsObserver()
{
  _QWORD **v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **v0) + 0x60))();
}

void (*protocol witness for ProtectedAppsObserverProtocol.delegate.modify in conformance ProtectedAppsObserver(_QWORD *a1))(_QWORD *a1)
{
  _QWORD **v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **v1) + 0x68))();
  return protocol witness for ControlsView.cnkContentAlpha.modify in conformance SystemApertureOngoingTelephonyControlsView;
}

uint64_t protocol witness for ProtectedAppsObserverProtocol.hiddenApps.getter in conformance ProtectedAppsObserver()
{
  _QWORD **v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **v0) + 0x78))();
}

uint64_t sub_1BD3F76FC@<X0>(uint64_t **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = OUTLINED_FUNCTION_306_0(**a1);
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t dispatch thunk of ProtectedAppsObserverProtocol.delegate.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of ProtectedAppsObserverProtocol.delegate.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of ProtectedAppsObserverProtocol.hiddenApps.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t method lookup function for ProtectedAppsObserver()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ProtectedAppsObserver.delegate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x58))();
}

uint64_t dispatch thunk of ProtectedAppsObserver.delegate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of ProtectedAppsObserver.delegate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of ProtectedAppsObserver.appProtectionSubjectsChanged(_:for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of ProtectedAppsObserver.hiddenApps.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t specialized static PlatformAlert.confirmAddToMessagesGroup(fromViewController:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v5;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  NSBundle v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSBundle v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  char v22;

  v8 = OUTLINED_FUNCTION_0_13();
  *(_QWORD *)(v8 + 16) = a3;
  *(_QWORD *)(v8 + 24) = a4;
  type metadata accessor for PlatformAlert();
  objc_opt_self();
  OUTLINED_FUNCTION_11_8();
  v9 = OUTLINED_FUNCTION_3_114();
  OUTLINED_FUNCTION_0_3(0xD000000000000021, 0x80000001BD68B020);
  OUTLINED_FUNCTION_45_4();
  v10 = OUTLINED_FUNCTION_3_114();
  OUTLINED_FUNCTION_0_3(0xD000000000000023, 0x80000001BD68B050);
  OUTLINED_FUNCTION_24_58();
  v11 = OUTLINED_FUNCTION_22_74(v4, v5);
  OUTLINED_FUNCTION_30_4();
  OUTLINED_FUNCTION_25();
  if (v11)
  {
    partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
    v12.super.isa = (Class)OUTLINED_FUNCTION_3_114();
    OUTLINED_FUNCTION_49_2(19279, 0xE200000000000000, 0x61737265766E6F43, 0xEF74694B6E6F6974, v12);
    OUTLINED_FUNCTION_38_4();
    v22 = 0;
    v13 = OUTLINED_FUNCTION_0_13();
    *(_QWORD *)(v13 + 16) = partial apply for closure #2 in PeoplePickerViewController.addPeople();
    *(_QWORD *)(v13 + 24) = v8;
    v14 = OUTLINED_FUNCTION_11_1();
    OUTLINED_FUNCTION_13_99(v14, v15, (uint64_t)&v22, (uint64_t)closure #1 in static PlatformAlert.confirmAddToMessagesGroup(fromViewController:_:)partial apply);
    OUTLINED_FUNCTION_17_22();
    OUTLINED_FUNCTION_21_0();
    v16.super.isa = (Class)OUTLINED_FUNCTION_3_114();
    OUTLINED_FUNCTION_49_2(0x4C45434E4143, 0xE600000000000000, 0x61737265766E6F43, 0xEF74694B6E6F6974, v16);
    OUTLINED_FUNCTION_11_12();
    v21 = 2;
    v17 = OUTLINED_FUNCTION_0_13();
    *(_QWORD *)(v17 + 16) = partial apply for closure #2 in PeoplePickerViewController.addPeople();
    *(_QWORD *)(v17 + 24) = v8;
    v18 = OUTLINED_FUNCTION_11_1();
    OUTLINED_FUNCTION_14_93(v18, v19, (uint64_t)&v21, (uint64_t)closure #2 in static PlatformAlert.confirmAddToMessagesGroup(fromViewController:_:)partial apply);
    OUTLINED_FUNCTION_22();
    OUTLINED_FUNCTION_30_4();
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.debug.getter();
    os_log(_:dso:log:type:_:)();
    OUTLINED_FUNCTION_32_43();
    OUTLINED_FUNCTION_19();
    OUTLINED_FUNCTION_11_0();
    swift_release();
  }
  else
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.error.getter();
    OUTLINED_FUNCTION_35_39();
    OUTLINED_FUNCTION_19();
  }
  return swift_release();
}

void static PlatformAlert.confirmAddToMessagesGroup(fromViewController:_:)(uint64_t a1, void (*a2)(_QWORD), uint64_t a3)
{
  void *v3;
  void *v4;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  NSBundle v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSBundle v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;

  type metadata accessor for PlatformAlert();
  v7 = (void *)objc_opt_self();
  v8 = OUTLINED_FUNCTION_30_58(v7);
  OUTLINED_FUNCTION_0_3(0xD000000000000021, 0x80000001BD68B020);
  OUTLINED_FUNCTION_45_4();
  v9 = OUTLINED_FUNCTION_3_114();
  OUTLINED_FUNCTION_0_3(0xD000000000000023, 0x80000001BD68B050);
  OUTLINED_FUNCTION_24_58();
  v10 = OUTLINED_FUNCTION_22_74(v3, v4);
  OUTLINED_FUNCTION_30_4();
  OUTLINED_FUNCTION_25();
  if (v10)
  {
    partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
    v11.super.isa = (Class)OUTLINED_FUNCTION_3_114();
    OUTLINED_FUNCTION_49_2(19279, 0xE200000000000000, 0x61737265766E6F43, 0xEF74694B6E6F6974, v11);
    OUTLINED_FUNCTION_38_4();
    v20 = 0;
    v12 = OUTLINED_FUNCTION_0_13();
    *(_QWORD *)(v12 + 16) = a2;
    *(_QWORD *)(v12 + 24) = a3;
    v13 = OUTLINED_FUNCTION_11_8();
    OUTLINED_FUNCTION_13_99(v13, v14, (uint64_t)&v20, (uint64_t)partial apply for closure #1 in static PlatformAlert.confirmAddToMessagesGroup(fromViewController:_:));
    OUTLINED_FUNCTION_17_22();
    OUTLINED_FUNCTION_21_0();
    v15.super.isa = (Class)OUTLINED_FUNCTION_3_114();
    OUTLINED_FUNCTION_49_2(0x4C45434E4143, 0xE600000000000000, 0x61737265766E6F43, 0xEF74694B6E6F6974, v15);
    OUTLINED_FUNCTION_11_12();
    v19 = 2;
    v16 = OUTLINED_FUNCTION_0_13();
    *(_QWORD *)(v16 + 16) = a2;
    *(_QWORD *)(v16 + 24) = a3;
    v17 = OUTLINED_FUNCTION_11_8();
    OUTLINED_FUNCTION_14_93(v17, v18, (uint64_t)&v19, (uint64_t)partial apply for closure #2 in static PlatformAlert.confirmAddToMessagesGroup(fromViewController:_:));
    OUTLINED_FUNCTION_22();
    OUTLINED_FUNCTION_30_4();
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.debug.getter();
    OUTLINED_FUNCTION_55_0();
    OUTLINED_FUNCTION_32_43();
    swift_release_n();
  }
  else
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.error.getter();
    OUTLINED_FUNCTION_35_39();
    a2(0);
  }
  OUTLINED_FUNCTION_26_11();
}

uint64_t type metadata accessor for PlatformAlert()
{
  return objc_opt_self();
}

uint64_t static PlatformAlert.confirmStartCollaboration(in:from:initiator:itemTitle:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(_QWORD), uint64_t a7)
{
  _QWORD *v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  objc_class *v17;
  NSBundle v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, char *, void (*)(), uint64_t);
  NSBundle v24;
  uint64_t v25;
  char v27;
  char v28;

  type metadata accessor for ConversationControlsManager(0);
  v11 = (void *)static ConversationControlsManager.collaborationHUDStrings(initiator:itemTitle:)();
  v13 = v12;
  if (v10[2])
  {
    v15 = v10[4];
    v14 = v10[5];
    swift_bridgeObjectRetain();
  }
  else
  {
    v15 = 0;
    v14 = 0xE000000000000000;
  }
  OUTLINED_FUNCTION_25();
  type metadata accessor for PlatformAlert();
  static PlatformAlert.create(with:message:)(v11, v13, v15, v14);
  OUTLINED_FUNCTION_21_67();
  OUTLINED_FUNCTION_30_4();
  if (v11)
  {
    v16 = (void *)objc_opt_self();
    v17 = (objc_class *)objc_msgSend(v16, sel_conversationKit);
    v18.super.isa = v17;
    v19 = OUTLINED_FUNCTION_49_2(0x524F42414C4C4F43, 0xEB00000000455441, 0x61737265766E6F43, 0xEF74694B6E6F6974, v18);
    v21 = v20;

    v28 = 0;
    v22 = OUTLINED_FUNCTION_0_13();
    *(_QWORD *)(v22 + 16) = a6;
    *(_QWORD *)(v22 + 24) = a7;
    v23 = *(void (**)(uint64_t, uint64_t, char *, void (*)(), uint64_t))(*(_QWORD *)v11 + 328);
    OUTLINED_FUNCTION_11_1();
    v23(v19, v21, &v28, partial apply for closure #1 in static PlatformAlert.confirmStartCollaboration(in:from:initiator:itemTitle:_:), v22);
    swift_release();
    OUTLINED_FUNCTION_25();
    v24.super.isa = (Class)objc_msgSend(v16, sel_conversationKit, 0xE000000000000000);
    OUTLINED_FUNCTION_49_2(0x574F4E5F544F4ELL, 0xE700000000000000, 0x61737265766E6F43, 0xEF74694B6E6F6974, v24);
    OUTLINED_FUNCTION_38_4();
    v27 = 2;
    v25 = OUTLINED_FUNCTION_0_13();
    *(_QWORD *)(v25 + 16) = a6;
    *(_QWORD *)(v25 + 24) = a7;
    OUTLINED_FUNCTION_11_1();
    v23(v22, v19, &v27, partial apply for closure #2 in static PlatformAlert.confirmStartCollaboration(in:from:initiator:itemTitle:_:), v25);
    OUTLINED_FUNCTION_17_22();
    OUTLINED_FUNCTION_21_0();
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.debug.getter();
    os_log(_:dso:log:type:_:)();
    (*(void (**)(uint64_t))(*(_QWORD *)v11 + 336))(a1);
    return swift_release();
  }
  else
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.error.getter();
    OUTLINED_FUNCTION_55_0();
    return a6(0);
  }
}

_QWORD *static PlatformAlert.confirmLeavePTTChannel(_:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  objc_class *v15;
  NSBundle v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  _QWORD *v21;
  _QWORD *result;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  Class isa;
  NSBundle v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSBundle v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[2];

  v39 = a3;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Locale?);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Locale();
  __swift_storeEnumTagSinglePayload((uint64_t)v9, 1, 1, v10);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v11 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v11 + 16) = xmmword_1BD6441D0;
  *(_QWORD *)(v11 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v11 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v11 + 32) = a1;
  *(_QWORD *)(v11 + 40) = a2;
  v12 = one-time initialization token for conversationKit;
  swift_bridgeObjectRetain();
  if (v12 != -1)
    swift_once();
  v13 = unk_1EF4FCB30;
  v14 = qword_1EF4FCB38;
  v15 = (objc_class *)(id)static LocalizationSource.conversationKit;
  swift_bridgeObjectRetain();
  v16.super.isa = v15;
  OUTLINED_FUNCTION_49_2(0xD000000000000020, 0x80000001BD68B160, v13, v14, v16);
  v17 = (void *)String.init(format:locale:arguments:)();
  v19 = v18;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_21_0();

  swift_bridgeObjectRelease();
  outlined destroy of Locale?((uint64_t)v9);
  v20 = (void *)objc_opt_self();
  v21 = OUTLINED_FUNCTION_30_58(v20);
  OUTLINED_FUNCTION_0_3(0xD000000000000022, 0x80000001BD68B190);
  OUTLINED_FUNCTION_24_58();
  type metadata accessor for PlatformAlert();
  OUTLINED_FUNCTION_22_74(v17, v19);
  OUTLINED_FUNCTION_21_67();
  OUTLINED_FUNCTION_25();
  if (!v21)
    return v21;
  result = (_QWORD *)*MEMORY[0x1E0DABB70];
  if (*MEMORY[0x1E0DABB70])
  {
    v23 = (void *)v21[3];
    v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v26 = v25;
    v27 = v23;
    isa = UInt32._bridgeToObjectiveC()().super.super.isa;
    v40[0] = v24;
    v40[1] = v26;
    swift_bridgeObjectRetain();
    objc_msgSend(v27, sel___swift_setObject_forKeyedSubscript_, isa, _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)());
    OUTLINED_FUNCTION_30_4();

    swift_unknownObjectRelease();
    v29.super.isa = (Class)OUTLINED_FUNCTION_3_114();
    OUTLINED_FUNCTION_49_2(0x657661654CLL, 0xE500000000000000, 0x61737265766E6F43, 0xEF74694B6E6F6974, v29);
    OUTLINED_FUNCTION_38_4();
    LOBYTE(v40[0]) = 0;
    v30 = OUTLINED_FUNCTION_0_13();
    v31 = v39;
    *(_QWORD *)(v30 + 16) = v39;
    *(_QWORD *)(v30 + 24) = a4;
    v32 = OUTLINED_FUNCTION_11_8();
    OUTLINED_FUNCTION_13_99(v32, v33, (uint64_t)v40, (uint64_t)partial apply for closure #1 in static PlatformAlert.confirmLeavePTTChannel(_:handler:));
    OUTLINED_FUNCTION_17_22();
    OUTLINED_FUNCTION_21_0();
    v34.super.isa = (Class)OUTLINED_FUNCTION_3_114();
    OUTLINED_FUNCTION_49_2(0x4C45434E4143, 0xE600000000000000, 0x61737265766E6F43, 0xEF74694B6E6F6974, v34);
    OUTLINED_FUNCTION_11_12();
    LOBYTE(v40[0]) = 2;
    v35 = OUTLINED_FUNCTION_0_13();
    *(_QWORD *)(v35 + 16) = v31;
    *(_QWORD *)(v35 + 24) = a4;
    v36 = OUTLINED_FUNCTION_11_8();
    OUTLINED_FUNCTION_14_93(v36, v37, (uint64_t)v40, (uint64_t)partial apply for closure #2 in static PlatformAlert.confirmLeavePTTChannel(_:handler:));
    OUTLINED_FUNCTION_22();
    OUTLINED_FUNCTION_30_4();
    return v21;
  }
  __break(1u);
  return result;
}

BOOL static PlatformAlertActionStyle.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void PlatformAlertActionStyle.hash(into:)()
{
  unsigned __int8 *v0;

  Hasher._combine(_:)(*v0);
  OUTLINED_FUNCTION_0();
}

void PlatformAlertActionStyle.hashValue.getter()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  char v9;

  v0 = Hasher.init(_seed:)();
  OUTLINED_FUNCTION_22_7(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);
  Hasher._finalize()();
  OUTLINED_FUNCTION_2();
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance PlatformAlertActionStyle()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  char v9;

  v0 = Hasher.init(_seed:)();
  OUTLINED_FUNCTION_22_7(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);
  Hasher._finalize()();
  OUTLINED_FUNCTION_2();
}

void key path setter for PlatformAlert.currentPresentedUserNotification : PlatformAlert(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  PlatformAlert.currentPresentedUserNotification.setter((uint64_t)v1);
}

void *PlatformAlert.currentPresentedUserNotification.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  OUTLINED_FUNCTION_2_0();
  v1 = *(void **)(v0 + 16);
  v2 = v1;
  return v1;
}

void PlatformAlert.currentPresentedUserNotification.setter(uint64_t a1)
{
  uint64_t v1;
  void *v3;

  OUTLINED_FUNCTION_2_0();
  v3 = *(void **)(v1 + 16);
  *(_QWORD *)(v1 + 16) = a1;

  OUTLINED_FUNCTION_32();
}

void key path setter for PlatformAlert.buttonHandlers : PlatformAlert()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  PlatformAlert.buttonHandlers.setter(v0);
}

uint64_t PlatformAlert.buttonHandlers.getter()
{
  OUTLINED_FUNCTION_2_0();
  return swift_bridgeObjectRetain();
}

void PlatformAlert.buttonHandlers.setter(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v1 + 32) = a1;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_32();
}

uint64_t PlatformAlert.title.didset()
{
  _QWORD *v0;
  uint64_t result;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  result = *MEMORY[0x1E0C9B800];
  if (*MEMORY[0x1E0C9B800])
  {
    v2 = (void *)v0[3];
    v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v10 = MEMORY[0x1E0DEA968];
    v8 = v3;
    v9 = v4;
    v5 = v0[6];
    if (v5)
    {
      v6 = v0[5];
      swift_bridgeObjectRetain();
      v7 = MEMORY[0x1C3B72E00](v6, v5);
      swift_bridgeObjectRelease();
    }
    else
    {
      v7 = 0;
    }
    __swift_project_boxed_opaque_existential_1(&v8, MEMORY[0x1E0DEA968]);
    objc_msgSend(v2, sel___swift_setObject_forKeyedSubscript_, v7, _bridgeAnythingToObjectiveC<A>(_:)(), v8, v9);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v8);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t PlatformAlert.title.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  OUTLINED_FUNCTION_2_4();
  return PlatformAlert.title.didset();
}

uint64_t PlatformAlert.message.didset()
{
  _QWORD *v0;
  uint64_t result;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  result = *MEMORY[0x1E0C9B810];
  if (*MEMORY[0x1E0C9B810])
  {
    v2 = (void *)v0[3];
    v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v10 = MEMORY[0x1E0DEA968];
    v8 = v3;
    v9 = v4;
    v5 = v0[8];
    if (v5)
    {
      v6 = v0[7];
      swift_bridgeObjectRetain();
      v7 = MEMORY[0x1C3B72E00](v6, v5);
      swift_bridgeObjectRelease();
    }
    else
    {
      v7 = 0;
    }
    __swift_project_boxed_opaque_existential_1(&v8, MEMORY[0x1E0DEA968]);
    objc_msgSend(v2, sel___swift_setObject_forKeyedSubscript_, v7, _bridgeAnythingToObjectiveC<A>(_:)(), v8, v9);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v8);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t PlatformAlert.message.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 56) = a1;
  *(_QWORD *)(v2 + 64) = a2;
  OUTLINED_FUNCTION_2_4();
  return PlatformAlert.message.didset();
}

uint64_t PlatformAlert.defaultButtonTitle.didset()
{
  _QWORD *v0;
  uint64_t result;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  result = *MEMORY[0x1E0C9B838];
  if (*MEMORY[0x1E0C9B838])
  {
    v2 = (void *)v0[3];
    v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v10 = MEMORY[0x1E0DEA968];
    v8 = v3;
    v9 = v4;
    v5 = v0[10];
    if (v5)
    {
      v6 = v0[9];
      swift_bridgeObjectRetain();
      v7 = MEMORY[0x1C3B72E00](v6, v5);
      swift_bridgeObjectRelease();
    }
    else
    {
      v7 = 0;
    }
    __swift_project_boxed_opaque_existential_1(&v8, MEMORY[0x1E0DEA968]);
    objc_msgSend(v2, sel___swift_setObject_forKeyedSubscript_, v7, _bridgeAnythingToObjectiveC<A>(_:)(), v8, v9);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v8);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t PlatformAlert.defaultButtonTitle.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 72) = a1;
  *(_QWORD *)(v2 + 80) = a2;
  OUTLINED_FUNCTION_2_4();
  return PlatformAlert.defaultButtonTitle.didset();
}

uint64_t PlatformAlert.alternateButtonTitle.didset()
{
  _QWORD *v0;
  uint64_t result;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  result = *MEMORY[0x1E0C9B830];
  if (*MEMORY[0x1E0C9B830])
  {
    v2 = (void *)v0[3];
    v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v10 = MEMORY[0x1E0DEA968];
    v8 = v3;
    v9 = v4;
    v5 = v0[12];
    if (v5)
    {
      v6 = v0[11];
      swift_bridgeObjectRetain();
      v7 = MEMORY[0x1C3B72E00](v6, v5);
      swift_bridgeObjectRelease();
    }
    else
    {
      v7 = 0;
    }
    __swift_project_boxed_opaque_existential_1(&v8, MEMORY[0x1E0DEA968]);
    objc_msgSend(v2, sel___swift_setObject_forKeyedSubscript_, v7, _bridgeAnythingToObjectiveC<A>(_:)(), v8, v9);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v8);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t PlatformAlert.alternateButtonTitle.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 88) = a1;
  *(_QWORD *)(v2 + 96) = a2;
  OUTLINED_FUNCTION_2_4();
  return PlatformAlert.alternateButtonTitle.didset();
}

uint64_t PlatformAlert.otherButtonTitle.didset()
{
  _QWORD *v0;
  uint64_t result;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  result = *MEMORY[0x1E0C9B868];
  if (*MEMORY[0x1E0C9B868])
  {
    v2 = (void *)v0[3];
    v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v10 = MEMORY[0x1E0DEA968];
    v8 = v3;
    v9 = v4;
    v5 = v0[14];
    if (v5)
    {
      v6 = v0[13];
      swift_bridgeObjectRetain();
      v7 = MEMORY[0x1C3B72E00](v6, v5);
      swift_bridgeObjectRelease();
    }
    else
    {
      v7 = 0;
    }
    __swift_project_boxed_opaque_existential_1(&v8, MEMORY[0x1E0DEA968]);
    objc_msgSend(v2, sel___swift_setObject_forKeyedSubscript_, v7, _bridgeAnythingToObjectiveC<A>(_:)(), v8, v9);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v8);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t PlatformAlert.otherButtonTitle.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 104) = a1;
  *(_QWORD *)(v2 + 112) = a2;
  OUTLINED_FUNCTION_2_4();
  return PlatformAlert.otherButtonTitle.didset();
}

uint64_t static PlatformAlert.create(with:message:)(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t result;

  type metadata accessor for PlatformAlert();
  v8 = OUTLINED_FUNCTION_15();
  PlatformAlert.init()();
  swift_bridgeObjectRetain();
  PlatformAlert.title.setter((uint64_t)a1, (uint64_t)a2);
  OUTLINED_FUNCTION_124();
  PlatformAlert.message.setter(a3, a4);
  result = *MEMORY[0x1E0C9B820];
  if (!*MEMORY[0x1E0C9B820])
  {
    __break(1u);
    goto LABEL_8;
  }
  OUTLINED_FUNCTION_27_56();
  OUTLINED_FUNCTION_7_109();
  OUTLINED_FUNCTION_8_96();
  OUTLINED_FUNCTION_6_94();
  OUTLINED_FUNCTION_25_57();
  OUTLINED_FUNCTION_4_123();
  OUTLINED_FUNCTION_2_1();

  OUTLINED_FUNCTION_19_0();
  result = *MEMORY[0x1E0DABBC8];
  if (!*MEMORY[0x1E0DABBC8])
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  OUTLINED_FUNCTION_27_56();
  OUTLINED_FUNCTION_7_109();
  OUTLINED_FUNCTION_8_96();
  OUTLINED_FUNCTION_6_94();
  OUTLINED_FUNCTION_25_57();
  OUTLINED_FUNCTION_4_123();
  OUTLINED_FUNCTION_2_1();

  OUTLINED_FUNCTION_19_0();
  result = *MEMORY[0x1E0DABBA8];
  if (!*MEMORY[0x1E0DABBA8])
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  OUTLINED_FUNCTION_27_56();
  OUTLINED_FUNCTION_7_109();
  OUTLINED_FUNCTION_8_96();
  OUTLINED_FUNCTION_6_94();
  OUTLINED_FUNCTION_25_57();
  OUTLINED_FUNCTION_4_123();
  OUTLINED_FUNCTION_2_1();

  OUTLINED_FUNCTION_19_0();
  result = *MEMORY[0x1E0DABB10];
  if (!*MEMORY[0x1E0DABB10])
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  OUTLINED_FUNCTION_27_56();
  OUTLINED_FUNCTION_7_109();
  OUTLINED_FUNCTION_8_96();
  OUTLINED_FUNCTION_6_94();
  OUTLINED_FUNCTION_25_57();
  OUTLINED_FUNCTION_4_123();
  OUTLINED_FUNCTION_2_1();

  OUTLINED_FUNCTION_19_0();
  result = *MEMORY[0x1E0DABB98];
  if (*MEMORY[0x1E0DABB98])
  {
    OUTLINED_FUNCTION_27_56();
    OUTLINED_FUNCTION_7_109();
    OUTLINED_FUNCTION_8_96();
    OUTLINED_FUNCTION_6_94();
    OUTLINED_FUNCTION_25_57();
    OUTLINED_FUNCTION_4_123();
    OUTLINED_FUNCTION_2_1();

    OUTLINED_FUNCTION_19_0();
    return v8;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t PlatformAlert.__allocating_init()()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_15();
  PlatformAlert.init()();
  return v0;
}

void *static PlatformAlert.createUIAlertController(with:message:alertActions:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  id v10;
  void *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  id v19;

  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIAlertController);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10 = @nonobjc UIAlertController.__allocating_init(title:message:preferredStyle:)(a1, a2, a3, a4, 1);
  v11 = v10;
  if (a5 >> 62)
    goto LABEL_11;
  v12 = *(_QWORD *)((a5 & 0xFFFFFFFFFFFFF8) + 0x10);
  v13 = v10;
  OUTLINED_FUNCTION_124();
  for (; v12; v12 = _CocoaArrayWrapper.endIndex.getter())
  {
    v14 = 4;
    while (1)
    {
      v15 = (a5 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C3B73D18](v14 - 4, a5) : *(id *)(a5 + 8 * v14);
      v16 = v15;
      v17 = v14 - 3;
      if (__OFADD__(v14 - 4, 1))
        break;
      objc_msgSend(v11, sel_addAction_, v15);

      ++v14;
      if (v17 == v12)
        goto LABEL_9;
    }
    __break(1u);
LABEL_11:
    v19 = v11;
    OUTLINED_FUNCTION_124();
  }
LABEL_9:

  swift_bridgeObjectRelease();
  return v11;
}

void PlatformAlert.addAction(title:style:handler:)(uint64_t a1, uint64_t a2, unsigned __int8 *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v7 = *a3;
  v8 = OUTLINED_FUNCTION_0_13();
  *(_QWORD *)(v8 + 16) = a4;
  *(_QWORD *)(v8 + 24) = a5;
  OUTLINED_FUNCTION_2_0();
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  specialized Dictionary._Variant.setValue(_:forKey:)(partial apply for thunk for @callee_guaranteed () -> (), v8, v7);
  swift_endAccess();
  if ((_DWORD)v7)
  {
    swift_bridgeObjectRetain();
    v9 = OUTLINED_FUNCTION_28_59();
    if ((_DWORD)v7 == 1)
      PlatformAlert.alternateButtonTitle.setter(v9, v10);
    else
      PlatformAlert.otherButtonTitle.setter(v9, v10);
  }
  else
  {
    swift_bridgeObjectRetain();
    v11 = OUTLINED_FUNCTION_28_59();
    PlatformAlert.defaultButtonTitle.setter(v11, v12);
  }
  OUTLINED_FUNCTION_26_11();
}

Swift::Void __swiftcall PlatformAlert.show(in:)(UIWindow_optional *in)
{
  CFDictionaryRef *v1;
  const __CFAllocator *v2;
  CFUserNotificationRef v3;
  uint64_t (*v4)(void);
  void *v5;
  __CFUserNotification *v6;
  __CFRunLoopSource *RunLoopSource;
  uint64_t v8;
  __CFRunLoop *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  SInt32 error;
  uint64_t v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  error = 0;
  v2 = (const __CFAllocator *)*MEMORY[0x1E0C9AE00];
  v3 = CFUserNotificationCreate((CFAllocatorRef)*MEMORY[0x1E0C9AE00], 0.0, 0, &error, v1[3]);
  PlatformAlert.currentPresentedUserNotification.setter((uint64_t)v3);
  v4 = (uint64_t (*)(void))*((_QWORD *)*v1 + 18);
  v5 = (void *)v4();

  if (!v5)
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v10 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v10 + 16) = xmmword_1BD6441D0;
    LODWORD(v20) = error;
    v11 = String.init<A>(reflecting:)();
    v13 = v12;
    *(_QWORD *)(v10 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v10 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v10 + 32) = v11;
    *(_QWORD *)(v10 + 40) = v13;
    os_log(_:dso:log:type:_:)();
    goto LABEL_15;
  }
  v6 = (__CFUserNotification *)v4();
  RunLoopSource = CFUserNotificationCreateRunLoopSource(v2, v6, (CFUserNotificationCallBack)@objc userNotificationHandler(userNotification:responseFlags:), 0);

  if (!RunLoopSource)
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v14 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v14 + 16) = xmmword_1BD6441D0;
    v15 = v4();
    if (v15)
    {
      v20 = v15;
      type metadata accessor for CFUserNotificationRef(0);
      v16 = String.init<A>(reflecting:)();
      v18 = v17;
    }
    else
    {
      v18 = 0xE300000000000000;
      v16 = 7104878;
    }
    *(_QWORD *)(v14 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v14 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v14 + 32) = v16;
    *(_QWORD *)(v14 + 40) = v18;
    os_log(_:dso:log:type:_:)();
LABEL_15:
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  if (one-time initialization token for pendingAlerts != -1)
    swift_once();
  OUTLINED_FUNCTION_2_0();
  v8 = OUTLINED_FUNCTION_11_8();
  MEMORY[0x1C3B7301C](v8);
  specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(*(_QWORD *)(((unint64_t)pendingAlerts._rawValue & 0xFFFFFFFFFFFFF8)
                                                                              + 0x10));
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
  v9 = CFRunLoopGetMain();
  CFRunLoopAddSource(v9, RunLoopSource, (CFRunLoopMode)*MEMORY[0x1E0C9B270]);

LABEL_16:
  OUTLINED_FUNCTION_26_11();
}

void @objc userNotificationHandler(userNotification:responseFlags:)(void *a1, Swift::UInt a2)
{
  id v4;

  v4 = a1;
  userNotificationHandler(userNotification:responseFlags:)((CFUserNotificationRef_optional)a1, a2);

}

Swift::Void __swiftcall userNotificationHandler(userNotification:responseFlags:)(CFUserNotificationRef_optional userNotification, Swift::UInt responseFlags)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  __CFUserNotification *v11;
  char v12;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t);
  void (*v17)(uint64_t);
  uint64_t v18;

  if (one-time initialization token for pendingAlerts != -1)
    goto LABEL_34;
  while (1)
  {
    OUTLINED_FUNCTION_2_0();
    if ((unint64_t)pendingAlerts._rawValue >> 62)
    {
      OUTLINED_FUNCTION_124();
      v4 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      v4 = *(_QWORD *)(((unint64_t)pendingAlerts._rawValue & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v5 = v4 - 1;
    if (__OFSUB__(v4, 1))
      break;
    if (v5 < 0)
      goto LABEL_37;
    v6 = 0;
    while (1)
    {
      OUTLINED_FUNCTION_2_0();
      if (((unint64_t)pendingAlerts._rawValue & 0xC000000000000001) == 0)
        break;
      v7 = MEMORY[0x1C3B73D18](v6);
LABEL_10:
      v8 = swift_endAccess();
      v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v7 + 144))(v8);
      if (v9)
      {
        v10 = (void *)v9;
        if (!userNotification.value)
        {
          OUTLINED_FUNCTION_11_0();

          goto LABEL_17;
        }
        type metadata accessor for CFUserNotificationRef(0);
        lazy protocol witness table accessor for type CFUserNotificationRef and conformance CFUserNotificationRef();
        v11 = userNotification.value;
        v12 = static _CFObject.== infix(_:_:)();

        if ((v12 & 1) != 0)
          goto LABEL_22;
      }
      else if (!userNotification.value)
      {
LABEL_22:
        if (responseFlags != 2)
        {
          if (responseFlags == 1)
          {
            v14 = OUTLINED_FUNCTION_11_91();
            v15 = 1;
            goto LABEL_28;
          }
          if (!responseFlags)
          {
            v14 = OUTLINED_FUNCTION_11_91();
            v15 = 0;
LABEL_28:
            specialized Dictionary.subscript.getter(v15, v14);
            v17 = v16;
            v18 = swift_bridgeObjectRelease();
            if (v17)
            {
              v17(v18);
              outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v17);
            }
          }
          OUTLINED_FUNCTION_2_0();
          specialized Array.remove(at:)(v6);
          swift_endAccess();
          OUTLINED_FUNCTION_19();
          OUTLINED_FUNCTION_11_0();
          return;
        }
        v14 = OUTLINED_FUNCTION_11_91();
        v15 = 2;
        goto LABEL_28;
      }
      OUTLINED_FUNCTION_11_0();
LABEL_17:
      if (v5 == v6)
        return;
      if (__OFADD__(v6++, 1))
        goto LABEL_33;
    }
    if (v6 < *(_QWORD *)(((unint64_t)pendingAlerts._rawValue & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v7 = *((_QWORD *)pendingAlerts._rawValue + v6 + 4);
      OUTLINED_FUNCTION_11_1();
      goto LABEL_10;
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    swift_once();
  }
  __break(1u);
LABEL_37:
  __break(1u);
}

Swift::OpaquePointer *pendingAlerts.unsafeMutableAddressor()
{
  if (one-time initialization token for pendingAlerts != -1)
    swift_once();
  return &pendingAlerts;
}

uint64_t PlatformAlert.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t PlatformAlert.__deallocating_deinit()
{
  PlatformAlert.deinit();
  return swift_deallocClassInstance();
}

uint64_t PlatformAlert.init()()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = 0;
  _sSo8NSObjectCMaTm_0(0, &lazy cache variable for type metadata for NSMutableDictionary);
  *(_QWORD *)(v0 + 24) = NSDictionary.init(dictionaryLiteral:)();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ());
  lazy protocol witness table accessor for type PlatformAlertActionStyle and conformance PlatformAlertActionStyle();
  *(_QWORD *)(v0 + 32) = Dictionary.init(dictionaryLiteral:)();
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  *(_OWORD *)(v0 + 72) = 0u;
  *(_OWORD *)(v0 + 88) = 0u;
  *(_OWORD *)(v0 + 104) = 0u;
  return v0;
}

void one-time initialization function for pendingAlerts()
{
  pendingAlerts._rawValue = (void *)MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1BD3F96B0()
{
  swift_release();
  return swift_deallocObject();
}

void partial apply for closure #1 in static PlatformAlert.confirmAddToMessagesGroup(fromViewController:_:)()
{
  uint64_t v0;

  closure #1 in static PlatformAlert.confirmAddToMessagesGroup(fromViewController:_:)(*(void (**)(_QWORD))(v0 + 16), *(_QWORD *)(v0 + 24), (void (*)(void))MEMORY[0x1E0DF2278], (uint64_t)"confirmAddToMessagesGroup: OK", 29, 1);
}

void partial apply for closure #2 in static PlatformAlert.confirmAddToMessagesGroup(fromViewController:_:)()
{
  uint64_t v0;

  closure #1 in static PlatformAlert.confirmAddToMessagesGroup(fromViewController:_:)(*(void (**)(_QWORD))(v0 + 16), *(_QWORD *)(v0 + 24), (void (*)(void))MEMORY[0x1E0DF2270], (uint64_t)"confirmAddToMessagesGroup: canceled by user", 43, 0);
}

void partial apply for closure #1 in static PlatformAlert.confirmStartCollaboration(in:from:initiator:itemTitle:_:)()
{
  uint64_t v0;

  closure #1 in static PlatformAlert.confirmAddToMessagesGroup(fromViewController:_:)(*(void (**)(_QWORD))(v0 + 16), *(_QWORD *)(v0 + 24), (void (*)(void))MEMORY[0x1E0DF2278], (uint64_t)"confirmStartCollaboration: collaborate", 38, 1);
}

void closure #1 in static PlatformAlert.confirmAddToMessagesGroup(fromViewController:_:)(void (*a1)(_QWORD), uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t a5, char a6)
{
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  a3();
  os_log(_:dso:log:type:_:)();
  a1(a6 & 1);
  OUTLINED_FUNCTION_65_1();
}

void partial apply for closure #2 in static PlatformAlert.confirmStartCollaboration(in:from:initiator:itemTitle:_:)()
{
  uint64_t v0;

  closure #1 in static PlatformAlert.confirmAddToMessagesGroup(fromViewController:_:)(*(void (**)(_QWORD))(v0 + 16), *(_QWORD *)(v0 + 24), (void (*)(void))MEMORY[0x1E0DF2278], (uint64_t)"confirmStartCollaboration: not now", 34, 0);
}

void closure #1 in static PlatformAlert.confirmLeavePTTChannel(_:handler:)(void (*a1)(_QWORD), uint64_t a2, const char *a3, char a4)
{
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;

  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v7 = type metadata accessor for Logger();
  __swift_project_value_buffer(v7, (uint64_t)&static Logger.conversationControls);
  v8 = Logger.logObject.getter();
  v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v10 = 0;
    _os_log_impl(&dword_1BD004000, v8, v9, a3, v10, 2u);
    MEMORY[0x1C3B751B8](v10, -1, -1);
  }

  a1(a4 & 1);
  OUTLINED_FUNCTION_65_1();
}

void partial apply for closure #1 in static PlatformAlert.confirmLeavePTTChannel(_:handler:)()
{
  uint64_t v0;

  closure #1 in static PlatformAlert.confirmLeavePTTChannel(_:handler:)(*(void (**)(_QWORD))(v0 + 16), *(_QWORD *)(v0 + 24), "confirmLeavePTTChannel: Leave was selected", 1);
}

void partial apply for closure #2 in static PlatformAlert.confirmLeavePTTChannel(_:handler:)()
{
  uint64_t v0;

  closure #1 in static PlatformAlert.confirmLeavePTTChannel(_:handler:)(*(void (**)(_QWORD))(v0 + 16), *(_QWORD *)(v0 + 24), "confirmLeavePTTChannel: Cancel was selected", 0);
}

unint64_t lazy protocol witness table accessor for type CFUserNotificationRef and conformance CFUserNotificationRef()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type CFUserNotificationRef and conformance CFUserNotificationRef;
  if (!lazy protocol witness table cache variable for type CFUserNotificationRef and conformance CFUserNotificationRef)
  {
    type metadata accessor for CFUserNotificationRef(255);
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for CFUserNotificationRef, v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CFUserNotificationRef and conformance CFUserNotificationRef);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type PlatformAlertActionStyle and conformance PlatformAlertActionStyle()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PlatformAlertActionStyle and conformance PlatformAlertActionStyle;
  if (!lazy protocol witness table cache variable for type PlatformAlertActionStyle and conformance PlatformAlertActionStyle)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for PlatformAlertActionStyle, &type metadata for PlatformAlertActionStyle);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PlatformAlertActionStyle and conformance PlatformAlertActionStyle);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PlatformAlertActionStyle and conformance PlatformAlertActionStyle;
  if (!lazy protocol witness table cache variable for type PlatformAlertActionStyle and conformance PlatformAlertActionStyle)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for PlatformAlertActionStyle, &type metadata for PlatformAlertActionStyle);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PlatformAlertActionStyle and conformance PlatformAlertActionStyle);
  }
  return result;
}

void sub_1BD3F9A1C(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 144))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD3F9A4C(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 168))();
  OUTLINED_FUNCTION_0();
}

uint64_t storeEnumTagSinglePayload for PlatformAlertActionStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BD3F9AC8 + 4 * byte_1BD65E035[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BD3F9AFC + 4 * byte_1BD65E030[v4]))();
}

uint64_t sub_1BD3F9AFC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD3F9B04(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD3F9B0CLL);
  return result;
}

uint64_t sub_1BD3F9B18(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD3F9B20);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BD3F9B24(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD3F9B2C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PlatformAlertActionStyle()
{
  return &type metadata for PlatformAlertActionStyle;
}

uint64_t method lookup function for PlatformAlert()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PlatformAlert.currentPresentedUserNotification.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of PlatformAlert.buttonHandlers.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of static PlatformAlert.create(with:message:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 320))();
}

uint64_t dispatch thunk of PlatformAlert.addAction(title:style:handler:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 328))();
}

uint64_t dispatch thunk of PlatformAlert.show(in:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 336))();
}

uint64_t dispatch thunk of PlatformAlert.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 344))();
}

uint64_t partial apply for closure #2 in PeoplePickerViewController.addPeople()(uint64_t a1)
{
  uint64_t v1;

  return closure #2 in PeoplePickerViewController.addPeople()(a1, *(uint64_t (**)(void))(v1 + 16));
}

void specialized Array.append<A>(contentsOf:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;

  OUTLINED_FUNCTION_153_6();
  a27 = v30;
  a28 = v32;
  v33 = *(_QWORD *)(v31 + 16);
  v34 = *v28;
  v35 = *(_QWORD *)(*v28 + 16);
  if (__OFADD__(v35, v33))
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v36 = v31;
  if (!swift_isUniquelyReferenced_nonNull_native() || (v37 = *(_QWORD *)(v34 + 24) >> 1, v37 < v35 + v33))
  {
    OUTLINED_FUNCTION_330_2();
    v34 = v38;
    v37 = *(_QWORD *)(v38 + 24) >> 1;
  }
  v39 = *(_QWORD *)(v34 + 16);
  v40 = v37 - v39;
  specialized Sequence._copySequenceContents(initializing:)(&a15, (_QWORD *)(v34 + 8 * v39 + 32), v37 - v39, v36);
  if (v31 < v33)
    goto LABEL_12;
  if (v31)
  {
    v41 = *(_QWORD *)(v34 + 16);
    v42 = __OFADD__(v41, v31);
    v43 = v41 + v31;
    if (v42)
    {
      __break(1u);
      goto LABEL_27;
    }
    *(_QWORD *)(v34 + 16) = v43;
  }
  if (v31 != v40)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    *v28 = v34;
    OUTLINED_FUNCTION_21_3();
    return;
  }
LABEL_13:
  if (!a16)
    goto LABEL_10;
  v44 = a16 - 1;
  if (!__OFSUB__(a16, 1))
  {
    v29 = *(_QWORD *)(v34 + 16);
    OUTLINED_FUNCTION_242_4(v31, v32);
    v46 = *v45;
    v47 = OUTLINED_FUNCTION_35_0();
    v49 = OUTLINED_FUNCTION_316_3(v47, v48);
    while (1)
    {
      v51 = *(_QWORD *)(v34 + 24) >> 1;
      v52 = v29 + 1;
      if (v51 < v29 + 1)
      {
        OUTLINED_FUNCTION_330_2();
        v52 = v29 + 1;
        v34 = v49;
        v51 = *(_QWORD *)(v49 + 24) >> 1;
      }
      if (v29 < v51)
        break;
LABEL_25:
      *(_QWORD *)(v34 + 16) = v29;
    }
    *(_QWORD *)(v34 + 8 * v29 + 32) = v46;
    if (!v44)
      goto LABEL_29;
    while (1)
    {
      v42 = __OFSUB__(v44--, 1);
      if (v42)
        break;
      OUTLINED_FUNCTION_242_4(v49, v50);
      v46 = *v53;
      v54 = OUTLINED_FUNCTION_35_0();
      v49 = OUTLINED_FUNCTION_316_3(v54, v55);
      if (v29 + 1 >= v51)
      {
        ++v29;
        goto LABEL_25;
      }
      *(_QWORD *)(v34 + 40 + 8 * v29++) = v46;
      if (!v44)
        goto LABEL_28;
    }
LABEL_27:
    __break(1u);
LABEL_28:
    v52 = v29 + 1;
LABEL_29:
    *(_QWORD *)(v34 + 16) = v52;
    goto LABEL_10;
  }
  __break(1u);
}

void specialized Array.append<A>(contentsOf:)(uint64_t a1)
{
  specialized Array.append<A>(contentsOf:)(a1, (uint64_t)specialized Sequence._copySequenceContents(initializing:));
}

{
  specialized Array.append<A>(contentsOf:)(a1, (uint64_t)specialized Sequence._copySequenceContents(initializing:));
}

void specialized Array.append<A>(contentsOf:)(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int isUniquelyReferenced_nonNull_bridgeObject;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;

  v4 = v2;
  v5 = a1;
  v6 = specialized LazySequence<>.count.getter(a1);
  if ((unint64_t)*v4 >> 62)
  {
    OUTLINED_FUNCTION_26_22();
    v7 = _CocoaArrayWrapper.endIndex.getter();
    OUTLINED_FUNCTION_21_0();
  }
  else
  {
    v7 = *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v8 = v7 + v6;
  if (__OFADD__(v7, v6))
  {
    __break(1u);
    goto LABEL_22;
  }
  v9 = *v4;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v4 = v9;
  v11 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v9 & 0x8000000000000000) == 0 && (v9 & 0x4000000000000000) == 0)
  {
    v12 = v9 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_14;
    v11 = 1;
  }
  if (v9 >> 62)
  {
    OUTLINED_FUNCTION_26_22();
    v13 = _CocoaArrayWrapper.endIndex.getter();
    OUTLINED_FUNCTION_21_0();
  }
  else
  {
    v13 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v13 <= v8)
    v13 = v8;
  OUTLINED_FUNCTION_26_22();
  v14 = MEMORY[0x1C3B73D24](v11, v13, 1, v9);
  swift_bridgeObjectRelease();
  *v4 = v14;
  v12 = v14 & 0xFFFFFFFFFFFFFF8;
LABEL_14:
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (*(_QWORD *)(v12 + 24) >> 1) - v15;
  v17 = ((uint64_t (*)(uint64_t *, uint64_t, uint64_t, unint64_t))a2)(&v56, v12 + 8 * v15 + 32, v16, v5);
  if (v17 < v6)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v17 >= 1)
  {
    OUTLINED_FUNCTION_263_3();
    v19 = *(_QWORD *)(v18 + 16);
    v20 = __OFADD__(v19, v17);
    v21 = v19 + v17;
    if (v20)
    {
      __break(1u);
LABEL_30:
      v5 = a2 & 0x7FFFFFFFFFFFFFFFLL;
      if (!__CocoaSet.Iterator.next()())
        goto LABEL_19;
      OUTLINED_FUNCTION_155_3();
      OUTLINED_FUNCTION_72_9();
      swift_dynamicCast();
      OUTLINED_FUNCTION_329_2();
LABEL_32:
      if (!v11)
        goto LABEL_19;
      while (1)
      {
        OUTLINED_FUNCTION_263_3();
        if (v8 + 1 > *(_QWORD *)(v25 + 24) >> 1)
        {
          v5 = (unint64_t)v4;
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          OUTLINED_FUNCTION_263_3();
        }
        v26 = *(_QWORD *)(v25 + 24);
        if (v8 < (uint64_t)(v26 >> 1))
          break;
LABEL_69:
        *(_QWORD *)(v25 + 16) = v8;
      }
      v55 = v26 >> 1;
      v27 = v25 + 32;
      while (1)
      {
        *(_QWORD *)(v27 + 8 * v8++) = v11;
        v28 = v56;
        v11 = v58;
        v29 = v59;
        if (v56 < 0)
        {
          v5 = v56 & 0x7FFFFFFFFFFFFFFFLL;
          if (!__CocoaSet.Iterator.next()())
            goto LABEL_70;
          OUTLINED_FUNCTION_155_3();
          OUTLINED_FUNCTION_72_9();
          swift_dynamicCast();
          OUTLINED_FUNCTION_329_2();
          goto LABEL_44;
        }
        if (v60)
        {
          v5 = (v60 - 1) & v60;
          v30 = __clz(__rbit64(v60)) | (v59 << 6);
        }
        else
        {
          if (__OFADD__(v59, 1))
          {
            __break(1u);
LABEL_94:
            OUTLINED_FUNCTION_154_6();
            v22 = v54;
LABEL_27:
            v59 = v22;
            v60 = v5;
            goto LABEL_32;
          }
          OUTLINED_FUNCTION_287_2();
          if (v34 == v20)
          {
            OUTLINED_FUNCTION_154_6();
            goto LABEL_41;
          }
          if (!*(_QWORD *)(v57 + 8 * v32))
          {
            if (v32 + 1 >= v33)
              goto LABEL_66;
            if (!*(_QWORD *)(v57 + 8 * (v32 + 1)))
            {
              if (v32 + 2 >= v33)
                goto LABEL_67;
              if (!*(_QWORD *)(v57 + 8 * (v32 + 2)))
              {
                if (v32 + 3 >= v33)
                {
                  OUTLINED_FUNCTION_154_6();
                  v29 = v43;
                  goto LABEL_41;
                }
                if (!*(_QWORD *)(v57 + 8 * (v32 + 3)))
                {
                  OUTLINED_FUNCTION_278_2();
                  if (v34 == v20)
                  {
LABEL_67:
                    OUTLINED_FUNCTION_154_6();
                    v29 = v42;
                    goto LABEL_41;
                  }
                  if (!*(_QWORD *)(v38 + 8 * v36))
                  {
                    v39 = v29 + 6;
                    while (v39 < v37)
                    {
                      if (*(_QWORD *)(v38 + 8 * v39++))
                        goto LABEL_51;
                    }
LABEL_66:
                    OUTLINED_FUNCTION_154_6();
                    v29 = v41;
                    goto LABEL_41;
                  }
                }
              }
            }
          }
LABEL_51:
          OUTLINED_FUNCTION_251_2();
          v29 = v35;
        }
        v11 = *(_QWORD *)(*(_QWORD *)(v28 + 48) + 8 * v30);
        v31 = (id)v11;
LABEL_41:
        v59 = v29;
        v60 = v5;
LABEL_44:
        if (!v11)
        {
LABEL_70:
          *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFF8) + 0x10) = v8;
          goto LABEL_19;
        }
        if (v8 >= v55)
        {
          OUTLINED_FUNCTION_263_3();
          goto LABEL_69;
        }
      }
    }
    *(_QWORD *)(v18 + 16) = v21;
  }
  if (v17 != v16)
  {
LABEL_19:
    outlined consume of [String : Application].Iterator._Variant();
    specialized Array._endMutation()();
    return;
  }
LABEL_23:
  v8 = *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  a2 = v56;
  v22 = v59;
  v11 = v60;
  if (v56 < 0)
    goto LABEL_30;
  if (v60)
  {
    v5 = (v60 - 1) & v60;
    v23 = __clz(__rbit64(v60)) | (v59 << 6);
LABEL_26:
    v11 = *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * v23);
    v24 = (id)v11;
    goto LABEL_27;
  }
  if (!__OFADD__(v59, 1))
  {
    OUTLINED_FUNCTION_287_2();
    if (v34 == v20)
    {
      OUTLINED_FUNCTION_154_6();
      goto LABEL_27;
    }
    if (*(_QWORD *)(v57 + 8 * v44))
      goto LABEL_76;
    if (v44 + 1 < v45)
    {
      if (*(_QWORD *)(v57 + 8 * (v44 + 1)))
        goto LABEL_76;
      if (v44 + 2 >= v45)
        goto LABEL_92;
      if (*(_QWORD *)(v57 + 8 * (v44 + 2)))
        goto LABEL_76;
      if (v44 + 3 >= v45)
        goto LABEL_94;
      if (*(_QWORD *)(v57 + 8 * (v44 + 3)))
        goto LABEL_76;
      OUTLINED_FUNCTION_278_2();
      if (v34 == v20)
      {
LABEL_92:
        OUTLINED_FUNCTION_154_6();
        v22 = v53;
        goto LABEL_27;
      }
      if (*(_QWORD *)(v49 + 8 * v47))
      {
LABEL_76:
        OUTLINED_FUNCTION_251_2();
        v22 = v46;
        goto LABEL_26;
      }
      v50 = v22 + 6;
      while (v50 < v48)
      {
        if (*(_QWORD *)(v49 + 8 * v50++))
          goto LABEL_76;
      }
    }
    OUTLINED_FUNCTION_154_6();
    v22 = v52;
    goto LABEL_27;
  }
  __break(1u);
}

void Participant.isActive.getter()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);
  uint64_t v2;
  char *v3;
  uint64_t v4;

  OUTLINED_FUNCTION_249_3();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_2_27(v1, v2, v4);
  v3 = (char *)sub_1BD3FAFA0 + 4 * byte_1BD65E140[OUTLINED_FUNCTION_3_14()];
  __asm { BR              X10 }
}

void sub_1BD3FAFA0()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_17_1(v0);
  OUTLINED_FUNCTION_18();
}

void sub_1BD3FAFB8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
  OUTLINED_FUNCTION_7_2((uint64_t *)(v0 + *(int *)(v1 + 64)));
  OUTLINED_FUNCTION_332_2();
  sub_1BD3FAFA0();
}

uint64_t type metadata accessor for Participant.State(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for Participant.State);
}

void Participant.isRequestToScreenShareAvailable.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  char v12;
  char v13;
  void *v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_93();
  v5 = v1;
  v6 = type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_74_10();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_99_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_88_11();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_138_6();
  Participant.avInfo.getter();
  OUTLINED_FUNCTION_92_12(v1, v4);
  v11 = *(unsigned __int8 *)(v4 + *(int *)(v6 + 24) + 4);
  OUTLINED_FUNCTION_71_2(v4);
  OUTLINED_FUNCTION_92_12(v5, v3);
  if (v11 != 1)
  {
    OUTLINED_FUNCTION_46(v3);
    OUTLINED_FUNCTION_95_1(v5, v2);
LABEL_8:
    OUTLINED_FUNCTION_46(v2);
    OUTLINED_FUNCTION_95_1(v5, v0);
    goto LABEL_9;
  }
  Participant.isActive.getter();
  v13 = v12;
  OUTLINED_FUNCTION_71_2(v3);
  OUTLINED_FUNCTION_92_12(v5, v2);
  if ((v13 & 1) == 0)
    goto LABEL_8;
  v14 = *(void **)(v2 + *(int *)(v6 + 28));
  if (!v14)
    goto LABEL_8;
  v15 = objc_msgSend(v14, sel_value);
  v16 = v15;
  if (!v15)
  {
    v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v16 = (void *)MEMORY[0x1C3B72E00](v17);
    v15 = (id)OUTLINED_FUNCTION_21_0();
  }
  OUTLINED_FUNCTION_25_1((uint64_t)v15, sel_destinationIdIsTemporary);

  OUTLINED_FUNCTION_46(v2);
  OUTLINED_FUNCTION_95_1(v5, v0);
LABEL_9:
  OUTLINED_FUNCTION_35_2(v18, type metadata accessor for Participant);
  OUTLINED_FUNCTION_52_1();
}

void Participant.name.getter()
{
  void *v0;

  Participant.contactDetails.getter();
  OUTLINED_FUNCTION_305_1();
  OUTLINED_FUNCTION_53();

  OUTLINED_FUNCTION_65_2();
  Participant.name(_:)();
  OUTLINED_FUNCTION_2_1();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_26_40();
}

void static Participant.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  char v20;
  _BOOL4 v21;
  _BOOL4 v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 *v25;
  int v26;
  int v27;
  int v28;
  int v29;
  unsigned __int8 *v30;
  uint64_t v31;
  int v32;
  int v33;
  int v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  OUTLINED_FUNCTION_93();
  v5 = v4;
  v7 = v6;
  v8 = type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_5_27();
  v48 = v10;
  OUTLINED_FUNCTION_8_4();
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v47 - v13;
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_132_9();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_88_11();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_231();
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_138_6();
  OUTLINED_FUNCTION_315_0();
  static Participant.State.== infix(_:_:)();
  v19 = v18;
  OUTLINED_FUNCTION_224_0(v7, v2);
  OUTLINED_FUNCTION_224_0(v5, v3);
  if ((v19 & 1) == 0)
  {
    OUTLINED_FUNCTION_68_2(v3);
    OUTLINED_FUNCTION_68_2(v2);
    OUTLINED_FUNCTION_224_0(v7, v1);
    OUTLINED_FUNCTION_224_0(v5, v0);
    goto LABEL_29;
  }
  v20 = static UUID.== infix(_:_:)();
  OUTLINED_FUNCTION_68_2(v3);
  OUTLINED_FUNCTION_68_2(v2);
  OUTLINED_FUNCTION_224_0(v7, v1);
  OUTLINED_FUNCTION_224_0(v5, v0);
  if ((v20 & 1) == 0)
  {
LABEL_29:
    OUTLINED_FUNCTION_68_2(v0);
    OUTLINED_FUNCTION_68_2(v1);
    OUTLINED_FUNCTION_224_0(v7, (uint64_t)v14);
    v46 = v5;
    v24 = v48;
    OUTLINED_FUNCTION_224_0(v46, v48);
    goto LABEL_30;
  }
  v21 = *(_QWORD *)(v1 + *(int *)(v8 + 28)) != 0;
  OUTLINED_FUNCTION_68_2(v1);
  v22 = *(_QWORD *)(v0 + *(int *)(v8 + 28)) == 0;
  OUTLINED_FUNCTION_68_2(v0);
  OUTLINED_FUNCTION_224_0(v7, (uint64_t)v14);
  v23 = v5;
  v24 = v48;
  OUTLINED_FUNCTION_224_0(v23, v48);
  if (((v21 ^ v22) & 1) == 0)
  {
LABEL_30:
    OUTLINED_FUNCTION_68_2(v24);
    OUTLINED_FUNCTION_68_2((uint64_t)v14);
    goto LABEL_31;
  }
  v25 = (unsigned __int8 *)&v14[*(int *)(v8 + 24)];
  v47 = *v25;
  v26 = v25[1];
  v27 = v25[2];
  v28 = v25[3];
  v29 = v25[4];
  OUTLINED_FUNCTION_68_2((uint64_t)v14);
  v30 = (unsigned __int8 *)(v24 + *(int *)(v8 + 24));
  v31 = *v30;
  v32 = v30[1];
  v33 = v30[2];
  v34 = v30[3];
  v35 = v24;
  v36 = v30[4];
  OUTLINED_FUNCTION_68_2(v35);
  v37 = 0x100000000;
  if (v29)
    v38 = 0x100000000;
  else
    v38 = 0;
  if (v28)
    v39 = 0x1000000;
  else
    v39 = 0;
  if (v27)
    v40 = 0x10000;
  else
    v40 = 0;
  if (v26)
    v41 = 256;
  else
    v41 = 0;
  v42 = v41 | v47 | v40 | v39 | v38;
  if (!v36)
    v37 = 0;
  if (v34)
    v43 = 0x1000000;
  else
    v43 = 0;
  if (v33)
    v44 = 0x10000;
  else
    v44 = 0;
  if (v32)
    v45 = 256;
  else
    v45 = 0;
  static Participant.Capabilities.== infix(_:_:)(v42, v45 | v31 | v44 | v43 | v37);
LABEL_31:
  OUTLINED_FUNCTION_52_1();
}

uint64_t Participant.captionInfo.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  OUTLINED_FUNCTION_8_97();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_51_2(v2, v3, v8);
  v4 = OUTLINED_FUNCTION_42();
  if ((_DWORD)v4 == 4)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
    OUTLINED_FUNCTION_7_2((uint64_t *)(v0 + *(int *)(v5 + 64)));
    OUTLINED_FUNCTION_11_92();
    v6 = OUTLINED_FUNCTION_33();
    OUTLINED_FUNCTION_16_0(v6);
    OUTLINED_FUNCTION_161_6();
    OUTLINED_FUNCTION_47_26();
  }
  else
  {
    OUTLINED_FUNCTION_15_12(v4, type metadata accessor for Participant.State);
    return 0;
  }
  return v0;
}

void *Participant.CaptionInfo.maxCaptions.unsafeMutableAddressor()
{
  return &static Participant.CaptionInfo.maxCaptions;
}

uint64_t specialized BidirectionalCollection.suffix(_:)(uint64_t a1, uint64_t a2)
{
  return specialized BidirectionalCollection.suffix(_:)(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t))specialized Array.index(_:offsetBy:limitedBy:), (void (*)(_QWORD))type metadata accessor for CaptionSectioner.Caption);
}

uint64_t specialized BidirectionalCollection.suffix(_:)(uint64_t result, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD, uint64_t), void (*a4)(_QWORD))
{
  uint64_t v6;
  char v7;
  uint64_t v8;

  if (result < 0)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v6 = *(_QWORD *)(a2 + 16);
  result = a3(v6, -result, 0, a2);
  if ((v7 & 1) != 0)
    v8 = 0;
  else
    v8 = result;
  if (v6 < v8)
    goto LABEL_9;
  if ((v8 & 0x8000000000000000) == 0)
  {
    a4(0);
    return a2;
  }
LABEL_10:
  __break(1u);
  return result;
}

void Participant.isScreenSharing.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;

  OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_30_6();
  Participant.screenState.getter();
  v4 = v3;
  OUTLINED_FUNCTION_467(v1, v0);
  if (v4 != 2)
    Participant.isReceivingScreenFrames.getter();
  OUTLINED_FUNCTION_35_2(v5, type metadata accessor for Participant);
  OUTLINED_FUNCTION_18();
}

void Participant.screenProvider.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  const void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[27];

  OUTLINED_FUNCTION_159_6();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_25_49(v3, v4, v12);
  v5 = OUTLINED_FUNCTION_199_2();
  if ((_DWORD)v5 != 4)
  {
    OUTLINED_FUNCTION_315(v5, type metadata accessor for Participant.State);
    OUTLINED_FUNCTION_63_25();
    goto LABEL_5;
  }
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
  v7 = (const void *)(v1 + *(int *)(v6 + 48));
  OUTLINED_FUNCTION_7_2((uint64_t *)(v1 + *(int *)(v6 + 64)));
  OUTLINED_FUNCTION_25_58(&v13, v7);
  v8 = OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_75(v8);
  OUTLINED_FUNCTION_281_4((uint64_t)&v14, v9, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
  v10 = OUTLINED_FUNCTION_283_1();
  if (v15[3] == 1)
  {
LABEL_5:
    OUTLINED_FUNCTION_280_3(v10, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    *(_QWORD *)(v0 + 32) = 0;
    *(_OWORD *)v0 = 0u;
    *(_OWORD *)(v0 + 16) = 0u;
    goto LABEL_6;
  }
  OUTLINED_FUNCTION_311_3((uint64_t)v15, v11, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
  outlined destroy of Participant.ScreenInfo((uint64_t)v15);
LABEL_6:
  OUTLINED_FUNCTION_91();
}

void Participant.requiresScreenInfoUpdate(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  void (**v47)(uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  char v49;
  uint64_t v50;
  void (*v51)(uint64_t);
  uint64_t v52;
  char v53;
  char v54;
  uint64_t v55;
  char v56;
  char v57;
  uint64_t v58;
  BOOL v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  BOOL v89;
  uint64_t v90;
  uint64_t v91;
  double v92;
  uint64_t v93;
  uint64_t v94;
  BOOL v95;
  double v96;
  BOOL v98;
  uint64_t v99;
  char v100;
  double v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  double v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char v112;
  uint64_t v113;
  uint64_t v114;
  char v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char v119;
  uint64_t v120;
  uint64_t v121;
  char v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char v128;
  uint64_t v129;
  unsigned __int8 v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  void (**v147)(uint64_t, uint64_t, uint64_t);
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  _QWORD v157[3];
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  double v161;
  double v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  unsigned __int8 v172;
  _QWORD v173[4];
  char v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  char v179;
  uint64_t v180;
  _BYTE v181[33];
  char v182;
  _BYTE v183[40];
  _QWORD v184[11];
  _QWORD v185[4];
  char v186;
  _QWORD v187[4];
  char v188;
  uint64_t v189;
  uint64_t v190;

  OUTLINED_FUNCTION_149_1();
  v189 = v5;
  v190 = v6;
  v156 = v0;
  v8 = v7;
  v9 = OUTLINED_FUNCTION_33_0();
  v147 = *(void (***)(uint64_t, uint64_t, uint64_t))(v9 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_0_7();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v11);
  v12 = OUTLINED_FUNCTION_63_3();
  v13 = type metadata accessor for Participant(v12);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_5_27();
  v149 = v15;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_18_0();
  v148 = v17;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_18_0();
  v152 = v19;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_18_0();
  v146 = v21;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v22);
  OUTLINED_FUNCTION_18_0();
  v150 = v23;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v24);
  OUTLINED_FUNCTION_18_0();
  v151 = v25;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v26);
  OUTLINED_FUNCTION_18_0();
  v155 = v27;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v28);
  OUTLINED_FUNCTION_18_0();
  v145 = v29;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v30);
  OUTLINED_FUNCTION_18_0();
  v153 = v31;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v32);
  OUTLINED_FUNCTION_18_0();
  v154 = v33;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v34);
  OUTLINED_FUNCTION_18_0();
  v144 = v35;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v36);
  OUTLINED_FUNCTION_18_0();
  v142 = v37;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v38);
  OUTLINED_FUNCTION_183();
  MEMORY[0x1E0C80A78](v39);
  OUTLINED_FUNCTION_18_0();
  v143 = v40;
  OUTLINED_FUNCTION_8_4();
  v42 = MEMORY[0x1E0C80A78](v41);
  v44 = (char *)&v137 - v43;
  MEMORY[0x1E0C80A78](v42);
  OUTLINED_FUNCTION_231();
  MEMORY[0x1E0C80A78](v45);
  v47 = (void (**)(uint64_t, uint64_t, uint64_t))((char *)&v137 - v46);
  outlined init with copy of FeatureEligibility?(v8, v3, &demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_69_0(v3, 1, v13);
  if (v59)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v3, &demangling cache variable for type metadata for Participant?);
    goto LABEL_26;
  }
  v141 = v1;
  outlined init with take of StagedCollaboration(v3, (uint64_t)v47, type metadata accessor for Participant);
  v48 = v156;
  v147[2](v2, v156 + *(int *)(v13 + 20), v9);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
  v49 = dispatch thunk of static Equatable.== infix(_:_:)();
  v50 = OUTLINED_FUNCTION_223_0();
  v51(v50);
  OUTLINED_FUNCTION_111(v48, v4);
  OUTLINED_FUNCTION_111((uint64_t)v47, (uint64_t)v44);
  v147 = v47;
  if ((v49 & 1) == 0)
  {
    OUTLINED_FUNCTION_46((uint64_t)v44);
    OUTLINED_FUNCTION_46(v4);
    v61 = v143;
    OUTLINED_FUNCTION_95_1(v48, v143);
    v58 = v141;
    OUTLINED_FUNCTION_95_1((uint64_t)v47, v141);
LABEL_18:
    OUTLINED_FUNCTION_46(v58);
    OUTLINED_FUNCTION_46(v61);
    v72 = v155;
    v73 = v142;
    goto LABEL_19;
  }
  v52 = Participant.deviceOrientation.getter();
  v54 = v53;
  v55 = Participant.deviceOrientation.getter();
  v57 = v56;
  OUTLINED_FUNCTION_71_2((uint64_t)v44);
  OUTLINED_FUNCTION_71_2(v4);
  v58 = v141;
  if ((v54 & 1) != 0)
  {
    v60 = v57 & 1;
  }
  else
  {
    v59 = (v57 & 1) == 0 && v52 == v55;
    v60 = v59;
  }
  v62 = (uint64_t)v147;
  v61 = v143;
  OUTLINED_FUNCTION_95_1(v156, v143);
  OUTLINED_FUNCTION_95_1(v62, v58);
  if ((v60 & 1) == 0)
    goto LABEL_18;
  Participant.aspectRatio.getter();
  v139 = v173[1];
  v140 = v173[0];
  v137 = v173[3];
  v138 = v173[2];
  v63 = v174;
  Participant.aspectRatio.getter();
  v65 = v175;
  v64 = v176;
  v66 = v61;
  v67 = v177;
  v68 = v178;
  v69 = v179;
  OUTLINED_FUNCTION_46(v58);
  OUTLINED_FUNCTION_46(v66);
  outlined init with take of Any?((uint64_t)v173, (uint64_t)v183, &demangling cache variable for type metadata for AspectRatio?);
  v72 = v155;
  if ((v183[33] & 1) != 0)
  {
    OUTLINED_FUNCTION_268_4(v70, v71, &demangling cache variable for type metadata for AspectRatio?);
    v73 = v142;
    if ((v182 & 1) != 0)
    {
      v74 = v156;
      OUTLINED_FUNCTION_95_1(v156, v142);
      v75 = (uint64_t)v147;
      v76 = v144;
      OUTLINED_FUNCTION_95_1((uint64_t)v147, v144);
      v77 = v149;
      v78 = v145;
      v79 = v146;
      goto LABEL_29;
    }
    outlined init with take of AspectRatio((uint64_t)v181, (uint64_t)v157);
    goto LABEL_19;
  }
  v87 = outlined init with take of AspectRatio((uint64_t)v183, (uint64_t)v184);
  OUTLINED_FUNCTION_268_4(v87, v88, &demangling cache variable for type metadata for AspectRatio?);
  v73 = v142;
  if ((v182 & 1) != 0)
  {
LABEL_19:
    v74 = v156;
    OUTLINED_FUNCTION_95_1(v156, v73);
    v75 = (uint64_t)v147;
    v76 = v144;
    OUTLINED_FUNCTION_95_1((uint64_t)v147, v144);
    v77 = v149;
    v78 = v145;
    v79 = v146;
LABEL_20:
    OUTLINED_FUNCTION_46(v76);
    OUTLINED_FUNCTION_46(v73);
    v80 = v154;
    OUTLINED_FUNCTION_95_1(v74, v154);
    v81 = v153;
    OUTLINED_FUNCTION_95_1(v75, v153);
LABEL_21:
    OUTLINED_FUNCTION_46(v81);
    OUTLINED_FUNCTION_46(v80);
    OUTLINED_FUNCTION_95_1(v74, v78);
    OUTLINED_FUNCTION_95_1(v75, v72);
    v82 = v77;
LABEL_22:
    OUTLINED_FUNCTION_46(v72);
    OUTLINED_FUNCTION_46(v78);
    v83 = v151;
    OUTLINED_FUNCTION_95_1(v74, v151);
    v84 = v150;
    OUTLINED_FUNCTION_95_1(v75, v150);
    v85 = v152;
LABEL_23:
    OUTLINED_FUNCTION_46(v84);
    OUTLINED_FUNCTION_46(v83);
    OUTLINED_FUNCTION_95_1(v74, v79);
    OUTLINED_FUNCTION_95_1(v75, v85);
LABEL_24:
    OUTLINED_FUNCTION_46(v85);
    OUTLINED_FUNCTION_46(v79);
    v86 = v148;
    OUTLINED_FUNCTION_95_1(v74, v148);
    OUTLINED_FUNCTION_95_1(v75, v82);
LABEL_25:
    OUTLINED_FUNCTION_46(v82);
    OUTLINED_FUNCTION_46(v86);
    OUTLINED_FUNCTION_46(v75);
    goto LABEL_26;
  }
  outlined init with take of AspectRatio((uint64_t)v181, (uint64_t)&v180);
  v187[0] = v65;
  v187[1] = v64;
  v187[2] = v67;
  v187[3] = v68;
  v188 = v69 & 1;
  v185[0] = v140;
  v185[1] = v139;
  v185[2] = v138;
  v185[3] = v137;
  v186 = v63 & 1;
  v89 = static AspectRatio.== infix(_:_:)((uint64_t)v185, (uint64_t)v187);
  v74 = v156;
  OUTLINED_FUNCTION_467(v156, v73);
  v75 = (uint64_t)v147;
  v76 = v144;
  v72 = v155;
  outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v147, v144, type metadata accessor for Participant);
  v77 = v149;
  v78 = v145;
  v79 = v146;
  if (!v89)
    goto LABEL_20;
LABEL_29:
  OUTLINED_FUNCTION_138_8();
  v91 = v158;
  if (v158 == 1)
  {
    OUTLINED_FUNCTION_74_16(v90, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    v92 = 0.0;
  }
  else
  {
    v92 = v161;
    OUTLINED_FUNCTION_73_21();
  }
  OUTLINED_FUNCTION_264_2();
  OUTLINED_FUNCTION_46(v76);
  OUTLINED_FUNCTION_46(v73);
  v94 = v158;
  v95 = v158 == 1;
  if (v158 == 1)
  {
    OUTLINED_FUNCTION_74_16(v93, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    v96 = 0.0;
  }
  else
  {
    v96 = v161;
    OUTLINED_FUNCTION_73_21();
  }
  v80 = v154;
  if (v91 != 1)
    v95 = v92 == v96 && v94 != 1;
  OUTLINED_FUNCTION_467(v74, v154);
  v98 = v95;
  v81 = v153;
  OUTLINED_FUNCTION_467(v75, v153);
  v72 = v155;
  if (!v98)
    goto LABEL_21;
  OUTLINED_FUNCTION_138_8();
  OUTLINED_FUNCTION_105_9();
  if (v59)
  {
    OUTLINED_FUNCTION_74_16(v99, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    v100 = 1;
    v101 = 0.0;
  }
  else
  {
    v100 = v172;
    if (v172)
      v101 = 0.0;
    else
      v101 = v162;
    OUTLINED_FUNCTION_73_21();
  }
  v102 = v153;
  v82 = v77;
  OUTLINED_FUNCTION_138_8();
  OUTLINED_FUNCTION_46(v102);
  OUTLINED_FUNCTION_46(v154);
  OUTLINED_FUNCTION_105_9();
  if (v59)
  {
    OUTLINED_FUNCTION_74_16(v103, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    v104 = 1;
    v105 = 0.0;
  }
  else
  {
    v104 = v172;
    if (v172)
      v105 = 0.0;
    else
      v105 = v162;
    OUTLINED_FUNCTION_73_21();
  }
  if ((v100 & 1) == 0)
    v104 = (v101 == v105) & ~v104;
  OUTLINED_FUNCTION_95_1(v74, v78);
  v72 = v155;
  OUTLINED_FUNCTION_95_1(v75, v155);
  if ((v104 & 1) == 0)
    goto LABEL_22;
  OUTLINED_FUNCTION_260_3();
  OUTLINED_FUNCTION_105_9();
  if (v59)
  {
    OUTLINED_FUNCTION_74_16(v106, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    v107 = 0;
    v108 = 1;
  }
  else
  {
    v108 = v172;
    if (v172)
      v107 = 0;
    else
      v107 = v169;
    OUTLINED_FUNCTION_73_21();
  }
  v109 = v155;
  Participant.screenInfo.getter();
  OUTLINED_FUNCTION_110(v109);
  OUTLINED_FUNCTION_110(v78);
  OUTLINED_FUNCTION_105_9();
  if (v59)
  {
    OUTLINED_FUNCTION_74_16(v110, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    v111 = 0;
    v112 = 1;
  }
  else
  {
    v112 = v172;
    if (v172)
      v111 = 0;
    else
      v111 = v169;
    OUTLINED_FUNCTION_73_21();
  }
  if ((v108 & 1) == 0)
    v112 = (v107 == v111) & ~v112;
  v83 = v151;
  v85 = v152;
  OUTLINED_FUNCTION_157_2(v74, v151);
  v84 = v150;
  OUTLINED_FUNCTION_157_2(v75, v150);
  if ((v112 & 1) == 0)
    goto LABEL_23;
  OUTLINED_FUNCTION_138_8();
  OUTLINED_FUNCTION_105_9();
  if (v59)
  {
    OUTLINED_FUNCTION_74_16(v113, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    v114 = 0;
    v115 = 1;
  }
  else
  {
    v115 = v172;
    if (v172)
      v114 = 0;
    else
      v114 = v170;
    OUTLINED_FUNCTION_73_21();
  }
  v116 = v150;
  OUTLINED_FUNCTION_260_3();
  OUTLINED_FUNCTION_46(v116);
  OUTLINED_FUNCTION_46(v151);
  OUTLINED_FUNCTION_105_9();
  if (v59)
  {
    OUTLINED_FUNCTION_74_16(v117, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    v118 = 0;
    v119 = 1;
  }
  else
  {
    v119 = v172;
    if (v172)
      v118 = 0;
    else
      v118 = v170;
    OUTLINED_FUNCTION_73_21();
  }
  if ((v115 & 1) == 0)
    v119 = (v114 == v118) & ~v119;
  OUTLINED_FUNCTION_95_1(v74, v79);
  v85 = v152;
  OUTLINED_FUNCTION_95_1(v75, v152);
  if ((v119 & 1) == 0)
    goto LABEL_24;
  Participant.screenInfo.getter();
  OUTLINED_FUNCTION_105_9();
  if (v59)
  {
    OUTLINED_FUNCTION_74_16(v120, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    v121 = 0;
    v122 = 1;
  }
  else
  {
    v122 = v172;
    if (v172)
      v121 = 0;
    else
      v121 = v171;
    OUTLINED_FUNCTION_73_21();
  }
  v123 = v152;
  OUTLINED_FUNCTION_260_3();
  OUTLINED_FUNCTION_46(v123);
  OUTLINED_FUNCTION_46(v79);
  OUTLINED_FUNCTION_105_9();
  if (v59)
  {
    OUTLINED_FUNCTION_74_16(v124, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    v125 = 0;
    v126 = 1;
  }
  else
  {
    v126 = v172;
    if (v172)
      v125 = 0;
    else
      v125 = v171;
    OUTLINED_FUNCTION_73_21();
  }
  v86 = v148;
  if ((v122 & 1) == 0)
    v126 = (v121 == v125) & ~(_DWORD)v126;
  OUTLINED_FUNCTION_95_1(v74, v148);
  OUTLINED_FUNCTION_95_1(v75, v82);
  if ((v126 & 1) == 0)
    goto LABEL_25;
  Participant.screenInfo.getter();
  OUTLINED_FUNCTION_105_9();
  if (v59)
  {
    OUTLINED_FUNCTION_74_16(v127, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    OUTLINED_FUNCTION_202_4();
    v128 = 1;
  }
  else
  {
    v128 = v172;
    if ((v172 & 1) != 0)
    {
      OUTLINED_FUNCTION_202_4();
    }
    else
    {
      v126 = v167;
      v121 = v168;
      v75 = v165;
      v86 = v166;
      v79 = v163;
      v74 = v164;
    }
    OUTLINED_FUNCTION_73_21();
  }
  OUTLINED_FUNCTION_264_2();
  OUTLINED_FUNCTION_105_9();
  if (v59)
  {
    OUTLINED_FUNCTION_74_16(v129, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
  }
  else
  {
    v152 = v79;
    v153 = v75;
    v154 = v86;
    v155 = v126;
    v156 = v121;
    v130 = v172;
    if ((v172 & 1) != 0)
    {
      v131 = 0;
      v132 = 0;
      v133 = 0;
      v134 = 0;
      v135 = 0;
      v136 = 0;
    }
    else
    {
      v135 = v167;
      v136 = v168;
      v133 = v165;
      v134 = v166;
      v131 = v163;
      v132 = v164;
    }
    OUTLINED_FUNCTION_73_21();
    if ((v128 & 1) == 0 && (v130 & 1) == 0)
    {
      v157[0] = v131;
      v157[1] = v132;
      v157[2] = v133;
      v158 = v134;
      v159 = v135;
      v160 = v136;
      v184[5] = v152;
      v184[6] = v74;
      v184[7] = v153;
      v184[8] = v154;
      v184[9] = v155;
      v184[10] = v156;
      static CGAffineTransform.== infix(_:_:)();
    }
  }
  OUTLINED_FUNCTION_94(v149);
  OUTLINED_FUNCTION_94(v148);
  OUTLINED_FUNCTION_94((uint64_t)v147);
LABEL_26:
  OUTLINED_FUNCTION_7_7();
}

void Participant.screenInfo.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  const void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10[12];
  uint64_t v11;

  OUTLINED_FUNCTION_159_6();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_25_49(v3, v4, v10[0]);
  v5 = OUTLINED_FUNCTION_199_2();
  if ((_DWORD)v5 == 4)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
    v7 = (const void *)(v1 + *(int *)(v6 + 48));
    OUTLINED_FUNCTION_7_2((uint64_t *)(v1 + *(int *)(v6 + 64)));
    OUTLINED_FUNCTION_25_58(v10, v7);
    v8 = OUTLINED_FUNCTION_33();
    OUTLINED_FUNCTION_75(v8);
    OUTLINED_FUNCTION_311_3((uint64_t)&v11, v9, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    OUTLINED_FUNCTION_47_26();
  }
  else
  {
    OUTLINED_FUNCTION_315(v5, type metadata accessor for Participant.State);
    *v0 = 0;
    v0[1] = 0;
    v0[2] = 0;
    v0[3] = 1;
    OUTLINED_FUNCTION_54_13(v0 + 4);
  }
  OUTLINED_FUNCTION_91();
}

uint64_t Participant.ScreenInfo.displayScale.getter()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 208) & 1) != 0)
    return 0;
  else
    return *(_QWORD *)(v0 + 112);
}

uint64_t Participant.deviceOrientation.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[12];
  uint64_t v13;
  _BYTE v14[24];
  uint64_t v15;
  _QWORD v16[27];

  OUTLINED_FUNCTION_12_98();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_56_36(v2, v3, v12[0]);
  v4 = OUTLINED_FUNCTION_212();
  if ((_DWORD)v4 == 4)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
    v6 = (const void *)(v0 + *(int *)(v5 + 48));
    OUTLINED_FUNCTION_7_2((uint64_t *)(v0 + *(int *)(v5 + 64)));
    OUTLINED_FUNCTION_25_58(v12, v6);
    v7 = OUTLINED_FUNCTION_33();
    OUTLINED_FUNCTION_75(v7);
    outlined init with copy of FeatureEligibility?((uint64_t)&v13, (uint64_t)v14, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    OUTLINED_FUNCTION_47_26();
    if (v15 != 1)
    {
      OUTLINED_FUNCTION_166_3(v16, v14);
      v8 = v16[6];
      outlined destroy of Participant.ScreenInfo((uint64_t)v16);
      return v8;
    }
  }
  else
  {
    OUTLINED_FUNCTION_315(v4, type metadata accessor for Participant.State);
    memset(v14, 0, sizeof(v14));
    v15 = 1;
    OUTLINED_FUNCTION_107_10((uint64_t)v14);
  }
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v14, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
  Participant.videoInfo.getter();
  OUTLINED_FUNCTION_324_4(v9, v10, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
  if (!v12[0])
    return 0;
  v8 = v12[3];
  outlined release of LinearGradient((uint64_t)v16);
  return v8;
}

void Participant.aspectRatio.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  uint64_t EnumCaseMultiPayload;
  uint64_t v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  _QWORD v19[9];
  char v20;
  uint64_t v21;
  _BYTE v22[24];
  uint64_t v23;
  _QWORD v24[12];
  char v25;

  OUTLINED_FUNCTION_96();
  v3 = v2;
  type metadata accessor for Participant.State(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_16_2();
  outlined init with copy of ConversationControlsAppLaunchButtonType(v0, v1, v5);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((_DWORD)EnumCaseMultiPayload == 4)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
    v8 = (const void *)(v1 + *(int *)(v7 + 48));
    OUTLINED_FUNCTION_7_2((uint64_t *)(v1 + *(int *)(v7 + 64)));
    OUTLINED_FUNCTION_25_58(v19, v8);
    v9 = OUTLINED_FUNCTION_33();
    OUTLINED_FUNCTION_2_18(v9);
    outlined init with copy of FeatureEligibility?((uint64_t)&v21, (uint64_t)v22, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    OUTLINED_FUNCTION_47_26();
    if (v23 != 1)
    {
      OUTLINED_FUNCTION_166_3(v24, v22);
      v10 = v24[8];
      v11 = v24[9];
      v12 = v24[10];
      v13 = v24[11];
      v14 = v25;
      outlined destroy of Participant.ScreenInfo((uint64_t)v24);
      v15 = 0;
      goto LABEL_8;
    }
  }
  else
  {
    OUTLINED_FUNCTION_22_29(EnumCaseMultiPayload, type metadata accessor for Participant.State);
    memset(v22, 0, sizeof(v22));
    v23 = 1;
    OUTLINED_FUNCTION_107_10((uint64_t)v22);
  }
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v22, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
  Participant.videoInfo.getter();
  OUTLINED_FUNCTION_324_4(v16, v17, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
  if (v19[0])
  {
    v10 = v19[5];
    v11 = v19[6];
    v12 = v19[7];
    v13 = v19[8];
    v18 = v20;
    outlined release of LinearGradient((uint64_t)v24);
    v15 = 0;
    v14 = v18 & 1;
  }
  else
  {
    v10 = 0;
    v11 = 0;
    v12 = 0;
    v13 = 0;
    v14 = 0;
    v15 = 1;
  }
LABEL_8:
  *(_QWORD *)v3 = v10;
  *(_QWORD *)(v3 + 8) = v11;
  *(_QWORD *)(v3 + 16) = v12;
  *(_QWORD *)(v3 + 24) = v13;
  *(_BYTE *)(v3 + 32) = v14;
  *(_BYTE *)(v3 + 33) = v15;
  OUTLINED_FUNCTION_65_1();
}

uint64_t Participant.ScreenInfo.displayCornerRadius.getter()
{
  uint64_t v0;
  uint64_t result;

  if ((*(_BYTE *)(v0 + 208) & 1) != 0)
    return 0x4024000000000000;
  if ((*(_BYTE *)(v0 + 128) & 1) == 0)
    return *(_QWORD *)(v0 + 120);
  result = 0x4034000000000000;
  switch(*(_QWORD *)(v0 + 184))
  {
    case 0:
    case 1:
    case 4:
      return 0x4024000000000000;
    case 2:
      if (Participant.ScreenInfo.isMaybeTouchIDDevice()())
        result = 0x4024000000000000;
      else
        result = 0x4049000000000000;
      break;
    case 3:
      return result;
    default:
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TUScreenShareDeviceFamily?);
      result = _diagnoseUnexpectedEnumCase<A>(type:)();
      __break(1u);
      break;
  }
  return result;
}

void Participant.ScreenInfo.systemRootLayerTransform.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;

  v2 = *(_BYTE *)(v1 + 208);
  v3 = 0uLL;
  v4 = 0uLL;
  v5 = 0uLL;
  if ((v2 & 1) == 0)
  {
    v5 = *(_OWORD *)(v1 + 168);
    v4 = *(_OWORD *)(v1 + 152);
    v3 = *(_OWORD *)(v1 + 136);
  }
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = v5;
  *(_BYTE *)(a1 + 48) = v2;
}

void Participant.contactDetails.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  Class isa;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  OUTLINED_FUNCTION_93();
  v4 = OUTLINED_FUNCTION_152();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_8_56();
  v6 = type metadata accessor for PersonNameComponents();
  OUTLINED_FUNCTION_168();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_78();
  v8 = *(void **)(v1 + *(int *)(v4 + 28));
  if (!v8)
    goto LABEL_9;
  v9 = v8;
  outlined bridged method (pb) of @objc TUHandle.siriDisplayName.getter(v9);
  if (!v11)
  {

LABEL_9:
    outlined init with copy of ConversationControlsAppLaunchButtonType(v1, v2, type metadata accessor for Participant);
    v20 = *(_QWORD *)(v1 + *(int *)(v4 + 64));
    swift_retain();
    ParticipantContactDetails.init(participant:cache:)(v2, v20, v21, v22, v23, v24, v25, v26, v0);
    goto LABEL_10;
  }
  v12 = v10;
  v13 = v11;
  if ((objc_msgSend(v9, sel_shouldHideContact) & 1) == 0)
  {

    OUTLINED_FUNCTION_2_1();
    goto LABEL_9;
  }
  OUTLINED_FUNCTION_8_8();
  PersonNameComponents.init()();
  PersonNameComponents.givenName.setter();
  PersonNameComponents.familyName.setter();
  if (one-time initialization token for initials != -1)
    swift_once();
  swift_beginAccess();
  v14 = (id)static NSPersonNameComponentsFormatter.initials;
  isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
  v16 = objc_msgSend(v14, sel_stringFromPersonNameComponents_, isa);

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v6);
  lazy protocol witness table accessor for type String and conformance String();
  v17 = StringProtocol.localizedUppercase.getter();
  v19 = v18;

  swift_bridgeObjectRelease();
  *v0 = 0;
  v0[1] = v12;
  v0[2] = v13;
  v0[3] = v12;
  v0[4] = v13;
  v0[5] = v17;
  v0[6] = v19;
LABEL_10:
  OUTLINED_FUNCTION_52_1();
}

void Participant.handle.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + *(int *)(type metadata accessor for Participant(0) + 28));
  if (v1)
    v2 = v1;
  OUTLINED_FUNCTION_0();
}

void Participant.Caption.debugDescription.getter()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t v2;
  Swift::String v3;
  Swift::String v4;
  Swift::String v5;
  Swift::String v6;

  OUTLINED_FUNCTION_147();
  _StringGuts.grow(_:)(73);
  OUTLINED_FUNCTION_308_1();
  v0._countAndFlagsBits = 0x6E6F6974706143;
  v0._object = (void *)0xE700000000000000;
  String.append(_:)(v0);
  v3._countAndFlagsBits = 0xD000000000000012;
  v3._object = (void *)0x80000001BD68B3D0;
  OUTLINED_FUNCTION_49(v3);
  v4._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  OUTLINED_FUNCTION_49(v4);
  OUTLINED_FUNCTION_2_1();
  v1._countAndFlagsBits = OUTLINED_FUNCTION_309_3() & 0xFFFFFFFFFFFFLL | 0x7243000000000000;
  String.append(_:)(v1);
  type metadata accessor for Participant.Caption(0);
  OUTLINED_FUNCTION_33();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type Date and conformance Date, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  v5._countAndFlagsBits = OUTLINED_FUNCTION_289_4();
  OUTLINED_FUNCTION_49(v5);
  OUTLINED_FUNCTION_30_4();
  v2 = OUTLINED_FUNCTION_309_3();
  OUTLINED_FUNCTION_185_4(v2 & 0xFFFFFFFFFFFFLL | 0x7055000000000000, 0x3A6465746164);
  v6._countAndFlagsBits = OUTLINED_FUNCTION_289_4();
  OUTLINED_FUNCTION_49(v6);
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_95_15(17, 0x80000001BD68B3F0);
  OUTLINED_FUNCTION_2_3();
}

void Participant.CaptionInfo.with(history:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  int *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  BOOL v69;
  char v70;
  BOOL v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  char v88;
  BOOL v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98[4];
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;

  OUTLINED_FUNCTION_93();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v9 = OUTLINED_FUNCTION_33();
  v105 = *(_QWORD *)(v9 - 8);
  v106 = v9;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_5_27();
  v104 = v11;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v12);
  v103 = (char *)v98 - v13;
  v102 = OUTLINED_FUNCTION_247_4();
  v14 = *(_QWORD *)(v102 - 8);
  MEMORY[0x1E0C80A78](v102);
  OUTLINED_FUNCTION_79();
  OUTLINED_FUNCTION_231();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_18_0();
  v99 = v16;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_18_0();
  v108 = v18;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_18_0();
  v111 = v20;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v21);
  OUTLINED_FUNCTION_18_0();
  v101 = v22;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v23);
  v110 = (uint64_t)v98 - v24;
  OUTLINED_FUNCTION_8_4();
  v26 = MEMORY[0x1E0C80A78](v25);
  OUTLINED_FUNCTION_307_2(v26, v27, v28, v29, v30, v31, v32, v33, v98[0]);
  v98[2] = v4;
  v98[3] = v2;
  if (v8)
    OUTLINED_FUNCTION_5_0();
  else
    v6 = MEMORY[0x1E0DEE9D8];
  v114 = v6;
  OUTLINED_FUNCTION_25_2();
  specialized Array.append<A>(contentsOf:)();
  specialized BidirectionalCollection.suffix(_:)(50, v114, (uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t))specialized Array.index(_:offsetBy:limitedBy:), (void (*)(_QWORD))type metadata accessor for Participant.Caption);
  v34 = specialized Array.init<A>(_:)();
  v35 = *(_QWORD *)(v34 + 16);
  v36 = v107;
  if (!v35)
  {
LABEL_53:
    swift_bridgeObjectRelease();
    v96 = OUTLINED_FUNCTION_25_2();
    v97 = specialized _copyCollectionToContiguousArray<A>(_:)(v96);
    OUTLINED_FUNCTION_53();
    v114 = v97;
    swift_retain();
    specialized MutableCollection<>.sort(by:)(&v114);
    swift_release();
    OUTLINED_FUNCTION_72_9();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_52_1();
    return;
  }
  v37 = *(unsigned __int8 *)(v14 + 80);
  v98[1] = v34;
  v38 = v34 + ((v37 + 32) & ~v37);
  v39 = MEMORY[0x1E0DEE9E0];
  v40 = *(_QWORD *)(v14 + 72);
  v41 = v111;
  v112 = v40;
  v100 = v0;
  while (1)
  {
    v113 = v38;
    v42 = OUTLINED_FUNCTION_65_2();
    OUTLINED_FUNCTION_135(v42, v43);
    if (*(_QWORD *)(v39 + 16))
    {
      specialized __RawDictionaryStorage.find<A>(_:)();
      if ((v45 & 1) != 0)
      {
        v109 = v35;
        v46 = v101;
        OUTLINED_FUNCTION_135(*(_QWORD *)(v39 + 56) + v44 * v40, v101);
        v47 = v110;
        OUTLINED_FUNCTION_163(v46, v110);
        v48 = (int *)v102;
        v49 = *(int *)(v102 + 20);
        v50 = v36 + v49;
        v51 = v47 + v49;
        if ((static Date.> infix(_:_:)() & 1) != 0)
          v52 = v36;
        else
          v52 = v47;
        OUTLINED_FUNCTION_135(v52, v41);
        lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type Date and conformance Date, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
        v53 = dispatch thunk of static Comparable.< infix(_:_:)();
        if ((v53 & 1) != 0)
          v54 = v51;
        else
          v54 = v50;
        v55 = (uint64_t)v103;
        OUTLINED_FUNCTION_326_4(v53, v54);
        OUTLINED_FUNCTION_237_4(v111 + v48[5], v55);
        v56 = v48[6];
        v57 = v36 + v56;
        v58 = v47 + v56;
        v59 = dispatch thunk of static Comparable.>= infix(_:_:)();
        if ((v59 & 1) != 0)
          v60 = v58;
        else
          v60 = v57;
        v61 = v104;
        OUTLINED_FUNCTION_326_4(v59, v60);
        OUTLINED_FUNCTION_237_4(v111 + v48[6], v61);
        v41 = v111;
        v62 = (uint64_t *)(v111 + v48[7]);
        v64 = *v62;
        v63 = v62[1];
        v65 = v64 & 0xFFFFFFFFFFFFLL;
        if ((v63 & 0x2000000000000000) != 0)
          v66 = HIBYTE(v63) & 0xF;
        else
          v66 = v65;
        if (v66)
        {
          outlined init with copy of ConversationControlsAppLaunchButtonType(v111, v108, type metadata accessor for Participant.Caption);
          OUTLINED_FUNCTION_220_2();
          OUTLINED_FUNCTION_111_9();
          OUTLINED_FUNCTION_157_3();
          if (v69)
            goto LABEL_56;
          v40 = v67;
          v70 = v68;
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<Int, Participant.Caption>);
          v71 = OUTLINED_FUNCTION_110_10();
          v0 = v100;
          v36 = v107;
          v35 = v109;
          if (v71)
          {
            OUTLINED_FUNCTION_178_3();
            OUTLINED_FUNCTION_217_3();
            if (!v73)
              goto LABEL_60;
            v40 = v72;
          }
          v39 = v114;
          if ((v70 & 1) != 0)
          {
            v74 = *(_QWORD *)(v114 + 56) + v40 * v112;
            v40 = v112;
            v75 = v108;
LABEL_45:
            outlined assign with take of Participant.Caption(v75, v74, type metadata accessor for Participant.Caption);
LABEL_51:
            swift_bridgeObjectRelease();
            v85 = v113;
            OUTLINED_FUNCTION_137_1(v110);
            OUTLINED_FUNCTION_137_1(v36);
            v84 = v41;
            goto LABEL_52;
          }
          OUTLINED_FUNCTION_30_59();
          OUTLINED_FUNCTION_163(v108, v91);
          v92 = *(_QWORD *)(v39 + 16);
          v69 = __OFADD__(v92, 1);
          v93 = v92 + 1;
          if (v69)
            goto LABEL_58;
        }
        else
        {
          outlined init with copy of ConversationControlsAppLaunchButtonType(v47, v99, type metadata accessor for Participant.Caption);
          OUTLINED_FUNCTION_220_2();
          OUTLINED_FUNCTION_111_9();
          OUTLINED_FUNCTION_157_3();
          if (v69)
            goto LABEL_57;
          v40 = v86;
          v88 = v87;
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<Int, Participant.Caption>);
          v89 = OUTLINED_FUNCTION_110_10();
          v0 = v100;
          v36 = v107;
          v35 = v109;
          if (v89)
          {
            OUTLINED_FUNCTION_178_3();
            OUTLINED_FUNCTION_217_3();
            if (!v73)
              goto LABEL_60;
            v40 = v90;
          }
          v39 = v114;
          if ((v88 & 1) != 0)
          {
            v74 = *(_QWORD *)(v114 + 56) + v40 * v112;
            v40 = v112;
            v75 = v99;
            goto LABEL_45;
          }
          OUTLINED_FUNCTION_30_59();
          OUTLINED_FUNCTION_163(v99, v94);
          v95 = *(_QWORD *)(v39 + 16);
          v69 = __OFADD__(v95, 1);
          v93 = v95 + 1;
          if (v69)
            goto LABEL_59;
        }
        *(_QWORD *)(v39 + 16) = v93;
        goto LABEL_51;
      }
    }
    OUTLINED_FUNCTION_135(v36, v0);
    OUTLINED_FUNCTION_220_2();
    OUTLINED_FUNCTION_111_9();
    OUTLINED_FUNCTION_157_3();
    if (v69)
      break;
    v40 = v76;
    v78 = v77;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<Int, Participant.Caption>);
    if (OUTLINED_FUNCTION_110_10())
    {
      OUTLINED_FUNCTION_178_3();
      OUTLINED_FUNCTION_217_3();
      if (!v73)
        goto LABEL_60;
      v40 = v79;
    }
    v39 = v114;
    if ((v78 & 1) != 0)
    {
      v80 = *(_QWORD *)(v114 + 56) + v40 * v112;
      v40 = v112;
      outlined assign with take of Participant.Caption(v0, v80, type metadata accessor for Participant.Caption);
    }
    else
    {
      OUTLINED_FUNCTION_30_59();
      OUTLINED_FUNCTION_163(v0, v81);
      v82 = *(_QWORD *)(v39 + 16);
      v69 = __OFADD__(v82, 1);
      v83 = v82 + 1;
      if (v69)
        goto LABEL_55;
      *(_QWORD *)(v39 + 16) = v83;
    }
    swift_bridgeObjectRelease();
    v84 = v36;
    v85 = v113;
LABEL_52:
    OUTLINED_FUNCTION_137_1(v84);
    v38 = v85 + v40;
    if (!--v35)
      goto LABEL_53;
  }
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
LABEL_58:
  __break(1u);
LABEL_59:
  __break(1u);
LABEL_60:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  swift_release();
  __break(1u);
}

uint64_t Participant.ScreenInfo.deviceFamily.getter()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 208))
    return 0;
  else
    return *(_QWORD *)(v0 + 184);
}

void Participant.isMomentsAvailable.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v6;

  OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_78();
  v3 = *(unsigned __int8 *)(v0 + *(int *)(v2 + 24));
  OUTLINED_FUNCTION_165_0(v0, v4, v5);
  if (v3 == 1)
    Participant.hasReducedQualityVideo.getter();
  OUTLINED_FUNCTION_15_12(v6, type metadata accessor for Participant);
  OUTLINED_FUNCTION_18();
}

BOOL Participant.isLocal.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for Participant(0) + 28)) == 0;
}

void Participant.isKickingAvailable.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  double v20;
  uint64_t (*v21)(uint64_t);
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  OUTLINED_FUNCTION_149_1();
  v27 = v3;
  v28 = v4;
  v5 = v0;
  v6 = type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Participant.State(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_168();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_132_9();
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v26 - v15;
  OUTLINED_FUNCTION_135(v5, (uint64_t)v12);
  if (OUTLINED_FUNCTION_27_17() != 4)
  {
    v21 = type metadata accessor for Participant.State;
    v22 = (uint64_t)v12;
LABEL_11:
    outlined destroy of AccountUpdateNotice(v22, v21);
    goto LABEL_12;
  }
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
  v18 = (uint64_t)&v12[*(int *)(v17 + 48)];
  OUTLINED_FUNCTION_7_2((uint64_t *)&v12[*(int *)(v17 + 64)]);
  OUTLINED_FUNCTION_291((uint64_t)v16, (uint64_t)v12, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 32));
  outlined destroy of Participant.MediaInfo(v18);
  Date.timeIntervalSinceNow.getter();
  v20 = v19;
  OUTLINED_FUNCTION_291(v1, (uint64_t)v16, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
  if (v20 <= 0.0)
  {
    Date.timeIntervalSinceNow.getter();
    if (one-time initialization token for shared != -1)
      swift_once();
    OUTLINED_FUNCTION_274_4();
  }
  OUTLINED_FUNCTION_230_1(v1);
  OUTLINED_FUNCTION_230_1((uint64_t)v16);
  v23 = *(unsigned __int8 *)(v5 + *(int *)(v6 + 24) + 3);
  OUTLINED_FUNCTION_71_1(v5, v24, type metadata accessor for Participant);
  if (v23 != 1)
  {
    v21 = type metadata accessor for Participant;
    v22 = (uint64_t)v9;
    goto LABEL_11;
  }
  OUTLINED_FUNCTION_315(v25, type metadata accessor for Participant);
LABEL_12:
  OUTLINED_FUNCTION_7_7();
}

void Participant.canShowKickButtonOnVideoTile.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v7[40];
  _BYTE v8[32];

  v1 = v0;
  OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_30_6();
  if (one-time initialization token for shared != -1)
    swift_once();
  v3 = (*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 608))();
  OUTLINED_FUNCTION_447(v1, v4, type metadata accessor for Participant);
  if ((v3 & 1) != 0)
  {
    Participant.aspectRatio.getter();
    OUTLINED_FUNCTION_35_2(v6, type metadata accessor for Participant);
    outlined init with take of Any?((uint64_t)v7, (uint64_t)v8, &demangling cache variable for type metadata for AspectRatio?);
  }
  else
  {
    OUTLINED_FUNCTION_35_2(v5, type metadata accessor for Participant);
  }
  OUTLINED_FUNCTION_18();
}

void Participant.videoInfo.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[11];
  __int16 v23;

  OUTLINED_FUNCTION_93();
  OUTLINED_FUNCTION_159_6();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_25_49(v8, v9, v19);
  v10 = OUTLINED_FUNCTION_199_2();
  if ((_DWORD)v10 == 4)
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
    v12 = (const void *)(v1 + *(int *)(v11 + 48));
    OUTLINED_FUNCTION_7_2((uint64_t *)(v1 + *(int *)(v11 + 64)));
    OUTLINED_FUNCTION_25_58(v22, v12);
    v13 = OUTLINED_FUNCTION_33();
    OUTLINED_FUNCTION_75(v13);
    v14 = v22[2];
    v2 = v22[5];
    v20 = v22[4];
    v21 = v22[3];
    v3 = v22[6];
    v4 = v22[7];
    v5 = v22[8];
    v6 = v22[9];
    v15 = v22[10];
    v16 = v23;
    OUTLINED_FUNCTION_8_8();
    outlined destroy of Participant.MediaInfo((uint64_t)v22);
    v18 = v20;
    v17 = v21;
  }
  else
  {
    OUTLINED_FUNCTION_315(v10, type metadata accessor for Participant.State);
    v14 = 0;
    OUTLINED_FUNCTION_205_2();
    v15 = 0;
    v16 = 0;
  }
  *(_QWORD *)v0 = v14;
  *(_QWORD *)(v0 + 8) = v17;
  *(_QWORD *)(v0 + 16) = v18;
  *(_QWORD *)(v0 + 24) = v2;
  *(_QWORD *)(v0 + 32) = v3;
  *(_QWORD *)(v0 + 40) = v4;
  *(_QWORD *)(v0 + 48) = v5;
  *(_QWORD *)(v0 + 56) = v6;
  *(_QWORD *)(v0 + 64) = v15;
  *(_WORD *)(v0 + 72) = v16;
  OUTLINED_FUNCTION_52_1();
}

void Participant.isReceivingVideoFrames.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_8_97();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_51_2(v2, v3, v7);
  v4 = OUTLINED_FUNCTION_42();
  if ((_DWORD)v4 == 4)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
    OUTLINED_FUNCTION_7_2((uint64_t *)(v0 + *(int *)(v5 + 64)));
    OUTLINED_FUNCTION_11_92();
    v6 = OUTLINED_FUNCTION_33();
    OUTLINED_FUNCTION_16_0(v6);
    OUTLINED_FUNCTION_5_0();
    OUTLINED_FUNCTION_47_26();
    if (v8)
      OUTLINED_FUNCTION_27();
  }
  else
  {
    OUTLINED_FUNCTION_15_12(v4, type metadata accessor for Participant.State);
  }
  OUTLINED_FUNCTION_29_60();
}

void Participant.isVideoPaused.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_8_97();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_51_2(v2, v3, v7);
  v4 = OUTLINED_FUNCTION_42();
  if ((_DWORD)v4 == 4)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
    OUTLINED_FUNCTION_7_2((uint64_t *)(v0 + *(int *)(v5 + 64)));
    OUTLINED_FUNCTION_11_92();
    v6 = OUTLINED_FUNCTION_33();
    OUTLINED_FUNCTION_16_0(v6);
    OUTLINED_FUNCTION_5_0();
    OUTLINED_FUNCTION_47_26();
    if (v8)
      OUTLINED_FUNCTION_27();
  }
  else
  {
    OUTLINED_FUNCTION_15_12(v4, type metadata accessor for Participant.State);
  }
  OUTLINED_FUNCTION_29_60();
}

void Participant.isVideoSuspended.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_8_97();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_51_2(v2, v3, v7);
  v4 = OUTLINED_FUNCTION_42();
  if ((_DWORD)v4 == 4)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
    OUTLINED_FUNCTION_7_2((uint64_t *)(v0 + *(int *)(v5 + 64)));
    OUTLINED_FUNCTION_11_92();
    v6 = OUTLINED_FUNCTION_33();
    OUTLINED_FUNCTION_16_0(v6);
    OUTLINED_FUNCTION_5_0();
    OUTLINED_FUNCTION_47_26();
    if (v8)
      OUTLINED_FUNCTION_27();
  }
  else
  {
    OUTLINED_FUNCTION_15_12(v4, type metadata accessor for Participant.State);
  }
  OUTLINED_FUNCTION_29_60();
}

void Participant.videoDegradedState.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_8_97();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_51_2(v2, v3, v7);
  v4 = OUTLINED_FUNCTION_42();
  if ((_DWORD)v4 == 4)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
    OUTLINED_FUNCTION_7_2((uint64_t *)(v0 + *(int *)(v5 + 64)));
    OUTLINED_FUNCTION_11_92();
    v6 = OUTLINED_FUNCTION_33();
    OUTLINED_FUNCTION_16_0(v6);
    OUTLINED_FUNCTION_5_0();
    OUTLINED_FUNCTION_47_26();
    if (v8)
      OUTLINED_FUNCTION_27();
  }
  else
  {
    OUTLINED_FUNCTION_15_12(v4, type metadata accessor for Participant.State);
  }
  OUTLINED_FUNCTION_29_60();
}

double Participant.videoProvider(for:)@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  uint64_t EnumCaseMultiPayload;
  uint64_t v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  double result;
  _QWORD v13[42];

  v3 = v1;
  OUTLINED_FUNCTION_250_1();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_16_2();
  outlined init with copy of ConversationControlsAppLaunchButtonType(v3, v2, v6);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((_DWORD)EnumCaseMultiPayload == 4)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
    v9 = (const void *)(v2 + *(int *)(v8 + 48));
    OUTLINED_FUNCTION_7_2((uint64_t *)(v2 + *(int *)(v8 + 64)));
    OUTLINED_FUNCTION_25_58(v13, v9);
    v10 = OUTLINED_FUNCTION_33();
    OUTLINED_FUNCTION_2_18(v10);
    v11 = v13[2];
    OUTLINED_FUNCTION_25_2();
    OUTLINED_FUNCTION_47_26();
    if (v11)
    {
      specialized Dictionary.subscript.getter();
      OUTLINED_FUNCTION_53();
      return result;
    }
  }
  else
  {
    OUTLINED_FUNCTION_22_29(EnumCaseMultiPayload, type metadata accessor for Participant.State);
  }
  *(_QWORD *)(a1 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

#error "1BD3FD9D0: call analysis failed (funcsize=45)"

uint64_t Participant.VideoInfo.cameraType.getter()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  _QWORD v7[3];
  uint64_t v8;

  specialized Dictionary.subscript.getter();
  if (!v8)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v7, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
    v4 = 0u;
    v5 = 0u;
    v6 = 0;
    goto LABEL_7;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantVideoProvider);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CameraContainer);
  if ((swift_dynamicCast() & 1) == 0)
  {
    v6 = 0;
    v4 = 0u;
    v5 = 0u;
    goto LABEL_7;
  }
  if (!*((_QWORD *)&v5 + 1))
  {
LABEL_7:
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v4, &demangling cache variable for type metadata for CameraContainer?);
    return 2;
  }
  outlined init with take of Notice(&v4, (uint64_t)v7);
  __swift_project_boxed_opaque_existential_1(v7, v8);
  v0 = OUTLINED_FUNCTION_65_2();
  v2 = v1(v0) & 1;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  return v2;
}

void Participant.isEffectsEnabled.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  uint64_t v4;

  type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_447(v0, v2, v3);
  OUTLINED_FUNCTION_35_2(v4, type metadata accessor for Participant);
  OUTLINED_FUNCTION_18();
}

void Participant.shortName.getter()
{
  void *v0;

  Participant.contactDetails.getter();
  OUTLINED_FUNCTION_305_1();
  OUTLINED_FUNCTION_13_3();

  Participant.name(_:)();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_26_40();
}

void Participant.isDestinationTemporary.getter()
{
  Participant.isDestinationTemporary.getter();
}

{
  const char **v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;

  v2 = *(void **)(v1 + *(int *)(OUTLINED_FUNCTION_89_21() + 28));
  if (v2)
  {
    v3 = objc_msgSend(v2, sel_value);
    v4 = v3;
    if (!v3)
    {
      v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v4 = (void *)MEMORY[0x1C3B72E00](v5);
      v3 = (id)OUTLINED_FUNCTION_2_1();
    }
    OUTLINED_FUNCTION_25_1((uint64_t)v3, *v0);

  }
  OUTLINED_FUNCTION_18();
}

uint64_t type metadata accessor for Participant(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for Participant);
}

BOOL Participant.intendsToScreenShare.getter()
{
  char v0;

  Participant.screenState.getter();
  return v0 != 2;
}

double Participant.ScreenInfo.contentsSize.getter()
{
  uint64_t v0;
  double v1;
  id v2;
  double v3;
  char v4;
  char v5;
  uint64_t v6;
  double v7;
  double v8;

  if ((*(_BYTE *)(v0 + 208) & 1) != 0)
  {
    v2 = objc_msgSend((id)objc_opt_self(), sel_defaultDisplayScale);
    objc_msgSend(v2, sel_doubleValue);

  }
  if ((*(_QWORD *)(v0 + 48) | 2) == 3)
  {
    v3 = OUTLINED_FUNCTION_206_2();
    if ((v4 & 1) == 0)
      v3 = *(double *)(v0 + 72);
  }
  else
  {
    v3 = OUTLINED_FUNCTION_206_2();
    if ((v5 & 1) == 0)
      v3 = *(double *)(v0 + 88);
  }
  OUTLINED_FUNCTION_261_3(v3);
  OUTLINED_FUNCTION_59(v6, (unint64_t *)&lazy cache variable for type metadata for UIView);
  static UIView.screenScale.getter();
  v8 = round(v1 * v7) / v7;
  static UIView.screenScale.getter();
  return v8;
}

void Participant.isOtherInvitedParticipant.getter()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);
  uint64_t v2;
  uint64_t v4;

  OUTLINED_FUNCTION_249_3();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_2_27(v1, v2, v4);
  OUTLINED_FUNCTION_3_14();
  OUTLINED_FUNCTION_336_3();
  __asm { BR              X10 }
}

void sub_1BD3FDDAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
  OUTLINED_FUNCTION_7_2((uint64_t *)(v0 + *(int *)(v1 + 64)));
  OUTLINED_FUNCTION_332_2();
  v2 = OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_17_1(v2);
  OUTLINED_FUNCTION_18();
}

uint64_t Participant.idsIdentifier.getter()
{
  _QWORD *v0;

  type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_312_3();
  if (*v0)
    return v0[1];
  else
    return 0;
}

void Participant.isActiveWithAV.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_8_97();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_51_2(v2, v3, v7);
  v4 = OUTLINED_FUNCTION_42();
  if ((_DWORD)v4 == 4)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
    OUTLINED_FUNCTION_7_2((uint64_t *)(v0 + *(int *)(v5 + 64)));
    OUTLINED_FUNCTION_11_92();
    v6 = OUTLINED_FUNCTION_33();
    OUTLINED_FUNCTION_16_0(v6);
    OUTLINED_FUNCTION_47_26();
  }
  else
  {
    OUTLINED_FUNCTION_15_12(v4, type metadata accessor for Participant.State);
  }
  OUTLINED_FUNCTION_29_60();
}

ConversationKit::Participant::Capabilities __swiftcall Participant.Capabilities.init(momentsCapture:screenSharing:gondolaCalling:kickable:requestScreenSharing:)(Swift::Bool momentsCapture, Swift::Bool screenSharing, Swift::Bool gondolaCalling, Swift::Bool kickable, Swift::Bool requestScreenSharing)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = 0x100000000;
  if (!requestScreenSharing)
    v5 = 0;
  v6 = 0x1000000;
  if (!kickable)
    v6 = 0;
  v7 = 0x10000;
  if (!gondolaCalling)
    v7 = 0;
  v8 = 256;
  if (!screenSharing)
    v8 = 0;
  return (ConversationKit::Participant::Capabilities)(v8 & 0xFFFFFFFFFFFFFFFELL | momentsCapture | v7 | v6 | v5);
}

uint64_t Participant.RemoteIdentifiers.init(handle:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 1;
  *(_QWORD *)(a2 + 24) = 0;
  *(_QWORD *)(a2 + 32) = 0;
  return result;
}

void Participant.init(state:identifier:capabilities:remoteIdentifiers:gradient:nickname:countdownInfo:isAuthorizedToChangeGroupMembership:cache:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unsigned __int8 a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 *v28;
  __int128 *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  int *v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _BYTE *v54;
  unint64_t v55;
  uint64x2_t v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  int *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  __int128 v73;
  unint64_t v74;
  uint64_t v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;

  OUTLINED_FUNCTION_93();
  v79 = v24;
  v80 = v25;
  v77 = v26;
  v78 = v27;
  v29 = v28;
  v74 = v30;
  v32 = v31;
  v34 = v33;
  v83 = a22;
  v84 = v35;
  v76 = a21;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v36);
  v71 = (uint64_t)&v70 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v38);
  v70 = (uint64_t)&v70 - v39;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant.CountdownInfo?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v40);
  v41 = OUTLINED_FUNCTION_98_11();
  v42 = (int *)type metadata accessor for Participant.CountdownInfo(v41);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v43);
  OUTLINED_FUNCTION_101_15();
  MEMORY[0x1E0C80A78](v44);
  v81 = (char *)&v70 - v45;
  v46 = *v29;
  v72 = v29[1];
  v73 = v46;
  v47 = *((_QWORD *)v29 + 4);
  v48 = (int *)type metadata accessor for Participant(0);
  v49 = v34 + v48[7];
  v50 = (_QWORD *)(v34 + v48[9]);
  *(_BYTE *)(v34 + v48[10]) = 0;
  *(_QWORD *)(v34 + v48[11]) = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(v34 + v48[12]) = 0;
  v82 = v32;
  OUTLINED_FUNCTION_447(v32, v51, type metadata accessor for Participant.State);
  v52 = v34 + v48[5];
  v53 = OUTLINED_FUNCTION_33_0();
  v75 = *(_QWORD *)(v53 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v75 + 16))(v52, v84, v53);
  v54 = (_BYTE *)(v34 + v48[6]);
  v55 = v74;
  *v54 = v74 & 1;
  v56 = (uint64x2_t)vdupq_n_s64(v55);
  OUTLINED_FUNCTION_167_5((uint64_t)v54, v56, (int32x4_t)vshlq_u64(v56, (uint64x2_t)xmmword_1BD65EC50), (uint64x2_t)xmmword_1BD65EC60);
  v57 = v72;
  *(_OWORD *)v49 = v73;
  *(_OWORD *)(v49 + 16) = v57;
  *(_QWORD *)(v49 + 32) = v47;
  *(_QWORD *)(v34 + v48[8]) = v77;
  v58 = v79;
  *v50 = v78;
  v50[1] = v58;
  v59 = v80;
  *(_BYTE *)(v34 + v48[15]) = v76;
  *(_BYTE *)(v34 + v48[13]) = 0;
  v60 = OUTLINED_FUNCTION_311_0();
  outlined init with copy of FeatureEligibility?(v60, v61, &demangling cache variable for type metadata for Participant.CountdownInfo?);
  v62 = OUTLINED_FUNCTION_69_0(v23, 1, (uint64_t)v42);
  if (v63)
  {
    OUTLINED_FUNCTION_33();
    v64 = v70;
    OUTLINED_FUNCTION_8_2(v70);
    v65 = v71;
    OUTLINED_FUNCTION_8_2(v71);
    OUTLINED_FUNCTION_8_2(v22);
    v79 = v53;
    v66 = v42;
    v67 = v22 + v42[5];
    OUTLINED_FUNCTION_8_2(v67);
    v42 = (int *)&demangling cache variable for type metadata for Date?;
    outlined assign with take of Participant?(v64, v22, (uint64_t *)&demangling cache variable for type metadata for Date?);
    outlined assign with take of Participant?(v65, v67, (uint64_t *)&demangling cache variable for type metadata for Date?);
    *(_BYTE *)(v22 + v66[6]) = 0;
    OUTLINED_FUNCTION_322_2(v22, v68, type metadata accessor for Participant.CountdownInfo);
    OUTLINED_FUNCTION_9_42(v59);
    (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v84, v79);
    outlined destroy of AccountUpdateNotice(v82, type metadata accessor for Participant.State);
    OUTLINED_FUNCTION_9_42(v23);
  }
  else
  {
    OUTLINED_FUNCTION_219(v62, &demangling cache variable for type metadata for Participant.CountdownInfo?);
    (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v84, v53);
    outlined destroy of AccountUpdateNotice(v82, type metadata accessor for Participant.State);
    OUTLINED_FUNCTION_322_2(v23, v69, type metadata accessor for Participant.CountdownInfo);
  }
  outlined init with take of StagedCollaboration((uint64_t)v42, v34 + v48[14], type metadata accessor for Participant.CountdownInfo);
  *(_QWORD *)(v34 + v48[16]) = v83;
  OUTLINED_FUNCTION_52_1();
}

ConversationKit::Participant::AVInfo __swiftcall Participant.AVInfo.init(isAVLess:audioToken:)(Swift::Bool isAVLess, Swift::Int audioToken)
{
  Swift::Bool v2;
  ConversationKit::Participant::AVInfo result;

  v2 = isAVLess;
  result.audioToken = audioToken;
  result.isAVLess = v2;
  return result;
}

ConversationKit::Participant::VideoState __swiftcall Participant.VideoState.init(isReceivingVideoFrames:isVideoSuspended:isVideoPaused:videoDegradedState:isVideoDegradedUI:isVideoReconnecting:isVideoMirrored:isVideoCroppedByAspectRatio:)(Swift::Bool isReceivingVideoFrames, Swift::Bool isVideoSuspended, Swift::Bool isVideoPaused, ConversationKit::Participant::VideoDegradedState videoDegradedState, Swift::Bool isVideoDegradedUI, Swift::Bool isVideoReconnecting, Swift::Bool isVideoMirrored, Swift::Bool isVideoCroppedByAspectRatio)
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  __int16 v16;
  ConversationKit::Participant::VideoState result;

  v8 = 256;
  if (!isVideoSuspended)
    v8 = 0;
  v9 = v8 & 0xFFFFFFFFFFFFFFFELL | isReceivingVideoFrames;
  v10 = 0x10000;
  if (!isVideoPaused)
    v10 = 0;
  v11 = (v9 | v10) & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)videoDegradedState << 24);
  v12 = 0x100000000;
  if (!isVideoDegradedUI)
    v12 = 0;
  v13 = 0x10000000000;
  if (!isVideoMirrored)
    v13 = 0;
  v14 = 0x1000000000000;
  if (!isVideoReconnecting)
    v14 = 0;
  v15 = v11 | v12 | v14 | v13;
  v16 = isVideoCroppedByAspectRatio;
  result.isReceivingVideoFrames = v15;
  result.isVideoSuspended = BYTE1(v15);
  result.isVideoPaused = BYTE2(v15);
  result.videoDegradedState = BYTE3(v15);
  result.isVideoDegradedUI = BYTE4(v15);
  result.isVideoMirrored = BYTE5(v15);
  result.isVideoReconnecting = BYTE6(v15);
  result.isChangingMirroredVideo = HIBYTE(v15);
  result.isVideoCroppedByAspectRatio = v16;
  result.isChangingExternalCameraUsageOnIPad = HIBYTE(v16);
  return result;
}

uint64_t default argument 5 of Participant.VideoInfo.init(providers:state:orientation:cameraPosition:aspectRatio:isMixedWithScreen:)()
{
  return 0;
}

int8x8_t Participant.VideoInfo.init(providers:state:orientation:cameraPosition:aspectRatio:isMixedWithScreen:)@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, __int16 a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X8>)
{
  unint64_t v15;
  char v16;
  uint64x2_t v17;
  int16x8_t v18;
  __int128 v19;
  __int128 v20;
  int8x8_t result;
  _OWORD v22[2];
  char v23;

  v15 = a2 >> 24;
  outlined init with take of AspectRatio(a6, (uint64_t)v22);
  v16 = v23;
  v17 = (uint64x2_t)vdupq_n_s64(a2);
  v18 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v17, (uint64x2_t)xmmword_1BD64A110), (int32x4_t)vshlq_u64(v17, (uint64x2_t)xmmword_1BD64A100));
  *(int8x8_t *)v18.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v18), (int8x8_t)0x1000100010001);
  v19 = v22[0];
  v20 = v22[1];
  *(_QWORD *)a8 = a1;
  *(_BYTE *)(a8 + 8) = a2 & 1;
  *(_BYTE *)(a8 + 9) = BYTE1(a2) & 1;
  *(_BYTE *)(a8 + 10) = BYTE2(a2) & 1;
  *(_BYTE *)(a8 + 11) = v15;
  result = vmovn_s16(v18);
  *(_DWORD *)(a8 + 12) = result.i32[0];
  *(_BYTE *)(a8 + 16) = a3 & 1;
  *(_BYTE *)(a8 + 17) = HIBYTE(a3) & 1;
  *(_QWORD *)(a8 + 24) = a4;
  *(_BYTE *)(a8 + 32) = a5;
  *(_OWORD *)(a8 + 40) = v19;
  *(_OWORD *)(a8 + 56) = v20;
  *(_BYTE *)(a8 + 72) = v16;
  *(_BYTE *)(a8 + 73) = a7;
  return result;
}

void Participant.asJoined(avInfo:videoInfo:screenInfo:captionInfo:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  uint64_t v28;
  uint64_t v29;

  OUTLINED_FUNCTION_153_6();
  a27 = v28;
  a28 = v29;
  Participant.copresenceInfo.getter(&a9);
  Participant.asJoined(avInfo:videoInfo:screenInfo:captionInfo:copresenceInfo:)();
  outlined retain of SymbolImageDescription?(&a9, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined consume of Participant.CopresenceInfo?);
  OUTLINED_FUNCTION_21_3();
}

#error "1BD3FE56C: call analysis failed (funcsize=84)"

void Participant.isPendingAuthorization.getter()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);
  uint64_t v2;
  uint64_t v4;

  OUTLINED_FUNCTION_249_3();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_2_27(v1, v2, v4);
  OUTLINED_FUNCTION_3_14();
  OUTLINED_FUNCTION_336_3();
  __asm { BR              X10 }
}

void sub_1BD3FE5F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
  OUTLINED_FUNCTION_7_2((uint64_t *)(v0 + *(int *)(v1 + 64)));
  OUTLINED_FUNCTION_332_2();
  v2 = OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_17_1(v2);
  OUTLINED_FUNCTION_18();
}

uint64_t Array<A>.sorted()()
{
  uint64_t v0;

  v0 = type metadata accessor for Array();
  MEMORY[0x1C3B750C8](MEMORY[0x1E0DEAF38], v0);
  return Sequence.sorted(by:)();
}

void Participant.RemoteIdentifiers.init(participant:)()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_96();
  v1 = v0;
  v3 = v2;
  v4 = objc_msgSend(v0, sel_handle);
  v5 = OUTLINED_FUNCTION_25_1((uint64_t)v4, sel_identifier);
  v6 = OUTLINED_FUNCTION_25_1((uint64_t)v5, sel_avcIdentifier);
  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v9 = v8;

  *(_QWORD *)v3 = v4;
  *(_QWORD *)(v3 + 8) = v5;
  *(_BYTE *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = v7;
  *(_QWORD *)(v3 + 32) = v9;
  OUTLINED_FUNCTION_65_1();
}

void Participant.State.debugDescription.getter()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);
  uint64_t v2;
  char *v3;
  uint64_t v4;

  OUTLINED_FUNCTION_12_98();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_56_36(v1, v2, v4);
  v3 = (char *)sub_1BD3FE834 + 4 * aO[OUTLINED_FUNCTION_212() + 2];
  __asm { BR              X10 }
}

uint64_t sub_1BD3FE834()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_75(v0);
  return 0x676E69746961772ELL;
}

void Participant.State.isWaiting.getter()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_249_3();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_2_27(v1, v2, v5);
  v3 = OUTLINED_FUNCTION_3_14();
  if ((_DWORD)v3 == 1)
  {
    v4 = OUTLINED_FUNCTION_33();
    OUTLINED_FUNCTION_17_1(v4);
  }
  else
  {
    OUTLINED_FUNCTION_35_2(v3, type metadata accessor for Participant.State);
  }
  OUTLINED_FUNCTION_18();
}

id Participant.RemoteIdentifiers.handle.getter()
{
  id *v0;

  return *v0;
}

void Participant.RemoteIdentifiers.handle.setter(void *a1)
{
  id *v1;

  *v1 = a1;
  OUTLINED_FUNCTION_0();
}

uint64_t (*Participant.RemoteIdentifiers.handle.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Participant.RemoteIdentifiers.idsIdentifier.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void Participant.RemoteIdentifiers.avcIdentifier.getter()
{
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void Participant.RemoteIdentifiers.avcIdentifier.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_6_6();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 24) = v2;
  *(_QWORD *)(v1 + 32) = v0;
  OUTLINED_FUNCTION_18();
}

uint64_t (*Participant.RemoteIdentifiers.avcIdentifier.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.RemoteIdentifiers.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  char v3;
  uint64_t v4;
  id v5;
  Swift::String v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  Swift::String v11;
  Swift::String v12;

  v1 = 7104878;
  v2 = *(void **)v0;
  v3 = *(_BYTE *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 32);
  OUTLINED_FUNCTION_147();
  _StringGuts.grow(_:)(55);
  OUTLINED_FUNCTION_308_1();
  v11._countAndFlagsBits = 0xD000000000000019;
  v11._object = (void *)0x80000001BD68B430;
  OUTLINED_FUNCTION_49(v11);
  v5 = objc_msgSend(v2, sel_value);
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  v12._countAndFlagsBits = OUTLINED_FUNCTION_90_2();
  OUTLINED_FUNCTION_49(v12);
  OUTLINED_FUNCTION_53();
  v6._countAndFlagsBits = 0x3D4449736469202CLL;
  v6._object = (void *)0xE800000000000000;
  String.append(_:)(v6);
  if ((v3 & 1) != 0)
    v7 = 7104878;
  else
    v7 = OUTLINED_FUNCTION_90_2();
  OUTLINED_FUNCTION_19_39(v7);
  v8 = OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_24_0(v8, 0x80000001BD68B450);
  if (v4)
  {
    OUTLINED_FUNCTION_8_8();
    v1 = OUTLINED_FUNCTION_90_2();
  }
  OUTLINED_FUNCTION_173_5(v1);
  OUTLINED_FUNCTION_2_1();
  return v10;
}

void Participant.RemoteIdentifiers.hash(into:)()
{
  uint64_t v0;
  Swift::UInt64 v1;
  int v2;
  uint64_t v3;
  id v4;

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(unsigned __int8 *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = *(id *)v0;
  NSObject.hash(into:)();

  if (v2 == 1)
  {
    OUTLINED_FUNCTION_30_51(0);
    if (v3)
    {
LABEL_3:
      OUTLINED_FUNCTION_30_51(1u);
      OUTLINED_FUNCTION_8_8();
      String.hash(into:)();
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    OUTLINED_FUNCTION_30_51(1u);
    Hasher._combine(_:)(v1);
    if (v3)
      goto LABEL_3;
  }
  OUTLINED_FUNCTION_30_51(0);
  OUTLINED_FUNCTION_91();
}

Swift::Int Participant.RemoteIdentifiers.hashValue.getter()
{
  uint64_t v0;
  Swift::UInt64 v1;
  void *v2;
  int v3;
  uint64_t v4;
  id v5;

  v2 = *(void **)v0;
  v1 = *(_QWORD *)(v0 + 8);
  v3 = *(unsigned __int8 *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 32);
  OUTLINED_FUNCTION_5_1();
  v5 = v2;
  NSObject.hash(into:)();

  if (v3 == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Hasher._combine(_:)(1u);
    Hasher._combine(_:)(v1);
  }
  if (v4)
  {
    Hasher._combine(_:)(1u);
    OUTLINED_FUNCTION_124();
    String.hash(into:)();
    OUTLINED_FUNCTION_13_3();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  return OUTLINED_FUNCTION_4_6();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance Participant.RemoteIdentifiers()
{
  uint64_t v0;
  Swift::UInt64 v1;
  void *v2;
  int v3;
  uint64_t v4;
  id v5;

  v2 = *(void **)v0;
  v1 = *(_QWORD *)(v0 + 8);
  v3 = *(unsigned __int8 *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 32);
  Hasher.init(_seed:)();
  v5 = v2;
  NSObject.hash(into:)();

  if (v3 == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Hasher._combine(_:)(1u);
    Hasher._combine(_:)(v1);
  }
  if (v4)
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  return Hasher._finalize()();
}

uint64_t Participant.Capabilities.momentsCapture.getter(char a1)
{
  return a1 & 1;
}

uint64_t (*Participant.Capabilities.momentsCapture.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.Capabilities.screenSharing.getter(unint64_t a1)
{
  return (a1 >> 8) & 1;
}

uint64_t (*Participant.Capabilities.screenSharing.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.Capabilities.gondolaCalling.getter(unint64_t a1)
{
  return (a1 >> 16) & 1;
}

uint64_t (*Participant.Capabilities.gondolaCalling.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.Capabilities.kickable.getter(unint64_t a1)
{
  return (a1 >> 24) & 1;
}

uint64_t (*Participant.Capabilities.kickable.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.Capabilities.requestScreenSharing.getter(unint64_t a1)
{
  return HIDWORD(a1) & 1;
}

uint64_t Participant.Capabilities.requestScreenSharing.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 4) = result;
  return result;
}

uint64_t (*Participant.Capabilities.requestScreenSharing.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void Participant.Capabilities.debugDescription.getter()
{
  uint64_t v0;
  Swift::String v1;
  Swift::String v2;
  Swift::String v3;
  Swift::String v4;
  Swift::String v5;
  Swift::String v6;
  Swift::String v7;
  Swift::String v8;

  OUTLINED_FUNCTION_147();
  _StringGuts.grow(_:)(105);
  OUTLINED_FUNCTION_308_1();
  v1._countAndFlagsBits = 0xD00000000000001CLL;
  v1._object = (void *)0x80000001BD68B470;
  OUTLINED_FUNCTION_49(v1);
  v2._countAndFlagsBits = OUTLINED_FUNCTION_108_11();
  OUTLINED_FUNCTION_49(v2);
  v0 = OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_24_0(v0, 0x80000001BD68B490);
  v3._countAndFlagsBits = OUTLINED_FUNCTION_108_11();
  OUTLINED_FUNCTION_49(v3);
  OUTLINED_FUNCTION_53();
  v4._countAndFlagsBits = 0xD000000000000011;
  v4._object = (void *)0x80000001BD68B4B0;
  OUTLINED_FUNCTION_49(v4);
  v5._countAndFlagsBits = OUTLINED_FUNCTION_108_11();
  OUTLINED_FUNCTION_49(v5);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_270_1(0x62616B63696B202CLL, 4023660);
  v6._countAndFlagsBits = OUTLINED_FUNCTION_108_11();
  OUTLINED_FUNCTION_49(v6);
  OUTLINED_FUNCTION_53();
  v7._countAndFlagsBits = 0xD000000000000017;
  v7._object = (void *)0x80000001BD68B4D0;
  OUTLINED_FUNCTION_49(v7);
  v8._countAndFlagsBits = OUTLINED_FUNCTION_108_11();
  OUTLINED_FUNCTION_49(v8);
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_2_3();
}

void Participant.Capabilities.hash(into:)(uint64_t a1, uint64_t a2)
{
  Hasher._combine(_:)(a2 & 1);
  Hasher._combine(_:)(BYTE1(a2) & 1);
  Hasher._combine(_:)(BYTE2(a2) & 1);
  Hasher._combine(_:)(BYTE3(a2) & 1);
  Hasher._combine(_:)(BYTE4(a2) & 1);
  OUTLINED_FUNCTION_0();
}

BOOL static Participant.Capabilities.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return OUTLINED_FUNCTION_201(a1 ^ a2 | BYTE1(a1) & 1 ^ BYTE1(a2) & 1 | BYTE2(a1) & 1 ^ BYTE2(a2) & 1 | (((a1 ^ a2) & 0x1000000) >> 24) | BYTE4(a1) & 1 ^ BYTE4(a2) & 1);
}

void Participant.Capabilities.hashValue.getter(uint64_t a1)
{
  _BYTE v2[72];

  OUTLINED_FUNCTION_5_1();
  Participant.Capabilities.hash(into:)((uint64_t)v2, a1 & 0x101010101);
  OUTLINED_FUNCTION_4_6();
  OUTLINED_FUNCTION_2();
}

void protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Participant.Capabilities()
{
  Participant.Capabilities.debugDescription.getter();
}

void protocol witness for Hashable.hashValue.getter in conformance Participant.Capabilities()
{
  unsigned __int8 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = 0x100000000;
  if (!v0[4])
    v1 = 0;
  v2 = 0x1000000;
  if (!v0[3])
    v2 = 0;
  v3 = 0x10000;
  if (!v0[2])
    v3 = 0;
  v4 = 256;
  if (!v0[1])
    v4 = 0;
  Participant.Capabilities.hashValue.getter(v4 | *v0 | v3 | v2 | v1);
}

void protocol witness for Hashable.hash(into:) in conformance Participant.Capabilities(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = 0x100000000;
  if (!v1[4])
    v2 = 0;
  v3 = 0x1000000;
  if (!v1[3])
    v3 = 0;
  v4 = 0x10000;
  if (!v1[2])
    v4 = 0;
  v5 = 256;
  if (!v1[1])
    v5 = 0;
  Participant.Capabilities.hash(into:)(a1, v5 | *v1 | v4 | v3 | v2);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance Participant.Capabilities()
{
  unsigned __int8 *v0;
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v11[72];

  v1 = *v0;
  v2 = v0[1];
  v3 = v0[2];
  v4 = v0[3];
  v5 = v0[4];
  Hasher.init(_seed:)();
  v6 = 0x100000000;
  if (!v5)
    v6 = 0;
  v7 = 0x1000000;
  if (!v4)
    v7 = 0;
  v8 = 0x10000;
  if (!v3)
    v8 = 0;
  v9 = 256;
  if (!v2)
    v9 = 0;
  Participant.Capabilities.hash(into:)((uint64_t)v11, v9 | v1 | v8 | v7 | v6);
  return Hasher._finalize()();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance Participant.Capabilities(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = *a2;
  v7 = a2[1];
  v8 = a2[2];
  v9 = a2[3];
  v10 = a2[4];
  if (a1[4])
    v11 = 0x100000000;
  else
    v11 = 0;
  v12 = v5 == 0;
  v13 = 0x1000000;
  if (v12)
    v14 = 0;
  else
    v14 = 0x1000000;
  v12 = v4 == 0;
  v15 = 0x10000;
  if (v12)
    v16 = 0;
  else
    v16 = 0x10000;
  v12 = v3 == 0;
  v17 = 256;
  if (v12)
    v18 = 0;
  else
    v18 = 256;
  v19 = v18 | v2 | v16 | v14 | v11;
  if (v10)
    v20 = 0x100000000;
  else
    v20 = 0;
  if (!v9)
    v13 = 0;
  if (!v8)
    v15 = 0;
  if (!v7)
    v17 = 0;
  return static Participant.Capabilities.== infix(_:_:)(v19, v17 | v6 | v15 | v13 | v20);
}

uint64_t Participant.MediaInfo.avInfo.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t Participant.MediaInfo.avInfo.setter(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  *(_BYTE *)v2 = result;
  *(_QWORD *)(v2 + 8) = a2;
  return result;
}

uint64_t (*Participant.MediaInfo.avInfo.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void Participant.MediaInfo.videoInfo.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  outlined init with copy of FeatureEligibility?(v1 + 16, a1, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
}

void Participant.MediaInfo.videoInfo.setter(uint64_t a1)
{
  uint64_t v1;

  outlined assign with take of Participant?(a1, v1 + 16, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
}

uint64_t (*Participant.MediaInfo.videoInfo.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void Participant.MediaInfo.screenInfo.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  outlined init with copy of FeatureEligibility?(v1 + 96, a1, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
}

void Participant.MediaInfo.screenInfo.setter(uint64_t a1)
{
  uint64_t v1;

  outlined assign with take of Participant?(a1, v1 + 96, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
}

uint64_t (*Participant.MediaInfo.screenInfo.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.MediaInfo.captionInfo.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 312);
  outlined copy of Participant.CaptionInfo?(v1);
  return v1;
}

void Participant.MediaInfo.captionInfo.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  outlined consume of Participant.CaptionInfo?(v3[39]);
  v3[39] = a1;
  v3[40] = a2;
  v3[41] = a3;
  OUTLINED_FUNCTION_18();
}

uint64_t (*Participant.MediaInfo.captionInfo.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void Participant.MediaInfo.init(audioToken:screenInfo:)(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  _BYTE v6[8];
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[26];
  _QWORD v12[4];
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v17[216];

  OUTLINED_FUNCTION_41_6(a2, (uint64_t)v17);
  memset(v12, 0, 24);
  v12[3] = 1;
  v6[0] = 0;
  OUTLINED_FUNCTION_54_13(&v13);
  v14 = 0;
  v15 = 0;
  v16 = 0;
  v7 = a1;
  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  memset(v11, 0, sizeof(v11));
  outlined assign with take of Participant?((uint64_t)v17, (uint64_t)v12, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
  outlined consume of Participant.CaptionInfo?(v14);
  v14 = 0;
  v15 = 0;
  v16 = 0;
  OUTLINED_FUNCTION_25_58(a3, v6);
  OUTLINED_FUNCTION_9_42(a2);
  OUTLINED_FUNCTION_91();
}

void Participant.MediaInfo.init(avInfo:videoInfo:screenInfo:captionInfo:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_93();
  v5 = v4;
  v7 = v6;
  OUTLINED_FUNCTION_267_3();
  v9 = v8;
  v11 = v10;
  v10[13] = 0;
  v10[14] = 0;
  v12 = (uint64_t)(v10 + 2);
  v10[12] = 0;
  v13 = (uint64_t)(v10 + 12);
  v10[15] = 1;
  OUTLINED_FUNCTION_54_13(v10 + 16);
  v11[39] = 0;
  v11[40] = 0;
  v11[41] = 0;
  *(_BYTE *)v11 = v9;
  v11[1] = v3;
  outlined init with take of Any?(v2, v12, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
  outlined assign with take of Participant?(v1, v13, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
  outlined consume of Participant.CaptionInfo?(v11[39]);
  v11[39] = v0;
  v11[40] = v7;
  v11[41] = v5;
  OUTLINED_FUNCTION_52_1();
}

void Participant.MediaInfo.debugDescription.getter()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int16 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  unint64_t v10;
  uint64_t v11;
  uint64x2_t v12;
  unsigned __int32 v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18[3];
  ValueMetadata *v19;

  OUTLINED_FUNCTION_93();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<(name: String, value: Any?)>);
  inited = swift_initStackObject();
  v2 = inited;
  *(_OWORD *)(inited + 16) = xmmword_1BD646740;
  *(_QWORD *)(inited + 32) = 0x6F666E497661;
  *(_QWORD *)(inited + 40) = 0xE600000000000000;
  v3 = *(_QWORD *)(v0 + 8);
  *(_BYTE *)(inited + 48) = *(_BYTE *)v0;
  *(_QWORD *)(inited + 56) = v3;
  *(_QWORD *)(inited + 72) = &type metadata for Participant.AVInfo;
  *(_QWORD *)(inited + 80) = 0x666E496F65646976;
  *(_QWORD *)(inited + 88) = 0xE90000000000006FLL;
  v4 = *(_QWORD *)(v0 + 16);
  if (v4)
  {
    v5 = *(_WORD *)(v0 + 88);
    v6 = *(_QWORD *)(v0 + 72);
    v17 = *(_QWORD *)(v0 + 80);
    v16 = *(_OWORD *)(v0 + 56);
    v8 = *(_QWORD *)(v0 + 40);
    v7 = *(_QWORD *)(v0 + 48);
    v9 = *(_DWORD *)(v0 + 32);
    v10 = *(_QWORD *)(v0 + 24);
    *(_QWORD *)(inited + 120) = &type metadata for Participant.VideoInfo;
    v11 = OUTLINED_FUNCTION_15();
    *(_QWORD *)(v2 + 96) = v11;
    *(_QWORD *)(v11 + 16) = v4;
    *(_BYTE *)(v11 + 24) = v10 & 1;
    *(_BYTE *)(v11 + 25) = BYTE1(v10) & 1;
    *(_BYTE *)(v11 + 26) = BYTE2(v10) & 1;
    *(_BYTE *)(v11 + 27) = BYTE3(v10);
    v12 = (uint64x2_t)vdupq_n_s64(v10);
    v13 = OUTLINED_FUNCTION_325(v12, (int32x4_t)vshlq_u64(v12, (uint64x2_t)xmmword_1BD64A100), (uint64x2_t)xmmword_1BD64A110).u32[0];
    *(_DWORD *)(v14 + 28) = v13;
    *(_BYTE *)(v14 + 32) = v9 & 1;
    *(_BYTE *)(v14 + 33) = BYTE1(v9) & 1;
    *(_QWORD *)(v14 + 40) = v8;
    *(_BYTE *)(v14 + 48) = v7;
    *(_OWORD *)(v14 + 56) = v16;
    *(_QWORD *)(v14 + 72) = v6;
    *(_QWORD *)(v14 + 80) = v17;
    *(_BYTE *)(v14 + 88) = v5 & 1;
    *(_BYTE *)(v14 + 89) = HIBYTE(v5) & 1;
  }
  else
  {
    *(_OWORD *)(inited + 96) = 0u;
    *(_OWORD *)(inited + 112) = 0u;
  }
  *(_QWORD *)(v2 + 128) = 0x6E496E6565726373;
  *(_QWORD *)(v2 + 136) = 0xEA00000000006F66;
  outlined init with copy of FeatureEligibility?(v0 + 96, (uint64_t)v18, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
  if (v19 == (ValueMetadata *)1)
  {
    OUTLINED_FUNCTION_8_8();
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v18, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    *(_OWORD *)(v2 + 144) = 0u;
    *(_OWORD *)(v2 + 160) = 0u;
  }
  else
  {
    *(_QWORD *)(v2 + 168) = &type metadata for Participant.ScreenInfo;
    v15 = OUTLINED_FUNCTION_15();
    *(_QWORD *)(v2 + 144) = v15;
    OUTLINED_FUNCTION_166_3((void *)(v15 + 16), v18);
    OUTLINED_FUNCTION_8_8();
  }
  v19 = &type metadata for Participant.MediaInfo;
  v18[0] = OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_168_1(v18[0], v18[0] + 16);
  String.init(namedPropertyValues:for:)(v2, v18);
  OUTLINED_FUNCTION_52_1();
}

void *Participant.MediaInfo.localAudioToken.unsafeMutableAddressor()
{
  return &static Participant.MediaInfo.localAudioToken;
}

uint64_t static Participant.MediaInfo.localAudioToken.getter()
{
  return 0;
}

uint64_t Participant.VideoState.isReceivingVideoFrames.getter(char a1)
{
  return a1 & 1;
}

uint64_t (*Participant.VideoState.isReceivingVideoFrames.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.VideoState.isVideoSuspended.getter(unint64_t a1)
{
  return (a1 >> 8) & 1;
}

uint64_t (*Participant.VideoState.isVideoSuspended.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.VideoState.isVideoPaused.getter(unint64_t a1)
{
  return (a1 >> 16) & 1;
}

uint64_t (*Participant.VideoState.isVideoPaused.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

unint64_t Participant.VideoState.videoDegradedState.getter(unint64_t a1)
{
  return a1 >> 24;
}

uint64_t (*Participant.VideoState.videoDegradedState.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.VideoState.isVideoDegradedUI.getter(unint64_t a1)
{
  return HIDWORD(a1) & 1;
}

uint64_t Participant.VideoState.isVideoDegradedUI.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 4) = result;
  return result;
}

uint64_t (*Participant.VideoState.isVideoDegradedUI.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.VideoState.isVideoMirrored.getter(unint64_t a1)
{
  return (a1 >> 40) & 1;
}

uint64_t Participant.VideoState.isVideoMirrored.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 5) = result;
  return result;
}

uint64_t (*Participant.VideoState.isVideoMirrored.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.VideoState.isVideoReconnecting.getter(unint64_t a1)
{
  return HIWORD(a1) & 1;
}

uint64_t Participant.VideoState.isVideoReconnecting.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 6) = result;
  return result;
}

uint64_t (*Participant.VideoState.isVideoReconnecting.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.VideoState.isChangingMirroredVideo.getter(unint64_t a1)
{
  return HIBYTE(a1) & 1;
}

uint64_t Participant.VideoState.isChangingMirroredVideo.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 7) = result;
  return result;
}

uint64_t (*Participant.VideoState.isChangingMirroredVideo.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.VideoState.isVideoCroppedByAspectRatio.getter(uint64_t a1, char a2)
{
  return a2 & 1;
}

uint64_t Participant.VideoState.isVideoCroppedByAspectRatio.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = result;
  return result;
}

uint64_t (*Participant.VideoState.isVideoCroppedByAspectRatio.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.VideoState.isChangingExternalCameraUsageOnIPad.getter(uint64_t a1, unsigned int a2)
{
  return (a2 >> 8) & 1;
}

uint64_t Participant.VideoState.isChangingExternalCameraUsageOnIPad.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 9) = result;
  return result;
}

uint64_t (*Participant.VideoState.isChangingExternalCameraUsageOnIPad.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.VideoState.debugDescription.getter(unint64_t a1, __int16 a2)
{
  unint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v8;
  __int16 v9;
  ValueMetadata *v10;

  v4 = a1 >> 24;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<(name: String, value: Any?)>);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BD64C380;
  *(_QWORD *)(inited + 32) = 0xD000000000000016;
  *(_QWORD *)(inited + 40) = 0x80000001BD68B4F0;
  v6 = MEMORY[0x1E0DEAFA0];
  *(_BYTE *)(inited + 48) = a1 & 1;
  *(_QWORD *)(inited + 72) = v6;
  *(_QWORD *)(inited + 80) = 0xD000000000000010;
  *(_QWORD *)(inited + 88) = 0x80000001BD68B510;
  *(_BYTE *)(inited + 96) = BYTE1(a1) & 1;
  *(_QWORD *)(inited + 120) = v6;
  strcpy((char *)(inited + 128), "isVideoPaused");
  *(_WORD *)(inited + 142) = -4864;
  *(_BYTE *)(inited + 144) = BYTE2(a1) & 1;
  *(_QWORD *)(inited + 168) = v6;
  *(_QWORD *)(inited + 176) = 0xD000000000000012;
  *(_QWORD *)(inited + 184) = 0x80000001BD68B530;
  *(_BYTE *)(inited + 192) = v4;
  *(_QWORD *)(inited + 216) = &type metadata for Participant.VideoDegradedState;
  *(_QWORD *)(inited + 224) = 0x4D6F656469567369;
  *(_QWORD *)(inited + 232) = 0xEF6465726F727269;
  *(_BYTE *)(inited + 240) = BYTE5(a1) & 1;
  *(_QWORD *)(inited + 264) = v6;
  *(_QWORD *)(inited + 272) = 0xD000000000000013;
  *(_QWORD *)(inited + 280) = 0x80000001BD68B550;
  *(_BYTE *)(inited + 288) = BYTE6(a1) & 1;
  *(_QWORD *)(inited + 312) = v6;
  *(_QWORD *)(inited + 320) = 0xD000000000000017;
  *(_QWORD *)(inited + 328) = 0x80000001BD68B570;
  *(_BYTE *)(inited + 336) = HIBYTE(a1) & 1;
  *(_QWORD *)(inited + 360) = v6;
  *(_QWORD *)(inited + 368) = 0xD00000000000001BLL;
  *(_QWORD *)(inited + 376) = 0x80000001BD68B590;
  *(_BYTE *)(inited + 384) = a2 & 1;
  *(_QWORD *)(inited + 408) = v6;
  *(_QWORD *)(inited + 416) = 0xD000000000000023;
  *(_QWORD *)(inited + 424) = 0x80000001BD68B5B0;
  *(_QWORD *)(inited + 456) = v6;
  *(_BYTE *)(inited + 432) = HIBYTE(a2) & 1;
  v10 = &type metadata for Participant.VideoState;
  LOWORD(v8) = a1 & 0x101;
  BYTE2(v8) = BYTE2(a1) & 1;
  BYTE3(v8) = v4;
  BYTE4(v8) = BYTE4(a1) & 1;
  BYTE5(v8) = BYTE5(a1) & 1;
  BYTE6(v8) = BYTE6(a1) & 1;
  HIBYTE(v8) = HIBYTE(a1) & 1;
  v9 = a2 & 0x101;
  return String.init(namedPropertyValues:for:)(inited, &v8);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Participant.VideoState()
{
  unsigned __int8 *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int16 v10;

  if (v0[1])
    v1 = 256;
  else
    v1 = 0;
  v2 = 0x10000;
  if (!v0[2])
    v2 = 0;
  v3 = v1 | *v0 | v2 | ((unint64_t)v0[3] << 24);
  v4 = 0x100000000;
  if (!v0[4])
    v4 = 0;
  v5 = 0x10000000000;
  if (!v0[5])
    v5 = 0;
  v6 = 0x1000000000000;
  if (!v0[6])
    v6 = 0;
  v7 = v4 | v5;
  v8 = 0x100000000000000;
  if (!v0[7])
    v8 = 0;
  v9 = v3 | v7 | v6 | v8;
  if (v0[9])
    v10 = 256;
  else
    v10 = 0;
  return Participant.VideoState.debugDescription.getter(v9, v10 | v0[8]);
}

uint64_t Participant.ScreenState.isReceivingFrames.getter(char a1)
{
  return a1 & 1;
}

uint64_t (*Participant.ScreenState.isReceivingFrames.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.ScreenState.isSuspended.getter(unsigned int a1)
{
  return (a1 >> 8) & 1;
}

uint64_t (*Participant.ScreenState.isSuspended.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.ScreenState.isPaused.getter(unsigned int a1)
{
  return HIWORD(a1) & 1;
}

uint64_t (*Participant.ScreenState.isPaused.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.ScreenState.isDegraded.getter(unsigned int a1)
{
  return HIBYTE(a1) & 1;
}

uint64_t (*Participant.ScreenState.isDegraded.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

ConversationKit::Participant::ScreenState __swiftcall Participant.ScreenState.init(isReceivingFrames:isSuspended:isPaused:isDegraded:)(Swift::Bool isReceivingFrames, Swift::Bool isSuspended, Swift::Bool isPaused, Swift::Bool isDegraded)
{
  int v4;
  int v5;
  int v6;

  if (isDegraded)
    v4 = 0x1000000;
  else
    v4 = 0;
  if (isPaused)
    v5 = 0x10000;
  else
    v5 = 0;
  if (isSuspended)
    v6 = 256;
  else
    v6 = 0;
  return (ConversationKit::Participant::ScreenState)(v6 & 0xFFFFFFFE | isReceivingFrames | v5 | v4);
}

uint64_t Participant.ScreenState.debugDescription.getter(int a1)
{
  uint64_t inited;
  uint64_t v3;
  _QWORD v5[4];

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<(name: String, value: Any?)>);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BD645390;
  *(_QWORD *)(inited + 32) = 0xD000000000000011;
  *(_QWORD *)(inited + 40) = 0x80000001BD68B5E0;
  v3 = MEMORY[0x1E0DEAFA0];
  *(_BYTE *)(inited + 48) = a1 & 1;
  *(_QWORD *)(inited + 72) = v3;
  *(_QWORD *)(inited + 80) = 0x6E65707375537369;
  *(_QWORD *)(inited + 88) = 0xEB00000000646564;
  *(_BYTE *)(inited + 96) = BYTE1(a1) & 1;
  *(_QWORD *)(inited + 120) = v3;
  *(_QWORD *)(inited + 128) = 0x6465737561507369;
  *(_QWORD *)(inited + 136) = 0xE800000000000000;
  *(_BYTE *)(inited + 144) = BYTE2(a1) & 1;
  *(_QWORD *)(inited + 168) = v3;
  *(_QWORD *)(inited + 176) = 0x6461726765447369;
  *(_QWORD *)(inited + 184) = 0xEA00000000006465;
  *(_QWORD *)(inited + 216) = v3;
  *(_BYTE *)(inited + 192) = HIBYTE(a1) & 1;
  v5[3] = &type metadata for Participant.ScreenState;
  LOWORD(v5[0]) = a1 & 0x101;
  BYTE2(v5[0]) = BYTE2(a1) & 1;
  BYTE3(v5[0]) = HIBYTE(a1) & 1;
  return String.init(namedPropertyValues:for:)(inited, v5);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Participant.ScreenState()
{
  unsigned __int8 *v0;
  int v1;
  int v2;
  int v3;

  if (v0[3])
    v1 = 0x1000000;
  else
    v1 = 0;
  if (v0[2])
    v2 = 0x10000;
  else
    v2 = 0;
  if (v0[1])
    v3 = 256;
  else
    v3 = 0;
  return Participant.ScreenState.debugDescription.getter(v3 | *v0 | v2 | v1);
}

uint64_t Participant.VideoProviderType.debugDescription.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BD3FFE24 + 4 * byte_1BD65E161[a1]))(0x646972672ELL, 0xE500000000000000);
}

uint64_t sub_1BD3FFE24()
{
  return 0x7473696C2ELL;
}

uint64_t sub_1BD3FFE34()
{
  return 0x49506C61636F6C2ELL;
}

uint64_t sub_1BD3FFE50()
{
  return 0x6E65657263732ELL;
}

BOOL static Participant.VideoProviderType.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void Participant.VideoProviderType.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
  Hasher._combine(_:)(a2);
  OUTLINED_FUNCTION_0();
}

void *static Participant.VideoProviderType.allCases.getter()
{
  return &outlined read-only object #0 of static Participant.VideoProviderType.allCases.getter;
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance Participant.VideoProviderType(char *a1, char *a2)
{
  return static Participant.VideoProviderType.== infix(_:_:)(*a1, *a2);
}

uint64_t protocol witness for Hashable.hashValue.getter in conformance Participant.VideoProviderType()
{
  unsigned __int8 *v0;

  return Participant.VideoProviderType.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance Participant.VideoProviderType(uint64_t a1)
{
  unsigned __int8 *v1;

  Participant.VideoProviderType.hash(into:)(a1, *v1);
}

void protocol witness for static CaseIterable.allCases.getter in conformance Participant.VideoProviderType(_QWORD *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static Participant.VideoProviderType.allCases.getter;
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Participant.VideoProviderType()
{
  unsigned __int8 *v0;

  return Participant.VideoProviderType.debugDescription.getter(*v0);
}

void Participant.CopresenceInfo.uniqueIdentifier.getter()
{
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void Participant.CopresenceInfo.uniqueIdentifier.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_6_6();
  swift_bridgeObjectRelease();
  *v1 = v2;
  v1[1] = v0;
  OUTLINED_FUNCTION_18();
}

uint64_t (*Participant.CopresenceInfo.uniqueIdentifier.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void Participant.CopresenceInfo.appName.getter()
{
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void Participant.CopresenceInfo.appName.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_6_6();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)(v1 + 24) = v0;
  OUTLINED_FUNCTION_18();
}

uint64_t (*Participant.CopresenceInfo.appName.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.CopresenceInfo.isActive.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t Participant.CopresenceInfo.isActive.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 32) = result;
  return result;
}

uint64_t (*Participant.CopresenceInfo.isActive.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.CopresenceInfo.preferredBroadcastingAttributes.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t Participant.CopresenceInfo.preferredBroadcastingAttributes.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = result;
  return result;
}

uint64_t (*Participant.CopresenceInfo.preferredBroadcastingAttributes.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void Participant.CopresenceInfo.ongoingDescription.getter()
{
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void Participant.CopresenceInfo.ongoingDescription.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_6_6();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 48) = v2;
  *(_QWORD *)(v1 + 56) = v0;
  OUTLINED_FUNCTION_18();
}

uint64_t (*Participant.CopresenceInfo.ongoingDescription.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.CopresenceInfo.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  Swift::String v8;
  uint64_t v10;

  OUTLINED_FUNCTION_149_1();
  OUTLINED_FUNCTION_301_2();
  _StringGuts.grow(_:)(63);
  OUTLINED_FUNCTION_233_2(0xD000000000000021, (uint64_t)"CopresenceInfo(uniqueIdentifier: ");
  v1 = *(_QWORD *)v0;
  OUTLINED_FUNCTION_25_2();
  OUTLINED_FUNCTION_19_39(v1);
  OUTLINED_FUNCTION_53();
  v2._countAndFlagsBits = 0x656D614E70706120;
  v2._object = (void *)0xEA0000000000203ALL;
  String.append(_:)(v2);
  v3 = *(_QWORD *)(v0 + 16);
  OUTLINED_FUNCTION_25_2();
  OUTLINED_FUNCTION_19_39(v3);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_297_2(0x697463417369202CLL, 25974);
  if ((*(_BYTE *)(v0 + 32) & 1) != 0)
    v4 = 1702195828;
  else
    v4 = 0x65736C6166;
  OUTLINED_FUNCTION_173_5(v4);
  OUTLINED_FUNCTION_2_1();
  OUTLINED_FUNCTION_299_2(8236);
  OUTLINED_FUNCTION_301_2();
  _StringGuts.grow(_:)(49);
  swift_bridgeObjectRelease();
  if ((*(_QWORD *)(v0 + 40) & 1) != 0)
    v5 = 1702195828;
  else
    v5 = 0x65736C6166;
  OUTLINED_FUNCTION_19_39(v5);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_95_15(22, 0x80000001BD68B650);
  v7 = *(_QWORD *)(v0 + 48);
  v6 = *(void **)(v0 + 56);
  OUTLINED_FUNCTION_124();
  v8._countAndFlagsBits = v7;
  v8._object = v6;
  String.append(_:)(v8);
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_56_4();
  OUTLINED_FUNCTION_8_8();
  OUTLINED_FUNCTION_19_39(0xD000000000000016);
  OUTLINED_FUNCTION_2_1();
  OUTLINED_FUNCTION_53();
  return v10;
}

uint64_t Participant.CopresenceInfo.init(uniqueIdentifier:appName:isActive:preferredBroadcastingAttributes:ongoingDescription:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  *(_QWORD *)a9 = result;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_BYTE *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = a7;
  *(_QWORD *)(a9 + 56) = a8;
  return result;
}

uint64_t Participant.AVInfo.isAVLess.getter(char a1)
{
  return a1 & 1;
}

uint64_t Participant.AVInfo.audioToken.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

BOOL Participant.AVInfo.init(for:)(void *a1)
{
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = objc_msgSend(a1, sel_audioVideoMode);
  v3 = OUTLINED_FUNCTION_25_1((uint64_t)v2, sel_streamToken);
  if (!v2 && v3)
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.fault.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v4 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v4 + 16) = xmmword_1BD6441D0;
    v5 = OUTLINED_FUNCTION_90_2();
    v7 = v6;
    *(_QWORD *)(v4 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v4 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v4 + 32) = v5;
    *(_QWORD *)(v4 + 40) = v7;
    os_log(_:dso:log:type:_:)();
    OUTLINED_FUNCTION_30_4();
  }

  return v2 == 0;
}

void Participant.AVInfo.debugDescription.getter(char a1)
{
  uint64_t v2;
  Swift::String v3;

  OUTLINED_FUNCTION_147();
  _StringGuts.grow(_:)(36);
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
    v2 = 1702195828;
  else
    v2 = 0x65736C6166;
  OUTLINED_FUNCTION_173_5(v2);
  OUTLINED_FUNCTION_2_1();
  OUTLINED_FUNCTION_284_1(0x546F69647561202CLL, 0x203A6E656B6FLL);
  v3._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  OUTLINED_FUNCTION_49(v3);
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_56_4();
  OUTLINED_FUNCTION_9_0();
}

uint64_t static Participant.AVInfo.== infix(_:_:)(int a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  return (a2 == a4) & ~(a1 ^ a3);
}

void protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Participant.AVInfo()
{
  char *v0;

  Participant.AVInfo.debugDescription.getter(*v0);
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance Participant.AVInfo(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static Participant.AVInfo.== infix(_:_:)(*a1, *((_QWORD *)a1 + 1), *a2, *((_QWORD *)a2 + 1));
}

uint64_t Participant.VideoInfo.providers.getter()
{
  return swift_bridgeObjectRetain();
}

void Participant.VideoInfo.providers.setter(uint64_t a1)
{
  _QWORD *v1;

  OUTLINED_FUNCTION_212_3();
  *v1 = a1;
  OUTLINED_FUNCTION_0();
}

uint64_t (*Participant.VideoInfo.providers.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

unint64_t Participant.VideoInfo.state.getter()
{
  unsigned __int8 *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (v0[9])
    v1 = 256;
  else
    v1 = 0;
  v2 = 0x10000;
  if (!v0[10])
    v2 = 0;
  v3 = v1 | v0[8] | v2 | ((unint64_t)v0[11] << 24);
  v4 = 0x100000000;
  if (!v0[12])
    v4 = 0;
  v5 = 0x10000000000;
  if (!v0[13])
    v5 = 0;
  v6 = 0x1000000000000;
  if (!v0[14])
    v6 = 0;
  v7 = v4 | v5;
  v8 = 0x100000000000000;
  if (!v0[15])
    v8 = 0;
  return v3 | v7 | v6 | v8;
}

void Participant.VideoInfo.state.setter(unint64_t a1)
{
  uint64_t v1;
  uint64x2_t v2;
  char v3;
  char v4;

  *(_BYTE *)(v1 + 8) = a1 & 1;
  *(_BYTE *)(v1 + 9) = BYTE1(a1) & 1;
  *(_BYTE *)(v1 + 10) = BYTE2(a1) & 1;
  *(_BYTE *)(v1 + 11) = BYTE3(a1);
  v2 = (uint64x2_t)vdupq_n_s64(a1);
  *(_DWORD *)(v1 + 12) = OUTLINED_FUNCTION_325(v2, (int32x4_t)vshlq_u64(v2, (uint64x2_t)xmmword_1BD64A100), (uint64x2_t)xmmword_1BD64A110).u32[0];
  *(_BYTE *)(v1 + 16) = v3 & 1;
  *(_BYTE *)(v1 + 17) = v4 & 1;
}

uint64_t (*Participant.VideoInfo.state.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.VideoInfo.orientation.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t Participant.VideoInfo.orientation.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = result;
  return result;
}

uint64_t (*Participant.VideoInfo.orientation.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.VideoInfo.cameraPosition.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t Participant.VideoInfo.cameraPosition.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 32) = result;
  return result;
}

uint64_t (*Participant.VideoInfo.cameraPosition.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void Participant.VideoInfo.aspectRatio.getter(__n128 *a1@<X8>)
{
  uint64_t v1;

  OUTLINED_FUNCTION_271_2(a1, *(__n128 *)(v1 + 40), *(__n128 *)(v1 + 56));
}

uint64_t Participant.VideoInfo.aspectRatio.setter(uint64_t a1)
{
  uint64_t v1;

  return outlined init with take of AspectRatio(a1, v1 + 40);
}

uint64_t (*Participant.VideoInfo.aspectRatio.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.VideoInfo.isMixedWithScreen.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 73);
}

uint64_t Participant.VideoInfo.isMixedWithScreen.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 73) = result;
  return result;
}

uint64_t (*Participant.VideoInfo.isMixedWithScreen.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void Participant.VideoInfo.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  unint64_t v10;
  uint64_t v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  Swift::String v19;
  Swift::String v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  int v26;
  _OWORD v27[3];
  _OWORD v28[3];
  _OWORD v29[3];
  uint64_t v30;

  v1 = v0;
  *(_QWORD *)&v29[0] = 0;
  *((_QWORD *)&v29[0] + 1) = 0xE000000000000000;
  _StringGuts.grow(_:)(33);
  v2._countAndFlagsBits = 0xD000000000000011;
  v2._object = (void *)0x80000001BD68B6C0;
  String.append(_:)(v2);
  *(_QWORD *)&v28[0] = *(_QWORD *)(v0 + 8);
  WORD4(v28[0]) = *(_WORD *)(v0 + 16);
  _print_unlocked<A, B>(_:_:)();
  v3 = OUTLINED_FUNCTION_232_3();
  OUTLINED_FUNCTION_284_1(v3, v4 & 0xFFFF00000000FFFFLL | 0x5B203A730000);
  v24 = v29[0];
  v5 = *(_QWORD *)v0;
  v6 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  v7 = MEMORY[0x1E0DEE9D8];
  if (v6)
  {
    v23 = v0;
    outlined retain of [Participant](v0);
    v30 = v7;
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    v8 = specialized Dictionary.Values.startIndex.getter(v5);
    if ((v8 & 0x8000000000000000) == 0)
    {
      v10 = v8;
      if (v8 < 1 << *(_BYTE *)(v5 + 32))
      {
        v11 = v5 + 64;
        while ((*(_QWORD *)(v11 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
        {
          if (v9 != *(_DWORD *)(v5 + 36))
            goto LABEL_24;
          v26 = v9;
          v12 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v10);
          outlined init with copy of IDSLookupManager(*(_QWORD *)(v5 + 56) + 40 * v10, (uint64_t)v29 + 8);
          LOBYTE(v29[0]) = v12;
          LOBYTE(v28[0]) = v12;
          outlined init with copy of IDSLookupManager((uint64_t)v29 + 8, (uint64_t)v28 + 8);
          v27[0] = v28[0];
          v27[1] = v28[1];
          v27[2] = v28[2];
          OUTLINED_FUNCTION_25_0((uint64_t)v29);
          _print_unlocked<A, B>(_:_:)();
          OUTLINED_FUNCTION_299_2(8250);
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantVideoProvider);
          _print_unlocked<A, B>(_:_:)();
          OUTLINED_FUNCTION_25_0((uint64_t)v27);
          v7 = v30;
          v25 = v6;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            v7 = v30;
          }
          v13 = *(_QWORD *)(v7 + 16);
          if (v13 >= *(_QWORD *)(v7 + 24) >> 1)
          {
            specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            v7 = v30;
          }
          *(_QWORD *)(v7 + 16) = v13 + 1;
          v14 = v7 + 16 * v13;
          *(_QWORD *)(v14 + 32) = 0;
          *(_QWORD *)(v14 + 40) = 0xE000000000000000;
          if ((uint64_t)v10 >= -(-1 << *(_BYTE *)(v5 + 32)))
            goto LABEL_25;
          v11 = v5 + 64;
          if ((*(_QWORD *)(v5 + 64 + 8 * (v10 >> 6)) & (1 << v10)) == 0)
            goto LABEL_26;
          if (v26 != *(_DWORD *)(v5 + 36))
            goto LABEL_27;
          OUTLINED_FUNCTION_223_0();
          v15 = _HashTable.occupiedBucket(after:)();
          v6 = v25 - 1;
          if (v25 == 1)
          {
            v1 = v23;
            outlined release of LinearGradient(v23);
            goto LABEL_19;
          }
          v10 = v15;
          if ((v15 & 0x8000000000000000) == 0)
          {
            v9 = *(_DWORD *)(v5 + 36);
            if (v15 < 1 << *(_BYTE *)(v5 + 32))
              continue;
          }
          goto LABEL_28;
        }
        __break(1u);
LABEL_24:
        __break(1u);
LABEL_25:
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
      }
    }
LABEL_28:
    __break(1u);
  }
  else
  {
LABEL_19:
    *(_QWORD *)&v29[0] = v7;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [String]);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type [String] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [String]);
    v16 = BidirectionalCollection<>.joined(separator:)();
    OUTLINED_FUNCTION_13_3();
    v29[0] = v24;
    OUTLINED_FUNCTION_124();
    OUTLINED_FUNCTION_19_39(v16);
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_53();
    v17 = v29[0];
    *(_QWORD *)&v29[0] = 0;
    *((_QWORD *)&v29[0] + 1) = 0xE000000000000000;
    _StringGuts.grow(_:)(58);
    v27[0] = v29[0];
    OUTLINED_FUNCTION_24_0(v18, 0x80000001BD68B6E0);
    *(_QWORD *)&v29[0] = *(_QWORD *)(v1 + 24);
    v19._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v19);
    OUTLINED_FUNCTION_2_1();
    OUTLINED_FUNCTION_114_13();
    outlined init with take of AspectRatio(v1 + 40, (uint64_t)v29);
    outlined init with take of AspectRatio((uint64_t)v29, (uint64_t)v28);
    _print_unlocked<A, B>(_:_:)();
    v20._countAndFlagsBits = 0xD000000000000015;
    v20._object = (void *)0x80000001BD68B700;
    String.append(_:)(v20);
    if ((*(_BYTE *)(v1 + 73) & 1) != 0)
      v21 = 1702195828;
    else
      v21 = 0x65736C6166;
    OUTLINED_FUNCTION_173_5(v21);
    OUTLINED_FUNCTION_2_1();
    v22 = *(_QWORD *)&v27[0];
    v28[0] = v17;
    OUTLINED_FUNCTION_124();
    OUTLINED_FUNCTION_19_39(v22);
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_53();
  }
}

void protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Participant.VideoInfo()
{
  const void *v0;
  _BYTE v1[74];

  memcpy(v1, v0, sizeof(v1));
  Participant.VideoInfo.debugDescription.getter();
}

double Participant.ScreenShareAttributes.displayScale.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

void Participant.ScreenShareAttributes.displayScale.setter(double a1)
{
  double *v1;

  *v1 = a1;
}

uint64_t (*Participant.ScreenShareAttributes.displayScale.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Participant.ScreenShareAttributes.displayCornerRadius.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

__n128 Participant.ScreenShareAttributes.systemRootLayerTransform.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v2;
  __n128 result;

  v2 = *(_OWORD *)(v1 + 40);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 24);
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(v1 + 56);
  *(__n128 *)(a1 + 32) = result;
  return result;
}

__n128 Participant.ScreenShareAttributes.systemRootLayerTransform.setter(uint64_t a1)
{
  uint64_t v1;
  __int128 v2;
  __n128 result;

  v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v2;
  result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v1 + 56) = result;
  return result;
}

uint64_t (*Participant.ScreenShareAttributes.systemRootLayerTransform.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.ScreenShareAttributes.deviceFamily.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 72);
}

uint64_t Participant.ScreenShareAttributes.deviceFamily.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 72) = result;
  return result;
}

uint64_t (*Participant.ScreenShareAttributes.deviceFamily.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.ScreenShareAttributes.deviceHomeButtonType.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 80);
}

uint64_t Participant.ScreenShareAttributes.deviceHomeButtonType.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 80) = result;
  return result;
}

uint64_t (*Participant.ScreenShareAttributes.deviceHomeButtonType.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.ScreenShareAttributes.style.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 88);
}

uint64_t Participant.ScreenShareAttributes.style.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 88) = result;
  return result;
}

uint64_t (*Participant.ScreenShareAttributes.style.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void *Participant.ScreenShareAttributes.init(_:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  _BYTE v5[96];

  swift_getObjectType();
  specialized Participant.ScreenShareAttributes.init(_:)(a1, (uint64_t)v5);
  return memcpy(a2, v5, 0x60uLL);
}

void Participant.ScreenShareAttributes.init(displayScale:displayCornerRadius:deviceFamily:deviceHomeButtonType:style:systemRootLayerTransform:)(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, uint64_t a10, char a11)
{
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  uint64_t v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  uint64_t v32;
  uint64_t v33;
  _QWORD v37[7];
  _BYTE v38[48];
  char v39;

  OUTLINED_FUNCTION_302_1(a1, (uint64_t)v37);
  v17 = *(double *)v37;
  v18 = *(double *)&v37[1];
  v19 = *(double *)&v37[2];
  v20 = *(double *)&v37[3];
  v21 = *(double *)&v37[4];
  v22 = *(double *)&v37[5];
  OUTLINED_FUNCTION_302_1(v23, (uint64_t)v38);
  v24 = 1.0;
  v25 = 0.0;
  if ((v39 & 1) != 0)
    v26 = 0.0;
  else
    v26 = v22;
  if ((v39 & 1) != 0)
    v27 = 0.0;
  else
    v27 = v21;
  if ((v39 & 1) != 0)
    v28 = 1.0;
  else
    v28 = v20;
  if ((v39 & 1) != 0)
    v29 = 0.0;
  else
    v29 = v19;
  if ((v39 & 1) != 0)
  {
    v30 = 1.0;
  }
  else
  {
    v25 = v18;
    v30 = v17;
  }
  if ((a11 & 1) != 0)
    a10 = 0;
  if ((a8 & 1) != 0)
    v32 = 0;
  else
    v32 = a7;
  if ((a6 & 1) != 0)
    v33 = 0;
  else
    v33 = a5;
  if ((a2 & 1) == 0)
    v24 = *(double *)&a1;
  *(double *)a9 = v24;
  *(_QWORD *)(a9 + 8) = a3;
  *(_BYTE *)(a9 + 16) = a4 & 1;
  *(double *)(a9 + 24) = v30;
  *(double *)(a9 + 32) = v25;
  *(double *)(a9 + 40) = v29;
  *(double *)(a9 + 48) = v28;
  *(double *)(a9 + 56) = v27;
  *(double *)(a9 + 64) = v26;
  *(_QWORD *)(a9 + 72) = v33;
  *(_QWORD *)(a9 + 80) = v32;
  *(_QWORD *)(a9 + 88) = a10;
}

uint64_t Participant.ScreenShareAttributes.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  Swift::String v5;

  if ((*(_BYTE *)(v0 + 16) & 1) != 0)
  {
    v1 = 0;
  }
  else
  {
    OUTLINED_FUNCTION_301_2();
    _StringGuts.grow(_:)(25);
    OUTLINED_FUNCTION_233_2(0xD000000000000016, (uint64_t)" displayCornerRadius: ");
    Double.write<A>(to:)();
    OUTLINED_FUNCTION_321_1();
    v1 = v4;
  }
  OUTLINED_FUNCTION_301_2();
  _StringGuts.grow(_:)(99);
  OUTLINED_FUNCTION_43_50(0xD000000000000024, (uint64_t)"ScreenShareAttributes(displayScale: ");
  v5._countAndFlagsBits = Double.description.getter();
  OUTLINED_FUNCTION_51_39(v5);
  OUTLINED_FUNCTION_133();
  OUTLINED_FUNCTION_321_1();
  OUTLINED_FUNCTION_173_5(v1);
  OUTLINED_FUNCTION_2_1();
  OUTLINED_FUNCTION_43_50(0xD00000000000001ALL, (uint64_t)" systemRootLayerTransform:");
  type metadata accessor for CGAffineTransform(0);
  v2 = OUTLINED_FUNCTION_106_13();
  OUTLINED_FUNCTION_24_0(v2, 0x80000001BD68B770);
  type metadata accessor for TUScreenShareDeviceFamily(0);
  OUTLINED_FUNCTION_106_13();
  OUTLINED_FUNCTION_134_7();
  type metadata accessor for TUScreenShareStyle(0);
  OUTLINED_FUNCTION_106_13();
  OUTLINED_FUNCTION_56_4();
  return v4;
}

BOOL Participant.ScreenShareAttributes.shouldUpdate(with:)(_QWORD *a1)
{
  _QWORD *v1;

  return (OUTLINED_FUNCTION_244_0() & 1) == 0 || v1[9] != a1[9] || v1[10] != a1[10] || v1[11] != a1[11];
}

void Participant.ScreenInfo.provider.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  outlined init with copy of FeatureEligibility?(v1, a1, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
}

void Participant.ScreenInfo.provider.setter(uint64_t a1)
{
  uint64_t v1;

  outlined assign with take of Participant?(a1, v1, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
}

uint64_t (*Participant.ScreenInfo.provider.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.ScreenInfo.screenState.getter()
{
  unsigned __int8 *v0;
  int v1;
  int v2;
  int v3;

  if (v0[43])
    v1 = 0x1000000;
  else
    v1 = 0;
  if (v0[42])
    v2 = 0x10000;
  else
    v2 = 0;
  if (v0[41])
    v3 = 256;
  else
    v3 = 0;
  return v3 | v0[40] | v2 | v1;
}

uint64_t Participant.ScreenInfo.screenState.setter(uint64_t result)
{
  _BYTE *v1;

  v1[40] = result & 1;
  v1[41] = BYTE1(result) & 1;
  v1[42] = BYTE2(result) & 1;
  v1[43] = BYTE3(result) & 1;
  return result;
}

uint64_t (*Participant.ScreenInfo.screenState.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.ScreenInfo.orientation.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

uint64_t Participant.ScreenInfo.orientation.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 48) = result;
  return result;
}

uint64_t (*Participant.ScreenInfo.orientation.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.ScreenInfo.videoRotation.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 56);
}

uint64_t Participant.ScreenInfo.videoRotation.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = result;
  return result;
}

uint64_t (*Participant.ScreenInfo.videoRotation.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void Participant.ScreenInfo.aspectRatio.getter(__n128 *a1@<X8>)
{
  __n128 *v1;

  OUTLINED_FUNCTION_271_2(a1, v1[4], v1[5]);
}

uint64_t Participant.ScreenInfo.aspectRatio.setter(uint64_t a1)
{
  uint64_t v1;

  return outlined init with take of AspectRatio(a1, v1 + 64);
}

uint64_t (*Participant.ScreenInfo.aspectRatio.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Participant.ScreenInfo.scaleFactor.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 104);
}

void Participant.ScreenInfo.scaleFactor.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 104) = a1;
}

uint64_t (*Participant.ScreenInfo.scaleFactor.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.ScreenInfo.init(provider:screenState:remoteAttributes:orientation:videoRotation:aspectRatio:scaleFactor:)@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>, double a7@<D0>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t result;

  *(_QWORD *)(a6 + 32) = 0;
  *(_OWORD *)a6 = 0u;
  *(_OWORD *)(a6 + 16) = 0u;
  *(_OWORD *)(a6 + 128) = 0u;
  *(_OWORD *)(a6 + 144) = 0u;
  *(_OWORD *)(a6 + 160) = 0u;
  *(_OWORD *)(a6 + 176) = 0u;
  *(_OWORD *)(a6 + 192) = 0u;
  *(_OWORD *)(a6 + 112) = 0u;
  *(_BYTE *)(a6 + 208) = 1;
  outlined assign with take of Participant?(a1, a6, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
  *(_BYTE *)(a6 + 40) = a2 & 1;
  *(_BYTE *)(a6 + 41) = BYTE1(a2) & 1;
  *(_BYTE *)(a6 + 42) = BYTE2(a2) & 1;
  *(_BYTE *)(a6 + 43) = HIBYTE(a2) & 1;
  v13 = OUTLINED_FUNCTION_290_3();
  outlined init with take of Any?(v13, v14, v15);
  *(_QWORD *)(a6 + 48) = a3;
  *(_QWORD *)(a6 + 56) = a4;
  result = outlined init with take of AspectRatio(a5, a6 + 64);
  *(double *)(a6 + 104) = a7;
  return result;
}

void Participant.ScreenInfo.debugDescription.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, __int128 a10, char a11, uint64_t a12, __int128 a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  Swift::String v42;
  Swift::String v43;
  Swift::String v44;
  Swift::String v45;
  Swift::String v46;
  Swift::String v47;
  Swift::String v48;

  OUTLINED_FUNCTION_153_6();
  a24 = v26;
  a25 = v27;
  *(_QWORD *)&a9 = 0;
  *((_QWORD *)&a9 + 1) = 0xE000000000000000;
  _StringGuts.grow(_:)(209);
  a13 = a9;
  OUTLINED_FUNCTION_43_50(0xD000000000000018, (uint64_t)"ScreenInfo(screenState: ");
  v28 = *(_BYTE *)(v25 + 41);
  v29 = *(_BYTE *)(v25 + 42);
  v30 = *(_BYTE *)(v25 + 43);
  LOBYTE(a9) = *(_BYTE *)(v25 + 40);
  BYTE1(a9) = v28;
  BYTE2(a9) = v29;
  BYTE3(a9) = v30;
  OUTLINED_FUNCTION_143_0();
  OUTLINED_FUNCTION_185_4(0x746E6569726F202CLL, 0x3A6E6F697461);
  *(_QWORD *)&a9 = *(_QWORD *)(v25 + 48);
  type metadata accessor for CNKDeviceOrientation(0);
  OUTLINED_FUNCTION_143_0();
  OUTLINED_FUNCTION_185_4(0x46656C616373202CLL, 0x3A726F746361);
  v42._countAndFlagsBits = Double.description.getter();
  OUTLINED_FUNCTION_51_39(v42);
  v31 = OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_24_0(v31, 0x80000001BD68B7D0);
  v32 = 0;
  v33 = 0;
  v34 = 0;
  v35 = 0;
  v36 = *(_BYTE *)(v25 + 208);
  if ((v36 & 1) == 0)
  {
    v33 = *(_QWORD *)(v25 + 192);
    v32 = *(_QWORD *)(v25 + 200);
    v34 = *(_QWORD *)(v25 + 184);
    v35 = *(_QWORD *)(v25 + 112);
  }
  *(_QWORD *)&a9 = v35;
  BYTE8(a9) = v36;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CGFloat?);
  v43._countAndFlagsBits = OUTLINED_FUNCTION_193_3();
  OUTLINED_FUNCTION_51_39(v43);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_43_50(0xD000000000000017, (uint64_t)", displayCornerRadius: ");
  *(_QWORD *)&a9 = Participant.ScreenInfo.displayCornerRadius.getter();
  BYTE8(a9) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Double?);
  v44._countAndFlagsBits = OUTLINED_FUNCTION_193_3();
  OUTLINED_FUNCTION_51_39(v44);
  v37 = OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_24_0(v37, 0x80000001BD68B770);
  *(_QWORD *)&a9 = v34;
  BYTE8(a9) = v36;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Int?);
  v45._countAndFlagsBits = OUTLINED_FUNCTION_172_3();
  OUTLINED_FUNCTION_51_39(v45);
  OUTLINED_FUNCTION_133();
  OUTLINED_FUNCTION_43_50(0xD000000000000018, (uint64_t)", deviceHomeButtonType: ");
  *(_QWORD *)&a9 = v33;
  BYTE8(a9) = v36;
  v46._countAndFlagsBits = OUTLINED_FUNCTION_172_3();
  OUTLINED_FUNCTION_51_39(v46);
  OUTLINED_FUNCTION_133();
  OUTLINED_FUNCTION_134_7();
  *(_QWORD *)&a9 = v32;
  BYTE8(a9) = v36;
  v47._countAndFlagsBits = OUTLINED_FUNCTION_172_3();
  OUTLINED_FUNCTION_51_39(v47);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_43_50(0xD000000000000011, (uint64_t)", videoRotation: ");
  *(_QWORD *)&a9 = *(_QWORD *)(v25 + 56);
  OUTLINED_FUNCTION_143_0();
  OUTLINED_FUNCTION_114_13();
  v38 = *(_BYTE *)(v25 + 96);
  v39 = *(_OWORD *)(v25 + 80);
  a9 = *(_OWORD *)(v25 + 64);
  a10 = v39;
  a11 = v38;
  OUTLINED_FUNCTION_143_0();
  v40 = OUTLINED_FUNCTION_232_3();
  OUTLINED_FUNCTION_297_2(v40, v41);
  OUTLINED_FUNCTION_41_6(v25, (uint64_t)&a9);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
  v48._countAndFlagsBits = OUTLINED_FUNCTION_193_3();
  OUTLINED_FUNCTION_51_39(v48);
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_56_4();
  OUTLINED_FUNCTION_21_3();
}

uint64_t Participant.ScreenInfo.deviceHomeButtonType.getter()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 208))
    return 0;
  else
    return *(_QWORD *)(v0 + 192);
}

uint64_t Participant.ScreenInfo.style.getter()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 208))
    return 0;
  else
    return *(_QWORD *)(v0 + 200);
}

Swift::Bool __swiftcall Participant.ScreenInfo.isMaybeTouchIDDevice()()
{
  uint64_t v0;
  double v1;
  id v2;
  double v3;
  char v4;
  double v5;
  double v6;
  double v7;
  uint64_t v8;
  double v9;
  double v10;
  double v11;

  if ((*(_BYTE *)(v0 + 208) & 1) != 0)
  {
    v2 = objc_msgSend((id)objc_opt_self(), sel_defaultDisplayScale);
    objc_msgSend(v2, sel_doubleValue);

  }
  v3 = OUTLINED_FUNCTION_206_2();
  if ((v4 & 1) == 0)
    v3 = *(double *)(v0 + 72);
  v5 = OUTLINED_FUNCTION_261_3(v3);
  v7 = v5 * v6;
  OUTLINED_FUNCTION_59(v8, (unint64_t *)&lazy cache variable for type metadata for UIView);
  static UIView.screenScale.getter();
  v10 = round(v1 * v9) / v9;
  static UIView.screenScale.getter();
  return fabs(v10 / (round(v7 * v11) / v11)) < 0.01;
}

void Participant.ScreenInfo.apply(remoteAttributes:)(uint64_t a1)
{
  uint64_t v1;

  outlined init with take of Any?(a1, v1 + 112, &demangling cache variable for type metadata for Participant.ScreenShareAttributes?);
}

void Participant.CountdownInfo.requestedApprovalDate.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  outlined init with copy of FeatureEligibility?(v1, a1, (uint64_t *)&demangling cache variable for type metadata for Date?);
}

void Participant.CountdownInfo.requestedApprovalDate.setter(uint64_t a1)
{
  uint64_t v1;

  outlined assign with take of Participant?(a1, v1, (uint64_t *)&demangling cache variable for type metadata for Date?);
}

uint64_t (*Participant.CountdownInfo.requestedApprovalDate.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void Participant.CountdownInfo.receivedApprovalDate.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Participant.CountdownInfo(0);
  outlined init with copy of FeatureEligibility?(v1 + *(int *)(v3 + 20), a1, (uint64_t *)&demangling cache variable for type metadata for Date?);
  OUTLINED_FUNCTION_0();
}

void Participant.CountdownInfo.receivedApprovalDate.setter(uint64_t a1)
{
  uint64_t v2;

  type metadata accessor for Participant.CountdownInfo(0);
  OUTLINED_FUNCTION_141_1();
  outlined assign with take of Participant?(a1, v2, (uint64_t *)&demangling cache variable for type metadata for Date?);
  OUTLINED_FUNCTION_0();
}

double (*Participant.CountdownInfo.receivedApprovalDate.modify())(_QWORD)
{
  type metadata accessor for Participant.CountdownInfo(0);
  OUTLINED_FUNCTION_141_1();
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.CountdownInfo.hasCanceledJoinCountdown.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Participant.CountdownInfo(0) + 24));
}

void Participant.CountdownInfo.hasCanceledJoinCountdown.setter(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(type metadata accessor for Participant.CountdownInfo(0) + 24)) = a1;
  OUTLINED_FUNCTION_0();
}

double (*Participant.CountdownInfo.hasCanceledJoinCountdown.modify())(_QWORD)
{
  type metadata accessor for Participant.CountdownInfo(0);
  return TPNumberPadCharacter.rawValue.getter;
}

void Participant.CountdownInfo.init(requestedApprovalDate:receivedApprovalDate:hasCanceledJoinCountdown:)()
{
  char v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_96();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_20_55(v7);
  v8 = type metadata accessor for Participant.CountdownInfo(0);
  v9 = v7 + *(int *)(v8 + 20);
  OUTLINED_FUNCTION_20_55(v9);
  outlined assign with take of Participant?(v5, v7, (uint64_t *)&demangling cache variable for type metadata for Date?);
  outlined assign with take of Participant?(v3, v9, (uint64_t *)&demangling cache variable for type metadata for Date?);
  *(_BYTE *)(v7 + *(int *)(v8 + 24)) = v1;
  OUTLINED_FUNCTION_65_1();
}

void Participant.CountdownInfo.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  Swift::String v3;
  Swift::String v4;
  Swift::String v5;
  Swift::String v6;

  OUTLINED_FUNCTION_147();
  _StringGuts.grow(_:)(96);
  OUTLINED_FUNCTION_308_1();
  v2._countAndFlagsBits = 0xD000000000000025;
  v2._object = (void *)0x80000001BD68B850;
  OUTLINED_FUNCTION_49(v2);
  specialized >> prefix<A>(_:)(v0);
  OUTLINED_FUNCTION_49(v3);
  OUTLINED_FUNCTION_2_1();
  OUTLINED_FUNCTION_95_15(24, 0x80000001BD68B880);
  v1 = type metadata accessor for Participant.CountdownInfo(0);
  specialized >> prefix<A>(_:)(v0 + *(int *)(v1 + 20));
  OUTLINED_FUNCTION_49(v4);
  OUTLINED_FUNCTION_53();
  v5._countAndFlagsBits = 0xD00000000000001CLL;
  v5._object = (void *)0x80000001BD68B8A0;
  OUTLINED_FUNCTION_49(v5);
  v6._countAndFlagsBits = String.init<A>(reflecting:)();
  OUTLINED_FUNCTION_49(v6);
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_56_4();
  OUTLINED_FUNCTION_2_3();
}

uint64_t Participant.CountdownInfo.shouldShowJoinCountdown.getter()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  void (*v18)(uint64_t);
  char v19;
  double v21;
  double v22;
  double v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;

  v2 = v0;
  OUTLINED_FUNCTION_229_5();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_101_15();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v26 - v5;
  v7 = OUTLINED_FUNCTION_33();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_79();
  OUTLINED_FUNCTION_99_1();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v26 - v10;
  outlined init with copy of FeatureEligibility?(v0, (uint64_t)v6, (uint64_t *)&demangling cache variable for type metadata for Date?);
  OUTLINED_FUNCTION_69_0((uint64_t)v6, 1, v7);
  if (v16)
  {
    v12 = (uint64_t)v6;
LABEL_7:
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v12, (uint64_t *)&demangling cache variable for type metadata for Date?);
    goto LABEL_8;
  }
  v13 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v13(v11, v6, v7);
  v14 = type metadata accessor for Participant.CountdownInfo(0);
  OUTLINED_FUNCTION_311_3(v0 + *(int *)(v14 + 20), v15, (uint64_t *)&demangling cache variable for type metadata for Date?);
  OUTLINED_FUNCTION_69_0(v0, 1, v7);
  if (v16)
  {
    v17 = OUTLINED_FUNCTION_315_0();
    v18(v17);
    v12 = v0;
    goto LABEL_7;
  }
  v13(v1, (char *)v0, v7);
  Date.timeIntervalSince(_:)();
  v22 = v21;
  if (one-time initialization token for shared != -1)
    swift_once();
  v23 = (*(double (**)(void))(*(_QWORD *)static Defaults.shared + 1040))();
  v24 = *(void (**)(char *, uint64_t))(v8 + 8);
  v24(v1, v7);
  v25 = OUTLINED_FUNCTION_315_0();
  ((void (*)(uint64_t))v24)(v25);
  if (v22 <= v23)
  {
    v19 = *(_BYTE *)(v2 + *(int *)(v14 + 24)) ^ 1;
    return v19 & 1;
  }
LABEL_8:
  v19 = 0;
  return v19 & 1;
}

uint64_t static Participant.CaptionInfo.maxCaptions.getter()
{
  return 50;
}

void Participant.CaptionInfo.provider.getter()
{
  swift_unknownObjectRetain();
  OUTLINED_FUNCTION_0();
}

void Participant.CaptionInfo.provider.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_6_6();
  swift_unknownObjectRelease();
  *v1 = v2;
  v1[1] = v0;
  OUTLINED_FUNCTION_18();
}

uint64_t (*Participant.CaptionInfo.provider.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.CaptionInfo.captions.getter()
{
  return swift_bridgeObjectRetain();
}

void Participant.CaptionInfo.captions.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  OUTLINED_FUNCTION_0();
}

uint64_t (*Participant.CaptionInfo.captions.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void Participant.CaptionInfo.debugDescription.getter()
{
  OUTLINED_FUNCTION_6_6();
  OUTLINED_FUNCTION_147();
  OUTLINED_FUNCTION_270_1(0x496E6F6974706143, 7300718);
  OUTLINED_FUNCTION_270_1(0x656469766F727028, 2112114);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantCaptionsProvider);
  _print_unlocked<A, B>(_:_:)();
  OUTLINED_FUNCTION_9_0();
}

void protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Participant.CaptionInfo()
{
  Participant.CaptionInfo.debugDescription.getter();
}

uint64_t Participant.Caption.utteranceNumber.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t Participant.Caption.utteranceNumber.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*Participant.Caption.utteranceNumber.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.Caption.dateCreated.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_318_1();
  OUTLINED_FUNCTION_33();
  v0 = OUTLINED_FUNCTION_50();
  return OUTLINED_FUNCTION_31_0(v0, v1, v2, v3);
}

uint64_t Participant.Caption.dateCreated.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_200_1();
  OUTLINED_FUNCTION_33();
  v0 = OUTLINED_FUNCTION_69_1();
  return OUTLINED_FUNCTION_31_0(v0, v1, v2, v3);
}

double (*Participant.Caption.dateCreated.modify())(_QWORD)
{
  type metadata accessor for Participant.Caption(0);
  OUTLINED_FUNCTION_141_1();
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.Caption.dateUpdated.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_318_1();
  OUTLINED_FUNCTION_33();
  v0 = OUTLINED_FUNCTION_50();
  return OUTLINED_FUNCTION_31_0(v0, v1, v2, v3);
}

uint64_t Participant.Caption.dateUpdated.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_200_1();
  OUTLINED_FUNCTION_33();
  v0 = OUTLINED_FUNCTION_69_1();
  return OUTLINED_FUNCTION_31_0(v0, v1, v2, v3);
}

double (*Participant.Caption.dateUpdated.modify())(_QWORD)
{
  type metadata accessor for Participant.Caption(0);
  return TPNumberPadCharacter.rawValue.getter;
}

void Participant.Caption.text.getter()
{
  type metadata accessor for Participant.Caption(0);
  OUTLINED_FUNCTION_312_3();
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void Participant.Caption.text.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  type metadata accessor for Participant.Caption(0);
  OUTLINED_FUNCTION_92_11();
  *v2 = a1;
  v2[1] = a2;
  OUTLINED_FUNCTION_18();
}

double (*Participant.Caption.text.modify())(_QWORD)
{
  type metadata accessor for Participant.Caption(0);
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.Caption.utteranceComplete.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Participant.Caption(0) + 32));
}

void Participant.Caption.utteranceComplete.setter(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(type metadata accessor for Participant.Caption(0) + 32)) = a1;
  OUTLINED_FUNCTION_0();
}

double (*Participant.Caption.utteranceComplete.modify())(_QWORD)
{
  type metadata accessor for Participant.Caption(0);
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.Caption.lowConfidenceRanges.getter()
{
  type metadata accessor for Participant.Caption(0);
  return swift_bridgeObjectRetain();
}

void Participant.Caption.lowConfidenceRanges.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(int *)(OUTLINED_FUNCTION_200_1() + 36);
  OUTLINED_FUNCTION_279_4();
  *(_QWORD *)(v1 + v2) = v0;
  OUTLINED_FUNCTION_18();
}

double (*Participant.Caption.lowConfidenceRanges.modify())(_QWORD)
{
  type metadata accessor for Participant.Caption(0);
  return TPNumberPadCharacter.rawValue.getter;
}

void Participant.Caption.hash(into:)(uint64_t a1)
{
  Swift::UInt *v1;
  uint64_t v3;

  Hasher._combine(_:)(*v1);
  v3 = OUTLINED_FUNCTION_247_4();
  OUTLINED_FUNCTION_33();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type Date and conformance Date, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  OUTLINED_FUNCTION_254_2();
  OUTLINED_FUNCTION_254_2();
  OUTLINED_FUNCTION_35_0();
  OUTLINED_FUNCTION_50();
  String.hash(into:)();
  OUTLINED_FUNCTION_133();
  OUTLINED_FUNCTION_30_51(*((_BYTE *)v1 + *(int *)(v3 + 32)));
  specialized Array<A>.hash(into:)(a1, *(Swift::UInt *)((char *)v1 + *(int *)(v3 + 36)));
}

int32x2_t static Participant.Caption.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  BOOL v9;
  int32x2_t result;

  if (*a1 == *a2)
  {
    v4 = (int *)type metadata accessor for Participant.Caption(0);
    if ((OUTLINED_FUNCTION_101_2() & 1) != 0 && (OUTLINED_FUNCTION_101_2() & 1) != 0)
    {
      v5 = v4[7];
      v6 = *(_QWORD *)((char *)a1 + v5);
      v7 = *(_QWORD *)((char *)a1 + v5 + 8);
      v8 = (_QWORD *)((char *)a2 + v5);
      v9 = v6 == *v8 && v7 == v8[1];
      if ((v9 || (OUTLINED_FUNCTION_13() & 1) != 0)
        && *((unsigned __int8 *)a1 + v4[8]) == *((unsigned __int8 *)a2 + v4[8]))
      {
        return specialized static Array<A>.== infix(_:_:)(*(int64x2_t **)((char *)a1 + v4[9]), *(int64x2_t **)((char *)a2 + v4[9]));
      }
    }
  }
  OUTLINED_FUNCTION_18();
  return result;
}

void Participant.Caption.hashValue.getter()
{
  _BYTE v0[72];

  OUTLINED_FUNCTION_5_1();
  Participant.Caption.hash(into:)((uint64_t)v0);
  OUTLINED_FUNCTION_4_6();
  OUTLINED_FUNCTION_2();
}

uint64_t Participant.Caption.init(utteranceNumber:dateCreated:dateUpdated:text:utteranceComplete:lowConfidenceRanges:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  int *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t result;
  _QWORD *v15;
  uint64_t v16;

  OUTLINED_FUNCTION_149_1();
  v16 = v4;
  v6 = v5;
  OUTLINED_FUNCTION_267_3();
  v8 = v7;
  *v7 = v9;
  v10 = (int *)OUTLINED_FUNCTION_247_4();
  v11 = (char *)v8 + v10[5];
  v12 = OUTLINED_FUNCTION_33();
  v13 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32);
  v13(v11, v3, v12);
  result = ((uint64_t (*)(char *, uint64_t, uint64_t))v13)((char *)v8 + v10[6], v2, v12);
  v15 = (_QWORD *)((char *)v8 + v10[7]);
  *v15 = v1;
  v15[1] = v0;
  *((_BYTE *)v8 + v10[8]) = v6;
  *(_QWORD *)((char *)v8 + v10[9]) = v16;
  return result;
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance Participant.Caption()
{
  _BYTE v1[72];

  Hasher.init(_seed:)();
  Participant.Caption.hash(into:)((uint64_t)v1);
  return Hasher._finalize()();
}

void Participant.state.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  outlined init with copy of ConversationControlsAppLaunchButtonType(v1, a1, type metadata accessor for Participant.State);
}

void Participant.state.setter(uint64_t a1)
{
  uint64_t v1;

  outlined assign with take of Participant.Caption(a1, v1, type metadata accessor for Participant.State);
}

uint64_t (*Participant.state.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_152();
  OUTLINED_FUNCTION_33_0();
  v0 = OUTLINED_FUNCTION_50();
  return OUTLINED_FUNCTION_31_0(v0, v1, v2, v3);
}

uint64_t Participant.identifier.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_33_0();
  v0 = OUTLINED_FUNCTION_69_1();
  return OUTLINED_FUNCTION_31_0(v0, v1, v2, v3);
}

double (*Participant.identifier.modify())(_QWORD)
{
  type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_141_1();
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.capabilities.getter()
{
  uint64_t v0;
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_215_1();
  v4 = *(unsigned __int8 *)(v3 + 3);
  v5 = *(_BYTE *)(v3 + 4) == 0;
  v6 = 0x100000000;
  if (v5)
    v6 = 0;
  v5 = v4 == 0;
  v7 = 0x1000000;
  if (v5)
    v7 = 0;
  v5 = v2 == 0;
  v8 = 0x10000;
  if (v5)
    v8 = 0;
  v5 = v1 == 0;
  v9 = 256;
  if (v5)
    v9 = 0;
  return v9 | v0 | v8 | v7 | v6;
}

void Participant.capabilities.setter()
{
  unint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64x2_t v3;

  v2 = (_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_89_21() + 24));
  *v2 = v0 & 1;
  v3 = (uint64x2_t)vdupq_n_s64(v0);
  OUTLINED_FUNCTION_167_5((uint64_t)v2, v3, (int32x4_t)vshlq_u64(v3, (uint64x2_t)xmmword_1BD65EC50), (uint64x2_t)xmmword_1BD65EC60);
  OUTLINED_FUNCTION_0();
}

double (*Participant.capabilities.modify())(_QWORD)
{
  type metadata accessor for Participant(0);
  return TPNumberPadCharacter.rawValue.getter;
}

id Participant.remoteIdentifiers.getter()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_152();
  OUTLINED_FUNCTION_312_3();
  v2 = *(void **)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  *v0 = *(_QWORD *)v1;
  v0[1] = v3;
  v0[2] = v4;
  v0[3] = v5;
  v0[4] = v6;
  return outlined copy of Participant.RemoteIdentifiers?(v2);
}

__n128 Participant.remoteIdentifiers.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 result;
  __n128 v5;
  __int128 v6;

  v5 = (__n128)a1[1];
  v6 = *a1;
  v2 = *((_QWORD *)a1 + 4);
  v3 = v1 + *(int *)(type metadata accessor for Participant(0) + 28);
  outlined consume of Participant.RemoteIdentifiers?(*(void **)v3);
  result = v5;
  *(_OWORD *)v3 = v6;
  *(__n128 *)(v3 + 16) = v5;
  *(_QWORD *)(v3 + 32) = v2;
  return result;
}

double (*Participant.remoteIdentifiers.modify())(_QWORD)
{
  type metadata accessor for Participant(0);
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.gradient.getter()
{
  type metadata accessor for Participant(0);
  return swift_bridgeObjectRetain();
}

void Participant.gradient.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(OUTLINED_FUNCTION_14_2() + 32);
  OUTLINED_FUNCTION_279_4();
  *(_QWORD *)(v1 + v3) = a1;
  OUTLINED_FUNCTION_18();
}

double (*Participant.gradient.modify())(_QWORD)
{
  type metadata accessor for Participant(0);
  return TPNumberPadCharacter.rawValue.getter;
}

void Participant.nickname.getter()
{
  type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void Participant.nickname.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_92_11();
  *v2 = a1;
  v2[1] = a2;
  OUTLINED_FUNCTION_18();
}

double (*Participant.nickname.modify())(_QWORD)
{
  type metadata accessor for Participant(0);
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.effectsEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Participant(0) + 40));
}

void Participant.effectsEnabled.setter()
{
  char v0;
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_89_21() + 40)) = v0;
  OUTLINED_FUNCTION_0();
}

double (*Participant.effectsEnabled.modify())(_QWORD)
{
  type metadata accessor for Participant(0);
  return TPNumberPadCharacter.rawValue.getter;
}

void Participant.hasReducedQualityVideo.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t (*v13)(_QWORD);
  uint64_t v14;
  char v15;
  char v16;

  v4 = v1;
  OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_74_10();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_183();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_235_0();
  Participant.isVideoSuspended.getter();
  v9 = v8;
  OUTLINED_FUNCTION_157_2(v4, v3);
  if ((v9 & 1) != 0)
  {
    OUTLINED_FUNCTION_46(v3);
    OUTLINED_FUNCTION_95_1(v4, v2);
LABEL_4:
    OUTLINED_FUNCTION_46(v2);
    OUTLINED_FUNCTION_95_1(v4, v0);
    goto LABEL_5;
  }
  Participant.isVideoPaused.getter();
  v11 = v10;
  v12 = OUTLINED_FUNCTION_311_0();
  outlined destroy of AccountUpdateNotice(v12, v13);
  OUTLINED_FUNCTION_157_2(v4, v2);
  if ((v11 & 1) != 0)
    goto LABEL_4;
  Participant.isVideoDegradedUI.getter();
  v16 = v15;
  outlined destroy of AccountUpdateNotice(v2, type metadata accessor for Participant);
  OUTLINED_FUNCTION_111(v4, v0);
  if ((v16 & 1) == 0)
    Participant.isVideoReconnecting.getter();
LABEL_5:
  OUTLINED_FUNCTION_35_2(v14, type metadata accessor for Participant);
  OUTLINED_FUNCTION_91();
}

void Participant.isVideoDegradedUI.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_8_97();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_51_2(v2, v3, v7);
  v4 = OUTLINED_FUNCTION_42();
  if ((_DWORD)v4 == 4)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
    OUTLINED_FUNCTION_7_2((uint64_t *)(v0 + *(int *)(v5 + 64)));
    OUTLINED_FUNCTION_11_92();
    v6 = OUTLINED_FUNCTION_33();
    OUTLINED_FUNCTION_16_0(v6);
    OUTLINED_FUNCTION_5_0();
    OUTLINED_FUNCTION_47_26();
    if (v8)
      OUTLINED_FUNCTION_27();
  }
  else
  {
    OUTLINED_FUNCTION_15_12(v4, type metadata accessor for Participant.State);
  }
  OUTLINED_FUNCTION_29_60();
}

void Participant.isVideoReconnecting.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_8_97();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_51_2(v2, v3, v7);
  v4 = OUTLINED_FUNCTION_42();
  if ((_DWORD)v4 == 4)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
    OUTLINED_FUNCTION_7_2((uint64_t *)(v0 + *(int *)(v5 + 64)));
    OUTLINED_FUNCTION_11_92();
    v6 = OUTLINED_FUNCTION_33();
    OUTLINED_FUNCTION_16_0(v6);
    OUTLINED_FUNCTION_5_0();
    OUTLINED_FUNCTION_47_26();
    if (v8)
      OUTLINED_FUNCTION_27();
  }
  else
  {
    OUTLINED_FUNCTION_15_12(v4, type metadata accessor for Participant.State);
  }
  OUTLINED_FUNCTION_29_60();
}

uint64_t Participant.isGondolaCallingAvailable.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Participant(0) + 24) + 2);
}

uint64_t Participant.associatedParticipants.getter()
{
  type metadata accessor for Participant(0);
  return swift_bridgeObjectRetain();
}

void Participant.associatedParticipants.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(OUTLINED_FUNCTION_14_2() + 44);
  OUTLINED_FUNCTION_279_4();
  *(_QWORD *)(v1 + v3) = a1;
  OUTLINED_FUNCTION_18();
}

double (*Participant.associatedParticipants.modify())(_QWORD)
{
  type metadata accessor for Participant(0);
  return TPNumberPadCharacter.rawValue.getter;
}

void Participant.unverifiedAssociatedHandle.getter()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(v0 + *(int *)(type metadata accessor for Participant(0) + 48));
  OUTLINED_FUNCTION_0();
}

void Participant.unverifiedAssociatedHandle.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(OUTLINED_FUNCTION_14_2() + 48);

  *(_QWORD *)(v1 + v3) = a1;
  OUTLINED_FUNCTION_18();
}

double (*Participant.unverifiedAssociatedHandle.modify())(_QWORD)
{
  type metadata accessor for Participant(0);
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.shouldHideInactiveTile.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Participant(0) + 52));
}

void Participant.shouldHideInactiveTile.setter()
{
  char v0;
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_89_21() + 52)) = v0;
  OUTLINED_FUNCTION_0();
}

double (*Participant.shouldHideInactiveTile.modify())(_QWORD)
{
  type metadata accessor for Participant(0);
  return TPNumberPadCharacter.rawValue.getter;
}

void Participant.avInfo.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_8_97();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_51_2(v2, v3, v7);
  v4 = OUTLINED_FUNCTION_42();
  if ((_DWORD)v4 == 4)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
    OUTLINED_FUNCTION_7_2((uint64_t *)(v0 + *(int *)(v5 + 64)));
    OUTLINED_FUNCTION_11_92();
    v6 = OUTLINED_FUNCTION_33();
    OUTLINED_FUNCTION_16_0(v6);
    OUTLINED_FUNCTION_47_26();
  }
  else
  {
    OUTLINED_FUNCTION_15_12(v4, type metadata accessor for Participant.State);
  }
  OUTLINED_FUNCTION_29_60();
}

void Participant.debugDescription.getter()
{
  uint64_t v0;
  Swift::String v1;
  void **v2;
  void *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  id v7;
  uint64_t v8;
  Swift::String v9;

  OUTLINED_FUNCTION_153_6();
  _StringGuts.grow(_:)(71);
  OUTLINED_FUNCTION_95_15(18, 0x80000001BD68B8C0);
  OUTLINED_FUNCTION_248_3();
  _print_unlocked<A, B>(_:_:)();
  v1._countAndFlagsBits = 0x61636F4C7369202CLL;
  v1._object = (void *)0xEA00000000003D6CLL;
  String.append(_:)(v1);
  v2 = (void **)(v0 + *(int *)(OUTLINED_FUNCTION_14_2() + 28));
  v3 = *v2;
  if (*v2)
    v4 = 0x65736C6166;
  else
    v4 = 1702195828;
  if (*v2)
    v5 = 0xE500000000000000;
  else
    v5 = 0xE400000000000000;
  v6 = v5;
  String.append(_:)(*(Swift::String *)&v4);
  OUTLINED_FUNCTION_133();
  OUTLINED_FUNCTION_43_50(0xD000000000000014, (uint64_t)", remoteIdentifiers=");
  if (v3)
  {
    OUTLINED_FUNCTION_25_2();
    v7 = v3;
    v8 = String.init<A>(reflecting:)();
  }
  else
  {
    v8 = 7104878;
  }
  OUTLINED_FUNCTION_19_39(v8);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_284_1(0x746E656469202C29, 0x3D7265696669);
  OUTLINED_FUNCTION_33_0();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
  v9._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  OUTLINED_FUNCTION_51_39(v9);
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_56_4();
  OUTLINED_FUNCTION_21_3();
}

void Participant.isDestinationPseudonym.getter()
{
  Participant.isDestinationTemporary.getter();
}

void Participant.isActiveWithVideo.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_8_97();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_51_2(v2, v3, v7);
  v4 = OUTLINED_FUNCTION_42();
  if ((_DWORD)v4 == 4)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
    OUTLINED_FUNCTION_7_2((uint64_t *)(v0 + *(int *)(v5 + 64)));
    OUTLINED_FUNCTION_11_92();
    v6 = OUTLINED_FUNCTION_33();
    OUTLINED_FUNCTION_16_0(v6);
    OUTLINED_FUNCTION_5_0();
    OUTLINED_FUNCTION_47_26();
    if (v8)
      OUTLINED_FUNCTION_27();
  }
  else
  {
    OUTLINED_FUNCTION_15_12(v4, type metadata accessor for Participant.State);
  }
  OUTLINED_FUNCTION_29_60();
}

void Participant.audioToken.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8[42];

  OUTLINED_FUNCTION_12_98();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_56_36(v2, v3, v8[0]);
  v4 = OUTLINED_FUNCTION_212();
  if ((_DWORD)v4 == 4)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
    v6 = (const void *)(v0 + *(int *)(v5 + 48));
    OUTLINED_FUNCTION_7_2((uint64_t *)(v0 + *(int *)(v5 + 64)));
    OUTLINED_FUNCTION_25_58(v8, v6);
    v7 = OUTLINED_FUNCTION_33();
    OUTLINED_FUNCTION_75(v7);
    OUTLINED_FUNCTION_47_26();
  }
  else
  {
    OUTLINED_FUNCTION_315(v4, type metadata accessor for Participant.State);
  }
  OUTLINED_FUNCTION_29_60();
}

void Participant.videoState.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_8_97();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_51_2(v2, v3, v7);
  v4 = OUTLINED_FUNCTION_42();
  if ((_DWORD)v4 == 4)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
    OUTLINED_FUNCTION_7_2((uint64_t *)(v0 + *(int *)(v5 + 64)));
    OUTLINED_FUNCTION_11_92();
    v6 = OUTLINED_FUNCTION_33();
    OUTLINED_FUNCTION_16_0(v6);
    OUTLINED_FUNCTION_5_0();
    OUTLINED_FUNCTION_47_26();
    if (v8)
      OUTLINED_FUNCTION_27();
  }
  else
  {
    OUTLINED_FUNCTION_15_12(v4, type metadata accessor for Participant.State);
  }
  OUTLINED_FUNCTION_29_60();
}

void Participant.screenState.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[40];
  uint64_t v11;
  _QWORD v12[27];

  OUTLINED_FUNCTION_8_97();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_51_2(v2, v3, v9);
  v4 = OUTLINED_FUNCTION_42();
  if ((_DWORD)v4 != 4)
  {
    OUTLINED_FUNCTION_15_12(v4, type metadata accessor for Participant.State);
    OUTLINED_FUNCTION_63_25();
    goto LABEL_5;
  }
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
  OUTLINED_FUNCTION_7_2((uint64_t *)(v0 + *(int *)(v5 + 64)));
  OUTLINED_FUNCTION_20_73(v10);
  v6 = OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_16_0(v6);
  OUTLINED_FUNCTION_281_4((uint64_t)&v11, v7, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
  v8 = OUTLINED_FUNCTION_283_1();
  if (v12[3] == 1)
  {
LABEL_5:
    OUTLINED_FUNCTION_280_3(v8, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    goto LABEL_6;
  }
  OUTLINED_FUNCTION_166_3(v10, v12);
  outlined destroy of Participant.ScreenInfo((uint64_t)v10);
LABEL_6:
  OUTLINED_FUNCTION_91();
}

void Participant.captionsProvider.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_8_97();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_51_2(v2, v3, v7);
  v4 = OUTLINED_FUNCTION_42();
  if ((_DWORD)v4 == 4)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
    OUTLINED_FUNCTION_7_2((uint64_t *)(v0 + *(int *)(v5 + 64)));
    OUTLINED_FUNCTION_11_92();
    v6 = OUTLINED_FUNCTION_33();
    OUTLINED_FUNCTION_16_0(v6);
    OUTLINED_FUNCTION_161_6();
    OUTLINED_FUNCTION_47_26();
    if (v0)
      OUTLINED_FUNCTION_53();
  }
  else
  {
    OUTLINED_FUNCTION_15_12(v4, type metadata accessor for Participant.State);
  }
  OUTLINED_FUNCTION_29_60();
}

void Participant.isReceivingScreenFrames.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[40];
  uint64_t v11;
  _QWORD v12[27];

  OUTLINED_FUNCTION_8_97();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_51_2(v2, v3, v9);
  v4 = OUTLINED_FUNCTION_42();
  if ((_DWORD)v4 != 4)
  {
    OUTLINED_FUNCTION_15_12(v4, type metadata accessor for Participant.State);
    OUTLINED_FUNCTION_63_25();
    goto LABEL_5;
  }
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
  OUTLINED_FUNCTION_7_2((uint64_t *)(v0 + *(int *)(v5 + 64)));
  OUTLINED_FUNCTION_20_73(v10);
  v6 = OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_16_0(v6);
  OUTLINED_FUNCTION_281_4((uint64_t)&v11, v7, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
  v8 = OUTLINED_FUNCTION_283_1();
  if (v12[3] == 1)
  {
LABEL_5:
    OUTLINED_FUNCTION_280_3(v8, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    goto LABEL_6;
  }
  OUTLINED_FUNCTION_166_3(v10, v12);
  outlined destroy of Participant.ScreenInfo((uint64_t)v10);
LABEL_6:
  OUTLINED_FUNCTION_29_60();
}

void Participant.isNotActiveAndNotLocal.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  char *v9;

  type metadata accessor for Participant.State(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_30_6();
  OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_78();
  v4 = *(_QWORD *)(v0 + *(int *)(v3 + 28));
  OUTLINED_FUNCTION_165_0(v0, v5, v6);
  if (v4)
  {
    OUTLINED_FUNCTION_59_31(v7, v8, type metadata accessor for Participant.State);
    v9 = (char *)&loc_1BD403174 + 4 * byte_1BD65E165[OUTLINED_FUNCTION_3_14()];
    __asm { BR              X10 }
  }
  OUTLINED_FUNCTION_15_12(v7, type metadata accessor for Participant);
  OUTLINED_FUNCTION_91();
}

void sub_1BD4031A0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
  OUTLINED_FUNCTION_7_2((uint64_t *)(v0 + *(int *)(v1 + 64)));
  OUTLINED_FUNCTION_334_2();
  JUMPOUT(0x1BD403174);
}

void Participant.isBuzzable.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t (*v14)(_QWORD);
  uint64_t v15;
  uint64_t v16;
  uint64_t EnumCaseMultiPayload;
  uint64_t v18;
  const void *v19;
  uint64_t v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  void *v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[336];

  OUTLINED_FUNCTION_93();
  v1 = v0;
  v2 = type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_79();
  v6 = v4 - v5;
  MEMORY[0x1E0C80A78](v7);
  v9 = &v32[-v8];
  OUTLINED_FUNCTION_248_3();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_101_15();
  MEMORY[0x1E0C80A78](v11);
  v13 = &v32[-v12];
  outlined init with copy of ConversationControlsAppLaunchButtonType(v0, (uint64_t)&v32[-v12], v14);
  if (swift_getEnumCaseMultiPayload() == 3)
  {
    v15 = OUTLINED_FUNCTION_33();
    (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v13, v15);
  }
  else
  {
    outlined destroy of AccountUpdateNotice((uint64_t)v13, type metadata accessor for Participant.State);
    if (*(_QWORD *)(v0 + *(int *)(v2 + 28)))
    {
      OUTLINED_FUNCTION_165_0(v0, v16, type metadata accessor for Participant.State);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if ((_DWORD)EnumCaseMultiPayload == 4)
      {
        v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        v19 = (const void *)(v0 + *(int *)(v18 + 48));
        OUTLINED_FUNCTION_7_2((uint64_t *)(v0 + *(int *)(v18 + 64)));
        OUTLINED_FUNCTION_25_58(v32, v19);
        v20 = OUTLINED_FUNCTION_33();
        OUTLINED_FUNCTION_16_0(v20);
        v21 = v32[0];
        OUTLINED_FUNCTION_47_26();
        if ((v21 & 1) != 0)
          goto LABEL_16;
      }
      else
      {
        OUTLINED_FUNCTION_15_12(EnumCaseMultiPayload, type metadata accessor for Participant.State);
      }
    }
    Participant.isNotActiveAndNotLocal.getter();
    v23 = v22;
    outlined init with copy of ConversationControlsAppLaunchButtonType(v1, (uint64_t)v9, type metadata accessor for Participant);
    if ((v23 & 1) != 0)
    {
      Participant.isOtherInvitedParticipant.getter();
      v25 = v24;
      outlined destroy of AccountUpdateNotice((uint64_t)v9, type metadata accessor for Participant);
      outlined init with copy of ConversationControlsAppLaunchButtonType(v1, v6, type metadata accessor for Participant);
      if ((v25 & 1) == 0)
      {
        v26 = *(void **)(v6 + *(int *)(v2 + 28));
        if (v26)
        {
          v27 = objc_msgSend(v26, sel_value);
          v28 = v27;
          if (!v27)
          {
            v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            v28 = (void *)MEMORY[0x1C3B72E00](v29);
            v27 = (id)OUTLINED_FUNCTION_53();
          }
          OUTLINED_FUNCTION_25_1((uint64_t)v27, sel_destinationIdIsTemporary);

        }
      }
    }
    else
    {
      OUTLINED_FUNCTION_46((uint64_t)v9);
      v30 = OUTLINED_FUNCTION_315_0();
      OUTLINED_FUNCTION_95_1(v30, v31);
    }
    OUTLINED_FUNCTION_315((uint64_t)v26, type metadata accessor for Participant);
  }
LABEL_16:
  OUTLINED_FUNCTION_52_1();
}

void Participant.broadcastStartDate.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_12_98();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_51_2(v4, v5, v14);
  v6 = OUTLINED_FUNCTION_42();
  if ((_DWORD)v6 == 4)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
    OUTLINED_FUNCTION_7_2((uint64_t *)(v1 + *(int *)(v7 + 64)));
    v8 = OUTLINED_FUNCTION_33();
    v9 = OUTLINED_FUNCTION_50();
    v10(v9);
    OUTLINED_FUNCTION_334_2();
    v11 = a1;
    v12 = 0;
    v13 = v8;
  }
  else
  {
    OUTLINED_FUNCTION_15_12(v6, type metadata accessor for Participant.State);
    v13 = OUTLINED_FUNCTION_33();
    v11 = a1;
    v12 = 1;
  }
  __swift_storeEnumTagSinglePayload(v11, v12, 1, v13);
  OUTLINED_FUNCTION_18();
}

void Participant.countdownInfo.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_152();
  OUTLINED_FUNCTION_447(v0 + *(int *)(v1 + 56), v2, type metadata accessor for Participant.CountdownInfo);
  OUTLINED_FUNCTION_0();
}

void Participant.countdownInfo.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_89_21();
  outlined assign with take of Participant.Caption(v0, v1 + *(int *)(v2 + 56), type metadata accessor for Participant.CountdownInfo);
  OUTLINED_FUNCTION_0();
}

double (*Participant.countdownInfo.modify())(_QWORD)
{
  type metadata accessor for Participant(0);
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Participant.isAuthorizedToChangeGroupMembership.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Participant(0) + 60));
}

void Participant.isAuthorizedToChangeGroupMembership.setter()
{
  char v0;
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_89_21() + 60)) = v0;
  OUTLINED_FUNCTION_0();
}

double (*Participant.isAuthorizedToChangeGroupMembership.modify())(_QWORD)
{
  type metadata accessor for Participant(0);
  return TPNumberPadCharacter.rawValue.getter;
}

void Participant.shouldShowJoinCountdown.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v6;

  type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v1);
  v3 = *(_QWORD *)(v0 + *(int *)(v2 + 28));
  OUTLINED_FUNCTION_447(v0, v4, v5);
  if (!v3)
    v6 = Participant.CountdownInfo.shouldShowJoinCountdown.getter();
  OUTLINED_FUNCTION_35_2(v6, type metadata accessor for Participant);
  OUTLINED_FUNCTION_18();
}

void Participant.isKickingAvailableWithLeeway.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t, uint64_t);
  double v23;
  double v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t (*v27)(uint64_t);
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  OUTLINED_FUNCTION_149_1();
  v32 = v3;
  v33 = v4;
  v5 = v0;
  v6 = type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Participant.State(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_168();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_79();
  OUTLINED_FUNCTION_88_11();
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v31 - v16;
  OUTLINED_FUNCTION_135(v5, (uint64_t)v12);
  if (OUTLINED_FUNCTION_27_17() != 4)
  {
    v27 = type metadata accessor for Participant.State;
    v28 = (uint64_t)v12;
LABEL_11:
    outlined destroy of AccountUpdateNotice(v28, v27);
    goto LABEL_12;
  }
  v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
  v19 = (uint64_t)&v12[*(int *)(v18 + 48)];
  OUTLINED_FUNCTION_7_2((uint64_t *)&v12[*(int *)(v18 + 64)]);
  v20 = OUTLINED_FUNCTION_223_0();
  OUTLINED_FUNCTION_291(v20, v21, v22);
  outlined destroy of Participant.MediaInfo(v19);
  Date.timeIntervalSinceNow.getter();
  v24 = v23;
  OUTLINED_FUNCTION_291(v1, (uint64_t)v17, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
  if (v24 <= 0.0)
  {
    Date.timeIntervalSinceNow.getter();
    if (one-time initialization token for shared != -1)
      swift_once();
    OUTLINED_FUNCTION_274_4();
    OUTLINED_FUNCTION_230_1(v1);
    OUTLINED_FUNCTION_230_1((uint64_t)v17);
  }
  else
  {
    v25 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
    v25(v1, v13);
    v25((uint64_t)v17, v13);
  }
  v29 = *(unsigned __int8 *)(v5 + *(int *)(v6 + 24) + 3);
  OUTLINED_FUNCTION_71_1(v5, v26, type metadata accessor for Participant);
  if (v29 != 1)
  {
    v27 = type metadata accessor for Participant;
    v28 = (uint64_t)v9;
    goto LABEL_11;
  }
  OUTLINED_FUNCTION_315(v30, type metadata accessor for Participant);
LABEL_12:
  OUTLINED_FUNCTION_7_7();
}

uint64_t Participant.isMessageCapable.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  unsigned __int8 v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  char v20;
  char v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  unsigned int v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  OUTLINED_FUNCTION_96();
  v29 = v2;
  v30 = v3;
  v4 = v1;
  v5 = type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_74_10();
  *(_QWORD *)&v9 = MEMORY[0x1E0C80A78](v7).n128_u64[0];
  v11 = (char *)&v28 - v10;
  v13 = *(void **)(v4 + *(int *)(v12 + 28));
  if (v13)
  {
    v14 = objc_msgSend(v13, sel_value, v9);
    if (!v14)
    {
      v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v14 = (id)MEMORY[0x1C3B72E00](v15);
      OUTLINED_FUNCTION_30_4();
    }
    v16 = objc_msgSend(v14, sel_destinationIdIsTemporary);

    OUTLINED_FUNCTION_10_103(v17, v18, type metadata accessor for Participant);
    if ((v16 & 1) != 0)
    {
      OUTLINED_FUNCTION_110((uint64_t)v11);
      outlined init with copy of ConversationControlsAppLaunchButtonType(v4, v0, type metadata accessor for Participant);
LABEL_8:
      v22 = 0;
      goto LABEL_14;
    }
  }
  else
  {
    OUTLINED_FUNCTION_10_103(0, v8, type metadata accessor for Participant);
  }
  Participant.isPendingAuthorization.getter();
  v21 = v20;
  outlined destroy of AccountUpdateNotice((uint64_t)v11, type metadata accessor for Participant);
  OUTLINED_FUNCTION_157_2(v4, v0);
  if ((v21 & 1) != 0)
    goto LABEL_8;
  v19 = *(void **)(v0 + *(int *)(v5 + 28));
  if (v19)
  {
    v23 = objc_msgSend(v19, sel_value);
    v24 = v23;
    if (!v23)
    {
      v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v24 = (void *)MEMORY[0x1C3B72E00](v25);
      v23 = (id)OUTLINED_FUNCTION_2_1();
    }
    v26 = OUTLINED_FUNCTION_25_1((uint64_t)v23, sel_destinationIdIsPseudonym);

    v22 = v26 ^ 1;
  }
  else
  {
    v22 = 1;
  }
LABEL_14:
  OUTLINED_FUNCTION_35_2((uint64_t)v19, type metadata accessor for Participant);
  return v22;
}

uint64_t Participant.cache.getter()
{
  OUTLINED_FUNCTION_14_2();
  return swift_retain();
}

void Participant.with(state:identifier:capabilities:remoteIdentifiers:gradient:nickname:countdownInfo:isAuthorizedToChangeGroupMembership:cache:associatedParticipants:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t (*v85)(_QWORD);
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unsigned __int8 *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  id v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  int *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  void *v131;
  void *v132;
  id v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  id v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  int *v161;
  uint64_t v162;
  _QWORD v163[6];

  OUTLINED_FUNCTION_93();
  v162 = v23;
  v149 = v27;
  v147 = v28;
  v158 = v29;
  v144 = v30;
  v32 = v31;
  v140 = v33;
  v139 = v34;
  v137 = v35;
  v153 = v36;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant.CountdownInfo??);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v37);
  OUTLINED_FUNCTION_41();
  v151 = v38;
  v146 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant.CountdownInfo?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v39);
  OUTLINED_FUNCTION_62_5(v40, v135);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v41);
  v43 = (char *)&v135 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = OUTLINED_FUNCTION_33_0();
  v138 = *(_QWORD *)(v44 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v45);
  OUTLINED_FUNCTION_41();
  v159 = v46;
  v161 = (int *)OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v47);
  v152 = (char *)&v135 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v49);
  OUTLINED_FUNCTION_18_0();
  v150 = v50;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v51);
  OUTLINED_FUNCTION_18_0();
  v148 = v52;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v53);
  OUTLINED_FUNCTION_18_0();
  v143 = v54;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v55);
  OUTLINED_FUNCTION_18_0();
  v142 = v56;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v57);
  OUTLINED_FUNCTION_18_0();
  v141 = v58;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v59);
  OUTLINED_FUNCTION_18_0();
  v136 = v60;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v61);
  OUTLINED_FUNCTION_99_1();
  MEMORY[0x1E0C80A78](v62);
  OUTLINED_FUNCTION_183();
  MEMORY[0x1E0C80A78](v63);
  v65 = (char *)&v135 - v64;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant.State?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v66);
  v67 = OUTLINED_FUNCTION_98_11();
  v68 = type metadata accessor for Participant.State(v67);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v69);
  v71 = (char *)&v135 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = *(void **)v32;
  v156 = *(_QWORD *)(v32 + 8);
  v157 = v72;
  v73 = *(_QWORD *)(v32 + 16);
  v74 = *(_QWORD *)(v32 + 24);
  v75 = *(_QWORD *)(v32 + 32);
  v154 = v74;
  v155 = v73;
  outlined init with copy of FeatureEligibility?(v137, v26, &demangling cache variable for type metadata for Participant.State?);
  outlined init with copy of ConversationControlsAppLaunchButtonType(v162, (uint64_t)v65, type metadata accessor for Participant);
  v76 = OUTLINED_FUNCTION_69_0(v26, 1, v68);
  v145 = v71;
  if (v77)
  {
    outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v65, (uint64_t)v71, type metadata accessor for Participant.State);
    OUTLINED_FUNCTION_162_5(v78, type metadata accessor for Participant);
    OUTLINED_FUNCTION_275(v79, &demangling cache variable for type metadata for Participant.State?);
  }
  else
  {
    OUTLINED_FUNCTION_162_5(v76, type metadata accessor for Participant);
    outlined init with take of StagedCollaboration(v26, (uint64_t)v71, type metadata accessor for Participant.State);
  }
  v80 = v140;
  v81 = v140 & 0xFFFFFFFFFFLL;
  outlined init with copy of FeatureEligibility?(v139, (uint64_t)v43, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  v82 = v162;
  v83 = OUTLINED_FUNCTION_291_4();
  outlined init with copy of ConversationControlsAppLaunchButtonType(v83, v84, v85);
  v86 = OUTLINED_FUNCTION_69_0((uint64_t)v43, 1, v44);
  v87 = v142;
  v88 = v136;
  if (v77)
  {
    v89 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v138 + 16))(v159, v24 + v161[5], v44);
    OUTLINED_FUNCTION_22_29(v89, type metadata accessor for Participant);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v43, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  }
  else
  {
    OUTLINED_FUNCTION_22_29(v86, type metadata accessor for Participant);
    (*(void (**)(uint64_t, char *, uint64_t))(v138 + 32))(v159, v43, v44);
  }
  outlined init with copy of ConversationControlsAppLaunchButtonType(v82, v25, type metadata accessor for Participant);
  v90 = v148;
  if (v81 == 2)
  {
    v91 = (unsigned __int8 *)(v25 + v161[6]);
    LODWORD(v140) = *v91;
    v139 = v91[1];
    v138 = v91[2];
    v137 = v91[3];
    v92 = v91[4];
  }
  else
  {
    v139 = (v81 >> 8) & 1;
    LODWORD(v140) = v80 & 1;
    v138 = (v81 >> 16) & 1;
    v137 = (v81 >> 24) & 1;
    v92 = HIDWORD(v81) & 1;
  }
  v135 = v92;
  v93 = v147;
  OUTLINED_FUNCTION_68_2(v25);
  OUTLINED_FUNCTION_224_0(v82, v88);
  v94 = v156;
  v95 = v157;
  v97 = v154;
  v96 = v155;
  v98 = v75;
  if (v157 == (id)1)
  {
    v99 = v88 + v161[7];
    v95 = *(id *)v99;
    v94 = *(_QWORD *)(v99 + 8);
    v96 = *(_QWORD *)(v99 + 16);
    v97 = *(_QWORD *)(v99 + 24);
    v98 = *(_QWORD *)(v99 + 32);
    outlined copy of Participant.RemoteIdentifiers?(*(id *)v99);
  }
  outlined copy of Participant.RemoteIdentifiers??(v157);
  OUTLINED_FUNCTION_46(v88);
  v163[0] = v95;
  v163[1] = v94;
  v163[2] = v96;
  v163[3] = v97;
  v163[4] = v98;
  v100 = v162;
  v101 = v141;
  OUTLINED_FUNCTION_95_1(v162, v141);
  if (v144)
  {
    v102 = v144;
    v103 = v161;
  }
  else
  {
    v103 = v161;
    v102 = *(_QWORD *)(v101 + v161[8]);
    OUTLINED_FUNCTION_124();
  }
  v104 = v151;
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_46(v101);
  OUTLINED_FUNCTION_95_1(v100, v87);
  v105 = v158;
  v106 = v93;
  if (v93 == 1)
  {
    v107 = (uint64_t *)(v87 + v103[9]);
    v105 = *v107;
    v106 = v107[1];
    OUTLINED_FUNCTION_25_2();
  }
  outlined copy of String??(v158, v93);
  OUTLINED_FUNCTION_94(v87);
  outlined init with copy of FeatureEligibility?(v149, v104, &demangling cache variable for type metadata for Participant.CountdownInfo??);
  v108 = v143;
  OUTLINED_FUNCTION_467(v100, v143);
  v109 = OUTLINED_FUNCTION_69_0(v104, 1, v146);
  if (v77)
  {
    v111 = v160;
    OUTLINED_FUNCTION_71_1(v108 + v103[14], v110, type metadata accessor for Participant.CountdownInfo);
    OUTLINED_FUNCTION_37_17(v112, type metadata accessor for Participant);
    v113 = type metadata accessor for Participant.CountdownInfo(0);
    v114 = __swift_storeEnumTagSinglePayload(v111, 0, 1, v113);
    OUTLINED_FUNCTION_219(v114, &demangling cache variable for type metadata for Participant.CountdownInfo??);
  }
  else
  {
    OUTLINED_FUNCTION_37_17(v109, type metadata accessor for Participant);
    outlined init with take of Any?(v104, v160, &demangling cache variable for type metadata for Participant.CountdownInfo?);
  }
  outlined init with copy of ConversationControlsAppLaunchButtonType(v100, v90, type metadata accessor for Participant);
  if (a21 == 2)
    v115 = *(_BYTE *)(v90 + v103[15]);
  else
    v115 = a21 & 1;
  OUTLINED_FUNCTION_94(v90);
  v116 = v150;
  OUTLINED_FUNCTION_467(v162, v150);
  if (a22)
  {
    v117 = a22;
  }
  else
  {
    v117 = *(_QWORD *)(v116 + v103[16]);
    swift_retain();
  }
  v118 = v152;
  swift_retain();
  outlined destroy of AccountUpdateNotice(v116, type metadata accessor for Participant);
  v119 = 0x100000000;
  if (!(_DWORD)v135)
    v119 = 0;
  v120 = 0x1000000;
  if (!(_DWORD)v137)
    v120 = 0;
  v121 = 0x10000;
  if (!(_DWORD)v138)
    v121 = 0;
  v122 = 256;
  if (!(_DWORD)v139)
    v122 = 0;
  LOBYTE(v134) = v115;
  v123 = v153;
  Participant.init(state:identifier:capabilities:remoteIdentifiers:gradient:nickname:countdownInfo:isAuthorizedToChangeGroupMembership:cache:)((uint64_t)v145, v159, v122 | v140 | v121 | v120 | v119, (uint64_t)v163, v102, v105, v106, v160, v134, v117, v135, v136, v137, v138, v139, v140, v141, v142, v143,
    v144,
    v145,
    v146);
  if (one-time initialization token for shared != -1)
    swift_once();
  v124 = (*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 584))();
  v126 = v162;
  if ((v124 & 1) != 0)
  {
    OUTLINED_FUNCTION_71_1(v162, v125, type metadata accessor for Participant);
    if (a23)
    {
      v127 = a23;
    }
    else
    {
      v127 = *(_QWORD *)&v118[v103[11]];
      OUTLINED_FUNCTION_5_0();
    }
    v128 = OUTLINED_FUNCTION_124();
    OUTLINED_FUNCTION_315(v128, type metadata accessor for Participant);
    v129 = v103[11];
    swift_bridgeObjectRelease();
    *(_QWORD *)(v123 + v129) = v127;
  }
  v130 = v103[12];
  v131 = *(void **)(v126 + v130);
  v132 = *(void **)(v123 + v130);
  v133 = v131;

  *(_QWORD *)(v123 + v130) = v131;
  OUTLINED_FUNCTION_52_1();
}

void Participant.asFullyWaited()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t);
  char v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;

  OUTLINED_FUNCTION_93();
  v49 = v3;
  v50 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant.CountdownInfo??);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_190_1(v5, v44);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_62_5(v7, v44);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant.State?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_98_11();
  v9 = type metadata accessor for Calendar.Component();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_231_0();
  v44 = type metadata accessor for Calendar();
  v11 = *(_QWORD *)(v44 - 8);
  MEMORY[0x1E0C80A78](v44);
  OUTLINED_FUNCTION_78();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = OUTLINED_FUNCTION_33();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_79();
  OUTLINED_FUNCTION_183();
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_307_2(v18, v19, v20, v21, v22, v23, v24, v25, v44);
  static Calendar.current.getter();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v10 + 104))(v2, *MEMORY[0x1E0CB1188], v9);
  Date.init()();
  Calendar.date(byAdding:value:to:wrappingComponents:)();
  v26 = OUTLINED_FUNCTION_290_3();
  v45 = v27;
  v27(v26);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v2, v9);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v0, v44);
  OUTLINED_FUNCTION_69_0((uint64_t)v14, 1, v15);
  if (v28)
  {
    v29 = Date.init()();
    OUTLINED_FUNCTION_32_18(v29, (uint64_t *)&demangling cache variable for type metadata for Date?);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(v46, v14, v15);
  }
  v30 = OUTLINED_FUNCTION_291_4();
  v31(v30);
  v32 = OUTLINED_FUNCTION_248_3();
  swift_storeEnumTagMultiPayload();
  v33 = OUTLINED_FUNCTION_21_79(v1, 0, 1, v32);
  v34 = v47;
  OUTLINED_FUNCTION_77_0(v47, v35, v36, v33);
  v51 = 1;
  OUTLINED_FUNCTION_93_10();
  v37 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant.CountdownInfo?);
  v38 = v48;
  __swift_storeEnumTagSinglePayload(v48, 1, 1, v37);
  LOBYTE(v42) = 2;
  Participant.with(state:identifier:capabilities:remoteIdentifiers:gradient:nickname:countdownInfo:isAuthorizedToChangeGroupMembership:cache:associatedParticipants:)(v1, v34, 2, (uint64_t)&v51, 0, 0, 1, v38, v42, 0, 0, v43, v44, (uint64_t)v45, v46, v47, v48, v49, v50,
    v51,
    v52,
    v53,
    v54);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v38, &demangling cache variable for type metadata for Participant.CountdownInfo??);
  OUTLINED_FUNCTION_32_18(v39, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_275(v40, &demangling cache variable for type metadata for Participant.State?);
  v41 = OUTLINED_FUNCTION_290_3();
  v45(v41);
  OUTLINED_FUNCTION_52_1();
}

#error "1BD4046D0: call analysis failed (funcsize=84)"

#error "1BD4047DC: call analysis failed (funcsize=60)"

#error "1BD404948: call analysis failed (funcsize=84)"

void Participant.asJoined(avInfo:videoInfo:screenInfo:captionInfo:copresenceInfo:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t EnumCaseMultiPayload;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  _BYTE v61[8];
  uint64_t v62;
  uint64_t v63;
  _BYTE v64[24];
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  OUTLINED_FUNCTION_93();
  v55 = v3;
  v56 = v0;
  v53 = v4;
  v49 = v5;
  v50 = v6;
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v14 = v13;
  HIDWORD(v48) = v15;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant.CountdownInfo??);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_41();
  v54 = v17;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_41();
  v52 = v19;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant.State?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_6_0();
  v21 = OUTLINED_FUNCTION_248_3();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v22);
  OUTLINED_FUNCTION_16_2();
  v51 = OUTLINED_FUNCTION_33();
  v23 = *(_QWORD *)(v51 - 8);
  MEMORY[0x1E0C80A78](v51);
  OUTLINED_FUNCTION_41();
  v57 = v24;
  outlined init with copy of FeatureEligibility?(v10, (uint64_t)&v58, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
  memset(v64, 0, sizeof(v64));
  v65 = 1;
  OUTLINED_FUNCTION_54_13(&v66);
  v68 = 0;
  v69 = 0;
  v61[0] = BYTE4(v48);
  v67 = 0;
  v62 = v14;
  outlined init with take of Any?(v12, (uint64_t)&v63, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
  outlined retain of [Participant](v12);
  outlined copy of Participant.CaptionInfo?(v8);
  outlined assign with take of Participant?((uint64_t)&v58, (uint64_t)v64, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
  outlined consume of Participant.CaptionInfo?(v67);
  v67 = v8;
  v68 = v49;
  v69 = v50;
  outlined init with copy of ConversationControlsAppLaunchButtonType(v56, v1, type metadata accessor for Participant.State);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((_DWORD)EnumCaseMultiPayload == 4)
  {
    v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
    OUTLINED_FUNCTION_7_2((uint64_t *)(v1 + *(int *)(v26 + 64)));
    v27 = v51;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 32))(v57, v1, v51);
    OUTLINED_FUNCTION_334_2();
  }
  else
  {
    OUTLINED_FUNCTION_22_29(EnumCaseMultiPayload, type metadata accessor for Participant.State);
    Date.init()();
    v27 = v51;
  }
  v28 = v23;
  v29 = v2
      + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?))
               + 48);
  v30 = v57;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v2, v57, v27);
  outlined init with copy of Participant.MediaInfo((uint64_t)v61, v29);
  v31 = OUTLINED_FUNCTION_315_0();
  outlined init with take of Any?(v31, v32, v33);
  swift_storeEnumTagMultiPayload();
  v34 = OUTLINED_FUNCTION_21_79(v2, 0, 1, v21);
  OUTLINED_FUNCTION_77_0(v52, v35, v36, v34);
  v58 = 1;
  v59 = 0u;
  v60 = 0u;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant.CountdownInfo?);
  OUTLINED_FUNCTION_77_0(v54, v38, v39, v37);
  outlined retain of SymbolImageDescription?(v53, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined copy of Participant.CopresenceInfo?);
  LOBYTE(v46) = 2;
  OUTLINED_FUNCTION_27_57(v2, v52, 2, (uint64_t)&v58, v40, v41, v42, v43, v46, 0, 0, v47, v48, v49, v50, v51, v52, (uint64_t)v53, v54,
    v55,
    v56,
    v57,
    v58);
  OUTLINED_FUNCTION_32_18(v44, &demangling cache variable for type metadata for Participant.CountdownInfo??);
  OUTLINED_FUNCTION_275(v45, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v2, &demangling cache variable for type metadata for Participant.State?);
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v30, v27);
  outlined destroy of Participant.MediaInfo((uint64_t)v61);
  OUTLINED_FUNCTION_52_1();
}

#error "1BD404F0C: call analysis failed (funcsize=146)"

#error "1BD405044: call analysis failed (funcsize=65)"

#error "1BD405260: call analysis failed (funcsize=131)"

#error "1BD405484: call analysis failed (funcsize=126)"

#error "1BD4055E0: call analysis failed (funcsize=81)"

#error "1BD405750: call analysis failed (funcsize=82)"

#error "1BD4058D4: call analysis failed (funcsize=117)"

#error "1BD405A50: call analysis failed (funcsize=62)"

#error "1BD405B80: call analysis failed (funcsize=76)"

#error "1BD405CB0: call analysis failed (funcsize=68)"

uint64_t Participant.name(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  int EnumTagSinglePayload;
  BOOL v12;
  id v13;
  Swift::String v14;
  Swift::String_optional v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v23[8];
  uint64_t v24;
  uint64_t v25;
  Swift::String v26;

  OUTLINED_FUNCTION_96();
  v24 = v1;
  v25 = v2;
  v4 = v3;
  v6 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = OUTLINED_FUNCTION_14_2();
  specialized Collection.first.getter(*(_QWORD *)(v0 + *(int *)(v10 + 44)), (uint64_t)v9);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v9, &demangling cache variable for type metadata for Participant?);
  if (*(_QWORD *)(v0 + *(int *)(v10 + 36) + 8))
    v12 = EnumTagSinglePayload == 1;
  else
    v12 = 0;
  if (v12)
  {
    v13 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
    v26._object = (void *)0xE000000000000000;
    v14._object = (void *)0x80000001BD68B900;
    v14._countAndFlagsBits = 0xD000000000000020;
    v15.value._countAndFlagsBits = 0x61737265766E6F43;
    v15.value._object = (void *)0xEF74694B6E6F6974;
    v16._countAndFlagsBits = 0;
    v16._object = (void *)0xE000000000000000;
    v26._countAndFlagsBits = 0;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v14, v15, (NSBundle)v13, v16, v26);

    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v17 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v17 + 16) = xmmword_1BD6441D0;
    v23[0] = v6;
    v23[1] = v4;
    OUTLINED_FUNCTION_124();
    v18 = MEMORY[0x1E0DEA968];
    v19 = String.init<A>(_:)();
    v21 = v20;
    *(_QWORD *)(v17 + 56) = v18;
    *(_QWORD *)(v17 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v17 + 32) = v19;
    *(_QWORD *)(v17 + 40) = v21;
    v6 = String.init(format:_:)();
    OUTLINED_FUNCTION_2_1();
  }
  else
  {
    OUTLINED_FUNCTION_124();
  }
  return v6;
}

void static Participant.State.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;

  OUTLINED_FUNCTION_93();
  v2 = v1;
  v4 = v3;
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_5_27();
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_132_9();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_235_0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (Participant.State, Participant.State));
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_77_1();
  v11 = v0 + *(int *)(v10 + 48);
  OUTLINED_FUNCTION_467(v4, v0);
  OUTLINED_FUNCTION_467(v2, v11);
  type metadata accessor for Participant.State(0);
  v12 = (char *)sub_1BD405FBC + 4 * byte_1BD65E16C[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_1BD405FBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  void (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;

  if (OUTLINED_FUNCTION_68_22())
  {
    v10 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 144) + 8))(v5, v1);
    OUTLINED_FUNCTION_162_5(v10, type metadata accessor for Participant.State);
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 144);
    v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
    v7(v2, v5, v1);
    v7(v3, v4, v1);
    OUTLINED_FUNCTION_311_0();
    static Date.== infix(_:_:)();
    v8 = *(void (**)(uint64_t))(v6 + 8);
    v9 = OUTLINED_FUNCTION_223_0();
    v8(v9);
    ((void (*)(uint64_t, uint64_t))v8)(v2, v1);
  }
  OUTLINED_FUNCTION_52_1();
}

void static Participant.VideoInfo.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  unsigned __int8 *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(__int128 *, uint64_t, uint64_t);
  uint64_t v32;
  char v33;
  _BYTE *v34;
  _BYTE *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int16 v47;
  __int16 v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int16 v58;
  int64_t v60;
  char v61;
  __int128 v62;
  uint64_t v63;
  __int128 v64;
  uint64_t v65;
  _QWORD v66[3];
  uint64_t v67;
  uint64_t v68;
  _BYTE v69[24];
  uint64_t v70;
  _BYTE v71[24];
  uint64_t v72;
  _BYTE v73[32];
  uint64_t v74;
  _BYTE v75[32];
  uint64_t v76;

  v3 = *(_QWORD **)a1;
  v4 = *(_QWORD *)a1 + 64;
  v61 = 1;
  v5 = 1 << *(_BYTE *)(*(_QWORD *)a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(*(_QWORD *)a1 + 64);
  outlined retain of [Participant]((uint64_t)a1);
  v8 = 0;
  v60 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_29;
    }
    v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_95:
      __break(1u);
      return;
    }
    if (v11 >= v60)
      goto LABEL_50;
    v12 = *(_QWORD *)(v4 + 8 * v11);
    ++v8;
    if (!v12)
    {
      v8 = v11 + 1;
      OUTLINED_FUNCTION_213_1();
      if (v14 == v15)
        goto LABEL_50;
      v12 = *(_QWORD *)(v4 + 8 * v8);
      if (!v12)
      {
        v8 = v13 + 2;
        OUTLINED_FUNCTION_213_1();
        if (v14 == v15)
          goto LABEL_50;
        v12 = *(_QWORD *)(v4 + 8 * v8);
        if (!v12)
        {
          v8 = v16 + 3;
          OUTLINED_FUNCTION_213_1();
          if (v14 == v15)
            goto LABEL_50;
          v12 = *(_QWORD *)(v4 + 8 * v8);
          if (!v12)
          {
            v8 = v17 + 4;
            OUTLINED_FUNCTION_213_1();
            if (v14 == v15)
              goto LABEL_50;
            v12 = *(_QWORD *)(v4 + 8 * v8);
            if (!v12)
              break;
          }
        }
      }
    }
LABEL_28:
    v7 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v8 << 6);
LABEL_29:
    v21 = *(unsigned __int8 *)(v3[6] + v10);
    if (v3[2] && (v22 = specialized __RawDictionaryStorage.find<A>(_:)(v21), (v23 & 1) != 0))
    {
      outlined init with copy of IDSLookupManager(v3[7] + 40 * v22, (uint64_t)v75);
    }
    else
    {
      v76 = 0;
      memset(v75, 0, sizeof(v75));
    }
    v24 = *(_QWORD *)a2;
    if (*(_QWORD *)(*(_QWORD *)a2 + 16)
      && (v25 = specialized __RawDictionaryStorage.find<A>(_:)(v21), (v26 & 1) != 0))
    {
      outlined init with copy of IDSLookupManager(*(_QWORD *)(v24 + 56) + 40 * v25, (uint64_t)v73);
    }
    else
    {
      v74 = 0;
      memset(v73, 0, sizeof(v73));
    }
    OUTLINED_FUNCTION_68_6((uint64_t)v75, (uint64_t)v69);
    OUTLINED_FUNCTION_68_6((uint64_t)v73, (uint64_t)v71);
    if (v70)
    {
      if (v72)
      {
        OUTLINED_FUNCTION_68_6((uint64_t)v75, (uint64_t)&v64);
        if (!v65)
        {
          OUTLINED_FUNCTION_211((uint64_t)v73);
          OUTLINED_FUNCTION_211((uint64_t)v75);
          OUTLINED_FUNCTION_211((uint64_t)&v64);
LABEL_47:
          v35 = v71;
          goto LABEL_48;
        }
        outlined init with take of Notice(&v64, (uint64_t)v66);
        OUTLINED_FUNCTION_68_6((uint64_t)v73, (uint64_t)&v62);
        if (!v63)
        {
          OUTLINED_FUNCTION_211((uint64_t)v73);
          OUTLINED_FUNCTION_211((uint64_t)v75);
          OUTLINED_FUNCTION_211((uint64_t)&v62);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v66);
          goto LABEL_47;
        }
        outlined init with take of Notice(&v62, (uint64_t)&v64);
        v27 = v4;
        v28 = a2;
        v29 = v67;
        v30 = v68;
        __swift_project_boxed_opaque_existential_1(v66, v67);
        v31 = *(uint64_t (**)(__int128 *, uint64_t, uint64_t))(v30 + 128);
        v32 = v30;
        a2 = v28;
        v4 = v27;
        v33 = v31(&v64, v29, v32);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v64);
        OUTLINED_FUNCTION_211((uint64_t)v73);
        OUTLINED_FUNCTION_211((uint64_t)v75);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v66);
        OUTLINED_FUNCTION_211((uint64_t)v71);
        OUTLINED_FUNCTION_211((uint64_t)v69);
        v61 &= v33;
      }
      else
      {
        OUTLINED_FUNCTION_211((uint64_t)v73);
        v35 = v75;
LABEL_48:
        OUTLINED_FUNCTION_211((uint64_t)v35);
        v34 = v69;
LABEL_49:
        OUTLINED_FUNCTION_211((uint64_t)v34);
        v61 = 0;
      }
    }
    else
    {
      OUTLINED_FUNCTION_211((uint64_t)v73);
      OUTLINED_FUNCTION_211((uint64_t)v75);
      v34 = v71;
      if (v72)
        goto LABEL_49;
    }
  }
  v19 = v18 + 5;
  if (v19 < v60)
  {
    v12 = *(_QWORD *)(v4 + 8 * v19);
    if (!v12)
    {
      while (1)
      {
        v8 = v19 + 1;
        if (__OFADD__(v19, 1))
          goto LABEL_95;
        OUTLINED_FUNCTION_213_1();
        if (v14 == v15)
          goto LABEL_50;
        v12 = *(_QWORD *)(v4 + 8 * v8);
        v19 = v20 + 1;
        if (v12)
          goto LABEL_28;
      }
    }
    v8 = v19;
    goto LABEL_28;
  }
LABEL_50:
  swift_release();
  if ((v61 & 1) != 0)
  {
    if (a1[9])
      v36 = 256;
    else
      v36 = 0;
    v37 = v36 | a1[8];
    v38 = 0x10000;
    if (a1[10])
      v39 = 0x10000;
    else
      v39 = 0;
    v40 = v37 | v39 | ((unint64_t)a1[11] << 24);
    if (a1[12])
      v41 = 0x100000000;
    else
      v41 = 0;
    if (a1[13])
      v42 = 0x10000000000;
    else
      v42 = 0;
    if (a1[14])
      v43 = 0x1000000000000;
    else
      v43 = 0;
    v44 = v41 | v42;
    if (a1[15])
      v45 = 0x100000000000000;
    else
      v45 = 0;
    v46 = v40 | v44 | v43 | v45;
    if (a1[17])
      v47 = 256;
    else
      v47 = 0;
    v48 = v47 | a1[16];
    if (a2[9])
      v49 = 256;
    else
      v49 = 0;
    v50 = v49 | a2[8];
    if (!a2[10])
      v38 = 0;
    v51 = v50 | v38 | ((unint64_t)a2[11] << 24);
    if (a2[12])
      v52 = 0x100000000;
    else
      v52 = 0;
    if (a2[13])
      v53 = 0x10000000000;
    else
      v53 = 0;
    if (a2[14])
      v54 = 0x1000000000000;
    else
      v54 = 0;
    v55 = v52 | v53;
    if (a2[15])
      v56 = 0x100000000000000;
    else
      v56 = 0;
    v57 = v51 | v55 | v54 | v56;
    if (a2[17])
      v58 = 256;
    else
      v58 = 0;
    static Participant.VideoState.== infix(_:_:)(v46, v48, v57, v58 | a2[16]);
  }
}

BOOL static Participant.VideoState.== infix(_:_:)(uint64_t a1, __int16 a2, uint64_t a3, __int16 a4)
{
  return OUTLINED_FUNCTION_201(a3 ^ a1 | BYTE1(a1) & 1 ^ BYTE1(a3) & 1 | BYTE2(a1) & 1 ^ BYTE2(a3) & 1 | (((a3 ^ a1) & 0xFF000000) != 0) | HIBYTE(a1) & 1 ^ HIBYTE(a3) & 1 | a2 ^ a4 | ((unsigned __int16)(a2 ^ a4) >> 8));
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance Participant.VideoInfo(void *__src, unsigned __int8 *a2)
{
  char v3;
  unsigned __int8 v5[80];

  memcpy(v5, __src, 0x4AuLL);
  static Participant.VideoInfo.== infix(_:_:)(v5, a2);
  return v3 & 1;
}

void static Participant.ScreenInfo.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _BYTE v48[64];
  uint64_t v49;
  _BYTE v50[64];
  uint64_t v51;
  _BYTE v52[56];
  uint64_t v53;
  _BYTE v54[56];
  uint64_t v55;
  _BYTE v56[48];
  uint64_t v57;
  _BYTE v58[48];
  uint64_t v59;
  _BYTE v60[104];
  double v61;
  _BYTE v62[104];
  double v63;
  _BYTE v64[112];
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  uint64_t v72;
  unsigned __int8 v73;
  __int128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  uint64_t v83;
  char v84;
  __int128 v85;
  uint64_t v86;
  unsigned __int8 v87;
  unsigned __int8 v88;
  unsigned __int8 v89;
  unsigned __int8 v90;
  _QWORD v91[3];
  uint64_t v92;
  uint64_t v93;
  unsigned __int8 v94;
  unsigned __int8 v95;
  unsigned __int8 v96;
  unsigned __int8 v97;
  _BYTE v98[40];
  _BYTE v99[40];
  _QWORD v100[2];
  char v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  uint64_t v106;
  _QWORD v107[2];
  char v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;

  OUTLINED_FUNCTION_149_1();
  v114 = v2;
  v115 = v3;
  OUTLINED_FUNCTION_6_6();
  outlined init with copy of FeatureEligibility?(v4, (uint64_t)&v85, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
  if (v86)
  {
    outlined init with take of Notice(&v85, (uint64_t)v91);
    outlined init with copy of FeatureEligibility?(v0, (uint64_t)&v74, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
    if (v75)
    {
      outlined init with take of Notice(&v74, (uint64_t)&v85);
      v5 = v92;
      v6 = v93;
      __swift_project_boxed_opaque_existential_1(v91, v92);
      v7 = (*(uint64_t (**)(__int128 *, uint64_t, uint64_t))(v6 + 128))(&v85, v5, v6);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v85);
      v8 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v91);
      goto LABEL_9;
    }
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v74, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v91);
  }
  else
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v85, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
  }
  OUTLINED_FUNCTION_41_6(v1, (uint64_t)v91);
  v9 = v92;
  OUTLINED_FUNCTION_9_42((uint64_t)v91);
  OUTLINED_FUNCTION_72_24(v10, (uint64_t)v91);
  if (v9)
  {
    v8 = OUTLINED_FUNCTION_317_2();
    v7 = 0;
  }
  else
  {
    outlined init with take of Any?((uint64_t)v91, (uint64_t)&v85, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
    v7 = v86 == 0;
    OUTLINED_FUNCTION_18_18((uint64_t)&v85);
  }
LABEL_9:
  v11 = OUTLINED_FUNCTION_81_18(v8, (uint64_t)v91);
  OUTLINED_FUNCTION_72_24(v11, (uint64_t)&v85);
  if ((v7 & 1) == 0)
  {
    outlined destroy of Participant.ScreenInfo((uint64_t)&v85);
    v20 = OUTLINED_FUNCTION_317_2();
LABEL_18:
    v25 = OUTLINED_FUNCTION_81_18(v20, (uint64_t)&v74);
    OUTLINED_FUNCTION_72_24(v25, (uint64_t)v64);
    goto LABEL_19;
  }
  v12 = v94;
  v13 = v95;
  v14 = v96;
  v15 = v97;
  OUTLINED_FUNCTION_317_2();
  v16 = v87;
  v17 = v88;
  v18 = v89;
  v19 = v90;
  v20 = outlined destroy of Participant.ScreenInfo((uint64_t)&v85);
  if (v12 != v16 || ((v13 ^ v17) & 1) != 0 || ((v14 ^ v18) & 1) != 0)
    goto LABEL_18;
  v21 = OUTLINED_FUNCTION_81_18(v20, (uint64_t)&v74);
  OUTLINED_FUNCTION_72_24(v21, (uint64_t)v64);
  if (v15 != v19)
    goto LABEL_19;
  v22 = v73;
  if ((v84 & 1) != 0)
  {
    OUTLINED_FUNCTION_315_4();
    v23 = OUTLINED_FUNCTION_320_1();
    if (v22)
    {
      v24 = OUTLINED_FUNCTION_81_18(v23, (uint64_t)v62);
      OUTLINED_FUNCTION_72_24(v24, (uint64_t)v60);
      goto LABEL_28;
    }
    goto LABEL_20;
  }
  if ((v73 & 1) != 0)
  {
LABEL_19:
    OUTLINED_FUNCTION_315_4();
    v23 = OUTLINED_FUNCTION_320_1();
LABEL_20:
    v26 = OUTLINED_FUNCTION_81_18(v23, (uint64_t)v62);
    OUTLINED_FUNCTION_72_24(v26, (uint64_t)v60);
LABEL_21:
    outlined destroy of Participant.ScreenInfo((uint64_t)v60);
    v27 = outlined destroy of Participant.ScreenInfo((uint64_t)v62);
    v28 = OUTLINED_FUNCTION_81_18(v27, (uint64_t)v58);
    OUTLINED_FUNCTION_72_24(v28, (uint64_t)v56);
LABEL_22:
    outlined destroy of Participant.ScreenInfo((uint64_t)v56);
    v29 = outlined destroy of Participant.ScreenInfo((uint64_t)v58);
    v30 = OUTLINED_FUNCTION_81_18(v29, (uint64_t)v54);
    OUTLINED_FUNCTION_72_24(v30, (uint64_t)v52);
LABEL_23:
    outlined destroy of Participant.ScreenInfo((uint64_t)v52);
    v31 = outlined destroy of Participant.ScreenInfo((uint64_t)v54);
    v32 = OUTLINED_FUNCTION_81_18(v31, (uint64_t)v50);
    OUTLINED_FUNCTION_72_24(v32, (uint64_t)v48);
    goto LABEL_24;
  }
  v100[0] = v76;
  v100[1] = v77;
  v101 = v78 & 1;
  v102 = v79;
  v103 = v80;
  v104 = v81;
  v105 = v82;
  v106 = v83;
  v107[0] = v65;
  v107[1] = v66;
  v108 = v67 & 1;
  v109 = v68;
  v110 = v69;
  v111 = v70;
  v112 = v71;
  v113 = v72;
  v33 = static Participant.ScreenShareAttributes.== infix(_:_:)((uint64_t)v100, (uint64_t)v107);
  OUTLINED_FUNCTION_315_4();
  v34 = OUTLINED_FUNCTION_320_1();
  v35 = OUTLINED_FUNCTION_81_18(v34, (uint64_t)v62);
  OUTLINED_FUNCTION_72_24(v35, (uint64_t)v60);
  if ((v33 & 1) == 0)
    goto LABEL_21;
LABEL_28:
  v36 = v63;
  outlined destroy of Participant.ScreenInfo((uint64_t)v62);
  v37 = v61;
  v38 = outlined destroy of Participant.ScreenInfo((uint64_t)v60);
  v39 = OUTLINED_FUNCTION_81_18(v38, (uint64_t)v58);
  OUTLINED_FUNCTION_72_24(v39, (uint64_t)v56);
  if (v36 != v37)
    goto LABEL_22;
  v40 = v59;
  v41 = v57;
  outlined destroy of Participant.ScreenInfo((uint64_t)v56);
  v42 = outlined destroy of Participant.ScreenInfo((uint64_t)v58);
  v43 = OUTLINED_FUNCTION_81_18(v42, (uint64_t)v54);
  OUTLINED_FUNCTION_72_24(v43, (uint64_t)v52);
  if (v40 != v41)
    goto LABEL_23;
  v44 = v55;
  v45 = v53;
  outlined destroy of Participant.ScreenInfo((uint64_t)v52);
  v46 = outlined destroy of Participant.ScreenInfo((uint64_t)v54);
  v47 = OUTLINED_FUNCTION_81_18(v46, (uint64_t)v50);
  OUTLINED_FUNCTION_72_24(v47, (uint64_t)v48);
  if (v44 == v45)
  {
    outlined init with take of AspectRatio((uint64_t)&v51, (uint64_t)v98);
    outlined destroy of Participant.ScreenInfo((uint64_t)v50);
    outlined init with take of AspectRatio((uint64_t)&v49, (uint64_t)v99);
    outlined destroy of Participant.ScreenInfo((uint64_t)v48);
    static AspectRatio.== infix(_:_:)((uint64_t)v98, (uint64_t)v99);
    goto LABEL_25;
  }
LABEL_24:
  outlined destroy of Participant.ScreenInfo((uint64_t)v48);
  outlined destroy of Participant.ScreenInfo((uint64_t)v50);
LABEL_25:
  OUTLINED_FUNCTION_7_7();
}

BOOL static Participant.ScreenState.== infix(_:_:)(unsigned int a1, unsigned int a2)
{
  return OUTLINED_FUNCTION_201(vmaxv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32((int32x4_t)veorq_s8((int8x16_t)vceqzq_s32((int32x4_t)vandq_s8((int8x16_t)vdupq_n_s32(a2), (int8x16_t)xmmword_1BD65EC70)), (int8x16_t)vceqzq_s32((int32x4_t)vandq_s8((int8x16_t)vdupq_n_s32(a1), (int8x16_t)xmmword_1BD65EC70)))), 0xFuLL))));
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance Participant.VideoState(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;
  __int16 v9;
  int v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  int v15;
  int v16;
  int v17;
  int v18;
  __int16 v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int16 v33;
  __int16 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int16 v44;

  v2 = *a1;
  v3 = a1[2];
  v4 = a1[3];
  v5 = a1[4];
  v6 = a1[5];
  v7 = a1[6];
  v8 = a1[7];
  v9 = a1[8];
  v10 = a1[9];
  v11 = *a2;
  v12 = a2[1];
  v13 = a2[2];
  v14 = a2[3];
  v15 = a2[4];
  v16 = a2[5];
  v17 = a2[6];
  v18 = a2[7];
  v19 = a2[8];
  v20 = a2[9];
  if (a1[1])
    v21 = 256;
  else
    v21 = 0;
  v22 = v21 | v2;
  v23 = v3 == 0;
  v24 = 0x10000;
  if (v23)
    v25 = 0;
  else
    v25 = 0x10000;
  v26 = v22 | v25 | (v4 << 24);
  if (v5)
    v27 = 0x100000000;
  else
    v27 = 0;
  if (v6)
    v28 = 0x10000000000;
  else
    v28 = 0;
  if (v7)
    v29 = 0x1000000000000;
  else
    v29 = 0;
  v30 = v27 | v28;
  if (v8)
    v31 = 0x100000000000000;
  else
    v31 = 0;
  v32 = v26 | v30 | v29 | v31;
  if (v10)
    v33 = 256;
  else
    v33 = 0;
  v34 = v33 | v9;
  if (v12)
    v35 = 256;
  else
    v35 = 0;
  v36 = v35 | v11;
  if (!v13)
    v24 = 0;
  v37 = v36 | v24 | (v14 << 24);
  if (v15)
    v38 = 0x100000000;
  else
    v38 = 0;
  if (v16)
    v39 = 0x10000000000;
  else
    v39 = 0;
  if (v17)
    v40 = 0x1000000000000;
  else
    v40 = 0;
  v41 = v38 | v39;
  if (v18)
    v42 = 0x100000000000000;
  else
    v42 = 0;
  v43 = v37 | v41 | v40 | v42;
  if (v20)
    v44 = 256;
  else
    v44 = 0;
  return static Participant.VideoState.== infix(_:_:)(v32, v34, v43, v44 | v19);
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance Participant.ScreenState(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  int v7;
  int v8;
  int v9;

  v2 = *a1;
  if (a1[3])
    v3 = 0x1000000;
  else
    v3 = 0;
  if (a1[2])
    v4 = 0x10000;
  else
    v4 = 0;
  if (a1[1])
    v5 = 256;
  else
    v5 = 0;
  v6 = v5 | v2 | v4 | v3;
  if (a2[3])
    v7 = 0x1000000;
  else
    v7 = 0;
  if (a2[2])
    v8 = 0x10000;
  else
    v8 = 0;
  if (a2[1])
    v9 = 256;
  else
    v9 = 0;
  return static Participant.ScreenState.== infix(_:_:)(v6, v9 | *a2 | v8 | v7);
}

void static Participant.MediaInfo.== infix(_:_:)()
{
  unsigned __int8 *v0;
  unsigned __int8 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int16 v9;
  uint64x2_t v10;
  int16x8_t v11;
  uint64x2_t v12;
  int16x8_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int16 v32;
  _BYTE v33[216];
  _BYTE v34[216];
  _QWORD v35[3];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int16 v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int16 v52;
  _BYTE v53[24];
  uint64_t v54;
  uint64_t v55;
  _BYTE v56[96];
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __int16 v67;
  _BYTE v68[16];
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __int16 v78;
  uint64_t v79;
  int v80;
  unsigned __int32 v81;
  __int16 v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  __int16 v89;
  uint64_t v90;
  int v91;
  unsigned __int32 v92;
  __int16 v93;
  uint64_t v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  __int16 v100;

  OUTLINED_FUNCTION_93();
  if (*v0 != *v1)
  {
    OUTLINED_FUNCTION_168_1((uint64_t)v0, (uint64_t)v68);
    OUTLINED_FUNCTION_298_1();
LABEL_8:
    OUTLINED_FUNCTION_226_0();
    v17 = OUTLINED_FUNCTION_225_4();
LABEL_9:
    OUTLINED_FUNCTION_168_1(v17, (uint64_t)v56);
    OUTLINED_FUNCTION_183_2();
    goto LABEL_10;
  }
  v2 = *((_QWORD *)v1 + 1);
  v3 = *((_QWORD *)v0 + 1);
  OUTLINED_FUNCTION_168_1((uint64_t)v0, (uint64_t)v68);
  OUTLINED_FUNCTION_298_1();
  if (v3 != v2)
    goto LABEL_8;
  v4 = v69;
  v5 = v70;
  v6 = v71;
  v7 = v72;
  v8 = v73;
  v9 = v78;
  if (!v69)
  {
    v21 = v74;
    v22 = v75;
    v23 = v76;
    v24 = v77;
    v25 = v60;
    v26 = v61;
    v27 = v62;
    v28 = v63;
    v29 = v64;
    v30 = v65;
    v31 = v66;
    v32 = v67;
    OUTLINED_FUNCTION_25_2();
    OUTLINED_FUNCTION_226_0();
    OUTLINED_FUNCTION_225_4();
    if (!v58)
    {
      v18 = swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_168_1(v18, (uint64_t)v56);
      OUTLINED_FUNCTION_183_2();
      goto LABEL_14;
    }
LABEL_18:
    v35[0] = v4;
    v35[1] = v5;
    v35[2] = v6;
    v36 = v7;
    v37 = v8;
    v38 = v21;
    v39 = v22;
    v40 = v23;
    v41 = v24;
    v42 = v9;
    v43 = v58;
    v44 = v59;
    v45 = v25;
    v46 = v26;
    v47 = v27;
    v48 = v28;
    v49 = v29;
    v50 = v30;
    v51 = v31;
    v52 = v32;
    v17 = outlined release of (Participant.VideoInfo?, Participant.VideoInfo?)((uint64_t)v35);
    goto LABEL_9;
  }
  if (!v58)
  {
    v21 = v74;
    v22 = v75;
    v23 = v76;
    v24 = v77;
    v25 = v60;
    v26 = v61;
    v27 = v62;
    v28 = v63;
    v29 = v64;
    v30 = v65;
    v31 = v66;
    v32 = v67;
    OUTLINED_FUNCTION_333_2();
    OUTLINED_FUNCTION_226_0();
    OUTLINED_FUNCTION_225_4();
    OUTLINED_FUNCTION_2_1();
    goto LABEL_18;
  }
  v79 = v69;
  v80 = v70 & 0xFF010101;
  v10 = (uint64x2_t)vdupq_n_s64(v70);
  v11 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v10, (uint64x2_t)xmmword_1BD64A110), (int32x4_t)vshlq_u64(v10, (uint64x2_t)xmmword_1BD64A100));
  *(int8x8_t *)v11.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v11), (int8x8_t)0x1000100010001);
  v81 = vmovn_s16(v11).u32[0];
  v82 = v71 & 0x101;
  v83 = v72;
  v84 = v73;
  v85 = v74;
  v86 = v75;
  v87 = v76;
  v88 = v77;
  v89 = v78 & 0x101;
  v90 = v58;
  v91 = v59 & 0xFF010101;
  v12 = (uint64x2_t)vdupq_n_s64(v59);
  v13 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v12, (uint64x2_t)xmmword_1BD64A110), (int32x4_t)vshlq_u64(v12, (uint64x2_t)xmmword_1BD64A100));
  *(int8x8_t *)v13.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v13), (int8x8_t)0x1000100010001);
  v92 = vmovn_s16(v13).u32[0];
  v93 = v60 & 0x101;
  v94 = v61;
  v95 = v62;
  v96 = v63;
  v97 = v64;
  v98 = v65;
  v99 = v66;
  v100 = v67 & 0x101;
  OUTLINED_FUNCTION_333_2();
  OUTLINED_FUNCTION_25_2();
  static Participant.VideoInfo.== infix(_:_:)((unsigned __int8 *)&v79, (unsigned __int8 *)&v90);
  v15 = v14;
  OUTLINED_FUNCTION_2_1();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_226_0();
  OUTLINED_FUNCTION_225_4();
  v16 = OUTLINED_FUNCTION_2_1();
  OUTLINED_FUNCTION_168_1(v16, (uint64_t)v56);
  OUTLINED_FUNCTION_183_2();
  if ((v15 & 1) != 0)
  {
LABEL_14:
    outlined init with copy of FeatureEligibility?((uint64_t)&v57, (uint64_t)v35, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    outlined init with copy of FeatureEligibility?((uint64_t)&v55, (uint64_t)v53, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    if (v36 == 1)
    {
      OUTLINED_FUNCTION_221_3();
      v19 = OUTLINED_FUNCTION_239_4();
      if (v54 == 1)
      {
        OUTLINED_FUNCTION_288_1(v19, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
        goto LABEL_11;
      }
    }
    else
    {
      outlined init with copy of FeatureEligibility?((uint64_t)v35, (uint64_t)v34, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
      if (v54 != 1)
      {
        OUTLINED_FUNCTION_166_3(v33, v53);
        static Participant.ScreenInfo.== infix(_:_:)();
        outlined destroy of Participant.ScreenInfo((uint64_t)v33);
        OUTLINED_FUNCTION_221_3();
        OUTLINED_FUNCTION_239_4();
        v20 = outlined destroy of Participant.ScreenInfo((uint64_t)v34);
        OUTLINED_FUNCTION_288_1(v20, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
        goto LABEL_11;
      }
      OUTLINED_FUNCTION_221_3();
      OUTLINED_FUNCTION_239_4();
      v19 = outlined destroy of Participant.ScreenInfo((uint64_t)v34);
    }
    OUTLINED_FUNCTION_288_1(v19, &demangling cache variable for type metadata for (Participant.ScreenInfo?, Participant.ScreenInfo?));
    goto LABEL_11;
  }
LABEL_10:
  OUTLINED_FUNCTION_221_3();
  OUTLINED_FUNCTION_239_4();
LABEL_11:
  OUTLINED_FUNCTION_52_1();
}

void static Participant.RemoteIdentifiers.== infix(_:_:)(uint64_t a1)
{
  OUTLINED_FUNCTION_59(a1, (unint64_t *)&lazy cache variable for type metadata for NSObject);
  OUTLINED_FUNCTION_50();
  static NSObject.== infix(_:_:)();
  OUTLINED_FUNCTION_91();
}

uint64_t static Participant.CopresenceInfo.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  BOOL v4;
  char v5;
  char v6;
  BOOL v7;
  char v8;

  v4 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (v4 || (v5 = OUTLINED_FUNCTION_13(), v6 = 0, (v5 & 1) != 0))
  {
    v7 = *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24);
    if (v7 || (v8 = OUTLINED_FUNCTION_13(), v6 = 0, (v8 & 1) != 0))
      v6 = ((*(_BYTE *)(a1 + 32) & 1) == 0) ^ *(_BYTE *)(a2 + 32);
  }
  return v6 & 1;
}

uint64_t static Participant.ScreenShareAttributes.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  char v2;

  if (*(double *)a1 == *(double *)a2
    && *(_QWORD *)(a1 + 88) == *(_QWORD *)(a2 + 88)
    && *(_QWORD *)(a1 + 72) == *(_QWORD *)(a2 + 72)
    && *(_QWORD *)(a1 + 80) == *(_QWORD *)(a2 + 80))
  {
    v2 = OUTLINED_FUNCTION_244_0();
  }
  else
  {
    v2 = 0;
  }
  return v2 & 1;
}

void Participant.sortableHandle.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + *(int *)(type metadata accessor for Participant(0) + 28));
  if (v1)
    v2 = v1;
  OUTLINED_FUNCTION_0();
}

void Participant.hash(into:)()
{
  type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_33_0();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
  OUTLINED_FUNCTION_65_2();
  dispatch thunk of Hashable.hash(into:)();
  OUTLINED_FUNCTION_18();
}

void Participant.hashValue.getter()
{
  OUTLINED_FUNCTION_5_1();
  type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_33_0();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
  OUTLINED_FUNCTION_90();
  OUTLINED_FUNCTION_4_6();
  OUTLINED_FUNCTION_2();
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance Participant()
{
  Hasher.init(_seed:)();
  OUTLINED_FUNCTION_33_0();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
  OUTLINED_FUNCTION_90();
  OUTLINED_FUNCTION_4_6();
  OUTLINED_FUNCTION_2();
}

uint64_t closure #1 in Array<A>.sorted()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t (*v6)(uint64_t, uint64_t);
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v20;

  v6 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 8);
  v7 = (void *)v6(a3, a4);
  if (v7)
  {
    v8 = v7;
    v9 = objc_msgSend(v7, sel_value);

    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v12 = v11;

  }
  else
  {
    v10 = 0;
    v12 = 0xE000000000000000;
  }
  v13 = (void *)v6(a3, a4);
  if (v13)
  {
    v14 = v13;
    v15 = objc_msgSend(v13, sel_value);

    v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v18 = v17;

  }
  else
  {
    v16 = 0;
    v18 = 0xE000000000000000;
  }
  if (v16 == v10 && v18 == v12)
    v20 = 0;
  else
    v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v20 & 1;
}

void specialized UnsafeMutableBufferPointer._stableSortImpl(by:)(int64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  Swift::Int v13;
  unint64_t v14;
  Swift::Int v15;
  char *v16;
  Swift::Int v17;
  Swift::Int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  Swift::Int *v22;
  Swift::Int v23;
  uint64_t v24;
  Swift::Int v25;
  uint64_t v26;
  int v27;
  uint64_t *v28;
  Swift::Int *v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  Swift::Int v34;
  uint64_t v35;
  Swift::Int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v42;
  uint64_t v43;
  Swift::Int v44;
  uint64_t v45;
  Swift::Int v46;
  uint64_t v47;
  Swift::Int v48;
  uint64_t *v49;
  uint64_t v50;
  Swift::Int v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Swift::Int v58;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  char *v63;
  char *v64;
  Swift::Int v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  BOOL v77;
  unint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  BOOL v87;
  uint64_t v88;
  char v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  BOOL v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t **v108;
  char *v109;
  uint64_t v110;
  unint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  Swift::Int v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  Swift::Int v128;
  unint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t *v133;
  Swift::Int *v134;
  Swift::Int v135;
  uint64_t *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;

  v2 = v1;
  v131 = type metadata accessor for Participant.Caption(0);
  v4 = *(_QWORD *)(v131 - 8);
  v5 = MEMORY[0x1E0C80A78](v131);
  v127 = (uint64_t)&v121 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v137 = (uint64_t)&v121 - v8;
  v9 = MEMORY[0x1E0C80A78](v7);
  v134 = (uint64_t *)((char *)&v121 - v10);
  MEMORY[0x1E0C80A78](v9);
  v133 = (uint64_t *)((char *)&v121 - v11);
  v12 = *(_QWORD *)(a1 + 8);
  v13 = _minimumMergeRunLength(_:)(v12);
  if (v13 >= v12)
  {
    if (v12 < 0)
      goto LABEL_142;
    if (v12)
      specialized MutableCollection<>._insertionSort(within:sortedEnd:by:)(0, v12, 1, (uint64_t *)a1);
    return;
  }
  v124 = v13;
  v122 = specialized static Array._allocateUninitialized(_:)(v12 / 2);
  v123 = v12;
  v129 = v14;
  v130 = v4;
  if (v12 <= 0)
    goto LABEL_105;
  v15 = 0;
  v16 = (char *)MEMORY[0x1E0DEE9D8];
  v136 = (uint64_t *)a1;
  while (1)
  {
    v17 = v15;
    v18 = v15 + 1;
    v126 = v16;
    v128 = v15;
    if (v15 + 1 >= v12)
    {
      v23 = v15 + 1;
    }
    else
    {
      v19 = *(_QWORD *)a1;
      v20 = *(_QWORD *)(v4 + 72);
      v21 = v133;
      outlined init with copy of ConversationControlsAppLaunchButtonType(v19 + v20 * v18, (uint64_t)v133, type metadata accessor for Participant.Caption);
      v22 = v134;
      outlined init with copy of ConversationControlsAppLaunchButtonType(v19 + v20 * v17, (uint64_t)v134, type metadata accessor for Participant.Caption);
      v138 = *v21;
      v135 = *v22;
      outlined destroy of AccountUpdateNotice((uint64_t)v22, type metadata accessor for Participant.Caption);
      outlined destroy of AccountUpdateNotice((uint64_t)v21, type metadata accessor for Participant.Caption);
      v23 = v17 + 2;
      v125 = v19;
      v139 = v20;
      if (v17 + 2 < v12)
      {
        v121 = v2;
        v132 = v20 * v18;
        v24 = v19;
        v25 = v17 + 2;
        v26 = v20 * (v17 + 2);
        while (1)
        {
          v27 = v138 < v135;
          v28 = v133;
          outlined init with copy of ConversationControlsAppLaunchButtonType(v24 + v26, (uint64_t)v133, type metadata accessor for Participant.Caption);
          v29 = v134;
          outlined init with copy of ConversationControlsAppLaunchButtonType(v24 + v132, (uint64_t)v134, type metadata accessor for Participant.Caption);
          v30 = *v28 >= *v29;
          outlined destroy of AccountUpdateNotice((uint64_t)v29, type metadata accessor for Participant.Caption);
          outlined destroy of AccountUpdateNotice((uint64_t)v28, type metadata accessor for Participant.Caption);
          if (v27 == v30)
            break;
          v24 += v139;
          if (++v25 >= v12)
          {
            v23 = v12;
            v4 = v130;
            goto LABEL_12;
          }
        }
        v4 = v130;
        v23 = v25;
LABEL_12:
        v2 = v121;
        v17 = v128;
      }
      if (v138 >= v135)
        goto LABEL_30;
      if (v23 < v17)
        goto LABEL_143;
      if (v17 >= v23)
      {
LABEL_30:
        a1 = (int64_t)v136;
      }
      else
      {
        v135 = v12;
        v31 = 0;
        v32 = v139;
        v33 = v139 * (v23 - 1);
        v34 = v17;
        v35 = v23 * v139;
        v36 = v34;
        v37 = v34 * v139;
        do
        {
          if (v36 != v23 + v31 - 1)
          {
            v38 = v2;
            v39 = v125;
            if (!v125)
              goto LABEL_149;
            v40 = v125 + v37;
            v138 = v125 + v33;
            outlined init with take of StagedCollaboration(v125 + v37, v127, type metadata accessor for Participant.Caption);
            if (v37 < v33 || v40 >= v39 + v35)
            {
              v42 = v138;
              swift_arrayInitWithTakeFrontToBack();
              v2 = v38;
              v43 = v42;
            }
            else
            {
              v2 = v38;
              v43 = v138;
              if (v37 != v33)
                swift_arrayInitWithTakeBackToFront();
            }
            outlined init with take of StagedCollaboration(v127, v43, type metadata accessor for Participant.Caption);
            v32 = v139;
          }
          ++v36;
          --v31;
          v33 -= v32;
          v35 -= v32;
          v37 += v32;
        }
        while (v36 < v23 + v31);
        v4 = v130;
        v12 = v135;
        a1 = (int64_t)v136;
        v17 = v128;
      }
    }
    if (v23 < v12)
    {
      if (__OFSUB__(v23, v17))
        goto LABEL_141;
      if (v23 - v17 < v124)
      {
        if (__OFADD__(v17, v124))
          goto LABEL_144;
        if (v17 + v124 >= v12)
          v44 = v12;
        else
          v44 = v17 + v124;
        if (v44 < v17)
        {
LABEL_145:
          __break(1u);
          goto LABEL_146;
        }
        if (v23 != v44)
        {
          v121 = v2;
          v45 = *(_QWORD *)(v4 + 72);
          v139 = v45 * (v23 - 1);
          v132 = v45;
          v46 = v23 * v45;
          v125 = v44;
          do
          {
            v47 = 0;
            v48 = v128;
            v135 = v23;
            while (1)
            {
              v49 = v136;
              v50 = *v136;
              v51 = v46;
              v52 = v46 + v47 + *v136;
              v53 = v133;
              outlined init with copy of ConversationControlsAppLaunchButtonType(v52, (uint64_t)v133, type metadata accessor for Participant.Caption);
              v54 = v134;
              outlined init with copy of ConversationControlsAppLaunchButtonType(v139 + v47 + v50, (uint64_t)v134, type metadata accessor for Participant.Caption);
              v138 = *v53;
              v55 = *v54;
              outlined destroy of AccountUpdateNotice((uint64_t)v54, type metadata accessor for Participant.Caption);
              outlined destroy of AccountUpdateNotice((uint64_t)v53, type metadata accessor for Participant.Caption);
              if (v138 >= v55)
                break;
              v56 = *v49;
              if (!*v49)
                goto LABEL_147;
              v46 = v51;
              v57 = v56 + v139 + v47;
              outlined init with take of StagedCollaboration(v56 + v51 + v47, v137, type metadata accessor for Participant.Caption);
              swift_arrayInitWithTakeFrontToBack();
              outlined init with take of StagedCollaboration(v137, v57, type metadata accessor for Participant.Caption);
              v47 -= v132;
              ++v48;
              v58 = v135;
              if (v135 == v48)
                goto LABEL_47;
            }
            v58 = v135;
            v46 = v51;
LABEL_47:
            v23 = v58 + 1;
            v139 += v132;
            v46 += v132;
          }
          while (v23 != v125);
          v23 = v125;
          v2 = v121;
          a1 = (int64_t)v136;
          v17 = v128;
        }
      }
    }
    if (v23 < v17)
      goto LABEL_140;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v135 = v23;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      v16 = v126;
    }
    else
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *((_QWORD *)v126 + 2) + 1, 1, v126);
      v16 = v112;
    }
    v61 = *((_QWORD *)v16 + 2);
    v60 = *((_QWORD *)v16 + 3);
    v62 = v61 + 1;
    if (v61 >= v60 >> 1)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v60 > 1, v61 + 1, 1, v16);
      v16 = v113;
    }
    *((_QWORD *)v16 + 2) = v62;
    v63 = v16 + 32;
    v64 = &v16[16 * v61 + 32];
    v65 = v135;
    *(_QWORD *)v64 = v128;
    *((_QWORD *)v64 + 1) = v65;
    if (v61)
      break;
    v62 = 1;
LABEL_97:
    v12 = *(_QWORD *)(a1 + 8);
    v15 = v135;
    v4 = v130;
    if (v135 >= v12)
      goto LABEL_106;
  }
  while (1)
  {
    v66 = v62 - 1;
    if (v62 >= 4)
    {
      v71 = &v63[16 * v62];
      v72 = *((_QWORD *)v71 - 8);
      v73 = *((_QWORD *)v71 - 7);
      v77 = __OFSUB__(v73, v72);
      v74 = v73 - v72;
      if (v77)
        goto LABEL_125;
      v76 = *((_QWORD *)v71 - 6);
      v75 = *((_QWORD *)v71 - 5);
      v77 = __OFSUB__(v75, v76);
      v69 = v75 - v76;
      v70 = v77;
      if (v77)
        goto LABEL_126;
      v78 = v62 - 2;
      v79 = &v63[16 * v62 - 32];
      v81 = *(_QWORD *)v79;
      v80 = *((_QWORD *)v79 + 1);
      v77 = __OFSUB__(v80, v81);
      v82 = v80 - v81;
      if (v77)
        goto LABEL_127;
      v77 = __OFADD__(v69, v82);
      v83 = v69 + v82;
      if (v77)
        goto LABEL_129;
      if (v83 >= v74)
      {
        v101 = &v63[16 * v66];
        v103 = *(_QWORD *)v101;
        v102 = *((_QWORD *)v101 + 1);
        v77 = __OFSUB__(v102, v103);
        v104 = v102 - v103;
        if (v77)
          goto LABEL_135;
        v94 = v69 < v104;
        goto LABEL_86;
      }
    }
    else
    {
      if (v62 != 3)
      {
        v95 = *((_QWORD *)v16 + 4);
        v96 = *((_QWORD *)v16 + 5);
        v77 = __OFSUB__(v96, v95);
        v88 = v96 - v95;
        v89 = v77;
        goto LABEL_80;
      }
      v68 = *((_QWORD *)v16 + 4);
      v67 = *((_QWORD *)v16 + 5);
      v77 = __OFSUB__(v67, v68);
      v69 = v67 - v68;
      v70 = v77;
    }
    if ((v70 & 1) != 0)
      goto LABEL_128;
    v78 = v62 - 2;
    v84 = &v63[16 * v62 - 32];
    v86 = *(_QWORD *)v84;
    v85 = *((_QWORD *)v84 + 1);
    v87 = __OFSUB__(v85, v86);
    v88 = v85 - v86;
    v89 = v87;
    if (v87)
      goto LABEL_130;
    v90 = &v63[16 * v66];
    v92 = *(_QWORD *)v90;
    v91 = *((_QWORD *)v90 + 1);
    v77 = __OFSUB__(v91, v92);
    v93 = v91 - v92;
    if (v77)
      goto LABEL_132;
    if (__OFADD__(v88, v93))
      goto LABEL_134;
    if (v88 + v93 >= v69)
    {
      v94 = v69 < v93;
LABEL_86:
      if (v94)
        v66 = v78;
      goto LABEL_88;
    }
LABEL_80:
    if ((v89 & 1) != 0)
      goto LABEL_131;
    v97 = &v63[16 * v66];
    v99 = *(_QWORD *)v97;
    v98 = *((_QWORD *)v97 + 1);
    v77 = __OFSUB__(v98, v99);
    v100 = v98 - v99;
    if (v77)
      goto LABEL_133;
    if (v100 < v88)
      goto LABEL_97;
LABEL_88:
    v105 = v66 - 1;
    if (v66 - 1 >= v62)
    {
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
      goto LABEL_136;
    }
    v106 = *(_QWORD *)a1;
    if (!*(_QWORD *)a1)
      goto LABEL_148;
    v107 = v16;
    v108 = (uint64_t **)&v63[16 * v105];
    a1 = (int64_t)*v108;
    v109 = &v63[16 * v66];
    v110 = *((_QWORD *)v109 + 1);
    specialized _merge<A>(low:mid:high:buffer:by:)(v106 + *(_QWORD *)(v130 + 72) * (_QWORD)*v108, v106 + *(_QWORD *)(v130 + 72) * *(_QWORD *)v109, v106 + *(_QWORD *)(v130 + 72) * v110, v129);
    if (v2)
      break;
    if (v110 < a1)
      goto LABEL_122;
    if (v66 > *((_QWORD *)v107 + 2))
      goto LABEL_123;
    *v108 = (uint64_t *)a1;
    *(_QWORD *)&v63[16 * v105 + 8] = v110;
    v111 = *((_QWORD *)v107 + 2);
    if (v66 >= v111)
      goto LABEL_124;
    v62 = v111 - 1;
    memmove(&v63[16 * v66], v109 + 16, 16 * (v111 - 1 - v66));
    v16 = v107;
    *((_QWORD *)v107 + 2) = v111 - 1;
    a1 = (int64_t)v136;
    if (v111 <= 2)
      goto LABEL_97;
  }
LABEL_103:
  swift_bridgeObjectRelease();
  if (v123 >= -1)
    goto LABEL_118;
  __break(1u);
LABEL_105:
  v16 = (char *)MEMORY[0x1E0DEE9D8];
  v62 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_106:
  if (v62 >= 2)
  {
    v114 = *(_QWORD *)a1;
    while (1)
    {
      a1 = v62 - 2;
      if (v62 < 2)
        break;
      if (!v114)
        goto LABEL_150;
      v115 = (uint64_t)v16;
      v116 = *(_QWORD *)&v16[16 * a1 + 32];
      v117 = *(_QWORD *)&v16[16 * v62 + 24];
      specialized _merge<A>(low:mid:high:buffer:by:)(v114 + *(_QWORD *)(v130 + 72) * v116, v114 + *(_QWORD *)(v130 + 72) * *(_QWORD *)&v16[16 * v62 + 16], v114 + *(_QWORD *)(v130 + 72) * v117, v129);
      if (v2)
        goto LABEL_103;
      if (v117 < v116)
        goto LABEL_137;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized _ArrayBuffer._consumeAndCreateNew()(v115);
        v115 = v120;
      }
      if ((unint64_t)a1 >= *(_QWORD *)(v115 + 16))
        goto LABEL_138;
      v118 = (_QWORD *)(v115 + 32 + 16 * a1);
      *v118 = v116;
      v118[1] = v117;
      v119 = *(_QWORD *)(v115 + 16);
      if (v62 > v119)
        goto LABEL_139;
      memmove((void *)(v115 + 32 + 16 * (v62 - 1)), (const void *)(v115 + 32 + 16 * v62), 16 * (v119 - v62));
      v16 = (char *)v115;
      *(_QWORD *)(v115 + 16) = v119 - 1;
      v62 = v119 - 1;
      if (v119 <= 2)
        goto LABEL_117;
    }
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
    goto LABEL_145;
  }
LABEL_117:
  swift_bridgeObjectRelease();
  if (v123 >= -1)
  {
LABEL_118:
    *(_QWORD *)(v122 + 16) = 0;
    swift_bridgeObjectRelease();
    return;
  }
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  __break(1u);
}

uint64_t type metadata accessor for Participant.Caption(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for Participant.Caption);
}

uint64_t type metadata accessor for Participant.CountdownInfo(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for Participant.CountdownInfo);
}

uint64_t partial apply for closure #1 in Array<A>.sorted()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return closure #1 in Array<A>.sorted()(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24)) & 1;
}

uint64_t sub_1BD408770()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 136) >= 2uLL)
    __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  if (*(_QWORD *)(v0 + 328))
  {
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t outlined init with copy of Participant.MediaInfo(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for Participant.MediaInfo(a2, a1);
  return a2;
}

uint64_t sub_1BD4087F0()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 40))
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_1BD40881C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t specialized Participant.ScreenShareAttributes.init(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v3;
  void *v4;
  double v5;
  double v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  double v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  id v20;
  id v21;
  id v22;
  uint64_t result;
  double v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  uint64_t v29;

  v3 = objc_msgSend(a1, sel_displayScale);
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v3, sel_doubleValue);
    v6 = v5;

  }
  else
  {
    v6 = 1.0;
  }
  v7 = OUTLINED_FUNCTION_25_1((uint64_t)v3, sel_cornerRadius);
  v8 = v7;
  v9 = 0;
  v10 = 0;
  if (v7)
  {
    objc_msgSend(v7, sel_doubleValue);
    v10 = v11;

  }
  v12 = OUTLINED_FUNCTION_25_1((uint64_t)v7, sel_systemRootLayerTransform);
  if (v12)
  {
    v13 = v12;
    objc_msgSend(v12, sel_CGAffineTransformValue);
    v15 = v24;
    v14 = v25;
    v17 = v26;
    v16 = v27;
    v18 = v28;
    v9 = v29;

  }
  else
  {
    v16 = 1.0;
    v18 = 0;
    v17 = 0;
    v14 = 0;
    v15 = 1.0;
  }
  v19 = v8 == 0;
  v20 = OUTLINED_FUNCTION_25_1((uint64_t)v12, sel_deviceFamily);
  v21 = OUTLINED_FUNCTION_25_1((uint64_t)v20, sel_deviceHomeButtonType);
  v22 = OUTLINED_FUNCTION_25_1((uint64_t)v21, sel_style);
  result = swift_unknownObjectRelease();
  *(double *)a2 = v6;
  *(_QWORD *)(a2 + 8) = v10;
  *(_BYTE *)(a2 + 16) = v19;
  *(double *)(a2 + 24) = v15;
  *(_QWORD *)(a2 + 32) = v14;
  *(_QWORD *)(a2 + 40) = v17;
  *(double *)(a2 + 48) = v16;
  *(_QWORD *)(a2 + 56) = v18;
  *(_QWORD *)(a2 + 64) = v9;
  *(_QWORD *)(a2 + 72) = v20;
  *(_QWORD *)(a2 + 80) = v21;
  *(_QWORD *)(a2 + 88) = v22;
  return result;
}

void outlined assign with take of Participant.Caption(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_84(a1, a2, a3);
  OUTLINED_FUNCTION_38(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40));
  OUTLINED_FUNCTION_0();
}

id outlined copy of Participant.RemoteIdentifiers?(id result)
{
  id v1;

  if (result)
  {
    v1 = result;
    swift_bridgeObjectRetain();
    return v1;
  }
  return result;
}

void *outlined consume of Participant.RemoteIdentifiers?(void *result)
{
  if (result)
  {

    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t outlined copy of Participant.CopresenceInfo?(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

void *outlined consume of Participant.RemoteIdentifiers??(void *result)
{
  if (result != (void *)1)
    return outlined consume of Participant.RemoteIdentifiers?(result);
  return result;
}

uint64_t *outlined release of (Participant.CopresenceInfo?, Participant.CopresenceInfo?)(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[8];
  v3 = a1[9];
  outlined consume of Participant.CopresenceInfo?(*a1, a1[1]);
  outlined consume of Participant.CopresenceInfo?(v2, v3);
  return a1;
}

uint64_t outlined release of (Participant.VideoInfo?, Participant.VideoInfo?)(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t lazy protocol witness table accessor for type Participant.RemoteIdentifiers and conformance Participant.RemoteIdentifiers()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Participant.RemoteIdentifiers and conformance Participant.RemoteIdentifiers;
  if (!lazy protocol witness table cache variable for type Participant.RemoteIdentifiers and conformance Participant.RemoteIdentifiers)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for Participant.RemoteIdentifiers, &type metadata for Participant.RemoteIdentifiers);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Participant.RemoteIdentifiers and conformance Participant.RemoteIdentifiers);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type Participant.Capabilities and conformance Participant.Capabilities()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Participant.Capabilities and conformance Participant.Capabilities;
  if (!lazy protocol witness table cache variable for type Participant.Capabilities and conformance Participant.Capabilities)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for Participant.Capabilities, &type metadata for Participant.Capabilities);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Participant.Capabilities and conformance Participant.Capabilities);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type Participant.VideoDegradedState and conformance Participant.VideoDegradedState()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Participant.VideoDegradedState and conformance Participant.VideoDegradedState;
  if (!lazy protocol witness table cache variable for type Participant.VideoDegradedState and conformance Participant.VideoDegradedState)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for Participant.VideoDegradedState, &type metadata for Participant.VideoDegradedState);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Participant.VideoDegradedState and conformance Participant.VideoDegradedState);
  }
  return result;
}

void associated type witness table accessor for CaseIterable.AllCases : Collection in Participant.VideoProviderType()
{
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type [Participant.VideoProviderType] and conformance [A], &demangling cache variable for type metadata for [Participant.VideoProviderType]);
}

unint64_t lazy protocol witness table accessor for type Participant.VideoInfo.CameraType and conformance Participant.VideoInfo.CameraType()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Participant.VideoInfo.CameraType and conformance Participant.VideoInfo.CameraType;
  if (!lazy protocol witness table cache variable for type Participant.VideoInfo.CameraType and conformance Participant.VideoInfo.CameraType)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for Participant.VideoInfo.CameraType, &type metadata for Participant.VideoInfo.CameraType);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Participant.VideoInfo.CameraType and conformance Participant.VideoInfo.CameraType);
  }
  return result;
}

void base witness table accessor for Equatable in Participant.Caption()
{
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type Participant.Caption and conformance Participant.Caption, (void (*)(uint64_t))type metadata accessor for Participant.Caption);
}

void base witness table accessor for Equatable in Participant()
{
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type Participant and conformance Participant, (void (*)(uint64_t))type metadata accessor for Participant);
}

_QWORD *initializeBufferWithCopyOfBuffer for Participant(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  size_t v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  char *v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  __int128 v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = type metadata accessor for Participant.State(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        v8 = type metadata accessor for Date();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
        goto LABEL_18;
      case 4u:
        v10 = type metadata accessor for Date();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
        v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        v12 = *(int *)(v11 + 48);
        v13 = (char *)a1 + v12;
        v14 = (char *)a2 + v12;
        *(_OWORD *)v13 = *(_OWORD *)((char *)a2 + v12);
        v15 = *(_QWORD *)((char *)a2 + v12 + 16);
        v16 = *(_QWORD *)((char *)a2 + v12 + 24);
        *((_QWORD *)v13 + 2) = v15;
        *((_QWORD *)v13 + 3) = v16;
        *((_WORD *)v13 + 16) = *((_WORD *)v14 + 16);
        *((_QWORD *)v13 + 5) = *((_QWORD *)v14 + 5);
        v13[48] = v14[48];
        *(_OWORD *)(v13 + 56) = *(_OWORD *)(v14 + 56);
        *(_OWORD *)(v13 + 72) = *(_OWORD *)(v14 + 72);
        v13[88] = v14[88];
        v13[89] = v14[89];
        v17 = *((_QWORD *)v14 + 15);
        swift_bridgeObjectRetain();
        if (v17)
        {
          if (v17 == 1)
          {
            v18 = v13 + 96;
            v19 = v14 + 96;
            v20 = 209;
            goto LABEL_12;
          }
          v22 = *((_QWORD *)v14 + 16);
          *((_QWORD *)v13 + 15) = v17;
          *((_QWORD *)v13 + 16) = v22;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v17 - 8))((uint64_t)(v13 + 96), (uint64_t)(v14 + 96), v17);
        }
        else
        {
          v21 = *((_OWORD *)v14 + 7);
          *((_OWORD *)v13 + 6) = *((_OWORD *)v14 + 6);
          *((_OWORD *)v13 + 7) = v21;
          *((_QWORD *)v13 + 16) = *((_QWORD *)v14 + 16);
        }
        *((_DWORD *)v13 + 34) = *((_DWORD *)v14 + 34);
        v23 = *((_OWORD *)v14 + 10);
        *((_OWORD *)v13 + 9) = *((_OWORD *)v14 + 9);
        *((_OWORD *)v13 + 10) = v23;
        *((_OWORD *)v13 + 11) = *((_OWORD *)v14 + 11);
        v13[192] = v14[192];
        v18 = v13 + 208;
        v19 = v14 + 208;
        *((_QWORD *)v13 + 25) = *((_QWORD *)v14 + 25);
        v20 = 97;
LABEL_12:
        memcpy(v18, v19, v20);
        v24 = *((_QWORD *)v14 + 39);
        if (v24)
        {
          v25 = *((_QWORD *)v14 + 40);
          v26 = *((_QWORD *)v14 + 41);
          *((_QWORD *)v13 + 39) = v24;
          *((_QWORD *)v13 + 40) = v25;
          *((_QWORD *)v13 + 41) = v26;
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v13 + 312) = *(_OWORD *)(v14 + 312);
          *((_QWORD *)v13 + 41) = *((_QWORD *)v14 + 41);
        }
        v27 = *(int *)(v11 + 64);
        v28 = (char *)a1 + v27;
        v29 = (char *)a2 + v27;
        v30 = *((_QWORD *)v29 + 1);
        if (v30)
        {
          *(_QWORD *)v28 = *(_QWORD *)v29;
          *((_QWORD *)v28 + 1) = v30;
          v31 = *((_QWORD *)v29 + 3);
          *((_QWORD *)v28 + 2) = *((_QWORD *)v29 + 2);
          *((_QWORD *)v28 + 3) = v31;
          v28[32] = v29[32];
          *(_OWORD *)(v28 + 40) = *(_OWORD *)(v29 + 40);
          *((_QWORD *)v28 + 7) = *((_QWORD *)v29 + 7);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v32 = *((_OWORD *)v29 + 1);
          *(_OWORD *)v28 = *(_OWORD *)v29;
          *((_OWORD *)v28 + 1) = v32;
          v33 = *((_OWORD *)v29 + 3);
          *((_OWORD *)v28 + 2) = *((_OWORD *)v29 + 2);
          *((_OWORD *)v28 + 3) = v33;
        }
LABEL_18:
        swift_storeEnumTagMultiPayload();
LABEL_19:
        v34 = a3[5];
        v35 = (char *)a1 + v34;
        v36 = (char *)a2 + v34;
        v37 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v35, v36, v37);
        v38 = a3[6];
        v39 = a3[7];
        v40 = (char *)a1 + v38;
        v41 = (char *)a2 + v38;
        *(_DWORD *)v40 = *(_DWORD *)v41;
        v40[4] = v41[4];
        v42 = (char *)a1 + v39;
        v43 = (char *)a2 + v39;
        v44 = *(void **)v43;
        if (*(_QWORD *)v43)
        {
          v45 = *((_QWORD *)v43 + 1);
          *(_QWORD *)v42 = v44;
          *((_QWORD *)v42 + 1) = v45;
          v42[16] = v43[16];
          v46 = *((_QWORD *)v43 + 4);
          *((_QWORD *)v42 + 3) = *((_QWORD *)v43 + 3);
          *((_QWORD *)v42 + 4) = v46;
          v47 = v44;
          swift_bridgeObjectRetain();
        }
        else
        {
          v48 = *((_OWORD *)v43 + 1);
          *(_OWORD *)v42 = *(_OWORD *)v43;
          *((_OWORD *)v42 + 1) = v48;
          *((_QWORD *)v42 + 4) = *((_QWORD *)v43 + 4);
        }
        v49 = a3[9];
        *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
        v50 = (_QWORD *)((char *)a1 + v49);
        v51 = (_QWORD *)((char *)a2 + v49);
        v52 = v51[1];
        *v50 = *v51;
        v50[1] = v52;
        v53 = a3[11];
        *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
        *(_QWORD *)((char *)a1 + v53) = *(_QWORD *)((char *)a2 + v53);
        v54 = a3[12];
        v55 = a3[13];
        v56 = *(void **)((char *)a2 + v54);
        *(_QWORD *)((char *)a1 + v54) = v56;
        *((_BYTE *)a1 + v55) = *((_BYTE *)a2 + v55);
        v57 = a3[14];
        v58 = (char *)a1 + v57;
        v59 = (char *)a2 + v57;
        v60 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v61 = v56;
        if (__swift_getEnumTagSinglePayload((uint64_t)v59, 1, v60))
        {
          v62 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
          memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 16))(v58, v59, v60);
          __swift_storeEnumTagSinglePayload((uint64_t)v58, 0, 1, v60);
        }
        v63 = type metadata accessor for Participant.CountdownInfo(0);
        v64 = *(int *)(v63 + 20);
        v65 = &v58[v64];
        v66 = &v59[v64];
        if (__swift_getEnumTagSinglePayload((uint64_t)&v59[v64], 1, v60))
        {
          v67 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
          memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 16))(v65, v66, v60);
          __swift_storeEnumTagSinglePayload((uint64_t)v65, 0, 1, v60);
        }
        v58[*(int *)(v63 + 24)] = v59[*(int *)(v63 + 24)];
        v68 = a3[16];
        *((_BYTE *)a1 + a3[15]) = *((_BYTE *)a2 + a3[15]);
        *(_QWORD *)((char *)a1 + v68) = *(_QWORD *)((char *)a2 + v68);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
        goto LABEL_19;
    }
  }
  swift_retain();
  return a1;
}

