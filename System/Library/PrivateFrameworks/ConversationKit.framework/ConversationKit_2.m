void specialized PlatformDisplayLink.add(observer:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  _BYTE v19[16];

  v4 = type metadata accessor for DispatchPredicate();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)&v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v7 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DEF740], v4);
  v8 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) != 0)
  {
    swift_beginAccess();
    v9 = *(_QWORD *)(a2 + 32);
    v10 = *(_QWORD *)(v9 + 16);
    if (v10)
    {
      v11 = v9 + 32;
      swift_bridgeObjectRetain_n();
      while (1)
      {
        outlined init with copy of WeakPlatformDisplayLinkObserver(v11, (uint64_t)v19);
        v12 = MEMORY[0x1C3B752C0](v19);
        if (v12)
        {
          v13 = v12;
          swift_unknownObjectRelease();
          if (v13 == a1)
            break;
        }
        outlined destroy of WeakPlatformDisplayLinkObserver((uint64_t)v19);
        v11 += 16;
        if (!--v10)
        {
          swift_bridgeObjectRelease();
          goto LABEL_9;
        }
      }
      swift_bridgeObjectRelease();
      outlined init with take of WeakPlatformDisplayLinkObserver((uint64_t)v19, (uint64_t)&v18);
    }
    else
    {
      swift_bridgeObjectRetain();
LABEL_9:
      v18 = xmmword_1BD6491B0;
    }
    swift_bridgeObjectRelease();
    v14 = v18;
    outlined destroy of WeakPlatformDisplayLinkObserver?((uint64_t)&v18);
    if (v14 == __PAIR128__(1, 0))
    {
      *((_QWORD *)&v18 + 1) = 0;
      swift_unknownObjectWeakInit();
      *((_QWORD *)&v18 + 1) = &protocol witness table for AudioVisualizationLayer;
      v15 = swift_unknownObjectWeakAssign();
      outlined init with take of WeakPlatformDisplayLinkObserver(v15, (uint64_t)v19);
      swift_beginAccess();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      v16 = *(_QWORD *)(*(_QWORD *)(a2 + 32) + 16);
      specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v16);
      v17 = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(v17 + 16) = v16 + 1;
      outlined init with take of WeakPlatformDisplayLinkObserver((uint64_t)v19, v17 + 16 * v16 + 32);
      swift_endAccess();
      PlatformDisplayLink.startIfNecessary()();
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t type metadata accessor for AudioVisualizationLayer()
{
  return objc_opt_self();
}

uint64_t sub_1BD0C9D44()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t outlined init with copy of WeakPlatformDisplayLinkObserver(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for DefaultParticipantCaptionsProviderCreator(a2, a1);
  return a2;
}

uint64_t outlined destroy of WeakPlatformDisplayLinkObserver(uint64_t a1)
{
  destroy for WeakPlatformDisplayLinkObserver();
  return a1;
}

uint64_t outlined destroy of WeakPlatformDisplayLinkObserver?(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for WeakPlatformDisplayLinkObserver?);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t partial apply for closure #2 in PlatformDisplayLink.remove(observer:)(uint64_t a1)
{
  uint64_t v1;

  return closure #2 in PlatformDisplayLink.remove(observer:)(a1, *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t outlined assign with take of WeakPlatformDisplayLinkObserver(uint64_t a1, uint64_t a2)
{
  assignWithTake for DefaultParticipantCaptionsProviderCreator(a2, a1);
  return a2;
}

uint64_t outlined init with take of WeakPlatformDisplayLinkObserver(uint64_t a1, uint64_t a2)
{
  initializeWithTake for DefaultParticipantCaptionsProviderCreator(a2, a1);
  return a2;
}

double UIFont.layoutLineHeight.getter()
{
  void *v0;
  const __CTFont *v1;
  double Ascent;
  double v3;
  double Leading;

  v1 = v0;
  Ascent = CTFontGetAscent(v1);
  v3 = Ascent + fabs(CTFontGetDescent(v1));
  Leading = CTFontGetLeading(v1);

  return ceil(Leading + v3);
}

UIFont __swiftcall UIFont.caseSensitive()()
{
  void *v0;
  uint64_t v1;
  uint64_t inited;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  id v10;
  Class isa;
  id v12;
  double v13;
  id v14;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<[UIFontDescriptorFeatureKey : Int]>);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1BD6441D0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(UIFontDescriptorFeatureKey, Int)>);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BD645380;
  v3 = (void *)*MEMORY[0x1E0DC4A60];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC4A60];
  *(_QWORD *)(inited + 40) = 33;
  v4 = (void *)*MEMORY[0x1E0DC4A50];
  *(_QWORD *)(inited + 48) = *MEMORY[0x1E0DC4A50];
  *(_QWORD *)(inited + 56) = 0;
  type metadata accessor for UIFontDescriptorFeatureKey(0);
  lazy protocol witness table accessor for type TranscriptionViewModel and conformance TranscriptionViewModel(&lazy protocol witness table cache variable for type UIFontDescriptorFeatureKey and conformance UIFontDescriptorFeatureKey, (uint64_t (*)(uint64_t))type metadata accessor for UIFontDescriptorFeatureKey, (uint64_t)&protocol conformance descriptor for UIFontDescriptorFeatureKey);
  v5 = v3;
  v6 = v4;
  *(_QWORD *)(v1 + 32) = Dictionary.init(dictionaryLiteral:)();
  v7 = objc_msgSend(v0, sel_fontDescriptor);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(UIFontDescriptorAttributeName, Any)>);
  v8 = swift_initStackObject();
  *(_OWORD *)(v8 + 16) = xmmword_1BD6441D0;
  v9 = (void *)*MEMORY[0x1E0DC1380];
  *(_QWORD *)(v8 + 32) = *MEMORY[0x1E0DC1380];
  *(_QWORD *)(v8 + 64) = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [[UIFontDescriptorFeatureKey : Int]]);
  *(_QWORD *)(v8 + 40) = v1;
  type metadata accessor for UIFontDescriptorAttributeName(0);
  lazy protocol witness table accessor for type TranscriptionViewModel and conformance TranscriptionViewModel(&lazy protocol witness table cache variable for type UIFontDescriptorAttributeName and conformance UIFontDescriptorAttributeName, (uint64_t (*)(uint64_t))type metadata accessor for UIFontDescriptorAttributeName, (uint64_t)&protocol conformance descriptor for UIFontDescriptorAttributeName);
  v10 = v9;
  Dictionary.init(dictionaryLiteral:)();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v12 = objc_msgSend(v7, sel_fontDescriptorByAddingAttributes_, isa);

  objc_msgSend(v0, sel_pointSize);
  v14 = objc_msgSend((id)objc_opt_self(), sel_fontWithDescriptor_size_, v12, v13);

  return (UIFont)v14;
}

uint64_t specialized Collection.first.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return specialized Collection.first.getter(a1, (uint64_t (*)(void))specialized _NativeSet.startIndex.getter, specialized Set.endIndex.getter, (void (*)(uint64_t, uint64_t, _QWORD, uint64_t))specialized Set.subscript.getter, type metadata accessor for Participant, a2);
}

{
  return specialized Collection.first.getter(a1, type metadata accessor for Participant, a2);
}

{
  return specialized Collection.first.getter(a1, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsAction, a2);
}

{
  return specialized Collection.first.getter(a1, type metadata accessor for RecentsCallItem, a2);
}

{
  return specialized Collection.first.getter(a1, (uint64_t (*)(void))specialized _NativeSet.startIndex.getter, specialized Set.endIndex.getter, (void (*)(uint64_t, uint64_t, _QWORD, uint64_t))specialized Set.subscript.getter, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB4250], a2);
}

{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = type metadata accessor for IndexPath();
  v6 = v5;
  if (v4)
  {
    (*(void (**)(uint64_t, unint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1+ ((*(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80)), v5);
    v7 = 0;
  }
  else
  {
    v7 = 1;
  }
  return OUTLINED_FUNCTION_0_29(a2, v7, 1, v6);
}

{
  return specialized Collection.first.getter(a1, type metadata accessor for CaptionSectioner.SpeakerSection, a2);
}

{
  return specialized Collection.first.getter(a1, type metadata accessor for CaptionSectioner.Caption, a2);
}

double specialized Collection.first.getter@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double result;

  if (*(_QWORD *)(a1 + 16))
  {
    outlined init with copy of RadarReporting(a1 + 32, a2);
  }
  else
  {
    *(_QWORD *)(a2 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

void specialized Collection.first.getter()
{
  specialized Collection.first.getter();
}

{
  specialized Collection.first.getter();
}

{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  void (*v2)(uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v3)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t (*v4)(uint64_t);
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  BOOL v18;

  OUTLINED_FUNCTION_93();
  v3 = v2;
  v5 = v4;
  v6 = v0;
  if ((v0 & 0xC000000000000001) != 0)
  {
    v7 = __CocoaSet.startIndex.getter();
    v9 = v8;
    v10 = 1;
  }
  else
  {
    v7 = v1(v0);
    v9 = v11;
    v10 = v12 & 1;
  }
  v13 = v5(v6);
  v15 = v14;
  v17 = v16 & 1;
  v18 = specialized static Set.Index.== infix(_:_:)(v7, v9, v10, v13, v14, v16 & 1);
  outlined consume of Set<TUHandle>.Index._Variant(v13, v15, v17);
  if (!v18)
    v3(v7, v9, v10, v6);
  OUTLINED_FUNCTION_45_15();
  OUTLINED_FUNCTION_52_1();
}

{
  specialized Collection.first.getter();
}

{
  specialized Collection.first.getter();
}

{
  specialized Collection.first.getter();
}

{
  specialized Collection.first.getter();
}

{
  specialized Collection.first.getter();
}

uint64_t specialized Collection.first.getter@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = *(_QWORD *)(a1 + 16);
  v7 = a2(0);
  v8 = v7;
  if (v6)
  {
    v9 = *(unsigned __int8 *)(*(_QWORD *)(v7 - 8) + 80);
    outlined init with copy of ConversationControlsAction(a1 + ((v9 + 32) & ~v9), a3, a2);
    v10 = 0;
  }
  else
  {
    v10 = 1;
  }
  return __swift_storeEnumTagSinglePayload(a3, v10, 1, v8);
}

void specialized Collection.first.getter(uint64_t a1)
{
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  int v8;
  int v9;

  v2 = specialized _NativeSet.startIndex.getter(a1);
  v4 = v3;
  v6 = v5;
  v7 = specialized Set.endIndex.getter(a1);
  if (((v6 | v9) & 1) != 0)
    goto LABEL_7;
  if (v4 != v8)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return;
  }
  if (v2 != v7)
    specialized Set.subscript.getter(v2);
  OUTLINED_FUNCTION_18();
}

uint64_t specialized Collection.first.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(_QWORD *, _QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[5];

  type metadata accessor for LayoutSubviews();
  _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type LayoutSubviews and conformance LayoutSubviews, (uint64_t (*)(uint64_t))MEMORY[0x1E0CD9370], MEMORY[0x1E0CD9390]);
  dispatch thunk of Collection.startIndex.getter();
  dispatch thunk of Collection.endIndex.getter();
  if (v11[4] == v11[0])
  {
    type metadata accessor for LayoutSubview();
    v2 = OUTLINED_FUNCTION_76_0();
  }
  else
  {
    v6 = (void (*)(_QWORD *, _QWORD))dispatch thunk of Collection.subscript.read();
    v8 = v7;
    v9 = type metadata accessor for LayoutSubview();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, v8, v9);
    v6(v11, 0);
    v2 = a1;
    v3 = 0;
    v4 = 1;
    v5 = v9;
  }
  return __swift_storeEnumTagSinglePayload(v2, v3, v4, v5);
}

_QWORD *specialized Collection.first.getter(uint64_t a1)
{
  _QWORD *result;
  int v3;
  char v4;
  uint64_t v5;

  result = (_QWORD *)specialized Dictionary.startIndex.getter(a1);
  if ((v4 & 1) != 0)
    goto LABEL_8;
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == (_QWORD *)(1 << *(_BYTE *)(a1 + 32)))
    return 0;
  else
    return specialized Dictionary.subscript.getter(&v5, (uint64_t)result, v3, 0, a1);
}

uint64_t specialized Collection.first.getter@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t (*a3)(uint64_t)@<X2>, void (*a4)(uint64_t, uint64_t, _QWORD, uint64_t)@<X3>, uint64_t (*a5)(_QWORD)@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  uint64_t result;
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;

  v11 = a2();
  v13 = v12;
  v15 = v14;
  result = a3(a1);
  if (((v15 | v18) & 1) != 0)
    goto LABEL_8;
  if ((_DWORD)v13 != v17)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (v11 == result)
  {
    v19 = 1;
  }
  else
  {
    a4(v11, v13, 0, a1);
    v19 = 0;
  }
  v20 = a5(0);
  return __swift_storeEnumTagSinglePayload(a6, v19, 1, v20);
}

void specialized Sequence.first(where:)(uint64_t (*a1)(id *), uint64_t a2, uint64_t a3)
{
  specialized Sequence.first(where:)(a1, a2, a3, (unint64_t *)&lazy cache variable for type metadata for TUConversation, 0x1E0DBD240, (unint64_t *)&lazy protocol witness table cache variable for type TUConversation and conformance NSObject);
}

{
  specialized Sequence.first(where:)(a1, a2, a3, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant, 0x1E0DBD2B0, (unint64_t *)&lazy protocol witness table cache variable for type TUConversationParticipant and conformance NSObject);
}

void specialized Sequence.first(where:)(uint64_t (*a1)(id *), uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t a5, unint64_t *a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  id v21;
  unint64_t v22;
  char v23;
  char v24;
  int64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  unint64_t v36;
  id v37;

  v7 = v6;
  v8 = a3;
  if ((a3 & 0xC000000000000001) != 0)
  {
    OUTLINED_FUNCTION_25_2();
    __CocoaSet.makeIterator()();
    _sSo8NSObjectCMaTm_0(0, a4);
    lazy protocol witness table accessor for type TUHandle and conformance NSObject(a6, a4);
    Set.Iterator.init(_cocoa:)();
    v8 = v32;
    v31 = v33;
    v12 = v34;
    v13 = v35;
    v14 = v36;
  }
  else
  {
    v31 = a3 + 56;
    v15 = ~(-1 << *(_BYTE *)(a3 + 32));
    OUTLINED_FUNCTION_78_5();
    v14 = v16 & v17;
    OUTLINED_FUNCTION_25_2();
    v12 = v15;
    v13 = 0;
  }
  v30 = (unint64_t)(v12 + 64) >> 6;
  if (v8 < 0)
    goto LABEL_7;
LABEL_5:
  if (v14)
  {
    v18 = (v14 - 1) & v14;
    v19 = __clz(__rbit64(v14)) | (v13 << 6);
    v20 = v13;
    goto LABEL_24;
  }
  v20 = v13 + 1;
  if (!__OFADD__(v13, 1))
  {
    if (v20 >= v30)
      goto LABEL_36;
    v22 = *(_QWORD *)(v31 + 8 * v20);
    if (!v22)
    {
      OUTLINED_FUNCTION_77_5();
      if (v23 == v24)
      {
LABEL_36:
        OUTLINED_FUNCTION_67_5();
        return;
      }
      OUTLINED_FUNCTION_73_4();
      if (v22)
        goto LABEL_22;
      OUTLINED_FUNCTION_77_5();
      if (v23 == v24)
        goto LABEL_36;
      OUTLINED_FUNCTION_73_4();
      if (v22)
        goto LABEL_22;
      OUTLINED_FUNCTION_77_5();
      if (v23 == v24)
        goto LABEL_36;
      OUTLINED_FUNCTION_73_4();
      if (v22)
      {
LABEL_22:
        v20 = v25;
      }
      else
      {
        v20 = v13 + 5;
        if (v13 + 5 >= v30)
          goto LABEL_36;
        v22 = *(_QWORD *)(v31 + 8 * v20);
        if (!v22)
        {
          while (1)
          {
            OUTLINED_FUNCTION_77_5();
            if (v23 == v24)
              goto LABEL_36;
            OUTLINED_FUNCTION_73_4();
            v28 = v27 + 1;
            if (v22)
            {
              v20 = v28 - 1;
              break;
            }
          }
        }
      }
    }
    v18 = (v22 - 1) & v22;
    v19 = __clz(__rbit64(v22)) + (v20 << 6);
LABEL_24:
    v21 = *(id *)(*(_QWORD *)(v8 + 48) + 8 * v19);
    if (v21)
    {
      while (1)
      {
        v37 = v21;
        v26 = a1(&v37);
        if (v7)
          break;
        if ((v26 & 1) != 0)
          goto LABEL_36;

        v13 = v20;
        v14 = v18;
        if ((v8 & 0x8000000000000000) == 0)
          goto LABEL_5;
LABEL_7:
        if (__CocoaSet.Iterator.next()())
        {
          _sSo8NSObjectCMaTm_0(0, a4);
          swift_unknownObjectRetain();
          swift_dynamicCast();
          v21 = v37;
          swift_unknownObjectRelease();
          v20 = v13;
          v18 = v14;
          if (v21)
            continue;
        }
        goto LABEL_36;
      }

    }
    goto LABEL_36;
  }
  __break(1u);
}

void *specialized Sequence.first(where:)(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  return specialized Sequence.first(where:)(a1, a2, a3);
}

{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  char v11;
  id v13;

  if (a3 >> 62)
    goto LABEL_16;
  v6 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  OUTLINED_FUNCTION_25_2();
  for (; v6; v6 = _CocoaArrayWrapper.endIndex.getter())
  {
    v7 = 4;
    while (1)
    {
      v8 = (a3 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C3B73D18](v7 - 4, a3) : *(id *)(a3 + 8 * v7);
      v9 = v8;
      v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1))
        break;
      v13 = v8;
      v11 = a1(&v13);
      if (v3)
      {
        OUTLINED_FUNCTION_53();

        return v9;
      }
      if ((v11 & 1) != 0)
      {
        OUTLINED_FUNCTION_53();
        return v9;
      }

      ++v7;
      if (v10 == v6)
        goto LABEL_11;
    }
    __break(1u);
LABEL_16:
    OUTLINED_FUNCTION_25_2();
  }
LABEL_11:
  OUTLINED_FUNCTION_53();
  return 0;
}

ConversationKit::LinkSource_optional __swiftcall LinkSource.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  void *object;
  Swift::String v3;
  char *v4;
  unint64_t v5;
  char v6;
  ConversationKit::LinkSource_optional result;

  object = rawValue._object;
  v3._countAndFlagsBits = rawValue._countAndFlagsBits;
  v4 = v1;
  v3._object = object;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of LinkSource.init(rawValue:), v3);
  OUTLINED_FUNCTION_13_3();
  v6 = 3;
  if (v5 < 3)
    v6 = v5;
  *v4 = v6;
  OUTLINED_FUNCTION_18();
  return result;
}

uint64_t LinkSource.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x64657469766E69;
  if (*v0 != 1)
    v1 = 0x6574736576726168;
  if (*v0)
    return v1;
  else
    return 0x43796C6C61636F6CLL;
}

void protocol witness for static Equatable.== infix(_:_:) in conformance LinkSource(unsigned __int8 *a1, char *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

ConversationKit::LinkSource_optional protocol witness for RawRepresentable.init(rawValue:) in conformance LinkSource(Swift::String *a1)
{
  return LinkSource.init(rawValue:)(*a1);
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance LinkSource@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = LinkSource.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void protocol witness for Hashable.hashValue.getter in conformance LinkSource()
{
  specialized RawRepresentable<>.hashValue.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance LinkSource()
{
  return specialized RawRepresentable<>.hash(into:)();
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance LinkSource()
{
  specialized RawRepresentable<>._rawHashValue(seed:)();
}

id ConversationLink.tuConversationLink.getter()
{
  id *v0;

  return *v0;
}

uint64_t ConversationLink.suggestedURLs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ConversationLink.cache.getter()
{
  return swift_retain();
}

void ConversationLink.prevailingSuggestion.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (**v3)(_QWORD, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  Swift::Int v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  id v28;
  _QWORD v29[4];
  void (**v30)(_QWORD, uint64_t);
  uint64_t v31;
  uint64_t v32;
  void (**v33)(_QWORD, uint64_t);
  uint64_t v34;

  OUTLINED_FUNCTION_93();
  v2 = OUTLINED_FUNCTION_33();
  v3 = *(void (***)(_QWORD, uint64_t))(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_16_2();
  v4 = *(_QWORD *)(v0 + 8);
  if ((v4 & 0xC000000000000001) != 0)
  {
    if (__CocoaSet.count.getter() <= 0)
      goto LABEL_35;
    v5 = MEMORY[0x1E0DEE9E8];
    v34 = MEMORY[0x1E0DEE9E8];
    OUTLINED_FUNCTION_5_0();
    __CocoaSet.makeIterator()();
    v6 = __CocoaSet.Iterator.next()();
    if (v6)
    {
      v7 = v6;
      v30 = v3;
      v31 = v2;
      OUTLINED_FUNCTION_17_8(v6, (unint64_t *)&lazy cache variable for type metadata for SGURL);
      v2 = MEMORY[0x1E0DEE9B0] + 8;
      while (1)
      {
        v32 = v7;
        swift_dynamicCast();
        v3 = v33;
        if (SGURL.isValidConversationLink.getter())
        {
          v8 = v34;
          v9 = *(_QWORD *)(v34 + 16);
          if (*(_QWORD *)(v34 + 24) <= v9)
          {
            specialized _NativeSet.resize(capacity:)(v9 + 1);
            v8 = v34;
          }
          v10 = (unint64_t)v33;
          v11 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v8 + 40));
          v12 = v8 + 56;
          v13 = -1 << *(_BYTE *)(v8 + 32);
          v14 = v11 & ~v13;
          v15 = v14 >> 6;
          if (((-1 << v14) & ~*(_QWORD *)(v8 + 56 + 8 * (v14 >> 6))) == 0)
          {
            v17 = 0;
            v18 = (unint64_t)(63 - v13) >> 6;
            while (++v15 != v18 || (v17 & 1) == 0)
            {
              v19 = v15 == v18;
              if (v15 == v18)
                v15 = 0;
              v17 |= v19;
              v20 = *(_QWORD *)(v12 + 8 * v15);
              if (v20 != -1)
              {
                v16 = __clz(__rbit64(~v20)) + (v15 << 6);
                goto LABEL_18;
              }
            }
            __break(1u);
LABEL_37:
            OUTLINED_FUNCTION_5_0();
            v25 = _CocoaArrayWrapper.endIndex.getter();
            swift_release();
            if (!v25)
              goto LABEL_32;
LABEL_29:
            v26 = __OFSUB__(v25, 1);
            v27 = v25 - 1;
            if (v26)
            {
              __break(1u);
            }
            else
            {
              specialized Array._checkSubscript(_:wasNativeTypeChecked:)(v27, (v10 & 0xC000000000000001) == 0, v10);
              if ((v10 & 0xC000000000000001) == 0)
              {
                v28 = *(id *)(v10 + 8 * v27 + 32);
                goto LABEL_32;
              }
            }
            MEMORY[0x1C3B73D18](v27, v10);
LABEL_32:
            swift_release();
            v3[1](v1, v2);
            goto LABEL_35;
          }
          v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v8 + 56 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
LABEL_18:
          *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
          *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v16) = v3;
          OUTLINED_FUNCTION_39_17();
        }
        else
        {

        }
        v7 = __CocoaSet.Iterator.next()();
        if (!v7)
        {
          v5 = v34;
          v3 = v30;
          v2 = v31;
          break;
        }
      }
    }
    swift_release();
  }
  else
  {
    if (!*(_QWORD *)(v4 + 16))
      goto LABEL_35;
    v21 = OUTLINED_FUNCTION_5_0();
    v5 = specialized _NativeSet.filter(_:)(v21);
  }
  if (specialized Set.count.getter(v5) > 1)
  {
    v22 = swift_bridgeObjectRetain();
    v23 = specialized _copyCollectionToContiguousArray<A>(_:)(v22);
    OUTLINED_FUNCTION_27_0();
    v34 = v23;
    specialized MutableCollection<>.sort(by:)(&v34);
    OUTLINED_FUNCTION_27_0();
    v10 = v34;
    v24 = static Date.now.getter();
    MEMORY[0x1E0C80A78](v24);
    v29[2] = v1;
    if (!specialized Sequence.first(where:)((uint64_t (*)(id *))partial apply for closure #3 in ConversationLink.prevailingSuggestion.getter, (uint64_t)v29, v10))
    {
      if ((v10 & 0x8000000000000000) != 0 || (v10 & 0x4000000000000000) != 0)
        goto LABEL_37;
      v25 = *(_QWORD *)(v10 + 16);
      if (v25)
        goto LABEL_29;
    }
    goto LABEL_32;
  }
  specialized Collection.first.getter();
  OUTLINED_FUNCTION_27_0();
LABEL_35:
  OUTLINED_FUNCTION_52_1();
}

uint64_t closure #3 in ConversationLink.prevailingSuggestion.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char v7;
  _QWORD v9[2];

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Date();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  SGURL.endDate.getter((uint64_t)v2);
  if (__swift_getEnumTagSinglePayload((uint64_t)v2, 1, v3) == 1)
  {
    SGURL.recentsDate.getter((uint64_t)v6);
    outlined destroy of Date?((uint64_t)v2);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
  }
  v7 = static Date.> infix(_:_:)();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v7 & 1;
}

BOOL ConversationLink.hasSuggestions.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 8);
  if ((v1 & 0xC000000000000001) != 0)
    v2 = __CocoaSet.count.getter();
  else
    v2 = *(_QWORD *)(v1 + 16);
  return v2 > 0;
}

void ConversationLink.displayName.getter()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  id v11;

  v3 = *(void **)v0;
  v2 = *(_QWORD *)(v0 + 8);
  OUTLINED_FUNCTION_50_13();
  if (v4)
  {
    outlined bridged method (pb) of @objc TUConversationLink.displayName.getter(v4, (SEL *)&selRef_documentTitle);
    OUTLINED_FUNCTION_61_7();
    if (v0)
    {
      v5 = HIBYTE(v0) & 0xF;
      if ((v0 & 0x2000000000000000) == 0)
        v5 = v1 & 0xFFFFFFFFFFFFLL;
      if (v5)
        goto LABEL_18;
      swift_bridgeObjectRelease();
    }
  }
  outlined bridged method (pb) of @objc TUConversationLink.displayName.getter(v3, (SEL *)&selRef_displayName);
  if (v6)
  {
    OUTLINED_FUNCTION_71_8();
    if (v7)
      goto LABEL_18;
    swift_bridgeObjectRelease();
  }
  if ((objc_msgSend(v3, sel_isLocallyCreated) & 1) != 0 || (OUTLINED_FUNCTION_50_13(), !v8))
  {
    if ((v2 & 0xC000000000000001) != 0)
    {
      v9 = v3;
      swift_bridgeObjectRetain();
      swift_retain();
      v10 = __CocoaSet.count.getter();
      swift_release();
      OUTLINED_FUNCTION_13_3();

    }
    else
    {
      v10 = *(_QWORD *)(v2 + 16);
    }
    if (v10 >= 1)
    {
      v11 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
      OUTLINED_FUNCTION_7_13(0x454D495445434146, 0xED00004B4E494C5FLL);

    }
  }
  else
  {
    SGURL.receivedFromDisplayName(using:)();
    OUTLINED_FUNCTION_61_7();
  }
LABEL_18:
  OUTLINED_FUNCTION_2_3();
}

void ConversationLink.callHistoryTitle.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  ConversationLink.displayName.getter();
  if (v0)
  {
    OUTLINED_FUNCTION_71_8();
    if (v1)
      goto LABEL_10;
    OUTLINED_FUNCTION_13_3();
  }
  ConversationLink.prevailingSuggestion.getter();
  if (v2)
  {
    v3 = v2;
    outlined bridged method (pb) of @objc TUConversationLink.displayName.getter(v2, (SEL *)&selRef_documentTitle);
    v5 = v4;
    v7 = v6;

    if (v7)
    {
      v8 = HIBYTE(v7) & 0xF;
      if ((v7 & 0x2000000000000000) == 0)
        v8 = v5 & 0xFFFFFFFFFFFFLL;
      if (!v8)
        OUTLINED_FUNCTION_13_3();
    }
  }
LABEL_10:
  OUTLINED_FUNCTION_2_3();
}

void ConversationLink.extraSubtitleStringWithDate.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  Swift::String v10;
  Swift::String_optional v11;
  Swift::String v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  Swift::String v32;

  OUTLINED_FUNCTION_93();
  v0 = OUTLINED_FUNCTION_33();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_77();
  v4 = v3 - v2;
  ConversationLink.prevailingSuggestion.getter();
  if (v5)
  {
    SGURL.recentsDate.getter(v4);
    v6 = static Date.faceTimeDateString(from:)();
    v30 = v7;
    v31 = v6;
    (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v4, v0);
    v8 = (void *)objc_opt_self();
    v9 = objc_msgSend(v8, sel_conversationKit);
    v32._object = (void *)0xE000000000000000;
    v10._countAndFlagsBits = 0x5050415F4D4F5246;
    v10._object = (void *)0xEC000000454D414ELL;
    v11.value._countAndFlagsBits = 0x61737265766E6F43;
    v11.value._object = (void *)0xEF74694B6E6F6974;
    v12._countAndFlagsBits = 0;
    v12._object = (void *)0xE000000000000000;
    v32._countAndFlagsBits = 0;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v10, v11, (NSBundle)v9, v12, v32);

    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v13 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v13 + 16) = xmmword_1BD6441D0;
    v14 = SGURL.applicationLocalizedName.getter();
    v16 = v15;
    v17 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v13 + 56) = MEMORY[0x1E0DEA968];
    v18 = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v13 + 64) = v18;
    *(_QWORD *)(v13 + 32) = v14;
    *(_QWORD *)(v13 + 40) = v16;
    v19 = String.init(format:_:)();
    v21 = v20;
    OUTLINED_FUNCTION_54_1();
    v22 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
    v23 = objc_msgSend(v22, sel_userInterfaceLayoutDirection);

    v24 = objc_msgSend(v8, sel_conversationKit);
    OUTLINED_FUNCTION_7_13(0xD00000000000001CLL, 0x80000001BD671C10);

    v25 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v25 + 16) = xmmword_1BD645380;
    *(_QWORD *)(v25 + 56) = v17;
    *(_QWORD *)(v25 + 64) = v18;
    v27 = v30;
    v26 = v31;
    if (v23 == (id)1)
      v28 = v31;
    else
      v28 = v19;
    if (v23 == (id)1)
      v29 = v30;
    else
      v29 = v21;
    if (v23 == (id)1)
    {
      v26 = v19;
      v27 = v21;
    }
    *(_QWORD *)(v25 + 32) = v28;
    *(_QWORD *)(v25 + 40) = v29;
    *(_QWORD *)(v25 + 96) = v17;
    *(_QWORD *)(v25 + 104) = v18;
    *(_QWORD *)(v25 + 72) = v26;
    *(_QWORD *)(v25 + 80) = v27;
    String.init(format:_:)();
    OUTLINED_FUNCTION_63_8();
    OUTLINED_FUNCTION_58_1();
  }
  OUTLINED_FUNCTION_52_1();
}

uint64_t ConversationLink.extraSubtitleString.getter()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_24_20();
  if (!v0)
    return 0;
  v1 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  OUTLINED_FUNCTION_7_13(0x5050415F4D4F5246, 0xEC000000454D414ELL);

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v2 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v2 + 16) = xmmword_1BD6441D0;
  v3 = SGURL.applicationLocalizedName.getter();
  v5 = v4;
  *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v2 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v2 + 32) = v3;
  *(_QWORD *)(v2 + 40) = v5;
  String.init(format:_:)();
  OUTLINED_FUNCTION_63_8();
  OUTLINED_FUNCTION_53();
  return v2;
}

void ConversationLink.linkSources.getter()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = *(void **)v0;
  v2 = *(_QWORD *)(v0 + 8);
  if (objc_msgSend(v1, sel_isLocallyCreated))
  {
    specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v4 = v3;
    v6 = *(_QWORD *)(v3 + 16);
    v5 = *(_QWORD *)(v3 + 24);
    if (v6 >= v5 >> 1)
    {
      OUTLINED_FUNCTION_17_27(v5 > 1, v6 + 1);
      v4 = v14;
    }
    *(_QWORD *)(v4 + 16) = v6 + 1;
    *(_BYTE *)(v4 + v6 + 32) = 0;
  }
  else
  {
    v4 = MEMORY[0x1E0DEE9D8];
  }
  if (specialized Set.count.getter(v2) < 1)
  {
    if (*(_QWORD *)(v4 + 16))
      goto LABEL_14;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      OUTLINED_FUNCTION_17_27(0, 1);
      v4 = v15;
    }
    v8 = *(_QWORD *)(v4 + 16);
    v11 = *(_QWORD *)(v4 + 24);
    v9 = v8 + 1;
    if (v8 >= v11 >> 1)
    {
      OUTLINED_FUNCTION_17_27(v11 > 1, v8 + 1);
      v10 = 1;
      v4 = v16;
    }
    else
    {
      v10 = 1;
    }
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      OUTLINED_FUNCTION_17_27(0, *(_QWORD *)(v4 + 16) + 1);
      v4 = v12;
    }
    v8 = *(_QWORD *)(v4 + 16);
    v7 = *(_QWORD *)(v4 + 24);
    v9 = v8 + 1;
    if (v8 >= v7 >> 1)
    {
      OUTLINED_FUNCTION_17_27(v7 > 1, v8 + 1);
      v4 = v13;
    }
    v10 = 2;
  }
  *(_QWORD *)(v4 + 16) = v9;
  *(_BYTE *)(v4 + v8 + 32) = v10;
LABEL_14:
  OUTLINED_FUNCTION_18();
}

void ConversationLink.uniqueId.getter()
{
  void **v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  id v31;
  uint64_t v32;
  void *v33;
  void *v34;
  Swift::String v35;
  uint64_t v36;
  uint64_t v37;
  Swift::String v38;
  Swift::String v39;
  id v40;
  void *v41;
  uint64_t v42;
  void *v43;
  void *v44;
  Swift::String v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  Swift::String v49;

  OUTLINED_FUNCTION_93();
  v3 = type metadata accessor for URL();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_16_2();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_77();
  v8 = v7 - v6;
  v9 = *v0;
  ConversationLink.linkSources.getter();
  v11 = v10;
  v12 = *(_QWORD *)(v10 + 16);
  if (v12)
  {
    v46 = v9;
    v47 = v4;
    v48 = v3;
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    v13 = 0;
    OUTLINED_FUNCTION_40_16();
    OUTLINED_FUNCTION_60_7();
    OUTLINED_FUNCTION_79_4();
    v18 = 0xE900000000000064;
    do
    {
      v19 = *(unsigned __int8 *)(v11 + v13 + 32);
      if (v19 == 1)
        v20 = v17;
      else
        v20 = 0x6574736576726168;
      if (v19 == 1)
        v21 = v16;
      else
        v21 = v18;
      if (*(_BYTE *)(v11 + v13 + 32))
        v22 = v20;
      else
        v22 = v15;
      if (*(_BYTE *)(v11 + v13 + 32))
        v23 = v21;
      else
        v23 = v14;
      v24 = *(_QWORD *)(v2 + 16);
      if (v24 >= *(_QWORD *)(v2 + 24) >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        OUTLINED_FUNCTION_79_4();
        OUTLINED_FUNCTION_60_7();
        OUTLINED_FUNCTION_40_16();
      }
      ++v13;
      *(_QWORD *)(v2 + 16) = v24 + 1;
      v25 = v2 + 16 * v24;
      *(_QWORD *)(v25 + 32) = v22;
      *(_QWORD *)(v25 + 40) = v23;
    }
    while (v12 != v13);
    swift_bridgeObjectRelease();
    v4 = v47;
    v3 = v48;
    v9 = v46;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [String]);
  lazy protocol witness table accessor for type [String] and conformance [A]();
  v26 = BidirectionalCollection<>.joined(separator:)();
  v28 = v27;
  OUTLINED_FUNCTION_30_4();
  v49._countAndFlagsBits = v26;
  v49._object = v28;
  ConversationLink.prevailingSuggestion.getter();
  if (v29)
  {
    v30 = v29;
    v31 = objc_msgSend(v29, sel_documentIdentifier);

    v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v34 = v33;

    v35._countAndFlagsBits = v32;
    v35._object = v34;
    String.append(_:)(v35);
    swift_bridgeObjectRelease();
  }
  ConversationLink.displayName.getter();
  if (v37)
  {
    String.append(_:)(*(Swift::String *)&v36);
    OUTLINED_FUNCTION_30_4();
  }
  swift_bridgeObjectRetain();
  String.append(_:)(v49);
  OUTLINED_FUNCTION_30_4();
  v38._countAndFlagsBits = 45;
  v38._object = (void *)0xE100000000000000;
  String.append(_:)(v38);
  ConversationLink.timeInterval.getter();
  Double.write<A>(to:)();
  v39._countAndFlagsBits = 0x2D6B6E696C2DLL;
  v39._object = (void *)0xE600000000000000;
  String.append(_:)(v39);
  v40 = objc_msgSend(v9, sel_URL);
  if (v40)
  {
    v41 = v40;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v8, v1, v3);
    OUTLINED_FUNCTION_72(v8, 0);
    if (__swift_getEnumTagSinglePayload(v8, 1, v3) != 1)
    {
      OUTLINED_FUNCTION_30_4();
      v42 = URL.absoluteString.getter();
      v44 = v43;
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v8, v3);
      v45._countAndFlagsBits = v42;
      v45._object = v44;
      String.append(_:)(v45);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_52_1();
      return;
    }
  }
  else
  {
    OUTLINED_FUNCTION_72(v8, 1);
  }
  __break(1u);
}

double ConversationLink.timeInterval.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  void *v15;
  char v16;
  double v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  uint64_t v22;
  double v23;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  v2 = MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v25 - v5;
  v7 = type metadata accessor for Date();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v0 + 8);
  v12 = *(_QWORD *)(v0 + 16);
  v26 = *(id *)v0;
  v27 = v11;
  v28 = v12;
  v13 = v26;
  swift_bridgeObjectRetain();
  swift_retain();
  ConversationLink.prevailingSuggestion.getter();
  if (v14)
  {
    v15 = v14;
    v16 = SGURL.hasEventDate.getter();
    swift_release();
    swift_bridgeObjectRelease();

    v17 = 0.0;
    if ((v16 & 1) != 0)
    {
      v26 = v13;
      v27 = v11;
      v28 = v12;
      ConversationLink.prevailingSuggestion.getter();
      if (v18)
      {
        v19 = v18;
        SGURL.recentsDate.getter((uint64_t)v6);

        __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v7);
      }
      else
      {
        v20 = objc_msgSend(v13, sel_creationDate);
        if (v20)
        {
          v21 = v20;
          static Date._unconditionallyBridgeFromObjectiveC(_:)();

          v22 = 0;
        }
        else
        {
          v22 = 1;
        }
        __swift_storeEnumTagSinglePayload((uint64_t)v4, v22, 1, v7);
        outlined init with take of Date?((uint64_t)v4, (uint64_t)v6);
      }
      if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7) == 1)
      {
        outlined destroy of Date?((uint64_t)v6);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
        Date.timeIntervalSinceReferenceDate.getter();
        v17 = v23;
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      }
    }
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();

    return 0.0;
  }
  return v17;
}

void ConversationLink.date.getter(uint64_t a1@<X8>)
{
  __int128 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_77();
  v6 = v5 - v4;
  v14 = *v1;
  ConversationLink.prevailingSuggestion.getter();
  if (v7)
  {
    v8 = v7;
    SGURL.recentsDate.getter(a1);

    v9 = OUTLINED_FUNCTION_33();
    OUTLINED_FUNCTION_0_29(a1, 0, 1, v9);
  }
  else
  {
    v10 = objc_msgSend((id)v14, sel_creationDate);
    if (v10)
    {
      v11 = v10;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      v12 = OUTLINED_FUNCTION_33();
      v13 = 0;
    }
    else
    {
      v12 = type metadata accessor for Date();
      v13 = 1;
    }
    __swift_storeEnumTagSinglePayload(v6, v13, 1, v12);
    outlined init with take of Date?(v6, a1);
    OUTLINED_FUNCTION_18();
  }
}

void ConversationLink.endDate.getter(uint64_t a1@<X8>)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;

  OUTLINED_FUNCTION_24_20();
  if (v2)
  {
    v7 = v2;
    SGURL.endDate.getter(a1);

  }
  else
  {
    type metadata accessor for Date();
    v3 = OUTLINED_FUNCTION_76_0();
    __swift_storeEnumTagSinglePayload(v3, v4, v5, v6);
  }
}

void ConversationLink.hasEventDate.getter()
{
  void *v0;
  void *v1;

  ConversationLink.prevailingSuggestion.getter();
  if (v0)
  {
    v1 = v0;
    SGURL.hasEventDate.getter();

  }
}

uint64_t ConversationLink.groupUUID.getter@<X0>(uint64_t a1@<X8>)
{
  return ConversationLink.groupUUID.getter((SEL *)&selRef_groupUUID, (void (*)(void))MEMORY[0x1E0CB0958], (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0998], a1);
}

void ConversationLink.invitedMemberHandles.getter()
{
  void **v0;

  outlined bridged method (pb) of @objc TUConversationLink.invitedMemberHandles.getter(*v0);
}

uint64_t ConversationLink.url.getter@<X0>(uint64_t a1@<X8>)
{
  return ConversationLink.groupUUID.getter((SEL *)&selRef_URL, (void (*)(void))MEMORY[0x1E0CAFF00], (uint64_t (*)(_QWORD))MEMORY[0x1E0CAFFF8], a1);
}

uint64_t ConversationLink.groupUUID.getter@<X0>(SEL *a1@<X0>, void (*a2)(void)@<X1>, uint64_t (*a3)(_QWORD)@<X2>, uint64_t a4@<X8>)
{
  id *v4;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;

  v8 = objc_msgSend(*v4, *a1);
  if (v8)
  {
    v9 = v8;
    a2();

    v10 = 0;
  }
  else
  {
    v10 = 1;
  }
  v11 = a3(0);
  return OUTLINED_FUNCTION_0_29(a4, v10, 1, v11);
}

uint64_t ConversationLink.init(tuConversationLink:suggestedURLs:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  void *v6;

  if (one-time initialization token for faceTime != -1)
    swift_once();
  v6 = static ParticipantContactDetailsCache.faceTime;
  *a3 = a1;
  a3[1] = a2;
  a3[2] = v6;
  return OUTLINED_FUNCTION_23_26();
}

uint64_t static ConversationLink.== infix(_:_:)(uint64_t a1)
{
  OUTLINED_FUNCTION_17_8(a1, (unint64_t *)&lazy cache variable for type metadata for NSObject);
  return static NSObject.== infix(_:_:)() & 1;
}

void ConversationLink.hash(into:)()
{
  id *v0;
  id v1;

  v1 = *v0;
  NSObject.hash(into:)();

}

void ConversationLink.updated(with:)(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  NSURL *v14;
  void *v15;
  void *v16;
  uint64_t inited;
  id v18;
  id v19;
  unint64_t v20;
  void *v21;
  id v22;
  unint64_t v23;

  type metadata accessor for URL();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_77();
  v8 = v7 - v6;
  v10 = *(void **)v2;
  v9 = *(_QWORD *)(v2 + 8);
  v11 = *(_QWORD *)(v2 + 16);
  OUTLINED_FUNCTION_17_8(v12, (unint64_t *)&lazy cache variable for type metadata for TUConversationLink);
  v13 = objc_msgSend(a1, sel_url);
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  @nonobjc TUConversationLink.init(url:)(v8, v14);
  if (!v15)
    goto LABEL_7;
  v16 = v15;
  if (!objc_msgSend(v10, sel_isEquivalentToConversationLink_, v15))
  {

LABEL_7:
    *a2 = v10;
    a2[1] = v9;
    a2[2] = v11;
    v22 = v10;
    OUTLINED_FUNCTION_8_8();
    swift_retain();
    return;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BD6443F0;
  *(_QWORD *)(inited + 32) = a1;
  v23 = inited;
  specialized Array._endMutation()();
  v18 = v10;
  OUTLINED_FUNCTION_8_8();
  v19 = a1;
  v20 = specialized Set.union<A>(_:)(v23, v9);
  if (one-time initialization token for faceTime != -1)
    swift_once();
  v21 = static ParticipantContactDetailsCache.faceTime;
  *a2 = v18;
  a2[1] = v20;
  a2[2] = v21;
  swift_retain();

}

void specialized Set.union<A>(_:)(unint64_t a1, void *a2)
{
  specialized Set.union<A>(_:)(a1, a2, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant, 0x1E0DBD2B0, (unint64_t *)&lazy protocol witness table cache variable for type TUConversationParticipant and conformance NSObject, (void (*)(id *, id))specialized Set._Variant.insert(_:));
}

{
  specialized Set.union<A>(_:)(a1, a2, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember, 0x1E0DBD2A0, (unint64_t *)&lazy protocol witness table cache variable for type TUConversationMember and conformance NSObject, (void (*)(id *, id))specialized Set._Variant.insert(_:));
}

{
  specialized Set.union<A>(_:)(a1, a2, (unint64_t *)&lazy cache variable for type metadata for TUHandle, 0x1E0DBD2F8, (unint64_t *)&lazy protocol witness table cache variable for type TUHandle and conformance NSObject, (void (*)(id *, id))specialized Set._Variant.insert(_:));
}

void specialized Set.union<A>(_:)(unint64_t a1, void *a2, unint64_t *a3, uint64_t a4, unint64_t *a5, void (*a6)(id *, id))
{
  unint64_t v7;
  id v10;
  id v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v27;
  id v28[7];

  v7 = a1;
  v28[1] = a2;
  if ((a1 & 0xC000000000000001) != 0)
  {
    __CocoaSet.makeIterator()();
    _sSo8NSObjectCMaTm_0(0, a3);
    lazy protocol witness table accessor for type TUHandle and conformance NSObject(a5, a3);
    Set.Iterator.init(_cocoa:)();
    v7 = (unint64_t)v28[2];
    v27 = v28[3];
    v10 = v28[4];
    v11 = v28[5];
    v12 = (unint64_t)v28[6];
  }
  else
  {
    v11 = 0;
    v27 = (_QWORD *)(a1 + 56);
    OUTLINED_FUNCTION_78_5();
    v12 = v13 & v14;
  }
  v15 = ((unint64_t)v10 + 64) >> 6;
  if ((v7 & 0x8000000000000000) != 0)
    goto LABEL_7;
  while (1)
  {
    if (v12)
    {
      v16 = (v12 - 1) & v12;
      v17 = __clz(__rbit64(v12)) | ((_QWORD)v11 << 6);
      v18 = (char *)v11;
      goto LABEL_26;
    }
    v20 = (uint64_t)v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v20 >= v15)
      goto LABEL_29;
    v18 = (char *)v11 + 1;
    if (!v27[v20])
    {
      v18 = (char *)v11 + 2;
      if ((uint64_t)v11 + 2 >= v15)
        goto LABEL_29;
      if (!v27[(_QWORD)v18])
      {
        v18 = (char *)v11 + 3;
        if ((uint64_t)v11 + 3 >= v15)
          goto LABEL_29;
        if (!v27[(_QWORD)v18])
        {
          v18 = (char *)v11 + 4;
          if ((uint64_t)v11 + 4 >= v15)
            goto LABEL_29;
          if (!v27[(_QWORD)v18])
          {
            v18 = (char *)v11 + 5;
            if ((uint64_t)v11 + 5 >= v15)
              goto LABEL_29;
            if (!v27[(_QWORD)v18])
            {
              v21 = (uint64_t)v11 + 6;
              while (v21 < v15)
              {
                if (v27[v21++])
                {
                  v18 = (char *)(v21 - 1);
                  goto LABEL_25;
                }
              }
LABEL_29:
              outlined consume of [String : Application].Iterator._Variant();
              return;
            }
          }
        }
      }
    }
LABEL_25:
    OUTLINED_FUNCTION_47_5();
    v16 = v24 & v23;
    v17 = v25 + ((_QWORD)v18 << 6);
LABEL_26:
    v19 = *(id *)(*(_QWORD *)(v7 + 48) + 8 * v17);
    if (!v19)
      goto LABEL_29;
    while (1)
    {
      a6(v28, v19);

      v11 = v18;
      v12 = v16;
      if ((v7 & 0x8000000000000000) == 0)
        break;
LABEL_7:
      if (__CocoaSet.Iterator.next()())
      {
        _sSo8NSObjectCMaTm_0(0, a3);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v19 = v28[0];
        swift_unknownObjectRelease();
        v18 = (char *)v11;
        v16 = v12;
        if (v19)
          continue;
      }
      goto LABEL_29;
    }
  }
  __break(1u);
}

uint64_t specialized Set.union<A>(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v4 = type metadata accessor for Participant(0);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v10 = (char *)&v15 - v9;
  v16 = a2;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11)
  {
    v12 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v13 = *(_QWORD *)(v8 + 72);
    do
    {
      outlined init with copy of ConversationControlsAction(v12, (uint64_t)v7, type metadata accessor for Participant);
      specialized Set._Variant.insert(_:)();
      outlined destroy of Participant((uint64_t)v10);
      v12 += v13;
      --v11;
    }
    while (v11);
    OUTLINED_FUNCTION_13_3();
    return v16;
  }
  else
  {
    OUTLINED_FUNCTION_13_3();
  }
  return a2;
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v3 = a1 + 40;
    do
    {
      v4 = OUTLINED_FUNCTION_25_2();
      OUTLINED_FUNCTION_37_15(v4);
      swift_bridgeObjectRelease();
      v3 += 16;
      --v2;
    }
    while (v2);
    OUTLINED_FUNCTION_13_3();
    return a2;
  }
  else
  {
    v5 = a2;
    OUTLINED_FUNCTION_13_3();
  }
  return v5;
}

unint64_t specialized Set.union<A>(_:)(unint64_t result, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t i;
  id v6;
  id v7;
  uint64_t v8;

  v2 = a2;
  v3 = result;
  v8 = a2;
  if (!(result >> 62))
  {
    v4 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v4)
      goto LABEL_3;
LABEL_11:
    swift_bridgeObjectRelease();
    return v2;
  }
  result = _CocoaArrayWrapper.endIndex.getter();
  v4 = result;
  if (!result)
    goto LABEL_11;
LABEL_3:
  if (v4 >= 1)
  {
    for (i = 0; i != v4; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0)
        v6 = (id)MEMORY[0x1C3B73D18](i, v3);
      else
        v6 = *(id *)(v3 + 8 * i + 32);
      specialized Set._Variant.insert(_:)(&v7, v6);

    }
    swift_bridgeObjectRelease();
    return v8;
  }
  __break(1u);
  return result;
}

void specialized Set.union<A>(_:)(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = 0;
  v2 = a1 + 56;
  OUTLINED_FUNCTION_33_12();
  v5 = v4 & v3;
  v7 = (unint64_t)(v6 + 63) >> 6;
  if ((v4 & v3) == 0)
    goto LABEL_3;
LABEL_2:
  for (v5 &= v5 - 1; ; v5 = v11 & v10)
  {
    v12 = OUTLINED_FUNCTION_25_2();
    OUTLINED_FUNCTION_37_15(v12);
    swift_bridgeObjectRelease();
    if (v5)
      goto LABEL_2;
LABEL_3:
    v8 = v1 + 1;
    if (__OFADD__(v1, 1))
    {
      __break(1u);
      goto LABEL_23;
    }
    if (v8 >= v7)
      goto LABEL_21;
    ++v1;
    if (!*(_QWORD *)(v2 + 8 * v8))
    {
      v1 = v8 + 1;
      if (v8 + 1 >= v7)
        goto LABEL_21;
      if (!*(_QWORD *)(v2 + 8 * v1))
      {
        v1 = v8 + 2;
        if (v8 + 2 >= v7)
          goto LABEL_21;
        if (!*(_QWORD *)(v2 + 8 * v1))
        {
          v1 = v8 + 3;
          if (v8 + 3 >= v7)
            goto LABEL_21;
          if (!*(_QWORD *)(v2 + 8 * v1))
            break;
        }
      }
    }
LABEL_18:
    OUTLINED_FUNCTION_47_5();
  }
  v9 = v8 + 4;
  if (v9 >= v7)
  {
LABEL_21:
    swift_release();
    return;
  }
  if (*(_QWORD *)(v2 + 8 * v9))
  {
    v1 = v9;
    goto LABEL_18;
  }
  while (1)
  {
    v1 = v9 + 1;
    if (__OFADD__(v9, 1))
      break;
    if (v1 >= v7)
      goto LABEL_21;
    ++v9;
    if (*(_QWORD *)(v2 + 8 * v1))
      goto LABEL_18;
  }
LABEL_23:
  __break(1u);
}

void specialized Set.union<A>(_:)(uint64_t a1, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t i;
  int64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v3 = 0;
  v24 = a2;
  v4 = a1 + 56;
  OUTLINED_FUNCTION_33_12();
  v13 = v12 & v11;
  v15 = (unint64_t)(v14 + 63) >> 6;
  if ((v12 & v11) == 0)
    goto LABEL_3;
LABEL_2:
  v16 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v16 | (v3 << 6); ; i = v22 + (v3 << 6))
  {
    specialized Set._Variant.insert(_:)((uint64_t)&v23, *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * i), v5, v6, v7, v8, v9, v10, v23, v24);
    if (v13)
      goto LABEL_2;
LABEL_3:
    v18 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_23;
    }
    if (v18 >= v15)
      goto LABEL_21;
    ++v3;
    if (!*(_QWORD *)(v4 + 8 * v18))
    {
      v3 = v18 + 1;
      if (v18 + 1 >= v15)
        goto LABEL_21;
      if (!*(_QWORD *)(v4 + 8 * v3))
      {
        v3 = v18 + 2;
        if (v18 + 2 >= v15)
          goto LABEL_21;
        if (!*(_QWORD *)(v4 + 8 * v3))
        {
          v3 = v18 + 3;
          if (v18 + 3 >= v15)
            goto LABEL_21;
          if (!*(_QWORD *)(v4 + 8 * v3))
            break;
        }
      }
    }
LABEL_18:
    OUTLINED_FUNCTION_47_5();
    v13 = v21 & v20;
  }
  v19 = v18 + 4;
  if (v19 >= v15)
  {
LABEL_21:
    swift_release();
    return;
  }
  if (*(_QWORD *)(v4 + 8 * v19))
  {
    v3 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v3 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v3 >= v15)
      goto LABEL_21;
    ++v19;
    if (*(_QWORD *)(v4 + 8 * v3))
      goto LABEL_18;
  }
LABEL_23:
  __break(1u);
}

uint64_t ConversationLink.withoutSuggestedURLs.getter@<X0>(_QWORD *a1@<X8>)
{
  id *v1;
  id v3;
  uint64_t v4;
  void *v5;
  uint64_t v7;

  v3 = *v1;
  if ((MEMORY[0x1E0DEE9D8] & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter())
  {
    specialized Set.init(_nonEmptyArrayLiteral:)(MEMORY[0x1E0DEE9D8], &demangling cache variable for type metadata for _SetStorage<SGURL>, specialized _ArrayBuffer._getElementSlowPath(_:), (unint64_t *)&lazy cache variable for type metadata for SGURL);
    v4 = v7;
  }
  else
  {
    v4 = MEMORY[0x1E0DEE9E8];
  }
  if (one-time initialization token for faceTime != -1)
    swift_once();
  v5 = static ParticipantContactDetailsCache.faceTime;
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  return OUTLINED_FUNCTION_23_26();
}

Swift::Int ConversationLink.hashValue.getter()
{
  void **v0;
  void *v1;
  id v2;

  v1 = *v0;
  Hasher.init(_seed:)();
  v2 = v1;
  NSObject.hash(into:)();

  return OUTLINED_FUNCTION_4_6();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance ConversationLink()
{
  void **v0;
  void *v1;
  id v2;

  v1 = *v0;
  Hasher.init(_seed:)();
  v2 = v1;
  NSObject.hash(into:)();

  return Hasher._finalize()();
}

uint64_t specialized MutableCollection<>.sort(by:)(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v6[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    specialized _ContiguousArrayBuffer._consumeAndCreateNew()(v2);
  v4 = *(_QWORD *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  specialized UnsafeMutableBufferPointer._stableSortImpl(by:)(v6);
  return specialized ContiguousArray._endMutation()();
}

{
  return specialized MutableCollection<>.sort(by:)(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB1658], (uint64_t (*)(uint64_t))specialized _ContiguousArrayBuffer._consumeAndCreateNew(), (uint64_t (*)(_QWORD *))specialized UnsafeMutableBufferPointer._stableSortImpl(by:));
}

{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v6[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    specialized _ContiguousArrayBuffer._consumeAndCreateNew()(v2);
  v4 = *(_QWORD *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  specialized UnsafeMutableBufferPointer._stableSortImpl(by:)(v6);
  return specialized ContiguousArray._endMutation()();
}

void specialized Set.init(_nonEmptyArrayLiteral:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  Swift::Int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  char v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  char v40;
  uint64_t v41;
  unsigned __int8 *v42;
  int v43;
  int v44;
  unsigned __int8 *v45;
  char *v46;
  int v47;
  int v48;
  int v49;
  BOOL v50;
  uint64_t v51;
  BOOL v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;

  OUTLINED_FUNCTION_93();
  v1 = v0;
  v67 = type metadata accessor for Participant(0);
  v58 = *(_QWORD *)(v67 - 8);
  OUTLINED_FUNCTION_10_1();
  v3 = MEMORY[0x1E0C80A78](v2);
  v74 = (uint64_t)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v54 - v6;
  v8 = MEMORY[0x1E0C80A78](v5);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v54 - v10;
  v12 = MEMORY[0x1E0C80A78](v9);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v54 - v14;
  v16 = MEMORY[0x1E0C80A78](v13);
  v18 = (char *)&v54 - v17;
  MEMORY[0x1E0C80A78](v16);
  v22 = (char *)&v54 - v21;
  if (*(_QWORD *)(v1 + 16)
    && (v68 = v20,
        v69 = v19,
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _SetStorage<Participant>),
        v23 = static _SetStorage.allocate(capacity:)(),
        v24 = v23,
        (v57 = *(_QWORD *)(v1 + 16)) != 0))
  {
    v25 = 0;
    v71 = v23 + 56;
    v56 = v1 + ((*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80));
    v73 = v7;
    v55 = v1;
    while (v25 < *(_QWORD *)(v1 + 16))
    {
      v26 = *(_QWORD *)(v58 + 72);
      v59 = v25;
      v72 = v26;
      OUTLINED_FUNCTION_8_39(v56 + v26 * v25, (uint64_t)v22);
      Hasher.init(_seed:)();
      type metadata accessor for UUID();
      _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
      dispatch thunk of Hashable.hash(into:)();
      v27 = Hasher._finalize()();
      v70 = ~(-1 << *(_BYTE *)(v24 + 32));
      v28 = v27 & v70;
      OUTLINED_FUNCTION_38_15();
      if ((v31 & v30) != 0)
      {
        while (1)
        {
          v32 = v24;
          OUTLINED_FUNCTION_8_39(*(_QWORD *)(v24 + 48) + v28 * v72, (uint64_t)v18);
          static Participant.State.== infix(_:_:)();
          v34 = v33;
          OUTLINED_FUNCTION_8_39((uint64_t)v18, (uint64_t)v15);
          OUTLINED_FUNCTION_8_39((uint64_t)v22, v68);
          if ((v34 & 1) == 0)
            break;
          v35 = static UUID.== infix(_:_:)();
          OUTLINED_FUNCTION_43_4();
          outlined destroy of Participant((uint64_t)v15);
          OUTLINED_FUNCTION_8_39((uint64_t)v18, (uint64_t)v11);
          v36 = v11;
          v37 = v69;
          OUTLINED_FUNCTION_8_39((uint64_t)v22, v69);
          if ((v35 & 1) == 0)
            goto LABEL_17;
          v38 = v67;
          v39 = *(_QWORD *)&v36[*(int *)(v67 + 28)] != 0;
          OUTLINED_FUNCTION_43_4();
          LOBYTE(v38) = *(_QWORD *)(v37 + *(int *)(v38 + 28)) == 0;
          outlined destroy of Participant(v37);
          v40 = v39 ^ v38;
          v7 = v73;
          OUTLINED_FUNCTION_8_39((uint64_t)v18, (uint64_t)v73);
          OUTLINED_FUNCTION_8_39((uint64_t)v22, v74);
          v11 = v36;
          v24 = v32;
          if ((v40 & 1) == 0)
            goto LABEL_18;
          v41 = v67;
          v42 = (unsigned __int8 *)&v7[*(int *)(v67 + 24)];
          v43 = *v42;
          v65 = v42[1];
          v66 = v43;
          v64 = v42[2];
          v62 = v42[3];
          v44 = v42[4];
          outlined destroy of Participant((uint64_t)v7);
          v45 = (unsigned __int8 *)(v74 + *(int *)(v41 + 24));
          v46 = v11;
          v47 = *v45;
          v48 = v45[1];
          v63 = v45[2];
          v49 = v45[3];
          v60 = v45[4];
          v61 = v49;
          outlined destroy of Participant(v74);
          v50 = v66 == v47;
          v11 = v46;
          if (!v50 || ((v65 ^ v48) & 1) != 0 || ((v64 ^ v63) & 1) != 0 || ((v62 ^ v61) & 1) != 0)
            goto LABEL_19;
          outlined destroy of Participant((uint64_t)v18);
          if (v44 == v60)
          {
            outlined destroy of Participant((uint64_t)v22);
            v7 = v73;
            goto LABEL_23;
          }
LABEL_20:
          v28 = (v28 + 1) & v70;
          OUTLINED_FUNCTION_38_15();
          v7 = v73;
          if ((v30 & v31) == 0)
            goto LABEL_21;
        }
        OUTLINED_FUNCTION_43_4();
        outlined destroy of Participant((uint64_t)v15);
        OUTLINED_FUNCTION_8_39((uint64_t)v18, (uint64_t)v11);
        v36 = v11;
        v37 = v69;
        OUTLINED_FUNCTION_8_39((uint64_t)v22, v69);
LABEL_17:
        outlined destroy of Participant(v37);
        OUTLINED_FUNCTION_43_4();
        OUTLINED_FUNCTION_8_39((uint64_t)v18, (uint64_t)v7);
        OUTLINED_FUNCTION_8_39((uint64_t)v22, v74);
        v11 = v36;
        v24 = v32;
LABEL_18:
        outlined destroy of Participant(v74);
        outlined destroy of Participant((uint64_t)v7);
LABEL_19:
        outlined destroy of Participant((uint64_t)v18);
        goto LABEL_20;
      }
LABEL_21:
      *(_QWORD *)(v71 + 8 * v29) = v31 | v30;
      outlined init with take of Participant((uint64_t)v22, *(_QWORD *)(v24 + 48) + v28 * v72);
      v51 = *(_QWORD *)(v24 + 16);
      v52 = __OFADD__(v51, 1);
      v53 = v51 + 1;
      if (v52)
        goto LABEL_26;
      *(_QWORD *)(v24 + 16) = v53;
LABEL_23:
      v25 = v59 + 1;
      v1 = v55;
      if (v59 + 1 == v57)
        goto LABEL_24;
    }
    __break(1u);
LABEL_26:
    __break(1u);
  }
  else
  {
LABEL_24:
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_52_1();
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  OUTLINED_FUNCTION_93();
  v5 = v4;
  v6 = type metadata accessor for Calendar.Component();
  v7 = OUTLINED_FUNCTION_19_28(v6);
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_58_0();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_29_19();
  if (v0
    && (__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _SetStorage<Calendar.Component>),
        OUTLINED_FUNCTION_2_51(),
        OUTLINED_FUNCTION_41_15(),
        v9))
  {
    OUTLINED_FUNCTION_5_37();
    while (v3 < *(_QWORD *)(v5 + 16))
    {
      OUTLINED_FUNCTION_6_32();
      v10 = *(_QWORD *)(v1 + 40);
      _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type Calendar.Component and conformance Calendar.Component, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], MEMORY[0x1E0CB11D0]);
      OUTLINED_FUNCTION_15_32();
      OUTLINED_FUNCTION_4_37();
      if (v13)
      {
LABEL_11:
        OUTLINED_FUNCTION_3_40(v11);
        v14 = *(_QWORD *)(v1 + 16);
        v15 = __OFADD__(v14, 1);
        v16 = v14 + 1;
        if (v15)
          goto LABEL_18;
        *(_QWORD *)(v1 + 16) = v16;
      }
      else
      {
        v5 = ~v12;
        while (1)
        {
          OUTLINED_FUNCTION_18_32();
          _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type Calendar.Component and conformance Calendar.Component, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], MEMORY[0x1E0CB11D8]);
          OUTLINED_FUNCTION_12_25();
          OUTLINED_FUNCTION_13_36();
          if ((v10 & 1) != 0)
            break;
          OUTLINED_FUNCTION_7_47();
          if (v13)
          {
            OUTLINED_FUNCTION_36_19();
            goto LABEL_11;
          }
        }
        OUTLINED_FUNCTION_28_22(v2);
        OUTLINED_FUNCTION_36_19();
      }
      OUTLINED_FUNCTION_42_14();
      if (v13)
        goto LABEL_16;
    }
    __break(1u);
LABEL_18:
    __break(1u);
  }
  else
  {
LABEL_16:
    OUTLINED_FUNCTION_54_1();
    OUTLINED_FUNCTION_52_1();
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  OUTLINED_FUNCTION_93();
  v5 = v4;
  v6 = type metadata accessor for ControlMessageReliability();
  v7 = OUTLINED_FUNCTION_19_28(v6);
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_58_0();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_29_19();
  if (v0
    && (__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _SetStorage<ControlMessageReliability>),
        OUTLINED_FUNCTION_2_51(),
        OUTLINED_FUNCTION_41_15(),
        v9))
  {
    OUTLINED_FUNCTION_5_37();
    while (v3 < *(_QWORD *)(v5 + 16))
    {
      OUTLINED_FUNCTION_6_32();
      v10 = *(_QWORD *)(v1 + 40);
      _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type ControlMessageReliability and conformance ControlMessageReliability, (uint64_t (*)(uint64_t))MEMORY[0x1E0D8C028], MEMORY[0x1E0D8C038]);
      OUTLINED_FUNCTION_15_32();
      OUTLINED_FUNCTION_4_37();
      if (v13)
      {
LABEL_11:
        OUTLINED_FUNCTION_3_40(v11);
        v14 = *(_QWORD *)(v1 + 16);
        v15 = __OFADD__(v14, 1);
        v16 = v14 + 1;
        if (v15)
          goto LABEL_18;
        *(_QWORD *)(v1 + 16) = v16;
      }
      else
      {
        v5 = ~v12;
        while (1)
        {
          OUTLINED_FUNCTION_18_32();
          _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type ControlMessageReliability and conformance ControlMessageReliability, (uint64_t (*)(uint64_t))MEMORY[0x1E0D8C028], MEMORY[0x1E0D8C040]);
          OUTLINED_FUNCTION_12_25();
          OUTLINED_FUNCTION_13_36();
          if ((v10 & 1) != 0)
            break;
          OUTLINED_FUNCTION_7_47();
          if (v13)
          {
            OUTLINED_FUNCTION_36_19();
            goto LABEL_11;
          }
        }
        OUTLINED_FUNCTION_28_22(v2);
        OUTLINED_FUNCTION_36_19();
      }
      OUTLINED_FUNCTION_42_14();
      if (v13)
        goto LABEL_16;
    }
    __break(1u);
LABEL_18:
    __break(1u);
  }
  else
  {
LABEL_16:
    OUTLINED_FUNCTION_54_1();
    OUTLINED_FUNCTION_52_1();
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  OUTLINED_FUNCTION_93();
  v5 = v4;
  v6 = type metadata accessor for PresentationDetent();
  v7 = OUTLINED_FUNCTION_19_28(v6);
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_58_0();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_29_19();
  if (v0
    && (__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _SetStorage<PresentationDetent>),
        OUTLINED_FUNCTION_2_51(),
        OUTLINED_FUNCTION_41_15(),
        v9))
  {
    OUTLINED_FUNCTION_5_37();
    while (v3 < *(_QWORD *)(v5 + 16))
    {
      OUTLINED_FUNCTION_6_32();
      v10 = *(_QWORD *)(v1 + 40);
      _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type PresentationDetent and conformance PresentationDetent, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDB090], MEMORY[0x1E0CDB0A0]);
      OUTLINED_FUNCTION_15_32();
      OUTLINED_FUNCTION_4_37();
      if (v13)
      {
LABEL_11:
        OUTLINED_FUNCTION_3_40(v11);
        v14 = *(_QWORD *)(v1 + 16);
        v15 = __OFADD__(v14, 1);
        v16 = v14 + 1;
        if (v15)
          goto LABEL_18;
        *(_QWORD *)(v1 + 16) = v16;
      }
      else
      {
        v5 = ~v12;
        while (1)
        {
          OUTLINED_FUNCTION_18_32();
          _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type PresentationDetent and conformance PresentationDetent, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDB090], MEMORY[0x1E0CDB0A8]);
          OUTLINED_FUNCTION_12_25();
          OUTLINED_FUNCTION_13_36();
          if ((v10 & 1) != 0)
            break;
          OUTLINED_FUNCTION_7_47();
          if (v13)
          {
            OUTLINED_FUNCTION_36_19();
            goto LABEL_11;
          }
        }
        OUTLINED_FUNCTION_28_22(v2);
        OUTLINED_FUNCTION_36_19();
      }
      OUTLINED_FUNCTION_42_14();
      if (v13)
        goto LABEL_16;
    }
    __break(1u);
LABEL_18:
    __break(1u);
  }
  else
  {
LABEL_16:
    OUTLINED_FUNCTION_54_1();
    OUTLINED_FUNCTION_52_1();
  }
}

void specialized Set.init(_nonEmptyArrayLiteral:)(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  Swift::UInt32 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;

  if (!*(_QWORD *)(a1 + 16)
    || (__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _SetStorage<TUCallDisconnectedReason>),
        v5 = OUTLINED_FUNCTION_2_51(),
        (v6 = *(_QWORD *)(a1 + 16)) == 0))
  {
LABEL_13:
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_20_1();
    return;
  }
  OUTLINED_FUNCTION_55_11();
  while (v1 < *(_QWORD *)(a1 + 16))
  {
    v7 = *(_DWORD *)(v3 + 4 * v1);
    OUTLINED_FUNCTION_66_7();
    Hasher._combine(_:)(v7);
    OUTLINED_FUNCTION_4_6();
    OUTLINED_FUNCTION_22_27();
    if (!v13)
    {
      if (*(_DWORD *)(v9 + 4 * v8) == v7)
        goto LABEL_12;
      while (1)
      {
        OUTLINED_FUNCTION_32_17();
        if (v13)
          break;
        if (*(_DWORD *)(v9 + 4 * v8) == v7)
          goto LABEL_12;
      }
    }
    *(_QWORD *)(v2 + 8 * v10) = v12 | v11;
    *(_DWORD *)(v9 + 4 * v8) = v7;
    OUTLINED_FUNCTION_62_6();
    if (v15)
      goto LABEL_15;
    *(_QWORD *)(v5 + 16) = v14;
LABEL_12:
    if (++v1 == v6)
      goto LABEL_13;
  }
  __break(1u);
LABEL_15:
  __break(1u);
}

{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  Swift::Int v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v18;
  _QWORD *v19;
  BOOL v20;
  _QWORD *v21;
  uint64_t v22;
  char v23;
  uint64_t v24;

  if (!*(_QWORD *)(a1 + 16)
    || (__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _SetStorage<String>),
        v2 = OUTLINED_FUNCTION_2_51(),
        v3 = v2,
        (v24 = *(_QWORD *)(a1 + 16)) == 0))
  {
LABEL_23:
    OUTLINED_FUNCTION_13_3();
    return;
  }
  v4 = 0;
  v5 = v2 + 56;
  while (v4 < *(_QWORD *)(a1 + 16))
  {
    v6 = (uint64_t *)(a1 + 32 + 16 * v4);
    v8 = *v6;
    v7 = v6[1];
    Hasher.init(_seed:)();
    OUTLINED_FUNCTION_25_2();
    String.hash(into:)();
    v9 = Hasher._finalize()();
    v10 = -1 << *(_BYTE *)(v3 + 32);
    v11 = v9 & ~v10;
    v12 = v11 >> 6;
    v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
    v14 = 1 << v11;
    if (((1 << v11) & v13) != 0)
    {
      v15 = *(_QWORD *)(v3 + 48);
      v16 = (_QWORD *)(v15 + 16 * v11);
      v17 = *v16 == v8 && v16[1] == v7;
      if (v17 || (OUTLINED_FUNCTION_56_8() & 1) != 0)
      {
LABEL_11:
        OUTLINED_FUNCTION_53();
        goto LABEL_22;
      }
      v18 = ~v10;
      while (1)
      {
        v11 = (v11 + 1) & v18;
        v12 = v11 >> 6;
        v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
        v14 = 1 << v11;
        if ((v13 & (1 << v11)) == 0)
          break;
        v19 = (_QWORD *)(v15 + 16 * v11);
        v20 = *v19 == v8 && v19[1] == v7;
        if (v20 || (OUTLINED_FUNCTION_56_8() & 1) != 0)
          goto LABEL_11;
      }
    }
    *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
    v21 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v11);
    *v21 = v8;
    v21[1] = v7;
    OUTLINED_FUNCTION_62_6();
    if (v23)
      goto LABEL_25;
    *(_QWORD *)(v3 + 16) = v22;
LABEL_22:
    if (++v4 == v24)
      goto LABEL_23;
  }
  __break(1u);
LABEL_25:
  __break(1u);
}

{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  Swift::UInt v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;

  if (!*(_QWORD *)(a1 + 16)
    || (__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _SetStorage<BezelEffect>),
        v5 = OUTLINED_FUNCTION_2_51(),
        (v6 = *(_QWORD *)(a1 + 16)) == 0))
  {
LABEL_13:
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_20_1();
    return;
  }
  OUTLINED_FUNCTION_55_11();
  while (v1 < *(_QWORD *)(a1 + 16))
  {
    v7 = *(unsigned __int8 *)(v3 + v1);
    OUTLINED_FUNCTION_66_7();
    Hasher._combine(_:)(v7);
    OUTLINED_FUNCTION_4_6();
    OUTLINED_FUNCTION_22_27();
    if (!v13)
    {
      if (*(unsigned __int8 *)(v9 + v8) == (_DWORD)v7)
        goto LABEL_12;
      while (1)
      {
        OUTLINED_FUNCTION_32_17();
        if (v13)
          break;
        if (*(unsigned __int8 *)(v9 + v8) == (_DWORD)v7)
          goto LABEL_12;
      }
    }
    *(_QWORD *)(v2 + 8 * v10) = v12 | v11;
    *(_BYTE *)(v9 + v8) = v7;
    OUTLINED_FUNCTION_62_6();
    if (v15)
      goto LABEL_15;
    *(_QWORD *)(v5 + 16) = v14;
LABEL_12:
    if (++v1 == v6)
      goto LABEL_13;
  }
  __break(1u);
LABEL_15:
  __break(1u);
}

void specialized Set.init(_nonEmptyArrayLiteral:)(unint64_t a1)
{
  specialized Set.init(_nonEmptyArrayLiteral:)(a1, &demangling cache variable for type metadata for _SetStorage<SGURL>, specialized _ArrayBuffer._getElementSlowPath(_:), (unint64_t *)&lazy cache variable for type metadata for SGURL);
}

{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v1 = a1;
  v2 = a1 >> 62;
  if (a1 >> 62)
    goto LABEL_24;
  if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_25;
LABEL_3:
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _SetStorage<AnyCancellable>);
  v3 = OUTLINED_FUNCTION_2_51();
  if (v2)
  {
    while (1)
    {
      OUTLINED_FUNCTION_25_2();
      v2 = OUTLINED_FUNCTION_25_3();
      OUTLINED_FUNCTION_53();
      if (!v2)
        break;
LABEL_5:
      v4 = 0;
      v5 = v3 + 56;
      v19 = v1;
      v20 = v1 & 0xC000000000000001;
      v17 = v1 & 0xFFFFFFFFFFFFFF8;
      v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0C95E00];
      v18 = v2;
      while (1)
      {
        if (v20)
        {
          v7 = MEMORY[0x1C3B73D18](v4, v19);
        }
        else
        {
          if (v4 >= *(_QWORD *)(v17 + 16))
            goto LABEL_23;
          v7 = swift_retain();
        }
        v8 = __OFADD__(v4++, 1);
        if (v8)
          break;
        v21 = v7;
        type metadata accessor for AnyCancellable();
        _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type AnyCancellable and conformance AnyCancellable, v6, MEMORY[0x1E0C95E18]);
        v9 = dispatch thunk of Hashable._rawHashValue(seed:)();
        v10 = -1 << *(_BYTE *)(v3 + 32);
        v1 = v9 & ~v10;
        v11 = v1 >> 6;
        v12 = *(_QWORD *)(v5 + 8 * (v1 >> 6));
        v13 = 1 << v1;
        if (((1 << v1) & v12) != 0)
        {
          v14 = ~v10;
          _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type AnyCancellable and conformance AnyCancellable, v6, MEMORY[0x1E0C95E20]);
          while ((dispatch thunk of static Equatable.== infix(_:_:)() & 1) == 0)
          {
            v1 = (v1 + 1) & v14;
            v11 = v1 >> 6;
            v12 = *(_QWORD *)(v5 + 8 * (v1 >> 6));
            v13 = 1 << v1;
            if ((v12 & (1 << v1)) == 0)
            {
              v2 = v18;
              goto LABEL_16;
            }
          }
          swift_release();
          v2 = v18;
        }
        else
        {
LABEL_16:
          *(_QWORD *)(v5 + 8 * v11) = v13 | v12;
          *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v1) = v21;
          OUTLINED_FUNCTION_62_6();
          if (v8)
            goto LABEL_22;
          *(_QWORD *)(v3 + 16) = v15;
        }
        v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0C95E00];
        if (v4 == v2)
          goto LABEL_27;
      }
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      OUTLINED_FUNCTION_25_2();
      v16 = OUTLINED_FUNCTION_25_3();
      OUTLINED_FUNCTION_53();
      if (v16)
        goto LABEL_3;
LABEL_25:
      v3 = MEMORY[0x1E0DEE9E8];
      if (!v2)
        goto LABEL_4;
    }
  }
  else
  {
LABEL_4:
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v2)
      goto LABEL_5;
  }
LABEL_27:
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_21_3();
}

{
  specialized Set.init(_nonEmptyArrayLiteral:)(a1, &demangling cache variable for type metadata for _SetStorage<CNComposeRecipient>, (uint64_t (*)(unint64_t, unint64_t))MEMORY[0x1E0DEC3E0], (unint64_t *)&lazy cache variable for type metadata for CNComposeRecipient);
}

{
  specialized Set.init(_nonEmptyArrayLiteral:)(a1, (uint64_t *)&demangling cache variable for type metadata for _SetStorage<TUHandle>, (uint64_t (*)(unint64_t, unint64_t))MEMORY[0x1E0DEC3E0], (unint64_t *)&lazy cache variable for type metadata for TUHandle);
}

{
  specialized Set.init(_nonEmptyArrayLiteral:)(a1, &demangling cache variable for type metadata for _SetStorage<TUConversationLink>, (uint64_t (*)(unint64_t, unint64_t))MEMORY[0x1E0DEC3E0], (unint64_t *)&lazy cache variable for type metadata for TUConversationLink);
}

{
  specialized Set.init(_nonEmptyArrayLiteral:)(a1, &demangling cache variable for type metadata for _SetStorage<SGURL>, (uint64_t (*)(unint64_t, unint64_t))MEMORY[0x1E0DEC3E0], (unint64_t *)&lazy cache variable for type metadata for SGURL);
}

{
  specialized Set.init(_nonEmptyArrayLiteral:)(a1, (uint64_t *)&demangling cache variable for type metadata for _SetStorage<TUConversationMember>, (uint64_t (*)(unint64_t, unint64_t))MEMORY[0x1E0DEC3E0], (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
}

void specialized Set.init(_nonEmptyArrayLiteral:)(unint64_t a1, uint64_t *a2, uint64_t (*a3)(unint64_t, unint64_t), unint64_t *a4)
{
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  BOOL v14;
  Swift::Int v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  char v22;
  uint64_t v23;
  id v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v34;

  v5 = a1;
  v6 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v9 = _CocoaArrayWrapper.endIndex.getter();
    OUTLINED_FUNCTION_58_1();
    if (v9)
    {
LABEL_3:
      __swift_instantiateConcreteTypeFromMangledName(a2);
      v7 = static _SetStorage.allocate(capacity:)();
      if (!v6)
        goto LABEL_4;
LABEL_8:
      swift_bridgeObjectRetain();
      v8 = OUTLINED_FUNCTION_25_3();
      OUTLINED_FUNCTION_58_1();
      if (!v8)
      {
LABEL_25:
        OUTLINED_FUNCTION_58_1();
        OUTLINED_FUNCTION_21_3();
        return;
      }
      goto LABEL_9;
    }
  }
  else if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  v7 = MEMORY[0x1E0DEE9E8];
  if (v6)
    goto LABEL_8;
LABEL_4:
  v8 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v8)
    goto LABEL_25;
LABEL_9:
  v10 = 0;
  v11 = v7 + 56;
  v34 = v5 & 0xC000000000000001;
  v28 = v5 + 32;
  v29 = v5 & 0xFFFFFFFFFFFFFF8;
  v30 = v8;
  v31 = v5;
  while (1)
  {
    if (v34)
    {
      v12 = (id)a3(v10, v5);
    }
    else
    {
      if (v10 >= *(_QWORD *)(v29 + 16))
        goto LABEL_28;
      v12 = *(id *)(v28 + 8 * v10);
    }
    v13 = v12;
    v14 = __OFADD__(v10++, 1);
    if (v14)
      break;
    v15 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v7 + 40));
    v16 = -1 << *(_BYTE *)(v7 + 32);
    v17 = v15 & ~v16;
    v18 = v17 >> 6;
    v19 = *(_QWORD *)(v11 + 8 * (v17 >> 6));
    v20 = 1 << v17;
    if (((1 << v17) & v19) != 0)
    {
      _sSo8NSObjectCMaTm_0(0, a4);
      v21 = OUTLINED_FUNCTION_59_13();
      v22 = static NSObject.== infix(_:_:)();

      if ((v22 & 1) != 0)
      {
LABEL_20:

        v8 = v30;
        v5 = v31;
        goto LABEL_24;
      }
      v23 = ~v16;
      while (1)
      {
        v17 = (v17 + 1) & v23;
        v18 = v17 >> 6;
        v19 = *(_QWORD *)(v11 + 8 * (v17 >> 6));
        v20 = 1 << v17;
        if ((v19 & (1 << v17)) == 0)
          break;
        v24 = OUTLINED_FUNCTION_59_13();
        v25 = static NSObject.== infix(_:_:)();

        if ((v25 & 1) != 0)
          goto LABEL_20;
      }
      v8 = v30;
      v5 = v31;
    }
    *(_QWORD *)(v11 + 8 * v18) = v20 | v19;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v17) = v13;
    v26 = *(_QWORD *)(v7 + 16);
    v14 = __OFADD__(v26, 1);
    v27 = v26 + 1;
    if (v14)
      goto LABEL_27;
    *(_QWORD *)(v7 + 16) = v27;
LABEL_24:
    if (v10 == v8)
      goto LABEL_25;
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
}

void specialized _NativeSet._unsafeInsertNew(_:)(unsigned __int8 a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  Swift::Int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1);
  if (a3)
  {
    Hasher._combine(_:)(1u);
    OUTLINED_FUNCTION_8_8();
    String.hash(into:)();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  swift_bridgeObjectRelease();
  v8 = OUTLINED_FUNCTION_4_6();
  OUTLINED_FUNCTION_53_10(v8);
  _HashTable.nextHole(atOrAfter:)();
  OUTLINED_FUNCTION_69_6();
  *(_QWORD *)(a4 + 56 + v9) |= v10;
  v12 = *(_QWORD *)(a4 + 48) + 24 * v11;
  *(_BYTE *)v12 = a1;
  *(_QWORD *)(v12 + 8) = a2;
  *(_QWORD *)(v12 + 16) = a3;
  OUTLINED_FUNCTION_39_17();
}

void specialized _NativeSet._unsafeInsertNew(_:)(uint64_t a1, uint64_t a2)
{
  Swift::Int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = NSObject._rawHashValue(seed:)(*(_QWORD *)(a2 + 40));
  OUTLINED_FUNCTION_53_10(v4);
  _HashTable.nextHole(atOrAfter:)();
  OUTLINED_FUNCTION_69_6();
  *(_QWORD *)(a2 + 56 + v5) |= v6;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * v7) = a1;
  OUTLINED_FUNCTION_39_17();
  OUTLINED_FUNCTION_18();
}

uint64_t specialized _NativeSet.filter(_:)(uint64_t isStackAllocationSafe)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  unint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  _QWORD v11[2];

  v2 = isStackAllocationSafe;
  v11[1] = *MEMORY[0x1E0C80C00];
  v3 = *(_BYTE *)(isStackAllocationSafe + 32);
  v4 = (unint64_t)((1 << v3) + 63) >> 6;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    v5 = (_QWORD *)((char *)v11 - ((8 * v4 + 15) & 0x3FFFFFFFFFFFFFF0));
    specialized UnsafeMutablePointer.assign(repeating:count:)(0, v4, v5);
    specialized closure #1 in _NativeSet.filter(_:)(v5, v4, v2);
    v7 = v6;
    swift_release();
    if (v1)
      swift_willThrow();
  }
  else
  {
    v8 = (uint64_t *)swift_slowAlloc();
    specialized UnsafeMutablePointer.assign(repeating:count:)(0, v4, v8);
    specialized closure #1 in _NativeSet.filter(_:)(v8, v4, v2);
    v7 = v9;
    swift_release();
    MEMORY[0x1C3B751B8](v8, -1, -1);
  }
  return v7;
}

{
  uint64_t v1;
  uint64_t v2;
  char v3;
  unint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  _QWORD v11[2];

  v2 = isStackAllocationSafe;
  v11[1] = *MEMORY[0x1E0C80C00];
  v3 = *(_BYTE *)(isStackAllocationSafe + 32);
  v4 = (unint64_t)((1 << v3) + 63) >> 6;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    v5 = (_QWORD *)((char *)v11 - ((8 * v4 + 15) & 0x3FFFFFFFFFFFFFF0));
    specialized UnsafeMutablePointer.assign(repeating:count:)(0, v4, v5);
    specialized closure #1 in _NativeSet.filter(_:)(v5, v4, v2);
    v7 = v6;
    swift_release();
    if (v1)
      swift_willThrow();
  }
  else
  {
    v8 = (uint64_t *)swift_slowAlloc();
    specialized UnsafeMutablePointer.assign(repeating:count:)(0, v4, v8);
    specialized closure #1 in _NativeSet.filter(_:)(v8, v4, v2);
    v7 = v9;
    swift_release();
    MEMORY[0x1C3B751B8](v8, -1, -1);
  }
  return v7;
}

{
  uint64_t v1;
  uint64_t v2;
  char v3;
  unint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  _QWORD v11[2];

  v2 = isStackAllocationSafe;
  v11[1] = *MEMORY[0x1E0C80C00];
  v3 = *(_BYTE *)(isStackAllocationSafe + 32);
  v4 = (unint64_t)((1 << v3) + 63) >> 6;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    v5 = (_QWORD *)((char *)v11 - ((8 * v4 + 15) & 0x3FFFFFFFFFFFFFF0));
    specialized UnsafeMutablePointer.assign(repeating:count:)(0, v4, v5);
    specialized closure #1 in _NativeSet.filter(_:)(v5, v4, v2);
    v7 = v6;
    swift_release();
    if (v1)
      swift_willThrow();
  }
  else
  {
    v8 = (uint64_t *)swift_slowAlloc();
    specialized UnsafeMutablePointer.assign(repeating:count:)(0, v4, v8);
    specialized closure #1 in _NativeSet.filter(_:)(v8, v4, v2);
    v7 = v9;
    swift_release();
    MEMORY[0x1C3B751B8](v8, -1, -1);
  }
  return v7;
}

{
  uint64_t v1;
  uint64_t v2;
  char v3;
  unint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  _QWORD v11[2];

  v2 = isStackAllocationSafe;
  v11[1] = *MEMORY[0x1E0C80C00];
  v3 = *(_BYTE *)(isStackAllocationSafe + 32);
  v4 = (unint64_t)((1 << v3) + 63) >> 6;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    v5 = (_QWORD *)((char *)v11 - ((8 * v4 + 15) & 0x3FFFFFFFFFFFFFF0));
    specialized UnsafeMutablePointer.assign(repeating:count:)(0, v4, v5);
    specialized closure #1 in _NativeSet.filter(_:)(v5, v4, v2);
    v7 = v6;
    swift_release();
    if (v1)
      swift_willThrow();
  }
  else
  {
    v8 = (uint64_t *)swift_slowAlloc();
    specialized UnsafeMutablePointer.assign(repeating:count:)(0, v4, v8);
    specialized closure #1 in _NativeSet.filter(_:)(v8, v4, v2);
    v7 = v9;
    swift_release();
    MEMORY[0x1C3B751B8](v8, -1, -1);
  }
  return v7;
}

uint64_t partial apply for closure #3 in ConversationLink.prevailingSuggestion.getter()
{
  return closure #3 in ConversationLink.prevailingSuggestion.getter() & 1;
}

void specialized closure #1 in _NativeSet.filter(_:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  id v16;
  BOOL valid;

  v4 = 0;
  v5 = 0;
  v6 = a3 + 56;
  v7 = 1 << *(_BYTE *)(a3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a3 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v12 = v11 | (v5 << 6);
      goto LABEL_20;
    }
    v13 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v13 >= v10)
      goto LABEL_24;
    v14 = *(_QWORD *)(v6 + 8 * v13);
    ++v5;
    if (!v14)
    {
      v5 = v13 + 1;
      if (v13 + 1 >= v10)
        goto LABEL_24;
      v14 = *(_QWORD *)(v6 + 8 * v5);
      if (!v14)
      {
        v5 = v13 + 2;
        if (v13 + 2 >= v10)
          goto LABEL_24;
        v14 = *(_QWORD *)(v6 + 8 * v5);
        if (!v14)
          break;
      }
    }
LABEL_19:
    v9 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v5 << 6);
LABEL_20:
    v16 = *(id *)(*(_QWORD *)(a3 + 48) + 8 * v12);
    valid = SGURL.isValidConversationLink.getter();

    if (valid)
    {
      *(uint64_t *)((char *)a1 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      if (__OFADD__(v4++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        specialized _NativeSet.extractSubset(using:count:)(a1, a2, v4, a3);
        return;
      }
    }
  }
  v15 = v13 + 3;
  if (v15 >= v10)
    goto LABEL_24;
  v14 = *(_QWORD *)(v6 + 8 * v15);
  if (v14)
  {
    v5 = v15;
    goto LABEL_19;
  }
  while (1)
  {
    v5 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v5 >= v10)
      goto LABEL_24;
    v14 = *(_QWORD *)(v6 + 8 * v5);
    ++v15;
    if (v14)
      goto LABEL_19;
  }
LABEL_26:
  __break(1u);
}

{
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;

  v5 = 0;
  v6 = 0;
  v7 = a3 + 56;
  v8 = 1 << *(_BYTE *)(a3 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(a3 + 56);
  v11 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v13 = v12 | (v6 << 6);
      goto LABEL_20;
    }
    v14 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v14 >= v11)
      goto LABEL_24;
    v15 = *(_QWORD *)(v7 + 8 * v14);
    ++v6;
    if (!v15)
    {
      v6 = v14 + 1;
      if (v14 + 1 >= v11)
        goto LABEL_24;
      v15 = *(_QWORD *)(v7 + 8 * v6);
      if (!v15)
      {
        v6 = v14 + 2;
        if (v14 + 2 >= v11)
          goto LABEL_24;
        v15 = *(_QWORD *)(v7 + 8 * v6);
        if (!v15)
          break;
      }
    }
LABEL_19:
    v10 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v6 << 6);
LABEL_20:
    if (objc_msgSend(*(id *)(*(_QWORD *)(a3 + 48) + 8 * v13), sel_audioVideoMode))
    {
      *(uint64_t *)((char *)a1 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      if (__OFADD__(v5++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        specialized _NativeSet.extractSubset(using:count:)(a1, a2, v5, a3);
        return;
      }
    }
  }
  v16 = v14 + 3;
  if (v16 >= v11)
    goto LABEL_24;
  v15 = *(_QWORD *)(v7 + 8 * v16);
  if (v15)
  {
    v6 = v16;
    goto LABEL_19;
  }
  while (1)
  {
    v6 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v6 >= v11)
      goto LABEL_24;
    v15 = *(_QWORD *)(v7 + 8 * v6);
    ++v16;
    if (v15)
      goto LABEL_19;
  }
LABEL_26:
  __break(1u);
}

{
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;

  v5 = 0;
  v6 = 0;
  v7 = a3 + 56;
  v8 = 1 << *(_BYTE *)(a3 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(a3 + 56);
  v11 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v13 = v12 | (v6 << 6);
      goto LABEL_20;
    }
    v14 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v14 >= v11)
      goto LABEL_24;
    v15 = *(_QWORD *)(v7 + 8 * v14);
    ++v6;
    if (!v15)
    {
      v6 = v14 + 1;
      if (v14 + 1 >= v11)
        goto LABEL_24;
      v15 = *(_QWORD *)(v7 + 8 * v6);
      if (!v15)
      {
        v6 = v14 + 2;
        if (v14 + 2 >= v11)
          goto LABEL_24;
        v15 = *(_QWORD *)(v7 + 8 * v6);
        if (!v15)
          break;
      }
    }
LABEL_19:
    v10 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v6 << 6);
LABEL_20:
    if (objc_msgSend(*(id *)(*(_QWORD *)(a3 + 48) + 8 * v13), sel_type) == (id)4)
    {
      *(uint64_t *)((char *)a1 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      if (__OFADD__(v5++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        specialized _NativeSet.extractSubset(using:count:)(a1, a2, v5, a3);
        return;
      }
    }
  }
  v16 = v14 + 3;
  if (v16 >= v11)
    goto LABEL_24;
  v15 = *(_QWORD *)(v7 + 8 * v16);
  if (v15)
  {
    v6 = v16;
    goto LABEL_19;
  }
  while (1)
  {
    v6 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v6 >= v11)
      goto LABEL_24;
    v15 = *(_QWORD *)(v7 + 8 * v6);
    ++v16;
    if (v15)
      goto LABEL_19;
  }
LABEL_26:
  __break(1u);
}

{
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;

  v5 = 0;
  v6 = 0;
  v7 = a3 + 56;
  v8 = 1 << *(_BYTE *)(a3 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(a3 + 56);
  v11 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v13 = v12 | (v6 << 6);
      goto LABEL_20;
    }
    v14 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v14 >= v11)
      goto LABEL_24;
    v15 = *(_QWORD *)(v7 + 8 * v14);
    ++v6;
    if (!v15)
    {
      v6 = v14 + 1;
      if (v14 + 1 >= v11)
        goto LABEL_24;
      v15 = *(_QWORD *)(v7 + 8 * v6);
      if (!v15)
      {
        v6 = v14 + 2;
        if (v14 + 2 >= v11)
          goto LABEL_24;
        v15 = *(_QWORD *)(v7 + 8 * v6);
        if (!v15)
          break;
      }
    }
LABEL_19:
    v10 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v6 << 6);
LABEL_20:
    if ((objc_msgSend(*(id *)(*(_QWORD *)(a3 + 48) + 8 * v13), sel_isOtherInvitedHandle) & 1) == 0)
    {
      *(uint64_t *)((char *)a1 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      if (__OFADD__(v5++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        specialized _NativeSet.extractSubset(using:count:)(a1, a2, v5, a3);
        return;
      }
    }
  }
  v16 = v14 + 3;
  if (v16 >= v11)
    goto LABEL_24;
  v15 = *(_QWORD *)(v7 + 8 * v16);
  if (v15)
  {
    v6 = v16;
    goto LABEL_19;
  }
  while (1)
  {
    v6 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v6 >= v11)
      goto LABEL_24;
    v15 = *(_QWORD *)(v7 + 8 * v6);
    ++v16;
    if (v15)
      goto LABEL_19;
  }
LABEL_26:
  __break(1u);
}

void specialized MutableCollection<>._insertionSort(within:sortedEnd:by:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v26 = a1;
  v7 = type metadata accessor for Date();
  v29 = *(_QWORD *)(v7 - 8);
  v30 = v7;
  v8 = ((uint64_t (*)(void))MEMORY[0x1E0C80A78])();
  v28 = (uint64_t)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v24 - v10;
  v25 = a2;
  if (a3 != a2)
  {
    v31 = *a4;
    v12 = v31 + 8 * a3 - 8;
    while (2)
    {
      v13 = *(void **)(v31 + 8 * a3);
      v14 = v26;
      v27 = v12;
      do
      {
        v15 = *(void **)v12;
        v16 = v13;
        v17 = v15;
        SGURL.recentsDate.getter((uint64_t)v11);
        v18 = v28;
        SGURL.recentsDate.getter(v28);
        v19 = Date.compare(_:)();
        v20 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
        v21 = v18;
        v22 = v30;
        v20(v21, v30);
        v20((uint64_t)v11, v22);

        if (v19 != -1)
          break;
        if (!v31)
        {
          __break(1u);
          return;
        }
        v23 = *(void **)v12;
        v13 = *(void **)(v12 + 8);
        *(_QWORD *)v12 = v13;
        *(_QWORD *)(v12 + 8) = v23;
        v12 -= 8;
        ++v14;
      }
      while (a3 != v14);
      ++a3;
      v12 = v27 + 8;
      if (a3 != v25)
        continue;
      break;
    }
  }
}

{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  const void *v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  const void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  const void *v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  const void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  BOOL v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _BYTE *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  unsigned int v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  _QWORD v89[27];
  _BYTE v90[336];
  _QWORD v91[28];
  uint64_t v92;

  v83 = a4;
  v67 = a1;
  v6 = type metadata accessor for Participant.State(0);
  v7 = MEMORY[0x1E0C80A78](v6);
  v71 = (uint64_t)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v73 = (char *)&v65 - v10;
  v11 = MEMORY[0x1E0C80A78](v9);
  v70 = (uint64_t)&v65 - v12;
  MEMORY[0x1E0C80A78](v11);
  v74 = (uint64_t)&v65 - v13;
  v68 = type metadata accessor for Participant(0);
  v14 = MEMORY[0x1E0C80A78](v68);
  v80 = (uint64_t)&v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  v77 = (uint64_t)&v65 - v17;
  v18 = MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v65 - v19;
  v21 = MEMORY[0x1E0C80A78](v18);
  v92 = (uint64_t)&v65 - v22;
  MEMORY[0x1E0C80A78](v21);
  v88 = (uint64_t)&v65 - v24;
  v66 = a2;
  v76 = a3;
  if (a3 == a2)
    return;
  v25 = *(_QWORD *)(v23 + 72);
  v72 = &v91[4];
  v78 = &v90[96];
  v69 = &v89[4];
  v86 = v25 * (v76 - 1);
  v75 = v25;
  v85 = v25 * v76;
  v79 = v6;
  v87 = v20;
  while (2)
  {
    v26 = 0;
    v27 = v67;
    do
    {
      v28 = *v83;
      v82 = v85 + v26;
      v29 = v88;
      outlined init with copy of ConversationControlsAppLaunchButtonType(v85 + v26 + v28, v88, type metadata accessor for Participant);
      v81 = v86 + v26;
      outlined init with copy of ConversationControlsAppLaunchButtonType(v86 + v26 + v28, v92, type metadata accessor for Participant);
      v30 = v74;
      outlined init with copy of ConversationControlsAppLaunchButtonType(v29, v74, type metadata accessor for Participant.State);
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        v32 = v30;
        v33 = (const void *)(v30 + *(int *)(v31 + 48));
        outlined consume of Participant.CopresenceInfo?(*(_QWORD *)(v32 + *(int *)(v31 + 64)), *(_QWORD *)(v32 + *(int *)(v31 + 64) + 8));
        memcpy(v90, v33, sizeof(v90));
        v34 = type metadata accessor for Date();
        v35 = v32;
        v20 = v87;
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v35, v34);
        outlined init with copy of Participant.ScreenInfo?((uint64_t)v78, (uint64_t)v91);
        outlined destroy of Participant.MediaInfo((uint64_t)v90);
        if (v91[3] != 1)
        {
          memcpy(v90, v91, 0xD1uLL);
          v36 = v90[40];
          outlined destroy of Participant.ScreenInfo((uint64_t)v90);
          v20 = v87;
          goto LABEL_9;
        }
      }
      else
      {
        outlined destroy of RemoteControlRequest(v30, type metadata accessor for Participant.State);
        memset(v91, 0, 24);
        v91[3] = 1;
        bzero(v72, 0xB1uLL);
      }
      outlined destroy of Participant.ScreenInfo?((uint64_t)v91);
      v36 = 2;
LABEL_9:
      outlined init with copy of ConversationControlsAppLaunchButtonType(v88, (uint64_t)v20, type metadata accessor for Participant);
      if (v36 == 2)
      {
        v84 = 0;
        v37 = (uint64_t)v73;
        goto LABEL_16;
      }
      v38 = v70;
      outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v20, v70, type metadata accessor for Participant.State);
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        v39 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        v40 = v38;
        v41 = (const void *)(v38 + *(int *)(v39 + 48));
        outlined consume of Participant.CopresenceInfo?(*(_QWORD *)(v40 + *(int *)(v39 + 64)), *(_QWORD *)(v40 + *(int *)(v39 + 64) + 8));
        memcpy(v90, v41, sizeof(v90));
        v42 = type metadata accessor for Date();
        v43 = v40;
        v20 = v87;
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 8))(v43, v42);
        outlined init with copy of Participant.ScreenInfo?((uint64_t)v78, (uint64_t)v89);
        outlined destroy of Participant.MediaInfo((uint64_t)v90);
        v37 = (uint64_t)v73;
        if (v89[3] != 1)
        {
          memcpy(v91, v89, 0xD1uLL);
          v84 = LOBYTE(v91[5]);
          outlined destroy of Participant.ScreenInfo((uint64_t)v91);
          goto LABEL_16;
        }
      }
      else
      {
        outlined destroy of RemoteControlRequest(v38, type metadata accessor for Participant.State);
        memset(v89, 0, 24);
        v89[3] = 1;
        bzero(v69, 0xB1uLL);
        v37 = (uint64_t)v73;
      }
      outlined destroy of Participant.ScreenInfo?((uint64_t)v89);
      v84 = 0;
LABEL_16:
      outlined destroy of RemoteControlRequest((uint64_t)v20, type metadata accessor for Participant);
      outlined init with copy of ConversationControlsAppLaunchButtonType(v92, v37, type metadata accessor for Participant.State);
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        v44 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        v45 = v37;
        v46 = (const void *)(v37 + *(int *)(v44 + 48));
        outlined consume of Participant.CopresenceInfo?(*(_QWORD *)(v45 + *(int *)(v44 + 64)), *(_QWORD *)(v45 + *(int *)(v44 + 64) + 8));
        memcpy(v90, v46, sizeof(v90));
        v47 = type metadata accessor for Date();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 8))(v45, v47);
        outlined init with copy of Participant.ScreenInfo?((uint64_t)v78, (uint64_t)v91);
        outlined destroy of Participant.MediaInfo((uint64_t)v90);
        if (v91[3] != 1)
        {
          memcpy(v90, v91, 0xD1uLL);
          v48 = v90[40];
          outlined destroy of Participant.ScreenInfo((uint64_t)v90);
          goto LABEL_21;
        }
      }
      else
      {
        outlined destroy of RemoteControlRequest(v37, type metadata accessor for Participant.State);
        memset(v91, 0, 24);
        v91[3] = 1;
        bzero(v72, 0xB1uLL);
      }
      outlined destroy of Participant.ScreenInfo?((uint64_t)v91);
      v48 = 2;
LABEL_21:
      v49 = v77;
      outlined init with copy of ConversationControlsAppLaunchButtonType(v92, v77, type metadata accessor for Participant);
      if (v48 == 2)
        goto LABEL_27;
      v50 = v71;
      outlined init with copy of ConversationControlsAppLaunchButtonType(v49, v71, type metadata accessor for Participant.State);
      if (swift_getEnumCaseMultiPayload() != 4)
      {
        outlined destroy of RemoteControlRequest(v50, type metadata accessor for Participant.State);
        memset(v89, 0, 24);
        v89[3] = 1;
        bzero(v69, 0xB1uLL);
LABEL_26:
        outlined destroy of Participant.ScreenInfo?((uint64_t)v89);
LABEL_27:
        v56 = 0;
        goto LABEL_28;
      }
      v51 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      v52 = v50;
      v53 = (const void *)(v50 + *(int *)(v51 + 48));
      outlined consume of Participant.CopresenceInfo?(*(_QWORD *)(v52 + *(int *)(v51 + 64)), *(_QWORD *)(v52 + *(int *)(v51 + 64) + 8));
      memcpy(v90, v53, sizeof(v90));
      v54 = type metadata accessor for Date();
      v55 = v52;
      v49 = v77;
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 8))(v55, v54);
      outlined init with copy of Participant.ScreenInfo?((uint64_t)v78, (uint64_t)v89);
      outlined destroy of Participant.MediaInfo((uint64_t)v90);
      if (v89[3] == 1)
        goto LABEL_26;
      memcpy(v91, v89, 0xD1uLL);
      v56 = LOBYTE(v91[5]);
      outlined destroy of Participant.ScreenInfo((uint64_t)v91);
LABEL_28:
      outlined destroy of RemoteControlRequest(v49, type metadata accessor for Participant);
      v57 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithBool_, v56);
      v58 = objc_msgSend(v57, sel_integerValue);

      v59 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
      v60 = objc_msgSend(v59, sel_initWithBool_, v84);
      v61 = objc_msgSend(v60, sel_integerValue);

      outlined destroy of RemoteControlRequest(v92, type metadata accessor for Participant);
      outlined destroy of RemoteControlRequest(v88, type metadata accessor for Participant);
      v62 = (uint64_t)v58 < (uint64_t)v61;
      v20 = v87;
      if (!v62)
        break;
      v63 = *v83;
      if (!*v83)
      {
        __break(1u);
        return;
      }
      v64 = v63 + v86 + v26;
      outlined init with take of StagedCollaboration(v63 + v85 + v26, v80, type metadata accessor for Participant);
      swift_arrayInitWithTakeFrontToBack();
      outlined init with take of StagedCollaboration(v80, v64, type metadata accessor for Participant);
      v26 -= v75;
      ++v27;
      v20 = v87;
    }
    while (v76 != v27);
    v86 += v75;
    v85 += v75;
    if (++v76 != v66)
      continue;
    break;
  }
}

{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double *v28;
  uint64_t v29;
  double *v30;
  double v31;
  double v32;
  uint64_t v33;
  double *v34;
  BOOL v35;
  double v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  double *v49;
  double *v50;
  double *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  double *v55;
  double *v56;
  double *v57;
  uint64_t *v58;
  uint64_t v59;
  _BYTE v60[48];
  uint64_t v61;
  char v62;
  uint64_t v63;

  v45 = a1;
  v48 = type metadata accessor for HUDActivityManager.BannerUpdate(0);
  MEMORY[0x1E0C80A78](v48);
  v59 = (uint64_t)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  MEMORY[0x1E0C80A78](v9);
  v47 = (uint64_t)&v43 - v10;
  MEMORY[0x1E0C80A78](v11);
  v49 = (double *)((char *)&v43 - v12);
  MEMORY[0x1E0C80A78](v13);
  v15 = (double *)((char *)&v43 - v14);
  MEMORY[0x1E0C80A78](v16);
  v57 = (double *)((char *)&v43 - v17);
  MEMORY[0x1E0C80A78](v18);
  v56 = (double *)((char *)&v43 - v21);
  v54 = a3;
  v44 = a2;
  if (a3 == a2)
    return;
  v22 = *(_QWORD *)(v19 + 72);
  v51 = v56 + 1;
  v50 = v57 + 1;
  v58 = &v61;
  v63 = v22 * (v54 - 1);
  v52 = v22;
  v23 = v22 * v54;
  v55 = v15;
  v46 = v20;
  while (2)
  {
    v24 = 0;
    v25 = v45;
    v53 = v23;
    while (1)
    {
      v26 = *a4;
      v27 = v23 + v24 + *a4;
      v28 = v56;
      outlined init with copy of HUDActivityManager.BannerUpdate(v27, (uint64_t)v56);
      v29 = v63 + v24 + v26;
      v30 = v57;
      outlined init with copy of HUDActivityManager.BannerUpdate(v29, (uint64_t)v57);
      outlined init with copy of ConversationControlsType((uint64_t)v51, (uint64_t)v60);
      outlined init with copy of ConversationControlsType((uint64_t)v50, (uint64_t)v58);
      if (!v60[40])
        break;
      if (v62)
      {
        v31 = *v28;
        v32 = *v30;
        outlined init with copy of HUDActivityManager.BannerUpdate((uint64_t)v28, (uint64_t)v15);
        v33 = (uint64_t)v30;
        v34 = v49;
        outlined init with copy of HUDActivityManager.BannerUpdate(v33, (uint64_t)v49);
        if (v31 >= v32)
        {
          v36 = *v15;
          v37 = *v34;
          v38 = (uint64_t)v15;
          v39 = v47;
          outlined init with copy of HUDActivityManager.BannerUpdate(v38, v47);
          v40 = v46;
          outlined init with copy of HUDActivityManager.BannerUpdate((uint64_t)v34, v46);
          v35 = v36 == v37 && Date.compare(_:)() == -1;
          outlined destroy of HUDActivityManager.BannerUpdate(v40);
          outlined destroy of HUDActivityManager.BannerUpdate(v39);
          v15 = v55;
        }
        else
        {
          v35 = 1;
        }
        outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v49);
        outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v15);
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v60, &demangling cache variable for type metadata for (ConversationControlsType, ConversationControlsType));
        v28 = v56;
        v30 = v57;
LABEL_16:
        outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v30);
        outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v28);
        v23 = v53;
        if (!v35)
          goto LABEL_21;
        goto LABEL_17;
      }
      outlined destroy of ConversationControlsType((uint64_t)v58);
      outlined destroy of ConversationControlsType((uint64_t)v60);
      outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v30);
      outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v28);
      v23 = v53;
LABEL_17:
      v41 = *a4;
      if (!*a4)
      {
        __break(1u);
        return;
      }
      v42 = v41 + v63 + v24;
      outlined init with take of HUDActivityManager.BannerUpdate(v41 + v23 + v24, v59);
      swift_arrayInitWithTakeFrontToBack();
      outlined init with take of HUDActivityManager.BannerUpdate(v59, v42);
      v24 -= v52;
      ++v25;
      v15 = v55;
      if (v54 == v25)
        goto LABEL_21;
    }
    if (!v62)
    {
      v35 = *v28 < *v30;
      outlined destroy of ConversationControlsType((uint64_t)v58);
      outlined destroy of ConversationControlsType((uint64_t)v60);
      goto LABEL_16;
    }
    outlined destroy of ConversationControlsType((uint64_t)v60);
    outlined destroy of ConversationControlsType((uint64_t)v58);
    outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v30);
    outlined destroy of HUDActivityManager.BannerUpdate((uint64_t)v28);
    v23 = v53;
LABEL_21:
    v63 += v52;
    v23 += v52;
    if (++v54 != v44)
      continue;
    break;
  }
}

{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t (*v25)(uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;

  v35 = a1;
  v36 = type metadata accessor for Participant.Caption(0);
  v7 = MEMORY[0x1E0C80A78](v36);
  v42 = (uint64_t)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v38 = (uint64_t *)((char *)&v33 - v10);
  MEMORY[0x1E0C80A78](v9);
  v37 = (uint64_t *)((char *)&v33 - v12);
  v41 = a3;
  v34 = a2;
  if (a3 != a2)
  {
    v13 = *(_QWORD *)(v11 + 72);
    v14 = v13 * (v41 - 1);
    v39 = v13;
    v15 = v13 * v41;
    v16 = type metadata accessor for Participant.Caption;
    v44 = a4;
    while (2)
    {
      v17 = 0;
      v18 = v35;
      v40 = v15;
      do
      {
        v19 = *v44;
        v20 = v15 + v17 + *v44;
        v21 = v37;
        outlined init with copy of ConversationControlsAppLaunchButtonType(v20, (uint64_t)v37, v16);
        v22 = v14 + v17 + v19;
        v23 = v14;
        v24 = v38;
        outlined init with copy of ConversationControlsAppLaunchButtonType(v22, (uint64_t)v38, v16);
        v43 = *v21;
        v25 = v16;
        v26 = *v24;
        v27 = (uint64_t)v24;
        v14 = v23;
        outlined destroy of AccountUpdateNotice(v27, v25);
        v28 = (uint64_t)v21;
        v15 = v40;
        outlined destroy of AccountUpdateNotice(v28, v25);
        v29 = v43 < v26;
        v16 = v25;
        if (!v29)
          break;
        v30 = *v44;
        if (!*v44)
        {
          __break(1u);
          return;
        }
        v31 = v30 + v23 + v17;
        outlined init with take of StagedCollaboration(v30 + v15 + v17, v42, v25);
        swift_arrayInitWithTakeFrontToBack();
        v32 = v31;
        v16 = v25;
        outlined init with take of StagedCollaboration(v42, v32, v25);
        v17 -= v39;
        ++v18;
      }
      while (v41 != v18);
      v14 = v23 + v39;
      v15 += v39;
      if (++v41 != v34)
        continue;
      break;
    }
  }
}

{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  char v12;
  void *v13;
  uint64_t v16;

  if (a3 != a2)
  {
    v4 = a3;
    v5 = *a4;
    type metadata accessor for UIWindowLevel(0);
    v6 = v5 + 8 * v4 - 8;
    while (2)
    {
      v7 = *(void **)(v5 + 8 * v4);
      v8 = a1;
      v16 = v6;
      do
      {
        v9 = *(void **)v6;
        v10 = v7;
        v11 = v9;
        objc_msgSend(v10, sel_windowLevel);
        objc_msgSend(v11, sel_windowLevel);
        lazy protocol witness table accessor for type UIWindowLevel and conformance UIWindowLevel();
        v12 = dispatch thunk of static Comparable.< infix(_:_:)();

        if ((v12 & 1) == 0)
          break;
        if (!v5)
        {
          __break(1u);
          return;
        }
        v13 = *(void **)v6;
        v7 = *(void **)(v6 + 8);
        *(_QWORD *)v6 = v7;
        *(_QWORD *)(v6 + 8) = v13;
        v6 -= 8;
        ++v8;
      }
      while (v4 != v8);
      ++v4;
      v6 = v16 + 8;
      if (v4 != a2)
        continue;
      break;
    }
  }
}

{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  char v44;
  void (*v45)(char *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v63 = a4;
  v51 = a1;
  v66 = type metadata accessor for Participant.State(0);
  v6 = MEMORY[0x1E0C80A78](v66);
  v56 = (uint64_t)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v49 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  v11 = MEMORY[0x1E0C80A78](v10);
  v55 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v49 - v13;
  v15 = type metadata accessor for Date();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x1E0C80A78](v15);
  v53 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v65 = (char *)&v49 - v19;
  v52 = type metadata accessor for Participant(0);
  v20 = MEMORY[0x1E0C80A78](v52);
  v60 = (uint64_t)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v49 - v23;
  MEMORY[0x1E0C80A78](v22);
  v27 = (char *)&v49 - v26;
  v59 = a3;
  v50 = a2;
  if (a3 != a2)
  {
    v28 = v16;
    v29 = *(_QWORD *)(v25 + 72);
    v68 = v29 * (v59 - 1);
    v58 = v29;
    v67 = v29 * v59;
    v54 = v24;
    v57 = (char *)&v49 - v26;
    while (2)
    {
      v30 = 0;
      v64 = v51;
      while (1)
      {
        v31 = *v63;
        v62 = v67 + v30;
        outlined init with copy of ConversationControlsAppLaunchButtonType(v67 + v30 + v31, (uint64_t)v27, type metadata accessor for Participant);
        v61 = v68 + v30;
        outlined init with copy of ConversationControlsAppLaunchButtonType(v68 + v30 + v31, (uint64_t)v24, type metadata accessor for Participant);
        outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v27, (uint64_t)v9, type metadata accessor for Participant.State);
        if (swift_getEnumCaseMultiPayload() != 4)
        {
          outlined destroy of AccountUpdateNotice((uint64_t)v9, type metadata accessor for Participant.State);
          __swift_storeEnumTagSinglePayload((uint64_t)v14, 1, 1, v15);
          v48 = (uint64_t)v14;
          goto LABEL_17;
        }
        v32 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        v33 = (uint64_t)&v9[*(int *)(v32 + 48)];
        outlined consume of Participant.CopresenceInfo?(*(_QWORD *)&v9[*(int *)(v32 + 64)], *(_QWORD *)&v9[*(int *)(v32 + 64) + 8]);
        v34 = *(void (**)(char *, char *, uint64_t))(v28 + 32);
        v34(v14, v9, v15);
        outlined destroy of Participant.MediaInfo(v33);
        __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v15);
        if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15) == 1)
        {
          v48 = (uint64_t)v14;
          goto LABEL_16;
        }
        v34(v65, v14, v15);
        v35 = v56;
        outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v24, v56, type metadata accessor for Participant.State);
        if (swift_getEnumCaseMultiPayload() != 4)
          break;
        v36 = v28;
        v37 = v14;
        v38 = v9;
        v39 = v35 + *(int *)(v32 + 48);
        outlined consume of Participant.CopresenceInfo?(*(_QWORD *)(v35 + *(int *)(v32 + 64)), *(_QWORD *)(v35 + *(int *)(v32 + 64) + 8));
        v40 = (uint64_t)v55;
        v34(v55, (char *)v35, v15);
        v41 = v39;
        v9 = v38;
        v14 = v37;
        v28 = v36;
        outlined destroy of Participant.MediaInfo(v41);
        __swift_storeEnumTagSinglePayload(v40, 0, 1, v15);
        if (__swift_getEnumTagSinglePayload(v40, 1, v15) == 1)
          goto LABEL_15;
        v42 = v53;
        v34(v53, (char *)v40, v15);
        v43 = v65;
        v44 = static Date.< infix(_:_:)();
        v45 = *(void (**)(char *, uint64_t))(v28 + 8);
        v45(v42, v15);
        v45(v43, v15);
        v24 = v54;
        outlined destroy of AccountUpdateNotice((uint64_t)v54, type metadata accessor for Participant);
        v27 = v57;
        outlined destroy of AccountUpdateNotice((uint64_t)v57, type metadata accessor for Participant);
        if ((v44 & 1) != 0)
        {
          v46 = *v63;
          if (!*v63)
          {
            __break(1u);
            return;
          }
          v47 = v46 + v68 + v30;
          outlined init with take of StagedCollaboration(v46 + v67 + v30, v60, type metadata accessor for Participant);
          swift_arrayInitWithTakeFrontToBack();
          outlined init with take of StagedCollaboration(v60, v47, type metadata accessor for Participant);
          v30 -= v58;
          if (v59 != ++v64)
            continue;
        }
        goto LABEL_18;
      }
      outlined destroy of AccountUpdateNotice(v35, type metadata accessor for Participant.State);
      v40 = (uint64_t)v55;
      __swift_storeEnumTagSinglePayload((uint64_t)v55, 1, 1, v15);
LABEL_15:
      (*(void (**)(char *, uint64_t))(v28 + 8))(v65, v15);
      v48 = v40;
      v24 = v54;
LABEL_16:
      v27 = v57;
LABEL_17:
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v48, (uint64_t *)&demangling cache variable for type metadata for Date?);
      outlined destroy of AccountUpdateNotice((uint64_t)v24, type metadata accessor for Participant);
      outlined destroy of AccountUpdateNotice((uint64_t)v27, type metadata accessor for Participant);
LABEL_18:
      v68 += v58;
      v67 += v58;
      if (++v59 != v50)
        continue;
      break;
    }
  }
}

uint64_t specialized _merge<A>(low:mid:high:buffer:by:)(id *a1, id *a2, unint64_t a3, void **a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void **v14;
  void *v16;
  id v17;
  id *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  void **v26;
  BOOL v27;
  unint64_t v28;
  id *v32;
  id *v33;
  void *v34;
  id *v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  BOOL v44;
  unint64_t v45;
  BOOL v47;
  uint64_t v48;
  id *v49;
  void **v50;
  id *v51;
  id *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void **v57;

  v8 = type metadata accessor for Date();
  v55 = *(_QWORD *)(v8 - 8);
  v56 = v8;
  v9 = MEMORY[0x1E0C80A78](v8);
  v54 = (uint64_t)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v53 = (uint64_t)&v48 - v11;
  v12 = a2 - a1;
  v13 = (uint64_t)(a3 - (_QWORD)a2) / 8;
  if (v12 >= v13)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(a2, (uint64_t)(a3 - (_QWORD)a2) / 8, a4);
    v14 = &a4[v13];
    if ((uint64_t)(a3 - (_QWORD)a2) < 8 || a1 >= a2)
      goto LABEL_23;
    v32 = (id *)(a3 - 8);
    v49 = a1;
    v50 = a4;
    while (1)
    {
      v57 = v14;
      v51 = a2;
      v52 = v32 + 1;
      v33 = v14 - 1;
      v35 = a2 - 1;
      v34 = *(a2 - 1);
      v36 = *(v14 - 1);
      v37 = v34;
      v38 = v53;
      SGURL.recentsDate.getter(v53);
      v39 = v54;
      SGURL.recentsDate.getter(v54);
      v40 = Date.compare(_:)();
      v41 = *(void (**)(uint64_t, uint64_t))(v55 + 8);
      v42 = v39;
      v43 = v56;
      v41(v42, v56);
      v41(v38, v43);

      if (v40 == -1)
      {
        v47 = v52 != v51 || v32 >= v51;
        a2 = v35;
        v45 = (unint64_t)v49;
        a4 = v50;
        v14 = v57;
        if (!v47)
          goto LABEL_31;
      }
      else
      {
        a2 = v51;
        v44 = v52 != v57 || v32 >= v57;
        v35 = v33;
        v14 = v33;
        v45 = (unint64_t)v49;
        a4 = v50;
        if (!v44)
          goto LABEL_31;
      }
      *v32 = *v35;
LABEL_31:
      --v32;
      if (v14 <= a4 || (unint64_t)a2 <= v45)
        goto LABEL_23;
    }
  }
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, a2 - a1, a4);
  v14 = &a4[v12];
  if ((char *)a2 - (char *)a1 >= 8 && (unint64_t)a2 < a3)
  {
    v57 = &a4[v12];
    v52 = (id *)a3;
    do
    {
      v16 = *a4;
      v17 = *a2;
      v18 = a2;
      v19 = v16;
      v20 = v53;
      SGURL.recentsDate.getter(v53);
      v21 = v54;
      SGURL.recentsDate.getter(v54);
      v22 = Date.compare(_:)();
      v23 = *(void (**)(uint64_t, uint64_t))(v55 + 8);
      v24 = v21;
      v25 = v56;
      v23(v24, v56);
      v23(v20, v25);

      if (v22 == -1)
      {
        v26 = v18;
        a2 = v18 + 1;
        v27 = a1 == v18;
      }
      else
      {
        v26 = a4;
        v27 = a1 == a4++;
        a2 = v18;
      }
      v14 = v57;
      v28 = (unint64_t)v52;
      if (!v27)
        *a1 = *v26;
      ++a1;
    }
    while (a4 < v14 && (unint64_t)a2 < v28);
  }
  a2 = a1;
LABEL_23:
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a4, v14 - a4, a2);
  return 1;
}

void outlined bridged method (pb) of @objc TUConversationLink.displayName.getter(void *a1, SEL *a2)
{
  id v2;
  void *v3;

  v2 = objc_msgSend(a1, *a2);
  if (v2)
  {
    v3 = v2;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

  }
  OUTLINED_FUNCTION_18();
}

uint64_t outlined init with take of Date?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void outlined bridged method (pb) of @objc TUConversationLink.invitedMemberHandles.getter(void *a1)
{
  id v1;
  void *v2;

  v1 = objc_msgSend(a1, sel_invitedMemberHandles);
  if (v1)
  {
    v2 = v1;
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
    lazy protocol witness table accessor for type TUHandle and conformance NSObject((unint64_t *)&lazy protocol witness table cache variable for type TUHandle and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
    static Set._unconditionallyBridgeFromObjectiveC(_:)();

  }
  OUTLINED_FUNCTION_18();
}

unint64_t lazy protocol witness table accessor for type LinkSource and conformance LinkSource()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type LinkSource and conformance LinkSource;
  if (!lazy protocol witness table cache variable for type LinkSource and conformance LinkSource)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for LinkSource, &type metadata for LinkSource);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LinkSource and conformance LinkSource);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ConversationLink and conformance ConversationLink()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ConversationLink and conformance ConversationLink;
  if (!lazy protocol witness table cache variable for type ConversationLink and conformance ConversationLink)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ConversationLink, &type metadata for ConversationLink);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ConversationLink and conformance ConversationLink);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for LinkSource(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BD0CF0FC + 4 * byte_1BD6492B5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BD0CF130 + 4 * byte_1BD6492B0[v4]))();
}

uint64_t sub_1BD0CF130(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD0CF138(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD0CF140);
  return result;
}

uint64_t sub_1BD0CF14C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD0CF154);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BD0CF158(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD0CF160(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LinkSource()
{
  return &type metadata for LinkSource;
}

uint64_t destroy for ConversationLink(id *a1)
{

  swift_bridgeObjectRelease();
  return swift_release();
}

void initializeBufferWithCopyOfBuffer for ConversationLink(_QWORD *a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  id v4;

  v2 = *(void **)a2;
  v3 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v3;
  a1[2] = *(_QWORD *)(a2 + 16);
  v4 = v2;
  OUTLINED_FUNCTION_5_0();
  swift_retain();
  OUTLINED_FUNCTION_18();
}

uint64_t assignWithCopy for ConversationLink(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for ConversationLink(uint64_t a1, uint64_t a2)
{

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  return a1;
}

BOOL specialized static Set.Index.== infix(_:_:)(uint64_t a1, int a2, char a3, uint64_t a4, int a5, char a6)
{
  if ((a3 & 1) != 0)
  {
    if ((a6 & 1) != 0)
LABEL_9:
      JUMPOUT(0x1C3B73BC8);
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if ((a6 & 1) != 0)
    goto LABEL_8;
  if (a2 != a5)
  {
    __break(1u);
    goto LABEL_8;
  }
  return a1 == a4;
}

_QWORD *specialized Dictionary.subscript.getter(_QWORD *result, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  id v6;

  if (a2 < 0 || 1 << *(_BYTE *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a5 + (((unint64_t)a2 >> 3) & 0xFFFFFFFFFFFFF8) + 64) >> a2) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a5 + 36) == a3)
  {
    v5 = *(void **)(*(_QWORD *)(a5 + 48) + 8 * a2);
    *result = *(_QWORD *)(*(_QWORD *)(a5 + 56) + 8 * a2);
    v6 = v5;
    swift_bridgeObjectRetain();
    return v6;
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t outlined destroy of Date?(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void OUTLINED_FUNCTION_39_17()
{
  uint64_t v0;

  ++*(_QWORD *)(v0 + 16);
}

uint64_t ScreenSharingContentView.interfaceOrientation.getter()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;

  v1 = *(_QWORD *)v0;
  v2 = *(_BYTE *)(v0 + 8);
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(v1, v2);
  v3 = specialized Environment.wrappedValue.getter(v1, v2);
  outlined consume of Environment<CGFloat>.Content(v1, v2);
  return v3;
}

uint64_t specialized Environment.wrappedValue.getter(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  os_log_type_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v4 = type metadata accessor for EnvironmentValues();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) == 0)
  {
    swift_retain();
    v8 = static os_log_type_t.fault.getter();
    v9 = static Log.runtimeIssuesLog.getter();
    v10 = v8;
    if (os_log_type_enabled(v9, v8))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = swift_slowAlloc();
      v15 = v12;
      *(_DWORD *)v11 = 136315138;
      v14 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000016, 0x80000001BD671CF0, &v15);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl(&dword_1BD004000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v12, -1, -1);
      MEMORY[0x1C3B751B8](v11, -1, -1);
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath();
    outlined consume of Environment<CGFloat>.Content(a1, 0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v15;
  }
  return a1;
}

void specialized Environment.wrappedValue.getter()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  os_log_type_t v8;
  uint64_t v9;
  NSObject *v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_93();
  v3 = v0;
  v5 = v4;
  v6 = OUTLINED_FUNCTION_17_28();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_4_1();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_16_2();
  outlined init with copy of FeatureEligibility?((uint64_t)v3, v2, &demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    outlined init with take of Any?(v2, v5, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  }
  else
  {
    static os_log_type_t.fault.getter();
    v10 = static Log.runtimeIssuesLog.getter();
    if (OUTLINED_FUNCTION_39_18(v10))
    {
      v11 = (uint8_t *)OUTLINED_FUNCTION_105();
      v13 = OUTLINED_FUNCTION_105();
      *(_DWORD *)v11 = 136315138;
      v12 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000020, 0x80000001BD671CC0, &v13);
      OUTLINED_FUNCTION_22_28(v12);
      OUTLINED_FUNCTION_48(&dword_1BD004000, v3, v8, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_20_29();
    OUTLINED_FUNCTION_51_12();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v1, v6);
  }
  OUTLINED_FUNCTION_52_1();
}

{
  OUTLINED_FUNCTION_25_25();
}

{
  OUTLINED_FUNCTION_29_20();
}

{
  OUTLINED_FUNCTION_28_23();
}

{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  uint64_t (*v5)(_QWORD);
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  os_log_type_t v17;
  NSObject *v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  OUTLINED_FUNCTION_93();
  v2 = v1;
  v25 = v3;
  v5 = v4;
  v7 = v6;
  v8 = v0;
  v10 = v9;
  v11 = OUTLINED_FUNCTION_17_28();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_4_1();
  __swift_instantiateConcreteTypeFromMangledName(v7);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of FeatureEligibility?(v8, (uint64_t)v15, v7);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v16 = v5(0);
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v10, v15, v16);
  }
  else
  {
    v17 = static os_log_type_t.fault.getter();
    v18 = static Log.runtimeIssuesLog.getter();
    if (os_log_type_enabled(v18, v17))
    {
      v23 = v2;
      v19 = OUTLINED_FUNCTION_105();
      v24 = v10;
      v20 = (uint8_t *)v19;
      v26 = OUTLINED_FUNCTION_105();
      *(_DWORD *)v20 = 136315138;
      v21 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v25, v23, &v26);
      OUTLINED_FUNCTION_61_0(v21);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_48(&dword_1BD004000, v18, v17, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v20);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_20_29();
    OUTLINED_FUNCTION_51_12();
    swift_release();
    OUTLINED_FUNCTION_12_26(*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8));
  }
  OUTLINED_FUNCTION_52_1();
}

{
  void *v0;
  uint64_t v1;
  NSObject *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_93();
  OUTLINED_FUNCTION_8_40();
  OUTLINED_FUNCTION_13_37();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_4_1();
  if ((v0 & 1) == 0)
  {
    OUTLINED_FUNCTION_11_8();
    static os_log_type_t.fault.getter();
    v2 = OUTLINED_FUNCTION_30_23();
    if (OUTLINED_FUNCTION_11_35(v2))
    {
      OUTLINED_FUNCTION_105();
      v3 = OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_35_10(v3);
      OUTLINED_FUNCTION_18_33(4.8149e-34);
      v5 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(1819242306, 0xE400000000000000, v4);
      OUTLINED_FUNCTION_1_39(v5);
      OUTLINED_FUNCTION_5_38(&dword_1BD004000, v6, v7, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.");
      OUTLINED_FUNCTION_19_6();
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_20_29();
    OUTLINED_FUNCTION_6_33();
    OUTLINED_FUNCTION_4_38();
  }
  OUTLINED_FUNCTION_52_1();
}

{
  void *v0;
  uint64_t v1;
  NSObject *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_93();
  OUTLINED_FUNCTION_8_40();
  OUTLINED_FUNCTION_13_37();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_4_1();
  if ((v0 & 1) == 0)
  {
    OUTLINED_FUNCTION_11_8();
    static os_log_type_t.fault.getter();
    v2 = OUTLINED_FUNCTION_30_23();
    if (OUTLINED_FUNCTION_11_35(v2))
    {
      OUTLINED_FUNCTION_105();
      v3 = OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_35_10(v3);
      OUTLINED_FUNCTION_18_33(4.8149e-34);
      v5 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(1701274693, 0xE400000000000000, v4);
      OUTLINED_FUNCTION_1_39(v5);
      OUTLINED_FUNCTION_5_38(&dword_1BD004000, v6, v7, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.");
      OUTLINED_FUNCTION_19_6();
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_20_29();
    OUTLINED_FUNCTION_6_33();
    OUTLINED_FUNCTION_4_38();
  }
  OUTLINED_FUNCTION_52_1();
}

{
  void *v0;
  uint64_t v1;
  NSObject *v2;
  _DWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_93();
  OUTLINED_FUNCTION_8_40();
  OUTLINED_FUNCTION_13_37();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_4_1();
  if ((v0 & 1) == 0)
  {
    OUTLINED_FUNCTION_11_8();
    static os_log_type_t.fault.getter();
    v2 = OUTLINED_FUNCTION_30_23();
    if (OUTLINED_FUNCTION_11_35(v2))
    {
      v3 = (_DWORD *)OUTLINED_FUNCTION_105();
      v4 = OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_35_10(v4);
      *v3 = 136315138;
      v5 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000013, 0x80000001BD671C30, &v8);
      OUTLINED_FUNCTION_1_39(v5);
      OUTLINED_FUNCTION_5_38(&dword_1BD004000, v6, v7, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.");
      OUTLINED_FUNCTION_19_6();
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_20_29();
    OUTLINED_FUNCTION_6_33();
    OUTLINED_FUNCTION_4_38();
  }
  OUTLINED_FUNCTION_52_1();
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_93();
  OUTLINED_FUNCTION_8_40();
  OUTLINED_FUNCTION_13_37();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_21_23();
  if ((v0 & 1) == 0)
  {
    static os_log_type_t.fault.getter();
    v3 = OUTLINED_FUNCTION_30_23();
    if (OUTLINED_FUNCTION_11_35(v3))
    {
      OUTLINED_FUNCTION_105();
      v4 = OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_35_10(v4);
      OUTLINED_FUNCTION_18_33(4.8149e-34);
      v6 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0x726F6C6F43, 0xE500000000000000, v5);
      OUTLINED_FUNCTION_1_39(v6);
      OUTLINED_FUNCTION_5_38(&dword_1BD004000, v7, v8, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.");
      OUTLINED_FUNCTION_19_6();
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_20_29();
    OUTLINED_FUNCTION_6_33();
    swift_release();
    OUTLINED_FUNCTION_12_26(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  }
  OUTLINED_FUNCTION_52_1();
}

{
  OUTLINED_FUNCTION_29_20();
}

{
  char v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  os_log_type_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_93();
  v2 = v1;
  v4 = v3;
  v5 = OUTLINED_FUNCTION_8_40();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_21_23();
  if ((v0 & 1) == 0)
  {
    v7 = static os_log_type_t.fault.getter();
    v8 = static Log.runtimeIssuesLog.getter();
    v9 = v7;
    if (os_log_type_enabled(v8, v7))
    {
      v10 = (uint8_t *)OUTLINED_FUNCTION_105();
      v12 = OUTLINED_FUNCTION_105();
      *(_DWORD *)v10 = 136315138;
      v11 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v4, v2, &v12);
      OUTLINED_FUNCTION_61_0(v11);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_48(&dword_1BD004000, v8, v9, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v10);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_20_29();
    OUTLINED_FUNCTION_6_33();
    swift_release();
    OUTLINED_FUNCTION_12_26(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  }
  OUTLINED_FUNCTION_52_1();
}

{
  OUTLINED_FUNCTION_25_25();
}

{
  specialized Environment.wrappedValue.getter();
}

{
  specialized Environment.wrappedValue.getter();
}

{
  void *v0;
  uint64_t v1;
  NSObject *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_93();
  OUTLINED_FUNCTION_8_40();
  OUTLINED_FUNCTION_13_37();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_4_1();
  if ((v0 & 1) == 0)
  {
    OUTLINED_FUNCTION_11_8();
    static os_log_type_t.fault.getter();
    v2 = OUTLINED_FUNCTION_30_23();
    if (OUTLINED_FUNCTION_11_35(v2))
    {
      OUTLINED_FUNCTION_105();
      v3 = OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_35_10(v3);
      OUTLINED_FUNCTION_18_33(4.8149e-34);
      v5 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0x74616F6C464743, 0xE700000000000000, v4);
      OUTLINED_FUNCTION_1_39(v5);
      OUTLINED_FUNCTION_5_38(&dword_1BD004000, v6, v7, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.");
      OUTLINED_FUNCTION_19_6();
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_20_29();
    OUTLINED_FUNCTION_6_33();
    OUTLINED_FUNCTION_4_38();
  }
}

{
  specialized Environment.wrappedValue.getter();
}

{
  OUTLINED_FUNCTION_28_23();
}

{
  uint64_t v0;
  os_log_type_t v1;
  NSObject *v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_93();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v8 = OUTLINED_FUNCTION_17_28();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_16_2();
  if ((v3 & 1) != 0)
  {
    *v7 = v5 & 1;
  }
  else
  {
    outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(v5, 0);
    static os_log_type_t.fault.getter();
    v10 = static Log.runtimeIssuesLog.getter();
    if (OUTLINED_FUNCTION_39_18(v10))
    {
      v11 = (uint8_t *)OUTLINED_FUNCTION_105();
      v13 = OUTLINED_FUNCTION_105();
      *(_DWORD *)v11 = 136315138;
      v12 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0x644974756F79614CLL, 0xEB000000006D6F69, &v13);
      OUTLINED_FUNCTION_22_28(v12);
      OUTLINED_FUNCTION_48(&dword_1BD004000, v3, v1, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath();
    outlined consume of Environment<CGFloat>.Content(v5, 0);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v0, v8);
  }
  OUTLINED_FUNCTION_52_1();
}

void ScreenSharingContentView.horizontalSizeClass.getter()
{
  specialized Environment.wrappedValue.getter();
  OUTLINED_FUNCTION_0();
}

uint64_t ScreenSharingContentView.contentMode.getter(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 72));
}

void ScreenSharingContentView.content.getter()
{
  OUTLINED_FUNCTION_23_1();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void ScreenSharingContentView.title.getter()
{
  OUTLINED_FUNCTION_23_1();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void ScreenSharingContentView.toolbar.getter()
{
  OUTLINED_FUNCTION_23_1();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void ScreenSharingContentView.init(contentMode:content:title:toolbar:)(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = swift_getKeyPath();
  *(_BYTE *)(a1 + 8) = 0;
  type metadata accessor for ScreenSharingContentView();
}

uint64_t sub_1BD0D02BC(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t *v10;
  uint64_t result;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;

  v10 = (uint64_t *)(v7 + a1[17]);
  *v10 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
  result = swift_storeEnumTagMultiPayload();
  *(_BYTE *)(v7 + a1[18]) = v8;
  v12 = (_QWORD *)(v7 + a1[19]);
  *v12 = v6;
  v12[1] = v5;
  v13 = (_QWORD *)(v7 + a1[20]);
  *v13 = v4;
  v13[1] = v3;
  v14 = (_QWORD *)(v7 + a1[21]);
  *v14 = v2;
  v14[1] = v1;
  return result;
}

uint64_t ScreenSharingContentView.toolbarFont.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v21;

  v0 = type metadata accessor for UserInterfaceSizeClass();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (UserInterfaceSizeClass?, UserInterfaceSizeClass?));
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v21 - v12;
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v21 - v14;
  if (static Platform.current.getter() != 1)
    goto LABEL_10;
  specialized Environment.wrappedValue.getter();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v13, *MEMORY[0x1E0CDC160], v0);
  __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v0);
  v16 = (uint64_t)&v6[*(int *)(v4 + 48)];
  outlined init with copy of FeatureEligibility?((uint64_t)v15, (uint64_t)v6, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  outlined init with copy of FeatureEligibility?((uint64_t)v13, v16, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v0) != 1)
  {
    outlined init with copy of FeatureEligibility?((uint64_t)v6, (uint64_t)v10, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    if (__swift_getEnumTagSinglePayload(v16, 1, v0) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v1 + 32))(v3, v16, v0);
      lazy protocol witness table accessor for type UserInterfaceSizeClass and conformance UserInterfaceSizeClass();
      v17 = dispatch thunk of static Equatable.== infix(_:_:)();
      v18 = *(void (**)(char *, uint64_t))(v1 + 8);
      v18(v3, v0);
      outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v13, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v15, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      v18(v10, v0);
      outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v6, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      if ((v17 & 1) != 0)
        goto LABEL_9;
LABEL_10:
      static Font.caption.getter();
      static Font.Weight.regular.getter();
      goto LABEL_11;
    }
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v13, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v15, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    (*(void (**)(char *, uint64_t))(v1 + 8))(v10, v0);
LABEL_7:
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v6, &demangling cache variable for type metadata for (UserInterfaceSizeClass?, UserInterfaceSizeClass?));
    goto LABEL_10;
  }
  outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v13, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v15, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  if (__swift_getEnumTagSinglePayload(v16, 1, v0) != 1)
    goto LABEL_7;
  outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v6, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
LABEL_9:
  static Font.footnote.getter();
  static Font.Weight.semibold.getter();
LABEL_11:
  v19 = Font.weight(_:)();
  swift_release();
  return v19;
}

uint64_t ScreenSharingContentView.toolbarPlacement.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;
  char v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;

  v0 = type metadata accessor for UserInterfaceSizeClass();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (UserInterfaceSizeClass?, UserInterfaceSizeClass?));
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v21 - v12;
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v21 - v14;
  if (static Platform.current.getter()
    || (v16 = ScreenSharingContentView.interfaceOrientation.getter(), !UIInterfaceOrientationIsLandscape(v16)))
  {
    if (static Platform.current.getter() == 1)
    {
      specialized Environment.wrappedValue.getter();
      (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v13, *MEMORY[0x1E0CDC160], v0);
      __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v0);
      v18 = (uint64_t)&v6[*(int *)(v4 + 48)];
      outlined init with copy of FeatureEligibility?((uint64_t)v15, (uint64_t)v6, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      outlined init with copy of FeatureEligibility?((uint64_t)v13, v18, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v0) == 1)
      {
        outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v13, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
        outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v15, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
        if (__swift_getEnumTagSinglePayload(v18, 1, v0) == 1)
        {
          outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v6, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
          return 0;
        }
        goto LABEL_12;
      }
      outlined init with copy of FeatureEligibility?((uint64_t)v6, (uint64_t)v10, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      if (__swift_getEnumTagSinglePayload(v18, 1, v0) == 1)
      {
        outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v13, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
        outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v15, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
        (*(void (**)(char *, uint64_t))(v1 + 8))(v10, v0);
LABEL_12:
        outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v6, &demangling cache variable for type metadata for (UserInterfaceSizeClass?, UserInterfaceSizeClass?));
        return 2;
      }
      (*(void (**)(char *, uint64_t, uint64_t))(v1 + 32))(v3, v18, v0);
      lazy protocol witness table accessor for type UserInterfaceSizeClass and conformance UserInterfaceSizeClass();
      v19 = dispatch thunk of static Equatable.== infix(_:_:)();
      v20 = *(void (**)(char *, uint64_t))(v1 + 8);
      v20(v3, v0);
      outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v13, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v15, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      v20(v10, v0);
      outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v6, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      if ((v19 & 1) != 0)
        return 0;
    }
    return 2;
  }
  if (ScreenSharingContentView.interfaceOrientation.getter() == 4)
    return 1;
  else
    return 3;
}

void ScreenSharingContentView.body.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  void (*v7)(void);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[2];
  _QWORD v33[2];
  _QWORD v34[4];

  OUTLINED_FUNCTION_93();
  v1 = v0;
  v2 = *(_QWORD *)(v0 - 8);
  v3 = *(_QWORD *)(v2 + 64);
  MEMORY[0x1E0C80A78](v0);
  (*(void (**)(char *))(v2 + 16))((char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = swift_allocObject();
  v5 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v4 + 24) = v5;
  v6 = *(_OWORD *)(v1 + 48);
  v29 = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v4 + 32) = v29;
  *(_OWORD *)(v4 + 48) = v6;
  OUTLINED_FUNCTION_55_4();
  v7();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _LayoutRoot<ScreenSharingContentLayout>);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _TraitWritingModifier<_LayoutTrait<LayoutRoleKey>>);
  type metadata accessor for ModifiedContent();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _BackgroundModifier<_ShapeView<Capsule._Inset, Material>?>);
  type metadata accessor for ModifiedContent();
  OUTLINED_FUNCTION_42_15();
  OUTLINED_FUNCTION_33_13();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _BackgroundModifier<ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>?>);
  type metadata accessor for ModifiedContent();
  OUTLINED_FUNCTION_33_13();
  OUTLINED_FUNCTION_45_16();
  OUTLINED_FUNCTION_44_12();
  v8 = OUTLINED_FUNCTION_41_0();
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type _LayoutRoot<ScreenSharingContentLayout> and conformance _LayoutRoot<A>, &demangling cache variable for type metadata for _LayoutRoot<ScreenSharingContentLayout>, MEMORY[0x1E0CD8A18]);
  OUTLINED_FUNCTION_45_16();
  v9 = type metadata accessor for _VariadicView.Tree();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Font?>);
  v10 = OUTLINED_FUNCTION_36_20();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Edge>);
  v11 = type metadata accessor for ModifiedContent();
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type _LayoutRoot<ScreenSharingContentLayout> and conformance _LayoutRoot<A>, &demangling cache variable for type metadata for _LayoutRoot<ScreenSharingContentLayout>, MEMORY[0x1E0CD8A20]);
  v13 = v12;
  v14 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CE0680], v8);
  v34[0] = v13;
  v34[1] = v14;
  v15 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD91E0], v9, v34);
  v16 = MEMORY[0x1E0CDCF80];
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Font?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Font?>, MEMORY[0x1E0CDCF80]);
  v33[0] = v15;
  v33[1] = v17;
  v18 = MEMORY[0x1E0CD9C20];
  v19 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v10, v33);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Edge> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Edge>, v16);
  v32[0] = v19;
  v32[1] = v20;
  MEMORY[0x1C3B750C8](v18, v11, v32);
  v30 = GeometryReader.init(content:)();
  v31 = v21;
  OUTLINED_FUNCTION_55_4();
  v22 = type metadata accessor for GeometryReader();
  MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9318], v22);
  OUTLINED_FUNCTION_43_15();
  static ViewBuilder.buildExpression<A>(_:)(v23, v24, v25);
  swift_release();
  v30 = v34[2];
  v31 = v34[3];
  OUTLINED_FUNCTION_43_15();
  static ViewBuilder.buildBlock<A>(_:)(v26, v27, v28);
  swift_release();
  OUTLINED_FUNCTION_52_1();
}

void closure #1 in ScreenSharingContentView.body.getter(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v26 = a8;
  v36 = a7;
  v37 = a2;
  v24 = a6;
  v21 = a3;
  v28 = a1;
  v35 = a9;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _LayoutRoot<ScreenSharingContentLayout>);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _TraitWritingModifier<_LayoutTrait<LayoutRoleKey>>);
  type metadata accessor for ModifiedContent();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _BackgroundModifier<_ShapeView<Capsule._Inset, Material>?>);
  type metadata accessor for ModifiedContent();
  type metadata accessor for Optional();
  type metadata accessor for ModifiedContent();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _BackgroundModifier<ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>?>);
  type metadata accessor for ModifiedContent();
  type metadata accessor for ModifiedContent();
  swift_getTupleTypeMetadata3();
  v27 = type metadata accessor for TupleView();
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type _LayoutRoot<ScreenSharingContentLayout> and conformance _LayoutRoot<A>, &demangling cache variable for type metadata for _LayoutRoot<ScreenSharingContentLayout>, MEMORY[0x1E0CD8A18]);
  v11 = type metadata accessor for _VariadicView.Tree();
  v12 = *(_QWORD *)(v11 - 8);
  v23 = v11;
  v30 = v12;
  MEMORY[0x1E0C80A78](v11);
  v20 = (char *)&v20 - v13;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Font?>);
  v14 = type metadata accessor for ModifiedContent();
  v15 = *(_QWORD *)(v14 - 8);
  v29 = v14;
  v33 = v15;
  MEMORY[0x1E0C80A78](v14);
  v22 = (char *)&v20 - v16;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Edge>);
  v32 = type metadata accessor for ModifiedContent();
  v34 = *(_QWORD *)(v32 - 8);
  v17 = MEMORY[0x1E0C80A78](v32);
  v25 = (char *)&v20 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v31 = (char *)&v20 - v19;
  v38 = v21;
  v39 = a4;
  v40 = a5;
  v41 = v24;
  v42 = v36;
  v43 = v26;
  type metadata accessor for ScreenSharingContentView();
}

uint64_t sub_1BD0D0EFC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t (*)(), uint64_t *, uint64_t (*)(), uint64_t *, uint64_t (*)(), uint64_t *, __n128);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t);

  v8 = *(_BYTE *)(v1[17] + *(int *)(a1 + 72));
  GeometryProxy.safeAreaInsets.getter();
  v10 = v9;
  v12 = v11;
  v14 = v13;
  v16 = v15;
  v17 = ScreenSharingContentView.toolbarPlacement.getter();
  *(_OWORD *)(v7 - 192) = xmmword_1BD649410;
  *(_BYTE *)(v7 - 176) = v8;
  *(_QWORD *)(v7 - 168) = v10;
  *(_QWORD *)(v7 - 160) = v12;
  *(_QWORD *)(v7 - 152) = v14;
  *(_QWORD *)(v7 - 144) = v16;
  *(_BYTE *)(v7 - 136) = v17;
  v18 = v3;
  v19 = v3;
  v20 = v1[16];
  v21 = implicit closure #1 in closure #1 in ScreenSharingContentView.body.getter(v7 - 192, v5, v4, v2, v18, v20, v6);
  v1[40] = v5;
  v1[41] = v4;
  v1[42] = v2;
  v1[43] = v19;
  v1[44] = v20;
  v1[45] = v6;
  v22 = v1[17];
  v1[46] = v22;
  v1[30] = v5;
  v1[31] = v4;
  v1[32] = v2;
  v1[33] = v19;
  v1[34] = v20;
  v1[35] = v6;
  v1[36] = v22;
  v1[20] = v5;
  v1[21] = v4;
  v1[22] = v2;
  v1[23] = v19;
  v1[24] = v20;
  v1[25] = v6;
  v1[26] = v22;
  v23 = *v1;
  v24(partial apply for closure #1 in closure #1 in ScreenSharingContentView.body.getter, v1 + 38, partial apply for closure #2 in closure #1 in ScreenSharingContentView.body.getter, v1 + 28, partial apply for closure #3 in closure #1 in ScreenSharingContentView.body.getter, v1 + 18, v21);
  swift_release();
  ScreenSharingContentView.toolbarFont.getter();
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type _LayoutRoot<ScreenSharingContentLayout> and conformance _LayoutRoot<A>, &demangling cache variable for type metadata for _LayoutRoot<ScreenSharingContentLayout>, MEMORY[0x1E0CD8A20]);
  v26 = v25;
  v27 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CE0680], v1[7]);
  *(_QWORD *)(v7 - 208) = v26;
  *(_QWORD *)(v7 - 200) = v27;
  v28 = v1[3];
  v29 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD91E0], v28, v7 - 208);
  v30 = v1[2];
  View.font(_:)();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v1[10] + 8))(v23, v28);
  ScreenSharingContentView.toolbarPlacement.getter();
  v31 = MEMORY[0x1E0CDCF80];
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Font?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Font?>, MEMORY[0x1E0CDCF80]);
  *(_QWORD *)(v7 - 224) = v29;
  *(_QWORD *)(v7 - 216) = v32;
  v33 = MEMORY[0x1E0CD9C20];
  v34 = v1[9];
  v35 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v34, v7 - 224);
  v36 = v1[5];
  View.toolbarPlacement(_:)();
  (*(void (**)(uint64_t, uint64_t))(v1[13] + 8))(v30, v34);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Edge> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Edge>, v31);
  *(_QWORD *)(v7 - 240) = v35;
  *(_QWORD *)(v7 - 232) = v37;
  v38 = v33;
  v39 = v1[12];
  v40 = MEMORY[0x1C3B750C8](v38, v39, v7 - 240);
  v41 = v1[11];
  static ViewBuilder.buildExpression<A>(_:)(v36, v39, v40);
  v42 = *(void (**)(uint64_t, uint64_t))(v1[14] + 8);
  v42(v36, v39);
  static ViewBuilder.buildBlock<A>(_:)(v41, v39, v1[15]);
  return ((uint64_t (*)(uint64_t, uint64_t))v42)(v41, v39);
}

__n128 implicit closure #1 in closure #1 in ScreenSharingContentView.body.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14;
  __int128 v15;
  __n128 result;

  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a2;
  *(_QWORD *)(v14 + 24) = a3;
  *(_QWORD *)(v14 + 32) = a4;
  *(_QWORD *)(v14 + 40) = a5;
  *(_QWORD *)(v14 + 48) = a6;
  *(_QWORD *)(v14 + 56) = a7;
  v15 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v14 + 64) = *(_OWORD *)a1;
  *(_OWORD *)(v14 + 80) = v15;
  *(_OWORD *)(v14 + 96) = *(_OWORD *)(a1 + 32);
  result = *(__n128 *)(a1 + 41);
  *(__n128 *)(v14 + 105) = result;
  return result;
}

uint64_t implicit closure #2 in implicit closure #1 in closure #1 in ScreenSharingContentView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v24;
  _QWORD v32[2];
  uint64_t v33;
  _QWORD v34[3];

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _BackgroundModifier<_ShapeView<Capsule._Inset, Material>?>);
  v14 = type metadata accessor for ModifiedContent();
  v15 = type metadata accessor for Optional();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _BackgroundModifier<ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>?>);
  v16 = type metadata accessor for ModifiedContent();
  v17 = MEMORY[0x1E0CDB838];
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type _BackgroundModifier<_ShapeView<Capsule._Inset, Material>?> and conformance _BackgroundModifier<A>, &demangling cache variable for type metadata for _BackgroundModifier<_ShapeView<Capsule._Inset, Material>?>, MEMORY[0x1E0CDB838]);
  v34[0] = a12;
  v34[1] = v18;
  v19 = MEMORY[0x1E0CD9C20];
  v33 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v14, v34);
  v20 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CE0798], v15, &v33);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type _BackgroundModifier<ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>?> and conformance _BackgroundModifier<A>, &demangling cache variable for type metadata for _BackgroundModifier<ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>?>, v17);
  v32[0] = a13;
  v32[1] = v21;
  v22 = MEMORY[0x1C3B750C8](v19, v16, v32);
  *((_QWORD *)&v24 + 1) = a11;
  *(_QWORD *)&v24 = v20;
  return ScreenSharingContentLayout.callAsFunction<A, B, C>(_:title:toolbar:)(a1, a2, a3, a4, a5, a6, v15, a7, a8, v16, v24, v22);
}

void closure #1 in closure #1 in ScreenSharingContentView.body.getter(uint64_t a1)
{
  uint64_t v1;

  v1 = MEMORY[0x1E0C80A78](a1);
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for ScreenSharingContentView();
}

uint64_t sub_1BD0D1424(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);

  (*(void (**)(void))(v2 + *(int *)(a1 + 76)))();
  static ViewBuilder.buildExpression<A>(_:)(v5, v1, v3);
  v8 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
  v8(v5, v1);
  static ViewBuilder.buildBlock<A>(_:)(v6, v1, v4);
  return v8(v6, v1);
}

void closure #2 in closure #1 in ScreenSharingContentView.body.getter(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[8];
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v24 = a8;
  v20[5] = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _BackgroundModifier<_ShapeView<Capsule._Inset, Material>?>);
  v14 = type metadata accessor for ModifiedContent();
  v20[7] = *(_QWORD *)(v14 - 8);
  v15 = MEMORY[0x1E0C80A78](v14);
  v20[4] = (char *)v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v20[6] = (char *)v20 - v17;
  v21 = type metadata accessor for Optional();
  v23 = *(_QWORD *)(v21 - 8);
  v18 = MEMORY[0x1E0C80A78](v21);
  MEMORY[0x1E0C80A78](v18);
  v22 = (char *)v20 - v19;
  v20[1] = a2;
  v25 = a2;
  v26 = a3;
  v20[2] = a4;
  v27 = a4;
  v28 = a5;
  v20[3] = a5;
  v29 = a6;
  v30 = a7;
  type metadata accessor for ScreenSharingContentView();
}

uint64_t sub_1BD0D1618(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  ScreenSharingContentView.toolbarPlacement.getter();
  v9 = Axis.rawValue.getter();
  if (v9 == Axis.rawValue.getter())
  {
    v10 = (*(uint64_t (**)(void))(v1 + *(int *)(a1 + 80)))();
    *(_QWORD *)(v7 - 288) = &v22;
    MEMORY[0x1E0C80A78](v10);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ShapeView<Capsule._Inset, Material>?);
    lazy protocol witness table accessor for type _ShapeView<Capsule._Inset, Material>? and conformance <A> A?();
    static Alignment.center.getter();
    v11 = *(_QWORD *)(v7 - 256);
    View.background<A>(alignment:content:)();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 248) + 8))(v4, v6);
    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type _BackgroundModifier<_ShapeView<Capsule._Inset, Material>?> and conformance _BackgroundModifier<A>, &demangling cache variable for type metadata for _BackgroundModifier<_ShapeView<Capsule._Inset, Material>?>, MEMORY[0x1E0CDB838]);
    *(_QWORD *)(v7 - 192) = v2;
    *(_QWORD *)(v7 - 184) = v12;
    v13 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v3, v7 - 192);
    v14 = *(_QWORD *)(v7 - 240);
    static ViewBuilder.buildExpression<A>(_:)(v11, v3, v13);
    v15 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 232) + 8);
    v15(v11, v3);
    static ViewBuilder.buildBlock<A>(_:)(v14, v3, v5);
    v15(v14, v3);
    __swift_storeEnumTagSinglePayload(v5, 0, 1, v3);
  }
  else
  {
    __swift_storeEnumTagSinglePayload(v5, 1, 1, v3);
    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type _BackgroundModifier<_ShapeView<Capsule._Inset, Material>?> and conformance _BackgroundModifier<A>, &demangling cache variable for type metadata for _BackgroundModifier<_ShapeView<Capsule._Inset, Material>?>, MEMORY[0x1E0CDB838]);
    *(_QWORD *)(v7 - 152) = v2;
    *(_QWORD *)(v7 - 144) = v16;
    MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v3, v7 - 152);
  }
  v17 = *(_QWORD *)(v7 - 216);
  static ViewBuilder.buildIf<A>(_:)(v5, v17);
  v18 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 208) + 8);
  v19 = *(_QWORD *)(v7 - 224);
  v18(v5, v19);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type _BackgroundModifier<_ShapeView<Capsule._Inset, Material>?> and conformance _BackgroundModifier<A>, &demangling cache variable for type metadata for _BackgroundModifier<_ShapeView<Capsule._Inset, Material>?>, MEMORY[0x1E0CDB838]);
  *(_QWORD *)(v7 - 168) = v2;
  *(_QWORD *)(v7 - 160) = v20;
  *(_QWORD *)(v7 - 176) = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v3, v7 - 168);
  MEMORY[0x1C3B750C8](MEMORY[0x1E0CE0798], v19, v7 - 176);
  static ViewBuilder.buildBlock<A>(_:)(v17, v19, *(_QWORD *)(v7 - 200));
  return ((uint64_t (*)(uint64_t, uint64_t))v18)(v17, v19);
}

void closure #1 in closure #2 in closure #1 in ScreenSharingContentView.body.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = type metadata accessor for Material();
  MEMORY[0x1E0C80A78](v0);
  v1 = type metadata accessor for RoundedCornerStyle();
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for Capsule();
  MEMORY[0x1E0C80A78](v2);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ShapeView<Capsule._Inset, Material>);
  v4 = MEMORY[0x1E0C80A78](v3);
  MEMORY[0x1E0C80A78](v4);
  type metadata accessor for ScreenSharingContentView();
}

uint64_t sub_1BD0D1A10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, _QWORD, uint64_t);
  uint64_t v12;
  uint64_t v13;

  v10 = 1;
  if ((static ContentMode.== infix(_:_:)() & 1) != 0)
  {
    v11 = *(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 104);
    v11(v7, *MEMORY[0x1E0CDB0C0], v3);
    v11(v6, *MEMORY[0x1E0CDB0E0], v3);
    LOBYTE(v11) = static RoundedCornerStyle.== infix(_:_:)();
    (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v6, v3);
    outlined destroy of Capsule(v7);
    static Material.thin.getter();
    v13 = *(_QWORD *)(v9 - 192);
    v12 = *(_QWORD *)(v9 - 184);
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)v4 + *(int *)(v2 + 52), v1, v12);
    *v4 = ((v11 & 1) == 0) | 0xC018000000000000;
    *(_WORD *)((char *)v4 + *(int *)(v2 + 56)) = 256;
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v1, v12);
    outlined init with take of Any?((uint64_t)v4, v5, &demangling cache variable for type metadata for _ShapeView<Capsule._Inset, Material>);
    outlined init with take of Any?(v5, v8, &demangling cache variable for type metadata for _ShapeView<Capsule._Inset, Material>);
    v10 = 0;
  }
  return __swift_storeEnumTagSinglePayload(v8, v10, 1, v2);
}

void closure #3 in closure #1 in ScreenSharingContentView.body.getter(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v18 = a7;
  v19 = a1;
  v24 = a8;
  v22 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](a1);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _BackgroundModifier<ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>?>);
  v13 = type metadata accessor for ModifiedContent();
  v23 = *(_QWORD *)(v13 - 8);
  v14 = MEMORY[0x1E0C80A78](v13);
  v20 = (char *)&v17 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v21 = (char *)&v17 - v16;
  v25 = a2;
  v26 = a3;
  v27 = a4;
  v28 = a5;
  v29 = a6;
  v30 = v18;
  type metadata accessor for ScreenSharingContentView();
}

uint64_t sub_1BD0D1C4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t);

  v10 = *(_QWORD *)(v9 - 272);
  (*(void (**)(void))(v10 + *(int *)(a1 + 84)))();
  *(_QWORD *)(v9 - 208) = v5;
  *(_QWORD *)(v9 - 200) = v4;
  *(_QWORD *)(v9 - 192) = v3;
  *(_QWORD *)(v9 - 184) = v8;
  *(_QWORD *)(v9 - 176) = v6;
  *(_QWORD *)(v9 - 168) = v2;
  *(_QWORD *)(v9 - 160) = v10;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>?);
  lazy protocol witness table accessor for type ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>? and conformance <A> A?();
  static Alignment.center.getter();
  v11 = *(_QWORD *)(v9 - 264);
  View.background<A>(alignment:content:)();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 248) + 8))(v7, v3);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type _BackgroundModifier<ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>?> and conformance _BackgroundModifier<A>, &demangling cache variable for type metadata for _BackgroundModifier<ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>?>, MEMORY[0x1E0CDB838]);
  *(_QWORD *)(v9 - 152) = v2;
  *(_QWORD *)(v9 - 144) = v12;
  v13 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v9 - 152);
  v14 = *(_QWORD *)(v9 - 256);
  static ViewBuilder.buildExpression<A>(_:)(v11, v1, v13);
  v15 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 240) + 8);
  v15(v11, v1);
  static ViewBuilder.buildBlock<A>(_:)(v14, v1, *(_QWORD *)(v9 - 232));
  return v15(v14, v1);
}

void closure #1 in closure #3 in closure #1 in ScreenSharingContentView.body.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v22 = type metadata accessor for Material();
  v19 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ShapeView<Rectangle._Inset, Material>);
  MEMORY[0x1E0C80A78](v18);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>);
  v14 = MEMORY[0x1E0C80A78](v13);
  v21 = (char *)&v17 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v20 = (char *)&v17 - v16;
  v23 = a2;
  v24 = a3;
  v25 = a4;
  v26 = a5;
  v27 = a6;
  v28 = a7;
  type metadata accessor for ScreenSharingContentView();
}

uint64_t sub_1BD0D1EB0()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;

  v5 = 1;
  if ((static ContentMode.== infix(_:_:)() & 1) != 0)
  {
    ScreenSharingContentView.toolbarPlacement.getter();
    v6 = Axis.rawValue.getter();
    if (v6 == Axis.rawValue.getter())
    {
      static Material.thin.getter();
      v8 = *(_QWORD *)(v4 - 184);
      v7 = *(_QWORD *)(v4 - 176);
      v9 = *(_QWORD *)(v4 - 152);
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(&v1[*(int *)(v8 + 52)], v3, v9);
      *(_QWORD *)v1 = 0xC059000000000000;
      *(_WORD *)&v1[*(int *)(v8 + 56)] = 256;
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v3, v9);
      ScreenSharingContentView.toolbarPlacement.getter();
      LODWORD(v9) = Edge.rawValue.getter();
      v10 = qword_1BD649420[(_DWORD)v9 == Edge.rawValue.getter()];
      v11 = *(_QWORD *)(v4 - 160);
      outlined init with copy of FeatureEligibility?((uint64_t)v1, v11, &demangling cache variable for type metadata for _ShapeView<Rectangle._Inset, Material>);
      v12 = (_QWORD *)(v11 + *(int *)(v2 + 36));
      *v12 = 0;
      v12[1] = v10;
      outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v1, &demangling cache variable for type metadata for _ShapeView<Rectangle._Inset, Material>);
      v13 = v11;
      v14 = *(_QWORD *)(v4 - 168);
      outlined init with take of Any?(v13, v14, &demangling cache variable for type metadata for ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>);
      outlined init with take of Any?(v14, v0, &demangling cache variable for type metadata for ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>);
      v5 = 0;
    }
    else
    {
      v5 = 1;
    }
  }
  return __swift_storeEnumTagSinglePayload(v0, v5, 1, v2);
}

void key path getter for EnvironmentValues.interfaceOrientation : EnvironmentValues()
{
  uint64_t *v0;

  *v0 = OUTLINED_FUNCTION_50_14();
  OUTLINED_FUNCTION_0();
}

void sub_1BD0D2030()
{
  uint64_t *v0;

  *v0 = OUTLINED_FUNCTION_50_14();
  OUTLINED_FUNCTION_0();
}

void key path setter for EnvironmentValues.interfaceOrientation : EnvironmentValues()
{
  OUTLINED_FUNCTION_48_13();
  OUTLINED_FUNCTION_0();
}

void sub_1BD0D2064()
{
  OUTLINED_FUNCTION_48_13();
  OUTLINED_FUNCTION_0();
}

void type metadata accessor for ScreenSharingContentView()
{
  JUMPOUT(0x1C3B74FFCLL);
}

void key path getter for EnvironmentValues.horizontalSizeClass : EnvironmentValues()
{
  EnvironmentValues.horizontalSizeClass.getter();
  OUTLINED_FUNCTION_0();
}

void sub_1BD0D20A4()
{
  EnvironmentValues.horizontalSizeClass.getter();
  OUTLINED_FUNCTION_0();
}

void key path setter for EnvironmentValues.horizontalSizeClass : EnvironmentValues()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_16_2();
  OUTLINED_FUNCTION_55_4();
  outlined init with copy of FeatureEligibility?(v1, v2, v3);
  EnvironmentValues.horizontalSizeClass.setter();
  OUTLINED_FUNCTION_18();
}

void sub_1BD0D2120()
{
  OUTLINED_FUNCTION_46_11();
}

uint64_t sub_1BD0D2150(uint64_t a1)
{
  uint64_t v1;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (*(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  outlined consume of Environment<CGFloat>.Content(*(_QWORD *)(v1 + v3), *(_BYTE *)(v1 + v3 + 8));
  v4 = v1 + v3 + *(int *)(a1 + 68);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = type metadata accessor for UserInterfaceSizeClass();
    if (!__swift_getEnumTagSinglePayload(v4, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  OUTLINED_FUNCTION_31_7();
  OUTLINED_FUNCTION_31_7();
  OUTLINED_FUNCTION_31_7();
  OUTLINED_FUNCTION_55_4();
  return swift_deallocObject();
}

void partial apply for closure #1 in ScreenSharingContentView.body.getter()
{
  OUTLINED_FUNCTION_46_11();
}

void sub_1BD0D226C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v10 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  closure #1 in ScreenSharingContentView.body.getter(v1, v2 + ((v10 + 64) & ~v10), v4, v5, v6, v7, v8, v9, v3);
}

uint64_t associated type witness table accessor for View.Body : View in ScreenSharingContentView<A, B, C>()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata instantiation function for ScreenSharingContentView()
{
  return swift_allocateGenericValueMetadata();
}

void type metadata completion function for ScreenSharingContentView()
{
  unint64_t v0;

  type metadata accessor for Environment<UserInterfaceSizeClass?>.Content();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t *initializeBufferWithCopyOfBuffer for ScreenSharingContentView(uint64_t *a1, uint64_t a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *(_QWORD *)a2;
    *a1 = *(_QWORD *)a2;
    v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = *(_QWORD *)a2;
    v8 = *(_BYTE *)(a2 + 8);
    outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(*(_QWORD *)a2, v8);
    *v4 = v7;
    *((_BYTE *)v4 + 8) = v8;
    v9 = a3[17];
    v10 = (uint64_t *)((char *)v4 + v9);
    v11 = (_QWORD *)(a2 + v9);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = type metadata accessor for UserInterfaceSizeClass();
      if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12))
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
        __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
      }
    }
    else
    {
      *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v15 = a3[19];
    *((_BYTE *)v4 + a3[18]) = *(_BYTE *)(a2 + a3[18]);
    v16 = (uint64_t *)((char *)v4 + v15);
    v17 = (_QWORD *)(a2 + v15);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    v19 = a3[20];
    v20 = a3[21];
    v21 = (uint64_t *)((char *)v4 + v19);
    v22 = (_QWORD *)(a2 + v19);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    v24 = (uint64_t *)((char *)v4 + v20);
    v25 = (_QWORD *)(a2 + v20);
    v26 = v25[1];
    *v24 = *v25;
    v24[1] = v26;
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t destroy for ScreenSharingContentView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  outlined consume of Environment<CGFloat>.Content(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  v4 = a1 + *(int *)(a2 + 68);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = type metadata accessor for UserInterfaceSizeClass();
    if (!__swift_getEnumTagSinglePayload(v4, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for ScreenSharingContentView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(*(_QWORD *)a2, v7);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  v8 = a3[17];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = type metadata accessor for UserInterfaceSizeClass();
    if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
    }
  }
  else
  {
    *v9 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v13 = a3[19];
  *(_BYTE *)(a1 + a3[18]) = *(_BYTE *)(a2 + a3[18]);
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  v17 = a3[20];
  v18 = a3[21];
  v19 = (_QWORD *)(a1 + v17);
  v20 = (_QWORD *)(a2 + v17);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  v22 = (_QWORD *)(a1 + v18);
  v23 = (_QWORD *)(a2 + v18);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ScreenSharingContentView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(*(_QWORD *)a2, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  outlined consume of Environment<CGFloat>.Content(v8, v9);
  if (a1 != a2)
  {
    v10 = a3[17];
    v11 = (_QWORD *)(a1 + v10);
    v12 = (_QWORD *)(a2 + v10);
    outlined destroy of OS_dispatch_queue.SchedulerOptions?(a1 + v10, &demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v13 = type metadata accessor for UserInterfaceSizeClass();
      if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
      {
        v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
        __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
      }
    }
    else
    {
      *v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *(_BYTE *)(a1 + a3[18]) = *(_BYTE *)(a2 + a3[18]);
  v15 = a3[19];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (_QWORD *)(a2 + v15);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  swift_retain();
  swift_release();
  v19 = a3[20];
  v20 = (_QWORD *)(a1 + v19);
  v21 = (_QWORD *)(a2 + v19);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  swift_retain();
  swift_release();
  v23 = a3[21];
  v24 = (_QWORD *)(a1 + v23);
  v25 = (_QWORD *)(a2 + v23);
  v26 = v25[1];
  *v24 = *v25;
  v24[1] = v26;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for ScreenSharingContentView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = a3[17];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = type metadata accessor for UserInterfaceSizeClass();
    if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v10))
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
      __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v10);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v12 = a3[19];
  *(_BYTE *)(a1 + a3[18]) = *(_BYTE *)(a2 + a3[18]);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  v13 = a3[21];
  *(_OWORD *)(a1 + a3[20]) = *(_OWORD *)(a2 + a3[20]);
  *(_OWORD *)(a1 + v13) = *(_OWORD *)(a2 + v13);
  return a1;
}

uint64_t assignWithTake for ScreenSharingContentView(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  void *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = *a2;
  v7 = *((_BYTE *)a2 + 8);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  outlined consume of Environment<CGFloat>.Content(v8, v9);
  if ((uint64_t *)a1 != a2)
  {
    v10 = a3[17];
    v11 = (void *)(a1 + v10);
    v12 = (char *)a2 + v10;
    outlined destroy of OS_dispatch_queue.SchedulerOptions?(a1 + v10, &demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
    v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v14 = type metadata accessor for UserInterfaceSizeClass();
      if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v14))
      {
        v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v11, v12, v14);
        __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v14);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
  }
  v16 = a3[19];
  *(_BYTE *)(a1 + a3[18]) = *((_BYTE *)a2 + a3[18]);
  *(_OWORD *)(a1 + v16) = *(_OWORD *)((char *)a2 + v16);
  swift_release();
  *(_OWORD *)(a1 + a3[20]) = *(_OWORD *)((char *)a2 + a3[20]);
  swift_release();
  *(_OWORD *)(a1 + a3[21]) = *(_OWORD *)((char *)a2 + a3[21]);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ScreenSharingContentView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BD0D2C18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1 + *(int *)(a3 + 68), a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 76));
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ScreenSharingContentView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BD0D2CA4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>);
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1 + *(int *)(a4 + 68), a2, a2, v8);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 76)) = (a2 - 1);
    OUTLINED_FUNCTION_18();
  }
}

void type metadata accessor for Environment<UserInterfaceSizeClass?>.Content()
{
  unint64_t v0;
  uint64_t v1;

  if (!lazy cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
    v0 = type metadata accessor for Environment.Content();
    if (!v1)
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
  }
}

uint64_t sub_1BD0D2D70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[2];
  _QWORD v13[2];

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _LayoutRoot<ScreenSharingContentLayout>);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _TraitWritingModifier<_LayoutTrait<LayoutRoleKey>>);
  type metadata accessor for ModifiedContent();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _BackgroundModifier<_ShapeView<Capsule._Inset, Material>?>);
  type metadata accessor for ModifiedContent();
  OUTLINED_FUNCTION_42_15();
  OUTLINED_FUNCTION_32_6();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _BackgroundModifier<ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>?>);
  OUTLINED_FUNCTION_37_16();
  OUTLINED_FUNCTION_32_6();
  OUTLINED_FUNCTION_45_16();
  OUTLINED_FUNCTION_43_15();
  OUTLINED_FUNCTION_44_12();
  v0 = OUTLINED_FUNCTION_41_0();
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type _LayoutRoot<ScreenSharingContentLayout> and conformance _LayoutRoot<A>, &demangling cache variable for type metadata for _LayoutRoot<ScreenSharingContentLayout>, MEMORY[0x1E0CD8A18]);
  OUTLINED_FUNCTION_45_16();
  v1 = type metadata accessor for _VariadicView.Tree();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Font?>);
  v2 = OUTLINED_FUNCTION_37_16();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Edge>);
  OUTLINED_FUNCTION_36_20();
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type _LayoutRoot<ScreenSharingContentLayout> and conformance _LayoutRoot<A>, &demangling cache variable for type metadata for _LayoutRoot<ScreenSharingContentLayout>, MEMORY[0x1E0CD8A20]);
  v13[0] = v3;
  v13[1] = MEMORY[0x1C3B750C8](MEMORY[0x1E0CE0680], v0);
  v4 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD91E0], v1, v13);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Font?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Font?>, MEMORY[0x1E0CDCF80]);
  v12[0] = v4;
  v12[1] = v5;
  MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v2, v12);
  OUTLINED_FUNCTION_43_15();
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](v6, v7, v8);
  v9 = OUTLINED_FUNCTION_50();
  MEMORY[0x1C3B750C8](v9);
  v10 = type metadata accessor for GeometryReader();
  return MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9318], v10);
}

uint64_t outlined consume of Environment<CGFloat>.Content(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) == 0)
    return swift_release();
  return result;
}

uint64_t partial apply for closure #1 in closure #1 in ScreenSharingContentView.body.getter()
{
  return partial apply for closure #1 in closure #1 in ScreenSharingContentView.body.getter((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))closure #1 in closure #1 in ScreenSharingContentView.body.getter);
}

uint64_t partial apply for closure #2 in closure #1 in ScreenSharingContentView.body.getter()
{
  return partial apply for closure #1 in closure #1 in ScreenSharingContentView.body.getter((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))closure #2 in closure #1 in ScreenSharingContentView.body.getter);
}

uint64_t partial apply for closure #3 in closure #1 in ScreenSharingContentView.body.getter()
{
  return partial apply for closure #1 in closure #1 in ScreenSharingContentView.body.getter((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))closure #3 in closure #1 in ScreenSharingContentView.body.getter);
}

unint64_t lazy protocol witness table accessor for type UserInterfaceSizeClass and conformance UserInterfaceSizeClass()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type UserInterfaceSizeClass and conformance UserInterfaceSizeClass;
  if (!lazy protocol witness table cache variable for type UserInterfaceSizeClass and conformance UserInterfaceSizeClass)
  {
    v1 = type metadata accessor for UserInterfaceSizeClass();
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDC190], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type UserInterfaceSizeClass and conformance UserInterfaceSizeClass);
  }
  return result;
}

uint64_t partial apply for closure #1 in closure #3 in closure #1 in ScreenSharingContentView.body.getter()
{
  return partial apply for closure #1 in closure #1 in ScreenSharingContentView.body.getter((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))closure #1 in closure #3 in closure #1 in ScreenSharingContentView.body.getter);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>? and conformance <A> A?()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = lazy protocol witness table cache variable for type ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>? and conformance <A> A?;
  if (!lazy protocol witness table cache variable for type ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>? and conformance <A> A?)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>?);
    v2 = lazy protocol witness table accessor for type ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect> and conformance <> ModifiedContent<A, B>();
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CE0798], v1, &v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>? and conformance <A> A?);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect>);
    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type _ShapeView<Rectangle._Inset, Material> and conformance _ShapeView<A, B>, &demangling cache variable for type metadata for _ShapeView<Rectangle._Inset, Material>, MEMORY[0x1E0CD8668]);
    v3[0] = v2;
    v3[1] = MEMORY[0x1E0CD90E0];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v3);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<_ShapeView<Rectangle._Inset, Material>, _OffsetEffect> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t partial apply for closure #1 in closure #2 in closure #1 in ScreenSharingContentView.body.getter()
{
  return partial apply for closure #1 in closure #1 in ScreenSharingContentView.body.getter((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))closure #1 in closure #2 in closure #1 in ScreenSharingContentView.body.getter);
}

uint64_t partial apply for closure #1 in closure #1 in ScreenSharingContentView.body.getter(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[8], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7]);
}

unint64_t lazy protocol witness table accessor for type _ShapeView<Capsule._Inset, Material>? and conformance <A> A?()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = lazy protocol witness table cache variable for type _ShapeView<Capsule._Inset, Material>? and conformance <A> A?;
  if (!lazy protocol witness table cache variable for type _ShapeView<Capsule._Inset, Material>? and conformance <A> A?)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ShapeView<Capsule._Inset, Material>?);
    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type _ShapeView<Capsule._Inset, Material> and conformance _ShapeView<A, B>, &demangling cache variable for type metadata for _ShapeView<Capsule._Inset, Material>, MEMORY[0x1E0CD8668]);
    v3 = v2;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CE0798], v1, &v3);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _ShapeView<Capsule._Inset, Material>? and conformance <A> A?);
  }
  return result;
}

uint64_t outlined destroy of Capsule(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Capsule();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BD0D3198()
{
  return swift_deallocObject();
}

uint64_t partial apply for implicit closure #2 in implicit closure #1 in closure #1 in ScreenSharingContentView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t *v7;

  return implicit closure #2 in implicit closure #1 in closure #1 in ScreenSharingContentView.body.getter(a1, a2, a3, a4, a5, a6, v7[2], a7, v7[3], v7[4], v7[5], v7[6], v7[7]);
}

BOOL UIInterfaceOrientationIsLandscape(uint64_t a1)
{
  return (unint64_t)(a1 - 3) < 2;
}

uint64_t outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) == 0)
    return swift_retain();
  return result;
}

BOOL OUTLINED_FUNCTION_39_18(NSObject *a1)
{
  os_log_type_t v1;

  return os_log_type_enabled(a1, v1);
}

void LocalParticipantViewConstraintManager.updateConstraints()()
{
  __asm { BR              X11 }
}

uint64_t sub_1BD0D3258()
{
  uint64_t v0;
  char v1;
  double v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  uint64_t v11;

  v2 = *(double *)(v0 + 264);
  v3 = *(void **)(v0 + 16);
  objc_msgSend(v3, sel_setConstant_, *(double *)(v0 + 256));
  v4 = *(void **)(v0 + 24);
  objc_msgSend(v4, sel_setConstant_, v2);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BD644B60;
  *(_QWORD *)(v5 + 32) = v3;
  *(_QWORD *)(v5 + 40) = v4;
  v6 = *(void **)(v0 + 120);
  *(_QWORD *)(v5 + 48) = v6;
  v11 = v5;
  specialized Array._endMutation()();
  swift_beginAccess();
  *(_QWORD *)(v0 + 152) = v11;
  v7 = v3;
  v8 = v4;
  v9 = v6;
  swift_bridgeObjectRelease();
  LocalParticipantViewConstraintManager.constraintsForCorner(_:bannerState:sidePaddings:)(v1);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  specialized Array.append<A>(contentsOf:)();
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

void LocalParticipantViewConstraintManager.type.setter(uint64_t a1)
{
  uint64_t v1;
  char v2;
  __int128 v3;

  v2 = *(_BYTE *)(a1 + 40);
  *(_QWORD *)(v1 + 280) = *(_QWORD *)(a1 + 32);
  *(_BYTE *)(v1 + 288) = v2;
  v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 248) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 264) = v3;
  LocalParticipantViewConstraintManager.updateConstraints()();
}

id LocalParticipantViewConstraintManager.regularWidth.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = 16;
  if (*(_BYTE *)(v0 + 192))
    v1 = 80;
  return objc_msgSend(*(id *)(v0 + v1), sel_constant);
}

uint64_t LocalParticipantViewConstraintManager.mostRecentLocalParticipantCorner.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_2_0();
  return *(unsigned __int8 *)(v0 + 289);
}

uint64_t LocalParticipantViewConstraintManager.mostRecentLocalParticipantCorner.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = OUTLINED_FUNCTION_2_0();
  *(_BYTE *)(v1 + 289) = a1;
  return result;
}

uint64_t (*LocalParticipantViewConstraintManager.mostRecentLocalParticipantCorner.modify())()
{
  OUTLINED_FUNCTION_2_0();
  return CallRecordingPillViewController.cancellable.modify;
}

uint64_t LocalParticipantViewConstraintManager.__allocating_init(containingGuide:rosterCellLayoutGuide:containingView:localPIPView:controlsView:effectsControlsView:localState:bannerState:controlsState:gridView:aspectRatio:deviceOrientation:)(void *a1, void *a2, void *a3, char *a4, void *a5, void *a6, unsigned __int8 a7, unsigned __int8 *a8, unint64_t a9, void *a10, uint64_t a11, unint64_t a12)
{
  uint64_t v19;

  v19 = swift_allocObject();
  LocalParticipantViewConstraintManager.init(containingGuide:rosterCellLayoutGuide:containingView:localPIPView:controlsView:effectsControlsView:localState:bannerState:controlsState:gridView:aspectRatio:deviceOrientation:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
  return v19;
}

uint64_t LocalParticipantViewConstraintManager.init(containingGuide:rosterCellLayoutGuide:containingView:localPIPView:controlsView:effectsControlsView:localState:bannerState:controlsState:gridView:aspectRatio:deviceOrientation:)(void *a1, void *a2, void *a3, char *a4, void *a5, void *a6, unsigned __int8 a7, unsigned __int8 *a8, unint64_t a9, void *a10, uint64_t a11, unint64_t a12)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  id v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  id v37;
  id v38;
  id v39;
  uint64_t v40;
  id v41;
  id v42;
  uint64_t v43;
  id v44;
  id v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  id v57;
  id v58;
  id v59;
  uint64_t v60;
  id v61;
  id v62;
  id v63;
  uint64_t v64;
  id v65;
  id v66;
  id v67;
  uint64_t v68;
  id v69;
  id v70;
  id v71;
  uint64_t v72;
  id v73;
  id v74;
  uint64_t v75;
  id v76;
  id v77;
  id v78;
  uint64_t v79;
  id v80;
  id v81;
  id v82;
  uint64_t v83;
  id v84;
  id v85;
  id v86;
  uint64_t v87;
  id v88;
  id v89;
  id v90;
  uint64_t v91;
  id v92;
  id v93;
  id v94;
  double Height;
  char v96;
  void *v99;
  _BYTE v103[32];
  char v104;
  CGRect v105;
  CGRect v106;

  v13 = v12;
  v17 = *a8;
  v18 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v13 + 128) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v13 + 136) = 0;
  *(_QWORD *)(v13 + 152) = v18;
  OUTLINED_FUNCTION_54();
  OUTLINED_FUNCTION_54();
  OUTLINED_FUNCTION_54();
  OUTLINED_FUNCTION_54();
  v19 = v13 + 240;
  v20 = OUTLINED_FUNCTION_54();
  *(_BYTE *)(v13 + 289) = 4;
  *(_QWORD *)(v13 + 296) = 0;
  *(_QWORD *)(v13 + 304) = 0;
  *(_BYTE *)(v13 + 312) = 1;
  v99 = a5;
  if (a7 >> 6)
  {
    if (a7 >> 6 != 1)
    {
      v22 = a9;
      v21 = 0;
      if (a7 == 128)
      {
        v22 = a12;
        v23 = 0x80;
      }
      else
      {
        v23 = -64;
      }
      goto LABEL_12;
    }
    a7 &= 0x3Fu;
    v20 = OUTLINED_FUNCTION_14_39(v20, (uint64_t)v103);
    if ((v104 & 1) != 0)
    {
LABEL_4:
      v21 = 0;
      v22 = a7 | (unint64_t)(v17 << 8);
      v23 = 64;
      goto LABEL_12;
    }
  }
  else
  {
    v20 = OUTLINED_FUNCTION_14_39(v20, (uint64_t)v103);
    if (v104 == 1)
      goto LABEL_4;
  }
  static Layout.MediaPip.padding.getter();
  if (one-time initialization token for shared != -1)
    swift_once();
  OUTLINED_FUNCTION_11_6();
  static Platform.current.getter();
  v20 = OUTLINED_FUNCTION_12_4();
  v22 = a7 | (unint64_t)(v17 << 8);
  v23 = 1;
  v21 = 0x4056000000000000;
LABEL_12:
  *(_QWORD *)(v13 + 248) = v22;
  *(_QWORD *)(v13 + 256) = v21;
  *(_QWORD *)(v13 + 272) = 0;
  *(_QWORD *)(v13 + 280) = 0;
  *(_QWORD *)(v13 + 264) = v21;
  *(_BYTE *)(v13 + 288) = v23;
  OUTLINED_FUNCTION_14_39(v20, v13 + 160);
  swift_unknownObjectWeakAssign();
  swift_unknownObjectWeakAssign();
  swift_unknownObjectWeakAssign();
  swift_unknownObjectWeakAssign();
  swift_unknownObjectWeakAssign();
  v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC39A0]), sel_init);
  *(_QWORD *)(v13 + 200) = v24;
  v25 = OUTLINED_FUNCTION_2_11((uint64_t)objc_msgSend(a3, sel_addLayoutGuide_, v24), sel_rightAnchor);
  v26 = OUTLINED_FUNCTION_5_39((uint64_t)v25, sel_rightAnchor);
  v27 = objc_msgSend(v25, sel_constraintEqualToAnchor_, v26);
  OUTLINED_FUNCTION_4_39();

  *(_QWORD *)(v13 + 32) = v19;
  v29 = OUTLINED_FUNCTION_2_11(v28, sel_bottomAnchor);
  v30 = OUTLINED_FUNCTION_5_39((uint64_t)v29, sel_bottomAnchor);
  v31 = OUTLINED_FUNCTION_0_51((uint64_t)v30);
  OUTLINED_FUNCTION_4_39();

  *(_QWORD *)(v13 + 40) = v19;
  v33 = OUTLINED_FUNCTION_2_11(v32, sel_leftAnchor);
  v34 = OUTLINED_FUNCTION_5_39((uint64_t)v33, sel_leftAnchor);
  v35 = OUTLINED_FUNCTION_0_51((uint64_t)v34);
  OUTLINED_FUNCTION_4_39();

  *(_QWORD *)(v13 + 48) = v19;
  v37 = OUTLINED_FUNCTION_2_11(v36, sel_topAnchor);
  v38 = OUTLINED_FUNCTION_5_39((uint64_t)v37, sel_topAnchor);
  v39 = OUTLINED_FUNCTION_0_51((uint64_t)v38);
  OUTLINED_FUNCTION_4_39();

  *(_QWORD *)(v13 + 56) = v19;
  v41 = OUTLINED_FUNCTION_2_11(v40, sel_trailingAnchor);
  v42 = OUTLINED_FUNCTION_0_51((uint64_t)objc_msgSend(*(id *)(v13 + 200), sel_trailingAnchor));
  OUTLINED_FUNCTION_4_39();

  *(_QWORD *)(v13 + 64) = v19;
  v44 = OUTLINED_FUNCTION_2_11(v43, sel_centerYAnchor);
  v45 = OUTLINED_FUNCTION_0_51((uint64_t)objc_msgSend(*(id *)(v13 + 200), sel_centerYAnchor));
  OUTLINED_FUNCTION_4_39();

  *(_QWORD *)(v13 + 72) = v19;
  v47 = OUTLINED_FUNCTION_2_11(v46, sel_widthAnchor);
  static Layout.MediaPip.padding.getter();
  if (one-time initialization token for shared != -1)
    swift_once();
  v48 = static Defaults.shared;
  OUTLINED_FUNCTION_11_6();
  static Platform.current.getter();
  v49 = OUTLINED_FUNCTION_12_4();
  v50 = OUTLINED_FUNCTION_17_29(v49, sel_constraintEqualToConstant_);
  OUTLINED_FUNCTION_15_2();
  *(_QWORD *)(v13 + 16) = v48;
  v52 = OUTLINED_FUNCTION_2_11(v51, sel_heightAnchor);
  static Layout.MediaPip.padding.getter();
  v53 = static Defaults.shared;
  OUTLINED_FUNCTION_11_6();
  static Platform.current.getter();
  v54 = OUTLINED_FUNCTION_12_4();
  v55 = OUTLINED_FUNCTION_17_29(v54, sel_constraintEqualToConstant_);
  OUTLINED_FUNCTION_15_2();
  *(_QWORD *)(v13 + 24) = v53;
  v57 = OUTLINED_FUNCTION_2_11(v56, sel_widthAnchor);
  v58 = OUTLINED_FUNCTION_2_11((uint64_t)v57, sel_heightAnchor);
  v59 = OUTLINED_FUNCTION_0_51((uint64_t)v58);
  OUTLINED_FUNCTION_4_39();

  *(_QWORD *)(v13 + 80) = &selRef_associatedAppBundleIdentifier;
  v61 = OUTLINED_FUNCTION_2_11(v60, sel_heightAnchor);
  v62 = OUTLINED_FUNCTION_5_39((uint64_t)v61, sel_heightAnchor);
  v63 = OUTLINED_FUNCTION_0_51((uint64_t)v62);
  OUTLINED_FUNCTION_4_39();

  *(_QWORD *)(v13 + 88) = &selRef_associatedAppBundleIdentifier;
  v65 = OUTLINED_FUNCTION_2_11(v64, sel_trailingAnchor);
  v66 = OUTLINED_FUNCTION_5_39((uint64_t)v65, sel_trailingAnchor);
  v67 = OUTLINED_FUNCTION_0_51((uint64_t)v66);
  OUTLINED_FUNCTION_4_39();

  *(_QWORD *)(v13 + 96) = &selRef_associatedAppBundleIdentifier;
  v69 = OUTLINED_FUNCTION_2_11(v68, sel_bottomAnchor);
  v70 = OUTLINED_FUNCTION_5_39((uint64_t)v69, sel_bottomAnchor);
  v71 = OUTLINED_FUNCTION_0_51((uint64_t)v70);
  OUTLINED_FUNCTION_4_39();

  *(_QWORD *)(v13 + 104) = &selRef_associatedAppBundleIdentifier;
  v73 = OUTLINED_FUNCTION_2_11(v72, sel_bottomAnchor);
  v74 = OUTLINED_FUNCTION_5_39((uint64_t)v73, sel_topAnchor);
  static Layout.MediaPip.padding.getter();
  v75 = static Defaults.shared;
  OUTLINED_FUNCTION_11_6();
  static Platform.current.getter();
  OUTLINED_FUNCTION_12_4();
  v76 = objc_msgSend(v73, sel_constraintEqualToAnchor_constant_, v74, -16.0);
  OUTLINED_FUNCTION_15_2();

  *(_QWORD *)(v13 + 112) = v75;
  v77 = OUTLINED_FUNCTION_2_11((uint64_t)objc_msgSend(*(id *)&a4[OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_controlsView], sel_bottomAnchor), sel_bottomAnchor);
  v78 = OUTLINED_FUNCTION_0_51((uint64_t)v77);
  OUTLINED_FUNCTION_4_39();

  *(_QWORD *)(v13 + 120) = v74;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v79 = swift_allocObject();
  *(_OWORD *)(v79 + 16) = xmmword_1BD644140;
  v80 = OUTLINED_FUNCTION_2_11(v79, sel_widthAnchor);
  v81 = OUTLINED_FUNCTION_6_7((uint64_t)v80, sel_widthAnchor);
  v82 = OUTLINED_FUNCTION_2_52((uint64_t)v81);
  OUTLINED_FUNCTION_9_32();

  *(_QWORD *)(v79 + 32) = &selRef_associatedAppBundleIdentifier;
  v84 = OUTLINED_FUNCTION_2_11(v83, sel_heightAnchor);
  v85 = OUTLINED_FUNCTION_6_7((uint64_t)v84, sel_heightAnchor);
  v86 = OUTLINED_FUNCTION_2_52((uint64_t)v85);
  OUTLINED_FUNCTION_9_32();

  *(_QWORD *)(v79 + 40) = &selRef_associatedAppBundleIdentifier;
  v88 = OUTLINED_FUNCTION_2_11(v87, sel_centerXAnchor);
  v89 = OUTLINED_FUNCTION_6_7((uint64_t)v88, sel_centerXAnchor);
  v90 = OUTLINED_FUNCTION_2_52((uint64_t)v89);
  OUTLINED_FUNCTION_9_32();

  *(_QWORD *)(v79 + 48) = &selRef_associatedAppBundleIdentifier;
  v92 = OUTLINED_FUNCTION_2_11(v91, sel_centerYAnchor);
  v93 = OUTLINED_FUNCTION_6_7((uint64_t)v92, sel_centerYAnchor);
  v94 = OUTLINED_FUNCTION_2_52((uint64_t)v93);
  OUTLINED_FUNCTION_9_32();

  *(_QWORD *)(v79 + 56) = &selRef_associatedAppBundleIdentifier;
  specialized Array._endMutation()();
  *(_QWORD *)(v13 + 144) = v79;
  OUTLINED_FUNCTION_18_34();
  Height = CGRectGetHeight(v105);
  OUTLINED_FUNCTION_18_34();
  v96 = CGRectGetWidth(v106) < Height;
  *(_QWORD *)(v13 + 128) = LocalParticipantViewConstraintManager.centeringConstraints(portrait:aspectRatio:)(v96, a11);
  swift_bridgeObjectRelease();
  LocalParticipantViewConstraintManager.updateConstraints()();

  return v13;
}

uint64_t outlined init with take of AspectRatio(uint64_t a1, uint64_t a2)
{
  __swift_memcpy33_8(a2, a1);
  return a2;
}

unint64_t LocalParticipantViewConstraintManager.centeringConstraints(portrait:aspectRatio:)(char a1, uint64_t a2)
{
  unint64_t v4;

  v4 = LocalParticipantViewConstraintManager.getCenteringConstraints(portrait:)(a1);
  LocalParticipantViewConstraintManager.getHeightAndWidthConstraints(_:_:)(a1, a2);
  specialized Array.append<A>(contentsOf:)();
  return v4;
}

void LocalParticipantViewConstraintManager.sizeFor(state:deviceOrientation:)(uint64_t a1)
{
  int v1;
  uint64_t v2;
  void (*v3)(void);
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  double v7;
  uint64_t v8;
  id v9;
  id v10;
  double v11;
  uint64_t v12;
  void (*v13)(double);
  uint64_t v14;
  double (*v15)(uint64_t);
  double v16;
  uint64_t v17;
  double v18;
  uint64_t v19;

  v1 = *(unsigned __int8 *)(a1 + 19);
  static Layout.MediaPip.padding.getter();
  if (one-time initialization token for shared != -1)
    swift_once();
  v2 = static Defaults.shared;
  v3 = *(void (**)(void))(*(_QWORD *)static Defaults.shared + 384);
  v3();
  v4 = static Platform.current.getter();
  v5 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 488);
  v6 = v5(v4);
  (*(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 880))(v6);
  if (static Platform.current.getter() == 3)
  {
    v7 = static Layout.MediaPip.padding.getter();
    ((void (*)(double))v3)(v7);
    v8 = static Platform.current.getter();
    v5(v8);
  }
  else if (v1 == 2)
  {
    v9 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
    v10 = objc_msgSend(v9, sel_userInterfaceIdiom);

    if (v10 == (id)1)
    {
      v11 = static Layout.MediaPip.padding.getter();
      v12 = static Defaults.shared;
      v13 = *(void (**)(double))(*(_QWORD *)static Defaults.shared + 384);
      v13(v11);
      v14 = static Platform.current.getter();
      v15 = *(double (**)(uint64_t))(*(_QWORD *)v12 + 488);
      v15(v14);
      v16 = static Layout.MediaPip.padding.getter();
      v13(v16);
      v17 = static Platform.current.getter();
      v15(v17);
      v18 = static Layout.MediaPip.padding.getter();
      v13(v18);
      v19 = static Platform.current.getter();
      v15(v19);
    }
  }
}

uint64_t LocalParticipantViewConstraintManager.constraintsForLayout(_:in:deviceOrientation:)(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;
  unsigned int v11;
  char v12;
  BOOL v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;

  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(unsigned __int8 *)(a1 + 16);
  v5 = *(unsigned __int8 *)(a1 + 17);
  v6 = *(_BYTE *)(a1 + 18);
  v7 = *(_BYTE *)(a1 + 19);
  v8 = *(_BYTE *)(a1 + 20);
  v9 = *(_BYTE *)(a1 + 21);
  v10 = *(_BYTE *)(a1 + 22);
  v11 = v5;
  if (v5 >> 6)
  {
    if (v5 >> 6 != 1)
    {
      if (v5 == 128)
      {
        v19 = a2;
        OUTLINED_FUNCTION_13_38();
        v15 = 0x80;
      }
      else
      {
        v19 = *(_QWORD *)(a1 + 8);
        OUTLINED_FUNCTION_13_38();
        v15 = -64;
      }
      goto LABEL_20;
    }
    v11 = v5 & 0x3F;
  }
  v12 = *(_BYTE *)(a1 + 20);
  if ((*(_BYTE *)(v2 + 192) & 1) == 0)
  {
    if (*(double *)(v2 + 160) != 1.0 || *(double *)(v2 + 168) != 1.0)
      goto LABEL_16;
    v14 = *(double *)(v2 + 176) != 1.0;
    if (*(double *)(v2 + 184) != 1.0)
      v14 = 1;
    v12 = v14 | v8;
  }
  if ((v12 & 1) != 0 || (*(_BYTE *)(a1 + 22) & 1) != 0)
  {
LABEL_16:
    LOBYTE(v19) = *(_BYTE *)a1;
    v20 = v3;
    LOBYTE(v21) = v4;
    BYTE1(v21) = v5;
    BYTE2(v21) = v6;
    BYTE3(v21) = v7;
    BYTE4(v21) = v8;
    BYTE5(v21) = v9;
    BYTE6(v21) = v10;
    LocalParticipantViewConstraintManager.sizeFor(state:deviceOrientation:)((uint64_t)&v19);
    v19 = v11 | (unint64_t)(v4 << 8);
    v20 = v16;
    v21 = v17;
    v22 = 0;
    v23 = 0;
    v15 = 1;
    goto LABEL_20;
  }
  v19 = v11 | (unint64_t)(v4 << 8);
  OUTLINED_FUNCTION_13_38();
  v15 = 64;
LABEL_20:
  v24 = v15;
  LocalParticipantViewConstraintManager.type.setter((uint64_t)&v19);
  OUTLINED_FUNCTION_2_0();
  return swift_bridgeObjectRetain();
}

void LocalParticipantViewConstraintManager.update(aspectRatio:deviceOrientation:layoutState:)(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v3;
  char v5;
  uint64_t v6;
  char v7;
  char v8;
  char v9;
  int v10;
  uint64_t v11;
  double v12;
  unsigned int v13;
  uint64_t v14;
  BOOL v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  char v24;
  double v25;
  double v26;
  uint64_t v27;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  char v37;
  double v38;
  double v39;
  uint64_t v40;
  uint64_t v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  __int128 v50;
  __int128 v51;
  double v52;
  double v53;
  double v54;
  double v55;
  char v56;
  double v57;
  double v58;
  char v59;

  v48 = *(double *)&a2;
  v5 = *a3;
  v6 = *((_QWORD *)a3 + 1);
  v7 = a3[16];
  LODWORD(v46) = a3[17];
  HIDWORD(v46) = a3[18];
  v8 = a3[20];
  v9 = v8;
  LODWORD(v47) = a3[19];
  HIDWORD(v47) = a3[21];
  v10 = a3[22];
  v11 = outlined init with take of AspectRatio(a1, v3 + 160);
  *(_QWORD *)&v12 = *(unsigned __int16 *)(v3 + 248);
  v13 = *(unsigned __int8 *)(v3 + 288);
  if (v13 >> 6 == 1)
  {
    v27 = OUTLINED_FUNCTION_12_27(v11, (uint64_t)&v57);
    if ((v59 & 1) == 0 && (v57 != 1.0 || v58 != 1.0))
      goto LABEL_28;
    OUTLINED_FUNCTION_12_27(v27, (uint64_t)&v53);
    if ((v56 & 1) == 0)
    {
      OUTLINED_FUNCTION_16_22(v29, v30, v31, v32, v33, v34, v35, v36, v42, v44, v46, v47, v48, v49, *(double *)&v50, *((double *)&v50 + 1), *(double *)&v51, *((double *)&v51 + 1), v52,
        v53,
        v54,
        v55);
      if (v38 != v39)
        v37 = 1;
      v9 = v37 | v8;
    }
    if ((v9 & 1) != 0 || (v10 & 1) != 0)
    {
LABEL_28:
      v49 = v12;
      v50 = 0u;
      v51 = 0u;
      LOBYTE(v52) = 1;
      LocalParticipantViewConstraintManager.type.setter((uint64_t)&v49);
      OUTLINED_FUNCTION_3_41();
      goto LABEL_29;
    }
  }
  else
  {
    if (v13 >> 6)
      return;
    v43 = *(double *)(v3 + 280);
    v45 = *(double *)(v3 + 272);
    v14 = OUTLINED_FUNCTION_12_27(v11, (uint64_t)&v57);
    if ((v59 & 1) != 0 || (v57 == 1.0 ? (v15 = v58 == 1.0) : (v15 = 0), v15))
    {
      OUTLINED_FUNCTION_12_27(v14, (uint64_t)&v53);
      if ((v56 & 1) == 0)
      {
        OUTLINED_FUNCTION_16_22(v16, v17, v18, v19, v20, v21, v22, v23, v43, v45, v46, v47, v48, v49, *(double *)&v50, *((double *)&v50 + 1), *(double *)&v51, *((double *)&v51 + 1), v52,
          v53,
          v54,
          v55);
        if (v25 != v26)
          v24 = 1;
        v9 = v24 | v8;
      }
      if ((v9 & 1) == 0 && !v10)
      {
        v49 = v12;
        v50 = 0u;
        v51 = 0u;
        LOBYTE(v52) = 64;
        LocalParticipantViewConstraintManager.type.setter((uint64_t)&v49);
        LOBYTE(v49) = v5;
        *(_QWORD *)&v50 = v6;
        BYTE8(v50) = v7;
        BYTE9(v50) = LOBYTE(v46);
        BYTE10(v50) = BYTE4(v46);
        *(_WORD *)((char *)&v50 + 11) = LOBYTE(v47);
        *(_WORD *)((char *)&v50 + 13) = BYTE4(v47);
LABEL_29:
        LocalParticipantViewConstraintManager.update(aspectRatio:deviceOrientation:layoutState:)(a1, *(_QWORD *)&v48, &v49);
        return;
      }
    }
    OUTLINED_FUNCTION_3_41();
    LocalParticipantViewConstraintManager.sizeFor(state:deviceOrientation:)((uint64_t)&v49);
    v49 = v12;
    *(_QWORD *)&v50 = v40;
    *((_QWORD *)&v50 + 1) = v41;
    *(double *)&v51 = v45;
    *((double *)&v51 + 1) = v43;
    LOBYTE(v52) = v13 & 1;
    LocalParticipantViewConstraintManager.type.setter((uint64_t)&v49);
  }
  LocalParticipantViewConstraintManager.updateConstraints()();
}

void LocalParticipantViewConstraintManager.constraintsForCorner(_:bannerState:sidePaddings:)(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1BD0D46DC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v7;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1BD6441C0;
  v2 = *(void **)(v0 + 48);
  v3 = *(void **)(v0 + 56);
  *(_QWORD *)(v1 + 32) = v2;
  *(_QWORD *)(v1 + 40) = v3;
  v7 = v1;
  specialized Array._endMutation()();
  v4 = v2;
  v5 = v3;
  return v7;
}

unint64_t LocalParticipantViewConstraintManager.getCenteringConstraints(portrait:)(char a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t inited;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  unint64_t v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  unint64_t v35;
  void *v36;
  id v37;
  id v38;
  char **v39;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  id v44;
  id v45;
  id v46;
  id v47;
  char **v48;
  id v50;
  void *v51;
  void *v52;
  id v53;
  id v54;

  v3 = MEMORY[0x1C3B752C0](v1 + 208);
  if (v3)
  {
    v4 = (void *)v3;
    v5 = MEMORY[0x1C3B752C0](v1 + 224);
    if (v5)
    {
      v54 = (id)v5;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1BD644E30;
      v7 = objc_msgSend(*(id *)(v1 + 200), sel_topAnchor);
      v8 = objc_msgSend(v4, sel_topAnchor);
      v9 = objc_msgSend(v7, sel_constraintEqualToAnchor_, v8);

      v51 = v9;
      *(_QWORD *)(inited + 32) = v9;
      v10 = objc_msgSend(*(id *)(v1 + 200), sel_trailingAnchor);
      v11 = objc_msgSend(v4, sel_trailingAnchor);
      v12 = objc_msgSend(v10, sel_constraintEqualToAnchor_, v11);

      v52 = v12;
      *(_QWORD *)(inited + 40) = v12;
      v13 = *(void **)(v1 + 64);
      *(_QWORD *)(inited + 48) = v13;
      v14 = *(void **)(v1 + 72);
      *(_QWORD *)(inited + 56) = v14;
      v15 = v4;
      v16 = *(void **)(v1 + 120);
      *(_QWORD *)(inited + 64) = v16;
      v17 = swift_allocObject();
      *(_OWORD *)(v17 + 16) = xmmword_1BD6441C0;
      v18 = *(void **)(v1 + 200);
      v53 = v13;
      v19 = v14;
      v20 = v16;
      v21 = objc_msgSend(v18, sel_leadingAnchor);
      if ((a1 & 1) != 0)
      {
        v22 = objc_msgSend(v15, sel_leadingAnchor);
        v23 = objc_msgSend(v21, sel_constraintEqualToAnchor_, v22);

        *(_QWORD *)(v17 + 32) = v23;
        v24 = objc_msgSend(*(id *)(v1 + 200), sel_bottomAnchor);
        v25 = objc_msgSend(v15, sel_bottomAnchor);
        static Layout.MediaPip.padding.getter();
        if (one-time initialization token for shared != -1)
          swift_once();
        v26 = static Defaults.shared;
        (*(void (**)(void))(*(_QWORD *)static Defaults.shared + 384))();
        v27 = static Platform.current.getter();
        (*(void (**)(uint64_t))(*(_QWORD *)v26 + 488))(v27);
        v28 = objc_msgSend(v24, sel_constraintEqualToAnchor_constant_, v25, -157.0);

        *(_QWORD *)(v17 + 40) = v28;
        specialized Array._endMutation()();
        if (v17 >> 62)
        {
          swift_bridgeObjectRetain();
          v29 = _CocoaArrayWrapper.endIndex.getter();
        }
        else
        {
          v29 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
        }
        if (__OFADD__(v29, 5))
        {
          __break(1u);
        }
        else
        {
          specialized Array._reserveCapacityImpl(minimumCapacity:growForAppend:)(v29 + 5, 1);
          specialized Array._endMutation()();
          v30 = v51;
          MEMORY[0x1C3B7301C]();
          if (*(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          {
LABEL_10:
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            v31 = v52;
            MEMORY[0x1C3B7301C]();
            if (*(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            v32 = v53;
            MEMORY[0x1C3B7301C]();
            if (*(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            v33 = v19;
            MEMORY[0x1C3B7301C]();
            if (*(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            v34 = v20;
            MEMORY[0x1C3B7301C]();
            if (*(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
LABEL_33:
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            v35 = v17;
            swift_bridgeObjectRelease();
            swift_setDeallocating();
            specialized _ContiguousArrayStorage.__deallocating_deinit();

            return v35;
          }
        }
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        goto LABEL_10;
      }
      v50 = v19;
      v36 = v20;
      v37 = objc_msgSend(v54, sel_trailingAnchor);
      v38 = objc_msgSend(v21, sel_constraintEqualToAnchor_, v37);

      *(_QWORD *)(v17 + 32) = v38;
      v39 = &selRef_associatedAppBundleIdentifier;
      v40 = objc_msgSend(*(id *)(v1 + 200), sel_bottomAnchor);
      v41 = objc_msgSend(v15, sel_bottomAnchor);
      v42 = objc_msgSend(v40, sel_constraintEqualToAnchor_, v41);

      *(_QWORD *)(v17 + 40) = v42;
      specialized Array._endMutation()();
      if (v17 >> 62)
      {
        swift_bridgeObjectRetain();
        v43 = _CocoaArrayWrapper.endIndex.getter();
      }
      else
      {
        v43 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
      }
      if (__OFADD__(v43, 5))
      {
        __break(1u);
      }
      else
      {
        v39 = (char **)v20;
        specialized Array._reserveCapacityImpl(minimumCapacity:growForAppend:)(v43 + 5, 1);
        specialized Array._endMutation()();
        v44 = v51;
        MEMORY[0x1C3B7301C]();
        v36 = v50;
        if (*(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        {
LABEL_25:
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          v45 = v52;
          MEMORY[0x1C3B7301C]();
          if (*(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          v46 = v53;
          MEMORY[0x1C3B7301C]();
          if (*(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          v47 = v36;
          MEMORY[0x1C3B7301C]();
          if (*(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          v48 = v39;
          MEMORY[0x1C3B7301C]();
          if (*(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          goto LABEL_33;
        }
      }
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      goto LABEL_25;
    }

  }
  return MEMORY[0x1E0DEE9D8];
}

uint64_t LocalParticipantViewConstraintManager.getHeightAndWidthConstraints(_:_:)(char a1, uint64_t a2)
{
  uint64_t v2;
  double v5;
  uint64_t v6;
  void *v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  BOOL v16;
  BOOL v17;
  char **v18;
  uint64_t v19;
  double v20;
  double v21;
  BOOL v22;
  BOOL v23;
  char **v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  char v35[8];
  double v36;
  _BYTE v37[16];
  double v38;
  double v39;
  char v40;
  double v41;
  double v42;
  char v43;
  double v44[4];
  char v45;
  double v46[4];
  char v47;

  outlined init with take of AspectRatio(a2, (uint64_t)v35);
  v5 = v36;
  v6 = MEMORY[0x1C3B752C0](v2 + 216);
  if (!v6)
    return MEMORY[0x1E0DEE9D8];
  v7 = (void *)v6;
  outlined init with take of AspectRatio(a2, (uint64_t)v46);
  v8 = v46[0];
  if (v47)
    v9 = 1.0;
  else
    v9 = v5;
  if (v47)
    v8 = 1.0;
  if (v8 > v9)
    v10 = v8;
  else
    v10 = v9;
  outlined init with take of AspectRatio(a2, (uint64_t)v44);
  v11 = v44[0];
  if (v45)
    v12 = 1.0;
  else
    v12 = v5;
  if (v45)
    v11 = 1.0;
  if (v12 < v11)
    v11 = v12;
  v13 = v10 / v11;
  if ((a1 & 1) != 0)
  {
    outlined init with take of AspectRatio(a2, (uint64_t)&v41);
    if (((v43 & 1) != 0 || ((v14 = v41, v15 = v42, v41 == 1.0) ? (v16 = v42 == 1.0) : (v16 = 0), v16))
      && ((outlined init with take of AspectRatio(a2, (uint64_t)v37), (v40 & 1) != 0)
       || ((v14 = v38, v15 = v39, v38 == 1.0) ? (v17 = v39 == 1.0) : (v17 = 0), v17)))
    {
      v18 = &selRef_widthAnchor;
    }
    else
    {
      v18 = &selRef_heightAnchor;
    }
    v25 = objc_msgSend(*(id *)(v2 + 200), *v18, v14, v15);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_1BD6441C0;
    v26 = objc_msgSend(v7, sel_heightAnchor);
    v27 = objc_msgSend(v26, sel_constraintEqualToAnchor_multiplier_, v25, 0.7);

    *(_QWORD *)(v19 + 32) = v27;
    v28 = objc_msgSend(v7, sel_widthAnchor);
    v29 = objc_msgSend(v7, sel_heightAnchor);
    v30 = objc_msgSend(v28, sel_constraintEqualToAnchor_multiplier_, v29, 1.0 / v13);
  }
  else
  {
    outlined init with take of AspectRatio(a2, (uint64_t)&v41);
    if (((v43 & 1) != 0 || ((v20 = v41, v21 = v42, v41 == 1.0) ? (v22 = v42 == 1.0) : (v22 = 0), v22))
      && ((outlined init with take of AspectRatio(a2, (uint64_t)v37), (v40 & 1) != 0)
       || ((v20 = v38, v21 = v39, v38 == 1.0) ? (v23 = v39 == 1.0) : (v23 = 0), v23)))
    {
      v24 = &selRef_heightAnchor;
    }
    else
    {
      v24 = &selRef_widthAnchor;
    }
    v25 = objc_msgSend(*(id *)(v2 + 200), *v24, v20, v21);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_1BD6441C0;
    v31 = objc_msgSend(v7, sel_widthAnchor);
    v32 = objc_msgSend(v31, sel_constraintEqualToAnchor_multiplier_, v25, 0.7);

    *(_QWORD *)(v19 + 32) = v32;
    v28 = objc_msgSend(v7, sel_heightAnchor);
    v29 = objc_msgSend(v7, sel_widthAnchor);
    v30 = objc_msgSend(v28, sel_constraintEqualToAnchor_multiplier_, v29, 1.0 / v13);
  }
  v33 = v30;

  *(_QWORD *)(v19 + 40) = v33;
  specialized Array._endMutation()();

  return v19;
}

id *LocalParticipantViewConstraintManager.deinit()
{
  id *v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  return v0;
}

uint64_t LocalParticipantViewConstraintManager.__deallocating_deinit()
{
  LocalParticipantViewConstraintManager.deinit();
  return swift_deallocClassInstance();
}

uint64_t protocol witness for ViewConstraintManager.constraintsForLayout(_:in:deviceOrientation:) in conformance LocalParticipantViewConstraintManager(uint64_t a1, unint64_t a2)
{
  return LocalParticipantViewConstraintManager.constraintsForLayout(_:in:deviceOrientation:)(a1, a2);
}

Swift::Void __swiftcall LocalParticipantViewConstraintManager.updateView(with:)(CGSize with)
{
  uint64_t v1;

  *(CGFloat *)(v1 + 296) = with.width;
  *(CGFloat *)(v1 + 304) = with.height;
  *(_BYTE *)(v1 + 312) = 0;
}

uint64_t dispatch thunk of LocalParticipantViewSizeUpdater.updateView(with:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t type metadata accessor for LocalParticipantViewConstraintManager()
{
  return objc_opt_self();
}

uint64_t method lookup function for LocalParticipantViewConstraintManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of LocalParticipantViewConstraintManager.__allocating_init(containingGuide:rosterCellLayoutGuide:containingView:localPIPView:controlsView:effectsControlsView:localState:bannerState:controlsState:gridView:aspectRatio:deviceOrientation:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 304))(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t getEnumTagSinglePayload for LocalParticipantViewConstraintManager.LocalParticipantLayoutType(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0x7D && *(_BYTE *)(a1 + 41))
    {
      v2 = *(_DWORD *)a1 + 124;
    }
    else
    {
      v2 = ((*(unsigned __int8 *)(a1 + 40) >> 6) & 0xFFFFFF83 | (4 * ((*(unsigned __int8 *)(a1 + 40) >> 1) & 0x1F))) ^ 0x7F;
      if (v2 >= 0x7C)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for LocalParticipantViewConstraintManager.LocalParticipantLayoutType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7C)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 125;
    if (a3 >= 0x7D)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0x7D)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
    {
      *(_QWORD *)(result + 32) = 0;
      *(_OWORD *)result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(_BYTE *)(result + 40) = 2 * (((-a2 >> 2) & 0x1F) - 32 * a2);
    }
  }
  return result;
}

uint64_t getEnumTag for LocalParticipantViewConstraintManager.LocalParticipantLayoutType(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 40) >> 6;
}

uint64_t destructiveProjectEnumData for LocalParticipantViewConstraintManager.LocalParticipantLayoutType(uint64_t result)
{
  *(_BYTE *)(result + 40) &= 0x3Fu;
  return result;
}

uint64_t destructiveInjectEnumTag for LocalParticipantViewConstraintManager.LocalParticipantLayoutType(uint64_t result, char a2)
{
  *(_BYTE *)(result + 40) = *(_BYTE *)(result + 40) & 1 | (a2 << 6);
  return result;
}

void *type metadata accessor for LocalParticipantViewConstraintManager.LocalParticipantLayoutType()
{
  return &unk_1E761A6D0;
}

uint64_t key path setter for SharedContentViewController.delegate : SharedContentViewController(uint64_t a1, _QWORD **a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0xB8);
  v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

uint64_t SharedContentViewController.delegate.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit27SharedContentViewController_delegate;
  OUTLINED_FUNCTION_1();
  return MEMORY[0x1C3B752C0](v1);
}

void SharedContentViewController.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + OBJC_IVAR____TtC15ConversationKit27SharedContentViewController_delegate;
  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v4 + 8) = a2;
  OUTLINED_FUNCTION_64();
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_9_0();
}

void SharedContentViewController.delegate.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC15ConversationKit27SharedContentViewController_delegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  OUTLINED_FUNCTION_2_0();
  v6 = MEMORY[0x1C3B752C0](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  OUTLINED_FUNCTION_18();
}

void SharedContentViewController.isPipped.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

void SharedContentViewController.isPipped.setter(char a1)
{
  SharedContentViewController.isPipped.setter(a1, &OBJC_IVAR____TtC15ConversationKit27SharedContentViewController_isPipped, (void (*)(uint64_t))SharedContentViewController.isPipped.didset);
}

void SharedContentViewController.isPipped.didset(char a1)
{
  uint64_t v1;
  int v2;
  unsigned __int8 *v3;

  v2 = a1 & 1;
  v3 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC15ConversationKit27SharedContentViewController_isPipped);
  swift_beginAccess();
  if (*v3 != v2)
  {
    SharedContentViewController.updateScrollViewAttributes()();
    SharedContentViewController.updateCornerRadius()();
    SharedContentViewController.resetZoomScale()();
  }
}

void SharedContentViewController.isPipped.modify()
{
  void *v0;

  v0 = OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_35_11((uint64_t)v0);
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_77_4();
  OUTLINED_FUNCTION_18();
}

void SharedContentViewController.isPipped.modify(uint64_t a1, uint64_t a2)
{
  SharedContentViewController.isPipped.modify(a1, a2, (void (*)(_QWORD))SharedContentViewController.isPipped.setter);
}

void SharedContentViewController.isPaused.didset(char a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  unsigned __int8 *v4;
  int v5;
  _BYTE *v6;

  v2 = v1;
  v3 = a1 & 1;
  v4 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC15ConversationKit27SharedContentViewController_isPaused);
  swift_beginAccess();
  v5 = *v4;
  if (v5 != v3)
  {
    v6 = (_BYTE *)(*(_QWORD *)(v2 + OBJC_IVAR____TtC15ConversationKit27SharedContentViewController_sharedContentView)
                 + OBJC_IVAR____TtC15ConversationKit17SharedContentView_isPaused);
    swift_beginAccess();
    *v6 = v5;
    SharedContentView.isPaused.didset();
    SharedContentViewController.resetZoomScale()();
  }
}

void SharedContentViewController.isPaused.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

void SharedContentViewController.isPaused.setter(char a1)
{
  SharedContentViewController.isPipped.setter(a1, &OBJC_IVAR____TtC15ConversationKit27SharedContentViewController_isPaused, (void (*)(uint64_t))SharedContentViewController.isPaused.didset);
}

void SharedContentViewController.isPaused.modify()
{
  void *v0;

  v0 = OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_35_11((uint64_t)v0);
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_77_4();
  OUTLINED_FUNCTION_18();
}

void SharedContentViewController.isPaused.modify(uint64_t a1, uint64_t a2)
{
  SharedContentViewController.isPipped.modify(a1, a2, (void (*)(_QWORD))SharedContentViewController.isPaused.setter);
}

void SharedContentViewController.isPipped.modify(uint64_t a1, uint64_t a2, void (*a3)(_QWORD))
{
  void *v3;

  v3 = *(void **)a1;
  a3(*(unsigned __int8 *)(*(_QWORD *)a1 + 32));
  free(v3);
}

uint64_t SharedContentViewController.isZoomEnabled.didset(char a1)
{
  uint64_t v1;
  int v2;
  unsigned __int8 *v3;
  uint64_t result;
  int v5;
  uint64_t v6;
  void *v7;

  v2 = a1 & 1;
  v3 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC15ConversationKit27SharedContentViewController_isZoomEnabled);
  result = swift_beginAccess();
  v5 = *v3;
  if (v5 != v2)
  {
    v6 = 1;
    if ((v5 & 1) == 0)
    {
      SharedContentViewController.resetZoomScale()();
      v6 = *v3;
    }
    v7 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit27SharedContentViewController_scrollView);
    objc_msgSend(v7, sel_setScrollEnabled_, v6);
    objc_msgSend(v7, sel_setZoomEnabled_, *v3);
    return (*(uint64_t (**)(BOOL))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)(v1
                                                                                 + OBJC_IVAR____TtC15ConversationKit27SharedContentViewController_screenSharingInteraction))
                                           + 0xD8))((*v3 & 1) == 0);
  }
  return result;
}

void SharedContentViewController.isZoomEnabled.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

void SharedContentViewController.isZoomEnabled.setter(char a1)
{
  SharedContentViewController.isPipped.setter(a1, &OBJC_IVAR____TtC15ConversationKit27SharedContentViewController_isZoomEnabled, (void (*)(uint64_t))SharedContentViewController.isZoomEnabled.didset);
}

void SharedContentViewController.isZoomEnabled.modify()
{
  void *v0;

  v0 = OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_35_11((uint64_t)v0);
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_77_4();
  OUTLINED_FUNCTION_18();
}

void SharedContentViewController.isZoomEnabled.modify(uint64_t a1, uint64_t a2)
{
  SharedContentViewController.isPipped.modify(a1, a2, (void (*)(_QWORD))SharedContentViewController.isZoomEnabled.setter);
}

void SharedContentViewController.isContentTransformEnabled.didset(char a1)
{
  uint64_t v1;
  int v2;
  unsigned __int8 *v3;

  v2 = a1 & 1;
  v3 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC15ConversationKit27SharedContentViewController_isContentTransformEnabled);
  swift_beginAccess();
  if (*v3 != v2)
    SharedContentViewController.updateScreenProvider()();
}

void SharedContentViewController.isContentTransformEnabled.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

void SharedContentViewController.isContentTransformEnabled.setter(char a1)
{
  SharedContentViewController.isPipped.setter(a1, &OBJC_IVAR____TtC15ConversationKit27SharedContentViewController_isContentTransformEnabled, (void (*)(uint64_t))SharedContentViewController.isContentTransformEnabled.didset);
}

void SharedContentViewController.isPipped.setter(char a1, _QWORD *a2, void (*a3)(uint64_t))
{
  uint64_t v3;
  _BYTE *v6;
  uint64_t v7;

  v6 = (_BYTE *)(v3 + *a2);
  OUTLINED_FUNCTION_2_0();
  v7 = *v6;
  *v6 = a1;
  a3(v7);
  OUTLINED_FUNCTION_9_0();
}

void SharedContentViewController.isContentTransformEnabled.modify()
{
  void *v0;

  v0 = OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_35_11((uint64_t)v0);
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_77_4();
  OUTLINED_FUNCTION_18();
}

void SharedContentViewController.isContentTransformEnabled.modify(uint64_t a1, uint64_t a2)
{
  SharedContentViewController.isPipped.modify(a1, a2, (void (*)(_QWORD))SharedContentViewController.isContentTransformEnabled.setter);
}

id SharedContentViewController.scrollView.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC15ConversationKit27SharedContentViewController_scrollView);
}

void SharedContentViewController.previousScreenSnapshot.setter(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit27SharedContentViewController_previousScreenSnapshot);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit27SharedContentViewController_previousScreenSnapshot) = a1;

}

uint64_t closure #1 in variable initialization expression of SharedContentViewController.avatarImageQueue()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  _QWORD v8[2];

  v0 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for OS_dispatch_queue.Attributes();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v4);
  v6 = type metadata accessor for DispatchQoS();
  MEMORY[0x1E0C80A78](v6);
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  static DispatchQoS.userInteractive.getter();
  v8[1] = MEMORY[0x1E0DEE9D8];
  _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes, v5, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  _sSay8Dispatch0A13WorkItemFlagsVGSayxGSTsWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type [OS_dispatch_queue.Attributes] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DEF8D0], v0);
  return OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
}

id SharedContentViewController.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id SharedContentViewController.init()()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  objc_super v14;

  OUTLINED_FUNCTION_18_1(OBJC_IVAR____TtC15ConversationKit27SharedContentViewController_delegate);
  v0[OBJC_IVAR____TtC15ConversationKit27SharedContentViewController_isPaused] = 0;
  v0[OBJC_IVAR____TtC15ConversationKit27SharedContentViewController_isZoomEnabled] = 1;
  v0[OBJC_IVAR____TtC15ConversationKit27SharedContentViewController_isContentTransformEnabled] = 1;
  v1 = (uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit27SharedContentViewController_participant];
  v2 = OUTLINED_FUNCTION_14_2();
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v2);
  v3 = OBJC_IVAR____TtC15ConversationKit27SharedContentViewController_scrollView;
  v4 = objc_allocWithZone(MEMORY[0x1E0DC3C28]);
  v5 = v0;
  *(_QWORD *)&v0[v3] = objc_msgSend(v4, sel_init);
  v6 = OBJC_IVAR____TtC15ConversationKit27SharedContentViewController_sharedContentView;
  type metadata accessor for SharedContentView();
  *(_QWORD *)&v5[v6] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  v7 = OBJC_IVAR____TtC15ConversationKit27SharedContentViewController_screenSharingInteraction;
  if (one-time initialization token for shared != -1)
    swift_once();
  v8 = static ScreenSharingInteractionController.shared;
  v9 = objc_allocWithZone((Class)type metadata accessor for ScreenSharingInteraction());
  *(_QWORD *)&v5[v7] = ScreenSharingInteraction.init(interactionController:)(v8);
  v10 = OUTLINED_FUNCTION_65_8();
  OUTLINED_FUNCTION_12_7(v10);
  *(_QWORD *)&v5[OBJC_IVAR____TtC15ConversationKit27SharedContentViewController_previousScreenSnapshot] = 0;
  v11 = OBJC_IVAR____TtC15ConversationKit27SharedContentViewController_avatarImageQueue;
  *(_QWORD *)&v5[v11] = closure #1 in variable initialization expression of SharedContentViewController.avatarImageQueue();
  v5[OBJC_IVAR____TtC15ConversationKit27SharedContentViewController_isPipped] = 0;

  v14.receiver = v5;
  v14.super_class = (Class)ObjC metadata update function for SharedContentViewController();
  v12 = objc_msgSendSuper2(&v14, sel_initWithNibName_bundle_, 0, 0);
  SharedContentViewController.commonInit()();

  return v12;
}

void SharedContentViewController.commonInit()()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  UIView *v12;
  UIView *v13;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit27SharedContentViewController_sharedContentView);
  v2 = objc_msgSend(v1, sel_addInteraction_, *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit27SharedContentViewController_screenSharingInteraction));
  v3 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit27SharedContentViewController_scrollView);
  v4 = OUTLINED_FUNCTION_4_24((uint64_t)v2, sel_setDelegate_);
  v5 = OUTLINED_FUNCTION_95_5((uint64_t)v4, sel_setShowsVerticalScrollIndicator_);
  OUTLINED_FUNCTION_95_5((uint64_t)v5, sel_setShowsHorizontalScrollIndicator_);
  v6 = OUTLINED_FUNCTION_25_1((uint64_t)objc_msgSend(v3, sel_addSubview_, v1), sel_view);
  if (!v6)
  {
    __break(1u);
    goto LABEL_6;
  }
  v7 = v6;
  OUTLINED_FUNCTION_1();
  objc_msgSend(v7, sel__setTouchInsets_, *(double *)&static Layout.ParticipantViews.screenSharingInteractionTouchInsets, unk_1EF4D4170, *(double *)&qword_1EF4D4178, unk_1EF4D4180);

  objc_msgSend(v3, sel__setTouchInsets_, *(double *)&static Layout.ParticipantViews.screenSharingInteractionTouchInsets, unk_1EF4D4170, *(double *)&qword_1EF4D4178, unk_1EF4D4180);
  SharedContentViewController.updateCornerRadius()();
  SharedContentViewController.updateSystemRootLayerTransform()();
  v8 = SharedContentViewController.updateTouchInsets()();
  v9 = OUTLINED_FUNCTION_25_1((uint64_t)v8, sel_view);
  if (!v9)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v10 = v9;
  objc_msgSend(v9, sel_addSubview_, v3);

  v12 = (UIView *)OUTLINED_FUNCTION_25_1(v11, sel_view);
  if (v12)
  {
    v13 = v12;
    UIView.addConstraintsToFill(_:insets:)(v12, *MEMORY[0x1E0DC3298]);

    return;
  }
LABEL_7:
  __break(1u);
}

void SharedContentViewController.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;

  objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  OUTLINED_FUNCTION_0();
}

void SharedContentViewController.init(coder:)()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;

  v1 = v0;
  OUTLINED_FUNCTION_18_1(OBJC_IVAR____TtC15ConversationKit27SharedContentViewController_delegate);
  v0[OBJC_IVAR____TtC15ConversationKit27SharedContentViewController_isPaused] = 0;
  v0[OBJC_IVAR____TtC15ConversationKit27SharedContentViewController_isZoomEnabled] = 1;
  v0[OBJC_IVAR____TtC15ConversationKit27SharedContentViewController_isContentTransformEnabled] = 1;
  v2 = OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_12_7(v2);
  v3 = OBJC_IVAR____TtC15ConversationKit27SharedContentViewController_scrollView;
  *(_QWORD *)&v1[v3] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3C28]), sel_init);
  v4 = OBJC_IVAR____TtC15ConversationKit27SharedContentViewController_sharedContentView;
  type metadata accessor for SharedContentView();
  *(_QWORD *)&v1[v4] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  v5 = OBJC_IVAR____TtC15ConversationKit27SharedContentViewController_screenSharingInteraction;
  if (one-time initialization token for shared != -1)
    swift_once();
  v6 = static ScreenSharingInteractionController.shared;
  v7 = objc_allocWithZone((Class)type metadata accessor for ScreenSharingInteraction());
  *(_QWORD *)&v1[v5] = ScreenSharingInteraction.init(interactionController:)(v6);
  v8 = OUTLINED_FUNCTION_65_8();
  OUTLINED_FUNCTION_12_7(v8);
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit27SharedContentViewController_previousScreenSnapshot] = 0;
  v9 = OBJC_IVAR____TtC15ConversationKit27SharedContentViewController_avatarImageQueue;
  *(_QWORD *)&v1[v9] = closure #1 in variable initialization expression of SharedContentViewController.avatarImageQueue();

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Void __swiftcall SharedContentViewController.viewDidLoad()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  objc_super v11;

  v11.receiver = v0;
  v11.super_class = (Class)ObjC metadata update function for SharedContentViewController();
  v7 = OUTLINED_FUNCTION_90_0((uint64_t)v11.super_class, sel_viewDidLoad, v1, v2, v3, v4, v5, v6, v11);
  v8 = OUTLINED_FUNCTION_25_1((uint64_t)v7, sel_view);
  if (v8)
  {
    v9 = v8;
    v10 = objc_msgSend((id)objc_opt_self(), sel_blackColor);
    OUTLINED_FUNCTION_4_24((uint64_t)v10, sel_setBackgroundColor_);

  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall SharedContentViewController.viewDidLayoutSubviews()()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  objc_super v7;

  v7.receiver = v0;
  v7.super_class = (Class)ObjC metadata update function for SharedContentViewController();
  OUTLINED_FUNCTION_90_0((uint64_t)v7.super_class, sel_viewDidLayoutSubviews, v1, v2, v3, v4, v5, v6, v7);
  SharedContentViewController.updateScrollViewAttributes()();
  SharedContentViewController.resetZoomScale()();
  SharedContentViewController.centerSharedContentView(in:)(*(void **)&v0[OBJC_IVAR____TtC15ConversationKit27SharedContentViewController_scrollView]);
}

id SharedContentViewController.centerSharedContentView(in:)(void *a1)
{
  char *v1;
  void *v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double Width;
  double v9;
  double v10;
  double Height;
  double v12;
  double v13;
  uint64_t v14;
  char *v15;
  id v16;
  char *v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  CGRect v38;
  CGRect v39;
  CGRect v40;
  CGRect v41;

  v3 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKit27SharedContentViewController_sharedContentView];
  objc_msgSend(v3, sel_frame);
  v5 = v4;
  v7 = v6;
  objc_msgSend(a1, sel_frame);
  Width = CGRectGetWidth(v38);
  objc_msgSend(v3, sel_frame);
  v9 = (Width - CGRectGetWidth(v39)) * 0.5;
  if (v9 < 0.0)
    v10 = 0.0;
  else
    v10 = v9;
  objc_msgSend(a1, sel_frame);
  Height = CGRectGetHeight(v40);
  objc_msgSend(v3, sel_frame);
  v12 = (Height - CGRectGetHeight(v41)) * 0.5;
  if (v12 < 0.0)
    v13 = 0.0;
  else
    v13 = v12;
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v14 = type metadata accessor for Logger();
  __swift_project_value_buffer(v14, (uint64_t)&static Logger.conversationKit);
  v15 = v1;
  v16 = a1;
  v17 = v15;
  v18 = v16;
  v19 = Logger.logObject.getter();
  v20 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc();
    v32 = swift_slowAlloc();
    v37 = v32;
    *(_DWORD *)v21 = 136315650;
    type metadata accessor for CGRect(0);
    v22 = String.init<A>(reflecting:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v22, v23, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 2080;
    objc_msgSend(v3, sel_frame);
    v24 = String.init<A>(reflecting:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v24, v25, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 22) = 2080;
    objc_msgSend(v18, sel_frame);
    v34 = v26;
    v35 = v27;
    v36 = v28;
    v29 = String.init<A>(reflecting:)();
    v33 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v29, v30, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v19, v20, "Centering sharedContentView newFrame:%s oldFrame:%s scrollView.frame:%s", (uint8_t *)v21, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v32, -1, -1);
    MEMORY[0x1C3B751B8](v21, -1, -1);

  }
  else
  {

  }
  return objc_msgSend(v3, sel_setFrame_, v10, v13, v5, v7, v32, v33, v34, v35, v36, v37);
}

void SharedContentViewController.viewWillTransition(to:with:)(void *a1, double a2, double a3)
{
  void *v3;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  objc_super v10;

  v10.receiver = v3;
  v10.super_class = (Class)ObjC metadata update function for SharedContentViewController();
  objc_msgSendSuper2(&v10, sel_viewWillTransitionToSize_withTransitionCoordinator_, a1, a2, a3);
  SharedContentViewController.updateScrollViewAttributes()();
  OUTLINED_FUNCTION_15();
  swift_unknownObjectWeakInit();
  v7 = OUTLINED_FUNCTION_9_2((uint64_t)thunk for @escaping @callee_guaranteed (@guaranteed UIViewControllerTransitionCoordinatorContext) -> (), MEMORY[0x1E0C809B0], 1107296256, v8, v9);
  swift_release();
  objc_msgSend(a1, sel_animateAlongsideTransition_completion_, v7, 0);
  _Block_release(v7);
}

void closure #1 in SharedContentViewController.viewWillTransition(to:with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x1C3B752C0](v2);
  if (v3)
  {
    v4 = (void *)v3;
    SharedContentViewController.resetZoomScale()();

  }
}

uint64_t thunk for @escaping @callee_guaranteed (@guaranteed UIViewControllerTransitionCoordinatorContext) -> ()(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();
  return swift_unknownObjectRelease();
}

void SharedContentViewController.updateScreenSharing(_:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  CGFloat v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char v38;
  char v39;
  uint64_t (*v40)(uint64_t);
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t EnumTagSinglePayload;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  CGFloat v69;
  CGFloat v70;
  char v71;
  void (*v72)(_QWORD, uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  double v80;
  double v81;
  double v82;
  double v83;
  void *v84;
  double v85;
  _QWORD *v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  void *v90;
  os_log_type_t v91;
  _DWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t ObjectType;
  uint64_t v104;
  CGFloat v105;
  CGFloat v106;
  CGFloat v107;
  CGFloat v108;
  CGFloat v109;
  CGFloat v110;
  CGFloat v111;
  CGFloat v112;
  uint64_t v113;
  _BOOL8 v114;
  BOOL v115;
  uint64_t v116;
  uint64_t v117;
  CGFloat v118;
  CGFloat v119;
  CGFloat v120;
  CGFloat v121;
  uint64_t v122;
  CGFloat v123;
  CGFloat v124;
  CGFloat v125;
  CGFloat v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  _QWORD *v132;
  _DWORD *v133;
  CATransform3D v134;
  CATransform3D v135;
  CATransform3D v136;
  uint64_t v137[17];
  _BYTE v138[136];
  _QWORD v139[17];
  _BYTE v140[136];
  _QWORD v141[23];
  double v142;
  double v143;
  double v144;
  double v145;
  double v146;
  double v147;
  double v148;
  double v149;
  CGFloat v150;
  double v151;
  double v152;
  CGFloat v153;
  CGFloat v154;
  double v155;
  CGFloat v156;
  double v157;

  OUTLINED_FUNCTION_54_3();
  v132 = v0;
  v2 = v1;
  v123 = COERCE_DOUBLE(type metadata accessor for UUID());
  v120 = *(double *)(*(_QWORD *)&v123 - 8);
  MEMORY[0x1E0C80A78](*(_QWORD *)&v123);
  OUTLINED_FUNCTION_41();
  v118 = v3;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_41();
  v126 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SharedContentViewModel?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_5_27();
  v122 = v8;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v9);
  *(_QWORD *)&v119 = (char *)&v116 - v10;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v116 - v12;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_5_27();
  v125 = v15;
  OUTLINED_FUNCTION_8_4();
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v116 - v18;
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v116 - v20;
  v129 = OUTLINED_FUNCTION_65_8();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v22);
  OUTLINED_FUNCTION_5_27();
  v124 = v23;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v24);
  *(_QWORD *)&v121 = (char *)&v116 - v25;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v26);
  v128 = (char *)&v116 - v27;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v28);
  OUTLINED_FUNCTION_41();
  v131 = v29;
  v127 = OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v30);
  OUTLINED_FUNCTION_5_27();
  v130 = v31;
  OUTLINED_FUNCTION_8_4();
  v33 = MEMORY[0x1E0C80A78](v32);
  v35 = (char *)&v116 - v34;
  MEMORY[0x1E0C80A78](v33);
  v37 = (char *)&v116 - v36;
  Participant.screenState.getter();
  v39 = v38;
  v133 = (_DWORD *)v2;
  _s15ConversationKit11ParticipantVWOcTm_1(v2, (uint64_t)v37, type metadata accessor for Participant);
  if (v39 == 2)
  {
    v40 = type metadata accessor for Participant;
    v41 = (uint64_t)v37;
LABEL_3:
    outlined destroy of AccountUpdateNotice(v41, v40);
    goto LABEL_9;
  }
  Participant.isReceivingScreenFrames.getter();
  v43 = v42;
  OUTLINED_FUNCTION_22_29(v42, type metadata accessor for Participant);
  if ((v43 & 1) != 0)
  {
    Participant.screenProvider.getter();
    v44 = v137[3];
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v137, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
    if (v44)
    {
      v45 = (uint64_t)v132 + OBJC_IVAR____TtC15ConversationKit27SharedContentViewController_participant;
      OUTLINED_FUNCTION_1();
      v46 = v131;
      OUTLINED_FUNCTION_68_6(v45, v131);
      Participant.requiresScreenInfoUpdate(from:)();
      v48 = v47;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v46, &demangling cache variable for type metadata for Participant?);
      if ((v48 & 1) != 0)
      {
        v49 = (uint64_t)v133;
        v50 = v131;
        OUTLINED_FUNCTION_85_3((uint64_t)v133, v131);
        OUTLINED_FUNCTION_39_19();
        OUTLINED_FUNCTION_2_0();
        outlined assign with take of Participant?(v50, v45, &demangling cache variable for type metadata for Participant?);
        swift_endAccess();
        OUTLINED_FUNCTION_85_3(v49, (uint64_t)v35);
        v51 = (uint64_t)v128;
        SharedContentViewModel.init(participant:)();
        v52 = v132;
        v53 = (uint64_t)v132 + OBJC_IVAR____TtC15ConversationKit27SharedContentViewController_previousViewModel;
        OUTLINED_FUNCTION_1();
        v117 = v53;
        outlined init with copy of FeatureEligibility?(v53, (uint64_t)v13, &demangling cache variable for type metadata for SharedContentViewModel?);
        EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v129);
        if ((_DWORD)EnumTagSinglePayload)
        {
          OUTLINED_FUNCTION_60_8(EnumTagSinglePayload, &demangling cache variable for type metadata for SharedContentViewModel?);
          v55 = 1;
        }
        else
        {
          v56 = *(_QWORD *)&v121;
          OUTLINED_FUNCTION_33_14((uint64_t)v13, *(uint64_t *)&v121);
          OUTLINED_FUNCTION_60_8(v57, &demangling cache variable for type metadata for SharedContentViewModel?);
          SharedContentViewModel.participantIdentifier.getter();
          OUTLINED_FUNCTION_110(v56);
          v55 = 0;
        }
        v58 = *(_QWORD *)&v125;
        v59 = *(_QWORD *)&v123;
        __swift_storeEnumTagSinglePayload((uint64_t)v21, v55, 1, *(uint64_t *)&v123);
        SharedContentViewModel.participantIdentifier.getter();
        __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v59);
        v60 = *(_QWORD *)&v126;
        v61 = *(_QWORD *)&v126 + *(int *)(v4 + 48);
        OUTLINED_FUNCTION_87_0((uint64_t)v21, *(uint64_t *)&v126);
        outlined init with copy of FeatureEligibility?((uint64_t)v19, v61, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        OUTLINED_FUNCTION_21_24(v60);
        if (v66)
        {
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v19, (uint64_t *)&demangling cache variable for type metadata for UUID?);
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v21, (uint64_t *)&demangling cache variable for type metadata for UUID?);
          v62 = OUTLINED_FUNCTION_21_24(v61);
          if (v66)
          {
            OUTLINED_FUNCTION_30_7(v62, (uint64_t *)&demangling cache variable for type metadata for UUID?);
            OUTLINED_FUNCTION_28_24(v63, v64, type metadata accessor for SharedContentViewModel);
            v65 = v117;
LABEL_21:
            v76 = *(_QWORD *)&v119;
            outlined init with copy of FeatureEligibility?(v65, *(uint64_t *)&v119, &demangling cache variable for type metadata for SharedContentViewModel?);
            v77 = v129;
            if (__swift_getEnumTagSinglePayload(v76, 1, v129))
            {
              outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v76, &demangling cache variable for type metadata for SharedContentViewModel?);
              _sSo13CATransform3DVSgWOi0_((uint64_t)v137);
            }
            else
            {
              v104 = *(_QWORD *)&v121;
              OUTLINED_FUNCTION_84_3(v76, *(uint64_t *)&v121);
              outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v76, &demangling cache variable for type metadata for SharedContentViewModel?);
              SharedContentViewModel.screenTransform.getter();
              outlined destroy of AccountUpdateNotice(v104, type metadata accessor for SharedContentViewModel);
              memcpy(v137, v140, 0x80uLL);
              _sSo13CATransform3DVSgWOi_((uint64_t)v137);
            }
            outlined init with take of Any?((uint64_t)v137, (uint64_t)v141, &demangling cache variable for type metadata for CATransform3D?);
            SharedContentViewModel.screenTransform.getter();
            v105 = v142;
            v106 = v143;
            v107 = v144;
            v108 = v145;
            v109 = v146;
            v110 = v147;
            v111 = v148;
            v112 = v149;
            *(double *)v139 = v142;
            *(double *)&v139[1] = v143;
            *(double *)&v139[2] = v144;
            *(double *)&v139[3] = v145;
            *(double *)&v139[4] = v146;
            *(double *)&v139[5] = v147;
            *(double *)&v139[6] = v148;
            *(double *)&v139[7] = v149;
            v125 = v151;
            v126 = v150;
            *(CGFloat *)&v139[8] = v150;
            *(double *)&v139[9] = v151;
            v123 = v153;
            v124 = v152;
            *(double *)&v139[10] = v152;
            *(CGFloat *)&v139[11] = v153;
            v120 = v155;
            v121 = v154;
            *(CGFloat *)&v139[12] = v154;
            *(double *)&v139[13] = v155;
            v118 = v157;
            v119 = v156;
            *(CGFloat *)&v139[14] = v156;
            *(double *)&v139[15] = v157;
            _sSo13CATransform3DVSgWOi_((uint64_t)v139);
            OUTLINED_FUNCTION_42_16((uint64_t)v141, (uint64_t)v137);
            OUTLINED_FUNCTION_42_16((uint64_t)v139, (uint64_t)v138);
            OUTLINED_FUNCTION_42_16((uint64_t)v141, (uint64_t)v140);
            v113 = _sSo13CATransform3DVSgWOg((uint64_t)v140);
            if ((_DWORD)v113 == 1)
            {
              OUTLINED_FUNCTION_22_29(v113, type metadata accessor for SharedContentViewModel);
              OUTLINED_FUNCTION_42_16((uint64_t)v138, (uint64_t)&v135);
              OUTLINED_FUNCTION_42_16((uint64_t)&v135, (uint64_t)&v136);
              if (_sSo13CATransform3DVSgWOg((uint64_t)&v136) == 1)
                goto LABEL_25;
            }
            else
            {
              outlined init with take of Any?((uint64_t)v141, (uint64_t)&v136, &demangling cache variable for type metadata for CATransform3D?);
              v135 = v136;
              v134.m11 = v105;
              v134.m12 = v106;
              v134.m13 = v107;
              v134.m14 = v108;
              v134.m21 = v109;
              v134.m22 = v110;
              v134.m23 = v111;
              v134.m24 = v112;
              v134.m31 = v126;
              v134.m32 = v125;
              v134.m33 = v124;
              v134.m34 = v123;
              v134.m41 = v121;
              v134.m42 = v120;
              v134.m43 = v119;
              v134.m44 = v118;
              v114 = CATransform3DEqualToTransform(&v135, &v134);
              v115 = v114;
              OUTLINED_FUNCTION_22_29(v114, type metadata accessor for SharedContentViewModel);
              if (v115)
                goto LABEL_25;
            }
LABEL_24:
            v78 = v122;
            _s15ConversationKit11ParticipantVWOcTm_1(v51, v122, type metadata accessor for SharedContentViewModel);
            __swift_storeEnumTagSinglePayload(v78, 0, 1, v77);
            OUTLINED_FUNCTION_2_0();
            outlined assign with take of Participant?(v78, v65, &demangling cache variable for type metadata for SharedContentViewModel?);
            swift_endAccess();
            SharedContentViewController.animateOutPreviousScreenContent()();
LABEL_25:
            v79 = *(void **)((char *)v52
                           + OBJC_IVAR____TtC15ConversationKit27SharedContentViewController_sharedContentView);
            SharedContentView.configure(with:)(v51);
            SharedContentViewController.preferredScreenSharingFrame(scale:)();
            v81 = v80;
            v83 = v82;
            v84 = *(void **)((char *)v52 + OBJC_IVAR____TtC15ConversationKit27SharedContentViewController_scrollView);
            v85 = 1.0;
            objc_msgSend(v84, sel_setZoomScale_, 1.0);
            objc_msgSend(v79, sel_setFrame_, 0.0, 0.0, v81, v83);
            OUTLINED_FUNCTION_63_9(v84, sel_setContentSize_);
            OUTLINED_FUNCTION_63_9(v52, sel_setPreferredContentSize_);
            v86 = *(_QWORD **)((char *)v52
                             + OBJC_IVAR____TtC15ConversationKit27SharedContentViewController_screenSharingInteraction);
            Participant.screenInfo.getter();
            if (v137[3] == 1)
            {
              outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v137, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
            }
            else
            {
              if ((v138[72] & 1) == 0)
                v85 = *(double *)&v137[14];
              v87 = outlined destroy of Participant.ScreenInfo((uint64_t)v137);
            }
            v88 = (_QWORD *)MEMORY[0x1E0DEEDD8];
            (*(void (**)(uint64_t, double))((*MEMORY[0x1E0DEEDD8] & *v86) + 0xF0))(v87, v85);
            SharedContentViewController.resetZoomScale()();
            SharedContentViewController.updateScreenProvider()();
            SharedContentViewController.updateScreenSharingInteraction()();
            SharedContentViewController.updateSystemRootLayerTransform()();
            SharedContentViewController.updateTouchInsets()();
            SharedContentViewController.centerSharedContentView(in:)(v84);
            if (one-time initialization token for conversationKit != -1)
              swift_once();
            v89 = OUTLINED_FUNCTION_17_2();
            __swift_project_value_buffer(v89, (uint64_t)&static Logger.conversationKit);
            _s15ConversationKit11ParticipantVWOcTm_1((uint64_t)v133, v130, type metadata accessor for Participant);
            v90 = (void *)Logger.logObject.getter();
            v91 = static os_log_type_t.default.getter();
            if (OUTLINED_FUNCTION_51_3(v91))
            {
              v92 = (_DWORD *)OUTLINED_FUNCTION_105();
              v137[0] = OUTLINED_FUNCTION_105();
              *v92 = 136315138;
              v133 = v92 + 1;
              v94 = v130;
              v93 = v131;
              _s15ConversationKit11ParticipantVWOcTm_1(v130, v131, type metadata accessor for Participant);
              OUTLINED_FUNCTION_39_19();
              specialized >> prefix<A>(_:)(v93);
              v96 = v95;
              v98 = v97;
              outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v93, &demangling cache variable for type metadata for Participant?);
              v141[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v96, v98, v137);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              outlined destroy of AccountUpdateNotice(v94, type metadata accessor for Participant);
              OUTLINED_FUNCTION_40_17(&dword_1BD004000, v99, v100, "Shared content view controller updated for participant %s");
              OUTLINED_FUNCTION_56();
              OUTLINED_FUNCTION_60();
            }
            outlined destroy of AccountUpdateNotice(v130, type metadata accessor for Participant);

            if ((*(uint64_t (**)(void))((*v88 & *v52) + 0xB0))())
            {
              v102 = v101;
              ObjectType = swift_getObjectType();
              (*(void (**)(_QWORD *, uint64_t, uint64_t))(v102 + 8))(v52, ObjectType, v102);
              swift_unknownObjectRelease();
            }
            v40 = type metadata accessor for SharedContentViewModel;
            v41 = v51;
            goto LABEL_3;
          }
        }
        else
        {
          outlined init with copy of FeatureEligibility?(v60, v58, (uint64_t *)&demangling cache variable for type metadata for UUID?);
          OUTLINED_FUNCTION_21_24(v61);
          if (!v66)
          {
            v69 = v120;
            v70 = v118;
            (*(void (**)(CGFloat, uint64_t, uint64_t))(*(_QWORD *)&v120 + 32))(COERCE_CGFLOAT(*(_QWORD *)&v118), v61, v59);
            _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
            v71 = dispatch thunk of static Equatable.== infix(_:_:)();
            v72 = *(void (**)(_QWORD, uint64_t))(*(_QWORD *)&v69 + 8);
            v72(*(_QWORD *)&v70, v59);
            OUTLINED_FUNCTION_91_2((uint64_t)v19);
            OUTLINED_FUNCTION_91_2((uint64_t)v21);
            v72(*(_QWORD *)&v125, v59);
            v51 = (uint64_t)v128;
            OUTLINED_FUNCTION_91_2(v60);
            OUTLINED_FUNCTION_28_24(v73, v74, type metadata accessor for SharedContentViewModel);
            v65 = v117;
            if ((v71 & 1) != 0)
              goto LABEL_21;
LABEL_23:
            OUTLINED_FUNCTION_22_29(v75, type metadata accessor for SharedContentViewModel);
            v77 = v129;
            goto LABEL_24;
          }
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v19, (uint64_t *)&demangling cache variable for type metadata for UUID?);
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v21, (uint64_t *)&demangling cache variable for type metadata for UUID?);
          v62 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)&v120 + 8))(v58, v59);
        }
        OUTLINED_FUNCTION_30_7(v62, (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
        OUTLINED_FUNCTION_28_24(v67, v68, type metadata accessor for SharedContentViewModel);
        v65 = v117;
        goto LABEL_23;
      }
    }
  }
LABEL_9:
  OUTLINED_FUNCTION_50_1();
}

void SharedContentViewController.resetZoomScale()()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(_QWORD);
  char v18;
  id v19;
  double Height;
  id v21;
  uint64_t v22;
  double v23;
  double v24;
  void *v25;
  double v26;
  double v27;
  _BYTE v28[216];
  CGRect v29;
  CGRect v30;
  CGRect v31;
  CGRect v32;
  CGRect v33;

  OUTLINED_FUNCTION_54_3();
  OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_78();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_16_2();
  v5 = OUTLINED_FUNCTION_25_5();
  if (!v5)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v6 = v5;
  objc_msgSend(v5, sel_frame);
  OUTLINED_FUNCTION_89();

  v29.origin.x = OUTLINED_FUNCTION_66();
  if (CGRectIsEmpty(v29))
  {
LABEL_21:
    OUTLINED_FUNCTION_50_1();
    return;
  }
  v7 = OUTLINED_FUNCTION_25_5();
  if (!v7)
    goto LABEL_23;
  v8 = v7;
  v9 = objc_msgSend(v7, sel_window);

  if (v9)
  {
    v10 = objc_msgSend(v9, sel_screen);

  }
  else
  {
    v10 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
  }
  objc_msgSend(v10, sel_scale);

  v11 = v0 + OBJC_IVAR____TtC15ConversationKit27SharedContentViewController_participant;
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_70_6(v11, v12, &demangling cache variable for type metadata for Participant?);
  if (OUTLINED_FUNCTION_4_40(v1))
  {
    v13 = &demangling cache variable for type metadata for Participant?;
    v14 = (_BYTE *)v1;
  }
  else
  {
    OUTLINED_FUNCTION_84_3(v1, v0);
    OUTLINED_FUNCTION_30_7(v15, &demangling cache variable for type metadata for Participant?);
    Participant.screenInfo.getter();
    v16 = OUTLINED_FUNCTION_64();
    outlined destroy of AccountUpdateNotice(v16, v17);
    OUTLINED_FUNCTION_45_17();
    if (!v18)
    {
      outlined destroy of Participant.ScreenInfo((uint64_t)v28);
      goto LABEL_13;
    }
    v13 = (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?;
    v14 = v28;
  }
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v14, v13);
LABEL_13:
  SharedContentViewController.preferredScreenSharingFrame(scale:)();
  v19 = OUTLINED_FUNCTION_25_5();
  if (!v19)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  objc_msgSend(v19, sel_frame);
  OUTLINED_FUNCTION_43_16();
  v30.origin.x = OUTLINED_FUNCTION_83_5();
  CGRectGetHeight(v30);
  v31.origin.x = OUTLINED_FUNCTION_53_11();
  Height = CGRectGetHeight(v31);
  v21 = OUTLINED_FUNCTION_25_5();
  if (v21)
  {
    objc_msgSend(v21, sel_frame);
    OUTLINED_FUNCTION_43_16();
    v32.origin.x = OUTLINED_FUNCTION_83_5();
    CGRectGetWidth(v32);
    v33.origin.x = OUTLINED_FUNCTION_53_11();
    v23 = v2 / CGRectGetWidth(v33);
    if (v2 / Height > v23)
      v23 = v2 / Height;
    if (v23 > 1.0)
      v24 = v23;
    else
      v24 = 1.0;
    v25 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit27SharedContentViewController_scrollView);
    OUTLINED_FUNCTION_94_1(v22, sel_setMinimumZoomScale_);
    OUTLINED_FUNCTION_94_1((uint64_t)objc_msgSend(v25, sel_setMaximumZoomScale_, v24), sel_setZoomScale_);
    OUTLINED_FUNCTION_79_5();
    objc_msgSend(v25, sel_setContentOffset_);
    OUTLINED_FUNCTION_79_5();
    objc_msgSend(v25, sel_setContentSize_, v26, v27);
    goto LABEL_21;
  }
LABEL_25:
  __break(1u);
}

id SharedContentViewController.updateCornerRadius()()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  if ((OUTLINED_FUNCTION_38_16(*v0) & 1) != 0)
  {
    objc_msgSend(*(id *)((char *)v0 + OBJC_IVAR____TtC15ConversationKit27SharedContentViewController_scrollView), sel__setContinuousCornerRadius_, 0.0);
    v1 = (_QWORD *)(*(uint64_t *)((char *)v0
                               + OBJC_IVAR____TtC15ConversationKit27SharedContentViewController_sharedContentView)
                  + OBJC_IVAR____TtC15ConversationKit17SharedContentView_customCornerRadius);
    OUTLINED_FUNCTION_2_0();
    *v1 = 0;
  }
  else
  {
    v2 = *(uint64_t *)((char *)v0 + OBJC_IVAR____TtC15ConversationKit27SharedContentViewController_sharedContentView);
    SharedContentViewController.cornerRadius.getter();
    v4 = v3;
    v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC15ConversationKit17SharedContentView_customCornerRadius);
    OUTLINED_FUNCTION_2_0();
    *v5 = v4;
  }
  return SharedContentView.customCornerRadius.didset();
}

id SharedContentViewController.updateScrollViewAttributes()()
{
  _QWORD *v0;
  void *v1;
  uint64_t (*v2)(void);
  id v3;

  v1 = *(void **)((char *)v0 + OBJC_IVAR____TtC15ConversationKit27SharedContentViewController_scrollView);
  v2 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8);
  v3 = objc_msgSend(v1, sel_setScrollEnabled_, (v2() & 1) == 0);
  return objc_msgSend(v1, sel_setUserInteractionEnabled_, (((uint64_t (*)(id))v2)(v3) & 1) == 0);
}

void SharedContentViewController.updateSystemRootLayerTransform()()
{
  uint64_t v0;
  uint64_t v1;
  _OWORD *v2;
  __int128 v3;
  _OWORD v4[3];

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit27SharedContentViewController_sharedContentView);
  SharedContentViewController.systemRootLayerTransform.getter((double *)v4);
  v2 = (_OWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit17SharedContentView_systemRootLayerTransform);
  OUTLINED_FUNCTION_2_0();
  v3 = v4[1];
  *v2 = v4[0];
  v2[1] = v3;
  v2[2] = v4[2];
  SharedContentView.updateVideoViewTransform()();
}

id SharedContentViewController.updateTouchInsets()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  _BYTE *v5;
  uint64_t v6;
  char v7;
  double v8;
  _BYTE v10[112];
  double v11;
  char v12;

  OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_78();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_62_7();
  if (OUTLINED_FUNCTION_55())
  {
    v4 = &demangling cache variable for type metadata for Participant?;
    v5 = (_BYTE *)v1;
LABEL_6:
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v5, v4);
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_33_14(v1, v0);
  OUTLINED_FUNCTION_32_18(v6, &demangling cache variable for type metadata for Participant?);
  Participant.screenInfo.getter();
  OUTLINED_FUNCTION_110(v0);
  OUTLINED_FUNCTION_45_17();
  if (v7)
  {
    v4 = (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?;
    v5 = v10;
    goto LABEL_6;
  }
  if ((v12 & 1) == 0)
  {
    v8 = v11;
    outlined destroy of Participant.ScreenInfo((uint64_t)v10);
    goto LABEL_8;
  }
  outlined destroy of Participant.ScreenInfo((uint64_t)v10);
LABEL_7:
  v8 = 1.0;
LABEL_8:
  OUTLINED_FUNCTION_1();
  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15ConversationKit27SharedContentViewController_sharedContentView), sel__setTouchInsets_, v8 * *(double *)&static Layout.ParticipantViews.screenSharingInteractionTouchInsets, v8 * unk_1EF4D4170, v8 * *(double *)&qword_1EF4D4178, v8 * unk_1EF4D4180);
}

uint64_t SharedContentViewController.contentOrientation.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_30_6();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_16_2();
  if ((OUTLINED_FUNCTION_37_2(*v1) & 1) == 0)
    return 1;
  v5 = (uint64_t)v1 + OBJC_IVAR____TtC15ConversationKit27SharedContentViewController_participant;
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_70_6(v5, v6, &demangling cache variable for type metadata for Participant?);
  v7 = OUTLINED_FUNCTION_4_40(v2);
  if ((_DWORD)v7)
  {
    OUTLINED_FUNCTION_30_7(v7, &demangling cache variable for type metadata for Participant?);
    return 0;
  }
  else
  {
    v9 = OUTLINED_FUNCTION_131();
    _s15ConversationKit11ParticipantVWOcTm_1(v9, v10, type metadata accessor for Participant);
    OUTLINED_FUNCTION_30_7(v11, &demangling cache variable for type metadata for Participant?);
    v8 = Participant.deviceOrientation.getter();
    outlined destroy of AccountUpdateNotice(v0, type metadata accessor for Participant);
  }
  return v8;
}

void SharedContentViewController.updateScreenProvider()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  _QWORD *v10;
  char v11;
  NSObject *v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;

  OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_78();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_62_7();
  v4 = OUTLINED_FUNCTION_55();
  if ((_DWORD)v4)
  {
    OUTLINED_FUNCTION_32_18(v4, &demangling cache variable for type metadata for Participant?);
    v13 = 0u;
    v14 = 0u;
    v15 = 0;
LABEL_3:
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v13, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
    goto LABEL_4;
  }
  OUTLINED_FUNCTION_33_14(v1, (uint64_t)v0);
  OUTLINED_FUNCTION_32_18(v9, &demangling cache variable for type metadata for Participant?);
  Participant.screenProvider.getter();
  OUTLINED_FUNCTION_110((uint64_t)v0);
  if (!*((_QWORD *)&v14 + 1))
    goto LABEL_3;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantVideoProvider);
  type metadata accessor for RemoteParticipantVideoProvider();
  if ((swift_dynamicCast() & 1) != 0)
  {
    v6 = v12;
    v10 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    v11 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x110))();
    (*(void (**)(_QWORD))((*v10 & (uint64_t)v12->isa) + 0x1A8))(v11 & 1);
    goto LABEL_11;
  }
LABEL_4:
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v5 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v5, (uint64_t)&static Logger.conversationKit);
  v6 = Logger.logObject.getter();
  v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)OUTLINED_FUNCTION_105();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_1BD004000, v6, v7, "remoteScreenProvider not found", v8, 2u);
    OUTLINED_FUNCTION_60();
  }
LABEL_11:

}

void SharedContentViewController.updateScreenSharingInteraction()()
{
  uint64_t v0;
  unint64_t v1;
  char v2;
  _QWORD *v3;
  uint64_t v4;

  v1 = SharedContentViewController.contentOrientation.getter();
  if ((v2 & 1) == 0)
  {
    v3 = *(_QWORD **)(v0 + OBJC_IVAR____TtC15ConversationKit27SharedContentViewController_screenSharingInteraction);
    v4 = CNKDeviceOrientation.uiDeviceOrientation.getter(v1);
    (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v3) + 0x108))(v4);
  }
  OUTLINED_FUNCTION_0();
}

double SharedContentViewController.preferredScreenSharingFrame(scale:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_30_6();
  v6 = v1 + OBJC_IVAR____TtC15ConversationKit27SharedContentViewController_participant;
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_87_0(v6, (uint64_t)v4);
  v7 = OUTLINED_FUNCTION_46_7((uint64_t)v4);
  if ((_DWORD)v7 != 1)
  {
    outlined init with take of Participant((uint64_t)v4, v0);
    v8 = SharedContentViewController.contentOrientation.getter();
    if ((v9 & 1) != 0)
    {
      OUTLINED_FUNCTION_35_2(v8, type metadata accessor for Participant);
      return 0.0;
    }
    if ((v8 | 2) == 3)
    {
      OUTLINED_FUNCTION_80_3();
      OUTLINED_FUNCTION_35_2(v10, type metadata accessor for Participant);
      OUTLINED_FUNCTION_78_6(v11, v12, &demangling cache variable for type metadata for AspectRatio?);
      if ((v18 & 1) != 0)
        return 0.0;
    }
    else
    {
      OUTLINED_FUNCTION_80_3();
      OUTLINED_FUNCTION_35_2(v14, type metadata accessor for Participant);
      OUTLINED_FUNCTION_78_6(v15, v16, &demangling cache variable for type metadata for AspectRatio?);
      if ((v18 & 1) != 0)
        return 0.0;
    }
    OUTLINED_FUNCTION_76_6();
    OUTLINED_FUNCTION_75_6();
    return 0.0;
  }
  OUTLINED_FUNCTION_32_18(v7, &demangling cache variable for type metadata for Participant?);
  return 0.0;
}

void SharedContentViewController.cornerRadius.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t *v19;
  _BYTE *v20;
  char v21;
  uint64_t *v22;
  _BYTE *v23;
  uint64_t *v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE v31[184];
  uint64_t v32;
  char v33;

  OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_79();
  v6 = v4 - v5;
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = v31 - v9 + 16;
  MEMORY[0x1E0C80A78](v8);
  v12 = v31 - v11 + 16;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_58_0();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_81_2();
  MEMORY[0x1E0C80A78](v15);
  v17 = v31 - v16 + 16;
  v18 = v0 + OBJC_IVAR____TtC15ConversationKit27SharedContentViewController_participant;
  OUTLINED_FUNCTION_1();
  outlined init with copy of FeatureEligibility?(v18, (uint64_t)v17, &demangling cache variable for type metadata for Participant?);
  if (OUTLINED_FUNCTION_4_40((uint64_t)v17))
  {
    v19 = &demangling cache variable for type metadata for Participant?;
    v20 = v17;
LABEL_6:
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v20, v19);
    if (one-time initialization token for shared != -1)
      swift_once();
    (*(void (**)(void))(*(_QWORD *)static Defaults.shared + 392))();
    goto LABEL_9;
  }
  _s15ConversationKit11ParticipantVWOcTm_1((uint64_t)v17, (uint64_t)v12, type metadata accessor for Participant);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v17, &demangling cache variable for type metadata for Participant?);
  Participant.screenInfo.getter();
  outlined destroy of AccountUpdateNotice((uint64_t)v12, type metadata accessor for Participant);
  OUTLINED_FUNCTION_45_17();
  if (v21)
  {
    v19 = (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?;
    v20 = v31;
    goto LABEL_6;
  }
  if ((v33 & 1) == 0 && (v31[128] & 1) != 0)
  {
    switch(v32)
    {
      case 0:
      case 1:
      case 3:
      case 4:
        goto LABEL_24;
      case 2:
        Participant.ScreenInfo.isMaybeTouchIDDevice()();
        goto LABEL_24;
      default:
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TUScreenShareDeviceFamily?);
        _diagnoseUnexpectedEnumCase<A>(type:)();
        __break(1u);
        break;
    }
    return;
  }
LABEL_24:
  OUTLINED_FUNCTION_49_13();
LABEL_9:
  outlined init with copy of FeatureEligibility?(v18, v2, &demangling cache variable for type metadata for Participant?);
  if (OUTLINED_FUNCTION_4_40(v2))
  {
    v22 = &demangling cache variable for type metadata for Participant?;
    v23 = (_BYTE *)v2;
LABEL_14:
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v23, v22);
    goto LABEL_15;
  }
  _s15ConversationKit11ParticipantVWOcTm_1(v2, (uint64_t)v10, type metadata accessor for Participant);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v2, &demangling cache variable for type metadata for Participant?);
  Participant.screenInfo.getter();
  outlined destroy of AccountUpdateNotice((uint64_t)v10, type metadata accessor for Participant);
  OUTLINED_FUNCTION_45_17();
  if (v21)
  {
    v22 = (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?;
    v23 = v31;
    goto LABEL_14;
  }
  OUTLINED_FUNCTION_49_13();
LABEL_15:
  OUTLINED_FUNCTION_70_6(v18, v29, &demangling cache variable for type metadata for Participant?);
  if (OUTLINED_FUNCTION_4_40(v1))
  {
    v24 = &demangling cache variable for type metadata for Participant?;
    v25 = (_BYTE *)v1;
  }
  else
  {
    v26 = OUTLINED_FUNCTION_131();
    OUTLINED_FUNCTION_84_3(v26, v27);
    OUTLINED_FUNCTION_30_7(v28, &demangling cache variable for type metadata for Participant?);
    Participant.screenInfo.getter();
    outlined destroy of AccountUpdateNotice(v6, type metadata accessor for Participant);
    OUTLINED_FUNCTION_45_17();
    if (!v21)
    {
      OUTLINED_FUNCTION_49_13();
      return;
    }
    v24 = (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?;
    v25 = v31;
  }
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v25, v24);
}

void SharedContentViewController.systemRootLayerTransform.getter(double *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  _BYTE *v9;
  uint64_t v10;
  char v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  _BYTE v18[136];
  double v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  char v25;

  OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_16_2();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_1();
  v6 = OUTLINED_FUNCTION_64();
  OUTLINED_FUNCTION_68_6(v6, v7);
  if (OUTLINED_FUNCTION_46_7(v1))
  {
    v8 = &demangling cache variable for type metadata for Participant?;
    v9 = (_BYTE *)v1;
LABEL_6:
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v9, v8);
    goto LABEL_7;
  }
  _s15ConversationKit11ParticipantVWOcTm_1(v1, v2, type metadata accessor for Participant);
  OUTLINED_FUNCTION_32_18(v10, &demangling cache variable for type metadata for Participant?);
  Participant.screenInfo.getter();
  outlined destroy of AccountUpdateNotice(v2, type metadata accessor for Participant);
  OUTLINED_FUNCTION_45_17();
  if (v11)
  {
    v8 = (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?;
    v9 = v18;
    goto LABEL_6;
  }
  if ((v25 & 1) == 0)
  {
    v14 = v23;
    v13 = v24;
    v15 = v21;
    v12 = v22;
    v17 = v19;
    v16 = v20;
    outlined destroy of Participant.ScreenInfo((uint64_t)v18);
    goto LABEL_8;
  }
  outlined destroy of Participant.ScreenInfo((uint64_t)v18);
LABEL_7:
  v12 = 1.0;
  v13 = 0;
  v14 = 0;
  v15 = 0;
  v16 = 0;
  v17 = 1.0;
LABEL_8:
  *a1 = v17;
  *((_QWORD *)a1 + 1) = v16;
  *((_QWORD *)a1 + 2) = v15;
  a1[3] = v12;
  *((_QWORD *)a1 + 4) = v14;
  *((_QWORD *)a1 + 5) = v13;
}

void SharedContentViewController.animateOutPreviousScreenContent()()
{
  _QWORD *v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  _QWORD *v12;
  void *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if ((OUTLINED_FUNCTION_38_16(*v0) & 1) == 0)
  {
    v1 = OBJC_IVAR____TtC15ConversationKit27SharedContentViewController_previousScreenSnapshot;
    v2 = OUTLINED_FUNCTION_25_1((uint64_t)objc_msgSend(*(id *)((char *)v0+ OBJC_IVAR____TtC15ConversationKit27SharedContentViewController_previousScreenSnapshot), sel_removeFromSuperview), sel_view);
    if (v2)
    {
      v3 = v2;
      v4 = objc_msgSend(v2, sel_snapshotViewAfterScreenUpdates_, 0);

      SharedContentViewController.previousScreenSnapshot.setter((uint64_t)v4);
      v5 = *(void **)((char *)v0 + v1);
      if (!v5)
      {
LABEL_6:
        objc_msgSend(*(id *)((char *)v0 + OBJC_IVAR____TtC15ConversationKit27SharedContentViewController_sharedContentView), sel_setAlpha_, 0.0);
        v9 = (void *)objc_opt_self();
        *(_QWORD *)(OUTLINED_FUNCTION_15() + 16) = v0;
        v10 = MEMORY[0x1E0C809B0];
        v11 = OUTLINED_FUNCTION_9_2((uint64_t)thunk for @escaping @callee_guaranteed () -> (), MEMORY[0x1E0C809B0], 1107296256, v15, v17);
        v12 = v0;
        swift_release();
        *(_QWORD *)(OUTLINED_FUNCTION_15() + 16) = v12;
        v13 = OUTLINED_FUNCTION_9_2((uint64_t)thunk for @escaping @callee_guaranteed (@unowned Bool) -> (), v10, 1107296256, v16, v18);
        v14 = v12;
        swift_release();
        objc_msgSend(v9, sel_animateWithDuration_animations_completion_, v11, v13, 0.3);
        _Block_release(v13);
        _Block_release(v11);
        return;
      }
      v6 = v5;
      v7 = OUTLINED_FUNCTION_25_1((uint64_t)v6, sel_view);
      if (v7)
      {
        v8 = v7;
        objc_msgSend(v7, sel_addSubview_, v6);

        goto LABEL_6;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

id closure #1 in SharedContentViewController.animateOutPreviousScreenContent()(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + OBJC_IVAR____TtC15ConversationKit27SharedContentViewController_previousScreenSnapshot);
  if (v2)
    objc_msgSend(v2, sel_setAlpha_, 0.0);
  return objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC15ConversationKit27SharedContentViewController_sharedContentView), sel_setAlpha_, 1.0);
}

void closure #2 in SharedContentViewController.animateOutPreviousScreenContent()(uint64_t a1, uint64_t a2)
{
  objc_msgSend(*(id *)(a2 + OBJC_IVAR____TtC15ConversationKit27SharedContentViewController_previousScreenSnapshot), sel_removeFromSuperview);
  SharedContentViewController.previousScreenSnapshot.setter(0);
}

id SharedContentViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)MEMORY[0x1C3B72E00]();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void SharedContentViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id SharedContentViewController.__deallocating_deinit()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  objc_super v8;

  v8.receiver = v0;
  v8.super_class = (Class)ObjC metadata update function for SharedContentViewController();
  return OUTLINED_FUNCTION_90_0((uint64_t)v8.super_class, sel_dealloc, v1, v2, v3, v4, v5, v6, v8);
}

void __swiftcall SharedContentViewController.viewForZooming(in:)(UIView_optional *__return_ptr retstr, UIScrollView *in)
{
  uint64_t v2;
  id v3;

  v3 = *(id *)(v2 + OBJC_IVAR____TtC15ConversationKit27SharedContentViewController_sharedContentView);
  OUTLINED_FUNCTION_0();
}

Swift::Void __swiftcall SharedContentViewController.scrollViewDidZoom(_:)(UIScrollView *a1)
{
  SharedContentViewController.centerSharedContentView(in:)(a1);
  SharedContentViewController.updateCornerRadius()();
}

id SharedContentViewController.scrollViewDidEndZooming(_:with:atScale:)(void *a1)
{
  SharedContentViewController.centerSharedContentView(in:)(a1);
  return SharedContentViewController.updateCornerRadius()();
}

CGSize __swiftcall SharedContentViewController.preferredPiPContentAspectRatio()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  CGSize result;
  uint64_t v43;
  uint64_t v44;
  char v45;
  double v46;
  double v47;
  double v48;
  double v49;
  char v50;

  OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_79();
  v5 = v3 - v4;
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v43 - v8;
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v43 - v10;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_5_27();
  v44 = v13;
  OUTLINED_FUNCTION_8_4();
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v43 - v16;
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_108_0();
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v43 - v19;
  v21 = v0 + OBJC_IVAR____TtC15ConversationKit27SharedContentViewController_participant;
  OUTLINED_FUNCTION_1();
  v22 = v21;
  OUTLINED_FUNCTION_87_0(v21, (uint64_t)v20);
  v23 = OUTLINED_FUNCTION_46_7((uint64_t)v20);
  if ((_DWORD)v23)
    goto LABEL_2;
  OUTLINED_FUNCTION_33_14((uint64_t)v20, (uint64_t)v11);
  OUTLINED_FUNCTION_60_8(v24, &demangling cache variable for type metadata for Participant?);
  v25 = Participant.deviceOrientation.getter();
  v27 = v26;
  OUTLINED_FUNCTION_110((uint64_t)v11);
  if ((v27 & 1) != 0)
    goto LABEL_13;
  if ((v25 | 2) == 3)
  {
    outlined init with copy of FeatureEligibility?(v22, v1, &demangling cache variable for type metadata for Participant?);
    v23 = OUTLINED_FUNCTION_46_7(v1);
    if ((_DWORD)v23)
    {
LABEL_2:
      OUTLINED_FUNCTION_60_8(v23, &demangling cache variable for type metadata for Participant?);
LABEL_13:
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      static os_log_type_t.info.getter();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v36 = OUTLINED_FUNCTION_15();
      *(_OWORD *)(v36 + 16) = xmmword_1BD6441D0;
      v37 = v44;
      OUTLINED_FUNCTION_68_6(v22, v44);
      specialized >> prefix<A>(_:)(v37);
      v39 = v38;
      v41 = v40;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v37, &demangling cache variable for type metadata for Participant?);
      *(_QWORD *)(v36 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v36 + 64) = lazy protocol witness table accessor for type String and conformance String();
      *(_QWORD *)(v36 + 32) = v39;
      *(_QWORD *)(v36 + 40) = v41;
      os_log(_:dso:log:type:_:)();
      OUTLINED_FUNCTION_133();
      v31 = 100.0;
      v32 = 100.0;
      goto LABEL_19;
    }
    OUTLINED_FUNCTION_33_14(v1, (uint64_t)v9);
    OUTLINED_FUNCTION_92_1(v28, &demangling cache variable for type metadata for Participant?);
    Participant.aspectRatio.getter();
    OUTLINED_FUNCTION_110((uint64_t)v9);
    OUTLINED_FUNCTION_72_7(v29, v30, &demangling cache variable for type metadata for AspectRatio?);
    if ((v45 & 1) != 0)
      goto LABEL_13;
    OUTLINED_FUNCTION_71_9();
    OUTLINED_FUNCTION_69_7();
    v31 = 1.0;
    v32 = 1.0;
    if ((v50 & 1) == 0)
    {
      v31 = v46;
      v32 = v47;
    }
  }
  else
  {
    outlined init with copy of FeatureEligibility?(v22, (uint64_t)v17, &demangling cache variable for type metadata for Participant?);
    v23 = OUTLINED_FUNCTION_46_7((uint64_t)v17);
    if ((_DWORD)v23)
      goto LABEL_2;
    OUTLINED_FUNCTION_33_14((uint64_t)v17, v5);
    OUTLINED_FUNCTION_96_3(v33, &demangling cache variable for type metadata for Participant?);
    Participant.aspectRatio.getter();
    OUTLINED_FUNCTION_110(v5);
    OUTLINED_FUNCTION_72_7(v34, v35, &demangling cache variable for type metadata for AspectRatio?);
    if ((v45 & 1) != 0)
      goto LABEL_13;
    OUTLINED_FUNCTION_71_9();
    OUTLINED_FUNCTION_69_7();
    v31 = 1.0;
    v32 = 1.0;
    if ((v50 & 1) == 0)
    {
      v31 = v48;
      v32 = v49;
    }
  }
LABEL_19:
  result.height = v32;
  result.width = v31;
  return result;
}

__C::CGRect __swiftcall SharedContentViewController.frameForRestoreAnimation()()
{
  id v0;
  double v1;
  double v2;
  double v3;
  double v4;
  __C::CGRect result;

  v0 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
  objc_msgSend(v0, sel__referenceBounds);
  OUTLINED_FUNCTION_89();

  v1 = OUTLINED_FUNCTION_66();
  result.size.height = v4;
  result.size.width = v3;
  result.origin.y = v2;
  result.origin.x = v1;
  return result;
}

void __swiftcall SharedContentViewController.viewControllerForPiP()(UIViewController_optional *__return_ptr retstr)
{
  void *v1;
  id v2;

  v2 = v1;
}

Swift::Bool __swiftcall SharedContentViewController.restoreViewControllerHierarchyWhenExitingPiP()()
{
  return 1;
}

Swift::String_optional __swiftcall SharedContentViewController.sharedContentSourceName()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  Swift::String_optional result;
  uint64_t v19;

  type metadata accessor for SharedContentViewModel.ParticipantDetails(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_30_6();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_79();
  v7 = v5 - v6;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v19 - v9;
  OUTLINED_FUNCTION_1();
  v11 = OUTLINED_FUNCTION_64();
  outlined init with copy of FeatureEligibility?(v11, v12, &demangling cache variable for type metadata for Participant?);
  v13 = OUTLINED_FUNCTION_21_24((uint64_t)v3);
  if (v14)
  {
    OUTLINED_FUNCTION_32_18(v13, &demangling cache variable for type metadata for Participant?);
  }
  else
  {
    outlined init with take of Participant((uint64_t)v3, (uint64_t)v10);
    OUTLINED_FUNCTION_85_3((uint64_t)v10, v7);
    SharedContentViewModel.ParticipantDetails.init(participant:)();
    outlined destroy of AccountUpdateNotice((uint64_t)v10, type metadata accessor for Participant);
    v15 = swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_35_2(v15, type metadata accessor for SharedContentViewModel.ParticipantDetails);
  }
  v16 = OUTLINED_FUNCTION_64();
  result.value._object = v17;
  result.value._countAndFlagsBits = v16;
  return result;
}

void specialized SharedContentViewController.getSharedContentSourceAvatarWithImageHandler(_:)(uint64_t a1, void (**a2)(_QWORD, _QWORD))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int EnumTagSinglePayload;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  id v46;
  uint64_t v47;
  id v48;
  Class isa;
  id v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  id v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  _QWORD *v66;
  void *v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  void (**v74)(_QWORD, _QWORD);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  id aBlock;
  uint64_t v88;
  uint64_t (*v89)(uint64_t);
  void *v90;
  uint64_t (*v91)();
  _QWORD *v92;
  void *v93;
  uint64_t v94;

  v4 = type metadata accessor for DispatchWorkItemFlags();
  v81 = *(_QWORD *)(v4 - 8);
  v82 = v4;
  MEMORY[0x1E0C80A78](v4);
  v80 = (uint64_t)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = type metadata accessor for DispatchQoS();
  v78 = *(_QWORD *)(v79 - 8);
  MEMORY[0x1E0C80A78](v79);
  v77 = (uint64_t)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for PersonNameComponents();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Participant(0);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v72 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v12);
  v75 = (uint64_t)&v72 - v16;
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v72 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  v20 = MEMORY[0x1E0C80A78](v19);
  v84 = (uint64_t)&v72 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x1E0C80A78](v20);
  v83 = (uint64_t)&v72 - v23;
  v24 = MEMORY[0x1E0C80A78](v22);
  v85 = (uint64_t)&v72 - v25;
  MEMORY[0x1E0C80A78](v24);
  v27 = (char *)&v72 - v26;
  v86 = swift_allocObject();
  *(_QWORD *)(v86 + 16) = a2;
  v76 = a1;
  v28 = a1 + OBJC_IVAR____TtC15ConversationKit27SharedContentViewController_participant;
  swift_beginAccess();
  outlined init with copy of FeatureEligibility?(v28, (uint64_t)v27, &demangling cache variable for type metadata for Participant?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v27, 1, v11))
  {
    _Block_copy(a2);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v27, &demangling cache variable for type metadata for Participant?);
    goto LABEL_3;
  }
  _s15ConversationKit11ParticipantVWOcTm_1((uint64_t)v27, (uint64_t)v18, type metadata accessor for Participant);
  _Block_copy(a2);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v27, &demangling cache variable for type metadata for Participant?);
  v45 = *(void **)&v18[*(int *)(v11 + 28)];
  v74 = a2;
  if (v45)
  {
    v46 = v45;
    outlined bridged method (pb) of @objc TUHandle.siriDisplayName.getter(v46);
    if (v47)
    {
      if ((objc_msgSend(v46, sel_shouldHideContact) & 1) != 0)
      {
        v73 = v46;
        swift_bridgeObjectRetain();
        PersonNameComponents.init()();
        PersonNameComponents.givenName.setter();
        PersonNameComponents.familyName.setter();
        if (one-time initialization token for initials != -1)
          swift_once();
        swift_beginAccess();
        v48 = (id)static NSPersonNameComponentsFormatter.initials;
        isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
        v50 = objc_msgSend(v48, sel_stringFromPersonNameComponents_, isa);

        v51 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
        v53 = v52;

        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
        aBlock = v51;
        v88 = v53;
        lazy protocol witness table accessor for type String and conformance String();
        StringProtocol.localizedUppercase.getter();

        swift_bridgeObjectRelease();
        outlined destroy of AccountUpdateNotice((uint64_t)v18, type metadata accessor for Participant);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        a2 = v74;
        goto LABEL_3;
      }

      swift_bridgeObjectRelease();
    }
    else
    {

    }
  }
  _s15ConversationKit11ParticipantVWOcTm_1((uint64_t)v18, (uint64_t)v14, type metadata accessor for Participant);
  swift_retain();
  ParticipantContactDetailsCache.contactDetails(for:)((uint64_t)v14, v58, v59, v60, v61, v62, v63, v64, v72, (uint64_t)v73, (uint64_t)v74, v75, v76, v77, v78, v79, v80, v81, v82,
    v83);
  v65 = aBlock;
  v73 = v93;
  v57 = aBlock;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  outlined destroy of AccountUpdateNotice((uint64_t)v14, type metadata accessor for Participant);
  outlined destroy of AccountUpdateNotice((uint64_t)v18, type metadata accessor for Participant);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a2 = v74;
  swift_bridgeObjectRelease();
  if (v65)
    goto LABEL_26;
LABEL_3:
  v29 = v85;
  outlined init with copy of FeatureEligibility?(v28, v85, &demangling cache variable for type metadata for Participant?);
  if (!__swift_getEnumTagSinglePayload(v29, 1, v11))
  {
    v54 = v75;
    _s15ConversationKit11ParticipantVWOcTm_1(v29, v75, type metadata accessor for Participant);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v29, &demangling cache variable for type metadata for Participant?);
    v55 = *(void **)(v54 + *(int *)(v11 + 28));
    if (!v55)
    {
      outlined destroy of AccountUpdateNotice(v54, type metadata accessor for Participant);
      goto LABEL_5;
    }
    v56 = v55;
    outlined destroy of AccountUpdateNotice(v54, type metadata accessor for Participant);
    v57 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97360]), sel__initWithHandle_, v56);

LABEL_26:
    v66 = (_QWORD *)swift_allocObject();
    v66[2] = v57;
    v66[3] = partial apply for thunk for @escaping @callee_unowned @convention(block) (@unowned UIImage?) -> ();
    v66[4] = v86;
    v91 = closure #1 in SharedContentViewController.getSharedContentSourceAvatarWithImageHandler(_:)partial apply;
    v92 = v66;
    aBlock = (id)MEMORY[0x1E0C809B0];
    v88 = 1107296256;
    v89 = thunk for @escaping @callee_guaranteed @Sendable () -> ();
    v90 = &block_descriptor_25;
    v67 = _Block_copy(&aBlock);
    v68 = v57;
    swift_retain();
    v69 = v77;
    static DispatchQoS.unspecified.getter();
    v94 = MEMORY[0x1E0DEE9D8];
    _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    _sSay8Dispatch0A13WorkItemFlagsVGSayxGSTsWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    v70 = v80;
    v71 = v82;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    MEMORY[0x1C3B7361C](0, v69, v70, v67);
    _Block_release(v67);

    (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v70, v71);
    (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v69, v79);

    swift_release();
    goto LABEL_27;
  }
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v29, &demangling cache variable for type metadata for Participant?);
LABEL_5:
  v30 = v83;
  outlined init with copy of FeatureEligibility?(v28, v83, &demangling cache variable for type metadata for Participant?);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v30, 1, v11);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v30, &demangling cache variable for type metadata for Participant?);
  if (EnumTagSinglePayload == 1)
    v32 = 1819047278;
  else
    v32 = 0x6C6C756E6E6F6ELL;
  if (EnumTagSinglePayload == 1)
    v33 = 0xE400000000000000;
  else
    v33 = 0xE700000000000000;
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  static os_log_type_t.error.getter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_1BD645380;
  aBlock = (id)v32;
  v88 = v33;
  v35 = MEMORY[0x1E0DEA968];
  v36 = String.init<A>(reflecting:)();
  v38 = v37;
  *(_QWORD *)(v34 + 56) = v35;
  v39 = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v34 + 64) = v39;
  *(_QWORD *)(v34 + 32) = v36;
  *(_QWORD *)(v34 + 40) = v38;
  v40 = v84;
  outlined init with copy of FeatureEligibility?(v28, v84, &demangling cache variable for type metadata for Participant?);
  specialized >> prefix<A>(_:)(v40);
  v42 = v41;
  v44 = v43;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v40, &demangling cache variable for type metadata for Participant?);
  *(_QWORD *)(v34 + 96) = v35;
  *(_QWORD *)(v34 + 104) = v39;
  *(_QWORD *)(v34 + 72) = v42;
  *(_QWORD *)(v34 + 80) = v44;
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  a2[2](a2, 0);
LABEL_27:
  swift_release();
  _Block_release(a2);
}

void SharedContentViewController.getSharedContentSourceAvatarWithImageHandler(_:)(void (*a1)(_QWORD), uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  id v52;
  uint64_t v53;
  id v54;
  Class isa;
  id v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  id v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  uint64_t v75;
  uint64_t (*v76)(_QWORD);
  _QWORD *v77;
  void (*v78)(_QWORD);
  void *v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void (*v98)(_QWORD);
  id aBlock;
  uint64_t v100;
  uint64_t (*v101)(uint64_t);
  void *v102;
  void (*v103)();
  _QWORD *v104;
  uint64_t v105;

  v97 = a2;
  v98 = a1;
  v5 = type metadata accessor for DispatchWorkItemFlags();
  v92 = *(_QWORD *)(v5 - 8);
  v93 = v5;
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_41();
  v91 = v6;
  v90 = type metadata accessor for DispatchQoS();
  v89 = *(_QWORD *)(v90 - 8);
  MEMORY[0x1E0C80A78](v90);
  OUTLINED_FUNCTION_41();
  v88 = v7;
  v8 = type metadata accessor for PersonNameComponents();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v84 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_5_27();
  v86 = v14;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_81_2();
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v84 - v17;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_5_27();
  v95 = v20;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v21);
  v94 = (uint64_t)&v84 - v22;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v23);
  OUTLINED_FUNCTION_108_0();
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v84 - v25;
  v87 = v2;
  v27 = v2 + OBJC_IVAR____TtC15ConversationKit27SharedContentViewController_participant;
  OUTLINED_FUNCTION_1();
  v96 = v27;
  outlined init with copy of FeatureEligibility?(v27, (uint64_t)v26, &demangling cache variable for type metadata for Participant?);
  v28 = OUTLINED_FUNCTION_4_40((uint64_t)v26);
  if ((_DWORD)v28)
  {
    OUTLINED_FUNCTION_96_3(v28, &demangling cache variable for type metadata for Participant?);
LABEL_3:
    v29 = v97;
    goto LABEL_4;
  }
  v84 = v9;
  v85 = v8;
  _s15ConversationKit11ParticipantVWOcTm_1((uint64_t)v26, (uint64_t)v18, type metadata accessor for Participant);
  OUTLINED_FUNCTION_96_3(v50, &demangling cache variable for type metadata for Participant?);
  v51 = *(void **)&v18[*(int *)(v12 + 28)];
  if (v51)
  {
    v52 = v51;
    outlined bridged method (pb) of @objc TUHandle.siriDisplayName.getter(v52);
    if (v53)
    {
      if ((objc_msgSend(v52, sel_shouldHideContact) & 1) != 0)
      {
        swift_bridgeObjectRetain();
        PersonNameComponents.init()();
        PersonNameComponents.givenName.setter();
        PersonNameComponents.familyName.setter();
        if (one-time initialization token for initials != -1)
          swift_once();
        OUTLINED_FUNCTION_1();
        v54 = (id)static NSPersonNameComponentsFormatter.initials;
        isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
        v56 = objc_msgSend(v54, sel_stringFromPersonNameComponents_, isa);

        v57 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
        v59 = v58;

        (*(void (**)(char *, uint64_t))(v84 + 8))(v11, v85);
        aBlock = v57;
        v100 = v59;
        lazy protocol witness table accessor for type String and conformance String();
        StringProtocol.localizedUppercase.getter();

        v60 = swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_22_29(v60, type metadata accessor for Participant);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        goto LABEL_3;
      }

      OUTLINED_FUNCTION_133();
    }
    else
    {

    }
  }
  _s15ConversationKit11ParticipantVWOcTm_1((uint64_t)v18, v3, type metadata accessor for Participant);
  swift_retain();
  ParticipantContactDetailsCache.contactDetails(for:)(v3, v67, v68, v69, v70, v71, v72, v73, v84, v85, v86, v87, v88, v89, v90, v91, v92, v93, v94,
    v95);
  v74 = aBlock;
  v66 = aBlock;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  outlined destroy of AccountUpdateNotice(v3, type metadata accessor for Participant);
  v75 = OUTLINED_FUNCTION_131();
  outlined destroy of AccountUpdateNotice(v75, v76);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_133();
  swift_bridgeObjectRelease();
  v29 = v97;
  if (v74)
    goto LABEL_27;
LABEL_4:
  v30 = v96;
  outlined init with copy of FeatureEligibility?(v96, v4, &demangling cache variable for type metadata for Participant?);
  v31 = OUTLINED_FUNCTION_4_40(v4);
  if (!(_DWORD)v31)
  {
    v61 = v86;
    _s15ConversationKit11ParticipantVWOcTm_1(v4, v86, type metadata accessor for Participant);
    OUTLINED_FUNCTION_92_1(v62, &demangling cache variable for type metadata for Participant?);
    v64 = *(void **)(v61 + *(int *)(v12 + 28));
    if (!v64)
    {
      OUTLINED_FUNCTION_22_29(v63, type metadata accessor for Participant);
      goto LABEL_6;
    }
    v65 = v64;
    OUTLINED_FUNCTION_22_29((uint64_t)v65, type metadata accessor for Participant);
    v66 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97360]), sel__initWithHandle_, v65);

LABEL_27:
    v77 = (_QWORD *)OUTLINED_FUNCTION_15();
    v78 = v98;
    v77[2] = v66;
    v77[3] = v78;
    v77[4] = v29;
    v103 = partial apply for closure #1 in SharedContentViewController.getSharedContentSourceAvatarWithImageHandler(_:);
    v104 = v77;
    aBlock = (id)MEMORY[0x1E0C809B0];
    v100 = 1107296256;
    v101 = thunk for @escaping @callee_guaranteed @Sendable () -> ();
    v102 = &block_descriptor_6_0;
    v79 = _Block_copy(&aBlock);
    v80 = v66;
    partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
    v81 = v88;
    static DispatchQoS.unspecified.getter();
    v105 = MEMORY[0x1E0DEE9D8];
    _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    _sSay8Dispatch0A13WorkItemFlagsVGSayxGSTsWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    v82 = v91;
    v83 = v93;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    MEMORY[0x1C3B7361C](0, v81, v82, v79);
    _Block_release(v79);

    (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v82, v83);
    (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v81, v90);

    swift_release();
    goto LABEL_28;
  }
  OUTLINED_FUNCTION_92_1(v31, &demangling cache variable for type metadata for Participant?);
LABEL_6:
  v32 = v94;
  outlined init with copy of FeatureEligibility?(v30, v94, &demangling cache variable for type metadata for Participant?);
  v33 = OUTLINED_FUNCTION_4_40(v32);
  v34 = OUTLINED_FUNCTION_131();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v34, v35);
  if (v33 == 1)
    v36 = 1819047278;
  else
    v36 = 0x6C6C756E6E6F6ELL;
  if (v33 == 1)
    v37 = 0xE400000000000000;
  else
    v37 = 0xE700000000000000;
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  static os_log_type_t.error.getter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v38 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v38 + 16) = xmmword_1BD645380;
  aBlock = (id)v36;
  v100 = v37;
  v39 = MEMORY[0x1E0DEA968];
  v40 = String.init<A>(reflecting:)();
  v42 = v41;
  *(_QWORD *)(v38 + 56) = v39;
  v43 = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v38 + 64) = v43;
  *(_QWORD *)(v38 + 32) = v40;
  *(_QWORD *)(v38 + 40) = v42;
  v44 = v30;
  v45 = v95;
  outlined init with copy of FeatureEligibility?(v44, v95, &demangling cache variable for type metadata for Participant?);
  specialized >> prefix<A>(_:)(v45);
  v47 = v46;
  v49 = v48;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v45, &demangling cache variable for type metadata for Participant?);
  *(_QWORD *)(v38 + 96) = v39;
  *(_QWORD *)(v38 + 104) = v43;
  *(_QWORD *)(v38 + 72) = v47;
  *(_QWORD *)(v38 + 80) = v49;
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  v98(0);
LABEL_28:
  OUTLINED_FUNCTION_52_1();
}

void closure #1 in SharedContentViewController.getSharedContentSourceAvatarWithImageHandler(_:)(void *a1, void (*a2)(id))
{
  id v4;
  id v5;
  _BOOL8 v6;
  void *v7;
  id v8;
  double v9;
  double v10;
  id v11;
  id v12;
  uint64_t v13;
  id v14;
  Class isa;
  id v16;
  id v17;

  v4 = objc_msgSend((id)objc_opt_self(), sel_currentTraitCollection);
  v5 = objc_msgSend(v4, sel_layoutDirection);

  v6 = v5 == (id)1;
  v7 = (void *)objc_opt_self();
  v8 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
  objc_msgSend(v8, sel_scale);
  v10 = v9;

  v11 = objc_msgSend(v7, sel_scopeWithPointSize_scale_rightToLeft_style_, v6, 0, 28.0, 28.0, v10);
  v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97450]), sel_init);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1BD6443F0;
  *(_QWORD *)(v13 + 32) = a1;
  specialized Array._endMutation()();
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for CNContact);
  v14 = a1;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v16 = objc_msgSend(v12, sel_avatarImageForContacts_scope_, isa, v11);

  v17 = v16;
  a2(v16);
  swift_unknownObjectRelease();

}

void SharedContentViewController.screenSharingStateMonitorDidUpdateScreenInfoForParticipant(_:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  _QWORD *v11;
  void (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  os_log_type_t v22;
  _DWORD *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28[4];

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_58_0();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v28 - v4;
  v6 = OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ScreenSharingStateMonitor();
  v10 = (_QWORD *)swift_dynamicCastClass();
  if (v10)
  {
    v11 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    v12 = *(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v10) + 0x108);
    v13 = swift_unknownObjectRetain();
    v12(v13);
    if (__swift_getEnumTagSinglePayload((uint64_t)v5, 1, v6) == 1)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v5, &demangling cache variable for type metadata for Participant?);
      static os_log_type_t.error.getter();
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v14 = OUTLINED_FUNCTION_15();
      *(_OWORD *)(v14 + 16) = xmmword_1BD6441D0;
      v15 = (uint64_t)v0 + OBJC_IVAR____TtC15ConversationKit27SharedContentViewController_participant;
      OUTLINED_FUNCTION_1();
      outlined init with copy of FeatureEligibility?(v15, v1, &demangling cache variable for type metadata for Participant?);
      specialized >> prefix<A>(_:)(v1);
      v17 = v16;
      v19 = v18;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v1, &demangling cache variable for type metadata for Participant?);
      *(_QWORD *)(v14 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v14 + 64) = lazy protocol witness table accessor for type String and conformance String();
      *(_QWORD *)(v14 + 32) = v17;
      *(_QWORD *)(v14 + 40) = v19;
      os_log(_:dso:log:_:_:)();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      outlined init with take of Participant((uint64_t)v5, (uint64_t)v9);
      (*(void (**)(char *))((*v11 & *v0) + 0x178))(v9);
      swift_unknownObjectRelease();
      outlined destroy of AccountUpdateNotice((uint64_t)v9, type metadata accessor for Participant);
    }
  }
  else
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    v20 = OUTLINED_FUNCTION_17_2();
    __swift_project_value_buffer(v20, (uint64_t)&static Logger.conversationKit);
    swift_unknownObjectRetain_n();
    v21 = (void *)Logger.logObject.getter();
    v22 = static os_log_type_t.fault.getter();
    if (OUTLINED_FUNCTION_51_3(v22))
    {
      v23 = (_DWORD *)OUTLINED_FUNCTION_105();
      v28[0] = OUTLINED_FUNCTION_105();
      *v23 = 136315138;
      swift_getObjectType();
      v24 = _typeName(_:qualified:)();
      v28[3] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v24, v25, v28);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_97_0();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_40_17(&dword_1BD004000, v26, v27, "screenSharingStateMonitorDidUpdateScreenInfoForParticipant(_:) was unexpectedly passed a %s");
      OUTLINED_FUNCTION_56();
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_97_0();
  }
  OUTLINED_FUNCTION_52_1();
}

uint64_t type metadata accessor for SharedContentViewController()
{
  uint64_t result;

  result = type metadata singleton initialization cache for SharedContentViewController;
  if (!type metadata singleton initialization cache for SharedContentViewController)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BD0DA998()
{
  swift_unknownObjectWeakDestroy();
  OUTLINED_FUNCTION_58();
  return swift_deallocObject();
}

void partial apply for closure #1 in SharedContentViewController.viewWillTransition(to:with:)(uint64_t a1)
{
  uint64_t v1;

  closure #1 in SharedContentViewController.viewWillTransition(to:with:)(a1, v1);
}

void _s15ConversationKit11ParticipantVWOcTm_1(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = a3(0);
  OUTLINED_FUNCTION_38(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  OUTLINED_FUNCTION_0();
}

void outlined assign with take of Participant?(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_83(a1, a2, a3);
  OUTLINED_FUNCTION_38(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40));
  OUTLINED_FUNCTION_0();
}

double _sSo13CATransform3DVSgWOi0_(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_BYTE *)(a1 + 128) = 1;
  return result;
}

uint64_t _sSo13CATransform3DVSgWOi_(uint64_t result)
{
  *(_BYTE *)(result + 128) = 0;
  return result;
}

uint64_t _sSo13CATransform3DVSgWOg(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 128))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

void partial apply for closure #1 in SharedContentViewController.getSharedContentSourceAvatarWithImageHandler(_:)()
{
  uint64_t v0;

  closure #1 in SharedContentViewController.getSharedContentSourceAvatarWithImageHandler(_:)(*(void **)(v0 + 16), *(void (**)(id))(v0 + 24));
}

void outlined bridged method (pb) of @objc TUHandle.siriDisplayName.getter(void *a1)
{
  id v1;
  void *v2;

  v1 = objc_msgSend(a1, sel_siriDisplayName);
  if (v1)
  {
    v2 = v1;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

  }
  OUTLINED_FUNCTION_18();
}

void sub_1BD0DAACC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0xB0))();
  v0[1] = v2;
  OUTLINED_FUNCTION_0();
}

void sub_1BD0DAB04()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  v1 = OUTLINED_FUNCTION_38_16(v0);
  OUTLINED_FUNCTION_68_0(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD0DAB30(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_31_5(a1);
  (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & v2) + 0xD0))(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD0DAB60()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  v1 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v0) + 0xE0))();
  OUTLINED_FUNCTION_68_0(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD0DAB94(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_31_5(a1);
  (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & v2) + 0xE8))(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD0DABC4()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  v1 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v0) + 0xF8))();
  OUTLINED_FUNCTION_68_0(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD0DABF8(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_31_5(a1);
  (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & v2) + 0x100))(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD0DAC28()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  v1 = OUTLINED_FUNCTION_37_2(v0);
  OUTLINED_FUNCTION_68_0(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD0DAC54(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_31_5(a1);
  (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & v2) + 0x118))(v1);
  OUTLINED_FUNCTION_0();
}

uint64_t dispatch thunk of SharedContentViewControllerDelegate.sharedContentViewControllerDidUpdateScreenInfo(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

void type metadata completion function for SharedContentViewController()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for Participant?(319, (unint64_t *)&lazy cache variable for type metadata for Participant?, (void (*)(uint64_t))type metadata accessor for Participant);
  if (v0 <= 0x3F)
  {
    type metadata accessor for Participant?(319, &lazy cache variable for type metadata for SharedContentViewModel?, (void (*)(uint64_t))type metadata accessor for SharedContentViewModel);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for SharedContentViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SharedContentViewController.delegate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of SharedContentViewController.delegate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of SharedContentViewController.delegate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of SharedContentViewController.isPipped.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of SharedContentViewController.isPipped.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of SharedContentViewController.isPipped.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of SharedContentViewController.isPaused.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of SharedContentViewController.isPaused.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of SharedContentViewController.isPaused.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of SharedContentViewController.isZoomEnabled.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of SharedContentViewController.isZoomEnabled.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of SharedContentViewController.isZoomEnabled.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of SharedContentViewController.isContentTransformEnabled.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x110))();
}

uint64_t dispatch thunk of SharedContentViewController.isContentTransformEnabled.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x118))();
}

uint64_t dispatch thunk of SharedContentViewController.isContentTransformEnabled.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x120))();
}

uint64_t dispatch thunk of SharedContentViewController.updateScreenSharing(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x178))();
}

void type metadata accessor for Participant?(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = type metadata accessor for Optional();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_1BD0DAF80()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  OUTLINED_FUNCTION_58();
  return swift_deallocObject();
}

uint64_t partial apply for thunk for @escaping @callee_unowned @convention(block) (@unowned UIImage?) -> ()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t objectdestroy_2Tm_0()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BD0DAFDC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_58();
  return swift_deallocObject();
}

id partial apply for closure #1 in SharedContentViewController.animateOutPreviousScreenContent()()
{
  uint64_t v0;

  return closure #1 in SharedContentViewController.animateOutPreviousScreenContent()(*(_QWORD *)(v0 + 16));
}

void partial apply for closure #2 in SharedContentViewController.animateOutPreviousScreenContent()(uint64_t a1)
{
  uint64_t v1;

  closure #2 in SharedContentViewController.animateOutPreviousScreenContent()(a1, *(_QWORD *)(v1 + 16));
}

uint64_t OUTLINED_FUNCTION_39_19()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v1, 0, 1, *(_QWORD *)(v0 + 88));
}

uint64_t OUTLINED_FUNCTION_75_6()
{
  uint64_t v0;

  return outlined init with take of AspectRatio(v0 - 160, v0 - 120);
}

uint64_t OUTLINED_FUNCTION_76_6()
{
  uint64_t v0;

  return outlined init with take of AspectRatio(v0 - 200, v0 - 160);
}

void OUTLINED_FUNCTION_85_3(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  _s15ConversationKit11ParticipantVWOcTm_1(a1, a2, v2);
}

uint64_t AsyncCancellableTimer.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  swift_defaultActor_initialize();
  *(_QWORD *)(v0 + 112) = 0;
  return v0;
}

uint64_t AsyncCancellableTimer.init()()
{
  uint64_t v0;

  swift_defaultActor_initialize();
  *(_QWORD *)(v0 + 112) = 0;
  return v0;
}

uint64_t AsyncCancellableTimer.wait(with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  v3[5] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t AsyncCancellableTimer.wait(with:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;

  AsyncCancellableTimer.cancel()();
  static Duration.zero.getter();
  if ((static Duration.== infix(_:_:)() & 1) == 0)
  {
    v1 = *(_QWORD *)(v0 + 32);
    v2 = *(_QWORD *)(v0 + 40);
    v4 = *(_QWORD *)(v0 + 16);
    v3 = *(_QWORD *)(v0 + 24);
    static TaskPriority.userInitiated.getter();
    v5 = type metadata accessor for TaskPriority();
    __swift_storeEnumTagSinglePayload(v2, 0, 1, v5);
    v6 = (_QWORD *)swift_allocObject();
    v6[2] = 0;
    v6[3] = 0;
    v6[4] = v4;
    v6[5] = v3;
    *(_QWORD *)(v1 + 112) = _sScTss5Error_pRs_rlE8priority9operationScTyxsAA_pGScPSg_xyYaKYAcntcfCyt_Tgm5(v2, (uint64_t)&async function pointer to partial apply for closure #1 in AsyncCancellableTimer.wait(with:), (uint64_t)v6);
    swift_release();
    v7 = *(_QWORD *)(v1 + 112);
    *(_QWORD *)(v0 + 48) = v7;
    if (v7)
    {
      swift_retain();
      v8 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 56) = v8;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
      *v8 = v0;
      v8[1] = AsyncCancellableTimer.wait(with:);
      return Task.value.getter();
    }
    *(_QWORD *)(*(_QWORD *)(v0 + 32) + 112) = 0;
  }
  OUTLINED_FUNCTION_3_42();
  return OUTLINED_FUNCTION_1_8(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0)
    swift_release();
  return OUTLINED_FUNCTION_0_6();
}

{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(*(_QWORD *)(v0 + 32) + 112) = 0;
  swift_release();
  OUTLINED_FUNCTION_3_42();
  return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_3_42();
  return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v0 + 8));
}

Swift::Void __swiftcall AsyncCancellableTimer.cancel()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 112);
  if (v1)
  {
    swift_retain();
    v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
    MEMORY[0x1C3B73268](v1, MEMORY[0x1E0DEE9C0] + 8, v2, MEMORY[0x1E0DEDB38]);
    swift_release();
  }
}

uint64_t closure #1 in AsyncCancellableTimer.wait(with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5[2] = a4;
  v5[3] = a5;
  v6 = type metadata accessor for ContinuousClock.Instant();
  v5[4] = v6;
  v5[5] = *(_QWORD *)(v6 - 8);
  v5[6] = swift_task_alloc();
  v5[7] = swift_task_alloc();
  v7 = type metadata accessor for ContinuousClock();
  v5[8] = v7;
  v5[9] = *(_QWORD *)(v7 - 8);
  v5[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t closure #1 in AsyncCancellableTimer.wait(with:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);
  _QWORD *v5;

  v1 = v0[5];
  v3 = v0[2];
  v2 = v0[3];
  ContinuousClock.init()();
  static ContinuousClock.Instant.now.getter();
  MEMORY[0x1C3B73DE4](v3, v2);
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8);
  v0[11] = v4;
  OUTLINED_FUNCTION_4_41(v4);
  v5 = (_QWORD *)swift_task_alloc();
  v0[12] = v5;
  *v5 = v0;
  v5[1] = closure #1 in AsyncCancellableTimer.wait(with:);
  return ContinuousClock.sleep(until:tolerance:)();
}

{
  uint64_t v0;
  uint64_t *v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(void (**)(uint64_t, uint64_t))(*v1 + 88);
  v3 = *(_QWORD *)(*v1 + 72);
  v4 = *(_QWORD *)(*v1 + 56);
  v5 = *(_QWORD *)(*v1 + 32);
  v6 = *v1;
  *(_QWORD *)(v6 + 104) = v0;
  swift_task_dealloc();
  v2(v4, v5);
  OUTLINED_FUNCTION_4_41(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  if (v0)
    return OUTLINED_FUNCTION_0_6();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_1_8(*(uint64_t (**)(void))(v6 + 8));
}

{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_1_8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1BD0DB5F8()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in AsyncCancellableTimer.wait(with:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = partial apply for closure #1 in AsyncCancellableTimer.wait(with:);
  return closure #1 in AsyncCancellableTimer.wait(with:)(a1, v4, v5, v7, v6);
}

uint64_t partial apply for closure #1 in AsyncCancellableTimer.wait(with:)()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t AsyncCancellableTimer.deinit()
{
  uint64_t v0;

  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t AsyncCancellableTimer.__deallocating_deinit()
{
  swift_release();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t AsyncCancellableTimer.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t protocol witness for Actor.unownedExecutor.getter in conformance AsyncCancellableTimer()
{
  return AsyncCancellableTimer.unownedExecutor.getter();
}

uint64_t type metadata accessor for AsyncCancellableTimer()
{
  return objc_opt_self();
}

uint64_t method lookup function for AsyncCancellableTimer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AsyncCancellableTimer.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

void *Strings.Entitlements.gameCenterEntitlement.unsafeMutableAddressor()
{
  return &static Strings.Entitlements.gameCenterEntitlement;
}

const char *Strings.AccessibilityIdentifiers.cancelButton.unsafeMutableAddressor()
{
  return "cancelButton";
}

void *Strings.Automation.enableEffects.unsafeMutableAddressor()
{
  return &static Strings.Automation.enableEffects;
}

unint64_t static Strings.Automation.enableEffects.getter()
{
  return OUTLINED_FUNCTION_0_52(39);
}

void *Strings.Automation.disableEffects.unsafeMutableAddressor()
{
  return &static Strings.Automation.disableEffects;
}

unint64_t static Strings.Automation.disableEffects.getter()
{
  return OUTLINED_FUNCTION_0_52(40);
}

void *Strings.Automation.showDefaultHUD.unsafeMutableAddressor()
{
  return &static Strings.Automation.showDefaultHUD;
}

unint64_t static Strings.Automation.showDefaultHUD.getter()
{
  return OUTLINED_FUNCTION_0_52(39);
}

const char *Strings.AccessibilityIdentifiers.joinButton.unsafeMutableAddressor()
{
  return "joinButton";
}

uint64_t static Strings.AccessibilityIdentifiers.joinButton.getter()
{
  return 0x747475426E696F6ALL;
}

const char *Strings.AccessibilityIdentifiers.leaveButton.unsafeMutableAddressor()
{
  return "leaveButton";
}

uint64_t static Strings.AccessibilityIdentifiers.leaveButton.getter()
{
  return 0x747542657661656CLL;
}

uint64_t static Strings.AccessibilityIdentifiers.cancelButton.getter()
{
  return OUTLINED_FUNCTION_1_40(0x6C65636E6163);
}

void *Strings.AccessibilityIdentifiers.openMessagesButton.unsafeMutableAddressor()
{
  return &static Strings.AccessibilityIdentifiers.openMessagesButton;
}

unint64_t static Strings.AccessibilityIdentifiers.openMessagesButton.getter()
{
  return OUTLINED_FUNCTION_0_52(18);
}

void *Strings.AccessibilityIdentifiers.toggleAudioRouteMenuButton.unsafeMutableAddressor()
{
  return &static Strings.AccessibilityIdentifiers.toggleAudioRouteMenuButton;
}

unint64_t static Strings.AccessibilityIdentifiers.toggleAudioRouteMenuButton.getter()
{
  return OUTLINED_FUNCTION_0_52(26);
}

void *Strings.AccessibilityIdentifiers.toggleMicMenuButton.unsafeMutableAddressor()
{
  return &static Strings.AccessibilityIdentifiers.toggleMicMenuButton;
}

unint64_t static Strings.AccessibilityIdentifiers.toggleMicMenuButton.getter()
{
  return OUTLINED_FUNCTION_0_52(19);
}

void *Strings.AccessibilityIdentifiers.toggleVideoButton.unsafeMutableAddressor()
{
  return &static Strings.AccessibilityIdentifiers.toggleVideoButton;
}

unint64_t static Strings.AccessibilityIdentifiers.toggleVideoButton.getter()
{
  return OUTLINED_FUNCTION_0_52(17);
}

void *Strings.AccessibilityIdentifiers.shareContentMenuButton.unsafeMutableAddressor()
{
  return &static Strings.AccessibilityIdentifiers.shareContentMenuButton;
}

unint64_t static Strings.AccessibilityIdentifiers.shareContentMenuButton.getter()
{
  return OUTLINED_FUNCTION_0_52(22);
}

const char *Strings.AccessibilityIdentifiers.openAppButton.unsafeMutableAddressor()
{
  return "openAppButton";
}

void static Strings.AccessibilityIdentifiers.openAppButton.getter()
{
  OUTLINED_FUNCTION_3_43();
}

const char *Strings.AccessibilityIdentifiers.reviewButton.unsafeMutableAddressor()
{
  return "reviewButton";
}

uint64_t static Strings.AccessibilityIdentifiers.reviewButton.getter()
{
  return OUTLINED_FUNCTION_1_40(0x776569766572);
}

void *Strings.AccessibilityIdentifiers.approveRequestButton.unsafeMutableAddressor()
{
  return &static Strings.AccessibilityIdentifiers.approveRequestButton;
}

unint64_t static Strings.AccessibilityIdentifiers.approveRequestButton.getter()
{
  return OUTLINED_FUNCTION_0_52(20);
}

void *Strings.AccessibilityIdentifiers.dismissRequestButton.unsafeMutableAddressor()
{
  return &static Strings.AccessibilityIdentifiers.dismissRequestButton;
}

unint64_t static Strings.AccessibilityIdentifiers.dismissRequestButton.getter()
{
  return OUTLINED_FUNCTION_0_52(20);
}

void *Strings.AccessibilityIdentifiers.recordLocalVideoButton.unsafeMutableAddressor()
{
  return &static Strings.AccessibilityIdentifiers.recordLocalVideoButton;
}

unint64_t static Strings.AccessibilityIdentifiers.recordLocalVideoButton.getter()
{
  return OUTLINED_FUNCTION_0_52(22);
}

void *Strings.AccessibilityIdentifiers.cameraBlurButton.unsafeMutableAddressor()
{
  return &static Strings.AccessibilityIdentifiers.cameraBlurButton;
}

unint64_t static Strings.AccessibilityIdentifiers.cameraBlurButton.getter()
{
  return OUTLINED_FUNCTION_0_52(16);
}

const char *Strings.AccessibilityIdentifiers.collapseButton.unsafeMutableAddressor()
{
  return "collapseButton";
}

uint64_t static Strings.AccessibilityIdentifiers.collapseButton.getter()
{
  return 0x657370616C6C6F63;
}

const char *Strings.AccessibilityIdentifiers.effectsButton.unsafeMutableAddressor()
{
  return "effectsButton";
}

void static Strings.AccessibilityIdentifiers.effectsButton.getter()
{
  OUTLINED_FUNCTION_3_43();
}

void *Strings.AccessibilityIdentifiers.centerStageButton.unsafeMutableAddressor()
{
  return &static Strings.AccessibilityIdentifiers.centerStageButton;
}

unint64_t static Strings.AccessibilityIdentifiers.centerStageButton.getter()
{
  return OUTLINED_FUNCTION_0_52(17);
}

void *Strings.AccessibilityIdentifiers.cameraFlipButton.unsafeMutableAddressor()
{
  return &static Strings.AccessibilityIdentifiers.cameraFlipButton;
}

unint64_t static Strings.AccessibilityIdentifiers.cameraFlipButton.getter()
{
  return OUTLINED_FUNCTION_0_52(16);
}

void *Strings.AccessibilityIdentifiers.reactionEffectGestureButton.unsafeMutableAddressor()
{
  return &static Strings.AccessibilityIdentifiers.reactionEffectGestureButton;
}

unint64_t static Strings.AccessibilityIdentifiers.reactionEffectGestureButton.getter()
{
  return OUTLINED_FUNCTION_0_52(27);
}

void *Strings.AccessibilityIdentifiers.studioLightButton.unsafeMutableAddressor()
{
  return &static Strings.AccessibilityIdentifiers.studioLightButton;
}

unint64_t static Strings.AccessibilityIdentifiers.studioLightButton.getter()
{
  return OUTLINED_FUNCTION_0_52(17);
}

void *Strings.AccessibilityIdentifiers.sharePlayButton.unsafeMutableAddressor()
{
  return &static Strings.AccessibilityIdentifiers.sharePlayButton;
}

uint64_t static Strings.AccessibilityIdentifiers.sharePlayButton.getter()
{
  return 0x616C506572616873;
}

const char *Strings.AccessibilityIdentifiers.peopleButton.unsafeMutableAddressor()
{
  return "peopleButton";
}

uint64_t static Strings.AccessibilityIdentifiers.peopleButton.getter()
{
  return OUTLINED_FUNCTION_1_40(0x656C706F6570);
}

void *Strings.AccessibilityIdentifiers.toggleSidebarButton.unsafeMutableAddressor()
{
  return &static Strings.AccessibilityIdentifiers.toggleSidebarButton;
}

unint64_t static Strings.AccessibilityIdentifiers.toggleSidebarButton.getter()
{
  return OUTLINED_FUNCTION_0_52(19);
}

void *Strings.AccessibilityIdentifiers.fullScreenButton.unsafeMutableAddressor()
{
  return &static Strings.AccessibilityIdentifiers.fullScreenButton;
}

unint64_t static Strings.AccessibilityIdentifiers.fullScreenButton.getter()
{
  return OUTLINED_FUNCTION_0_52(16);
}

void *Strings.Entitlements.publicSharePlayEntitlement.unsafeMutableAddressor()
{
  return &static Strings.Entitlements.publicSharePlayEntitlement;
}

unint64_t static Strings.Entitlements.publicSharePlayEntitlement.getter()
{
  return OUTLINED_FUNCTION_0_52(33);
}

unint64_t static Strings.Entitlements.gameCenterEntitlement.getter()
{
  return OUTLINED_FUNCTION_0_52(31);
}

void one-time initialization function for appLaunchTriggeredPreferringHUDDismissal()
{
  OUTLINED_FUNCTION_2_16();
}

uint64_t sub_1BD0DBBB8(uint64_t result)
{
  static Strings.Notifications.appLaunchTriggeredPreferringHUDDismissal = result;
  return result;
}

uint64_t *Strings.Notifications.appLaunchTriggeredPreferringHUDDismissal.unsafeMutableAddressor()
{
  if (one-time initialization token for appLaunchTriggeredPreferringHUDDismissal != -1)
    swift_once();
  return &static Strings.Notifications.appLaunchTriggeredPreferringHUDDismissal;
}

id static Strings.Notifications.appLaunchTriggeredPreferringHUDDismissal.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for appLaunchTriggeredPreferringHUDDismissal, (id *)&static Strings.Notifications.appLaunchTriggeredPreferringHUDDismissal);
}

void one-time initialization function for localPreviewDidFinishRotationAnimation()
{
  OUTLINED_FUNCTION_2_16();
}

uint64_t sub_1BD0DBC44(uint64_t result)
{
  static Strings.Notifications.localPreviewDidFinishRotationAnimation = result;
  return result;
}

uint64_t *Strings.Notifications.localPreviewDidFinishRotationAnimation.unsafeMutableAddressor()
{
  if (one-time initialization token for localPreviewDidFinishRotationAnimation != -1)
    swift_once();
  return &static Strings.Notifications.localPreviewDidFinishRotationAnimation;
}

id static Strings.Notifications.localPreviewDidFinishRotationAnimation.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for localPreviewDidFinishRotationAnimation, (id *)&static Strings.Notifications.localPreviewDidFinishRotationAnimation);
}

void one-time initialization function for enhancedEmergencyRequestWannaDismissNotification()
{
  OUTLINED_FUNCTION_2_16();
}

uint64_t sub_1BD0DBCD0(uint64_t result)
{
  static Strings.Notifications.enhancedEmergencyRequestWannaDismissNotification = result;
  return result;
}

uint64_t *Strings.Notifications.enhancedEmergencyRequestWannaDismissNotification.unsafeMutableAddressor()
{
  if (one-time initialization token for enhancedEmergencyRequestWannaDismissNotification != -1)
    swift_once();
  return &static Strings.Notifications.enhancedEmergencyRequestWannaDismissNotification;
}

id static Strings.Notifications.enhancedEmergencyRequestWannaDismissNotification.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for enhancedEmergencyRequestWannaDismissNotification, (id *)&static Strings.Notifications.enhancedEmergencyRequestWannaDismissNotification);
}

void one-time initialization function for enhancedEmergencyRequestToChoosePhotoNotification()
{
  OUTLINED_FUNCTION_2_16();
}

uint64_t sub_1BD0DBD5C(uint64_t result)
{
  static Strings.Notifications.enhancedEmergencyRequestToChoosePhotoNotification = result;
  return result;
}

uint64_t *Strings.Notifications.enhancedEmergencyRequestToChoosePhotoNotification.unsafeMutableAddressor()
{
  if (one-time initialization token for enhancedEmergencyRequestToChoosePhotoNotification != -1)
    swift_once();
  return &static Strings.Notifications.enhancedEmergencyRequestToChoosePhotoNotification;
}

id static Strings.Notifications.enhancedEmergencyRequestToChoosePhotoNotification.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for enhancedEmergencyRequestToChoosePhotoNotification, (id *)&static Strings.Notifications.enhancedEmergencyRequestToChoosePhotoNotification);
}

void one-time initialization function for enhancedEmergencyPreviewRequestNotification()
{
  OUTLINED_FUNCTION_2_16();
}

uint64_t sub_1BD0DBDE8(uint64_t result)
{
  static Strings.Notifications.enhancedEmergencyPreviewRequestNotification = result;
  return result;
}

uint64_t *Strings.Notifications.enhancedEmergencyPreviewRequestNotification.unsafeMutableAddressor()
{
  if (one-time initialization token for enhancedEmergencyPreviewRequestNotification != -1)
    swift_once();
  return &static Strings.Notifications.enhancedEmergencyPreviewRequestNotification;
}

id static Strings.Notifications.enhancedEmergencyPreviewRequestNotification.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for enhancedEmergencyPreviewRequestNotification, (id *)&static Strings.Notifications.enhancedEmergencyPreviewRequestNotification);
}

void one-time initialization function for enhancedEmergencyUploadDismissDuringStreamingNotification()
{
  OUTLINED_FUNCTION_2_16();
}

uint64_t sub_1BD0DBE74(uint64_t result)
{
  static Strings.Notifications.enhancedEmergencyUploadDismissDuringStreamingNotification = result;
  return result;
}

uint64_t *Strings.Notifications.enhancedEmergencyUploadDismissDuringStreamingNotification.unsafeMutableAddressor()
{
  if (one-time initialization token for enhancedEmergencyUploadDismissDuringStreamingNotification != -1)
    swift_once();
  return &static Strings.Notifications.enhancedEmergencyUploadDismissDuringStreamingNotification;
}

id static Strings.Notifications.enhancedEmergencyUploadDismissDuringStreamingNotification.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for enhancedEmergencyUploadDismissDuringStreamingNotification, (id *)&static Strings.Notifications.enhancedEmergencyUploadDismissDuringStreamingNotification);
}

void one-time initialization function for enhancedEmergencyUploadPickerDuringStreamingNotification()
{
  OUTLINED_FUNCTION_2_16();
}

uint64_t sub_1BD0DBF00(uint64_t result)
{
  static Strings.Notifications.enhancedEmergencyUploadPickerDuringStreamingNotification = result;
  return result;
}

uint64_t *Strings.Notifications.enhancedEmergencyUploadPickerDuringStreamingNotification.unsafeMutableAddressor()
{
  if (one-time initialization token for enhancedEmergencyUploadPickerDuringStreamingNotification != -1)
    swift_once();
  return &static Strings.Notifications.enhancedEmergencyUploadPickerDuringStreamingNotification;
}

id static Strings.Notifications.enhancedEmergencyUploadPickerDuringStreamingNotification.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for enhancedEmergencyUploadPickerDuringStreamingNotification, (id *)&static Strings.Notifications.enhancedEmergencyUploadPickerDuringStreamingNotification);
}

void one-time initialization function for didEndWindowLiveResizeNotification()
{
  OUTLINED_FUNCTION_2_16();
}

uint64_t sub_1BD0DBF8C(uint64_t result)
{
  static Strings.Notifications.didEndWindowLiveResizeNotification = result;
  return result;
}

uint64_t *Strings.Notifications.didEndWindowLiveResizeNotification.unsafeMutableAddressor()
{
  if (one-time initialization token for didEndWindowLiveResizeNotification != -1)
    swift_once();
  return &static Strings.Notifications.didEndWindowLiveResizeNotification;
}

id static Strings.Notifications.didEndWindowLiveResizeNotification.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for didEndWindowLiveResizeNotification, (id *)&static Strings.Notifications.didEndWindowLiveResizeNotification);
}

void type metadata accessor for Strings()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for Strings.Automation()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for Strings.AccessibilityIdentifiers()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for Strings.Entitlements()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for Strings.Notifications()
{
  OUTLINED_FUNCTION_34_0();
}

_QWORD *makeConversationHUDDetailsNavigationController(for:delegate:shouldSetControlsManagerInCallDetailsDelegate:)(void *a1, uint64_t a2, char a3)
{
  id v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  void (*v9)(uint64_t);
  uint64_t v10;
  void (*v11)(_QWORD *, _UNKNOWN **);
  _QWORD *v12;

  v5 = objc_allocWithZone((Class)type metadata accessor for ConversationHUDDetailsNavigationController());
  v6 = a1;
  v7 = ConversationHUDDetailsNavigationController.init(controlsManager:shouldHaveBackgroundMaterial:)((uint64_t)v6, 0);
  v8 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v9 = *(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v7) + 0x78);
  v10 = swift_unknownObjectRetain();
  v9(v10);
  if ((a3 & 1) != 0)
  {
    v11 = *(void (**)(_QWORD *, _UNKNOWN **))((*v8 & *v6) + 0x450);
    v12 = v7;
    v11(v7, &protocol witness table for ConversationHUDDetailsNavigationController);
  }
  return v7;
}

void ConversationHUDDetailsNavigationController.__allocating_init(controlsManager:shouldHaveBackgroundMaterial:)(uint64_t a1, char a2)
{
  OUTLINED_FUNCTION_12_3();
  ConversationHUDDetailsNavigationController.init(controlsManager:shouldHaveBackgroundMaterial:)(a1, a2);
  OUTLINED_FUNCTION_18();
}

uint64_t type metadata accessor for ConversationHUDDetailsNavigationController()
{
  return objc_opt_self();
}

_QWORD *makeConversationDetailsController(for:delegate:)(void *a1)
{
  id v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  void (*v6)(uint64_t);
  uint64_t v7;
  void (*v8)(_QWORD *, _UNKNOWN **);
  _QWORD *v9;

  v2 = objc_allocWithZone((Class)type metadata accessor for ConversationHUDDetailsViewController());
  v3 = a1;
  v4 = ConversationHUDDetailsViewController.init(controlsManager:)((uint64_t)v3);
  v5 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v6 = *(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v4) + 0x88);
  v7 = swift_unknownObjectRetain();
  v6(v7);
  v8 = *(void (**)(_QWORD *, _UNKNOWN **))((*v5 & *v3) + 0x450);
  v9 = v4;
  v8(v4, &protocol witness table for ConversationHUDDetailsViewController);
  return v9;
}

uint64_t key path setter for ConversationHUDDetailsNavigationController.detailsDelegate : ConversationHUDDetailsNavigationController(uint64_t a1, _QWORD **a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x78);
  v3 = swift_unknownObjectRetain();
  return v2(v3);
}

void ConversationHUDDetailsNavigationController.detailsDelegate.willset()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  void (*v3)(uint64_t);
  uint64_t v4;
  id v5;

  v1 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v2 = (_QWORD *)(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
  if (v2)
  {
    v3 = *(void (**)(uint64_t))((*v1 & *v2) + 0x88);
    v5 = v2;
    v4 = swift_unknownObjectRetain();
    v3(v4);

  }
}

void ConversationHUDDetailsNavigationController.detailsDelegate.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit42ConversationHUDDetailsNavigationController_detailsDelegate;
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x1C3B752C0](v1);
  OUTLINED_FUNCTION_32();
}

void ConversationHUDDetailsNavigationController.detailsDelegate.setter()
{
  ConversationHUDDetailsNavigationController.detailsDelegate.willset();
  OUTLINED_FUNCTION_2_0();
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_32();
}

void (*ConversationHUDDetailsNavigationController.detailsDelegate.modify(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = v1 + OBJC_IVAR____TtC15ConversationKit42ConversationHUDDetailsNavigationController_detailsDelegate;
  OUTLINED_FUNCTION_2_0();
  v3[3] = MEMORY[0x1C3B752C0](v4);
  return ConversationHUDDetailsNavigationController.detailsDelegate.modify;
}

void ConversationHUDDetailsNavigationController.detailsDelegate.modify(void **a1, char a2)
{
  void *v2;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRetain();
    ConversationHUDDetailsNavigationController.detailsDelegate.setter();
    swift_unknownObjectRelease();
  }
  else
  {
    ConversationHUDDetailsNavigationController.detailsDelegate.setter();
  }
  free(v2);
}

_QWORD *ConversationHUDDetailsNavigationController.isOnScreen.getter()
{
  uint64_t *v0;
  _QWORD *v1;
  _QWORD *result;
  void *v3;
  char v4;

  v1 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  result = (_QWORD *)OUTLINED_FUNCTION_1_41(*v0);
  if (result)
  {
    v3 = result;
    v4 = (*(uint64_t (**)(void))((*v1 & *result) + 0x98))();

    return (_QWORD *)(v4 & 1);
  }
  return result;
}

void ConversationHUDDetailsNavigationController.isOnScreen.setter(char a1)
{
  uint64_t *v1;
  _QWORD *v3;
  _QWORD *v4;
  void *v5;

  v3 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v4 = (_QWORD *)OUTLINED_FUNCTION_1_41(*v1);
  if (v4)
  {
    v5 = v4;
    (*(void (**)(_QWORD))((*v3 & *v4) + 0xA0))(a1 & 1);
    OUTLINED_FUNCTION_15_9(v5);
  }
  else
  {
    OUTLINED_FUNCTION_45_0();
  }
}

void (*ConversationHUDDetailsNavigationController.isOnScreen.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = ConversationHUDDetailsNavigationController.isOnScreen.getter() & 1;
  return ConversationHUDDetailsNavigationController.isOnScreen.modify;
}

void ConversationHUDDetailsNavigationController.isOnScreen.modify(uint64_t a1)
{
  ConversationHUDDetailsNavigationController.isOnScreen.setter(*(_BYTE *)(a1 + 8));
  OUTLINED_FUNCTION_0();
}

id ConversationHUDDetailsNavigationController.controlsManager.getter()
{
  uint64_t v0;

  return objc_retain(*(id *)(v0
                           + OBJC_IVAR____TtC15ConversationKit42ConversationHUDDetailsNavigationController_controlsManager));
}

uint64_t ConversationHUDDetailsNavigationController.shouldHaveBackgroundMaterial.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC15ConversationKit42ConversationHUDDetailsNavigationController_shouldHaveBackgroundMaterial);
}

uint64_t key path setter for ConversationHUDDetailsNavigationController.detailsViewController : ConversationHUDDetailsNavigationController(id *a1, _QWORD **a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & **a2) + 0xA8);
  v4 = *a1;
  return v3(v2);
}

void ConversationHUDDetailsNavigationController.detailsViewController.getter()
{
  uint64_t v0;
  id *v1;
  id v2;

  v1 = (id *)(v0 + OBJC_IVAR____TtC15ConversationKit42ConversationHUDDetailsNavigationController_detailsViewController);
  OUTLINED_FUNCTION_2_0();
  v2 = *v1;
  OUTLINED_FUNCTION_32();
}

void ConversationHUDDetailsNavigationController.detailsViewController.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;

  v3 = (void **)(v1 + OBJC_IVAR____TtC15ConversationKit42ConversationHUDDetailsNavigationController_detailsViewController);
  OUTLINED_FUNCTION_2_0();
  v4 = *v3;
  *v3 = a1;

  OUTLINED_FUNCTION_32();
}

uint64_t (*ConversationHUDDetailsNavigationController.detailsViewController.modify())()
{
  OUTLINED_FUNCTION_2_0();
  return CallRecordingPillViewController.cancellable.modify;
}

id ConversationHUDDetailsNavigationController.init(controlsManager:shouldHaveBackgroundMaterial:)(uint64_t a1, char a2)
{
  _BYTE *v2;
  objc_super v6;

  OUTLINED_FUNCTION_18_35();
  *(_QWORD *)&v2[OBJC_IVAR____TtC15ConversationKit42ConversationHUDDetailsNavigationController_detailsViewController] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC15ConversationKit42ConversationHUDDetailsNavigationController_controlsManager] = a1;
  v2[OBJC_IVAR____TtC15ConversationKit42ConversationHUDDetailsNavigationController_shouldHaveBackgroundMaterial] = a2;
  v6.receiver = v2;
  v6.super_class = (Class)type metadata accessor for ConversationHUDDetailsNavigationController();
  return objc_msgSendSuper2(&v6, sel_initWithNibName_bundle_, 0, 0);
}

id ConversationHUDDetailsNavigationController.__allocating_init(coder:)(void *a1)
{
  id v2;
  id v3;

  v2 = OUTLINED_FUNCTION_12_3();
  v3 = OUTLINED_FUNCTION_65(v2, sel_initWithCoder_);

  return v3;
}

void ConversationHUDDetailsNavigationController.init(coder:)()
{
  char *v0;

  OUTLINED_FUNCTION_18_35();
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit42ConversationHUDDetailsNavigationController_detailsViewController] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Void __swiftcall ConversationHUDDetailsNavigationController.viewDidLoad()()
{
  char *v0;
  objc_class *v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  char *v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  id v13;
  Class isa;
  uint64_t v15;
  void (*v16)(id);
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  _QWORD v21[4];
  objc_super v22;

  v1 = (objc_class *)type metadata accessor for ConversationHUDDetailsNavigationController();
  v22.receiver = v0;
  v22.super_class = v1;
  objc_msgSendSuper2(&v22, sel_viewDidLoad);
  v2 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit42ConversationHUDDetailsNavigationController_controlsManager];
  v3 = objc_allocWithZone((Class)type metadata accessor for ConversationHUDDetailsViewController());
  v4 = ConversationHUDDetailsViewController.init(controlsManager:)((uint64_t)v2);
  OUTLINED_FUNCTION_16_23();
  (*(void (**)(void))(v5 + 112))();
  OUTLINED_FUNCTION_16_23();
  (*(void (**)(void))(v6 + 136))();
  v21[3] = v1;
  v21[0] = v0;
  v7 = objc_allocWithZone(MEMORY[0x1E0DC34F0]);
  v8 = v0;
  v9 = @nonobjc UIBarButtonItem.init(barButtonSystemItem:target:action:)(0, v21, (uint64_t)sel_tapDoneButton);
  v10 = objc_msgSend((id)objc_opt_self(), sel_labelColor, v21[0]);
  objc_msgSend(v9, sel_setTintColor_, v10);

  v11 = objc_msgSend(v4, sel_navigationItem);
  objc_msgSend(v11, sel_setRightBarButtonItem_, v9);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1BD6443F0;
  *(_QWORD *)(v12 + 32) = v4;
  v21[0] = v12;
  specialized Array._endMutation()();
  type metadata accessor for UIViewController();
  v13 = v4;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v8, sel_setViewControllers_, isa);

  OUTLINED_FUNCTION_16_23();
  v16 = *(void (**)(id))(v15 + 168);
  v17 = v13;
  v16(v13);
  v18 = objc_msgSend(v8, sel_navigationBar);
  v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3870]), sel_init);
  objc_msgSend(v18, sel_setShadowImage_, v19);

  if (v8[OBJC_IVAR____TtC15ConversationKit42ConversationHUDDetailsNavigationController_shouldHaveBackgroundMaterial] == 1)
  {
    OUTLINED_FUNCTION_16_23();
    (*(void (**)(void))(v20 + 224))();
  }

}

Swift::Bool __swiftcall ConversationHUDDetailsNavigationController._canShowWhileLocked()()
{
  return 1;
}

Swift::Void __swiftcall ConversationHUDDetailsNavigationController.tapDoneButton()()
{
  uint64_t *v0;
  void *v1;

  v1 = (void *)OUTLINED_FUNCTION_19_15(*v0);
  if (v1)
  {
    objc_msgSend(v1, sel_wantsDismissal);
    swift_unknownObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_0();
  }
}

Swift::Void __swiftcall ConversationHUDDetailsNavigationController.refreshTitleCell()()
{
  ConversationHUDDetailsNavigationController.refreshTitleCell()();
}

Swift::Void __swiftcall ConversationHUDDetailsNavigationController.resetScroll(animated:)(Swift::Bool animated)
{
  ConversationHUDDetailsNavigationController.resetScroll(animated:)(animated, (void (*)(_QWORD))ConversationHUDDetailsViewController.resetScroll(animated:));
}

Swift::Void __swiftcall ConversationHUDDetailsNavigationController.captioningStateDidChange()()
{
  ConversationHUDDetailsNavigationController.refreshTitleCell()();
}

Swift::Void __swiftcall ConversationHUDDetailsNavigationController.setUpBackgroundMaterialView()()
{
  id v0;
  id v1;
  id v2;
  id v3;
  void *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  id v13;
  id v14;

  v0 = objc_msgSend((id)objc_opt_self(), sel_effectWithStyle_, 18);
  v1 = OUTLINED_FUNCTION_65(objc_allocWithZone(MEMORY[0x1E0DC3F58]), sel_initWithEffect_);

  v2 = v1;
  v3 = OUTLINED_FUNCTION_14_13();
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v3, sel_bounds);
    v6 = v5;
    v8 = v7;
    v10 = v9;
    v12 = v11;

    objc_msgSend(v2, sel_setFrame_, v6, v8, v10, v12);
    objc_msgSend(v2, sel_setAutoresizingMask_, 18);
    v13 = OUTLINED_FUNCTION_14_13();
    if (v13)
    {
      v14 = v13;
      objc_msgSend(v13, sel_insertSubview_atIndex_, v2, 0);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

Swift::Void __swiftcall ConversationHUDDetailsNavigationController.controlsModeUpdated()()
{
  ConversationHUDDetailsNavigationController.refreshTitleCell()();
}

Swift::Void __swiftcall ConversationHUDDetailsNavigationController.layoutStyleUpdated()()
{
  ConversationHUDDetailsNavigationController.refreshTitleCell()();
}

void ConversationHUDDetailsNavigationController.updated(_:)()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  OUTLINED_FUNCTION_9_33();
  v1 = OUTLINED_FUNCTION_1_41(v0);
  if (v1)
  {
    v2 = (void *)v1;
    ConversationHUDDetailsViewController.updated(_:)();
    OUTLINED_FUNCTION_7_1(v2);
  }
  else
  {
    OUTLINED_FUNCTION_36();
  }
}

void ConversationHUDDetailsNavigationController.update(participant:broadcastingState:)()
{
  uint64_t *v0;
  uint64_t v1;
  id v2;

  v1 = OUTLINED_FUNCTION_1_41(*v0);
  if (v1)
  {
    v2 = (id)v1;
    ConversationHUDDetailsViewController.update(participant:broadcastingState:)();

  }
}

Swift::Void __swiftcall ConversationHUDDetailsNavigationController.updateLocalViews(for:isLocalMemberAuthorizedToChangeGroupMembership:)(Swift::OpaquePointer a1, Swift::Bool isLocalMemberAuthorizedToChangeGroupMembership)
{
  uint64_t v2;
  uint64_t v3;
  Swift::Bool v4;
  void *v5;

  OUTLINED_FUNCTION_9_33();
  if (OUTLINED_FUNCTION_1_41(v2))
  {
    v3 = OUTLINED_FUNCTION_8_41();
    ConversationHUDDetailsViewController.updateLocalViews(for:isLocalMemberAuthorizedToChangeGroupMembership:)((Swift::OpaquePointer)v3, v4);
    OUTLINED_FUNCTION_15_9(v5);
  }
  else
  {
    OUTLINED_FUNCTION_45_0();
  }
}

void ConversationHUDDetailsNavigationController.update(participant:isKickingAvailable:)()
{
  uint64_t v0;
  void *v1;

  OUTLINED_FUNCTION_9_33();
  if (OUTLINED_FUNCTION_1_41(v0))
  {
    OUTLINED_FUNCTION_8_41();
    ConversationHUDDetailsViewController.update(participant:isKickingAvailable:)();
    OUTLINED_FUNCTION_15_9(v1);
  }
  else
  {
    OUTLINED_FUNCTION_45_0();
  }
}

void ConversationHUDDetailsNavigationController.update(with:updateReason:)()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  OUTLINED_FUNCTION_9_33();
  v1 = OUTLINED_FUNCTION_1_41(v0);
  if (v1)
  {
    v2 = (void *)v1;
    ConversationHUDDetailsViewController.update(with:updateReason:)();

  }
  OUTLINED_FUNCTION_36();
}

Swift::Void __swiftcall ConversationHUDDetailsNavigationController.updateRemoteAudioPaused(audioPaused:)(Swift::Bool audioPaused)
{
  ConversationHUDDetailsNavigationController.resetScroll(animated:)(audioPaused, (void (*)(_QWORD))ConversationHUDDetailsViewController.updateRemoteAudioPaused(audioPaused:));
}

void ConversationHUDDetailsNavigationController.resetScroll(animated:)(char a1, void (*a2)(_QWORD))
{
  uint64_t *v2;
  uint64_t v5;
  void *v6;

  v5 = OUTLINED_FUNCTION_1_41(*v2);
  if (v5)
  {
    v6 = (void *)v5;
    a2(a1 & 1);
    OUTLINED_FUNCTION_15_9(v6);
  }
  else
  {
    OUTLINED_FUNCTION_45_0();
  }
}

Swift::Void __swiftcall ConversationHUDDetailsNavigationController.refreshToggleIgnoreLMIRequestsRowCell()()
{
  ConversationHUDDetailsNavigationController.refreshTitleCell()();
}

void ConversationHUDDetailsNavigationController.refreshTitleCell()()
{
  void (*v0)(void);
  uint64_t v1;
  uint64_t v2;
  void *v3;

  OUTLINED_FUNCTION_9_33();
  v2 = OUTLINED_FUNCTION_1_41(v1);
  if (v2)
  {
    v3 = (void *)v2;
    v0();
    OUTLINED_FUNCTION_7_1(v3);
  }
  else
  {
    OUTLINED_FUNCTION_36();
  }
}

id ConversationHUDDetailsNavigationController.__allocating_init(navigationBarClass:toolbarClass:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t ObjCClassFromMetadata;

  v2 = a2;
  if (!a1)
  {
    ObjCClassFromMetadata = 0;
    if (!a2)
      return objc_msgSend(OUTLINED_FUNCTION_12_3(), sel_initWithNavigationBarClass_toolbarClass_, ObjCClassFromMetadata, v2);
    goto LABEL_3;
  }
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  if (v2)
LABEL_3:
    v2 = swift_getObjCClassFromMetadata();
  return objc_msgSend(OUTLINED_FUNCTION_12_3(), sel_initWithNavigationBarClass_toolbarClass_, ObjCClassFromMetadata, v2);
}

void ConversationHUDDetailsNavigationController.init(navigationBarClass:toolbarClass:)()
{
  OUTLINED_FUNCTION_18_12();
  __break(1u);
}

id ConversationHUDDetailsNavigationController.__allocating_init(rootViewController:)(void *a1)
{
  id v2;
  id v3;

  v2 = OUTLINED_FUNCTION_12_3();
  v3 = OUTLINED_FUNCTION_65(v2, sel_initWithRootViewController_);

  return v3;
}

void ConversationHUDDetailsNavigationController.init(rootViewController:)()
{
  OUTLINED_FUNCTION_18_12();
  __break(1u);
}

void ConversationHUDDetailsNavigationController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)MEMORY[0x1C3B72E00]();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  OUTLINED_FUNCTION_18();
}

void ConversationHUDDetailsNavigationController.init(nibName:bundle:)()
{
  OUTLINED_FUNCTION_18_12();
  __break(1u);
}

id ConversationHUDDetailsNavigationController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ConversationHUDDetailsNavigationController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t protocol witness for ConversationControlsDetailsViewControllerDelegate.controlsModeUpdated() in conformance ConversationHUDDetailsNavigationController()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t protocol witness for ConversationControlsDetailsViewControllerDelegate.layoutStyleUpdated() in conformance ConversationHUDDetailsNavigationController()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t protocol witness for ConversationControlsDetailsViewControllerDelegate.updated(_:) in conformance ConversationHUDDetailsNavigationController()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

uint64_t protocol witness for ConversationControlsDetailsViewControllerDelegate.update(participant:broadcastingState:) in conformance ConversationHUDDetailsNavigationController()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

uint64_t protocol witness for ConversationControlsDetailsViewControllerDelegate.update(participant:isKickingAvailable:) in conformance ConversationHUDDetailsNavigationController()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x110))();
}

uint64_t protocol witness for ConversationControlsDetailsViewControllerDelegate.update(with:updateReason:) in conformance ConversationHUDDetailsNavigationController()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x118))();
}

uint64_t protocol witness for ConversationControlsDetailsViewControllerDelegate.updateLocalViews(for:isLocalMemberAuthorizedToChangeGroupMembership:) in conformance ConversationHUDDetailsNavigationController()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x108))();
}

uint64_t protocol witness for ConversationControlsDetailsViewControllerDelegate.updateRemoteAudioPaused(audioPaused:) in conformance ConversationHUDDetailsNavigationController()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x120))();
}

uint64_t protocol witness for ConversationControlsDetailsViewControllerDelegate.refreshToggleIgnoreLMIRequestsRowCell() in conformance ConversationHUDDetailsNavigationController()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x128))();
}

unint64_t type metadata accessor for UIViewController()
{
  unint64_t result;

  result = lazy cache variable for type metadata for UIViewController;
  if (!lazy cache variable for type metadata for UIViewController)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for UIViewController);
  }
  return result;
}

void sub_1BD0DD290()
{
  uint64_t *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = OUTLINED_FUNCTION_19_15(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD0DD2C0()
{
  _BYTE *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x88))() & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD0DD2F8(unsigned __int8 *a1, _QWORD **a2)
{
  (*(void (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x90))(*a1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD0DD330()
{
  uint64_t *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = OUTLINED_FUNCTION_1_41(v1);
  OUTLINED_FUNCTION_0();
}

uint64_t method lookup function for ConversationHUDDetailsNavigationController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ConversationHUDDetailsNavigationController.detailsDelegate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of ConversationHUDDetailsNavigationController.detailsDelegate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of ConversationHUDDetailsNavigationController.detailsDelegate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of ConversationHUDDetailsNavigationController.isOnScreen.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of ConversationHUDDetailsNavigationController.isOnScreen.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of ConversationHUDDetailsNavigationController.isOnScreen.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of ConversationHUDDetailsNavigationController.detailsViewController.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of ConversationHUDDetailsNavigationController.detailsViewController.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of ConversationHUDDetailsNavigationController.detailsViewController.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of ConversationHUDDetailsNavigationController.__allocating_init(controlsManager:shouldHaveBackgroundMaterial:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of ConversationHUDDetailsNavigationController.tapDoneButton()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of ConversationHUDDetailsNavigationController.refreshTitleCell()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of ConversationHUDDetailsNavigationController.resetScroll(animated:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of ConversationHUDDetailsNavigationController.captioningStateDidChange()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of ConversationHUDDetailsNavigationController.setUpBackgroundMaterialView()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of ConversationHUDDetailsNavigationController.controlsModeUpdated()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of ConversationHUDDetailsNavigationController.layoutStyleUpdated()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of ConversationHUDDetailsNavigationController.updated(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of ConversationHUDDetailsNavigationController.update(participant:broadcastingState:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of ConversationHUDDetailsNavigationController.updateLocalViews(for:isLocalMemberAuthorizedToChangeGroupMembership:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of ConversationHUDDetailsNavigationController.update(participant:isKickingAvailable:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x110))();
}

uint64_t dispatch thunk of ConversationHUDDetailsNavigationController.update(with:updateReason:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x118))();
}

uint64_t dispatch thunk of ConversationHUDDetailsNavigationController.updateRemoteAudioPaused(audioPaused:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x120))();
}

uint64_t dispatch thunk of ConversationHUDDetailsNavigationController.refreshToggleIgnoreLMIRequestsRowCell()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x128))();
}

uint64_t key path getter for ParticipantListLayout.delegate : ParticipantListLayout@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *a1 + OBJC_IVAR____TtC15ConversationKit21ParticipantListLayout_delegate;
  swift_beginAccess();
  result = MEMORY[0x1C3B752C0](v3);
  v5 = *(_QWORD *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t key path setter for ParticipantListLayout.delegate : ParticipantListLayout(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *a2 + OBJC_IVAR____TtC15ConversationKit21ParticipantListLayout_delegate;
  swift_beginAccess();
  *(_QWORD *)(v3 + 8) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t ParticipantListLayout.delegate.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit21ParticipantListLayout_delegate;
  OUTLINED_FUNCTION_2_0();
  return MEMORY[0x1C3B752C0](v1);
}

uint64_t ParticipantListLayout.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + OBJC_IVAR____TtC15ConversationKit21ParticipantListLayout_delegate;
  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*ParticipantListLayout.delegate.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC15ConversationKit21ParticipantListLayout_delegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  OUTLINED_FUNCTION_2_0();
  v6 = MEMORY[0x1C3B752C0](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return InCallControlsBaseCell.delegate.modify;
}

id ParticipantListLayout.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id ParticipantListLayout.init()()
{
  char *v0;
  objc_class *v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  char *v4;
  char *v5;
  char *v6;
  id v7;
  id v8;
  objc_super v10;

  v1 = (objc_class *)OUTLINED_FUNCTION_15_6();
  v2 = OBJC_IVAR____TtC15ConversationKit21ParticipantListLayout_indexPathLayoutAttributes;
  OUTLINED_FUNCTION_46_12();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1658];
  _sSo8NSObjectCMaTm_0(0, &lazy cache variable for type metadata for UICollectionViewLayoutAttributes);
  lazy protocol witness table accessor for type TranscriptionViewModel and conformance TranscriptionViewModel(&lazy protocol witness table cache variable for type IndexPath and conformance IndexPath, v3, MEMORY[0x1E0CB1668]);
  v4 = v0;
  *(_QWORD *)&v0[v2] = Dictionary.init(dictionaryLiteral:)();
  v5 = &v4[OBJC_IVAR____TtC15ConversationKit21ParticipantListLayout_lastInvalidatedSize];
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;
  v5[16] = 1;
  v6 = &v4[OBJC_IVAR____TtC15ConversationKit21ParticipantListLayout_calculatedContentSize];
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  OUTLINED_FUNCTION_40_4((uint64_t)&v4[OBJC_IVAR____TtC15ConversationKit21ParticipantListLayout_delegate]);

  v10.receiver = v4;
  v10.super_class = v1;
  v7 = objc_msgSendSuper2(&v10, sel_init);
  objc_msgSend(v7, sel_setItemSize_, 60.0, 60.0);
  v8 = v7;
  static Platform.current.getter();
  objc_msgSend(v8, sel_setMinimumInteritemSpacing_, 3.0);

  return v8;
}

id ParticipantListLayout.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void ParticipantListLayout.init(coder:)()
{
  char *v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  char *v3;
  char *v4;

  v1 = OBJC_IVAR____TtC15ConversationKit21ParticipantListLayout_indexPathLayoutAttributes;
  OUTLINED_FUNCTION_46_12();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1658];
  _sSo8NSObjectCMaTm_0(0, &lazy cache variable for type metadata for UICollectionViewLayoutAttributes);
  lazy protocol witness table accessor for type TranscriptionViewModel and conformance TranscriptionViewModel(&lazy protocol witness table cache variable for type IndexPath and conformance IndexPath, v2, MEMORY[0x1E0CB1668]);
  *(_QWORD *)&v0[v1] = Dictionary.init(dictionaryLiteral:)();
  v3 = &v0[OBJC_IVAR____TtC15ConversationKit21ParticipantListLayout_lastInvalidatedSize];
  *(_QWORD *)v3 = 0;
  *((_QWORD *)v3 + 1) = 0;
  v3[16] = 1;
  v4 = &v0[OBJC_IVAR____TtC15ConversationKit21ParticipantListLayout_calculatedContentSize];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  OUTLINED_FUNCTION_40_4((uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit21ParticipantListLayout_delegate]);

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Void __swiftcall ParticipantListLayout.prepare()()
{
  char *v0;
  uint64_t v1;
  char *v2;
  objc_class *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  double *v21;
  double *v22;
  uint64_t v23;
  char **v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  char **v36;
  uint64_t v37;
  char *v38;
  id v39;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v41;
  unint64_t v42;
  char v43;
  uint64_t v44;
  _BOOL8 v45;
  Swift::Int v46;
  unint64_t v47;
  char v48;
  Swift::Bool v49;
  unint64_t v50;
  char v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  BOOL v56;
  uint64_t v57;
  void (*v58)(uint64_t, uint64_t);
  id v59;
  double v60;
  double v61;
  double v62;
  double v63;
  double v64;
  char *v65;
  uint64_t v66;
  double v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  char *v83;
  uint64_t v84;
  unint64_t v85;
  char v86;
  void *v87;
  id v88;
  id v89;
  unint64_t v90;
  char v91;
  unint64_t v92;
  char v93;
  unint64_t v94;
  char v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  id v99;
  uint64_t v100;
  uint64_t v101;
  double v102;
  double *v103;
  double v104;
  double v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  unint64_t v121;
  char v122;
  void *v123;
  id v124;
  id v125;
  unint64_t v126;
  char v127;
  unint64_t v128;
  char v129;
  unint64_t v130;
  char v131;
  _QWORD *v132;
  uint64_t v133;
  uint64_t v134;
  _QWORD v135[7];
  uint64_t v136;
  double *v137;
  char *v138;
  uint64_t v139;
  double *v140;
  uint64_t v141;
  uint64_t v142;
  _QWORD *v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  _QWORD *v147;
  objc_super v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;

  v2 = v0;
  v3 = (objc_class *)OUTLINED_FUNCTION_15_6();
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for IndexPath?);
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_5_27();
  OUTLINED_FUNCTION_5_18();
  MEMORY[0x1E0C80A78](v5);
  v135[1] = (char *)v135 - v6;
  v7 = OUTLINED_FUNCTION_46_12();
  v8 = *(_QWORD **)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_5_27();
  OUTLINED_FUNCTION_5_18();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_5_18();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_5_18();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_5_18();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_18_0();
  v146 = v13;
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_18_0();
  v139 = v15;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v135 - v17;
  v148.receiver = v0;
  v148.super_class = v3;
  objc_msgSendSuper2(&v148, sel_prepareLayout);
  v19 = &v0[OBJC_IVAR____TtC15ConversationKit21ParticipantListLayout_indexPathLayoutAttributes];
  OUTLINED_FUNCTION_2_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [IndexPath : UICollectionViewLayoutAttributes]._Variant);
  v145 = v19;
  Dictionary._Variant.removeAll(keepingCapacity:)(1);
  v20 = swift_endAccess();
  v21 = (double *)OUTLINED_FUNCTION_5_39(v20, sel_collectionView);
  if (v21)
  {
    v22 = v21;
    OUTLINED_FUNCTION_2_0();
    objc_msgSend(v2, sel_setScrollDirection_, (static AmbientState.isPresented & 1) == 0);
    ParticipantListLayout.updateItemSize()();
    v23 = (uint64_t)objc_msgSend(v22, sel_numberOfSections);
    if ((v23 & 0x8000000000000000) == 0)
    {
      v24 = &selRef_associatedAppBundleIdentifier;
      v143 = v8;
      v144 = v7;
      v137 = v22;
      if (v23)
      {
        v25 = 0;
        v26 = 0.0;
        v138 = v2;
        v136 = v23;
        while (1)
        {
          if (v25 == v23)
          {
LABEL_121:
            __break(1u);
LABEL_122:
            __break(1u);
LABEL_123:
            __break(1u);
LABEL_124:
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            __break(1u);
            goto LABEL_127;
          }
          v27 = (uint64_t)objc_msgSend(v22, sel_numberOfItemsInSection_, v25);
          if (v27 < 0)
            goto LABEL_122;
          v28 = v27;
          if (v27)
            break;
LABEL_22:
          ++v25;
          v59 = objc_msgSend(v2, sel_itemSize);
          v61 = v60;
          OUTLINED_FUNCTION_5_39((uint64_t)v59, sel_minimumInteritemSpacing);
          v26 = v26 + (v61 + v62) * (double)v28;
          v23 = v136;
          v22 = v137;
          if (v25 == v136)
            goto LABEL_25;
        }
        v29 = _sSo8NSObjectCMaTm_0(0, &lazy cache variable for type metadata for UICollectionViewLayoutAttributes);
        v141 = v25;
        v142 = v29;
        v22 = 0;
        v140 = (double *)v28;
        while ((double *)v28 != v22)
        {
          MEMORY[0x1C3B70094](v22, v25);
          v1 = v8[2];
          v30 = v139;
          OUTLINED_FUNCTION_49_14(v139, (uint64_t)v18);
          v31 = @nonobjc UICollectionViewLayoutAttributes.__allocating_init(forCellWith:)(v30);
          OUTLINED_FUNCTION_25_26();
          OUTLINED_FUNCTION_4_42();
          v32 = OUTLINED_FUNCTION_5_39((uint64_t)objc_msgSend(v31, v24[229]), sel_scrollDirection);
          v33 = OUTLINED_FUNCTION_4_42();
          OUTLINED_FUNCTION_123((uint64_t)v33, v24[229]);
          OUTLINED_FUNCTION_4_42();
          if (v32 == (id)1)
            objc_msgSend(v31, v24[229], v26);
          else
            objc_msgSend(v31, v24[229]);
          IndexPath.item.getter();
          v34 = OUTLINED_FUNCTION_25_26();
          OUTLINED_FUNCTION_5_39((uint64_t)v34, sel_minimumInteritemSpacing);
          v35 = OUTLINED_FUNCTION_4_42();
          v36 = v24;
          OUTLINED_FUNCTION_123((uint64_t)v35, v24[229]);
          objc_msgSend(v31, sel_setZIndex_, 0);
          v37 = v146;
          OUTLINED_FUNCTION_49_14(v146, (uint64_t)v18);
          v38 = v145;
          OUTLINED_FUNCTION_2_0();
          v39 = v31;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v147 = *(_QWORD **)v38;
          v41 = v147;
          *(_QWORD *)v38 = 0x8000000000000000;
          v42 = specialized __RawDictionaryStorage.find<A>(_:)(v37);
          v44 = v41[2];
          v45 = (v43 & 1) == 0;
          v46 = v44 + v45;
          if (__OFADD__(v44, v45))
            goto LABEL_114;
          v47 = v42;
          v48 = v43;
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<IndexPath, UICollectionViewLayoutAttributes>);
          v49 = _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v46);
          v8 = v143;
          if (v49)
          {
            v50 = specialized __RawDictionaryStorage.find<A>(_:)(v146);
            if ((v48 & 1) != (v51 & 1))
              goto LABEL_132;
            v47 = v50;
          }
          v52 = v147;
          if ((v48 & 1) != 0)
          {
            v53 = v147[7];

            *(_QWORD *)(v53 + 8 * v47) = v39;
            v54 = v144;
          }
          else
          {
            v147[(v47 >> 6) + 8] |= 1 << v47;
            v54 = v144;
            OUTLINED_FUNCTION_49_14(v52[6] + v8[9] * v47, v146);
            *(_QWORD *)(v52[7] + 8 * v47) = v39;
            v55 = v52[2];
            v56 = __OFADD__(v55, 1);
            v57 = v55 + 1;
            if (v56)
            {
              __break(1u);
              goto LABEL_121;
            }
            v52[2] = v57;
          }
          v22 = (double *)((char *)v22 + 1);
          OUTLINED_FUNCTION_18_36();
          v58 = (void (*)(uint64_t, uint64_t))v8[1];
          v58(v146, v54);
          OUTLINED_FUNCTION_16_24();

          v58((uint64_t)v18, v54);
          v28 = (uint64_t)v140;
          v25 = v141;
          v24 = v36;
          v2 = v138;
          if (v140 == v22)
            goto LABEL_22;
        }
        __break(1u);
LABEL_114:
        __break(1u);
LABEL_115:
        OUTLINED_FUNCTION_21_25();
        goto LABEL_116;
      }
      v26 = 0.0;
LABEL_25:
      if (OUTLINED_FUNCTION_5_39(v23, sel_scrollDirection) == (id)1)
      {
        OUTLINED_FUNCTION_5_39(1, sel_minimumInteritemSpacing);
        v64 = v26 + v63;
        OUTLINED_FUNCTION_11_36();
        v65 = &v2[OBJC_IVAR____TtC15ConversationKit21ParticipantListLayout_calculatedContentSize];
        *(double *)v65 = v64;
        *((_QWORD *)v65 + 1) = v66;
        OUTLINED_FUNCTION_11_36();
        if (*(double *)v65 < v67)
        {
          v26 = v67;
          v140 = (double *)v65;
          OUTLINED_FUNCTION_0_53();
          v68 = 0;
          v141 = v1;
          if (!v24)
            goto LABEL_29;
LABEL_28:
          OUTLINED_FUNCTION_32_19();
          while (1)
          {
            OUTLINED_FUNCTION_7_48(v69);
            OUTLINED_FUNCTION_15_33();
            v81 = v135[5];
            if (v82)
              break;
            OUTLINED_FUNCTION_26_16();
            v83 = v145;
            OUTLINED_FUNCTION_2_0();
            v84 = *(_QWORD *)v83;
            if (*(_QWORD *)(*(_QWORD *)v83 + 16)
              && (v85 = specialized __RawDictionaryStorage.find<A>(_:)(v81), (v86 & 1) != 0))
            {
              v87 = *(void **)(*(_QWORD *)(v84 + 56) + 8 * v85);
              OUTLINED_FUNCTION_16_24();
              v88 = v87;
              OUTLINED_FUNCTION_123((uint64_t)objc_msgSend(v88, sel_frame), sel_setFrame_);
              OUTLINED_FUNCTION_23_27((uint64_t)&v149);
              OUTLINED_FUNCTION_2_0();
              v89 = v88;
              OUTLINED_FUNCTION_39_20();
              OUTLINED_FUNCTION_14_40();
              OUTLINED_FUNCTION_38_17();
              if (v56)
                goto LABEL_125;
              v92 = v90;
              v93 = v91;
              __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<IndexPath, UICollectionViewLayoutAttributes>);
              if (OUTLINED_FUNCTION_20_30())
              {
                v94 = specialized __RawDictionaryStorage.find<A>(_:)(v135[3]);
                if ((v93 & 1) != (v95 & 1))
                  goto LABEL_132;
                v92 = v94;
              }
              v96 = v147;
              if ((v93 & 1) != 0)
              {
                OUTLINED_FUNCTION_48_14();
                *(_QWORD *)(v81 + 8 * v92) = v88;
              }
              else
              {
                v97 = OUTLINED_FUNCTION_9_34();
                OUTLINED_FUNCTION_31_26(v97, (uint64_t)&v149);
                OUTLINED_FUNCTION_45_18();
                if (v56)
                  goto LABEL_128;
                v96[2] = v98;
              }
              OUTLINED_FUNCTION_18_36();
              OUTLINED_FUNCTION_13_39((uint64_t)&v149);
              OUTLINED_FUNCTION_16_24();

              v22 = v137;
            }
            else
            {
              OUTLINED_FUNCTION_16_24();
            }
            OUTLINED_FUNCTION_13_39((uint64_t)&v151);
            if (v24)
              goto LABEL_28;
LABEL_29:
            if (__OFADD__(v68, 1))
              goto LABEL_123;
            OUTLINED_FUNCTION_44_13();
            if (v71 == v56)
              goto LABEL_115;
            v68 = v70;
            if (!*(_QWORD *)(v142 + 8 * v70))
            {
              v68 = v70 + 1;
              OUTLINED_FUNCTION_8_42();
              if (v71 == v56)
                goto LABEL_115;
              OUTLINED_FUNCTION_17_30();
              if (!v73)
              {
                v68 = v72 + 2;
                OUTLINED_FUNCTION_8_42();
                if (v71 == v56)
                  goto LABEL_115;
                OUTLINED_FUNCTION_17_30();
                if (!v75)
                {
                  v68 = v74 + 3;
                  OUTLINED_FUNCTION_8_42();
                  if (v71 == v56)
                    goto LABEL_115;
                  OUTLINED_FUNCTION_17_30();
                  if (!v77)
                  {
                    v68 = v76 + 4;
                    OUTLINED_FUNCTION_8_42();
                    if (v71 == v56)
                      goto LABEL_115;
                    OUTLINED_FUNCTION_17_30();
                    if (!v78)
                    {
                      OUTLINED_FUNCTION_44_13();
                      if (v71 == v56)
                        goto LABEL_115;
                      if (!*(_QWORD *)(v142 + 8 * v79))
                      {
                        while (1)
                        {
                          v68 = v79 + 1;
                          if (__OFADD__(v79, 1))
                            goto LABEL_130;
                          OUTLINED_FUNCTION_8_42();
                          if (v71 == v56)
                            goto LABEL_115;
                          v79 = v80 + 1;
                          if (*(_QWORD *)(v142 + 8 * v68))
                            goto LABEL_53;
                        }
                      }
                      v68 = v79;
                    }
                  }
                }
              }
            }
LABEL_53:
            OUTLINED_FUNCTION_30_24();
          }
LABEL_116:

          swift_release();
          *v140 = v26;
          return;
        }
      }
      else
      {
        v99 = OUTLINED_FUNCTION_11_36();
        v101 = v100;
        OUTLINED_FUNCTION_5_39((uint64_t)v99, sel_minimumInteritemSpacing);
        v103 = (double *)&v2[OBJC_IVAR____TtC15ConversationKit21ParticipantListLayout_calculatedContentSize];
        *(_QWORD *)v103 = v101;
        v103[1] = v26 + v102;
        OUTLINED_FUNCTION_11_36();
        if (v103[1] < v104)
        {
          v105 = v104;
          v140 = v103;
          OUTLINED_FUNCTION_0_53();
          v106 = 0;
          v141 = v1;
          if (!v24)
            goto LABEL_72;
LABEL_71:
          OUTLINED_FUNCTION_32_19();
          while (1)
          {
            OUTLINED_FUNCTION_7_48(v107);
            OUTLINED_FUNCTION_15_33();
            v118 = v135[6];
            if (v82)
              goto LABEL_118;
            OUTLINED_FUNCTION_26_16();
            v119 = v145;
            OUTLINED_FUNCTION_2_0();
            v120 = *(_QWORD *)v119;
            if (*(_QWORD *)(*(_QWORD *)v119 + 16)
              && (v121 = specialized __RawDictionaryStorage.find<A>(_:)(v118), (v122 & 1) != 0))
            {
              v123 = *(void **)(*(_QWORD *)(v120 + 56) + 8 * v121);
              OUTLINED_FUNCTION_16_24();
              v124 = v123;
              OUTLINED_FUNCTION_123((uint64_t)objc_msgSend(v124, sel_frame), sel_setFrame_);
              OUTLINED_FUNCTION_23_27((uint64_t)&v150);
              OUTLINED_FUNCTION_2_0();
              v125 = v124;
              OUTLINED_FUNCTION_39_20();
              OUTLINED_FUNCTION_14_40();
              OUTLINED_FUNCTION_38_17();
              if (v56)
                goto LABEL_126;
              v128 = v126;
              v129 = v127;
              __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<IndexPath, UICollectionViewLayoutAttributes>);
              if (OUTLINED_FUNCTION_20_30())
              {
                v130 = specialized __RawDictionaryStorage.find<A>(_:)(v135[4]);
                if ((v129 & 1) != (v131 & 1))
                  goto LABEL_132;
                v128 = v130;
              }
              v132 = v147;
              if ((v129 & 1) != 0)
              {
                OUTLINED_FUNCTION_48_14();
                *(_QWORD *)(v118 + 8 * v128) = v124;
              }
              else
              {
                v133 = OUTLINED_FUNCTION_9_34();
                OUTLINED_FUNCTION_31_26(v133, (uint64_t)&v150);
                OUTLINED_FUNCTION_45_18();
                if (v56)
                  goto LABEL_129;
                v132[2] = v134;
              }
              OUTLINED_FUNCTION_18_36();
              OUTLINED_FUNCTION_13_39((uint64_t)&v150);
              OUTLINED_FUNCTION_16_24();

              v22 = v137;
            }
            else
            {
              OUTLINED_FUNCTION_16_24();
            }
            OUTLINED_FUNCTION_13_39((uint64_t)&v152);
            if (v24)
              goto LABEL_71;
LABEL_72:
            if (__OFADD__(v106, 1))
              goto LABEL_124;
            OUTLINED_FUNCTION_44_13();
            if (v71 == v56)
            {
LABEL_117:
              OUTLINED_FUNCTION_21_25();
LABEL_118:

              swift_release();
              v140[1] = v105;
              return;
            }
            v106 = v108;
            if (!*(_QWORD *)(v142 + 8 * v108))
            {
              v106 = v108 + 1;
              OUTLINED_FUNCTION_8_42();
              if (v71 == v56)
                goto LABEL_117;
              OUTLINED_FUNCTION_17_30();
              if (!v110)
              {
                v106 = v109 + 2;
                OUTLINED_FUNCTION_8_42();
                if (v71 == v56)
                  goto LABEL_117;
                OUTLINED_FUNCTION_17_30();
                if (!v112)
                {
                  v106 = v111 + 3;
                  OUTLINED_FUNCTION_8_42();
                  if (v71 == v56)
                    goto LABEL_117;
                  OUTLINED_FUNCTION_17_30();
                  if (!v114)
                  {
                    v106 = v113 + 4;
                    OUTLINED_FUNCTION_8_42();
                    if (v71 == v56)
                      goto LABEL_117;
                    OUTLINED_FUNCTION_17_30();
                    if (!v115)
                    {
                      OUTLINED_FUNCTION_44_13();
                      if (v71 == v56)
                        goto LABEL_117;
                      if (!*(_QWORD *)(v142 + 8 * v116))
                      {
                        while (1)
                        {
                          v106 = v116 + 1;
                          if (__OFADD__(v116, 1))
                            goto LABEL_131;
                          OUTLINED_FUNCTION_8_42();
                          if (v71 == v56)
                            goto LABEL_117;
                          v116 = v117 + 1;
                          if (*(_QWORD *)(v142 + 8 * v106))
                            goto LABEL_96;
                        }
                      }
                      v106 = v116;
                    }
                  }
                }
              }
            }
LABEL_96:
            OUTLINED_FUNCTION_30_24();
          }
        }
      }

      return;
    }
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
  }
}

void ParticipantListLayout.updateItemSize()()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  double Width;
  double v10;
  double v11;
  double v12;
  char *v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v16;
  char v17;
  char v18;
  double v19;

  v1 = v0;
  v2 = objc_msgSend(v0, sel_collectionView);
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(v0, sel_scrollDirection);
    objc_msgSend(v3, sel_bounds);
    if (v4 == (id)1)
      Width = CGRectGetWidth(*(CGRect *)&v5);
    else
      Width = CGRectGetHeight(*(CGRect *)&v5);
    v10 = Width;
    static Platform.current.getter();
    static Platform.current.getter();
    objc_msgSend(v3, sel_displayScale);
    v12 = v11;
    v13 = &v1[OBJC_IVAR____TtC15ConversationKit21ParticipantListLayout_delegate];
    swift_beginAccess();
    if (MEMORY[0x1C3B752C0](v13))
    {
      v14 = *((_QWORD *)v13 + 1);
      ObjectType = swift_getObjectType();
      v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(ObjectType, v14);
      LOBYTE(v14) = v17;
      swift_unknownObjectRelease();
      v18 = v14 & 1;
    }
    else
    {
      v16 = 0;
      v18 = 1;
    }
    v19 = static ParticipantListLayout.itemWidth(for:remoteCellCount:displayScale:includeLocalParticipant:configurableRosterCellWidth:)(0, v16, v18, v10 + -10.0, 3.5, v12);
    objc_msgSend(v1, sel_setItemSize_, v19, v19);

  }
}

id @nonobjc UICollectionViewLayoutAttributes.__allocating_init(forCellWith:)(uint64_t a1)
{
  Class isa;
  id v3;
  uint64_t v4;

  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v3 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_layoutAttributesForCellWithIndexPath_, isa);

  v4 = type metadata accessor for IndexPath();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return v3;
}

double ParticipantListLayout.collectionViewContentSize.getter()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC15ConversationKit21ParticipantListLayout_calculatedContentSize);
}

Swift::Bool __swiftcall ParticipantListLayout.shouldInvalidateLayout(forBoundsChange:)(__C::CGRect forBoundsChange)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Bool result;

  v2 = v1 + OBJC_IVAR____TtC15ConversationKit21ParticipantListLayout_lastInvalidatedSize;
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit21ParticipantListLayout_lastInvalidatedSize + 16) & 1) == 0
    && *(double *)v2 == forBoundsChange.size.width
    && *(double *)(v2 + 8) == forBoundsChange.size.height)
  {
    return 0;
  }
  *(CGFloat *)v2 = forBoundsChange.size.width;
  *(CGFloat *)(v2 + 8) = forBoundsChange.size.height;
  result = 1;
  *(_BYTE *)(v2 + 16) = 0;
  return result;
}

void *ParticipantListLayout.layoutAttributesForItem(at:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  void *v7;
  id v8;

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit21ParticipantListLayout_indexPathLayoutAttributes);
  OUTLINED_FUNCTION_2_0();
  v4 = *v3;
  if (*(_QWORD *)(v4 + 16) && (v5 = specialized __RawDictionaryStorage.find<A>(_:)(a1), (v6 & 1) != 0))
  {
    v7 = *(void **)(*(_QWORD *)(v4 + 56) + 8 * v5);
    v8 = v7;
  }
  else
  {
    v7 = 0;
  }
  swift_endAccess();
  return v7;
}

uint64_t ParticipantListLayout._layoutAttributesForElements(in:)(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t i;
  id v13;
  void *v14;
  CGFloat v15;
  CGFloat v16;
  CGFloat v17;
  CGFloat v18;
  uint64_t v19;
  uint64_t v20;
  CGRect v21;
  CGRect v22;

  swift_beginAccess();
  v8 = swift_bridgeObjectRetain();
  v9 = specialized _copyCollectionToContiguousArray<A>(_:)(v8);
  swift_bridgeObjectRelease();
  v20 = MEMORY[0x1E0DEE9D8];
  if ((v9 & 0x8000000000000000) == 0 && (v9 & 0x4000000000000000) == 0)
  {
    v10 = *(_QWORD *)(v9 + 16);
    result = swift_retain();
    if (v10)
      goto LABEL_4;
LABEL_17:
    swift_release();
    v19 = MEMORY[0x1E0DEE9D8];
LABEL_18:
    swift_release();
    return v19;
  }
  swift_retain();
  result = _CocoaArrayWrapper.endIndex.getter();
  v10 = result;
  if (!result)
    goto LABEL_17;
LABEL_4:
  if (v10 >= 1)
  {
    for (i = 0; i != v10; ++i)
    {
      if ((v9 & 0xC000000000000001) != 0)
        v13 = (id)MEMORY[0x1C3B73D18](i, v9);
      else
        v13 = *(id *)(v9 + 8 * i + 32);
      v14 = v13;
      objc_msgSend(v13, sel_frame, v20);
      v22.origin.x = v15;
      v22.origin.y = v16;
      v22.size.width = v17;
      v22.size.height = v18;
      v21.origin.x = a1;
      v21.origin.y = a2;
      v21.size.width = a3;
      v21.size.height = a4;
      if (CGRectIntersectsRect(v21, v22))
      {
        MEMORY[0x1C3B7301C]();
        if (*(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      else
      {

      }
    }
    swift_release();
    v19 = v20;
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

double static ParticipantListLayout.itemWidth(for:remoteCellCount:displayScale:includeLocalParticipant:configurableRosterCellWidth:)(char a1, uint64_t a2, char a3, double a4, double a5, double a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  double v16;
  double v17;
  double v18;
  double v19;
  uint64_t v21;

  v12 = type metadata accessor for FloatingPointRoundingRule();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 1) == 0)
    return *(double *)&a2;
  v17 = a5 + 1.0;
  static Platform.current.getter();
  v18 = 0.0;
  if ((a1 & 1) == 0)
    v18 = 1.0;
  v19 = (a4 + v17 * -3.0) / (v17 - v18);
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E0DED500], v12);
  v16 = CGFloat.rounded(_:toScale:)((uint64_t)v15, a6, v19);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return v16;
}

id ParticipantListLayout.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)OUTLINED_FUNCTION_15_6();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t specialized __RawDictionaryStorage.find<A>(_:)(uint64_t a1, uint64_t a2)
{
  Swift::Int v4;

  OUTLINED_FUNCTION_1_42();
  String.hash(into:)();
  v4 = OUTLINED_FUNCTION_4_6();
  return specialized __RawDictionaryStorage.find<A>(_:hashValue:)(a1, a2, v4);
}

unint64_t specialized __RawDictionaryStorage.find<A>(_:)(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  type metadata accessor for UUID();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
  lazy protocol witness table accessor for type TranscriptionViewModel and conformance TranscriptionViewModel((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  v3 = dispatch thunk of Hashable._rawHashValue(seed:)();
  return specialized __RawDictionaryStorage.find<A>(_:hashValue:)(a1, v3, v2, (unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x1E0CB09D0]);
}

{
  Swift::Int v2;

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  Hasher.init(_seed:)();
  String.hash(into:)();
  v2 = OUTLINED_FUNCTION_4_6();
  swift_bridgeObjectRelease();
  return specialized __RawDictionaryStorage.find<A>(_:hashValue:)(a1, v2);
}

{
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  Swift::Int v10;
  uint64_t v12;
  char v13;

  v2 = OUTLINED_FUNCTION_1_42();
  OUTLINED_FUNCTION_36_21(v2, v3, v4, v5, v6, v7, v8, v9, v12, v13);
  v10 = OUTLINED_FUNCTION_4_6();
  return specialized __RawDictionaryStorage.find<A>(_:hashValue:)(a1, v10);
}

{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;

  v2 = v1;
  v4 = AnyHashable._rawHashValue(seed:)(*(_QWORD *)(v2 + 40));
  return specialized __RawDictionaryStorage.find<A>(_:hashValue:)(a1, v4);
}

{
  Swift::UInt16 v2;
  Swift::Int v3;

  OUTLINED_FUNCTION_1_42();
  v2 = MessageType.rawValue.getter();
  Hasher._combine(_:)(v2);
  v3 = OUTLINED_FUNCTION_4_6();
  return specialized __RawDictionaryStorage.find<A>(_:hashValue:)(a1, v3);
}

{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  type metadata accessor for IndexPath();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1658];
  lazy protocol witness table accessor for type TranscriptionViewModel and conformance TranscriptionViewModel(&lazy protocol witness table cache variable for type IndexPath and conformance IndexPath, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1658], MEMORY[0x1E0CB1668]);
  v3 = dispatch thunk of Hashable._rawHashValue(seed:)();
  return specialized __RawDictionaryStorage.find<A>(_:hashValue:)(a1, v3, v2, (unint64_t *)&lazy protocol witness table cache variable for type IndexPath and conformance IndexPath, MEMORY[0x1E0CB1680]);
}

{
  Swift::Int v2;
  _BYTE v4[72];

  OUTLINED_FUNCTION_1_42();
  ObjectTracker.RuleGroup.hash(into:)((uint64_t)v4);
  v2 = OUTLINED_FUNCTION_4_6();
  return specialized __RawDictionaryStorage.find<A>(_:hashValue:)(a1, v2);
}

unint64_t specialized __RawDictionaryStorage.find<A>(_:)(char a1, uint64_t a2, uint64_t a3)
{
  int v5;
  Swift::Int v6;

  v5 = a1 & 1;
  Hasher.init(_seed:)();
  MultiwayViewConstraintsController.OverallLayoutState.hash(into:)();
  v6 = Hasher._finalize()();
  return specialized __RawDictionaryStorage.find<A>(_:hashValue:)(v5, a2, a3 & 0x10101FF01FFFFLL, v6);
}

void specialized __RawDictionaryStorage.find<A>(_:)()
{
  specialized __RawDictionaryStorage.find<A>(_:)();
}

{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_29_21();
  specialized __RawDictionaryStorage.find<A>(_:hashValue:)(v0, v1);
  OUTLINED_FUNCTION_0();
}

{
  specialized __RawDictionaryStorage.find<A>(_:)();
}

{
  Swift::Int v0;

  OUTLINED_FUNCTION_1_42();
  String.hash(into:)();
  v0 = OUTLINED_FUNCTION_4_6();
  specialized __RawDictionaryStorage.find<A>(_:hashValue:)(v0);
  OUTLINED_FUNCTION_95_0();
}

{
  Swift::Int v0;

  v0 = OUTLINED_FUNCTION_28_25();
  OUTLINED_FUNCTION_43_17(v0, v0);
  OUTLINED_FUNCTION_0();
}

{
  Swift::Int v0;

  v0 = OUTLINED_FUNCTION_28_25();
  OUTLINED_FUNCTION_43_17(v0, v0);
  OUTLINED_FUNCTION_0();
}

unint64_t specialized __RawDictionaryStorage.find<A>(_:)(unsigned __int8 a1)
{
  Swift::Int v2;

  OUTLINED_FUNCTION_1_42();
  Hasher._combine(_:)(a1 & 1);
  v2 = OUTLINED_FUNCTION_4_6();
  return specialized __RawDictionaryStorage.find<A>(_:hashValue:)(a1, v2);
}

unint64_t specialized __RawDictionaryStorage.find<A>(_:)(char a1)
{
  char v2;
  Swift::Int v3;

  v2 = a1 & 1;
  Hasher.init(_seed:)();
  OUTLINED_FUNCTION_16_4(a1 & 1);
  v3 = OUTLINED_FUNCTION_4_6();
  return specialized __RawDictionaryStorage.find<A>(_:hashValue:)(v2, v3);
}

{
  uint64_t v1;
  uint64_t v3;

  specialized RawRepresentable<>._rawHashValue(seed:)(*(_QWORD *)(v1 + 40), a1);
  return specialized __RawDictionaryStorage.find<A>(_:hashValue:)(a1, v3);
}

unint64_t specialized __RawDictionaryStorage.find<A>(_:hashValue:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0);
    }
  }
  return v6;
}

unint64_t specialized __RawDictionaryStorage.find<A>(_:hashValue:)(int a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  int v14;
  unsigned int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  BOOL v21;
  int v22;
  int v23;
  int v24;
  BOOL v25;
  int v26;
  int v27;

  v6 = v4 + 64;
  v7 = -1 << *(_BYTE *)(v4 + 32);
  result = a4 & ~v7;
  if (((*(_QWORD *)(v4 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v9 = ~v7;
    v10 = *(_QWORD *)(v4 + 48);
    v11 = HIDWORD(a3) & 1;
    v12 = (a3 >> 16) & 1;
    while (1)
    {
      v13 = (unsigned __int8 *)(v10 + 24 * result);
      if (((a1 ^ *v13) & 1) != 0 || *((_QWORD *)v13 + 1) != a2)
        goto LABEL_39;
      v14 = v13[16];
      v15 = v13[17];
      v16 = v13[18];
      v17 = v13[19];
      v18 = v13[20];
      v19 = v13[21];
      v20 = v13[22];
      if (v14)
      {
        if (v14 == 1)
        {
          if (a3 != 1)
            goto LABEL_39;
        }
        else if (a3 != 2)
        {
          goto LABEL_39;
        }
      }
      else if ((_BYTE)a3)
      {
        goto LABEL_39;
      }
      if (!(v15 >> 6))
        break;
      if (v15 >> 6 == 1)
      {
        if ((BYTE1(a3) & 0xC0) != 0x40)
          goto LABEL_39;
        v21 = ((a3 >> 8) & 0x3F) == (v15 & 0x3F);
        goto LABEL_18;
      }
      v23 = v12 ^ v16;
      v24 = v11 ^ v18;
      if (v15 == 128)
        v25 = BYTE1(a3) == 128;
      else
        v25 = BYTE1(a3) == 129;
      if (!v25)
        v23 = 1;
      if (v17 == BYTE3(a3))
        v26 = v23;
      else
        v26 = 1;
      if (((v26 | v24) & 1) != 0)
        goto LABEL_39;
LABEL_35:
      v27 = HIWORD(a3) & 1 ^ v20;
      if (((a3 >> 40) & 1) == v19 && v27 == 0)
        return result;
LABEL_39:
      result = (result + 1) & v9;
      if (((*(_QWORD *)(v6 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) == 0)
        return result;
    }
    if (BYTE1(a3) >= 0x40u)
      goto LABEL_39;
    v21 = v15 == BYTE1(a3);
LABEL_18:
    v22 = v21;
    if (!v22 || ((v12 ^ v16) & 1) != 0 || v17 != BYTE3(a3) || ((v11 ^ v18) & 1) != 0)
      goto LABEL_39;
    goto LABEL_35;
  }
  return result;
}

unint64_t specialized __RawDictionaryStorage.find<A>(_:hashValue:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v8 = v7;
    if (v6 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      v12 = ~v4;
      v5 = (v5 + 1) & v12;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          v15 = v14;
          if (v13 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v15 == v16)
            break;
          v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            v5 = (v5 + 1) & v12;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      outlined init with copy of AnyHashable(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x1C3B73C70](v9, a1);
      outlined destroy of AnyHashable((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  int v6;
  uint64_t v7;
  int v8;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v6 = (unsigned __int16)MessageType.rawValue.getter();
    if (v6 != (unsigned __int16)MessageType.rawValue.getter())
    {
      v7 = ~v4;
      for (i = (i + 1) & v7; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v7)
      {
        v8 = (unsigned __int16)MessageType.rawValue.getter();
        if (v8 == (unsigned __int16)MessageType.rawValue.getter())
          break;
      }
    }
  }
  return i;
}

{
  uint64_t v2;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  char v18;
  uint64_t v20;

  v5 = (int *)type metadata accessor for ObjectTracker.RuleGroup(0);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = -1 << *(_BYTE *)(v2 + 32);
  v10 = a2 & ~v9;
  if (((*(_QWORD *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    v12 = *(_QWORD *)(v6 + 72);
    while (1)
    {
      outlined init with copy of ObjectTracker.RuleGroup(*(_QWORD *)(v2 + 48) + v12 * v10, (uint64_t)v8);
      if ((static UUID.== infix(_:_:)() & 1) != 0)
      {
        v13 = v5[5];
        v14 = *(_QWORD *)&v8[v13];
        v15 = *(_QWORD *)&v8[v13 + 8];
        v16 = (_QWORD *)(a1 + v13);
        v17 = v14 == *v16 && v15 == v16[1];
        if (v17 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          specialized static Set.== infix(_:_:)(*(_QWORD *)&v8[v5[6]], *(_QWORD *)(a1 + v5[6]));
          if ((v18 & 1) != 0 && v8[v5[7]] == *(_BYTE *)(a1 + v5[7]))
            break;
        }
      }
      outlined destroy of ObjectTracker.RuleGroup((uint64_t)v8);
      v10 = (v10 + 1) & v11;
      if (((*(_QWORD *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        return v10;
    }
    outlined destroy of ObjectTracker.RuleGroup((uint64_t)v8);
  }
  return v10;
}

uint64_t specialized __RawDictionaryStorage.find<A>(_:hashValue:)(uint64_t a1)
{
  uint64_t v1;

  return a1 & ~(-1 << *(_BYTE *)(v1 + 32));
}

unint64_t specialized __RawDictionaryStorage.find<A>(_:hashValue:)(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_BYTE *)(v7 + result) != (a1 & 1))
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (((*(_BYTE *)(v7 + result) ^ a1) & 1) == 0)
          break;
      }
    }
  }
  return result;
}

uint64_t specialized __RawDictionaryStorage.find<A>(_:hashValue:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  char v6;
  id v7;
  char v8;
  uint64_t v9;
  char v10;
  id v11;
  char v12;
  char v13;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  OUTLINED_FUNCTION_19_29();
  if ((v6 & 1) != 0)
  {
    _sSo8NSObjectCMaTm_0(0, v5);
    v7 = OUTLINED_FUNCTION_47_6();
    v8 = static NSObject.== infix(_:_:)();

    if ((v8 & 1) == 0)
    {
      v9 = ~v3;
      v4 = (v4 + 1) & v9;
      OUTLINED_FUNCTION_19_29();
      if ((v10 & 1) != 0)
      {
        do
        {
          v11 = OUTLINED_FUNCTION_47_6();
          v12 = static NSObject.== infix(_:_:)();

          if ((v12 & 1) != 0)
            break;
          v4 = (v4 + 1) & v9;
          OUTLINED_FUNCTION_19_29();
        }
        while ((v13 & 1) != 0);
      }
    }
  }
  return v4;
}

unint64_t specialized __RawDictionaryStorage.find<A>(_:hashValue:)(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (((((a1 & 1) == 0) ^ *(unsigned __int8 *)(v7 + result)) & 1) == 0)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (((((a1 & 1) == 0) ^ *(_BYTE *)(v7 + result)) & 1) != 0)
          break;
      }
    }
  }
  return result;
}

{
  uint64_t v2;
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  uint64_t v7;

  v4 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v6 = ~v4;
    v7 = *(_QWORD *)(v2 + 48);
    do
    {
      if (*(_BYTE *)(v7 + result))
      {
        if (*(_BYTE *)(v7 + result) == 1)
        {
          if (a1 == 1)
            return result;
        }
        else if (a1 == 2)
        {
          return result;
        }
      }
      else if (!a1)
      {
        return result;
      }
      result = (result + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

uint64_t dispatch thunk of ParticipantListLayoutDelegate.configurableRosterCellWidth.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t type metadata accessor for ParticipantListLayout()
{
  return objc_opt_self();
}

uint64_t outlined init with copy of ObjectTracker.RuleGroup(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ObjectTracker.RuleGroup(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of ObjectTracker.RuleGroup(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ObjectTracker.RuleGroup(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t outlined init with copy of AnyHashable(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t outlined destroy of AnyHashable(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 8))();
  return a1;
}

uint64_t OUTLINED_FUNCTION_39_20()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t protocol witness for ParticipantsViewController.participantsViewControllerDelegate.getter in conformance CaptionsViewController()
{
  return specialized ParticipantsViewController.participantsViewControllerDelegate.getter();
}

uint64_t specialized ParticipantsViewController.participantsViewControllerDelegate.getter()
{
  return 0;
}

uint64_t ParticipantsViewController.participantsViewControllerDelegate.getter()
{
  return 0;
}

uint64_t (*protocol witness for ParticipantsViewController.participantsViewControllerDelegate.modify in conformance CaptionsViewController(_QWORD *a1))()
{
  *a1 = 0;
  a1[1] = 0;
  return protocol witness for ParticipantsViewController.participantsViewControllerDelegate.modify in conformance CaptionsViewController;
}

uint64_t (*ParticipantsViewController.participantsViewControllerDelegate.modify(_QWORD *a1))()
{
  *a1 = 0;
  a1[1] = 0;
  return protocol witness for ParticipantsViewController.participantsViewControllerDelegate.modify in conformance CaptionsViewController;
}

uint64_t protocol witness for ParticipantsViewController.participantIdentifiers.getter in conformance CaptionsViewController()
{
  return specialized ParticipantsViewController.participantIdentifiers.getter();
}

uint64_t specialized ParticipantsViewController.participantIdentifiers.getter()
{
  return MEMORY[0x1E0DEE9D8];
}

uint64_t ParticipantsViewController.participantIdentifiers.getter()
{
  return MEMORY[0x1E0DEE9D8];
}

uint64_t ParticipantsViewController.participantCount.getter()
{
  return 0;
}

void protocol witness for ParticipantsViewController.update(participant:broadcastingState:) in conformance CaptionsViewController(uint64_t a1)
{
  TPNumberPadCharacter.rawValue.getter(a1);
  OUTLINED_FUNCTION_0();
}

void protocol witness for ParticipantsViewController.update(participant:localParticipantOrientation:) in conformance CaptionsViewController()
{
  protocol witness for Animatable.animatableData.getter in conformance ClarityUIDialerKeypadView.BarShape();
  OUTLINED_FUNCTION_0();
}

uint64_t protocol witness for ParticipantsViewController.spatialPosition(for:relativeTo:) in conformance CaptionsViewController(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return protocol witness for ParticipantsViewController.spatialPosition(for:relativeTo:) in conformance CaptionsViewController(a1, a2, a3, a4, specialized ParticipantsViewController.spatialPosition(for:relativeTo:));
}

double ParticipantsViewController.spatialPosition(for:relativeTo:)()
{
  return 0.0;
}

uint64_t key path setter for ParticipantsViewController.participantsViewControllerDelegate : <A>A()
{
  uint64_t v0;

  v0 = swift_unknownObjectRetain();
  return ParticipantsViewController.participantsViewControllerDelegate.setter(v0);
}

uint64_t (*protocol witness for ParticipantsViewController.participantsViewControllerDelegate.modify in conformance InCallBannerHostViewController(_QWORD *a1))()
{
  *a1 = 0;
  a1[1] = 0;
  return protocol witness for ParticipantsViewController.participantsViewControllerDelegate.modify in conformance InCallBannerHostViewController;
}

void protocol witness for ParticipantsViewController.update(with:updateReason:) in conformance InCallBannerHostViewController(uint64_t a1)
{
  TPNumberPadCharacter.rawValue.getter(a1);
  OUTLINED_FUNCTION_0();
}

uint64_t protocol witness for ParticipantsViewController.spatialPosition(for:relativeTo:) in conformance InCallBannerHostViewController(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return protocol witness for ParticipantsViewController.spatialPosition(for:relativeTo:) in conformance CaptionsViewController(a1, a2, a3, a4, (uint64_t (*)(void))OUTLINED_FUNCTION_29);
}

uint64_t protocol witness for ParticipantsViewController.spatialPosition(for:relativeTo:) in conformance CaptionsViewController(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return a5();
}

uint64_t specialized static Array._allocateUninitialized(_:)(uint64_t a1)
{
  return specialized static Array._allocateUninitialized(_:)(a1, (void (*)(_QWORD))type metadata accessor for Participant);
}

{
  return specialized static Array._allocateUninitialized(_:)(a1, (void (*)(_QWORD))MEMORY[0x1E0CB0998]);
}

{
  return specialized static Array._allocateUninitialized(_:)(a1, (void (*)(_QWORD))type metadata accessor for Participant.Caption);
}

{
  return specialized static Array._allocateUninitialized(_:)(a1, (void (*)(_QWORD))type metadata accessor for HUDActivityManager.BannerUpdate);
}

{
  return specialized static Array._allocateUninitialized(_:)(a1, (void (*)(_QWORD))type metadata accessor for CaptionSectioner.Caption);
}

{
  return specialized static Array._allocateUninitialized(_:)(a1, (void (*)(_QWORD))type metadata accessor for TranscriptionViewModel.Caption);
}

{
  return specialized static Array._allocateUninitialized(_:)(a1, (void (*)(_QWORD))MEMORY[0x1E0CB1658]);
}

void sub_1BD0E011C(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

uint64_t sub_1BD0E0128()
{
  return 16;
}

__n128 sub_1BD0E0134(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t getEnumTagSinglePayload for ParticipantsViewControllerUpdateReason(uint64_t a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
  {
    v6 = *(unsigned __int8 *)(a1 + 1);
    if (v6 >= 3)
      return (v6 ^ 0xFF) + 1;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 65282;
    if (a2 + 65282 <= 0xFFFEFFFF)
      v3 = 2;
    else
      v3 = 4;
    if (v2 < 0xFF0000)
      v3 = 1;
    if (v2 >= 0x10000)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1BD0E0190 + 4 * byte_1BD6499F0[v4]))();
  }
}

uint64_t storeEnumTagSinglePayload for ParticipantsViewControllerUpdateReason(_WORD *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 65282;
  if (a3 + 65282 <= 0xFFFEFFFF)
    v4 = 2;
  else
    v4 = 4;
  if (v3 < 0xFF0000)
    v4 = 1;
  if (v3 >= 0x10000)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFE)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BD0E0234 + 4 * byte_1BD6499FA[v5]))();
  *a1 = a2 - 254;
  return ((uint64_t (*)(void))((char *)sub_1BD0E0268 + 4 * byte_1BD6499F5[v5]))();
}

uint64_t sub_1BD0E0268(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1BD0E0270(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x1BD0E0278);
  return result;
}

uint64_t sub_1BD0E0284(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x1BD0E028CLL);
  *(_BYTE *)(result + 1) = -(char)a2;
  return result;
}

uint64_t sub_1BD0E0290(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1BD0E0298(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

uint64_t getEnumTag for ParticipantsViewControllerUpdateReason(unsigned __int8 *a1)
{
  uint64_t result;

  result = a1[1];
  if (result >= 2)
    return (*a1 | ((_DWORD)result << 8)) - 510;
  return result;
}

_BYTE *destructiveInjectEnumTag for ParticipantsViewControllerUpdateReason(_BYTE *result, unsigned int a2)
{
  char v2;

  if (a2 > 1)
  {
    v2 = a2 - 2;
    a2 = ((a2 - 2) >> 8) + 2;
    *result = v2;
  }
  result[1] = a2;
  return result;
}

ValueMetadata *type metadata accessor for ParticipantsViewControllerUpdateReason()
{
  return &type metadata for ParticipantsViewControllerUpdateReason;
}

uint64_t dispatch thunk of ParticipantsViewController.participantsViewControllerDelegate.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of ParticipantsViewController.participantsViewControllerDelegate.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of ParticipantsViewController.participantIdentifiers.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of ParticipantsViewController.participantCount.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of ParticipantsViewController.update(participant:broadcastingState:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 48))();
}

uint64_t dispatch thunk of ParticipantsViewController.update(participant:isKickingAvailable:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t dispatch thunk of ParticipantsViewController.update(participant:audioPower:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of ParticipantsViewController.update(participant:gradientOverlayAlpha:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t dispatch thunk of ParticipantsViewController.updateLocalViews(for:isLocalMemberAuthorizedToChangeGroupMembership:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 96))();
}

uint64_t dispatch thunk of ParticipantsViewController.removeAllParticipants()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of ParticipantsViewController.spatialPosition(for:relativeTo:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 112))();
}

uint64_t dispatch thunk of ParticipantsViewControllerDelegate.supportedDeviceOrientations.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ParticipantsViewControllerDelegate.layoutIdiom.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of ParticipantsViewControllerDelegate.participantsViewController(_:didTapToggleFocus:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of ParticipantsViewControllerDelegate.participantsViewController(_:didTapShutter:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of ParticipantsViewControllerDelegate.participantsViewController(_:didTapRing:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of ParticipantsViewControllerDelegate.participantsViewController(_:willDisplay:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

void specialized static Array._allocateUninitialized(_:)(uint64_t a1, unint64_t *a2)
{
  if (a1 < 0)
  {
    OUTLINED_FUNCTION_1_43();
    OUTLINED_FUNCTION_0_54();
    __break(1u);
  }
  else
  {
    if (a1)
    {
      _sSo8NSObjectCMaTm_0(0, a2);
      *(_QWORD *)((OUTLINED_FUNCTION_8_43() & 0xFFFFFFFFFFFFF8) + 0x10) = a1;
    }
    OUTLINED_FUNCTION_32();
  }
}

uint64_t specialized static Array._allocateUninitialized(_:)(uint64_t a1, void (*a2)(_QWORD))
{
  uint64_t v4;
  uint64_t result;

  if (a1 < 0)
  {
    OUTLINED_FUNCTION_1_43();
    result = OUTLINED_FUNCTION_0_54();
    __break(1u);
  }
  else
  {
    if (a1)
    {
      a2(0);
      v4 = static Array._allocateBufferUninitialized(minimumCapacity:)();
      *(_QWORD *)(v4 + 16) = a1;
    }
    else
    {
      v4 = MEMORY[0x1E0DEE9D8];
    }
    a2(0);
    OUTLINED_FUNCTION_73_0();
    return v4;
  }
  return result;
}

uint64_t dispatch thunk of ViewConstraintManager.constraintsForLayout(_:in:deviceOrientation:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

void specialized Sequence.compactMap<A>(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = a1 + 56;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 56);
  v6 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  v7 = 0;
  v25 = MEMORY[0x1E0DEE9D8];
  while (v5)
  {
    v8 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    v9 = v8 | (v7 << 6);
LABEL_22:
    v13 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v9);
    v14 = *v13;
    v15 = v13[1];
    swift_bridgeObjectRetain();
    v16 = (void *)MEMORY[0x1C3B72E00](v14, v15);
    v17 = (id)TUCopyIDSCanonicalAddressForDestinationID();

    if (v17)
    {
      v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v20 = v19;
      swift_bridgeObjectRelease();

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v25 = v23;
      }
      v21 = *(_QWORD *)(v25 + 16);
      if (v21 >= *(_QWORD *)(v25 + 24) >> 1)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v25 = v24;
      }
      *(_QWORD *)(v25 + 16) = v21 + 1;
      v22 = v25 + 16 * v21;
      *(_QWORD *)(v22 + 32) = v18;
      *(_QWORD *)(v22 + 40) = v20;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  v10 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
    goto LABEL_31;
  }
  if (v10 >= v6)
    goto LABEL_29;
  v11 = *(_QWORD *)(v2 + 8 * v10);
  ++v7;
  if (v11)
    goto LABEL_21;
  v7 = v10 + 1;
  if (v10 + 1 >= v6)
    goto LABEL_29;
  v11 = *(_QWORD *)(v2 + 8 * v7);
  if (v11)
    goto LABEL_21;
  v7 = v10 + 2;
  if (v10 + 2 >= v6)
    goto LABEL_29;
  v11 = *(_QWORD *)(v2 + 8 * v7);
  if (v11)
    goto LABEL_21;
  v7 = v10 + 3;
  if (v10 + 3 >= v6)
    goto LABEL_29;
  v11 = *(_QWORD *)(v2 + 8 * v7);
  if (v11)
  {
LABEL_21:
    v5 = (v11 - 1) & v11;
    v9 = __clz(__rbit64(v11)) + (v7 << 6);
    goto LABEL_22;
  }
  v12 = v10 + 4;
  if (v12 >= v6)
  {
LABEL_29:
    swift_release();
    return;
  }
  v11 = *(_QWORD *)(v2 + 8 * v12);
  if (v11)
  {
    v7 = v12;
    goto LABEL_21;
  }
  while (1)
  {
    v7 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v7 >= v6)
      goto LABEL_29;
    v11 = *(_QWORD *)(v2 + 8 * v7);
    ++v12;
    if (v11)
      goto LABEL_21;
  }
LABEL_31:
  __break(1u);
}

{
  uint64_t v1;
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  id v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  void *v28;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    OUTLINED_FUNCTION_25_2();
    __CocoaSet.makeIterator()();
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
    lazy protocol witness table accessor for type TUHandle and conformance NSObject();
    OUTLINED_FUNCTION_50();
    Set.Iterator.init(_cocoa:)();
    v1 = v23;
    v22 = v24;
    v2 = v25;
    v3 = v26;
    v4 = v27;
  }
  else
  {
    v5 = -1 << *(_BYTE *)(a1 + 32);
    v22 = a1 + 56;
    v2 = ~v5;
    v6 = -v5;
    if (v6 < 64)
      v7 = ~(-1 << v6);
    else
      v7 = -1;
    v4 = v7 & *(_QWORD *)(a1 + 56);
    OUTLINED_FUNCTION_25_2();
    v3 = 0;
  }
  v21 = MEMORY[0x1E0DEE9D8];
  v8 = (unint64_t)(v2 + 64) >> 6;
LABEL_8:
  v9 = v3;
  v10 = v4;
  while (1)
  {
    if (v1 < 0)
    {
      if (!__CocoaSet.Iterator.next()())
        goto LABEL_40;
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v12 = v28;
      swift_unknownObjectRelease();
      v3 = v9;
      v4 = v10;
      if (!v28)
        goto LABEL_40;
      goto LABEL_27;
    }
    if (!v10)
      break;
    v4 = (v10 - 1) & v10;
    v11 = __clz(__rbit64(v10)) | (v9 << 6);
    v3 = v9;
LABEL_26:
    v12 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v11);
    if (!v12)
      goto LABEL_40;
LABEL_27:
    type metadata accessor for ReportSpamManager();
    v15 = static ReportSpamManager.getContact(forHandle:)(v12);

    v9 = v3;
    v10 = v4;
    if (v15)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v21 = v19;
      }
      v18 = *(_QWORD *)(v21 + 16);
      if (v18 >= *(_QWORD *)(v21 + 24) >> 1)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v21 = v20;
      }
      *(_QWORD *)(v21 + 16) = v18 + 1;
      *(_QWORD *)(v21 + 8 * v18 + 32) = v15;
      goto LABEL_8;
    }
  }
  v3 = v9 + 1;
  if (!__OFADD__(v9, 1))
  {
    if (v3 >= v8)
      goto LABEL_40;
    v13 = *(_QWORD *)(v22 + 8 * v3);
    if (!v13)
    {
      if (v9 + 2 >= v8)
        goto LABEL_40;
      OUTLINED_FUNCTION_53_24();
      if (v13)
        goto LABEL_24;
      if (v9 + 3 >= v8)
        goto LABEL_40;
      OUTLINED_FUNCTION_53_24();
      if (v13)
        goto LABEL_24;
      if (v9 + 4 >= v8)
        goto LABEL_40;
      OUTLINED_FUNCTION_53_24();
      if (v13)
      {
LABEL_24:
        v3 = v14;
      }
      else
      {
        v3 = v9 + 5;
        if (v9 + 5 >= v8)
          goto LABEL_40;
        v13 = *(_QWORD *)(v22 + 8 * v3);
        if (!v13)
        {
          v16 = v9 + 6;
          while (v16 < v8)
          {
            OUTLINED_FUNCTION_53_24();
            v16 = v17 + 1;
            if (v13)
            {
              v3 = v16 - 1;
              goto LABEL_25;
            }
          }
LABEL_40:
          outlined consume of [String : Application].Iterator._Variant();
          return;
        }
      }
    }
LABEL_25:
    v4 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v3 << 6);
    goto LABEL_26;
  }
  __break(1u);
}

{
  uint64_t v1;
  uint64_t v2;
  int64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  id v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  id v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  void *v27;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
    lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop(&lazy protocol witness table cache variable for type TUConversationParticipant and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
    Set.Iterator.init(_cocoa:)();
    v1 = v22;
    v21 = v23;
    v2 = v24;
    v3 = v25;
    v4 = v26;
  }
  else
  {
    v5 = -1 << *(_BYTE *)(a1 + 32);
    v21 = a1 + 56;
    v2 = ~v5;
    v6 = -v5;
    if (v6 < 64)
      v7 = ~(-1 << v6);
    else
      v7 = -1;
    v4 = v7 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v3 = 0;
  }
  v20 = (unint64_t)(v2 + 64) >> 6;
  v8 = MEMORY[0x1E0DEE9D8];
  if (v1 < 0)
    goto LABEL_10;
  while (1)
  {
    if (v4)
    {
      v9 = (v4 - 1) & v4;
      v10 = __clz(__rbit64(v4)) | (v3 << 6);
      v11 = v3;
      goto LABEL_29;
    }
    v13 = v3 + 1;
    if (__OFADD__(v3, 1))
      break;
    if (v13 >= v20)
      goto LABEL_36;
    v14 = *(_QWORD *)(v21 + 8 * v13);
    v11 = v3 + 1;
    if (!v14)
    {
      v11 = v3 + 2;
      if (v3 + 2 >= v20)
        goto LABEL_36;
      v14 = *(_QWORD *)(v21 + 8 * v11);
      if (!v14)
      {
        v11 = v3 + 3;
        if (v3 + 3 >= v20)
          goto LABEL_36;
        v14 = *(_QWORD *)(v21 + 8 * v11);
        if (!v14)
        {
          v11 = v3 + 4;
          if (v3 + 4 >= v20)
            goto LABEL_36;
          v14 = *(_QWORD *)(v21 + 8 * v11);
          if (!v14)
          {
            v11 = v3 + 5;
            if (v3 + 5 >= v20)
              goto LABEL_36;
            v14 = *(_QWORD *)(v21 + 8 * v11);
            if (!v14)
            {
              v15 = v3 + 6;
              while (v15 < v20)
              {
                v14 = *(_QWORD *)(v21 + 8 * v15++);
                if (v14)
                {
                  v11 = v15 - 1;
                  goto LABEL_28;
                }
              }
LABEL_36:
              outlined consume of [String : Application].Iterator._Variant();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    v9 = (v14 - 1) & v14;
    v10 = __clz(__rbit64(v14)) + (v11 << 6);
LABEL_29:
    v12 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v10);
    if (!v12)
      goto LABEL_36;
    while (1)
    {
      v16 = objc_msgSend(v12, sel_identifier);

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v8 = v18;
      }
      v17 = *(_QWORD *)(v8 + 16);
      if (v17 >= *(_QWORD *)(v8 + 24) >> 1)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v8 = v19;
      }
      *(_QWORD *)(v8 + 16) = v17 + 1;
      *(_QWORD *)(v8 + 8 * v17 + 32) = v16;
      v3 = v11;
      v4 = v9;
      if ((v1 & 0x8000000000000000) == 0)
        break;
LABEL_10:
      if (__CocoaSet.Iterator.next()())
      {
        type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v12 = v27;
        swift_unknownObjectRelease();
        v11 = v3;
        v9 = v4;
        if (v27)
          continue;
      }
      goto LABEL_36;
    }
  }
  __break(1u);
}

{
  uint64_t v1;
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  id v12;
  unint64_t v13;
  int64_t v14;
  id v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  void *v28;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
    lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop(&lazy protocol witness table cache variable for type TUConversationMember and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
    Set.Iterator.init(_cocoa:)();
    v1 = v23;
    v22 = v24;
    v2 = v25;
    v3 = v26;
    v4 = v27;
  }
  else
  {
    v5 = -1 << *(_BYTE *)(a1 + 32);
    v22 = a1 + 56;
    v2 = ~v5;
    v6 = -v5;
    if (v6 < 64)
      v7 = ~(-1 << v6);
    else
      v7 = -1;
    v4 = v7 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v3 = 0;
  }
  v8 = (unint64_t)(v2 + 64) >> 6;
  v21 = MEMORY[0x1E0DEE9D8];
LABEL_8:
  v9 = v3;
  v10 = v4;
  while (1)
  {
    if (v1 < 0)
    {
      if (!__CocoaSet.Iterator.next()())
        goto LABEL_40;
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v12 = v28;
      swift_unknownObjectRelease();
      v3 = v9;
      v4 = v10;
      if (!v28)
        goto LABEL_40;
      goto LABEL_27;
    }
    if (!v10)
      break;
    v4 = (v10 - 1) & v10;
    v11 = __clz(__rbit64(v10)) | (v9 << 6);
    v3 = v9;
LABEL_26:
    v12 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v11);
    if (!v12)
      goto LABEL_40;
LABEL_27:
    type metadata accessor for ReportSpamManager();
    v15 = objc_msgSend(v12, sel_handle);
    v16 = static ReportSpamManager.getContact(forHandle:)(v15);

    v9 = v3;
    v10 = v4;
    if (v16)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v21 = v19;
      }
      v18 = *(_QWORD *)(v21 + 16);
      if (v18 >= *(_QWORD *)(v21 + 24) >> 1)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v21 = v20;
      }
      *(_QWORD *)(v21 + 16) = v18 + 1;
      *(_QWORD *)(v21 + 8 * v18 + 32) = v16;
      goto LABEL_8;
    }
  }
  v3 = v9 + 1;
  if (!__OFADD__(v9, 1))
  {
    if (v3 >= v8)
      goto LABEL_40;
    v13 = *(_QWORD *)(v22 + 8 * v3);
    if (!v13)
    {
      v14 = v9 + 2;
      if (v9 + 2 >= v8)
        goto LABEL_40;
      v13 = *(_QWORD *)(v22 + 8 * v14);
      if (v13)
        goto LABEL_24;
      v14 = v9 + 3;
      if (v9 + 3 >= v8)
        goto LABEL_40;
      v13 = *(_QWORD *)(v22 + 8 * v14);
      if (v13)
        goto LABEL_24;
      v14 = v9 + 4;
      if (v9 + 4 >= v8)
        goto LABEL_40;
      v13 = *(_QWORD *)(v22 + 8 * v14);
      if (v13)
      {
LABEL_24:
        v3 = v14;
      }
      else
      {
        v3 = v9 + 5;
        if (v9 + 5 >= v8)
          goto LABEL_40;
        v13 = *(_QWORD *)(v22 + 8 * v3);
        if (!v13)
        {
          v17 = v9 + 6;
          while (v17 < v8)
          {
            v13 = *(_QWORD *)(v22 + 8 * v17++);
            if (v13)
            {
              v3 = v17 - 1;
              goto LABEL_25;
            }
          }
LABEL_40:
          outlined consume of [String : Application].Iterator._Variant();
          return;
        }
      }
    }
LABEL_25:
    v4 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v3 << 6);
    goto LABEL_26;
  }
  __break(1u);
}

{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  char *v35;
  id v36;
  id v37;
  Class isa;
  id v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52[2];
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  id v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;

  v59 = type metadata accessor for PersonNameComponents();
  v58 = *(_QWORD *)(v59 - 8);
  MEMORY[0x1E0C80A78](v59);
  v3 = (char *)v52 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
    lazy protocol witness table accessor for type TUHandle and conformance NSObject();
    Set.Iterator.init(_cocoa:)();
    a1 = v75;
    v56 = v76;
    v4 = v77;
    v5 = v78;
    v6 = v79;
  }
  else
  {
    v7 = -1 << *(_BYTE *)(a1 + 32);
    v8 = *(_QWORD *)(a1 + 56);
    v56 = a1 + 56;
    v9 = ~v7;
    v10 = -v7;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v6 = v11 & v8;
    swift_bridgeObjectRetain();
    v4 = v9;
    v5 = 0;
  }
  v54 = a1 & 0x7FFFFFFFFFFFFFFFLL;
  v52[0] = v4;
  v55 = (unint64_t)(v4 + 64) >> 6;
  v12 = MEMORY[0x1E0DEE9D8];
  v53 = MEMORY[0x1E0DEE9B0] + 8;
  v57 = a1;
  if (a1 < 0)
    goto LABEL_10;
  while (1)
  {
    if (v6)
    {
      v13 = (v6 - 1) & v6;
      v14 = __clz(__rbit64(v6)) | (v5 << 6);
      v15 = v5;
      goto LABEL_29;
    }
    v18 = v5 + 1;
    if (__OFADD__(v5, 1))
      break;
    if (v18 >= v55)
      goto LABEL_43;
    v19 = *(_QWORD *)(v56 + 8 * v18);
    v15 = v5 + 1;
    if (!v19)
    {
      v15 = v5 + 2;
      if (v5 + 2 >= v55)
        goto LABEL_43;
      v19 = *(_QWORD *)(v56 + 8 * v15);
      if (!v19)
      {
        v15 = v5 + 3;
        if (v5 + 3 >= v55)
          goto LABEL_43;
        v19 = *(_QWORD *)(v56 + 8 * v15);
        if (!v19)
        {
          v15 = v5 + 4;
          if (v5 + 4 >= v55)
            goto LABEL_43;
          v19 = *(_QWORD *)(v56 + 8 * v15);
          if (!v19)
          {
            v15 = v5 + 5;
            if (v5 + 5 >= v55)
              goto LABEL_43;
            v19 = *(_QWORD *)(v56 + 8 * v15);
            if (!v19)
            {
              v20 = v5 + 6;
              while (v20 < v55)
              {
                v19 = *(_QWORD *)(v56 + 8 * v20++);
                if (v19)
                {
                  v15 = v20 - 1;
                  goto LABEL_28;
                }
              }
LABEL_43:
              outlined consume of [String : Application].Iterator._Variant();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    v13 = (v19 - 1) & v19;
    v14 = __clz(__rbit64(v19)) + (v15 << 6);
LABEL_29:
    v17 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v14);
    if (!v17)
      goto LABEL_43;
    while (1)
    {
      v66 = v13;
      v67 = v15;
      v21 = one-time initialization token for faceTime;
      v65 = v17;
      v22 = v17;
      if (v21 != -1)
        swift_once();
      swift_retain();
      ParticipantContactDetailsCache.contactDetails(for:nickname:)((uint64_t)v22, 0, 0, v23, v24, v25, v26, v27, v52[0], v52[1], v53, v54, v55, v56, v57, v58, v59, v60, (uint64_t)v22,
        v62);
      v28 = v69;
      v29 = v70;
      v31 = v71;
      v30 = v72;
      v32 = v73;
      v60 = v74;
      v33 = v69;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      PersonNameComponents.init()();
      v68 = v12;
      v63 = v29;
      v64 = v28;
      v62 = v30;
      if (v28)
      {
        v34 = objc_msgSend(v33, sel_givenName);
        static String._unconditionallyBridgeFromObjectiveC(_:)();
        v35 = v3;

        PersonNameComponents.givenName.setter();
        v36 = objc_msgSend(v33, sel_familyName);
        static String._unconditionallyBridgeFromObjectiveC(_:)();

      }
      else
      {
        PersonNameComponents.givenName.setter();
        v35 = v3;
      }
      PersonNameComponents.familyName.setter();
      if (one-time initialization token for initials != -1)
        swift_once();
      swift_beginAccess();
      v37 = (id)static NSPersonNameComponentsFormatter.initials;
      isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
      v39 = objc_msgSend(v37, sel_stringFromPersonNameComponents_, isa);

      v40 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
      v42 = v41;

      v43 = v35;
      (*(void (**)(char *, uint64_t))(v58 + 8))(v35, v59);
      v69 = v40;
      v70 = v42;
      lazy protocol witness table accessor for type String and conformance String();
      v44 = StringProtocol.localizedUppercase.getter();
      v46 = v45;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_release();
      swift_bridgeObjectRelease();
      v12 = v68;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v12 = v50;
      }
      a1 = v57;
      v47 = *(_QWORD *)(v12 + 16);
      if (v47 >= *(_QWORD *)(v12 + 24) >> 1)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v12 = v51;
      }
      *(_QWORD *)(v12 + 16) = v47 + 1;
      v48 = v12 + 72 * v47;
      v49 = v64;
      *(_QWORD *)(v48 + 32) = v65;
      *(_QWORD *)(v48 + 40) = v49;
      *(_QWORD *)(v48 + 48) = v63;
      *(_QWORD *)(v48 + 56) = v31;
      *(_QWORD *)(v48 + 64) = v62;
      *(_QWORD *)(v48 + 72) = v32;
      *(_QWORD *)(v48 + 80) = v44;
      *(_QWORD *)(v48 + 88) = v46;
      *(_BYTE *)(v48 + 96) = 1;
      v6 = v66;
      v5 = v67;
      v3 = v43;
      if ((a1 & 0x8000000000000000) == 0)
        break;
LABEL_10:
      v16 = __CocoaSet.Iterator.next()();
      if (v16)
      {
        v80 = v16;
        _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v17 = v69;
        swift_unknownObjectRelease();
        v15 = v5;
        v13 = v6;
        if (v17)
          continue;
      }
      goto LABEL_43;
    }
  }
  __break(1u);
}

{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char **v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  id v14;
  int64_t v15;
  int64_t v16;
  uint64_t v18;
  id v19;
  uint64_t v20;
  unsigned __int8 v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  Class isa;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int64_t v73;
  unint64_t v74;

  v2 = v1;
  v57 = type metadata accessor for PersonNameComponents();
  v56 = *(_QWORD *)(v57 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_194_2(v5, v48);
  if ((a1 & 0xC000000000000001) != 0)
  {
    OUTLINED_FUNCTION_35_0();
    __CocoaSet.makeIterator()();
    OUTLINED_FUNCTION_315_3();
    OUTLINED_FUNCTION_388_0((unint64_t *)&lazy protocol witness table cache variable for type TUHandle and conformance NSObject);
    OUTLINED_FUNCTION_379_1();
    a1 = v70;
    v63 = v71;
    v1 = v72;
    v6 = v73;
    v7 = v74;
  }
  else
  {
    v63 = a1 + 56;
    OUTLINED_FUNCTION_291_0();
    v7 = v8 & v9;
    OUTLINED_FUNCTION_35_0();
    v6 = 0;
  }
  v60 = v1;
  v62 = (unint64_t)(v1 + 64) >> 6;
  v61 = MEMORY[0x1E0DEE9D8];
  v10 = &selRef_associatedAppBundleIdentifier;
  while (1)
  {
    v11 = v6;
    if ((a1 & 0x8000000000000000) == 0)
      break;
    if (!__CocoaSet.Iterator.next()())
      goto LABEL_42;
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
    OUTLINED_FUNCTION_370_2();
    OUTLINED_FUNCTION_366();
    v14 = v64;
    swift_unknownObjectRelease();
    v10 = &selRef_associatedAppBundleIdentifier;
    if (!v64)
      goto LABEL_42;
LABEL_28:
    v19 = objc_msgSend(v14, v10[176], v49);
    if (!v19)
    {
      v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v19 = (id)MEMORY[0x1C3B72E00](v20);
      swift_bridgeObjectRelease();
    }
    v21 = objc_msgSend(v19, sel_destinationIdIsTemporary);

    if ((v21 & 1) != 0)
    {

    }
    else
    {
      v22 = v14;
      swift_retain();
      OUTLINED_FUNCTION_2_14();
      ParticipantContactDetailsCache.contactDetails(for:nickname:)(v23, v24, v25, v26, v27, v28, v29, v30, v49, (uint64_t)v22, v51, v52, v53, v2, v55, v56, v57, v58, v59,
        v60);
      v52 = v65;
      v51 = v67;
      v49 = v69;
      v31 = v64;
      v59 = v66;
      OUTLINED_FUNCTION_5_0();
      v58 = v68;
      OUTLINED_FUNCTION_86();
      PersonNameComponents.init()();
      v53 = (uint64_t)v64;
      if (v64)
      {
        v32 = objc_msgSend(v31, sel_givenName, v69);
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        PersonNameComponents.givenName.setter();
        v33 = v31;
        v34 = objc_msgSend(v31, sel_familyName);
        static String._unconditionallyBridgeFromObjectiveC(_:)();

      }
      else
      {
        v33 = v31;
        PersonNameComponents.givenName.setter();
      }
      PersonNameComponents.familyName.setter();
      if (one-time initialization token for initials != -1)
        swift_once();
      swift_beginAccess();
      v35 = (id)static NSPersonNameComponentsFormatter.initials;
      isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
      v37 = objc_msgSend(v35, sel_stringFromPersonNameComponents_, isa);

      v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v40 = v39;

      (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v55, v57);
      v64 = (void *)v38;
      v65 = v40;
      lazy protocol witness table accessor for type String and conformance String();
      v41 = StringProtocol.localizedUppercase.getter();
      v43 = v42;
      OUTLINED_FUNCTION_343_2();
      OUTLINED_FUNCTION_343_2();
      OUTLINED_FUNCTION_343_2();

      swift_release();
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_338_1();
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v61 = v46;
      }
      v2 = v54;
      v44 = *(_QWORD *)(v61 + 16);
      if (v44 >= *(_QWORD *)(v61 + 24) >> 1)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v61 = v47;
      }
      *(_QWORD *)(v61 + 16) = v44 + 1;
      v45 = (_QWORD *)(v61 + 56 * v44);
      v45[4] = v53;
      v45[5] = v52;
      v45[6] = v66;
      v45[7] = v67;
      v45[8] = v68;
      v45[9] = v41;
      v45[10] = v43;
      v10 = &selRef_associatedAppBundleIdentifier;
    }
  }
  if (v7)
  {
    v12 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v13 = v12 | (v6 << 6);
LABEL_27:
    v14 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v13);
    if (!v14)
      goto LABEL_42;
    goto LABEL_28;
  }
  v15 = v6 + 1;
  if (!__OFADD__(v6, 1))
  {
    if (v15 >= v62)
      goto LABEL_42;
    ++v6;
    if (!*(_QWORD *)(v63 + 8 * v15))
    {
      v6 = v11 + 2;
      if (v11 + 2 >= v62)
        goto LABEL_42;
      if (!*(_QWORD *)(v63 + 8 * v6))
      {
        v6 = v11 + 3;
        if (v11 + 3 >= v62)
          goto LABEL_42;
        if (!*(_QWORD *)(v63 + 8 * v6))
        {
          v6 = v11 + 4;
          if (v11 + 4 >= v62)
            goto LABEL_42;
          if (!*(_QWORD *)(v63 + 8 * v6))
          {
            v6 = v11 + 5;
            if (v11 + 5 >= v62)
              goto LABEL_42;
            if (!*(_QWORD *)(v63 + 8 * v6))
            {
              v16 = v11 + 6;
              while (v16 < v62)
              {
                if (*(_QWORD *)(v63 + 8 * v16++))
                {
                  v6 = v16 - 1;
                  goto LABEL_26;
                }
              }
LABEL_42:
              outlined consume of [String : Application].Iterator._Variant();
              swift_release();
              return;
            }
          }
        }
      }
    }
LABEL_26:
    OUTLINED_FUNCTION_361_0();
    v13 = v18 + (v6 << 6);
    goto LABEL_27;
  }
  __break(1u);
}

{
  uint64_t v1;
  uint64_t v2;
  int64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  id v11;
  int64_t v12;
  int64_t v13;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  unint64_t v31;
  void *v32;

  v2 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    OUTLINED_FUNCTION_25_2();
    __CocoaSet.makeIterator()();
    OUTLINED_FUNCTION_315_3();
    OUTLINED_FUNCTION_388_0((unint64_t *)&lazy protocol witness table cache variable for type TUHandle and conformance NSObject);
    OUTLINED_FUNCTION_379_1();
    v2 = v27;
    v26 = v28;
    v1 = v29;
    v3 = v30;
    v4 = v31;
  }
  else
  {
    v26 = a1 + 56;
    OUTLINED_FUNCTION_291_0();
    v4 = v5 & v6;
    OUTLINED_FUNCTION_25_2();
    v3 = 0;
  }
  v25 = MEMORY[0x1E0DEE9D8];
  v7 = (unint64_t)(v1 + 64) >> 6;
  while (1)
  {
    v8 = v3;
    if ((v2 & 0x8000000000000000) == 0)
      break;
    if (!__CocoaSet.Iterator.next()())
      goto LABEL_35;
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
    OUTLINED_FUNCTION_370_2();
    OUTLINED_FUNCTION_366();
    v11 = v32;
    swift_unknownObjectRelease();
    if (!v32)
      goto LABEL_35;
LABEL_28:
    v16 = (id)TUCopyIDSFromIDForHandle();
    if (v16)
    {
      v17 = v16;
      v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v20 = v19;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_338_1();
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v25 = v23;
      }
      v21 = *(_QWORD *)(v25 + 16);
      if (v21 >= *(_QWORD *)(v25 + 24) >> 1)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v25 = v24;
      }
      *(_QWORD *)(v25 + 16) = v21 + 1;
      v22 = v25 + 16 * v21;
      *(_QWORD *)(v22 + 32) = v18;
      *(_QWORD *)(v22 + 40) = v20;
    }
    else
    {

    }
  }
  if (v4)
  {
    v9 = __clz(__rbit64(v4));
    v4 &= v4 - 1;
    v10 = v9 | (v3 << 6);
LABEL_27:
    v11 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v10);
    if (!v11)
      goto LABEL_35;
    goto LABEL_28;
  }
  v12 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v12 >= v7)
      goto LABEL_35;
    ++v3;
    if (!*(_QWORD *)(v26 + 8 * v12))
    {
      v3 = v8 + 2;
      if (v8 + 2 >= v7)
        goto LABEL_35;
      if (!*(_QWORD *)(v26 + 8 * v3))
      {
        v3 = v8 + 3;
        if (v8 + 3 >= v7)
          goto LABEL_35;
        if (!*(_QWORD *)(v26 + 8 * v3))
        {
          v3 = v8 + 4;
          if (v8 + 4 >= v7)
            goto LABEL_35;
          if (!*(_QWORD *)(v26 + 8 * v3))
          {
            v3 = v8 + 5;
            if (v8 + 5 >= v7)
              goto LABEL_35;
            if (!*(_QWORD *)(v26 + 8 * v3))
            {
              v13 = v8 + 6;
              while (v13 < v7)
              {
                if (*(_QWORD *)(v26 + 8 * v13++))
                {
                  v3 = v13 - 1;
                  goto LABEL_26;
                }
              }
LABEL_35:
              outlined consume of [String : Application].Iterator._Variant();
              return;
            }
          }
        }
      }
    }
LABEL_26:
    OUTLINED_FUNCTION_362_1();
    v10 = v15 + (v3 << 6);
    goto LABEL_27;
  }
  __break(1u);
}

{
  uint64_t v1;
  uint64_t v2;
  int64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  id v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  id v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  unint64_t v33;
  void *v34;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
    lazy protocol witness table accessor for type SGURL and conformance NSObject((unint64_t *)&lazy protocol witness table cache variable for type TUHandle and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
    Set.Iterator.init(_cocoa:)();
    v1 = v29;
    v28 = v30;
    v2 = v31;
    v3 = v32;
    v4 = v33;
  }
  else
  {
    v5 = -1 << *(_BYTE *)(a1 + 32);
    v28 = a1 + 56;
    v2 = ~v5;
    v6 = -v5;
    if (v6 < 64)
      v7 = ~(-1 << v6);
    else
      v7 = -1;
    v4 = v7 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v3 = 0;
  }
  v25 = v2;
  v27 = (unint64_t)(v2 + 64) >> 6;
  v26 = MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v8 = v3;
    if ((v1 & 0x8000000000000000) == 0)
      break;
    if (!__CocoaSet.Iterator.next()())
      goto LABEL_40;
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v11 = v34;
    swift_unknownObjectRelease();
    if (!v34)
      goto LABEL_40;
LABEL_31:
    v15 = objc_msgSend(v11, sel_value, v25);
    if (!v15)
    {
      v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v15 = (id)MEMORY[0x1C3B72E00](v16);
      swift_bridgeObjectRelease();
    }
    v17 = (id)TUCopyIDSCanonicalAddressForDestinationID();

    if (v17)
    {
      v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v20 = v19;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v26 = v23;
      }
      v21 = *(_QWORD *)(v26 + 16);
      if (v21 >= *(_QWORD *)(v26 + 24) >> 1)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v26 = v24;
      }
      *(_QWORD *)(v26 + 16) = v21 + 1;
      v22 = v26 + 16 * v21;
      *(_QWORD *)(v22 + 32) = v18;
      *(_QWORD *)(v22 + 40) = v20;
    }
    else
    {

    }
  }
  if (v4)
  {
    v9 = __clz(__rbit64(v4));
    v4 &= v4 - 1;
    v10 = v9 | (v3 << 6);
LABEL_30:
    v11 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v10);
    if (!v11)
      goto LABEL_40;
    goto LABEL_31;
  }
  v12 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v12 >= v27)
      goto LABEL_40;
    v13 = *(_QWORD *)(v28 + 8 * v12);
    ++v3;
    if (!v13)
    {
      v3 = v8 + 2;
      if (v8 + 2 >= v27)
        goto LABEL_40;
      v13 = *(_QWORD *)(v28 + 8 * v3);
      if (!v13)
      {
        v3 = v8 + 3;
        if (v8 + 3 >= v27)
          goto LABEL_40;
        v13 = *(_QWORD *)(v28 + 8 * v3);
        if (!v13)
        {
          v3 = v8 + 4;
          if (v8 + 4 >= v27)
            goto LABEL_40;
          v13 = *(_QWORD *)(v28 + 8 * v3);
          if (!v13)
          {
            v3 = v8 + 5;
            if (v8 + 5 >= v27)
              goto LABEL_40;
            v13 = *(_QWORD *)(v28 + 8 * v3);
            if (!v13)
            {
              v14 = v8 + 6;
              while (v14 < v27)
              {
                v13 = *(_QWORD *)(v28 + 8 * v14++);
                if (v13)
                {
                  v3 = v14 - 1;
                  goto LABEL_29;
                }
              }
LABEL_40:
              outlined consume of [String : Application].Iterator._Variant();
              return;
            }
          }
        }
      }
    }
LABEL_29:
    v4 = (v13 - 1) & v13;
    v10 = __clz(__rbit64(v13)) + (v3 << 6);
    goto LABEL_30;
  }
  __break(1u);
}

{
  uint64_t v1;
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  id v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  void *v28;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for TUHandle();
    lazy protocol witness table accessor for type TUHandle and conformance NSObject();
    Set.Iterator.init(_cocoa:)();
    v1 = v23;
    v22 = v24;
    v2 = v25;
    v3 = v26;
    v4 = v27;
  }
  else
  {
    v5 = -1 << *(_BYTE *)(a1 + 32);
    v22 = a1 + 56;
    v2 = ~v5;
    v6 = -v5;
    if (v6 < 64)
      v7 = ~(-1 << v6);
    else
      v7 = -1;
    v4 = v7 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v3 = 0;
  }
  v8 = (unint64_t)(v2 + 64) >> 6;
  v21 = MEMORY[0x1E0DEE9D8];
LABEL_8:
  v9 = v3;
  v10 = v4;
  while (1)
  {
    if (v1 < 0)
    {
      if (!__CocoaSet.Iterator.next()())
        goto LABEL_40;
      type metadata accessor for TUHandle();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v12 = v28;
      swift_unknownObjectRelease();
      v3 = v9;
      v4 = v10;
      if (!v28)
        goto LABEL_40;
      goto LABEL_27;
    }
    if (!v10)
      break;
    v4 = (v10 - 1) & v10;
    v11 = __clz(__rbit64(v10)) | (v9 << 6);
    v3 = v9;
LABEL_26:
    v12 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v11);
    if (!v12)
      goto LABEL_40;
LABEL_27:
    type metadata accessor for ReportSpamManager();
    v15 = static ReportSpamManager.getContact(forHandle:)(v12);

    v9 = v3;
    v10 = v4;
    if (v15)
    {
      v17 = v21;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v17 = v19;
      }
      v18 = *(_QWORD *)(v17 + 16);
      if (v18 >= *(_QWORD *)(v17 + 24) >> 1)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v17 = v20;
      }
      *(_QWORD *)(v17 + 16) = v18 + 1;
      v21 = v17;
      *(_QWORD *)(v17 + 8 * v18 + 32) = v15;
      goto LABEL_8;
    }
  }
  v3 = v9 + 1;
  if (!__OFADD__(v9, 1))
  {
    if (v3 >= v8)
      goto LABEL_40;
    v13 = *(_QWORD *)(v22 + 8 * v3);
    if (!v13)
    {
      v14 = v9 + 2;
      if (v9 + 2 >= v8)
        goto LABEL_40;
      v13 = *(_QWORD *)(v22 + 8 * v14);
      if (v13)
        goto LABEL_24;
      v14 = v9 + 3;
      if (v9 + 3 >= v8)
        goto LABEL_40;
      v13 = *(_QWORD *)(v22 + 8 * v14);
      if (v13)
        goto LABEL_24;
      v14 = v9 + 4;
      if (v9 + 4 >= v8)
        goto LABEL_40;
      v13 = *(_QWORD *)(v22 + 8 * v14);
      if (v13)
      {
LABEL_24:
        v3 = v14;
      }
      else
      {
        v3 = v9 + 5;
        if (v9 + 5 >= v8)
          goto LABEL_40;
        v13 = *(_QWORD *)(v22 + 8 * v3);
        if (!v13)
        {
          v16 = v9 + 6;
          while (v16 < v8)
          {
            v13 = *(_QWORD *)(v22 + 8 * v16++);
            if (v13)
            {
              v3 = v16 - 1;
              goto LABEL_25;
            }
          }
LABEL_40:
          outlined consume of [String : Application].Iterator._Variant();
          return;
        }
      }
    }
LABEL_25:
    v4 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v3 << 6);
    goto LABEL_26;
  }
  __break(1u);
}

{
  uint64_t v1;
  uint64_t v2;
  int64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  id v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  unint64_t v31;
  void *v32;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for TUHandle();
    lazy protocol witness table accessor for type TUHandle and conformance NSObject();
    Set.Iterator.init(_cocoa:)();
    v1 = v27;
    v26 = v28;
    v2 = v29;
    v3 = v30;
    v4 = v31;
  }
  else
  {
    v5 = -1 << *(_BYTE *)(a1 + 32);
    v26 = a1 + 56;
    v2 = ~v5;
    v6 = -v5;
    if (v6 < 64)
      v7 = ~(-1 << v6);
    else
      v7 = -1;
    v4 = v7 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v3 = 0;
  }
  v8 = (unint64_t)(v2 + 64) >> 6;
  v25 = MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v9 = v3;
    if ((v1 & 0x8000000000000000) == 0)
      break;
    if (!__CocoaSet.Iterator.next()())
      goto LABEL_38;
    type metadata accessor for TUHandle();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v12 = v32;
    swift_unknownObjectRelease();
    if (!v32)
      goto LABEL_38;
LABEL_31:
    v16 = (id)TUCopyIDSFromIDForHandle();
    if (v16)
    {
      v17 = v16;
      v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v20 = v19;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v25 = v23;
      }
      v21 = *(_QWORD *)(v25 + 16);
      if (v21 >= *(_QWORD *)(v25 + 24) >> 1)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v25 = v24;
      }
      *(_QWORD *)(v25 + 16) = v21 + 1;
      v22 = v25 + 16 * v21;
      *(_QWORD *)(v22 + 32) = v18;
      *(_QWORD *)(v22 + 40) = v20;
    }
    else
    {

    }
  }
  if (v4)
  {
    v10 = __clz(__rbit64(v4));
    v4 &= v4 - 1;
    v11 = v10 | (v3 << 6);
LABEL_30:
    v12 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v11);
    if (!v12)
      goto LABEL_38;
    goto LABEL_31;
  }
  v13 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v13 >= v8)
      goto LABEL_38;
    v14 = *(_QWORD *)(v26 + 8 * v13);
    ++v3;
    if (!v14)
    {
      v3 = v9 + 2;
      if (v9 + 2 >= v8)
        goto LABEL_38;
      v14 = *(_QWORD *)(v26 + 8 * v3);
      if (!v14)
      {
        v3 = v9 + 3;
        if (v9 + 3 >= v8)
          goto LABEL_38;
        v14 = *(_QWORD *)(v26 + 8 * v3);
        if (!v14)
        {
          v3 = v9 + 4;
          if (v9 + 4 >= v8)
            goto LABEL_38;
          v14 = *(_QWORD *)(v26 + 8 * v3);
          if (!v14)
          {
            v3 = v9 + 5;
            if (v9 + 5 >= v8)
              goto LABEL_38;
            v14 = *(_QWORD *)(v26 + 8 * v3);
            if (!v14)
            {
              v15 = v9 + 6;
              while (v15 < v8)
              {
                v14 = *(_QWORD *)(v26 + 8 * v15++);
                if (v14)
                {
                  v3 = v15 - 1;
                  goto LABEL_29;
                }
              }
LABEL_38:
              outlined consume of [String : Application].Iterator._Variant();
              return;
            }
          }
        }
      }
    }
LABEL_29:
    v4 = (v14 - 1) & v14;
    v11 = __clz(__rbit64(v14)) + (v3 << 6);
    goto LABEL_30;
  }
  __break(1u);
}

{
  uint64_t v1;
  uint64_t v2;
  int64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  id v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;

  v1 = a1;
  v23 = MEMORY[0x1E0DEE9D8];
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UIScene);
    lazy protocol witness table accessor for type UIScene and conformance NSObject();
    Set.Iterator.init(_cocoa:)();
    v1 = v18;
    v16 = v19;
    v2 = v20;
    v3 = v21;
    v4 = v22;
  }
  else
  {
    v5 = -1 << *(_BYTE *)(a1 + 32);
    v16 = a1 + 56;
    v2 = ~v5;
    v6 = -v5;
    if (v6 < 64)
      v7 = ~(-1 << v6);
    else
      v7 = -1;
    v4 = v7 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v3 = 0;
  }
  v8 = (unint64_t)(v2 + 64) >> 6;
  if (v1 < 0)
    goto LABEL_10;
  while (1)
  {
    if (v4)
    {
      v9 = (v4 - 1) & v4;
      v10 = __clz(__rbit64(v4)) | (v3 << 6);
      v11 = v3;
      goto LABEL_29;
    }
    v13 = v3 + 1;
    if (__OFADD__(v3, 1))
      break;
    if (v13 >= v8)
      goto LABEL_37;
    v14 = *(_QWORD *)(v16 + 8 * v13);
    v11 = v3 + 1;
    if (!v14)
    {
      v11 = v3 + 2;
      if (v3 + 2 >= v8)
        goto LABEL_37;
      v14 = *(_QWORD *)(v16 + 8 * v11);
      if (!v14)
      {
        v11 = v3 + 3;
        if (v3 + 3 >= v8)
          goto LABEL_37;
        v14 = *(_QWORD *)(v16 + 8 * v11);
        if (!v14)
        {
          v11 = v3 + 4;
          if (v3 + 4 >= v8)
            goto LABEL_37;
          v14 = *(_QWORD *)(v16 + 8 * v11);
          if (!v14)
          {
            v11 = v3 + 5;
            if (v3 + 5 >= v8)
              goto LABEL_37;
            v14 = *(_QWORD *)(v16 + 8 * v11);
            if (!v14)
            {
              v15 = v3 + 6;
              while (v15 < v8)
              {
                v14 = *(_QWORD *)(v16 + 8 * v15++);
                if (v14)
                {
                  v11 = v15 - 1;
                  goto LABEL_28;
                }
              }
LABEL_37:
              outlined consume of [String : Application].Iterator._Variant();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    v9 = (v14 - 1) & v14;
    v10 = __clz(__rbit64(v14)) + (v11 << 6);
LABEL_29:
    v12 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v10);
    if (!v12)
      goto LABEL_37;
    while (1)
    {
      objc_opt_self();
      if (swift_dynamicCastObjCClass())
      {
        MEMORY[0x1C3B7301C]();
        if (*(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      else
      {

      }
      v3 = v11;
      v4 = v9;
      if ((v1 & 0x8000000000000000) == 0)
        break;
LABEL_10:
      if (__CocoaSet.Iterator.next()())
      {
        type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UIScene);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v12 = v17;
        swift_unknownObjectRelease();
        v11 = v3;
        v9 = v4;
        if (v17)
          continue;
      }
      goto LABEL_37;
    }
  }
  __break(1u);
}

{
  uint64_t v1;
  uint64_t v2;
  int64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  id v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  id v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  unint64_t v33;
  void *v34;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
    lazy protocol witness table accessor for type OS_dispatch_queue and conformance OS_dispatch_queue((uint64_t)&lazy protocol witness table cache variable for type TUHandle and conformance NSObject);
    Set.Iterator.init(_cocoa:)();
    v1 = v29;
    v28 = v30;
    v2 = v31;
    v3 = v32;
    v4 = v33;
  }
  else
  {
    v5 = -1 << *(_BYTE *)(a1 + 32);
    v28 = a1 + 56;
    v2 = ~v5;
    v6 = -v5;
    if (v6 < 64)
      v7 = ~(-1 << v6);
    else
      v7 = -1;
    v4 = v7 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v3 = 0;
  }
  v25 = v2;
  v27 = (unint64_t)(v2 + 64) >> 6;
  v26 = MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v8 = v3;
    if ((v1 & 0x8000000000000000) == 0)
      break;
    if (!__CocoaSet.Iterator.next()())
      goto LABEL_40;
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v11 = v34;
    swift_unknownObjectRelease();
    if (!v34)
      goto LABEL_40;
LABEL_31:
    v15 = objc_msgSend(v11, sel_value, v25);
    if (!v15)
    {
      v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v15 = (id)MEMORY[0x1C3B72E00](v16);
      swift_bridgeObjectRelease();
    }
    v17 = (id)TUCopyIDSCanonicalAddressForDestinationID();

    if (v17)
    {
      v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v20 = v19;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v26 = v23;
      }
      v21 = *(_QWORD *)(v26 + 16);
      if (v21 >= *(_QWORD *)(v26 + 24) >> 1)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v26 = v24;
      }
      *(_QWORD *)(v26 + 16) = v21 + 1;
      v22 = v26 + 16 * v21;
      *(_QWORD *)(v22 + 32) = v18;
      *(_QWORD *)(v22 + 40) = v20;
    }
    else
    {

    }
  }
  if (v4)
  {
    v9 = __clz(__rbit64(v4));
    v4 &= v4 - 1;
    v10 = v9 | (v3 << 6);
LABEL_30:
    v11 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v10);
    if (!v11)
      goto LABEL_40;
    goto LABEL_31;
  }
  v12 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v12 >= v27)
      goto LABEL_40;
    v13 = *(_QWORD *)(v28 + 8 * v12);
    ++v3;
    if (!v13)
    {
      v3 = v8 + 2;
      if (v8 + 2 >= v27)
        goto LABEL_40;
      v13 = *(_QWORD *)(v28 + 8 * v3);
      if (!v13)
      {
        v3 = v8 + 3;
        if (v8 + 3 >= v27)
          goto LABEL_40;
        v13 = *(_QWORD *)(v28 + 8 * v3);
        if (!v13)
        {
          v3 = v8 + 4;
          if (v8 + 4 >= v27)
            goto LABEL_40;
          v13 = *(_QWORD *)(v28 + 8 * v3);
          if (!v13)
          {
            v3 = v8 + 5;
            if (v8 + 5 >= v27)
              goto LABEL_40;
            v13 = *(_QWORD *)(v28 + 8 * v3);
            if (!v13)
            {
              v14 = v8 + 6;
              while (v14 < v27)
              {
                v13 = *(_QWORD *)(v28 + 8 * v14++);
                if (v13)
                {
                  v3 = v14 - 1;
                  goto LABEL_29;
                }
              }
LABEL_40:
              outlined consume of [String : Application].Iterator._Variant();
              return;
            }
          }
        }
      }
    }
LABEL_29:
    v4 = (v13 - 1) & v13;
    v10 = __clz(__rbit64(v13)) + (v3 << 6);
    goto LABEL_30;
  }
  __break(1u);
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v2 = type metadata accessor for CountdownVoucher(0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_79();
  v6 = v4 - v5;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v33 - v8;
  v10 = *(_QWORD *)(a1 + 56);
  v36 = a1 + 56;
  v11 = 1 << *(_BYTE *)(a1 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v10;
  v14 = (unint64_t)(v11 + 63) >> 6;
  swift_bridgeObjectRetain();
  v15 = 0;
  v35 = MEMORY[0x1E0DEE9D8];
  while (v13)
  {
    v16 = __clz(__rbit64(v13));
    v13 &= v13 - 1;
    v17 = v16 | (v15 << 6);
LABEL_22:
    outlined init with copy of CountdownVoucher(*(_QWORD *)(a1 + 48) + *(_QWORD *)(v3 + 72) * v17, (uint64_t)v9);
    outlined init with take of CountdownVoucher((uint64_t)v9, v6);
    v25 = MEMORY[0x1C3B752C0](v6);
    v26 = *(_QWORD *)(v6 + 8);
    outlined destroy of CountdownVoucher(v6);
    if (v25)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v35 = v31;
      }
      v27 = *(_QWORD *)(v35 + 16);
      v28 = v27 + 1;
      if (v27 >= *(_QWORD *)(v35 + 24) >> 1)
      {
        v33 = *(_QWORD *)(v35 + 16);
        v34 = v27 + 1;
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v27 = v33;
        v28 = v34;
        v35 = v32;
      }
      v29 = v35;
      *(_QWORD *)(v35 + 16) = v28;
      v30 = v29 + 16 * v27;
      *(_QWORD *)(v30 + 32) = v25;
      *(_QWORD *)(v30 + 40) = v26;
    }
  }
  v18 = v15 + 1;
  if (__OFADD__(v15, 1))
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v18 >= v14)
    goto LABEL_28;
  v19 = *(_QWORD *)(v36 + 8 * v18);
  ++v15;
  if (v19)
    goto LABEL_21;
  v15 = v18 + 1;
  if (v18 + 1 >= v14)
    goto LABEL_28;
  OUTLINED_FUNCTION_40_63();
  if (v19)
    goto LABEL_21;
  v15 = v20 + 2;
  if (v20 + 2 >= v14)
    goto LABEL_28;
  OUTLINED_FUNCTION_40_63();
  if (v19)
    goto LABEL_21;
  v15 = v21 + 3;
  if (v21 + 3 >= v14)
    goto LABEL_28;
  OUTLINED_FUNCTION_40_63();
  if (v19)
  {
LABEL_21:
    v13 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v15 << 6);
    goto LABEL_22;
  }
  v23 = v22 + 4;
  if (v23 >= v14)
  {
LABEL_28:
    swift_release();
    return;
  }
  v19 = *(_QWORD *)(v36 + 8 * v23);
  if (v19)
  {
    v15 = v23;
    goto LABEL_21;
  }
  while (1)
  {
    v15 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v15 >= v14)
      goto LABEL_28;
    OUTLINED_FUNCTION_40_63();
    v23 = v24 + 1;
    if (v19)
      goto LABEL_21;
  }
LABEL_30:
  __break(1u);
}

{
  uint64_t v1;
  uint64_t v2;
  int64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  id v12;
  unint64_t v13;
  int64_t v14;
  id v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  uint64_t v25;

  v1 = a1;
  v25 = MEMORY[0x1E0DEE9D8];
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
    lazy protocol witness table accessor for type TUHandle and conformance NSObject((unint64_t *)&lazy protocol witness table cache variable for type TUConversationMember and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
    Set.Iterator.init(_cocoa:)();
    v1 = v20;
    v18 = v21;
    v2 = v22;
    v3 = v23;
    v4 = v24;
  }
  else
  {
    v5 = -1 << *(_BYTE *)(a1 + 32);
    v18 = a1 + 56;
    v2 = ~v5;
    v6 = -v5;
    if (v6 < 64)
      v7 = ~(-1 << v6);
    else
      v7 = -1;
    v4 = v7 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v3 = 0;
  }
  v17 = v2;
  v8 = (unint64_t)(v2 + 64) >> 6;
  while (v1 < 0)
  {
    if (!__CocoaSet.Iterator.next()())
      goto LABEL_36;
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v12 = v19;
    swift_unknownObjectRelease();
    v11 = v3;
    v9 = v4;
    if (!v19)
      goto LABEL_36;
LABEL_26:
    v15 = objc_msgSend(v12, sel_handle, v17);

    v3 = v11;
    v4 = v9;
    if (v15)
    {
      MEMORY[0x1C3B7301C]();
      if (*(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      v3 = v11;
      v4 = v9;
    }
  }
  if (v4)
  {
    v9 = (v4 - 1) & v4;
    v10 = __clz(__rbit64(v4)) | (v3 << 6);
    v11 = v3;
LABEL_25:
    v12 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v10);
    if (!v12)
      goto LABEL_36;
    goto LABEL_26;
  }
  v11 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v11 >= v8)
      goto LABEL_36;
    v13 = *(_QWORD *)(v18 + 8 * v11);
    if (!v13)
    {
      v14 = v3 + 2;
      if (v3 + 2 >= v8)
        goto LABEL_36;
      v13 = *(_QWORD *)(v18 + 8 * v14);
      if (v13)
        goto LABEL_23;
      v14 = v3 + 3;
      if (v3 + 3 >= v8)
        goto LABEL_36;
      v13 = *(_QWORD *)(v18 + 8 * v14);
      if (v13)
        goto LABEL_23;
      v14 = v3 + 4;
      if (v3 + 4 >= v8)
        goto LABEL_36;
      v13 = *(_QWORD *)(v18 + 8 * v14);
      if (v13)
      {
LABEL_23:
        v11 = v14;
      }
      else
      {
        v11 = v3 + 5;
        if (v3 + 5 >= v8)
          goto LABEL_36;
        v13 = *(_QWORD *)(v18 + 8 * v11);
        if (!v13)
        {
          v16 = v3 + 6;
          while (v16 < v8)
          {
            v13 = *(_QWORD *)(v18 + 8 * v16++);
            if (v13)
            {
              v11 = v16 - 1;
              goto LABEL_24;
            }
          }
LABEL_36:
          outlined consume of [String : Application].Iterator._Variant();
          return;
        }
      }
    }
LABEL_24:
    v9 = (v13 - 1) & v13;
    v10 = __clz(__rbit64(v13)) + (v11 << 6);
    goto LABEL_25;
  }
  __break(1u);
}

uint64_t DestinationQueryController.delegate.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR___CNKDestinationQueryControllerInternal_delegate;
  OUTLINED_FUNCTION_2_0();
  return MEMORY[0x1C3B752C0](v1);
}

void DestinationQueryController.delegate.setter()
{
  OUTLINED_FUNCTION_2_0();
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_32();
}

uint64_t key path getter for DestinationQueryController.delegate : DestinationQueryController@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1 + OBJC_IVAR___CNKDestinationQueryControllerInternal_delegate;
  swift_beginAccess();
  result = MEMORY[0x1C3B752C0](v3);
  *a2 = result;
  return result;
}

uint64_t key path setter for DestinationQueryController.delegate : DestinationQueryController()
{
  swift_beginAccess();
  return swift_unknownObjectWeakAssign();
}

void (*DestinationQueryController.delegate.modify(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR___CNKDestinationQueryControllerInternal_delegate;
  v3[4] = v1;
  v3[5] = v4;
  v5 = v1 + v4;
  OUTLINED_FUNCTION_2_0();
  v3[3] = MEMORY[0x1C3B752C0](v5);
  return DestinationQueryController.delegate.modify;
}

void DestinationQueryController.delegate.modify(void **a1, char a2)
{
  void *v3;

  v3 = *a1;
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v3);
}

id DestinationQueryController.__allocating_init()()
{
  return objc_msgSend(OUTLINED_FUNCTION_12_3(), sel_init);
}

void DestinationQueryController.init()()
{
  id v0;

  OUTLINED_FUNCTION_15_6();
  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedManager);
  OUTLINED_FUNCTION_12_3();
  DestinationQueryController.init(idsLookupManager:)(v0);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  OUTLINED_FUNCTION_18();
}

void DestinationQueryController.__allocating_init(idsLookupManager:)(void *a1)
{
  OUTLINED_FUNCTION_12_3();
  DestinationQueryController.init(idsLookupManager:)(a1);
  OUTLINED_FUNCTION_0();
}

char *DestinationQueryController.init(idsLookupManager:)(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  char *v34;
  id v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t);
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  objc_class *v43;
  uint64_t v44;
  objc_super v45;

  v43 = (objc_class *)OUTLINED_FUNCTION_15_6();
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_77();
  v6 = v5 - v4;
  v42 = type metadata accessor for NSRunLoop.SchedulerTimeType.Stride();
  v7 = *(_QWORD *)(v42 - 8);
  MEMORY[0x1E0C80A78](v42);
  OUTLINED_FUNCTION_77();
  v10 = v9 - v8;
  v41 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.Debounce<PassthroughSubject<(), Never>, NSRunLoop>);
  v37 = *(_QWORD *)(v41 - 8);
  MEMORY[0x1E0C80A78](v41);
  OUTLINED_FUNCTION_77();
  v13 = v12 - v11;
  swift_unknownObjectWeakInit();
  v14 = OBJC_IVAR___CNKDestinationQueryControllerInternal_scheduleIDSQuerySubject;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PassthroughSubject<(), Never>);
  swift_allocObject();
  v15 = v1;
  *(_QWORD *)&v1[v14] = PassthroughSubject.init()();
  v16 = OBJC_IVAR___CNKDestinationQueryControllerInternal_scheduleIDSQueryGroupSubject;
  OUTLINED_FUNCTION_5_41();
  *(_QWORD *)&v15[v16] = OUTLINED_FUNCTION_27_2();
  v17 = OBJC_IVAR___CNKDestinationQueryControllerInternal_scheduleIDSCachedQuerySubject;
  OUTLINED_FUNCTION_5_41();
  *(_QWORD *)&v15[v17] = OUTLINED_FUNCTION_27_2();
  *(_QWORD *)&v15[OBJC_IVAR___CNKDestinationQueryControllerInternal_scheduleIDSQueryDebouncer] = 0;
  *(_QWORD *)&v15[OBJC_IVAR___CNKDestinationQueryControllerInternal_scheduleIDSQueryGroupDebouncer] = 0;
  *(_QWORD *)&v15[OBJC_IVAR___CNKDestinationQueryControllerInternal_scheduleIDSCachedQueryDebouncer] = 0;
  v18 = OBJC_IVAR___CNKDestinationQueryControllerInternal_scheduleNotificationSubject;
  OUTLINED_FUNCTION_5_41();
  *(_QWORD *)&v15[v18] = OUTLINED_FUNCTION_27_2();
  *(_QWORD *)&v15[OBJC_IVAR___CNKDestinationQueryControllerInternal_scheduleNotificationDebouncer] = 0;
  v19 = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)&v15[OBJC_IVAR___CNKDestinationQueryControllerInternal_idsDestinations] = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)&v15[OBJC_IVAR___CNKDestinationQueryControllerInternal_idsGroupDestinations] = v19;
  *(_QWORD *)&v15[OBJC_IVAR___CNKDestinationQueryControllerInternal_idsLookupManager] = a1;
  v36 = a1;

  v45.receiver = v15;
  v45.super_class = v43;
  v20 = (char *)objc_msgSendSuper2(&v45, sel_init);
  v44 = *(_QWORD *)&v20[OBJC_IVAR___CNKDestinationQueryControllerInternal_scheduleIDSQuerySubject];
  v21 = v20;
  swift_retain();
  static NSRunLoop.SchedulerTimeType.Stride.seconds(_:)();
  v22 = objc_msgSend((id)objc_opt_self(), sel_mainRunLoop);
  v39 = type metadata accessor for NSRunLoop.SchedulerOptions();
  __swift_storeEnumTagSinglePayload(v6, 1, 1, v39);
  type metadata accessor for NSRunLoop();
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type PassthroughSubject<(), Never> and conformance PassthroughSubject<A, B>, &demangling cache variable for type metadata for PassthroughSubject<(), Never>, MEMORY[0x1E0C95F48]);
  lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop();
  Publisher.debounce<A>(for:scheduler:options:)();
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v6, (uint64_t *)&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  OUTLINED_FUNCTION_18_37();
  v40 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v40(v10, v42);
  OUTLINED_FUNCTION_51();
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_0_55();
  v23 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v23 + 16) = partial apply for closure #1 in DestinationQueryController.init(idsLookupManager:);
  *(_QWORD *)(v23 + 24) = &v44;
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type Publishers.Debounce<PassthroughSubject<(), Never>, NSRunLoop> and conformance Publishers.Debounce<A, B>, &demangling cache variable for type metadata for Publishers.Debounce<PassthroughSubject<(), Never>, NSRunLoop>, MEMORY[0x1E0C95BB0]);
  Publisher<>.sink(receiveValue:)();
  OUTLINED_FUNCTION_16_20();
  v38 = *(void (**)(uint64_t, uint64_t))(v37 + 8);
  v38(v13, v41);
  OUTLINED_FUNCTION_3_44(OBJC_IVAR___CNKDestinationQueryControllerInternal_scheduleIDSQueryDebouncer);
  OUTLINED_FUNCTION_8_44(OBJC_IVAR___CNKDestinationQueryControllerInternal_scheduleIDSQueryGroupSubject);
  v24 = static NSRunLoop.SchedulerTimeType.Stride.seconds(_:)();
  v25 = OUTLINED_FUNCTION_20_10(v24, sel_mainRunLoop);
  OUTLINED_FUNCTION_15_34(v6);
  Publisher.debounce<A>(for:scheduler:options:)();
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v6, (uint64_t *)&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  OUTLINED_FUNCTION_18_37();
  v40(v10, v42);
  OUTLINED_FUNCTION_51();
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_0_55();
  v26 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v26 + 16) = partial apply for closure #2 in DestinationQueryController.init(idsLookupManager:);
  *(_QWORD *)(v26 + 24) = v13;
  Publisher<>.sink(receiveValue:)();
  OUTLINED_FUNCTION_16_20();
  v38(v13, v41);
  OUTLINED_FUNCTION_3_44(OBJC_IVAR___CNKDestinationQueryControllerInternal_scheduleIDSQueryGroupDebouncer);
  OUTLINED_FUNCTION_8_44(OBJC_IVAR___CNKDestinationQueryControllerInternal_scheduleIDSCachedQuerySubject);
  v27 = static NSRunLoop.SchedulerTimeType.Stride.seconds(_:)();
  v28 = OUTLINED_FUNCTION_20_10(v27, sel_mainRunLoop);
  OUTLINED_FUNCTION_15_34(v6);
  Publisher.debounce<A>(for:scheduler:options:)();
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v6, (uint64_t *)&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  OUTLINED_FUNCTION_18_37();
  OUTLINED_FUNCTION_14_41();
  OUTLINED_FUNCTION_51();
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_0_55();
  v29 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v29 + 16) = partial apply for closure #3 in DestinationQueryController.init(idsLookupManager:);
  *(_QWORD *)(v29 + 24) = v13;
  Publisher<>.sink(receiveValue:)();
  OUTLINED_FUNCTION_16_20();
  v38(v13, v41);
  OUTLINED_FUNCTION_3_44(OBJC_IVAR___CNKDestinationQueryControllerInternal_scheduleIDSCachedQueryDebouncer);
  OUTLINED_FUNCTION_8_44(OBJC_IVAR___CNKDestinationQueryControllerInternal_scheduleNotificationSubject);
  v30 = static NSRunLoop.SchedulerTimeType.Stride.seconds(_:)();
  OUTLINED_FUNCTION_20_10(v30, sel_mainRunLoop);
  __swift_storeEnumTagSinglePayload(v6, 1, 1, v39);
  Publisher.debounce<A>(for:scheduler:options:)();
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v6, (uint64_t *)&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  OUTLINED_FUNCTION_18_37();
  OUTLINED_FUNCTION_14_41();
  OUTLINED_FUNCTION_51();
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_0_55();
  v31 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v31 + 16) = partial apply for closure #4 in DestinationQueryController.init(idsLookupManager:);
  *(_QWORD *)(v31 + 24) = &v44;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  v38(v13, v41);
  OUTLINED_FUNCTION_3_44(OBJC_IVAR___CNKDestinationQueryControllerInternal_scheduleNotificationDebouncer);
  v32 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  v33 = *MEMORY[0x1E0DBD648];
  v34 = v21;
  objc_msgSend(v32, sel_addObserver_selector_name_object_, v34, sel_handleIDSStatusChanged, v33, 0);

  return v34;
}

uint64_t sub_1BD0E1358()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void partial apply for closure #1 in DestinationQueryController.init(idsLookupManager:)()
{
  uint64_t v0;

  closure #1 in DestinationQueryController.init(idsLookupManager:)(v0, DestinationQueryController.scheduleIDSQuery());
}

void DestinationQueryController.scheduleIDSQuery()()
{
  uint64_t v0;
  void *v1;
  Class isa;

  v1 = *(void **)(v0 + OBJC_IVAR___CNKDestinationQueryControllerInternal_idsLookupManager);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  isa = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_beginBatchQueryWithDestinations_, isa);

}

uint64_t thunk for @escaping @callee_guaranteed () -> ()(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

void partial apply for closure #2 in DestinationQueryController.init(idsLookupManager:)()
{
  uint64_t v0;

  closure #1 in DestinationQueryController.init(idsLookupManager:)(v0, DestinationQueryController.scheduleIDSQueryForGroups());
}

void DestinationQueryController.scheduleIDSQueryForGroups()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  Class isa;

  v1 = (_QWORD *)(v0 + OBJC_IVAR___CNKDestinationQueryControllerInternal_idsDestinations);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v2 = swift_bridgeObjectRetain();
  specialized Set.union<A>(_:)(v2);
  *v1 = v3;
  swift_bridgeObjectRelease();
  v4 = *(void **)(v0 + OBJC_IVAR___CNKDestinationQueryControllerInternal_idsLookupManager);
  swift_bridgeObjectRetain();
  isa = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_beginBatchQueryWithDestinations_, isa);

}

void closure #1 in DestinationQueryController.init(idsLookupManager:)(uint64_t a1, void (*a2)(void))
{
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v3 = a1 + 16;
  OUTLINED_FUNCTION_2_0();
  v4 = MEMORY[0x1C3B752C0](v3);
  if (v4)
  {
    v5 = (void *)v4;
    a2();

  }
  OUTLINED_FUNCTION_32();
}

void partial apply for closure #3 in DestinationQueryController.init(idsLookupManager:)()
{
  uint64_t v0;

  closure #1 in DestinationQueryController.init(idsLookupManager:)(v0, DestinationQueryController.scheduleIDSCachedQuery());
}

uint64_t sub_1BD0E15AC()
{
  swift_release();
  return swift_deallocObject();
}

void DestinationQueryController.scheduleIDSCachedQuery()()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  Class isa;

  v1 = *(void **)(v0 + OBJC_IVAR___CNKDestinationQueryControllerInternal_idsLookupManager);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v2 = swift_bridgeObjectRetain();
  specialized Set.union<A>(_:)(v2);
  isa = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_beginCachedQueryWithDestinations_, isa);

}

void closure #4 in DestinationQueryController.init(idsLookupManager:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x1C3B752C0](v1);
  if (v2)
  {
    v3 = (void *)v2;
    v4 = v2 + OBJC_IVAR___CNKDestinationQueryControllerInternal_delegate;
    swift_beginAccess();
    v5 = (void *)MEMORY[0x1C3B752C0](v4);

    if (v5)
    {
      objc_msgSend(v5, sel_queryControllerUpdated);
      swift_unknownObjectRelease();
    }
  }
}

void partial apply for closure #4 in DestinationQueryController.init(idsLookupManager:)()
{
  uint64_t v0;

  closure #4 in DestinationQueryController.init(idsLookupManager:)(v0);
}

id DestinationQueryController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)OUTLINED_FUNCTION_15_6();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t DestinationQueryController.handleIDSStatusChanged()()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PassthroughSubject<(), Never>);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](lazy protocol witness table cache variable for type PassthroughSubject<(), Never> and conformance PassthroughSubject<A, B>, &demangling cache variable for type metadata for PassthroughSubject<(), Never>, MEMORY[0x1E0C95F40]);
  return Subject<>.send()();
}

uint64_t DestinationQueryController.addRecipient(_:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15[3];

  v2 = v1;
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v4 = type metadata accessor for Logger();
  __swift_project_value_buffer(v4, (uint64_t)&static Logger.conversationKit);
  swift_unknownObjectRetain_n();
  v5 = Logger.logObject.getter();
  v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v15[0] = swift_slowAlloc();
    *(_DWORD *)v7 = 136315138;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CNKDestinationVendingProtocol);
    v8 = String.init<A>(reflecting:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v8, v9, v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_26_1();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v5, v6, "[DestinationQueryController] Adding recipient: %s", v7, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_60();
  }

  OUTLINED_FUNCTION_26_1();
  if (objc_msgSend(a1, sel_isGroup))
  {
    v10 = (_QWORD *)(v2 + OBJC_IVAR___CNKDestinationQueryControllerInternal_idsGroupDestinations);
  }
  else
  {
    v10 = (_QWORD *)(v2 + OBJC_IVAR___CNKDestinationQueryControllerInternal_idsDestinations);
    OUTLINED_FUNCTION_2_0();
  }
  swift_bridgeObjectRetain();
  v11 = objc_msgSend(a1, sel_idsDestinations);
  v12 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  specialized Set.union<A>(_:)(v12);
  *v10 = v13;
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PassthroughSubject<(), Never>);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](lazy protocol witness table cache variable for type PassthroughSubject<(), Never> and conformance PassthroughSubject<A, B>, &demangling cache variable for type metadata for PassthroughSubject<(), Never>, MEMORY[0x1E0C95F40]);
  Subject<>.send()();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PassthroughSubject<(), Never>);
  return Subject<>.send()();
}

uint64_t DestinationQueryController.removeRecipient(_:)(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;

  if (one-time initialization token for conversationKit != -1)
    swift_once();
  static os_log_type_t.default.getter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v2 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v2 + 16) = xmmword_1BD6441D0;
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CNKDestinationVendingProtocol);
  v3 = String.init<A>(reflecting:)();
  v5 = v4;
  *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v2 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v2 + 32) = v3;
  *(_QWORD *)(v2 + 40) = v5;
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(a1, sel_idsDestinations);
  v7 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  OUTLINED_FUNCTION_2_0();
  specialized Set._subtract<A>(_:)(v7);
  swift_endAccess();
  return OUTLINED_FUNCTION_2_1();
}

void @objc DestinationQueryController.addRecipient(_:)()
{
  void (*v0)(uint64_t);
  void *v1;
  uint64_t v2;
  id v3;

  OUTLINED_FUNCTION_9_35();
  v3 = v1;
  v0(v2);
  swift_unknownObjectRelease();

}

Swift::Void __swiftcall DestinationQueryController.reset()()
{
  uint64_t v0;

  if (one-time initialization token for conversationKit != -1)
    swift_once();
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  objc_msgSend(*(id *)(v0 + OBJC_IVAR___CNKDestinationQueryControllerInternal_idsLookupManager), sel_cancelQueries);
}

void DestinationQueryController.queryAddresses(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  specialized Sequence.compactMap<A>(_:)(a1);
  specialized Set.init<A>(_:)(v2);
  v3 = swift_bridgeObjectRetain();
  specialized Set.union<A>(_:)(v3);
  v5 = v4;
  v6 = (_QWORD *)(v1 + OBJC_IVAR___CNKDestinationQueryControllerInternal_idsDestinations);
  OUTLINED_FUNCTION_2_0();
  *v6 = v5;
  swift_bridgeObjectRelease();
  DestinationQueryController.scheduleIDSQuery()();
}

void DestinationQueryController.isFaceTimeAllowed(for:)(void *a1)
{
  uint64_t v2;

  DestinationQueryController.isAudioAllowed(for:)(a1);
  if (v2 != 1)
    DestinationQueryController.isVideoAllowed(for:)(a1);
  OUTLINED_FUNCTION_0();
}

void DestinationQueryController.isAudioAllowed(for:)(void *a1)
{
  DestinationQueryController.isAudioAllowed(for:)(a1, (SEL *)&selRef_isFaceTimeAudioAvailableForAnyDestinationInDestinations_);
}

void DestinationQueryController.isVideoAllowed(for:)(void *a1)
{
  DestinationQueryController.isAudioAllowed(for:)(a1, (SEL *)&selRef_isFaceTimeVideoAvailableForAnyDestinationInDestinations_);
}

void DestinationQueryController.isMultiwayAllowed(for:)(void *a1)
{
  DestinationQueryController.isAudioAllowed(for:)(a1, (SEL *)&selRef_isFaceTimeMultiwayAvailableForAnyDestinationInDestinations_);
}

void DestinationQueryController.isAudioAllowed(for:)(void *a1, SEL *a2)
{
  uint64_t v2;
  id v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  Class isa;

  v4 = objc_msgSend(a1, sel_idsDestinations);
  static Set._unconditionallyBridgeFromObjectiveC(_:)();

  specialized _copyCollectionToContiguousArray<A>(_:)();
  v6 = v5;
  OUTLINED_FUNCTION_53();
  if (*(_QWORD *)(v6 + 16))
  {
    v7 = *(void **)(v2 + OBJC_IVAR___CNKDestinationQueryControllerInternal_idsLookupManager);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_release();
    objc_msgSend(v7, *a2, isa);

  }
  else
  {
    swift_release();
  }
  OUTLINED_FUNCTION_18();
}

void @objc DestinationQueryController.isMultiwayAllowed(for:)()
{
  void (*v0)(uint64_t);
  void *v1;
  uint64_t v2;
  id v3;

  OUTLINED_FUNCTION_9_35();
  v3 = v1;
  v0(v2);
  swift_unknownObjectRelease();

  OUTLINED_FUNCTION_18();
}

uint64_t DestinationQueryController.isWebCapable(for:)(void *a1)
{
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  unsigned int v11;

  v2 = objc_msgSend(a1, sel_idsDestinations);
  v3 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  specialized Collection.first.getter(v3);
  if (v5 && (v6 = v4, v7 = v5, v8 = *(_QWORD *)(v3 + 16), OUTLINED_FUNCTION_2_1(), v8 == 1))
  {
    v9 = *(void **)(v1 + OBJC_IVAR___CNKDestinationQueryControllerInternal_idsLookupManager);
    v10 = (void *)MEMORY[0x1C3B72E00](v6, v7);
    swift_bridgeObjectRelease();
    v11 = objc_msgSend(v9, sel_isWebCapableFaceTimeAvailableForDestination_, v10);

    return v11;
  }
  else
  {
    swift_bridgeObjectRelease();
    return -1;
  }
}

uint64_t DestinationQueryController.presentationStyle(for:)(void *a1)
{
  uint64_t v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;

  v3 = objc_msgSend(a1, sel_idsDestinations);
  v4 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  specialized Collection.first.getter(v4);
  v7 = v6;
  if (v6)
  {
    v8 = v5;
    v9 = *(_QWORD *)(v4 + 16);
    OUTLINED_FUNCTION_53();
    if (v9 == 1)
    {
      v10 = *(void **)(v1 + OBJC_IVAR___CNKDestinationQueryControllerInternal_idsLookupManager);
      v11 = (void *)MEMORY[0x1C3B72E00](v8, v7);
      OUTLINED_FUNCTION_2_1();
      LODWORD(v7) = objc_msgSend(v10, sel_faceTimeMultiwayAvailabilityForDestination_, v11);

    }
    else
    {
      OUTLINED_FUNCTION_2_1();
      LODWORD(v7) = 0;
    }
  }
  else
  {
    OUTLINED_FUNCTION_53();
  }
  if ((objc_msgSend(a1, sel_isGroup) & 1) != 0)
  {
    LODWORD(v12) = 0;
  }
  else
  {
    v13 = objc_msgSend(a1, sel_idsDestinations);
    v14 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    specialized Collection.first.getter(v14);
    v16 = v15;
    v12 = v17;
    swift_bridgeObjectRelease();
    if (v12)
    {
      v18 = (void *)MEMORY[0x1C3B72E00](v16, v12);
      OUTLINED_FUNCTION_53();
      LODWORD(v12) = objc_msgSend(v18, sel_destinationIdIsPhoneNumber);

    }
  }
  DestinationQueryController.isFaceTimeAllowed(for:)(a1);
  v20 = 2;
  if ((_DWORD)v7 == 2)
    v20 = 3;
  if ((_DWORD)v12)
    v20 = 4;
  if (v19)
    return 5;
  else
    return v20;
}

void specialized Set._subtract<A>(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  unint64_t i;
  int64_t v22;
  unint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;

  v3 = type metadata accessor for UUID();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_77();
  v7 = v6 - v5;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v31 - v12;
  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return;
  v14 = a1 + 56;
  OUTLINED_FUNCTION_33_12();
  v17 = v16 & v15;
  v32 = (unint64_t)(v18 + 63) >> 6;
  swift_bridgeObjectRetain();
  v19 = 0;
  if (!v17)
    goto LABEL_4;
LABEL_3:
  v20 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  for (i = v20 | (v19 << 6); ; i = __clz(__rbit64(v23)) + (v19 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v13, *(_QWORD *)(a1 + 48) + *(_QWORD *)(v4 + 72) * i, v3);
    OUTLINED_FUNCTION_19_3((uint64_t)v13, 0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v3) == 1)
      goto LABEL_28;
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v7, v13, v3);
    specialized Set._Variant.remove(_:)();
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v11, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
    if (v17)
      goto LABEL_3;
LABEL_4:
    v22 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v22 >= v32)
      goto LABEL_27;
    v23 = *(_QWORD *)(v14 + 8 * v22);
    ++v19;
    if (!v23)
    {
      v19 = v22 + 1;
      OUTLINED_FUNCTION_21_26();
      if (v25 == v26)
        goto LABEL_27;
      v23 = *(_QWORD *)(v14 + 8 * v19);
      if (!v23)
      {
        v19 = v24 + 2;
        OUTLINED_FUNCTION_21_26();
        if (v25 == v26)
          goto LABEL_27;
        v23 = *(_QWORD *)(v14 + 8 * v19);
        if (!v23)
        {
          v19 = v27 + 3;
          OUTLINED_FUNCTION_21_26();
          if (v25 == v26)
            goto LABEL_27;
          v23 = *(_QWORD *)(v14 + 8 * v19);
          if (!v23)
            break;
        }
      }
    }
LABEL_23:
    v17 = (v23 - 1) & v23;
  }
  v29 = v28 + 4;
  if (v29 >= v32)
  {
LABEL_27:
    OUTLINED_FUNCTION_19_3((uint64_t)v13, 1);
LABEL_28:
    swift_release();
    return;
  }
  v23 = *(_QWORD *)(v14 + 8 * v29);
  if (v23)
  {
    v19 = v29;
    goto LABEL_23;
  }
  while (1)
  {
    v19 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    OUTLINED_FUNCTION_21_26();
    if (v25 == v26)
      goto LABEL_27;
    v23 = *(_QWORD *)(v14 + 8 * v19);
    v29 = v30 + 1;
    if (v23)
      goto LABEL_23;
  }
LABEL_31:
  __break(1u);
}

uint64_t specialized Set._subtract<A>(_:)(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  int64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t i;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;

  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return result;
  v2 = result;
  v3 = result + 56;
  OUTLINED_FUNCTION_33_12();
  v6 = v5 & v4;
  v8 = (unint64_t)(v7 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  if (!v6)
    goto LABEL_4;
LABEL_3:
  v10 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (i = v10 | (v9 << 6); ; i = __clz(__rbit64(v13)) + (v9 << 6))
  {
    v15 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * i);
    v16 = *v15;
    v17 = v15[1];
    swift_bridgeObjectRetain();
    specialized Set._Variant.remove(_:)(v16, v17);
    OUTLINED_FUNCTION_53();
    result = OUTLINED_FUNCTION_2_1();
    if (v6)
      goto LABEL_3;
LABEL_4:
    v12 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v12 >= v8)
      return swift_release();
    v13 = *(_QWORD *)(v3 + 8 * v12);
    ++v9;
    if (!v13)
    {
      v9 = v12 + 1;
      if (v12 + 1 >= v8)
        return swift_release();
      v13 = *(_QWORD *)(v3 + 8 * v9);
      if (!v13)
      {
        v9 = v12 + 2;
        if (v12 + 2 >= v8)
          return swift_release();
        v13 = *(_QWORD *)(v3 + 8 * v9);
        if (!v13)
        {
          v9 = v12 + 3;
          if (v12 + 3 >= v8)
            return swift_release();
          v13 = *(_QWORD *)(v3 + 8 * v9);
          if (!v13)
            break;
        }
      }
    }
LABEL_19:
    v6 = (v13 - 1) & v13;
  }
  v14 = v12 + 4;
  if (v14 >= v8)
    return swift_release();
  v13 = *(_QWORD *)(v3 + 8 * v14);
  if (v13)
  {
    v9 = v14;
    goto LABEL_19;
  }
  while (1)
  {
    v9 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v9 >= v8)
      return swift_release();
    v13 = *(_QWORD *)(v3 + 8 * v9);
    ++v14;
    if (v13)
      goto LABEL_19;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for DestinationQueryController()
{
  return objc_opt_self();
}

uint64_t method lookup function for DestinationQueryController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DestinationQueryController.__allocating_init(idsLookupManager:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t EnteredNumbersView.enteredNumbers.getter()
{
  uint64_t v0;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<String>);
  MEMORY[0x1C3B72860](&v2, v0);
  return v2;
}

uint64_t key path getter for EnteredNumbersView.enteredNumbers : EnteredNumbersView@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = EnteredNumbersView.enteredNumbers.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t key path setter for EnteredNumbersView.enteredNumbers : EnteredNumbersView()
{
  swift_bridgeObjectRetain();
  return EnteredNumbersView.enteredNumbers.setter();
}

uint64_t EnteredNumbersView.enteredNumbers.setter()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<String>);
  return Binding.wrappedValue.setter();
}

void (*EnteredNumbersView.enteredNumbers.modify(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))(uint64_t a1, char a2)
{
  _QWORD *v10;

  v10 = malloc(0x68uLL);
  *a1 = v10;
  v10[10] = a4;
  v10[11] = a5;
  v10[8] = a2;
  v10[9] = a3;
  *v10 = a2;
  v10[1] = a3;
  v10[2] = a4;
  v10[3] = a5;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  v10[12] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<String>);
  MEMORY[0x1C3B72860]();
  return EnteredNumbersView.enteredNumbers.modify;
}

void EnteredNumbersView.enteredNumbers.modify(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD **)a1;
  *(_QWORD *)(*(_QWORD *)a1 + 48) = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v3 = v2[5];
  v4 = v2[11];
  v6 = v2[9];
  v5 = v2[10];
  *v2 = v2[8];
  v2[1] = v6;
  v2[2] = v5;
  v2[3] = v4;
  v2[7] = v3;
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_8_45();
    OUTLINED_FUNCTION_22();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_8_45();
    OUTLINED_FUNCTION_22();
    swift_release();
  }
  swift_bridgeObjectRelease();
  free(v2);
}

uint64_t EnteredNumbersView.$enteredNumbers.getter()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<String>);
  Binding.projectedValue.getter();
  return v1;
}

void EnteredNumbersView.body.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v10 = type metadata accessor for DynamicTypeSize();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_77();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<ClarityUIShadowedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Text.TruncationMode>>, Spacer)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, RoundedRectangle>, _TraitWritingModifier<LayoutPriorityTraitKey>>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _PaddingLayout>, _OpacityEffect>, _FrameLayout>)>>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_77();
  v3 = v2 - v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(ModifiedContent<ClarityUIShadowedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Text.TruncationMode>>, Spacer)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, RoundedRectangle>, _TraitWritingModifier<LayoutPriorityTraitKey>>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _PaddingLayout>, _OpacityEffect>, _FrameLayout>)>>, _AnimationModifier<Bool>>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_77();
  *(_QWORD *)v3 = static VerticalAlignment.center.getter();
  *(_QWORD *)(v3 + 8) = 0;
  *(_BYTE *)(v3 + 16) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_HStackLayout, TupleView<(ModifiedContent<ClarityUIShadowedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Text.TruncationMode>>, Spacer)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, RoundedRectangle>, _TraitWritingModifier<LayoutPriorityTraitKey>>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _PaddingLayout>, _OpacityEffect>, _FrameLayout>)>>);
  v5 = OUTLINED_FUNCTION_9_36();
  closure #1 in EnteredNumbersView.body.getter(v5, v6, v7, v8, v9);
}

void sub_1BD0E2B10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;

  v6 = static Animation.default.getter();
  OUTLINED_FUNCTION_9_36();
  v7 = EnteredNumbersView.showsDeleteButton.getter();
  outlined init with copy of FeatureEligibility?(v2, v3, &demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<ClarityUIShadowedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Text.TruncationMode>>, Spacer)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, RoundedRectangle>, _TraitWritingModifier<LayoutPriorityTraitKey>>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _PaddingLayout>, _OpacityEffect>, _FrameLayout>)>>);
  v8 = v3 + *(int *)(v0 + 36);
  *(_QWORD *)v8 = v6;
  *(_BYTE *)(v8 + 8) = v7;
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v2, &demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<ClarityUIShadowedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Text.TruncationMode>>, Spacer)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, RoundedRectangle>, _TraitWritingModifier<LayoutPriorityTraitKey>>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _PaddingLayout>, _OpacityEffect>, _FrameLayout>)>>);
  KeyPath = swift_getKeyPath();
  v10 = *(_QWORD *)(v5 - 96);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(v1, *MEMORY[0x1E0CD98D0], v10);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ClarityUIShadowedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Text.TruncationMode>>, Spacer)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, RoundedRectangle>, _TraitWritingModifier<LayoutPriorityTraitKey>>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _PaddingLayout>, _OpacityEffect>, _FrameLayout>)>>, _AnimationModifier<Bool>>, _EnvironmentKeyWritingModifier<DynamicTypeSize>>);
  v12 = *(_QWORD *)(v5 - 88);
  v13 = (uint64_t *)(v12 + *(int *)(v11 + 36));
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<DynamicTypeSize>);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)v13 + *(int *)(v14 + 28), v1, v10);
  *v13 = KeyPath;
  outlined init with copy of FeatureEligibility?(v3, v12, &demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(ModifiedContent<ClarityUIShadowedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Text.TruncationMode>>, Spacer)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, RoundedRectangle>, _TraitWritingModifier<LayoutPriorityTraitKey>>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _PaddingLayout>, _OpacityEffect>, _FrameLayout>)>>, _AnimationModifier<Bool>>);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v10);
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v3, &demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(ModifiedContent<ClarityUIShadowedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Text.TruncationMode>>, Spacer)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, RoundedRectangle>, _TraitWritingModifier<LayoutPriorityTraitKey>>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _PaddingLayout>, _OpacityEffect>, _FrameLayout>)>>, _AnimationModifier<Bool>>);
}

void closure #1 in EnteredNumbersView.body.getter(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[2];
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;

  v29[0] = a4;
  v30 = a3;
  v44 = a5;
  v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<ModifiedContent<Image, _PaddingLayout>>);
  v36 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v31 = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.buttonStyle<A>(_:)>>.0);
  v37 = *(_QWORD *)(v8 - 8);
  v38 = v8;
  MEMORY[0x1E0C80A78](v8);
  v32 = (char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _PaddingLayout>);
  MEMORY[0x1E0C80A78](v34);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _PaddingLayout>, _OpacityEffect>);
  MEMORY[0x1E0C80A78](v39);
  v35 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _PaddingLayout>, _OpacityEffect>, _FrameLayout>);
  v11 = MEMORY[0x1E0C80A78](v42);
  v43 = (char *)v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v11);
  v40 = (char *)v29 - v14;
  MEMORY[0x1E0C80A78](v13);
  v41 = (char *)v29 - v15;
  v16 = type metadata accessor for RoundedRectangle();
  MEMORY[0x1E0C80A78](v16);
  v18 = (_QWORD *)((char *)v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ClarityUIShadowedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Text.TruncationMode>>, Spacer)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, RoundedRectangle>);
  MEMORY[0x1E0C80A78](v19);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ClarityUIShadowedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Text.TruncationMode>>, Spacer)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, RoundedRectangle>, _TraitWritingModifier<LayoutPriorityTraitKey>>);
  v21 = MEMORY[0x1E0C80A78](v20);
  MEMORY[0x1E0C80A78](v21);
  v29[1] = (char *)v29 - v22;
  static ClarityUIMetrics.componentCornerRadius.getter();
  v24 = v23;
  v25 = (char *)v18 + *(int *)(v16 + 20);
  v26 = *MEMORY[0x1E0CDB0C0];
  v27 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v25, v26, v27);
  *v18 = v24;
  v18[1] = v24;
  swift_retain();
  swift_retain();
  v28 = v29[0];
  swift_bridgeObjectRetain();
  specialized ClarityUIShadowedContent.init(shape:isPressed:invertsInnerShadows:includesDropShadow:content:)((uint64_t)v18, 0, 1, 0, a1, a2, v30, v28);
}

void sub_1BD0E2F54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  _OWORD *v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  outlined init with copy of FeatureEligibility?(v4, v0, &demangling cache variable for type metadata for ClarityUIShadowedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Text.TruncationMode>>, Spacer)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, RoundedRectangle>);
  *(_QWORD *)(v0 + *(int *)(v1 + 36)) = 0x3FF0000000000000;
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v4, &demangling cache variable for type metadata for ClarityUIShadowedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Text.TruncationMode>>, Spacer)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, RoundedRectangle>);
  outlined init with take of Any?(v0, v3, &demangling cache variable for type metadata for ModifiedContent<ClarityUIShadowedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Text.TruncationMode>>, Spacer)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, RoundedRectangle>, _TraitWritingModifier<LayoutPriorityTraitKey>>);
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = v6;
  v10[3] = v5;
  v10[4] = v7;
  v10[5] = v8;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Image, _PaddingLayout>);
  lazy protocol witness table accessor for type ModifiedContent<Image, _PaddingLayout> and conformance <> ModifiedContent<A, B>();
  v11 = *(_QWORD *)(v9 - 280);
  Button.init(action:label:)();
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type Button<ModifiedContent<Image, _PaddingLayout>> and conformance Button<A>, &demangling cache variable for type metadata for Button<ModifiedContent<Image, _PaddingLayout>>, MEMORY[0x1E0CDFA58]);
  lazy protocol witness table accessor for type DeleteButtonStyle and conformance DeleteButtonStyle();
  v12 = *(_QWORD *)(v9 - 272);
  v13 = *(_QWORD *)(v9 - 264);
  View.buttonStyle<A>(_:)();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 240) + 8))(v11, v13);
  v14 = static Edge.Set.leading.getter();
  static ClarityUIMetrics.standardSpacing.getter();
  EdgeInsets.init(_all:)();
  v16 = v15;
  v18 = v17;
  v20 = v19;
  v22 = v21;
  v23 = *(_QWORD *)(v9 - 232);
  v24 = v12;
  v25 = v12;
  v26 = *(_QWORD *)(v9 - 224);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v2, v24, v26);
  v27 = v2 + *(int *)(*(_QWORD *)(v9 - 256) + 36);
  *(_BYTE *)v27 = v14;
  *(_QWORD *)(v27 + 8) = v16;
  *(_QWORD *)(v27 + 16) = v18;
  *(_QWORD *)(v27 + 24) = v20;
  *(_QWORD *)(v27 + 32) = v22;
  *(_BYTE *)(v27 + 40) = 0;
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v25, v26);
  if (EnteredNumbersView.showsDeleteButton.getter())
    v28 = 1.0;
  else
    v28 = 0.0;
  v29 = *(_QWORD *)(v9 - 248);
  outlined init with copy of FeatureEligibility?(v2, v29, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _PaddingLayout>);
  *(double *)(v29 + *(int *)(*(_QWORD *)(v9 - 216) + 36)) = v28;
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v2, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _PaddingLayout>);
  EnteredNumbersView.showsDeleteButton.getter();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  v30 = *(_QWORD *)(v9 - 208);
  outlined init with copy of FeatureEligibility?(v29, v30, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _PaddingLayout>, _OpacityEffect>);
  v31 = (_OWORD *)(v30 + *(int *)(*(_QWORD *)(v9 - 192) + 36));
  v32 = *(_OWORD *)(v9 - 152);
  *v31 = *(_OWORD *)(v9 - 168);
  v31[1] = v32;
  v31[2] = *(_OWORD *)(v9 - 136);
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v29, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _PaddingLayout>, _OpacityEffect>);
  v33 = *(_QWORD *)(v9 - 200);
  outlined init with take of Any?(v30, v33, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _PaddingLayout>, _OpacityEffect>, _FrameLayout>);
  v34 = *(_QWORD *)(v9 - 296);
  outlined init with copy of FeatureEligibility?(v34, v0, &demangling cache variable for type metadata for ModifiedContent<ClarityUIShadowedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Text.TruncationMode>>, Spacer)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, RoundedRectangle>, _TraitWritingModifier<LayoutPriorityTraitKey>>);
  v35 = *(_QWORD *)(v9 - 184);
  outlined init with copy of FeatureEligibility?(v33, v35, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _PaddingLayout>, _OpacityEffect>, _FrameLayout>);
  v36 = *(_QWORD *)(v9 - 176);
  outlined init with copy of FeatureEligibility?(v0, v36, &demangling cache variable for type metadata for ModifiedContent<ClarityUIShadowedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Text.TruncationMode>>, Spacer)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, RoundedRectangle>, _TraitWritingModifier<LayoutPriorityTraitKey>>);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<ClarityUIShadowedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Text.TruncationMode>>, Spacer)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, RoundedRectangle>, _TraitWritingModifier<LayoutPriorityTraitKey>>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _PaddingLayout>, _OpacityEffect>, _FrameLayout>));
  outlined init with copy of FeatureEligibility?(v35, v36 + *(int *)(v37 + 48), &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _PaddingLayout>, _OpacityEffect>, _FrameLayout>);
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v33, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _PaddingLayout>, _OpacityEffect>, _FrameLayout>);
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v34, &demangling cache variable for type metadata for ModifiedContent<ClarityUIShadowedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Text.TruncationMode>>, Spacer)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, RoundedRectangle>, _TraitWritingModifier<LayoutPriorityTraitKey>>);
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v35, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _PaddingLayout>, _OpacityEffect>, _FrameLayout>);
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v0, &demangling cache variable for type metadata for ModifiedContent<ClarityUIShadowedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Text.TruncationMode>>, Spacer)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, RoundedRectangle>, _TraitWritingModifier<LayoutPriorityTraitKey>>);
}

void closure #1 in closure #1 in closure #1 in EnteredNumbersView.body.getter(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  Swift::String v23;
  Swift::String_optional v24;
  Swift::String v25;
  Swift::String v26;
  _QWORD v27[11];
  Swift::String v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[3];
  Swift::String v32;

  v27[9] = a5;
  v27[2] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Text.TruncationMode>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_41();
  v27[6] = v10;
  v11 = type metadata accessor for Text.TruncationMode();
  v27[4] = *(_QWORD *)(v11 - 8);
  v27[5] = v11;
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_41();
  v27[3] = v12;
  v27[1] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Text.TruncationMode>>);
  OUTLINED_FUNCTION_1_1();
  v14 = MEMORY[0x1E0C80A78](v13);
  v27[8] = (char *)v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  MEMORY[0x1E0C80A78](v16);
  v27[7] = (char *)v27 - v17;
  v28._countAndFlagsBits = a1;
  v28._object = a2;
  v29 = a3;
  v30 = a4;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<String>);
  MEMORY[0x1C3B72860](v31);
  v19 = v31[0];
  v18 = v31[1];
  swift_bridgeObjectRelease();
  v20 = HIBYTE(v18) & 0xF;
  if ((v18 & 0x2000000000000000) == 0)
    v20 = v19 & 0xFFFFFFFFFFFFLL;
  v27[0] = a4;
  if (v20)
  {
    v28._countAndFlagsBits = a1;
    v28._object = a2;
    v29 = a3;
    v30 = a4;
    OUTLINED_FUNCTION_3_45();
  }
  v21 = a3;
  v22 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v32._object = (void *)0xE000000000000000;
  v23._object = (void *)0x80000001BD672D80;
  v23._countAndFlagsBits = 0xD000000000000029;
  v24.value._countAndFlagsBits = 0x61737265766E6F43;
  v24.value._object = (void *)0xEF74694B6E6F6974;
  v25._countAndFlagsBits = 0;
  v25._object = (void *)0xE000000000000000;
  v32._countAndFlagsBits = 0;
  v26 = NSLocalizedString(_:tableName:bundle:value:comment:)(v23, v24, (NSBundle)v22, v25, v32);

  v28 = v26;
  lazy protocol witness table accessor for type String and conformance String();
  Text.init<A>(_:)();
  v28._countAndFlagsBits = a1;
  v28._object = a2;
  v29 = v21;
  v30 = v27[0];
  OUTLINED_FUNCTION_3_45();
}

void sub_1BD0E34DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t KeyPath;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v6 = *(_QWORD *)(v4 - 120);
  v5 = *(_QWORD *)(v4 - 112);
  swift_bridgeObjectRelease();
  v7 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0)
    v7 = v6 & 0xFFFFFFFFFFFFLL;
  if (v7)
    static Font.headline.getter();
  else
    static Font.body.getter();
  v8 = Text.font(_:)();
  v10 = v9;
  v12 = v11;
  *(_QWORD *)(v4 - 240) = v13;
  OUTLINED_FUNCTION_22();
  v14 = v12 & 1;
  outlined consume of Text.Storage(v0, v2, v3 & 1);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath();
  v16 = *(_QWORD *)(v4 - 216);
  v17 = *(_QWORD *)(v4 - 208);
  v18 = *(_QWORD *)(v4 - 200);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v17 + 104))(v16, *MEMORY[0x1E0CDDB50], v18);
  v19 = swift_getKeyPath();
  v20 = *(uint64_t **)(v4 - 192);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))((char *)v20 + *(int *)(*(_QWORD *)(v4 - 224) + 28), v16, v18);
  *v20 = v19;
  outlined init with copy of FeatureEligibility?((uint64_t)v20, v1 + *(int *)(*(_QWORD *)(v4 - 232) + 36), &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Text.TruncationMode>);
  *(_QWORD *)v1 = v8;
  *(_QWORD *)(v1 + 8) = v10;
  *(_BYTE *)(v1 + 16) = v14;
  *(_QWORD *)(v1 + 24) = *(_QWORD *)(v4 - 240);
  *(_QWORD *)(v1 + 32) = KeyPath;
  *(_QWORD *)(v1 + 40) = 1;
  *(_BYTE *)(v1 + 48) = 0;
  outlined copy of Text.Storage(v8, v10, v14);
  swift_bridgeObjectRetain();
  swift_retain();
  outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v20, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Text.TruncationMode>);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  outlined consume of Text.Storage(v8, v10, v14);
  swift_release();
  swift_bridgeObjectRelease();
  v21 = *(_QWORD *)(v4 - 184);
  outlined init with take of Any?(v1, v21, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Text.TruncationMode>>);
  static ClarityUIMetrics.standardSpacing.getter();
  v23 = v22;
  v24 = *(_QWORD *)(v4 - 176);
  outlined init with copy of FeatureEligibility?(v21, v24, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Text.TruncationMode>>);
  v25 = *(_QWORD *)(v4 - 168);
  outlined init with copy of FeatureEligibility?(v24, v25, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Text.TruncationMode>>);
  v26 = v25
      + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Text.TruncationMode>>, Spacer))
               + 48);
  *(_QWORD *)v26 = v23;
  *(_BYTE *)(v26 + 8) = 0;
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v21, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Text.TruncationMode>>);
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v24, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Text.TruncationMode>>);
}

uint64_t closure #2 in closure #1 in EnteredNumbersView.body.getter()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  _QWORD v5[2];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<String>);
  MEMORY[0x1C3B72860](v5);
  v2 = v5[0];
  v1 = v5[1];
  result = swift_bridgeObjectRelease();
  v4 = HIBYTE(v1) & 0xF;
  if ((v1 & 0x2000000000000000) == 0)
    v4 = v2 & 0xFFFFFFFFFFFFLL;
  if (v4)
  {
    MEMORY[0x1C3B72860](v5, v0);
    MEMORY[0x1C3B72860](v5, v0);
    swift_bridgeObjectRelease();
    String.index(before:)();
    swift_bridgeObjectRelease();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    MEMORY[0x1C3B72860](v5, v0);
    String.remove(at:)();
    swift_bridgeObjectRelease();
    Binding.wrappedValue.setter();
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t closure #3 in closure #1 in EnteredNumbersView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  char v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = Image.init(systemName:)();
  v3 = static Edge.Set.horizontal.getter();
  static ClarityUIMetrics.standardSpacing.getter();
  result = EdgeInsets.init(_all:)();
  *(_QWORD *)a1 = v2;
  *(_BYTE *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_BYTE *)(a1 + 48) = 0;
  return result;
}

BOOL EnteredNumbersView.showsDeleteButton.getter()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[2];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<String>);
  MEMORY[0x1C3B72860](v5, v0);
  v2 = v5[0];
  v1 = v5[1];
  swift_bridgeObjectRelease();
  v3 = HIBYTE(v1) & 0xF;
  if ((v1 & 0x2000000000000000) == 0)
    v3 = v2 & 0xFFFFFFFFFFFFLL;
  return v3 != 0;
}

void key path getter for EnvironmentValues.dynamicTypeSize : EnvironmentValues()
{
  EnvironmentValues.dynamicTypeSize.getter();
  OUTLINED_FUNCTION_0();
}

void sub_1BD0E3974()
{
  EnvironmentValues.dynamicTypeSize.getter();
  OUTLINED_FUNCTION_0();
}

uint64_t key path setter for EnvironmentValues.dynamicTypeSize : EnvironmentValues(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for EnvironmentValues.dynamicTypeSize : EnvironmentValues(a1, a2, a3, a4, (void (*)(_QWORD))MEMORY[0x1E0CD9958], MEMORY[0x1E0CDA620]);
}

uint64_t sub_1BD0E39A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for EnvironmentValues.dynamicTypeSize : EnvironmentValues(a1, a2, a3, a4, (void (*)(_QWORD))MEMORY[0x1E0CD9958], MEMORY[0x1E0CDA620]);
}

uint64_t associated type witness table accessor for View.Body : View in EnteredNumbersView()
{
  return swift_getOpaqueTypeConformance2();
}

void protocol witness for View.body.getter in conformance EnteredNumbersView()
{
  EnteredNumbersView.body.getter();
}

uint64_t destroy for EnteredNumbersView()
{
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for EnteredNumbersView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for EnteredNumbersView(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for EnteredNumbersView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EnteredNumbersView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EnteredNumbersView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for EnteredNumbersView()
{
  return &type metadata for EnteredNumbersView;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ClarityUIShadowedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Text.TruncationMode>>, Spacer)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, RoundedRectangle>, _TraitWritingModifier<LayoutPriorityTraitKey>>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _PaddingLayout>, _OpacityEffect>, _FrameLayout>)>>, _AnimationModifier<Bool>>, _EnvironmentKeyWritingModifier<DynamicTypeSize>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ClarityUIShadowedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Text.TruncationMode>>, Spacer)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, RoundedRectangle>, _TraitWritingModifier<LayoutPriorityTraitKey>>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _PaddingLayout>, _OpacityEffect>, _FrameLayout>)>>, _AnimationModifier<Bool>>, _EnvironmentKeyWritingModifier<DynamicTypeSize>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ClarityUIShadowedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Text.TruncationMode>>, Spacer)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, RoundedRectangle>, _TraitWritingModifier<LayoutPriorityTraitKey>>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _PaddingLayout>, _OpacityEffect>, _FrameLayout>)>>, _AnimationModifier<Bool>>, _EnvironmentKeyWritingModifier<DynamicTypeSize>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ClarityUIShadowedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Text.TruncationMode>>, Spacer)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, RoundedRectangle>, _TraitWritingModifier<LayoutPriorityTraitKey>>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _PaddingLayout>, _OpacityEffect>, _FrameLayout>)>>, _AnimationModifier<Bool>>, _EnvironmentKeyWritingModifier<DynamicTypeSize>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<HStack<TupleView<(ModifiedContent<ClarityUIShadowedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Text.TruncationMode>>, Spacer)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, RoundedRectangle>, _TraitWritingModifier<LayoutPriorityTraitKey>>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _PaddingLayout>, _OpacityEffect>, _FrameLayout>)>>, _AnimationModifier<Bool>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<DynamicTypeSize> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<DynamicTypeSize>, MEMORY[0x1E0CDCF80]);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ClarityUIShadowedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Text.TruncationMode>>, Spacer)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, RoundedRectangle>, _TraitWritingModifier<LayoutPriorityTraitKey>>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _PaddingLayout>, _OpacityEffect>, _FrameLayout>)>>, _AnimationModifier<Bool>>, _EnvironmentKeyWritingModifier<DynamicTypeSize>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<HStack<TupleView<(ModifiedContent<ClarityUIShadowedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Text.TruncationMode>>, Spacer)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, RoundedRectangle>, _TraitWritingModifier<LayoutPriorityTraitKey>>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _PaddingLayout>, _OpacityEffect>, _FrameLayout>)>>, _AnimationModifier<Bool>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<HStack<TupleView<(ModifiedContent<ClarityUIShadowedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Text.TruncationMode>>, Spacer)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, RoundedRectangle>, _TraitWritingModifier<LayoutPriorityTraitKey>>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _PaddingLayout>, _OpacityEffect>, _FrameLayout>)>>, _AnimationModifier<Bool>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<HStack<TupleView<(ModifiedContent<ClarityUIShadowedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Text.TruncationMode>>, Spacer)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, RoundedRectangle>, _TraitWritingModifier<LayoutPriorityTraitKey>>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _PaddingLayout>, _OpacityEffect>, _FrameLayout>)>>, _AnimationModifier<Bool>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(ModifiedContent<ClarityUIShadowedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Text.TruncationMode>>, Spacer)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, RoundedRectangle>, _TraitWritingModifier<LayoutPriorityTraitKey>>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _PaddingLayout>, _OpacityEffect>, _FrameLayout>)>>, _AnimationModifier<Bool>>);
    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type HStack<TupleView<(ModifiedContent<ClarityUIShadowedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Text.TruncationMode>>, Spacer)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, RoundedRectangle>, _TraitWritingModifier<LayoutPriorityTraitKey>>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _PaddingLayout>, _OpacityEffect>, _FrameLayout>)>> and conformance HStack<A>, &demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<ClarityUIShadowedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Text.TruncationMode>>, Spacer)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, RoundedRectangle>, _TraitWritingModifier<LayoutPriorityTraitKey>>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _PaddingLayout>, _OpacityEffect>, _FrameLayout>)>>, MEMORY[0x1E0CDFB10]);
    v3 = v2;
    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type _AnimationModifier<Bool> and conformance _AnimationModifier<A>, &demangling cache variable for type metadata for _AnimationModifier<Bool>, MEMORY[0x1E0CDB148]);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v5);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<HStack<TupleView<(ModifiedContent<ClarityUIShadowedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Text.TruncationMode>>, Spacer)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, RoundedRectangle>, _TraitWritingModifier<LayoutPriorityTraitKey>>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _PaddingLayout>, _OpacityEffect>, _FrameLayout>)>>, _AnimationModifier<Bool>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

void *type metadata accessor for DeleteButtonStyle()
{
  return &unk_1E761ADE8;
}

uint64_t associated type witness table accessor for ButtonStyle.Body : View in DeleteButtonStyle()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t DeleteButtonStyle.makeBody(configuration:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[2];

  v2 = type metadata accessor for PlatterButtonType();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ButtonStyleConfiguration();
  MEMORY[0x1E0C80A78](v6);
  (*(void (**)(char *, uint64_t))(v8 + 16))((char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  v10[1] = static Color.red.getter();
  static Color.white.getter();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0CDABD8], v2);
  return PlatterButtonStyleView.init(configuration:background:foregroundColor:type:includesPadding:)();
}

uint64_t sub_1BD0E3E18()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in closure #1 in EnteredNumbersView.body.getter()
{
  return closure #2 in closure #1 in EnteredNumbersView.body.getter();
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<Image, _PaddingLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<Image, _PaddingLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<Image, _PaddingLayout> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Image, _PaddingLayout>);
    v2[0] = MEMORY[0x1E0CDF820];
    v2[1] = MEMORY[0x1E0CD9758];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<Image, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type DeleteButtonStyle and conformance DeleteButtonStyle()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type DeleteButtonStyle and conformance DeleteButtonStyle;
  if (!lazy protocol witness table cache variable for type DeleteButtonStyle and conformance DeleteButtonStyle)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for DeleteButtonStyle, &unk_1E761ADE8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type DeleteButtonStyle and conformance DeleteButtonStyle);
  }
  return result;
}

uint64_t outlined consume of Text.Storage(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_release();
  else
    return swift_bridgeObjectRelease();
}

void sub_1BD0E3F10()
{
  EnvironmentValues.truncationMode.getter();
  OUTLINED_FUNCTION_0();
}

uint64_t key path setter for EnvironmentValues.dynamicTypeSize : EnvironmentValues(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD), uint64_t (*a6)(char *))
{
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  a5(0);
  MEMORY[0x1E0C80A78]();
  v9 = (char *)&v12 - v8;
  (*(void (**)(char *, uint64_t))(v10 + 16))((char *)&v12 - v8, a1);
  return a6(v9);
}

uint64_t sub_1BD0E3FA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for EnvironmentValues.dynamicTypeSize : EnvironmentValues(a1, a2, a3, a4, (void (*)(_QWORD))MEMORY[0x1E0CDDB68], MEMORY[0x1E0CDA600]);
}

uint64_t outlined copy of Text.Storage(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_retain();
  else
    return swift_bridgeObjectRetain();
}

void sub_1BD0E3FDC()
{
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type PlatterButtonStyleView<Color> and conformance PlatterButtonStyleView<A>, &demangling cache variable for type metadata for PlatterButtonStyleView<Color>, MEMORY[0x1E0CDC060]);
}

uint64_t ScreeningCaptions.captionHistory.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC15ConversationKit17ScreeningCaptions_captionHistory);
  OUTLINED_FUNCTION_2_0();
  v2 = *v1;
  outlined copy of Participant.CaptionInfo?(*v1);
  return v2;
}

uint64_t ScreeningCaptions.captionHistory.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t *v7;
  uint64_t v8;

  v7 = (uint64_t *)(v3 + OBJC_IVAR____TtC15ConversationKit17ScreeningCaptions_captionHistory);
  OUTLINED_FUNCTION_2_0();
  v8 = *v7;
  *v7 = a1;
  v7[1] = a2;
  v7[2] = a3;
  return outlined consume of Participant.CaptionInfo?(v8);
}

uint64_t outlined consume of Participant.CaptionInfo?(uint64_t result)
{
  if (result)
  {
    swift_unknownObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t (*ScreeningCaptions.captionHistory.modify())()
{
  OUTLINED_FUNCTION_2_0();
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t ScreeningCaptions.isGibberish.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ConversationKit17ScreeningCaptions_isGibberish);
  OUTLINED_FUNCTION_2_0();
  return *v1;
}

uint64_t ScreeningCaptions.isGibberish.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit17ScreeningCaptions_isGibberish);
  result = OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  return result;
}

uint64_t (*ScreeningCaptions.isGibberish.modify())()
{
  OUTLINED_FUNCTION_2_0();
  return CallRecordingPillViewController.cancellable.modify;
}

uint64_t ScreeningCaptions.badCaptionCountThreshold.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit17ScreeningCaptions_badCaptionCountThreshold);
}

uint64_t ScreeningCaptions.__allocating_init(logger:onUpdateCaptions:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  ScreeningCaptions.init(logger:onUpdateCaptions:)(a1, a2, a3);
  return v6;
}

uint64_t ScreeningCaptions.init(logger:onUpdateCaptions:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v4 = v3;
  v8 = (_QWORD *)(v3 + OBJC_IVAR____TtC15ConversationKit17ScreeningCaptions_captionHistory);
  v8[1] = 0;
  v8[2] = 0;
  *v8 = 0;
  *(_BYTE *)(v3 + OBJC_IVAR____TtC15ConversationKit17ScreeningCaptions_isGibberish) = 0;
  v9 = OBJC_IVAR____TtC15ConversationKit17ScreeningCaptions_badCaptionCountThreshold;
  type metadata accessor for Defaults();
  swift_allocObject();
  v10 = Defaults.init()();
  v11 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v10 + 768))(v10);
  swift_release();
  *(_QWORD *)(v3 + v9) = v11;
  v12 = v3 + OBJC_IVAR____TtC15ConversationKit17ScreeningCaptions_logger;
  v13 = type metadata accessor for Logger();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v12, a1, v13);
  v14 = (_QWORD *)(v4 + OBJC_IVAR____TtC15ConversationKit17ScreeningCaptions_onUpdateCaptions);
  *v14 = a2;
  v14[1] = a3;
  return v4;
}

uint64_t ScreeningCaptions.gatherAndSortCaptions(captionInfo:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  BOOL v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  BOOL v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  char *v48;
  char *v49;
  int *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t result;
  _QWORD v71[2];
  uint64_t v72;
  char *v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TranscriptionViewModel.Caption?);
  MEMORY[0x1E0C80A78](v4);
  v73 = (char *)v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = type metadata accessor for Date();
  v6 = *(_QWORD *)(v86 - 8);
  v7 = MEMORY[0x1E0C80A78](v86);
  v85 = (char *)v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v71 - v9;
  v82 = type metadata accessor for Participant.Caption(0);
  v11 = *(_QWORD *)(v82 - 8);
  MEMORY[0x1E0C80A78](v82);
  v13 = (_QWORD *)((char *)v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v88 = type metadata accessor for TranscriptionViewModel.Caption(0);
  v80 = *(_QWORD *)(v88 - 8);
  v14 = MEMORY[0x1E0C80A78](v88);
  v79 = (uint64_t)v71 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  v17 = MEMORY[0x1E0C80A78](v16);
  v72 = (uint64_t)v71 - v18;
  v19 = MEMORY[0x1E0C80A78](v17);
  v87 = (uint64_t)v71 - v20;
  MEMORY[0x1E0C80A78](v19);
  v23 = (char *)v71 - v22;
  v24 = *(_QWORD *)(a3 + 16);
  v25 = MEMORY[0x1E0DEE9D8];
  v81 = v21;
  if (v24)
  {
    v89 = MEMORY[0x1E0DEE9D8];
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v24, 0);
    v26 = 0;
    v78 = a3 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    v27 = *(_QWORD *)(v11 + 72);
    v76 = v6;
    v77 = v27;
    v74 = v13;
    v75 = v24;
    while (1)
    {
      outlined init with copy of ConversationControlsAction(v78 + v77 * v26, (uint64_t)v13, type metadata accessor for Participant.Caption);
      v28 = *v13;
      v29 = (int *)v82;
      v30 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
      v31 = v86;
      v30(v10, (char *)v13 + *(int *)(v82 + 20), v86);
      v30(v85, (char *)v13 + v29[6], v31);
      v32 = (_QWORD *)((char *)v13 + v29[7]);
      v34 = *v32;
      v33 = v32[1];
      LODWORD(v29) = *((unsigned __int8 *)v13 + v29[8]);
      swift_bridgeObjectRetain();
      LODWORD(v84) = (_DWORD)v29;
      v83 = v34;
      if ((_DWORD)v29 == 1)
      {
        if (String.count.getter() < 1)
        {
          v41 = v10;
          v42 = v6;
          v43 = v28;
          v44 = 0;
        }
        else
        {
          v35 = *(_QWORD *)((char *)v13 + *(int *)(v82 + 36));
          v36 = *(_QWORD *)(v35 + 16);
          if (v36)
          {
            v37 = 0;
            v38 = (uint64_t *)(v35 + 40);
            while (1)
            {
              v39 = *v38;
              v38 += 2;
              v40 = __OFADD__(v37, v39);
              v37 += v39;
              if (v40)
                break;
              if (!--v36)
                goto LABEL_13;
            }
            __break(1u);
LABEL_44:
            __break(1u);
            result = swift_release();
            __break(1u);
            return result;
          }
          v37 = 0;
LABEL_13:
          v41 = v10;
          v42 = v6;
          v43 = v28;
          v44 = (float)((float)v37 / (float)String.count.getter()) > 0.75;
        }
        v45 = (uint64_t)v13;
        v46 = *(_QWORD *)((char *)v13 + *(int *)(v82 + 36));
        swift_bridgeObjectRetain();
      }
      else
      {
        v41 = v10;
        v42 = v6;
        v43 = v28;
        v44 = 0;
        v45 = (uint64_t)v13;
        v46 = MEMORY[0x1E0DEE9D8];
      }
      *(_QWORD *)v23 = v43;
      v47 = *(void (**)(char *, char *, uint64_t))(v42 + 32);
      v48 = v41;
      v49 = v41;
      v50 = (int *)v88;
      v51 = v86;
      v47(&v23[*(int *)(v88 + 20)], v49, v86);
      v47(&v23[v50[6]], v85, v51);
      v52 = &v23[v50[7]];
      *(_QWORD *)v52 = v83;
      *((_QWORD *)v52 + 1) = v33;
      v23[v50[8]] = v44;
      *(_QWORD *)&v23[v50[9]] = v46;
      v23[v50[10]] = v84;
      outlined destroy of AccountUpdateNotice(v45, type metadata accessor for Participant.Caption);
      v25 = v89;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(v25 + 16) + 1, 1);
        v25 = v89;
      }
      v53 = v81;
      v55 = *(_QWORD *)(v25 + 16);
      v54 = *(_QWORD *)(v25 + 24);
      v6 = v76;
      v10 = v48;
      if (v55 >= v54 >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v54 > 1, v55 + 1, 1);
        v25 = v89;
      }
      ++v26;
      *(_QWORD *)(v25 + 16) = v55 + 1;
      outlined init with take of TranscriptionViewModel.Caption((uint64_t)v23, v25+ ((*(unsigned __int8 *)(v80 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80))+ *(_QWORD *)(v80 + 72) * v55);
      v13 = v74;
      if (v26 == v75)
        goto LABEL_22;
    }
  }
  v53 = v21;
LABEL_22:
  v89 = v25;
  swift_bridgeObjectRetain();
  specialized MutableCollection<>.sort(by:)(&v89);
  v56 = (uint64_t)v73;
  swift_bridgeObjectRelease();
  v84 = v89;
  v57 = *(_QWORD *)(v89 + 16);
  if (v57)
  {
    v58 = *(_QWORD *)(v71[1] + OBJC_IVAR____TtC15ConversationKit17ScreeningCaptions_badCaptionCountThreshold);
    v85 = (char *)((*(unsigned __int8 *)(v80 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80));
    v86 = v58;
    v59 = (uint64_t)&v85[v84];
    v60 = *(_QWORD *)(v80 + 72);
    swift_retain();
    v61 = 0;
    v62 = MEMORY[0x1E0DEE9D8];
    v63 = v87;
    v64 = v88;
    do
    {
      outlined init with copy of ConversationControlsAction(v59, v63, type metadata accessor for TranscriptionViewModel.Caption);
      if (*(_BYTE *)(v63 + *(int *)(v88 + 32)) == 1)
      {
        v40 = __OFADD__(v61++, 1);
        if (v40)
          goto LABEL_44;
      }
      else
      {
        v61 = 0;
      }
      outlined init with copy of ConversationControlsAction(v87, v53, type metadata accessor for TranscriptionViewModel.Caption);
      v65 = v86;
      *(_BYTE *)(v53 + *(int *)(v88 + 32)) = v61 >= v86;
      if (v65 >= v61)
      {
        outlined init with take of TranscriptionViewModel.Caption(v53, v56);
        v66 = 0;
      }
      else
      {
        outlined destroy of AccountUpdateNotice(v53, type metadata accessor for TranscriptionViewModel.Caption);
        v66 = 1;
      }
      __swift_storeEnumTagSinglePayload(v56, v66, 1, v64);
      outlined destroy of AccountUpdateNotice(v87, type metadata accessor for TranscriptionViewModel.Caption);
      if (__swift_getEnumTagSinglePayload(v56, 1, v64) == 1)
      {
        outlined destroy of TranscriptionViewModel.Caption?(v56);
      }
      else
      {
        v67 = v56;
        v68 = v72;
        outlined init with take of TranscriptionViewModel.Caption(v67, v72);
        outlined init with take of TranscriptionViewModel.Caption(v68, v79);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v62 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v69 = *(_QWORD *)(v62 + 16);
        if (v69 >= *(_QWORD *)(v62 + 24) >> 1)
          v62 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        *(_QWORD *)(v62 + 16) = v69 + 1;
        outlined init with take of TranscriptionViewModel.Caption(v79, (uint64_t)&v85[v62 + v69 * v60]);
        v56 = (uint64_t)v73;
        v53 = v81;
      }
      v59 += v60;
      --v57;
    }
    while (v57);
    swift_release_n();
  }
  else
  {
    swift_release();
    return MEMORY[0x1E0DEE9D8];
  }
  return v62;
}

void ScreeningCaptions.deinit()
{
  uint64_t v0;
  uint64_t v1;

  v1 = type metadata accessor for Logger();
  OUTLINED_FUNCTION_17_1(v1);
  swift_release();
  outlined consume of Participant.CaptionInfo?(*(_QWORD *)(v0
                                                         + OBJC_IVAR____TtC15ConversationKit17ScreeningCaptions_captionHistory));
  OUTLINED_FUNCTION_0();
}

uint64_t ScreeningCaptions.__deallocating_deinit()
{
  ScreeningCaptions.deinit();
  return swift_deallocClassInstance();
}

uint64_t ScreeningCaptions.participantCaptionsProvider(_:didUpdateCaptions:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  NSObject *v14;
  int v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint8_t *v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(void);
  uint64_t v40;
  NSObject *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51[3];

  v6 = v5;
  v10 = type metadata accessor for Participant.Caption(0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_unknownObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v14 = Logger.logObject.getter();
  v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, (os_log_type_t)v15))
  {
    v46 = v15;
    v48 = a3;
    v16 = (uint8_t *)OUTLINED_FUNCTION_105();
    v45 = OUTLINED_FUNCTION_105();
    v51[0] = v45;
    v47 = v16;
    *(_DWORD *)v16 = 136315138;
    v17 = *(_QWORD *)(a5 + 16);
    v18 = MEMORY[0x1E0DEE9D8];
    if (v17)
    {
      v41 = v14;
      v42 = a4;
      v44 = v6;
      v50 = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRetain();
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      v19 = *(unsigned __int8 *)(v11 + 80);
      v43 = a5;
      v20 = a5 + ((v19 + 32) & ~v19);
      v49 = *(_QWORD *)(v11 + 72);
      v18 = v50;
      do
      {
        outlined init with copy of ConversationControlsAction(v20, (uint64_t)v13, type metadata accessor for Participant.Caption);
        Participant.Caption.debugDescription.getter();
        v22 = v21;
        v24 = v23;
        outlined destroy of AccountUpdateNotice((uint64_t)v13, type metadata accessor for Participant.Caption);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          v18 = v50;
        }
        v25 = *(_QWORD *)(v18 + 16);
        if (v25 >= *(_QWORD *)(v18 + 24) >> 1)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          v18 = v50;
        }
        *(_QWORD *)(v18 + 16) = v25 + 1;
        v26 = v18 + 16 * v25;
        *(_QWORD *)(v26 + 32) = v22;
        *(_QWORD *)(v26 + 40) = v24;
        v20 += v49;
        --v17;
      }
      while (v17);
      swift_bridgeObjectRelease();
      v14 = v41;
    }
    v27 = v47;
    v50 = v18;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [String]);
    lazy protocol witness table accessor for type [String] and conformance [A]();
    v28 = BidirectionalCollection<>.joined(separator:)();
    v30 = v29;
    swift_bridgeObjectRelease();
    v50 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v28, v30, v51);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_4_43();
    OUTLINED_FUNCTION_26_1();
    OUTLINED_FUNCTION_53();
    _os_log_impl(&dword_1BD004000, v14, (os_log_type_t)v46, "Captions updated: %s", v27, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_4_43();
  OUTLINED_FUNCTION_26_1();

  v31 = (uint64_t *)(v6 + OBJC_IVAR____TtC15ConversationKit17ScreeningCaptions_captionHistory);
  OUTLINED_FUNCTION_2_0();
  outlined copy of Participant.CaptionInfo?(*v31);
  Participant.CaptionInfo.with(history:)();
  v33 = v32;
  v35 = v34;
  v37 = v36;
  OUTLINED_FUNCTION_3_46();
  *v31 = v33;
  v31[1] = v35;
  v31[2] = v37;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_3_46();
  v38 = *(void (**)(void))(v6 + OBJC_IVAR____TtC15ConversationKit17ScreeningCaptions_onUpdateCaptions);
  ScreeningCaptions.gatherAndSortCaptions(captionInfo:)(v33, v35, v37);
  v38();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return OUTLINED_FUNCTION_53();
}

void ScreeningCaptions.participantCaptionsProvider(_:didEnableCaptions:)()
{
  os_log_type_t v0;
  uint8_t *v1;
  NSObject *oslog;

  oslog = Logger.logObject.getter();
  v0 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(oslog, v0))
  {
    v1 = (uint8_t *)OUTLINED_FUNCTION_105();
    *(_DWORD *)v1 = 67240192;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl(&dword_1BD004000, oslog, v0, "Captions enabled: %{BOOL,public}d", v1, 8u);
    OUTLINED_FUNCTION_60();
  }

}

uint64_t ScreeningCaptions.participantCaptionsProvider(_:didDetectGibberish:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  _BYTE *v5;
  uint64_t result;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  void (*v12)(void);

  v5 = (_BYTE *)(v3 + OBJC_IVAR____TtC15ConversationKit17ScreeningCaptions_isGibberish);
  result = OUTLINED_FUNCTION_2_0();
  if ((a3 & 1) != 0)
  {
    if ((*v5 & 1) == 0)
    {
      *v5 = 1;
      return (*(uint64_t (**)(_QWORD))(v3
                                               + OBJC_IVAR____TtC15ConversationKit17ScreeningCaptions_onUpdateCaptions))(0);
    }
  }
  else if (*v5)
  {
    *v5 = 0;
    v7 = (uint64_t *)(v3 + OBJC_IVAR____TtC15ConversationKit17ScreeningCaptions_captionHistory);
    OUTLINED_FUNCTION_2_0();
    v8 = *v7;
    if (*v7)
    {
      v11 = v7 + 1;
      v9 = v7[1];
      v10 = v11[1];
      v12 = *(void (**)(void))(v3 + OBJC_IVAR____TtC15ConversationKit17ScreeningCaptions_onUpdateCaptions);
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      ScreeningCaptions.gatherAndSortCaptions(captionInfo:)(v8, v9, v10);
      v12();
      OUTLINED_FUNCTION_53();
      swift_unknownObjectRelease();
      return swift_bridgeObjectRelease();
    }
    else
    {
      return (*(uint64_t (**)(_QWORD))(v3
                                               + OBJC_IVAR____TtC15ConversationKit17ScreeningCaptions_onUpdateCaptions))(MEMORY[0x1E0DEE9D8]);
    }
  }
  return result;
}

uint64_t ObjC metadata update function for ScreeningCaptions()
{
  return type metadata accessor for ScreeningCaptions();
}

uint64_t type metadata accessor for ScreeningCaptions()
{
  uint64_t result;

  result = type metadata singleton initialization cache for ScreeningCaptions;
  if (!type metadata singleton initialization cache for ScreeningCaptions)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata completion function for ScreeningCaptions()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Logger();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for ScreeningCaptions()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ScreeningCaptions.__allocating_init(logger:onUpdateCaptions:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

_QWORD *initializeBufferWithCopyOfBuffer for ScreeningCaptions.CaptionData(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for ScreeningCaptions.CaptionData()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for ScreeningCaptions.CaptionData(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *__swift_memcpy8_8(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

_QWORD *assignWithTake for ScreeningCaptions.CaptionData(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ScreeningCaptions.CaptionData(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ScreeningCaptions.CaptionData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

_QWORD *destructiveInjectEnumTag for ScreeningCaptions.CaptionData(_QWORD *result, int a2)
{
  unsigned int v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2)
      return result;
    v2 = a2 - 1;
  }
  *result = v2;
  return result;
}

ValueMetadata *type metadata accessor for ScreeningCaptions.CaptionData()
{
  return &type metadata for ScreeningCaptions.CaptionData;
}

uint64_t outlined init with take of TranscriptionViewModel.Caption(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TranscriptionViewModel.Caption(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of TranscriptionViewModel.Caption?(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TranscriptionViewModel.Caption?);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void specialized UnsafeMutableBufferPointer._stableSortImpl(by:)(Swift::Int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  Swift::Int v13;
  Swift::Int v14;
  unint64_t v15;
  Swift::Int v16;
  uint64_t v17;
  Swift::Int v18;
  Swift::Int v19;
  Swift::Int v20;
  Swift::Int v21;
  Swift::Int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  Swift::Int v27;
  uint64_t v28;
  Swift::Int v29;
  uint64_t v30;
  Swift::Int v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  Swift::Int v35;
  uint64_t v36;
  Swift::Int v37;
  uint64_t v38;
  Swift::Int v39;
  Swift::Int v40;
  Swift::Int v41;
  uint64_t v42;
  uint64_t *v43;
  Swift::Int v44;
  unint64_t v45;
  Swift::Int v47;
  Swift::Int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  Swift::Int v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  Swift::Int *v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  BOOL v79;
  unint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  BOOL v89;
  uint64_t v90;
  char v91;
  uint64_t *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  BOOL v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t *v109;
  uint64_t v110;
  _QWORD *v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  Swift::Int v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  Swift::Int v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  Swift::Int v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  uint64_t v134;
  Swift::Int v135;
  Swift::Int v136;
  uint64_t v137;
  uint64_t v138;
  Swift::Int v139;
  Swift::Int *v140;
  uint64_t v141;
  uint64_t v142;

  v2 = v1;
  v141 = type metadata accessor for TranscriptionViewModel.Caption(0);
  v4 = *(_QWORD *)(v141 - 8);
  v5 = MEMORY[0x1E0C80A78](v141);
  v131 = (uint64_t)&v124 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v142 = (uint64_t)&v124 - v8;
  v9 = MEMORY[0x1E0C80A78](v7);
  v138 = (uint64_t)&v124 - v10;
  MEMORY[0x1E0C80A78](v9);
  v137 = (uint64_t)&v124 - v11;
  v12 = a1[1];
  v13 = _minimumMergeRunLength(_:)(v12);
  if (v13 >= v12)
  {
    if ((v12 & 0x8000000000000000) == 0)
    {
      if (v12)
        specialized MutableCollection<>._insertionSort(within:sortedEnd:by:)(0, v12, 1, a1);
      return;
    }
    goto LABEL_142;
  }
  v14 = v13;
  v140 = a1;
  v127 = specialized static Array._allocateUninitialized(_:)(v12 / 2);
  v128 = v12;
  v133 = v15;
  v134 = v4;
  if (v12 <= 0)
  {
LABEL_106:
    v17 = MEMORY[0x1E0DEE9D8];
    v64 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_107:
    v116 = v17;
    if (v64 < 2)
    {
LABEL_118:
      swift_bridgeObjectRelease();
      if (v128 >= -1)
        goto LABEL_119;
      goto LABEL_146;
    }
    v117 = *v140;
    while (1)
    {
      v118 = v64 - 2;
      if (v64 < 2)
        break;
      if (!v117)
        goto LABEL_150;
      v119 = *(_QWORD *)(v116 + 32 + 16 * v118);
      v120 = *(_QWORD *)(v116 + 32 + 16 * (v64 - 1) + 8);
      specialized _merge<A>(low:mid:high:buffer:by:)(v117 + *(_QWORD *)(v134 + 72) * v119, v117 + *(_QWORD *)(v134 + 72) * *(_QWORD *)(v116 + 32 + 16 * (v64 - 1)), v117 + *(_QWORD *)(v134 + 72) * v120, v133);
      if (v2)
        goto LABEL_104;
      if (v120 < v119)
        goto LABEL_137;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized _ArrayBuffer._consumeAndCreateNew()(v116);
        v116 = v123;
      }
      if (v118 >= *(_QWORD *)(v116 + 16))
        goto LABEL_138;
      v121 = (_QWORD *)(v116 + 32 + 16 * v118);
      *v121 = v119;
      v121[1] = v120;
      v122 = *(_QWORD *)(v116 + 16);
      if (v64 > v122)
        goto LABEL_139;
      memmove((void *)(v116 + 32 + 16 * (v64 - 1)), (const void *)(v116 + 32 + 16 * v64), 16 * (v122 - v64));
      *(_QWORD *)(v116 + 16) = v122 - 1;
      v64 = v122 - 1;
      if (v122 <= 2)
        goto LABEL_118;
    }
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
    return;
  }
  v126 = v14;
  v16 = 0;
  v17 = MEMORY[0x1E0DEE9D8];
  v18 = v12;
  while (1)
  {
    v19 = v16;
    v20 = v16 + 1;
    if (v16 + 1 >= v18)
    {
      v27 = v16 + 1;
    }
    else
    {
      v21 = *v140;
      v22 = *(_QWORD *)(v4 + 72);
      v23 = *v140 + v22 * v20;
      v135 = v18;
      v24 = v137;
      outlined init with copy of ConversationControlsAction(v23, v137, type metadata accessor for TranscriptionViewModel.Caption);
      v25 = v138;
      outlined init with copy of ConversationControlsAction(v21 + v22 * v19, v138, type metadata accessor for TranscriptionViewModel.Caption);
      LODWORD(v136) = static Date.< infix(_:_:)();
      outlined destroy of AccountUpdateNotice(v25, type metadata accessor for TranscriptionViewModel.Caption);
      v26 = v24;
      v18 = v135;
      outlined destroy of AccountUpdateNotice(v26, type metadata accessor for TranscriptionViewModel.Caption);
      v27 = v19 + 2;
      v130 = v21;
      v139 = v22;
      if (v19 + 2 >= v18)
      {
        v4 = v134;
      }
      else
      {
        v132 = v19;
        v129 = v2;
        v28 = v22 * v20;
        v29 = v21;
        v30 = v22 * v27;
        while (1)
        {
          v31 = v27;
          v32 = v137;
          outlined init with copy of ConversationControlsAction(v29 + v30, v137, type metadata accessor for TranscriptionViewModel.Caption);
          v33 = v138;
          outlined init with copy of ConversationControlsAction(v29 + v28, v138, type metadata accessor for TranscriptionViewModel.Caption);
          v34 = static Date.< infix(_:_:)();
          outlined destroy of AccountUpdateNotice(v33, type metadata accessor for TranscriptionViewModel.Caption);
          outlined destroy of AccountUpdateNotice(v32, type metadata accessor for TranscriptionViewModel.Caption);
          if (((v136 ^ v34) & 1) != 0)
            break;
          v27 = v31 + 1;
          v29 += v139;
          if (v31 + 1 >= v135)
          {
            v4 = v134;
            v18 = v135;
            v27 = v135;
            goto LABEL_13;
          }
        }
        v4 = v134;
        v18 = v135;
        v27 = v31;
LABEL_13:
        v2 = v129;
        v19 = v132;
      }
      if ((v136 & 1) != 0)
      {
        v35 = v139;
        if (v27 < v19)
          goto LABEL_143;
        if (v19 < v27)
        {
          v129 = v2;
          v36 = 0;
          v37 = v19;
          v38 = v139 * (v27 - 1);
          v39 = v27 * v139;
          v40 = v27;
          v41 = v37;
          v132 = v37;
          v42 = v37 * v139;
          v43 = v140;
          do
          {
            v27 = v40;
            if (v41 != v40 + v36 - 1)
            {
              v44 = v130;
              if (!v130)
                goto LABEL_149;
              v45 = v130 + v42;
              v136 = v130 + v38;
              outlined init with take of TranscriptionViewModel.Caption(v130 + v42, v131);
              if (v42 < v38 || v45 >= v44 + v39)
              {
                swift_arrayInitWithTakeFrontToBack();
                v35 = v139;
              }
              else
              {
                v35 = v139;
                if (v42 != v38)
                  swift_arrayInitWithTakeBackToFront();
              }
              outlined init with take of TranscriptionViewModel.Caption(v131, v136);
              v43 = v140;
            }
            ++v41;
            --v36;
            v40 = v27;
            v38 -= v35;
            v39 -= v35;
            v42 += v35;
          }
          while (v41 < v27 + v36);
          v2 = v129;
          v4 = v134;
          v18 = v135;
          v19 = v132;
          goto LABEL_32;
        }
      }
    }
    v43 = v140;
LABEL_32:
    if (v27 < v18)
    {
      if (__OFSUB__(v27, v19))
        goto LABEL_141;
      if (v27 - v19 < v126)
      {
        if (__OFADD__(v19, v126))
          goto LABEL_144;
        if (v19 + v126 >= v18)
          v47 = v18;
        else
          v47 = v19 + v126;
        if (v47 < v19)
          goto LABEL_145;
        if (v27 != v47)
        {
          v132 = v19;
          v125 = v17;
          v129 = v2;
          v130 = v47;
          v48 = *(_QWORD *)(v4 + 72);
          v49 = v48 * (v27 - 1);
          v135 = v48;
          v50 = v27 * v48;
          do
          {
            v51 = 0;
            v52 = v132;
            v139 = v27;
            v136 = v50;
            while (1)
            {
              v53 = *v43;
              v54 = v50 + v51 + *v43;
              v55 = v137;
              outlined init with copy of ConversationControlsAction(v54, v137, type metadata accessor for TranscriptionViewModel.Caption);
              v56 = v49;
              v57 = v49 + v51 + v53;
              v58 = v138;
              outlined init with copy of ConversationControlsAction(v57, v138, type metadata accessor for TranscriptionViewModel.Caption);
              LOBYTE(v53) = static Date.< infix(_:_:)();
              outlined destroy of AccountUpdateNotice(v58, type metadata accessor for TranscriptionViewModel.Caption);
              outlined destroy of AccountUpdateNotice(v55, type metadata accessor for TranscriptionViewModel.Caption);
              if ((v53 & 1) == 0)
                break;
              v59 = *v43;
              if (!*v43)
                goto LABEL_147;
              v50 = v136;
              v49 = v56;
              v60 = v59 + v56 + v51;
              outlined init with take of TranscriptionViewModel.Caption(v59 + v136 + v51, v142);
              v61 = v139;
              swift_arrayInitWithTakeFrontToBack();
              outlined init with take of TranscriptionViewModel.Caption(v142, v60);
              v51 -= v135;
              ++v52;
              v43 = v140;
              if (v61 == v52)
                goto LABEL_48;
            }
            v61 = v139;
            v49 = v56;
            v50 = v136;
LABEL_48:
            v27 = v61 + 1;
            v49 += v135;
            v50 += v135;
          }
          while (v27 != v130);
          v27 = v130;
          v2 = v129;
          v17 = v125;
          v19 = v132;
        }
      }
    }
    if (v27 < v19)
      goto LABEL_140;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(v17 + 16) + 1, 1, (char *)v17);
      v17 = v114;
    }
    v63 = *(_QWORD *)(v17 + 16);
    v62 = *(_QWORD *)(v17 + 24);
    v64 = v63 + 1;
    if (v63 >= v62 >> 1)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v62 > 1, v63 + 1, 1, (char *)v17);
      v17 = v115;
    }
    v65 = v2;
    *(_QWORD *)(v17 + 16) = v64;
    v66 = v17 + 32;
    v67 = (Swift::Int *)(v17 + 32 + 16 * v63);
    *v67 = v19;
    v67[1] = v27;
    v139 = v27;
    if (v63)
      break;
    v64 = 1;
LABEL_98:
    v18 = v140[1];
    v16 = v139;
    v2 = v65;
    v4 = v134;
    if (v139 >= v18)
      goto LABEL_107;
  }
  while (1)
  {
    v68 = v64 - 1;
    if (v64 >= 4)
    {
      v73 = v66 + 16 * v64;
      v74 = *(_QWORD *)(v73 - 64);
      v75 = *(_QWORD *)(v73 - 56);
      v79 = __OFSUB__(v75, v74);
      v76 = v75 - v74;
      if (v79)
        goto LABEL_125;
      v78 = *(_QWORD *)(v73 - 48);
      v77 = *(_QWORD *)(v73 - 40);
      v79 = __OFSUB__(v77, v78);
      v71 = v77 - v78;
      v72 = v79;
      if (v79)
        goto LABEL_126;
      v80 = v64 - 2;
      v81 = (uint64_t *)(v66 + 16 * (v64 - 2));
      v83 = *v81;
      v82 = v81[1];
      v79 = __OFSUB__(v82, v83);
      v84 = v82 - v83;
      if (v79)
        goto LABEL_127;
      v79 = __OFADD__(v71, v84);
      v85 = v71 + v84;
      if (v79)
        goto LABEL_129;
      if (v85 >= v76)
      {
        v103 = (uint64_t *)(v66 + 16 * v68);
        v105 = *v103;
        v104 = v103[1];
        v79 = __OFSUB__(v104, v105);
        v106 = v104 - v105;
        if (v79)
          goto LABEL_135;
        v96 = v71 < v106;
        goto LABEL_87;
      }
    }
    else
    {
      if (v64 != 3)
      {
        v97 = *(_QWORD *)(v17 + 32);
        v98 = *(_QWORD *)(v17 + 40);
        v79 = __OFSUB__(v98, v97);
        v90 = v98 - v97;
        v91 = v79;
        goto LABEL_81;
      }
      v70 = *(_QWORD *)(v17 + 32);
      v69 = *(_QWORD *)(v17 + 40);
      v79 = __OFSUB__(v69, v70);
      v71 = v69 - v70;
      v72 = v79;
    }
    if ((v72 & 1) != 0)
      goto LABEL_128;
    v80 = v64 - 2;
    v86 = (uint64_t *)(v66 + 16 * (v64 - 2));
    v88 = *v86;
    v87 = v86[1];
    v89 = __OFSUB__(v87, v88);
    v90 = v87 - v88;
    v91 = v89;
    if (v89)
      goto LABEL_130;
    v92 = (uint64_t *)(v66 + 16 * v68);
    v94 = *v92;
    v93 = v92[1];
    v79 = __OFSUB__(v93, v94);
    v95 = v93 - v94;
    if (v79)
      goto LABEL_132;
    if (__OFADD__(v90, v95))
      goto LABEL_134;
    if (v90 + v95 >= v71)
    {
      v96 = v71 < v95;
LABEL_87:
      if (v96)
        v68 = v80;
      goto LABEL_89;
    }
LABEL_81:
    if ((v91 & 1) != 0)
      goto LABEL_131;
    v99 = (uint64_t *)(v66 + 16 * v68);
    v101 = *v99;
    v100 = v99[1];
    v79 = __OFSUB__(v100, v101);
    v102 = v100 - v101;
    if (v79)
      goto LABEL_133;
    if (v102 < v90)
      goto LABEL_98;
LABEL_89:
    v107 = v17;
    v108 = v68 - 1;
    if (v68 - 1 >= v64)
    {
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
      goto LABEL_136;
    }
    if (!*v140)
      goto LABEL_148;
    v109 = (uint64_t *)(v66 + 16 * v108);
    v110 = *v109;
    v111 = (_QWORD *)(v66 + 16 * v68);
    v112 = v111[1];
    specialized _merge<A>(low:mid:high:buffer:by:)(*v140 + *(_QWORD *)(v134 + 72) * *v109, *v140 + *(_QWORD *)(v134 + 72) * *v111, *v140 + *(_QWORD *)(v134 + 72) * v112, v133);
    if (v65)
      break;
    if (v112 < v110)
      goto LABEL_122;
    if (v68 > *(_QWORD *)(v107 + 16))
      goto LABEL_123;
    *v109 = v110;
    *(_QWORD *)(v66 + 16 * v108 + 8) = v112;
    v113 = *(_QWORD *)(v107 + 16);
    if (v68 >= v113)
      goto LABEL_124;
    v17 = v107;
    v64 = v113 - 1;
    memmove((void *)(v66 + 16 * v68), v111 + 2, 16 * (v113 - 1 - v68));
    *(_QWORD *)(v107 + 16) = v113 - 1;
    if (v113 <= 2)
      goto LABEL_98;
  }
  v2 = v65;
LABEL_104:
  swift_bridgeObjectRelease();
  if (v128 < -1)
  {
    __break(1u);
    goto LABEL_106;
  }
LABEL_119:
  *(_QWORD *)(v127 + 16) = 0;
  swift_bridgeObjectRelease();
}

uint64_t GridViewConstraintManager.__allocating_init(containingGuide:containingView:gridView:rosterCellLayoutGuide:changeLayoutButton:topCornerButtonsStackView:captionsState:)(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6)
{
  uint64_t v12;

  v12 = OUTLINED_FUNCTION_15();
  GridViewConstraintManager.init(containingGuide:containingView:gridView:rosterCellLayoutGuide:changeLayoutButton:topCornerButtonsStackView:captionsState:)(a1, a2, a3, a4, a5, a6);
  return v12;
}

_QWORD *GridViewConstraintManager.init(containingGuide:containingView:gridView:rosterCellLayoutGuide:changeLayoutButton:topCornerButtonsStackView:captionsState:)(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6)
{
  uint64_t v11;
  char **v12;
  id v13;
  id v14;
  id v15;
  char v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  id v34;
  id v35;
  id v36;
  void *v37;
  id v38;
  uint64_t v39;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  id v44;
  id v45;
  id v46;
  uint64_t v47;
  id v48;
  id v49;
  id v50;
  uint64_t v51;
  id v52;
  id v53;
  id v54;
  uint64_t v55;
  id v56;
  id v57;
  id v58;
  uint64_t v59;
  id v60;
  id v61;
  id v62;
  char **v63;
  uint64_t v64;
  id v65;
  id v66;
  id v67;
  char **v68;
  char **v69;
  id v70;
  id v71;
  char *v72;
  id v73;
  id v74;
  uint64_t v75;
  id v76;
  uint64_t v77;
  id v78;
  id v79;
  id v80;
  id v81;
  void *v82;
  id v83;
  uint64_t v84;
  id v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  void *v90;
  void *v91;
  _QWORD *v93;
  uint64_t v94;

  type metadata accessor for GridViewConstraintManager();
  v11 = static GridViewConstraintManager.generateCornerButtonConstraints(containingGuide:containingView:gridView:changeLayoutButton:topCornerButtonsStackView:)((uint64_t)a1, a2, (uint64_t)a3, a5, a6);
  v12 = &selRef_associatedAppBundleIdentifier;
  v90 = a6;
  v91 = a5;
  if (a6)
  {
    v13 = a6;
    v14 = OUTLINED_FUNCTION_6_7((uint64_t)v13, sel_topAnchor);
    v15 = OUTLINED_FUNCTION_9((uint64_t)v14, sel_bottomAnchor);
    OUTLINED_FUNCTION_20_31();
    OUTLINED_FUNCTION_19_30();
    if (!v16)
      swift_once();
LABEL_8:
    v19 = (id)static Defaults.shared;
    OUTLINED_FUNCTION_11_6();
    static Platform.current.getter();
    v20 = OUTLINED_FUNCTION_12_4();
    v21 = OUTLINED_FUNCTION_18_7(v20, sel_constraintEqualToAnchor_constant_);
    OUTLINED_FUNCTION_26_2();
    goto LABEL_9;
  }
  if (a5)
  {
    v13 = a5;
    v17 = OUTLINED_FUNCTION_6_7((uint64_t)v13, sel_topAnchor);
    v18 = OUTLINED_FUNCTION_9((uint64_t)v17, sel_bottomAnchor);
    OUTLINED_FUNCTION_20_31();
    OUTLINED_FUNCTION_19_30();
    if (!v16)
      swift_once();
    goto LABEL_8;
  }
  v12 = (char **)OUTLINED_FUNCTION_6_7(v11, sel_topAnchor);
  v13 = OUTLINED_FUNCTION_20_4((uint64_t)v12, sel_topAnchor);
  v19 = objc_msgSend(v12, sel_constraintEqualToAnchor_, v13);
LABEL_9:

  v93[6] = v19;
  v22 = static Platform.current.getter();
  v23 = v22;
  v24 = OUTLINED_FUNCTION_6_7(v22, sel_trailingAnchor);
  v25 = v24;
  if ((_DWORD)v23)
  {
    v12 = (char **)OUTLINED_FUNCTION_20_4((uint64_t)v24, sel_trailingAnchor);
    v26 = OUTLINED_FUNCTION_5_42(v25, sel_constraintEqualToAnchor_);
  }
  else
  {
    v27 = objc_msgSend(a4, sel_leadingAnchor);
    OUTLINED_FUNCTION_20_31();
    OUTLINED_FUNCTION_19_30();
    if (!v16)
      swift_once();
    v23 = static Defaults.shared;
    OUTLINED_FUNCTION_11_6();
    static Platform.current.getter();
    OUTLINED_FUNCTION_12_4();
    v26 = objc_msgSend(v25, sel_constraintEqualToAnchor_constant_, v12, -16.0);
  }
  v28 = v26;
  OUTLINED_FUNCTION_15_2();

  v93[7] = v23;
  v29 = objc_msgSend(a4, sel_topAnchor);
  v30 = OUTLINED_FUNCTION_6_7((uint64_t)v29, sel_bottomAnchor);
  static Layout.MediaPip.padding.getter();
  OUTLINED_FUNCTION_19_30();
  if (!v16)
    swift_once();
  v31 = static Defaults.shared;
  OUTLINED_FUNCTION_11_6();
  static Platform.current.getter();
  OUTLINED_FUNCTION_12_4();
  v32 = objc_msgSend(v29, sel_constraintEqualToAnchor_constant_, v30, 16.0);
  OUTLINED_FUNCTION_15_2();

  v93[8] = v31;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v33 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v33 + 16) = xmmword_1BD6441C0;
  v34 = OUTLINED_FUNCTION_39(v33, sel_leadingAnchor);
  v35 = OUTLINED_FUNCTION_20_4((uint64_t)v34, sel_leadingAnchor);
  v36 = OUTLINED_FUNCTION_5_42(v34, sel_constraintEqualToAnchor_);
  OUTLINED_FUNCTION_12_28();

  v37 = (void *)v93[8];
  *(_QWORD *)(v33 + 32) = 0x1ED6DC000;
  *(_QWORD *)(v33 + 40) = v37;
  OUTLINED_FUNCTION_15_35();
  v38 = v37;
  swift_bridgeObjectRetain();
  specialized Array.append<A>(contentsOf:)();
  v93[2] = v94;
  v39 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v39 + 16) = xmmword_1BD644140;
  v40 = OUTLINED_FUNCTION_39(v39, sel_topAnchor);
  v41 = OUTLINED_FUNCTION_123((uint64_t)v40, sel_topAnchor);
  v42 = OUTLINED_FUNCTION_0_21((uint64_t)v41);
  OUTLINED_FUNCTION_12_28();

  *(_QWORD *)(v39 + 32) = 0x1ED6DC000;
  v44 = OUTLINED_FUNCTION_39(v43, sel_leadingAnchor);
  v45 = OUTLINED_FUNCTION_123((uint64_t)v44, sel_leadingAnchor);
  v46 = OUTLINED_FUNCTION_0_21((uint64_t)v45);
  OUTLINED_FUNCTION_12_28();

  *(_QWORD *)(v39 + 40) = 0x1ED6DC000;
  v48 = OUTLINED_FUNCTION_39(v47, sel_trailingAnchor);
  v49 = OUTLINED_FUNCTION_123((uint64_t)v48, sel_trailingAnchor);
  v50 = OUTLINED_FUNCTION_0_21((uint64_t)v49);
  OUTLINED_FUNCTION_12_28();

  *(_QWORD *)(v39 + 48) = 0x1ED6DC000;
  v52 = OUTLINED_FUNCTION_39(v51, sel_bottomAnchor);
  v53 = OUTLINED_FUNCTION_123((uint64_t)v52, sel_bottomAnchor);
  v54 = OUTLINED_FUNCTION_0_21((uint64_t)v53);
  OUTLINED_FUNCTION_12_28();

  *(_QWORD *)(v39 + 56) = 0x1ED6DC000;
  OUTLINED_FUNCTION_15_35();
  OUTLINED_FUNCTION_8_8();
  specialized Array.append<A>(contentsOf:)();
  v93[4] = v94;
  if (static Platform.current.getter() == 3)
  {
    v55 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v55 + 16) = xmmword_1BD644B60;
    v56 = OUTLINED_FUNCTION_39(v55, sel_topAnchor);
    v57 = OUTLINED_FUNCTION_123((uint64_t)v56, sel_topAnchor);
    v58 = OUTLINED_FUNCTION_0_21((uint64_t)v57);
    OUTLINED_FUNCTION_12_28();

    *(_QWORD *)(v55 + 32) = 0x1ED6DC000;
    v60 = OUTLINED_FUNCTION_39(v59, sel_leadingAnchor);
    v61 = OUTLINED_FUNCTION_123((uint64_t)v60, sel_leadingAnchor);
    v62 = OUTLINED_FUNCTION_0_21((uint64_t)v61);
    OUTLINED_FUNCTION_12_28();

    *(_QWORD *)(v55 + 40) = 0x1ED6DC000;
    v63 = &selRef_associatedAppBundleIdentifier;
    v65 = OUTLINED_FUNCTION_39(v64, sel_bottomAnchor);
    v66 = OUTLINED_FUNCTION_123((uint64_t)v65, sel_bottomAnchor);
    v67 = OUTLINED_FUNCTION_0_21((uint64_t)v66);
    OUTLINED_FUNCTION_12_28();

    *(_QWORD *)(v55 + 48) = 0x1ED6DC000;
    OUTLINED_FUNCTION_15_35();
    specialized Array.append<A>(contentsOf:)();
    v68 = (char **)v94;
    v69 = &selRef_associatedAppBundleIdentifier;
  }
  else
  {
    v63 = (char **)OUTLINED_FUNCTION_15();
    *((_OWORD *)v63 + 1) = xmmword_1BD6441C0;
    v70 = OUTLINED_FUNCTION_39((uint64_t)v63, sel_topAnchor);
    v71 = objc_msgSend(a1, sel_topAnchor);
    v72 = (char *)OUTLINED_FUNCTION_59_6(v70, sel_constraintEqualToAnchor_);

    v63[4] = v72;
    v73 = objc_msgSend(a4, sel_topAnchor);
    v74 = OUTLINED_FUNCTION_39((uint64_t)v73, sel_bottomAnchor);
    static Layout.MediaPip.padding.getter();
    v75 = static Defaults.shared;
    OUTLINED_FUNCTION_11_6();
    static Platform.current.getter();
    OUTLINED_FUNCTION_12_4();
    v69 = &selRef_associatedAppBundleIdentifier;
    v76 = objc_msgSend(v73, sel_constraintEqualToAnchor_constant_, v74, 16.0);
    OUTLINED_FUNCTION_26_2();

    v63[5] = (char *)v75;
    v94 = (uint64_t)v63;
    specialized Array._endMutation()();
    specialized Array.append<A>(contentsOf:)();
    v68 = v63;
  }
  v93[5] = v68;
  if (static Platform.current.getter() == 3)
  {
    v77 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v77 + 16) = xmmword_1BD6441C0;
    v78 = OUTLINED_FUNCTION_6_7(v77, sel_leadingAnchor);
    v79 = OUTLINED_FUNCTION_20_4((uint64_t)v78, sel_leadingAnchor);
    v80 = OUTLINED_FUNCTION_59_6(v78, sel_constraintEqualToAnchor_);
  }
  else
  {
    if (static Platform.current.getter() != 2)
    {
      v84 = OUTLINED_FUNCTION_15();
      *(_OWORD *)(v84 + 16) = xmmword_1BD6443F0;
      v85 = OUTLINED_FUNCTION_6_7((uint64_t)objc_msgSend(a4, sel_topAnchor), sel_bottomAnchor);
      OUTLINED_FUNCTION_20_31();
      v86 = static Defaults.shared;
      OUTLINED_FUNCTION_11_6();
      static Platform.current.getter();
      v87 = OUTLINED_FUNCTION_12_4();
      v88 = OUTLINED_FUNCTION_18_7(v87, v69[250]);
      OUTLINED_FUNCTION_26_2();

      *(_QWORD *)(v84 + 32) = v86;
      v94 = v84;
      specialized Array._endMutation()();
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_8_8();
      specialized Array.append<A>(contentsOf:)();
      swift_bridgeObjectRelease();

      goto LABEL_25;
    }
    v77 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v77 + 16) = xmmword_1BD6441C0;
    v78 = OUTLINED_FUNCTION_6_7(v77, sel_trailingAnchor);
    v79 = OUTLINED_FUNCTION_20_4((uint64_t)v78, sel_trailingAnchor);
    v80 = OUTLINED_FUNCTION_59_6(v78, sel_constraintEqualToAnchor_);
  }
  v81 = v80;

  v82 = (void *)v93[8];
  *(_QWORD *)(v77 + 32) = v81;
  *(_QWORD *)(v77 + 40) = v82;
  OUTLINED_FUNCTION_15_35();
  swift_bridgeObjectRetain();
  v83 = v82;
  OUTLINED_FUNCTION_8_8();
  specialized Array.append<A>(contentsOf:)();
  swift_bridgeObjectRelease();

LABEL_25:
  swift_bridgeObjectRelease();
  v93[3] = v94;
  return v93;
}

uint64_t type metadata accessor for GridViewConstraintManager()
{
  return objc_opt_self();
}

uint64_t static GridViewConstraintManager.generateCornerButtonConstraints(containingGuide:containingView:gridView:changeLayoutButton:topCornerButtonsStackView:)(uint64_t a1, void *a2, uint64_t a3, void *a4, void *a5)
{
  id v6;
  id v7;
  char v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;

  if (a5)
  {
    v6 = objc_msgSend(a5, sel_topAnchor);
    v7 = objc_msgSend(a2, sel_topAnchor);
    static Layout.MediaPip.padding.getter();
    OUTLINED_FUNCTION_19_30();
    if (!v8)
      swift_once();
    v9 = (void *)static Defaults.shared;
    OUTLINED_FUNCTION_11_6();
    static Platform.current.getter();
    OUTLINED_FUNCTION_12_4();
    v10 = objc_msgSend(v6, sel_constraintEqualToAnchor_constant_, v7, 10.0);
    OUTLINED_FUNCTION_15_2();

    v11 = v9;
    OUTLINED_FUNCTION_36_0();
  }
  if (a4)
  {
    v12 = objc_msgSend(a4, sel_topAnchor);
    v13 = OUTLINED_FUNCTION_6_7((uint64_t)v12, sel_topAnchor);
    v14 = objc_msgSend(v12, sel_constraintEqualToAnchor_, v13);

    v15 = v14;
    OUTLINED_FUNCTION_36_0();
  }
  return MEMORY[0x1E0DEE9D8];
}

uint64_t GridViewConstraintManager.constraintsForLayout(_:in:deviceOrientation:)(uint64_t a1)
{
  _QWORD *v1;
  int v2;
  void *v3;
  id v4;
  uint64_t v5;
  unint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  id v13;
  id v14;

  v2 = *(unsigned __int8 *)(a1 + 19);
  if ((*(_BYTE *)(a1 + 18) & 1) != 0)
  {
    v3 = (void *)v1[6];
    if (v2 == 2)
    {
      v4 = v3;
      OUTLINED_FUNCTION_5_0();
      OUTLINED_FUNCTION_36_0();
    }
    v6 = v1[2];
    v7 = (void *)v1[7];
    if (v6 >> 62)
    {
      swift_bridgeObjectRetain_n();
      v13 = v3;
      v14 = v7;
      v8 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      v8 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      v9 = v3;
      v10 = v7;
    }
    if (!__OFADD__(v8, 2))
    {
      OUTLINED_FUNCTION_17_31(v8 + 2);
      OUTLINED_FUNCTION_26_0();
      v11 = v3;
      OUTLINED_FUNCTION_36_0();
    }
    __break(1u);
    JUMPOUT(0x1BD0E745CLL);
  }
  if (v2 == 2)
    v5 = v1[5];
  else
    v5 = v1[4];
  OUTLINED_FUNCTION_5_0();
  return v5;
}

id *GridViewConstraintManager.deinit()
{
  id *v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t GridViewConstraintManager.__deallocating_deinit()
{
  GridViewConstraintManager.deinit();
  return swift_deallocClassInstance();
}

uint64_t protocol witness for ViewConstraintManager.constraintsForLayout(_:in:deviceOrientation:) in conformance GridViewConstraintManager()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 152))();
}

uint64_t method lookup function for GridViewConstraintManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of GridViewConstraintManager.__allocating_init(containingGuide:containingView:gridView:rosterCellLayoutGuide:changeLayoutButton:topCornerButtonsStackView:captionsState:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of GridViewConstraintManager.constraintsForLayout(_:in:deviceOrientation:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

void SharedContentViewModel.init(participant:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v6[24];
  uint64_t v7;

  OUTLINED_FUNCTION_30_26();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_4_1();
  Participant.screenInfo.getter();
  _s15ConversationKit11ParticipantVWOcTm_2(v1, v2, type metadata accessor for Participant);
  if (v7 == 1)
  {
    v4 = SharedContentViewModel.init(nonScreenInfoParticipant:)(v2, v0);
    OUTLINED_FUNCTION_15_12(v4, type metadata accessor for Participant);
  }
  else
  {
    SharedContentViewModel.init(videoParticipant:)(v2, v0);
    OUTLINED_FUNCTION_15_12(v5, type metadata accessor for Participant);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v6, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
  }
}

void SharedContentViewModel.participantIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = v0;
  type metadata accessor for SharedContentViewModel(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_48_15();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_58_0();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v14 - v7;
  _s15ConversationKit11ParticipantVWOcTm_2(v3, v1, type metadata accessor for SharedContentViewModel);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (SharedContentViewModel.ParticipantDetails, CNKDeviceOrientation, SharedContentVideoView.ViewModel, ParticipantVideoOverlayView.ViewModel));
    v10 = *(_DWORD *)(v9 + 64);
    v11 = v1 + *(int *)(v9 + 80);
    OUTLINED_FUNCTION_39_21();
    outlined destroy of ParticipantVideoOverlayView.ViewModel(v11);
  }
  else
  {
    v10 = *(_DWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (SharedContentViewModel.ParticipantDetails, CNKDeviceOrientation, SharedContentVideoView.ViewModel))
                    + 64);
    OUTLINED_FUNCTION_39_21();
  }
  outlined destroy of SharedContentVideoView.ViewModel(v1 + v10);
  outlined init with take of SharedContentViewModel.ParticipantDetails(v2, (uint64_t)v8);
  v12 = OUTLINED_FUNCTION_33_0();
  v13 = OUTLINED_FUNCTION_5(v12);
  OUTLINED_FUNCTION_15_12(v13, type metadata accessor for SharedContentViewModel.ParticipantDetails);
}

void SharedContentViewModel.screenTransform.getter()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[40];
  uint64_t v11;

  OUTLINED_FUNCTION_29_22();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_5_43(v3, v4, v9);
  if (OUTLINED_FUNCTION_42() == 1)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (SharedContentViewModel.ParticipantDetails, CNKDeviceOrientation, SharedContentVideoView.ViewModel, ParticipantVideoOverlayView.ViewModel));
    v6 = v1 + *(int *)(v5 + 80);
    OUTLINED_FUNCTION_4_44(v10, (const void *)(v1 + *(int *)(v5 + 64)));
    v7 = outlined destroy of ParticipantVideoOverlayView.ViewModel(v6);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (SharedContentViewModel.ParticipantDetails, CNKDeviceOrientation, SharedContentVideoView.ViewModel));
    v7 = (uint64_t)OUTLINED_FUNCTION_4_44(v10, (const void *)(v1 + *(int *)(v8 + 64)));
  }
  OUTLINED_FUNCTION_15_12(v7, type metadata accessor for SharedContentViewModel.ParticipantDetails);
  OUTLINED_FUNCTION_6_11(v0, &v11);
  outlined destroy of SharedContentVideoView.ViewModel((uint64_t)v10);
  OUTLINED_FUNCTION_18();
}

uint64_t SharedContentViewModel.ParticipantDetails.init(participant:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  Swift::String v10;
  Swift::String_optional v11;
  Swift::String v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t *v23;
  _QWORD v24[2];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  Swift::String v29;

  v2 = v1 + *(int *)(OUTLINED_FUNCTION_30_26() + 20);
  v3 = OUTLINED_FUNCTION_33_0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(v0, v2, v3);
  Participant.screenInfo.getter();
  if (v25 == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v24, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    v4 = 0;
    v5 = 1;
  }
  else
  {
    v5 = v28;
    if (v28)
      v4 = 0;
    else
      v4 = v27;
    outlined destroy of Participant.ScreenInfo((uint64_t)v24);
  }
  v6 = String.deviceAdjustedLocalizedKey(forDeviceFamily:)(v4, v5, 0xD000000000000018, 0x80000001BD672F30);
  v8 = v7;
  v9 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v29._object = (void *)0xE000000000000000;
  v10._countAndFlagsBits = v6;
  v10._object = v8;
  v11.value._countAndFlagsBits = 0x61737265766E6F43;
  v11.value._object = (void *)0xEF74694B6E6F6974;
  v12._countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  v29._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v10, v11, (NSBundle)v9, v12, v29);
  swift_bridgeObjectRelease();

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1BD6441D0;
  Participant.contactDetails.getter();
  v14 = (void *)v24[0];
  v15 = v25;
  v16 = v26;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_30_4();

  *(_QWORD *)(v13 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v13 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v13 + 32) = v15;
  *(_QWORD *)(v13 + 40) = v16;
  v17 = String.init(format:_:)();
  v19 = v18;
  v20 = swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_15_12(v20, type metadata accessor for Participant);
  result = OUTLINED_FUNCTION_28_26();
  v23 = (uint64_t *)(v0 + v22);
  *v23 = v17;
  v23[1] = v19;
  return result;
}

uint64_t SharedContentViewModel.ParticipantDetails.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_33_0();
  return OUTLINED_FUNCTION_31_0(a1, v1, v3, *(uint64_t (**)(void))(*(_QWORD *)(v3 - 8) + 16));
}

uint64_t SharedContentViewModel.ParticipantDetails.identifier.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_33_0();
  return OUTLINED_FUNCTION_31_0(v1, a1, v3, *(uint64_t (**)(void))(*(_QWORD *)(v3 - 8) + 40));
}

uint64_t (*SharedContentViewModel.ParticipantDetails.identifier.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t SharedContentViewModel.ParticipantDetails.screenShareDeviceName.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_18_38();
  return v0;
}

void SharedContentViewModel.ParticipantDetails.screenShareDeviceName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *v6;

  OUTLINED_FUNCTION_28_26();
  v6 = (_QWORD *)(v2 + v5);
  swift_bridgeObjectRelease();
  *v6 = a1;
  v6[1] = a2;
  OUTLINED_FUNCTION_18();
}

uint64_t (*SharedContentViewModel.ParticipantDetails.screenShareDeviceName.modify())(_QWORD)
{
  OUTLINED_FUNCTION_28_26();
  return TPNumberPadCharacter.rawValue.getter;
}

void SharedContentViewModel.init(videoParticipant:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE v26[40];
  _OWORD v27[2];
  uint64_t v28;
  __int128 __src[8];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v26[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = type metadata accessor for Participant(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = &v26[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = type metadata accessor for SharedContentViewModel.ParticipantDetails(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = &v26[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  _s15ConversationKit11ParticipantVWOcTm_2(a1, (uint64_t)v9, type metadata accessor for Participant);
  SharedContentViewModel.ParticipantDetails.init(participant:)();
  v13 = Participant.deviceOrientation.getter();
  v15 = v14;
  v28 = 0;
  memset(v27, 0, sizeof(v27));
  Participant.screenProvider.getter();
  if (*((_QWORD *)&__src[1] + 1))
  {
    if ((v15 & 1) != 0)
      v16 = 1;
    else
      v16 = v13;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v27, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
    outlined init with take of Notice(__src, (uint64_t)v26);
    outlined init with copy of IDSLookupManager((uint64_t)v26, (uint64_t)v27);
    Participant.screenTransform.getter((CGFloat *)__src);
    outlined destroy of AccountUpdateNotice(a1, type metadata accessor for Participant);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
    v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (SharedContentViewModel.ParticipantDetails, CNKDeviceOrientation, SharedContentVideoView.ViewModel));
    v18 = a2 + *(int *)(v17 + 64);
    outlined init with take of ParticipantVideoProvider?((uint64_t)v27, v18);
    memcpy((void *)(v18 + 40), __src, 0x80uLL);
    v19 = *(int *)(v17 + 48);
    outlined init with take of SharedContentViewModel.ParticipantDetails((uint64_t)v12, a2);
    *(_QWORD *)(a2 + v19) = v16;
    type metadata accessor for SharedContentViewModel(0);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)__src, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    v25 = static OS_os_log.conversationKit;
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_1BD6441D0;
    _s15ConversationKit11ParticipantVWOcTm_2(a1, (uint64_t)v6, type metadata accessor for Participant);
    __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v7);
    specialized >> prefix<A>(_:)((uint64_t)v6);
    v22 = v21;
    v24 = v23;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v6, &demangling cache variable for type metadata for Participant?);
    *(_QWORD *)(v20 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v20 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v20 + 32) = v22;
    *(_QWORD *)(v20 + 40) = v24;
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    _s15ConversationKit11ParticipantVWOcTm_2(a1, (uint64_t)v9, type metadata accessor for Participant);
    SharedContentViewModel.init(nonScreenInfoParticipant:)((uint64_t)v9, a2);
    outlined destroy of AccountUpdateNotice(a1, type metadata accessor for Participant);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v27, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
    outlined destroy of AccountUpdateNotice((uint64_t)v12, type metadata accessor for SharedContentViewModel.ParticipantDetails);
  }
}

uint64_t SharedContentViewModel.init(nonScreenInfoParticipant:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD v18[2];
  uint64_t v19;

  v4 = type metadata accessor for Participant(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SharedContentViewModel.ParticipantDetails(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s15ConversationKit11ParticipantVWOcTm_2(a1, (uint64_t)v6, type metadata accessor for Participant);
  SharedContentViewModel.ParticipantDetails.init(participant:)();
  v10 = Participant.deviceOrientation.getter();
  if ((v11 & 1) != 0)
    v12 = 1;
  else
    v12 = v10;
  v19 = 0;
  memset(v18, 0, sizeof(v18));
  outlined destroy of AccountUpdateNotice(a1, type metadata accessor for Participant);
  v13 = (int *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (SharedContentViewModel.ParticipantDetails, CNKDeviceOrientation, SharedContentVideoView.ViewModel, ParticipantVideoOverlayView.ViewModel));
  v14 = a2 + v13[16];
  outlined init with take of ParticipantVideoProvider?((uint64_t)v18, v14);
  memcpy((void *)(v14 + 40), MEMORY[0x1E0CD2610], 0x80uLL);
  v15 = a2 + v13[20];
  *(_QWORD *)(v15 + 96) = 0;
  *(_OWORD *)(v15 + 64) = 0u;
  *(_OWORD *)(v15 + 80) = 0u;
  *(_OWORD *)(v15 + 32) = 0u;
  *(_OWORD *)(v15 + 48) = 0u;
  *(_OWORD *)v15 = 0u;
  *(_OWORD *)(v15 + 16) = 0u;
  *(_BYTE *)(v15 + 104) = 6;
  v16 = v13[12];
  outlined init with take of SharedContentViewModel.ParticipantDetails((uint64_t)v9, a2);
  *(_QWORD *)(a2 + v16) = v12;
  type metadata accessor for SharedContentViewModel(0);
  return swift_storeEnumTagMultiPayload();
}

void SharedContentViewModel.participantDetails.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_29_22();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_5_43(v2, v3, v7);
  if (OUTLINED_FUNCTION_42() == 1)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (SharedContentViewModel.ParticipantDetails, CNKDeviceOrientation, SharedContentVideoView.ViewModel, ParticipantVideoOverlayView.ViewModel));
    v5 = *(_DWORD *)(v4 + 64);
    v6 = v0 + *(int *)(v4 + 80);
    OUTLINED_FUNCTION_40_18();
    outlined destroy of ParticipantVideoOverlayView.ViewModel(v6);
  }
  else
  {
    v5 = *(_DWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (SharedContentViewModel.ParticipantDetails, CNKDeviceOrientation, SharedContentVideoView.ViewModel))
                   + 64);
    OUTLINED_FUNCTION_40_18();
  }
  outlined destroy of SharedContentVideoView.ViewModel(v0 + v5);
  OUTLINED_FUNCTION_18();
}

uint64_t type metadata accessor for SharedContentViewModel(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for SharedContentViewModel);
}

uint64_t type metadata accessor for SharedContentViewModel.ParticipantDetails(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for SharedContentViewModel.ParticipantDetails);
}

void _s15ConversationKit11ParticipantVWOcTm_2(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = a3(0);
  OUTLINED_FUNCTION_5(v3);
  OUTLINED_FUNCTION_0();
}

uint64_t outlined init with take of SharedContentViewModel.ParticipantDetails(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SharedContentViewModel.ParticipantDetails(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of ParticipantVideoOverlayView.ViewModel(uint64_t a1)
{
  destroy for ParticipantVideoOverlayView.ViewModel(a1);
  return a1;
}

uint64_t outlined destroy of SharedContentVideoView.ViewModel(uint64_t a1)
{
  destroy for ParticipantVideoView.ViewModel(a1);
  return a1;
}

uint64_t SharedContentViewModel.deviceOrientation.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  int *v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v11;

  type metadata accessor for SharedContentViewModel(0);
  OUTLINED_FUNCTION_1_1();
  v1 = MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_41_16(v1, v4, v5);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = (int *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (SharedContentViewModel.ParticipantDetails, CNKDeviceOrientation, SharedContentVideoView.ViewModel, ParticipantVideoOverlayView.ViewModel));
    v7 = *(_QWORD *)&v3[v6[12]];
    v8 = v6[16];
    outlined destroy of ParticipantVideoOverlayView.ViewModel((uint64_t)&v3[v6[20]]);
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (SharedContentViewModel.ParticipantDetails, CNKDeviceOrientation, SharedContentVideoView.ViewModel));
    v7 = *(_QWORD *)&v3[*(int *)(v9 + 48)];
    v8 = *(_DWORD *)(v9 + 64);
  }
  outlined destroy of SharedContentVideoView.ViewModel((uint64_t)&v3[v8]);
  outlined destroy of AccountUpdateNotice((uint64_t)v3, type metadata accessor for SharedContentViewModel.ParticipantDetails);
  return v7;
}

void SharedContentViewModel.compatibleWithRoster.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_29_22();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_4_1();
  _s15ConversationKit11ParticipantVWOcTm_2(v0, v1, v3);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (SharedContentViewModel.ParticipantDetails, CNKDeviceOrientation, SharedContentVideoView.ViewModel, ParticipantVideoOverlayView.ViewModel));
    v5 = *(_DWORD *)(v4 + 64);
    outlined destroy of ParticipantVideoOverlayView.ViewModel(v1 + *(int *)(v4 + 80));
  }
  else
  {
    v5 = *(_DWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (SharedContentViewModel.ParticipantDetails, CNKDeviceOrientation, SharedContentVideoView.ViewModel))
                   + 64);
  }
  outlined destroy of SharedContentVideoView.ViewModel(v1 + v5);
  outlined destroy of AccountUpdateNotice(v1, type metadata accessor for SharedContentViewModel.ParticipantDetails);
  OUTLINED_FUNCTION_41_16(v6, v7, type metadata accessor for SharedContentViewModel);
  OUTLINED_FUNCTION_18();
}

void SharedContentViewModel.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t (*v10)(_QWORD);
  int *v11;
  Swift::UInt v12;
  _BYTE *v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  Swift::UInt v18;
  uint64_t v19;
  Swift::UInt v20;
  _BYTE *v21;
  double v22;
  double v23;
  double v24;
  double v25;
  uint64_t v26;
  double v27;
  double v28;
  double v29;
  double v30;
  _BYTE v32[112];
  _BYTE v33[40];
  _BYTE v34[128];
  _QWORD v35[3];
  uint64_t v36;
  uint64_t v37;

  v2 = v0;
  OUTLINED_FUNCTION_48_15();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_58_0();
  MEMORY[0x1E0C80A78](v4);
  v6 = (uint64_t)&v32[-v5 - 8];
  type metadata accessor for SharedContentViewModel(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v7);
  v9 = &v32[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  _s15ConversationKit11ParticipantVWOcTm_2(v2, (uint64_t)v9, v10);
  if (OUTLINED_FUNCTION_27_17() != 1)
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (SharedContentViewModel.ParticipantDetails, CNKDeviceOrientation, SharedContentVideoView.ViewModel));
    v20 = *(_QWORD *)&v9[*(int *)(v19 + 48)];
    v21 = &v9[*(int *)(v19 + 64)];
    outlined init with take of SharedContentViewModel.ParticipantDetails((uint64_t)v9, v6);
    OUTLINED_FUNCTION_4_44(v33, v21);
    OUTLINED_FUNCTION_24_21(0);
    OUTLINED_FUNCTION_33_0();
    _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
    dispatch thunk of Hashable.hash(into:)();
    OUTLINED_FUNCTION_38_18();
    OUTLINED_FUNCTION_22_31();
    OUTLINED_FUNCTION_30_4();
    OUTLINED_FUNCTION_24_21(v20);
    OUTLINED_FUNCTION_47_7();
    if (v36)
    {
      __swift_project_boxed_opaque_existential_1(v35, v36);
      OUTLINED_FUNCTION_14_42();
      OUTLINED_FUNCTION_34_16();
      if ((v6 & 1) == 0)
      {
        OUTLINED_FUNCTION_23_29(1u);
        OUTLINED_FUNCTION_26_17();
LABEL_13:
        OUTLINED_FUNCTION_6_11(v35, v34);
        OUTLINED_FUNCTION_51_13();
        v27 = SharedContentVideoView.ViewModel.contentsRect.getter();
        CGRect.hash(into:)(v27, v28, v29, v30);
        outlined destroy of SharedContentVideoView.ViewModel((uint64_t)v33);
        v26 = v6;
        goto LABEL_14;
      }
    }
    else
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v35, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
    }
    OUTLINED_FUNCTION_23_29(0);
    goto LABEL_13;
  }
  v11 = (int *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (SharedContentViewModel.ParticipantDetails, CNKDeviceOrientation, SharedContentVideoView.ViewModel, ParticipantVideoOverlayView.ViewModel));
  v12 = *(_QWORD *)&v9[v11[12]];
  v13 = &v9[v11[16]];
  v14 = &v9[v11[20]];
  outlined init with take of SharedContentViewModel.ParticipantDetails((uint64_t)v9, v1);
  OUTLINED_FUNCTION_4_44(v33, v13);
  outlined init with take of ParticipantVideoOverlayView.ViewModel(v14, v32);
  OUTLINED_FUNCTION_24_21(1uLL);
  OUTLINED_FUNCTION_33_0();
  _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  dispatch thunk of Hashable.hash(into:)();
  OUTLINED_FUNCTION_38_18();
  OUTLINED_FUNCTION_22_31();
  OUTLINED_FUNCTION_30_4();
  OUTLINED_FUNCTION_24_21(v12);
  OUTLINED_FUNCTION_47_7();
  v15 = v36;
  if (!v36)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v35, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
    goto LABEL_9;
  }
  v16 = v37;
  v17 = __swift_project_boxed_opaque_existential_1(v35, v36);
  v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(v15, v16);
  OUTLINED_FUNCTION_34_16();
  if ((v17 & 1) != 0)
  {
LABEL_9:
    OUTLINED_FUNCTION_23_29(0);
    goto LABEL_10;
  }
  OUTLINED_FUNCTION_23_29(1u);
  Hasher._combine(_:)(v18);
LABEL_10:
  OUTLINED_FUNCTION_6_11(v35, v34);
  OUTLINED_FUNCTION_51_13();
  v22 = SharedContentVideoView.ViewModel.contentsRect.getter();
  CGRect.hash(into:)(v22, v23, v24, v25);
  ParticipantVideoOverlayView.ViewModel.hash(into:)();
  outlined destroy of ParticipantVideoOverlayView.ViewModel((uint64_t)v32);
  outlined destroy of SharedContentVideoView.ViewModel((uint64_t)v33);
  v26 = v1;
LABEL_14:
  outlined destroy of AccountUpdateNotice(v26, type metadata accessor for SharedContentViewModel.ParticipantDetails);
}

BOOL static SharedContentViewModel.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  const void *v25;
  const void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  double v44;
  double v45;
  double v46;
  double v47;
  Swift::Int v48;
  double v49;
  double v50;
  double v51;
  double v52;
  Swift::Int v53;
  uint64_t v54;
  uint64_t v55;
  unsigned __int8 v56;
  Swift::UInt v57;
  double v58;
  double v59;
  double v60;
  double v61;
  BOOL v62;
  BOOL v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  double v68;
  double v69;
  double v70;
  double v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unsigned __int8 v77[112];
  _BYTE v78[40];
  _BYTE v79[128];
  unsigned __int8 v80[112];
  _BYTE v81[40];
  _BYTE v82[128];
  _QWORD v83[3];
  uint64_t v84;
  uint64_t v85;
  _BYTE v86[24];
  uint64_t v87;

  v75 = OUTLINED_FUNCTION_48_15();
  OUTLINED_FUNCTION_1_1();
  v6 = MEMORY[0x1E0C80A78](v5);
  v76 = (uint64_t)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v9 = (uint64_t)&v73 - v8;
  type metadata accessor for SharedContentViewModel(0);
  OUTLINED_FUNCTION_1_1();
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v73 - v14;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (SharedContentViewModel, SharedContentViewModel));
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_4_1();
  v18 = v2 + *(int *)(v17 + 48);
  _s15ConversationKit11ParticipantVWOcTm_2(a1, v2, type metadata accessor for SharedContentViewModel);
  _s15ConversationKit11ParticipantVWOcTm_2(a2, v18, type metadata accessor for SharedContentViewModel);
  if (OUTLINED_FUNCTION_27_17() != 1)
  {
    v33 = v2;
    _s15ConversationKit11ParticipantVWOcTm_2(v2, (uint64_t)v15, type metadata accessor for SharedContentViewModel);
    v34 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (SharedContentViewModel.ParticipantDetails, CNKDeviceOrientation, SharedContentVideoView.ViewModel));
    v35 = *(int *)(v34 + 48);
    v36 = *(_QWORD *)&v15[v35];
    v37 = *(int *)(v34 + 64);
    v23 = &v15[v37];
    if (OUTLINED_FUNCTION_27_17() == 1)
    {
      v13 = v15;
      goto LABEL_16;
    }
    v38 = *(_QWORD *)(v18 + v35);
    outlined init with take of SharedContentViewModel.ParticipantDetails(v18, v9);
    OUTLINED_FUNCTION_4_44(v81, v23);
    OUTLINED_FUNCTION_4_44(v78, (const void *)(v18 + v37));
    if ((static UUID.== infix(_:_:)() & 1) != 0
      && ((OUTLINED_FUNCTION_32_20(), v31) ? (v41 = v39 == v40) : (v41 = 0),
          v41 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
    {
      outlined destroy of AccountUpdateNotice((uint64_t)v15, type metadata accessor for SharedContentViewModel.ParticipantDetails);
      if (v36 == v38)
      {
        OUTLINED_FUNCTION_12_9();
        OUTLINED_FUNCTION_36_22();
        if (v87)
        {
          OUTLINED_FUNCTION_7_50();
          OUTLINED_FUNCTION_21_28();
          if ((v9 & 1) == 0)
          {
            OUTLINED_FUNCTION_20_5();
            OUTLINED_FUNCTION_26_17();
            goto LABEL_38;
          }
        }
        else
        {
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v86, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
        }
        OUTLINED_FUNCTION_31_14();
LABEL_38:
        OUTLINED_FUNCTION_6_11(v86, v82);
        OUTLINED_FUNCTION_43_18();
        v49 = SharedContentVideoView.ViewModel.contentsRect.getter();
        CGRect.hash(into:)(v49, v50, v51, v52);
        v53 = Hasher._finalize()();
        OUTLINED_FUNCTION_12_9();
        OUTLINED_FUNCTION_35_12();
        v54 = v84;
        if (v84)
        {
          v55 = v85;
          v56 = __swift_project_boxed_opaque_existential_1(v83, v84);
          v57 = (*(uint64_t (**)(uint64_t, uint64_t))(v55 + 8))(v54, v55);
          OUTLINED_FUNCTION_33_15();
          if ((v56 & 1) == 0)
          {
            OUTLINED_FUNCTION_20_5();
            Hasher._combine(_:)(v57);
LABEL_51:
            OUTLINED_FUNCTION_6_11(v83, v79);
            CATransform3D.hash(into:)();
            v68 = SharedContentVideoView.ViewModel.contentsRect.getter();
            CGRect.hash(into:)(v68, v69, v70, v71);
            v63 = v53 == Hasher._finalize()();
            OUTLINED_FUNCTION_9_37();
            v72 = OUTLINED_FUNCTION_10_41();
            OUTLINED_FUNCTION_37_17(v72, type metadata accessor for SharedContentViewModel.ParticipantDetails);
            v65 = v33;
            goto LABEL_52;
          }
        }
        else
        {
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v83, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
        }
        OUTLINED_FUNCTION_31_14();
        goto LABEL_51;
      }
      OUTLINED_FUNCTION_9_37();
      OUTLINED_FUNCTION_10_41();
      v43 = v9;
    }
    else
    {
      OUTLINED_FUNCTION_46((uint64_t)v15);
      OUTLINED_FUNCTION_9_37();
      OUTLINED_FUNCTION_10_41();
      v43 = v9;
    }
    outlined destroy of AccountUpdateNotice(v43, type metadata accessor for SharedContentViewModel.ParticipantDetails);
    v42 = v33;
    goto LABEL_46;
  }
  v74 = v2;
  _s15ConversationKit11ParticipantVWOcTm_2(v2, (uint64_t)v13, type metadata accessor for SharedContentViewModel);
  v19 = (int *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (SharedContentViewModel.ParticipantDetails, CNKDeviceOrientation, SharedContentVideoView.ViewModel, ParticipantVideoOverlayView.ViewModel));
  v20 = v19[12];
  v21 = *(_QWORD *)&v13[v20];
  v22 = v19[16];
  v23 = &v13[v22];
  v24 = v19[20];
  if (OUTLINED_FUNCTION_27_17() == 1)
  {
    v73 = *(_QWORD *)(v18 + v20);
    v25 = (const void *)(v18 + v22);
    v26 = (const void *)(v18 + v24);
    v27 = v18;
    v28 = v76;
    outlined init with take of SharedContentViewModel.ParticipantDetails(v27, v76);
    OUTLINED_FUNCTION_4_44(v81, &v13[v22]);
    outlined init with take of ParticipantVideoOverlayView.ViewModel(&v13[v24], v80);
    OUTLINED_FUNCTION_4_44(v78, v25);
    outlined init with take of ParticipantVideoOverlayView.ViewModel(v26, v77);
    if ((static UUID.== infix(_:_:)() & 1) != 0)
    {
      OUTLINED_FUNCTION_32_20();
      v31 = v31 && v29 == v30;
      if (v31 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        outlined destroy of AccountUpdateNotice((uint64_t)v13, type metadata accessor for SharedContentViewModel.ParticipantDetails);
        v32 = v74;
        if (v21 != v73)
        {
LABEL_45:
          OUTLINED_FUNCTION_45_19();
          OUTLINED_FUNCTION_9_37();
          OUTLINED_FUNCTION_44_14();
          v66 = OUTLINED_FUNCTION_10_41();
          OUTLINED_FUNCTION_37_17(v66, type metadata accessor for SharedContentViewModel.ParticipantDetails);
          v42 = v32;
          goto LABEL_46;
        }
        OUTLINED_FUNCTION_12_9();
        OUTLINED_FUNCTION_36_22();
        if (v87)
        {
          OUTLINED_FUNCTION_7_50();
          OUTLINED_FUNCTION_21_28();
          if ((v21 & 1) == 0)
          {
            OUTLINED_FUNCTION_20_5();
            OUTLINED_FUNCTION_26_17();
            goto LABEL_33;
          }
        }
        else
        {
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v86, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
        }
        OUTLINED_FUNCTION_31_14();
LABEL_33:
        OUTLINED_FUNCTION_6_11(v86, v82);
        OUTLINED_FUNCTION_43_18();
        v44 = SharedContentVideoView.ViewModel.contentsRect.getter();
        CGRect.hash(into:)(v44, v45, v46, v47);
        v48 = Hasher._finalize()();
        OUTLINED_FUNCTION_12_9();
        OUTLINED_FUNCTION_35_12();
        if (v84)
        {
          __swift_project_boxed_opaque_existential_1(v83, v84);
          OUTLINED_FUNCTION_14_42();
          OUTLINED_FUNCTION_33_15();
          if ((v83 & 1) == 0)
          {
            OUTLINED_FUNCTION_20_5();
            OUTLINED_FUNCTION_26_17();
            goto LABEL_43;
          }
        }
        else
        {
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v83, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
        }
        OUTLINED_FUNCTION_31_14();
LABEL_43:
        OUTLINED_FUNCTION_6_11(v83, v79);
        CATransform3D.hash(into:)();
        v58 = SharedContentVideoView.ViewModel.contentsRect.getter();
        CGRect.hash(into:)(v58, v59, v60, v61);
        if (v48 == Hasher._finalize()())
        {
          static ParticipantVideoOverlayView.ViewModel.== infix(_:_:)(v80, v77);
          v63 = v62;
          OUTLINED_FUNCTION_45_19();
          OUTLINED_FUNCTION_9_37();
          OUTLINED_FUNCTION_44_14();
          v64 = OUTLINED_FUNCTION_10_41();
          OUTLINED_FUNCTION_37_17(v64, type metadata accessor for SharedContentViewModel.ParticipantDetails);
          v65 = v32;
LABEL_52:
          outlined destroy of AccountUpdateNotice(v65, type metadata accessor for SharedContentViewModel);
          return v63;
        }
        goto LABEL_45;
      }
    }
    OUTLINED_FUNCTION_46((uint64_t)v13);
    OUTLINED_FUNCTION_45_19();
    OUTLINED_FUNCTION_9_37();
    OUTLINED_FUNCTION_44_14();
    OUTLINED_FUNCTION_10_41();
    OUTLINED_FUNCTION_46(v28);
    v42 = v74;
LABEL_46:
    outlined destroy of AccountUpdateNotice(v42, type metadata accessor for SharedContentViewModel);
    return 0;
  }
  outlined destroy of ParticipantVideoOverlayView.ViewModel((uint64_t)&v13[v24]);
  v33 = v74;
LABEL_16:
  outlined destroy of SharedContentVideoView.ViewModel((uint64_t)v23);
  outlined destroy of AccountUpdateNotice((uint64_t)v13, type metadata accessor for SharedContentViewModel.ParticipantDetails);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v33, &demangling cache variable for type metadata for (SharedContentViewModel, SharedContentViewModel));
  return 0;
}

uint64_t static SharedContentViewModel.ParticipantDetails.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  if ((static UUID.== infix(_:_:)() & 1) == 0)
    return 0;
  OUTLINED_FUNCTION_28_26();
  v5 = *(_QWORD *)(a1 + v4);
  v6 = *(_QWORD *)(a1 + v4 + 8);
  v7 = (_QWORD *)(a2 + v4);
  if (v5 == *v7 && v6 == v7[1])
    return 1;
  else
    return _stringCompareWithSmolCheck(_:_:expecting:)();
}

void SharedContentViewModel.hashValue.getter()
{
  OUTLINED_FUNCTION_12_9();
  SharedContentViewModel.hash(into:)();
  OUTLINED_FUNCTION_4_6();
  OUTLINED_FUNCTION_2();
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance SharedContentViewModel()
{
  Hasher.init(_seed:)();
  SharedContentViewModel.hash(into:)();
  OUTLINED_FUNCTION_4_6();
  OUTLINED_FUNCTION_2();
}

uint64_t SharedContentViewModel.ParticipantDetails.hash(into:)()
{
  OUTLINED_FUNCTION_33_0();
  _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  dispatch thunk of Hashable.hash(into:)();
  type metadata accessor for SharedContentViewModel.ParticipantDetails(0);
  swift_bridgeObjectRetain();
  String.hash(into:)();
  return swift_bridgeObjectRelease();
}

void SharedContentViewModel.ParticipantDetails.hashValue.getter()
{
  OUTLINED_FUNCTION_12_9();
  OUTLINED_FUNCTION_33_0();
  _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  dispatch thunk of Hashable.hash(into:)();
  OUTLINED_FUNCTION_18_38();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_4_6();
  OUTLINED_FUNCTION_2();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance SharedContentViewModel.ParticipantDetails()
{
  Hasher.init(_seed:)();
  type metadata accessor for UUID();
  _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  dispatch thunk of Hashable.hash(into:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

void *outlined init with take of ParticipantVideoOverlayView.ViewModel(const void *a1, void *a2)
{
  __swift_memcpy105_8(a2, a1);
  return a2;
}

uint64_t outlined init with copy of ParticipantVideoProvider?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void CGRect.hash(into:)(double a1, double a2, double a3, double a4)
{
  CGFloat y;
  CGFloat width;
  CGFloat height;
  CGRect v7;

  v7 = CGRectStandardize(*(CGRect *)&a1);
  y = v7.origin.y;
  width = v7.size.width;
  height = v7.size.height;
  OUTLINED_FUNCTION_0_19(*(Swift::UInt64 *)&v7.origin.x);
  OUTLINED_FUNCTION_0_19(*(Swift::UInt64 *)&y);
  OUTLINED_FUNCTION_0_19(*(Swift::UInt64 *)&width);
  OUTLINED_FUNCTION_0_19(*(Swift::UInt64 *)&height);
}

void base witness table accessor for Equatable in SharedContentViewModel()
{
  _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type SharedContentViewModel and conformance SharedContentViewModel, type metadata accessor for SharedContentViewModel, (uint64_t)&protocol conformance descriptor for SharedContentViewModel);
}

void base witness table accessor for Equatable in SharedContentViewModel.ParticipantDetails()
{
  _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type SharedContentViewModel.ParticipantDetails and conformance SharedContentViewModel.ParticipantDetails, type metadata accessor for SharedContentViewModel.ParticipantDetails, (uint64_t)&protocol conformance descriptor for SharedContentViewModel.ParticipantDetails);
}

uint64_t *initializeBufferWithCopyOfBuffer for SharedContentViewModel(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  char *v27;
  _BYTE *v28;
  __int128 v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  void *v33;
  void *v34;
  id v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  id v41;
  id v42;
  id v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  id v54;
  __int128 v55;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v7 = type metadata accessor for UUID();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(type metadata accessor for SharedContentViewModel.ParticipantDetails(0) + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
    if (EnumCaseMultiPayload == 1)
    {
      v12 = (int *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (SharedContentViewModel.ParticipantDetails, CNKDeviceOrientation, SharedContentVideoView.ViewModel, ParticipantVideoOverlayView.ViewModel));
      *(uint64_t *)((char *)a1 + v12[12]) = *(uint64_t *)((char *)a2 + v12[12]);
      v13 = v12[16];
      v14 = (char *)a1 + v13;
      v15 = (char *)a2 + v13;
      v16 = *(uint64_t *)((char *)a2 + v13 + 24);
      if (v16)
      {
        v17 = *((_QWORD *)v15 + 4);
        *((_QWORD *)v14 + 3) = v16;
        *((_QWORD *)v14 + 4) = v17;
        (**(void (***)(char *, char *))(v16 - 8))(v14, v15);
      }
      else
      {
        v25 = *((_OWORD *)v15 + 1);
        *(_OWORD *)v14 = *(_OWORD *)v15;
        *((_OWORD *)v14 + 1) = v25;
        *((_QWORD *)v14 + 4) = *((_QWORD *)v15 + 4);
      }
      memcpy(v14 + 40, v15 + 40, 0x80uLL);
      v26 = v12[20];
      v27 = (char *)a1 + v26;
      v28 = (char *)a2 + v26;
      switch(v28[104])
      {
        case 1:
          v29 = *(_OWORD *)(v28 + 24);
          *(_OWORD *)(v27 + 24) = v29;
          (**(void (***)(void *, _BYTE *))(v29 - 8))(v27, v28);
          v30 = *((_QWORD *)v28 + 6);
          *((_QWORD *)v27 + 5) = *((_QWORD *)v28 + 5);
          *((_QWORD *)v27 + 6) = v30;
          v27[104] = 1;
          swift_bridgeObjectRetain();
          break;
        case 2:
          v32 = *((_QWORD *)v28 + 1);
          *(_QWORD *)v27 = *(_QWORD *)v28;
          *((_QWORD *)v27 + 1) = v32;
          v33 = (void *)*((_QWORD *)v28 + 3);
          *((_QWORD *)v27 + 2) = *((_QWORD *)v28 + 2);
          *((_QWORD *)v27 + 3) = v33;
          *((_WORD *)v27 + 16) = *((_WORD *)v28 + 16);
          *((_QWORD *)v27 + 5) = *((_QWORD *)v28 + 5);
          v27[48] = v28[48];
          v34 = (void *)*((_QWORD *)v28 + 7);
          *((_QWORD *)v27 + 7) = v34;
          v27[104] = 2;
          swift_bridgeObjectRetain();
          v35 = v33;
          goto LABEL_16;
        case 3:
          v36 = *((_QWORD *)v28 + 1);
          *(_QWORD *)v27 = *(_QWORD *)v28;
          *((_QWORD *)v27 + 1) = v36;
          v37 = (void *)*((_QWORD *)v28 + 3);
          *((_QWORD *)v27 + 2) = *((_QWORD *)v28 + 2);
          *((_QWORD *)v27 + 3) = v37;
          *((_WORD *)v27 + 16) = *((_WORD *)v28 + 16);
          *((_QWORD *)v27 + 5) = *((_QWORD *)v28 + 5);
          v27[48] = v28[48];
          v39 = (void *)*((_QWORD *)v28 + 7);
          v38 = *((_QWORD *)v28 + 8);
          *((_QWORD *)v27 + 7) = v39;
          *((_QWORD *)v27 + 8) = v38;
          v40 = *((_QWORD *)v28 + 9);
          v34 = (void *)*((_QWORD *)v28 + 10);
          *((_QWORD *)v27 + 9) = v40;
          *((_QWORD *)v27 + 10) = v34;
          v27[104] = 3;
          swift_bridgeObjectRetain();
          v41 = v37;
          v42 = v39;
          swift_bridgeObjectRetain();
LABEL_16:
          v43 = v34;
          break;
        case 4:
          v44 = *(void **)v28;
          v45 = *((_QWORD *)v28 + 1);
          *(_QWORD *)v27 = *(_QWORD *)v28;
          *((_QWORD *)v27 + 1) = v45;
          v46 = *((_QWORD *)v28 + 3);
          *((_QWORD *)v27 + 2) = *((_QWORD *)v28 + 2);
          *((_QWORD *)v27 + 3) = v46;
          v47 = *((_QWORD *)v28 + 5);
          *((_QWORD *)v27 + 4) = *((_QWORD *)v28 + 4);
          *((_QWORD *)v27 + 5) = v47;
          v48 = *((_QWORD *)v28 + 7);
          *((_QWORD *)v27 + 6) = *((_QWORD *)v28 + 6);
          *((_QWORD *)v27 + 7) = v48;
          v27[64] = v28[64];
          v27[65] = v28[65];
          v49 = *((_QWORD *)v28 + 10);
          v50 = v44;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v49)
          {
            *((_QWORD *)v27 + 9) = *((_QWORD *)v28 + 9);
            *((_QWORD *)v27 + 10) = v49;
            v51 = *((_QWORD *)v28 + 11);
            v52 = *((_QWORD *)v28 + 12);
            *((_QWORD *)v27 + 11) = v51;
            *((_QWORD *)v27 + 12) = v52;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            v55 = *(_OWORD *)(v28 + 88);
            *(_OWORD *)(v27 + 72) = *(_OWORD *)(v28 + 72);
            *(_OWORD *)(v27 + 88) = v55;
          }
          v27[104] = 4;
          break;
        case 5:
          v53 = *(void **)v28;
          *(_QWORD *)v27 = *(_QWORD *)v28;
          v27[104] = 5;
          v54 = v53;
          break;
        default:
          memcpy(v27, v28, 0x69uLL);
          break;
      }
    }
    else
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (SharedContentViewModel.ParticipantDetails, CNKDeviceOrientation, SharedContentVideoView.ViewModel));
      *(uint64_t *)((char *)a1 + *(int *)(v19 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v19 + 48));
      v20 = *(int *)(v19 + 64);
      v21 = (char *)a1 + v20;
      v22 = (char *)a2 + v20;
      v23 = *((_QWORD *)v22 + 3);
      if (v23)
      {
        v24 = *((_QWORD *)v22 + 4);
        *((_QWORD *)v21 + 3) = v23;
        *((_QWORD *)v21 + 4) = v24;
        (**(void (***)(char *, char *))(v23 - 8))(v21, v22);
      }
      else
      {
        v31 = *((_OWORD *)v22 + 1);
        *(_OWORD *)v21 = *(_OWORD *)v22;
        *((_OWORD *)v21 + 1) = v31;
        *((_QWORD *)v21 + 4) = *((_QWORD *)v22 + 4);
      }
      memcpy(v21 + 40, v22 + 40, 0x80uLL);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void destroy for SharedContentViewModel(uint64_t a1)
{
  int EnumCaseMultiPayload;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v3 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  type metadata accessor for SharedContentViewModel.ParticipantDetails(0);
  swift_bridgeObjectRelease();
  if (EnumCaseMultiPayload == 1)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (SharedContentViewModel.ParticipantDetails, CNKDeviceOrientation, SharedContentVideoView.ViewModel, ParticipantVideoOverlayView.ViewModel));
    v5 = a1 + *(int *)(v4 + 64);
    if (*(_QWORD *)(v5 + 24))
      __swift_destroy_boxed_opaque_existential_1(v5);
    v6 = a1 + *(int *)(v4 + 80);
    switch(*(_BYTE *)(v6 + 104))
    {
      case 1:
        __swift_destroy_boxed_opaque_existential_1(v6);
        goto LABEL_12;
      case 2:
        swift_bridgeObjectRelease();

        v8 = *(id *)(v6 + 56);
        goto LABEL_15;
      case 3:
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        v8 = *(id *)(v6 + 80);
        goto LABEL_15;
      case 4:

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v6 + 80))
        {
          swift_bridgeObjectRelease();
LABEL_12:
          swift_bridgeObjectRelease();
        }
        return;
      case 5:
        v8 = *(id *)v6;
LABEL_15:

        break;
      default:
        return;
    }
  }
  else
  {
    v7 = a1
       + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (SharedContentViewModel.ParticipantDetails, CNKDeviceOrientation, SharedContentVideoView.ViewModel))
                + 64);
    if (*(_QWORD *)(v7 + 24))
      __swift_destroy_boxed_opaque_existential_1(v7);
  }
}

uint64_t initializeWithCopy for SharedContentViewModel(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  char *v24;
  _BYTE *v25;
  __int128 v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  void *v30;
  void *v31;
  id v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  id v38;
  id v39;
  id v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  id v51;
  __int128 v52;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v5 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
  v6 = *(int *)(type metadata accessor for SharedContentViewModel.ParticipantDetails(0) + 20);
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  v9 = v8[1];
  *v7 = *v8;
  v7[1] = v9;
  swift_bridgeObjectRetain();
  if (EnumCaseMultiPayload == 1)
  {
    v10 = (int *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (SharedContentViewModel.ParticipantDetails, CNKDeviceOrientation, SharedContentVideoView.ViewModel, ParticipantVideoOverlayView.ViewModel));
    *(_QWORD *)(a1 + v10[12]) = *(_QWORD *)(a2 + v10[12]);
    v11 = v10[16];
    v12 = a1 + v11;
    v13 = a2 + v11;
    v14 = *(_QWORD *)(a2 + v11 + 24);
    if (v14)
    {
      v15 = *(_QWORD *)(v13 + 32);
      *(_QWORD *)(v12 + 24) = v14;
      *(_QWORD *)(v12 + 32) = v15;
      (**(void (***)(uint64_t, uint64_t))(v14 - 8))(v12, v13);
    }
    else
    {
      v22 = *(_OWORD *)(v13 + 16);
      *(_OWORD *)v12 = *(_OWORD *)v13;
      *(_OWORD *)(v12 + 16) = v22;
      *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
    }
    memcpy((void *)(v12 + 40), (const void *)(v13 + 40), 0x80uLL);
    v23 = v10[20];
    v24 = (char *)(a1 + v23);
    v25 = (_BYTE *)(a2 + v23);
    switch(v25[104])
    {
      case 1:
        v26 = *(_OWORD *)(v25 + 24);
        *(_OWORD *)(v24 + 24) = v26;
        (**(void (***)(void *, _BYTE *))(v26 - 8))(v24, v25);
        v27 = *((_QWORD *)v25 + 6);
        *((_QWORD *)v24 + 5) = *((_QWORD *)v25 + 5);
        *((_QWORD *)v24 + 6) = v27;
        v24[104] = 1;
        swift_bridgeObjectRetain();
        break;
      case 2:
        v29 = *((_QWORD *)v25 + 1);
        *(_QWORD *)v24 = *(_QWORD *)v25;
        *((_QWORD *)v24 + 1) = v29;
        v30 = (void *)*((_QWORD *)v25 + 3);
        *((_QWORD *)v24 + 2) = *((_QWORD *)v25 + 2);
        *((_QWORD *)v24 + 3) = v30;
        *((_WORD *)v24 + 16) = *((_WORD *)v25 + 16);
        *((_QWORD *)v24 + 5) = *((_QWORD *)v25 + 5);
        v24[48] = v25[48];
        v31 = (void *)*((_QWORD *)v25 + 7);
        *((_QWORD *)v24 + 7) = v31;
        v24[104] = 2;
        swift_bridgeObjectRetain();
        v32 = v30;
        goto LABEL_14;
      case 3:
        v33 = *((_QWORD *)v25 + 1);
        *(_QWORD *)v24 = *(_QWORD *)v25;
        *((_QWORD *)v24 + 1) = v33;
        v34 = (void *)*((_QWORD *)v25 + 3);
        *((_QWORD *)v24 + 2) = *((_QWORD *)v25 + 2);
        *((_QWORD *)v24 + 3) = v34;
        *((_WORD *)v24 + 16) = *((_WORD *)v25 + 16);
        *((_QWORD *)v24 + 5) = *((_QWORD *)v25 + 5);
        v24[48] = v25[48];
        v36 = (void *)*((_QWORD *)v25 + 7);
        v35 = *((_QWORD *)v25 + 8);
        *((_QWORD *)v24 + 7) = v36;
        *((_QWORD *)v24 + 8) = v35;
        v37 = *((_QWORD *)v25 + 9);
        v31 = (void *)*((_QWORD *)v25 + 10);
        *((_QWORD *)v24 + 9) = v37;
        *((_QWORD *)v24 + 10) = v31;
        v24[104] = 3;
        swift_bridgeObjectRetain();
        v38 = v34;
        v39 = v36;
        swift_bridgeObjectRetain();
LABEL_14:
        v40 = v31;
        break;
      case 4:
        v41 = *(void **)v25;
        v42 = *((_QWORD *)v25 + 1);
        *(_QWORD *)v24 = *(_QWORD *)v25;
        *((_QWORD *)v24 + 1) = v42;
        v43 = *((_QWORD *)v25 + 3);
        *((_QWORD *)v24 + 2) = *((_QWORD *)v25 + 2);
        *((_QWORD *)v24 + 3) = v43;
        v44 = *((_QWORD *)v25 + 5);
        *((_QWORD *)v24 + 4) = *((_QWORD *)v25 + 4);
        *((_QWORD *)v24 + 5) = v44;
        v45 = *((_QWORD *)v25 + 7);
        *((_QWORD *)v24 + 6) = *((_QWORD *)v25 + 6);
        *((_QWORD *)v24 + 7) = v45;
        v24[64] = v25[64];
        v24[65] = v25[65];
        v46 = *((_QWORD *)v25 + 10);
        v47 = v41;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v46)
        {
          *((_QWORD *)v24 + 9) = *((_QWORD *)v25 + 9);
          *((_QWORD *)v24 + 10) = v46;
          v48 = *((_QWORD *)v25 + 11);
          v49 = *((_QWORD *)v25 + 12);
          *((_QWORD *)v24 + 11) = v48;
          *((_QWORD *)v24 + 12) = v49;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v52 = *(_OWORD *)(v25 + 88);
          *(_OWORD *)(v24 + 72) = *(_OWORD *)(v25 + 72);
          *(_OWORD *)(v24 + 88) = v52;
        }
        v24[104] = 4;
        break;
      case 5:
        v50 = *(void **)v25;
        *(_QWORD *)v24 = *(_QWORD *)v25;
        v24[104] = 5;
        v51 = v50;
        break;
      default:
        memcpy(v24, v25, 0x69uLL);
        break;
    }
  }
  else
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (SharedContentViewModel.ParticipantDetails, CNKDeviceOrientation, SharedContentVideoView.ViewModel));
    *(_QWORD *)(a1 + *(int *)(v16 + 48)) = *(_QWORD *)(a2 + *(int *)(v16 + 48));
    v17 = *(int *)(v16 + 64);
    v18 = a1 + v17;
    v19 = a2 + v17;
    v20 = *(_QWORD *)(v19 + 24);
    if (v20)
    {
      v21 = *(_QWORD *)(v19 + 32);
      *(_QWORD *)(v18 + 24) = v20;
      *(_QWORD *)(v18 + 32) = v21;
      (**(void (***)(uint64_t, uint64_t))(v20 - 8))(v18, v19);
    }
    else
    {
      v28 = *(_OWORD *)(v19 + 16);
      *(_OWORD *)v18 = *(_OWORD *)v19;
      *(_OWORD *)(v18 + 16) = v28;
      *(_QWORD *)(v18 + 32) = *(_QWORD *)(v19 + 32);
    }
    memcpy((void *)(v18 + 40), (const void *)(v19 + 40), 0x80uLL);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for SharedContentViewModel(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  __int128 *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 *v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  char *v22;
  _BYTE *v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  void *v27;
  uint64_t v28;
  void *v29;
  id v30;
  void *v31;
  uint64_t v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  void *v37;
  uint64_t v38;
  id v39;
  void *v40;
  id v41;
  __int128 v42;

  if (a1 != a2)
  {
    outlined destroy of AccountUpdateNotice(a1, type metadata accessor for SharedContentViewModel);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v5 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
    v6 = *(int *)(type metadata accessor for SharedContentViewModel.ParticipantDetails(0) + 20);
    v7 = (_QWORD *)(a1 + v6);
    v8 = (_QWORD *)(a2 + v6);
    *v7 = *v8;
    v7[1] = v8[1];
    swift_bridgeObjectRetain();
    if (EnumCaseMultiPayload == 1)
    {
      v9 = (int *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (SharedContentViewModel.ParticipantDetails, CNKDeviceOrientation, SharedContentVideoView.ViewModel, ParticipantVideoOverlayView.ViewModel));
      *(_QWORD *)(a1 + v9[12]) = *(_QWORD *)(a2 + v9[12]);
      v10 = v9[16];
      v11 = a1 + v10;
      v12 = (__int128 *)(a2 + v10);
      v13 = *(_QWORD *)(a2 + v10 + 24);
      if (v13)
      {
        *(_QWORD *)(v11 + 24) = v13;
        *(_QWORD *)(v11 + 32) = *((_QWORD *)v12 + 4);
        (**(void (***)(uint64_t, __int128 *))(v13 - 8))(v11, v12);
      }
      else
      {
        v19 = *v12;
        v20 = v12[1];
        *(_QWORD *)(v11 + 32) = *((_QWORD *)v12 + 4);
        *(_OWORD *)v11 = v19;
        *(_OWORD *)(v11 + 16) = v20;
      }
      memcpy((void *)(v11 + 40), (char *)v12 + 40, 0x80uLL);
      v21 = v9[20];
      v22 = (char *)(a1 + v21);
      v23 = (_BYTE *)(a2 + v21);
      switch(v23[104])
      {
        case 1:
          v24 = *((_QWORD *)v23 + 3);
          *((_QWORD *)v22 + 3) = v24;
          *((_QWORD *)v22 + 4) = *((_QWORD *)v23 + 4);
          (**(void (***)(void *, _BYTE *))(v24 - 8))(v22, v23);
          *((_QWORD *)v22 + 5) = *((_QWORD *)v23 + 5);
          *((_QWORD *)v22 + 6) = *((_QWORD *)v23 + 6);
          v22[104] = 1;
          swift_bridgeObjectRetain();
          break;
        case 2:
          *(_QWORD *)v22 = *(_QWORD *)v23;
          *((_QWORD *)v22 + 1) = *((_QWORD *)v23 + 1);
          *((_QWORD *)v22 + 2) = *((_QWORD *)v23 + 2);
          v27 = (void *)*((_QWORD *)v23 + 3);
          *((_QWORD *)v22 + 3) = v27;
          v22[32] = v23[32];
          v22[33] = v23[33];
          v28 = *((_QWORD *)v23 + 5);
          v22[48] = v23[48];
          *((_QWORD *)v22 + 5) = v28;
          v29 = (void *)*((_QWORD *)v23 + 7);
          *((_QWORD *)v22 + 7) = v29;
          v22[104] = 2;
          swift_bridgeObjectRetain();
          v30 = v27;
          goto LABEL_15;
        case 3:
          *(_QWORD *)v22 = *(_QWORD *)v23;
          *((_QWORD *)v22 + 1) = *((_QWORD *)v23 + 1);
          *((_QWORD *)v22 + 2) = *((_QWORD *)v23 + 2);
          v31 = (void *)*((_QWORD *)v23 + 3);
          *((_QWORD *)v22 + 3) = v31;
          v22[32] = v23[32];
          v22[33] = v23[33];
          v32 = *((_QWORD *)v23 + 5);
          v22[48] = v23[48];
          *((_QWORD *)v22 + 5) = v32;
          v33 = (void *)*((_QWORD *)v23 + 7);
          *((_QWORD *)v22 + 7) = v33;
          *((_QWORD *)v22 + 8) = *((_QWORD *)v23 + 8);
          *((_QWORD *)v22 + 9) = *((_QWORD *)v23 + 9);
          v29 = (void *)*((_QWORD *)v23 + 10);
          *((_QWORD *)v22 + 10) = v29;
          v22[104] = 3;
          swift_bridgeObjectRetain();
          v34 = v31;
          v35 = v33;
          swift_bridgeObjectRetain();
LABEL_15:
          v36 = v29;
          break;
        case 4:
          v37 = *(void **)v23;
          *(_QWORD *)v22 = *(_QWORD *)v23;
          *((_QWORD *)v22 + 1) = *((_QWORD *)v23 + 1);
          *((_QWORD *)v22 + 2) = *((_QWORD *)v23 + 2);
          *((_QWORD *)v22 + 3) = *((_QWORD *)v23 + 3);
          *((_QWORD *)v22 + 4) = *((_QWORD *)v23 + 4);
          *((_QWORD *)v22 + 5) = *((_QWORD *)v23 + 5);
          *((_QWORD *)v22 + 6) = *((_QWORD *)v23 + 6);
          *((_QWORD *)v22 + 7) = *((_QWORD *)v23 + 7);
          v22[64] = v23[64];
          v22[65] = v23[65];
          v38 = *((_QWORD *)v23 + 10);
          v39 = v37;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v38)
          {
            *((_QWORD *)v22 + 9) = *((_QWORD *)v23 + 9);
            *((_QWORD *)v22 + 10) = *((_QWORD *)v23 + 10);
            *((_QWORD *)v22 + 11) = *((_QWORD *)v23 + 11);
            *((_QWORD *)v22 + 12) = *((_QWORD *)v23 + 12);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            v42 = *(_OWORD *)(v23 + 88);
            *(_OWORD *)(v22 + 72) = *(_OWORD *)(v23 + 72);
            *(_OWORD *)(v22 + 88) = v42;
          }
          v22[104] = 4;
          break;
        case 5:
          v40 = *(void **)v23;
          *(_QWORD *)v22 = *(_QWORD *)v23;
          v22[104] = 5;
          v41 = v40;
          break;
        default:
          memcpy(v22, v23, 0x69uLL);
          break;
      }
    }
    else
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (SharedContentViewModel.ParticipantDetails, CNKDeviceOrientation, SharedContentVideoView.ViewModel));
      *(_QWORD *)(a1 + *(int *)(v14 + 48)) = *(_QWORD *)(a2 + *(int *)(v14 + 48));
      v15 = *(int *)(v14 + 64);
      v16 = a1 + v15;
      v17 = (__int128 *)(a2 + v15);
      v18 = *((_QWORD *)v17 + 3);
      if (v18)
      {
        *(_QWORD *)(v16 + 24) = v18;
        *(_QWORD *)(v16 + 32) = *((_QWORD *)v17 + 4);
        (**(void (***)(uint64_t, __int128 *))(v18 - 8))(v16, v17);
      }
      else
      {
        v25 = *v17;
        v26 = v17[1];
        *(_QWORD *)(v16 + 32) = *((_QWORD *)v17 + 4);
        *(_OWORD *)v16 = v25;
        *(_OWORD *)(v16 + 16) = v26;
      }
      memcpy((void *)(v16 + 40), (char *)v17 + 40, 0x80uLL);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for SharedContentViewModel(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v5 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
  v6 = type metadata accessor for SharedContentViewModel.ParticipantDetails(0);
  *(_OWORD *)(a1 + *(int *)(v6 + 20)) = *(_OWORD *)(a2 + *(int *)(v6 + 20));
  if (EnumCaseMultiPayload == 1)
  {
    v7 = (int *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (SharedContentViewModel.ParticipantDetails, CNKDeviceOrientation, SharedContentVideoView.ViewModel, ParticipantVideoOverlayView.ViewModel));
    *(_QWORD *)(a1 + v7[12]) = *(_QWORD *)(a2 + v7[12]);
    memcpy((void *)(a1 + v7[16]), (const void *)(a2 + v7[16]), 0xA8uLL);
    memcpy((void *)(a1 + v7[20]), (const void *)(a2 + v7[20]), 0x69uLL);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (SharedContentViewModel.ParticipantDetails, CNKDeviceOrientation, SharedContentVideoView.ViewModel));
    *(_QWORD *)(a1 + *(int *)(v8 + 48)) = *(_QWORD *)(a2 + *(int *)(v8 + 48));
    memcpy((void *)(a1 + *(int *)(v8 + 64)), (const void *)(a2 + *(int *)(v8 + 64)), 0xA8uLL);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for SharedContentViewModel(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;

  if (a1 != a2)
  {
    outlined destroy of AccountUpdateNotice(a1, type metadata accessor for SharedContentViewModel);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v5 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
    v6 = type metadata accessor for SharedContentViewModel.ParticipantDetails(0);
    *(_OWORD *)(a1 + *(int *)(v6 + 20)) = *(_OWORD *)(a2 + *(int *)(v6 + 20));
    if (EnumCaseMultiPayload == 1)
    {
      v7 = (int *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (SharedContentViewModel.ParticipantDetails, CNKDeviceOrientation, SharedContentVideoView.ViewModel, ParticipantVideoOverlayView.ViewModel));
      *(_QWORD *)(a1 + v7[12]) = *(_QWORD *)(a2 + v7[12]);
      memcpy((void *)(a1 + v7[16]), (const void *)(a2 + v7[16]), 0xA8uLL);
      memcpy((void *)(a1 + v7[20]), (const void *)(a2 + v7[20]), 0x69uLL);
    }
    else
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (SharedContentViewModel.ParticipantDetails, CNKDeviceOrientation, SharedContentVideoView.ViewModel));
      *(_QWORD *)(a1 + *(int *)(v8 + 48)) = *(_QWORD *)(a2 + *(int *)(v8 + 48));
      memcpy((void *)(a1 + *(int *)(v8 + 64)), (const void *)(a2 + *(int *)(v8 + 64)), 0xA8uLL);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t type metadata completion function for SharedContentViewModel()
{
  uint64_t result;
  unint64_t v1;
  char v2;
  char v3;
  char *v4;
  char *v5;

  result = type metadata accessor for SharedContentViewModel.ParticipantDetails(319);
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout3();
    v4 = &v3;
    swift_getTupleTypeLayout();
    v5 = &v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for SharedContentViewModel.ParticipantDetails(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UUID();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for SharedContentViewModel.ParticipantDetails(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SharedContentViewModel.ParticipantDetails(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SharedContentViewModel.ParticipantDetails(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for SharedContentViewModel.ParticipantDetails(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for SharedContentViewModel.ParticipantDetails(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SharedContentViewModel.ParticipantDetails()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BD0EA1F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = OUTLINED_FUNCTION_33_0();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SharedContentViewModel.ParticipantDetails()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BD0EA274(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;

  v8 = OUTLINED_FUNCTION_33_0();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
    OUTLINED_FUNCTION_18();
  }
}

uint64_t type metadata completion function for SharedContentViewModel.ParticipantDetails()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t outlined init with take of ParticipantVideoProvider?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t OUTLINED_FUNCTION_39_21()
{
  uint64_t v0;
  uint64_t v1;

  return outlined init with take of SharedContentViewModel.ParticipantDetails(v0, v1);
}

double SystemRootLayerProxyView.preferredContentSize.getter()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  double v5;
  double v6;
  double v7;

  v1 = objc_msgSend(v0, sel_window);
  if (v1 && (v2 = v1, v3 = objc_msgSend(v1, sel_windowScene), v2, v3))
  {
    v4 = objc_msgSend(v3, sel_screen);
    objc_msgSend(v4, sel_bounds);
    v6 = v5;

  }
  else
  {
    v3 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
    objc_msgSend(v3, sel_bounds);
    v6 = v7;
  }

  return v6;
}

uint64_t SystemRootLayerProxyView.updateSystemRootLayerTransformOnActiveCallDebouncer.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1
            + OBJC_IVAR____TtC15ConversationKitP33_F76A9C58291D108FF33107E36997693224SystemRootLayerProxyView_updateSystemRootLayerTransformOnActiveCallDebouncer) = a1;
  return swift_release();
}

uint64_t SystemRootLayerProxyView.systemRootLayerTransform.didset()
{
  char *v0;
  void *v1;
  char *v2;
  __int128 v3;
  uint64_t result;
  _QWORD *v5;
  __int128 v6;
  id v7;
  void *v8;
  id v9;
  __int128 v10;
  id v11;
  double v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  CGAffineTransform *v20;
  uint64_t v21;
  _OWORD v22[3];
  _OWORD v23[9];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;

  v1 = v0;
  v2 = &v0[OBJC_IVAR____TtC15ConversationKitP33_F76A9C58291D108FF33107E36997693224SystemRootLayerProxyView_systemRootLayerTransform];
  v3 = *(_OWORD *)&v0[OBJC_IVAR____TtC15ConversationKitP33_F76A9C58291D108FF33107E36997693224SystemRootLayerProxyView_systemRootLayerTransform
                    + 16];
  v30 = *(_OWORD *)&v0[OBJC_IVAR____TtC15ConversationKitP33_F76A9C58291D108FF33107E36997693224SystemRootLayerProxyView_systemRootLayerTransform];
  v31 = v3;
  v32 = *(_OWORD *)&v0[OBJC_IVAR____TtC15ConversationKitP33_F76A9C58291D108FF33107E36997693224SystemRootLayerProxyView_systemRootLayerTransform
                     + 32];
  result = static CGAffineTransform.== infix(_:_:)();
  if ((result & 1) == 0)
  {
    v5 = SystemRootLayerProxyView.displayCornerView.getter();
    v6 = *((_OWORD *)v2 + 1);
    v23[6] = *(_OWORD *)v2;
    v23[7] = v6;
    v23[8] = *((_OWORD *)v2 + 2);
    v24 = 0x3FF0000000000000;
    v25 = 0;
    v26 = 0;
    v27 = 0x3FF0000000000000;
    v28 = 0;
    v29 = 0;
    objc_msgSend(v5, sel_setHidden_, static CGAffineTransform.== infix(_:_:)() & 1);

    v7 = objc_msgSend(v1, sel_window);
    if (v7)
    {
      v8 = v7;
      v9 = objc_msgSend(v7, sel_windowScene);

      if (v9)
      {
        v10 = *((_OWORD *)v2 + 1);
        v23[3] = *(_OWORD *)v2;
        v23[4] = v10;
        v23[5] = *((_OWORD *)v2 + 2);
        v11 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
        objc_msgSend(v11, sel__rotation);
        v13 = v12;

        CGAffineTransform.rotatingTranslationComponent(by:)(v14, v15, v16, v17, v18, v19, v20, v21, v23, -v13);
        v22[0] = v23[0];
        v22[1] = v23[1];
        v22[2] = v23[2];
        objc_msgSend(v9, sel_setSBSUI_preferredSystemRootLayerTransform_, v22);

      }
    }
    return SystemRootLayerProxyView.updateSystemRootLayerTransformOnActiveCall()();
  }
  return result;
}

uint64_t SystemRootLayerProxyView.systemRootLayerTransform.setter(_OWORD *a1)
{
  uint64_t v1;
  _OWORD *v2;
  __int128 v3;

  v2 = (_OWORD *)(v1
                + OBJC_IVAR____TtC15ConversationKitP33_F76A9C58291D108FF33107E36997693224SystemRootLayerProxyView_systemRootLayerTransform);
  v3 = a1[1];
  *v2 = *a1;
  v2[1] = v3;
  v2[2] = a1[2];
  return SystemRootLayerProxyView.systemRootLayerTransform.didset();
}

uint64_t SystemRootLayerProxyView.needsUpdateSystemRootLayerTransform.setter(char a1)
{
  _BYTE *v1;
  uint64_t v2;
  _BYTE *v3;

  v1[OBJC_IVAR____TtC15ConversationKitP33_F76A9C58291D108FF33107E36997693224SystemRootLayerProxyView_needsUpdateSystemRootLayerTransform] = a1;
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = v1;
  v3 = v1;
  onNextMainRunLoop(do:)((uint64_t)partial apply for closure #1 in SystemRootLayerProxyView.needsUpdateSystemRootLayerTransform.didset, v2);
  return swift_release();
}

_QWORD *SystemRootLayerProxyView.displayCornerView.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  id v6;
  id v7;
  _QWORD *v8;
  id v9;
  id v10;
  void *v11;
  id v12;

  v1 = OBJC_IVAR____TtC15ConversationKitP33_F76A9C58291D108FF33107E36997693224SystemRootLayerProxyView____lazy_storage___displayCornerView;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC15ConversationKitP33_F76A9C58291D108FF33107E36997693224SystemRootLayerProxyView____lazy_storage___displayCornerView);
  if (v2)
  {
    v3 = *(_QWORD **)(v0
                    + OBJC_IVAR____TtC15ConversationKitP33_F76A9C58291D108FF33107E36997693224SystemRootLayerProxyView____lazy_storage___displayCornerView);
  }
  else
  {
    v4 = v0;
    type metadata accessor for ShapeView();
    v5 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
    v6 = objc_msgSend((id)objc_opt_self(), sel_blackColor);
    v7 = objc_msgSend(v6, sel_CGColor);

    v8 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    (*(void (**)(id))((*MEMORY[0x1E0DEEDD8] & *v5) + 0x60))(v7);
    (*(void (**)(id))((*v8 & *v5) + 0x78))((id)*MEMORY[0x1E0CD2B70]);
    objc_msgSend(v5, sel_setHidden_, 1);
    objc_msgSend(v5, sel_setUserInteractionEnabled_, 0);
    v9 = objc_msgSend(v5, sel_layer);
    objc_msgSend(v9, sel_setAllowsHitTesting_, 0);

    v10 = objc_msgSend(v5, sel_layer);
    objc_msgSend(v10, sel_setDisableUpdateMask_, 32);

    v11 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v12 = v2;
  return v3;
}

id SystemRootLayerProxyView.init()()
{
  _BYTE *v0;
  _QWORD *v1;
  char *v2;
  uint64_t v3;
  id v4;
  _QWORD *v5;
  objc_super v7;

  *(_OWORD *)&v0[OBJC_IVAR____TtC15ConversationKitP33_F76A9C58291D108FF33107E36997693224SystemRootLayerProxyView_updateSystemRootLayerTransformOnActiveCallDebounceDelay] = xmmword_1BD649F00;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKitP33_F76A9C58291D108FF33107E36997693224SystemRootLayerProxyView_updateSystemRootLayerTransformOnActiveCallDebouncer] = 0;
  v1 = &v0[OBJC_IVAR____TtC15ConversationKitP33_F76A9C58291D108FF33107E36997693224SystemRootLayerProxyView_systemRootLayerTransform];
  *v1 = 0x3FF0000000000000;
  v1[1] = 0;
  v1[2] = 0;
  v1[3] = 0x3FF0000000000000;
  v1[4] = 0;
  v1[5] = 0;
  v0[OBJC_IVAR____TtC15ConversationKitP33_F76A9C58291D108FF33107E36997693224SystemRootLayerProxyView_needsUpdateSystemRootLayerTransform] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKitP33_F76A9C58291D108FF33107E36997693224SystemRootLayerProxyView____lazy_storage___displayCornerView] = 0;
  v2 = v0;
  if ((MEMORY[0x1E0DEE9D8] & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter())
    specialized Set.init(_nonEmptyArrayLiteral:)(MEMORY[0x1E0DEE9D8]);
  else
    v3 = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)&v2[OBJC_IVAR____TtC15ConversationKitP33_F76A9C58291D108FF33107E36997693224SystemRootLayerProxyView_subscriptions] = v3;

  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for SystemRootLayerProxyView();
  v4 = objc_msgSendSuper2(&v7, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v5 = SystemRootLayerProxyView.displayCornerView.getter();
  objc_msgSend(v4, sel_addSubview_, v5);

  return v4;
}

void SystemRootLayerProxyView.init(coder:)()
{
  _BYTE *v0;
  _QWORD *v1;
  uint64_t v2;

  *(_OWORD *)&v0[OBJC_IVAR____TtC15ConversationKitP33_F76A9C58291D108FF33107E36997693224SystemRootLayerProxyView_updateSystemRootLayerTransformOnActiveCallDebounceDelay] = xmmword_1BD649F00;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKitP33_F76A9C58291D108FF33107E36997693224SystemRootLayerProxyView_updateSystemRootLayerTransformOnActiveCallDebouncer] = 0;
  v1 = &v0[OBJC_IVAR____TtC15ConversationKitP33_F76A9C58291D108FF33107E36997693224SystemRootLayerProxyView_systemRootLayerTransform];
  *v1 = 0x3FF0000000000000;
  v1[1] = 0;
  v1[2] = 0;
  v1[3] = 0x3FF0000000000000;
  v1[4] = 0;
  v1[5] = 0;
  v0[OBJC_IVAR____TtC15ConversationKitP33_F76A9C58291D108FF33107E36997693224SystemRootLayerProxyView_needsUpdateSystemRootLayerTransform] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKitP33_F76A9C58291D108FF33107E36997693224SystemRootLayerProxyView____lazy_storage___displayCornerView] = 0;
  if ((MEMORY[0x1E0DEE9D8] & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter())
    specialized Set.init(_nonEmptyArrayLiteral:)(MEMORY[0x1E0DEE9D8]);
  else
    v2 = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKitP33_F76A9C58291D108FF33107E36997693224SystemRootLayerProxyView_subscriptions] = v2;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t specialized SystemRootLayerProxyView.registerForPropertyChangesOf<A>(_:on:)(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  v6 = __swift_instantiateConcreteTypeFromMangledName(a3);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  _KeyValueCodingAndObservingPublishing<>.publisher<A>(for:options:)();
  OUTLINED_FUNCTION_7_0();
  swift_unknownObjectWeakInit();
  lazy protocol witness table accessor for type NSObject.KeyValueObservingPublisher<UIView, CGAffineTransform> and conformance NSObject.KeyValueObservingPublisher<A, B>(a4, a3);
  swift_retain();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  return swift_release();
}

void specialized closure #1 in SystemRootLayerProxyView.registerForPropertyChangesOf<A>(_:on:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x1C3B752C0](v2);
  if (v3)
  {
    v4 = (void *)v3;
    SystemRootLayerProxyView.needsUpdateSystemRootLayerTransform.setter(1);

  }
}

{
  specialized closure #1 in SystemRootLayerProxyView.registerForPropertyChangesOf<A>(_:on:)(a2);
}

{
  specialized closure #1 in SystemRootLayerProxyView.registerForPropertyChangesOf<A>(_:on:)(a2);
}

void specialized closure #1 in SystemRootLayerProxyView.registerForPropertyChangesOf<A>(_:on:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x1C3B752C0](v1);
  if (v2)
  {
    v3 = (void *)v2;
    SystemRootLayerProxyView.needsUpdateSystemRootLayerTransform.setter(1);

  }
}

id SystemRootLayerProxyView.registerForGeometryChanges()()
{
  char *v0;
  char *v1;
  uint64_t KeyPath;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id result;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = &v0[OBJC_IVAR____TtC15ConversationKitP33_F76A9C58291D108FF33107E36997693224SystemRootLayerProxyView_subscriptions];
  swift_beginAccess();
  *(_QWORD *)v1 = MEMORY[0x1E0DEE9E8];
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath();
  specialized SystemRootLayerProxyView.registerForPropertyChangesOf<A>(_:on:)(KeyPath, (uint64_t)v0, &demangling cache variable for type metadata for NSObject.KeyValueObservingPublisher<UIView, CGRect>, &lazy protocol witness table cache variable for type NSObject.KeyValueObservingPublisher<UIView, CGRect> and conformance NSObject.KeyValueObservingPublisher<A, B>);
  swift_release();
  v3 = swift_getKeyPath();
  specialized SystemRootLayerProxyView.registerForPropertyChangesOf<A>(_:on:)(v3, (uint64_t)v0, &demangling cache variable for type metadata for NSObject.KeyValueObservingPublisher<UIView, CGPoint>, &lazy protocol witness table cache variable for type NSObject.KeyValueObservingPublisher<UIView, CGPoint> and conformance NSObject.KeyValueObservingPublisher<A, B>);
  swift_release();
  v4 = objc_msgSend(v0, sel_superview);
  if (v4)
  {
    v5 = v4;
    v6 = swift_getKeyPath();
    specialized SystemRootLayerProxyView.registerForPropertyChangesOf<A>(_:on:)(v6, (uint64_t)v5, &demangling cache variable for type metadata for NSObject.KeyValueObservingPublisher<UIView, CGRect>, &lazy protocol witness table cache variable for type NSObject.KeyValueObservingPublisher<UIView, CGRect> and conformance NSObject.KeyValueObservingPublisher<A, B>);
    swift_release();
    v7 = swift_getKeyPath();
    specialized SystemRootLayerProxyView.registerForPropertyChangesOf<A>(_:on:)(v7, (uint64_t)v5, &demangling cache variable for type metadata for NSObject.KeyValueObservingPublisher<UIView, CGPoint>, &lazy protocol witness table cache variable for type NSObject.KeyValueObservingPublisher<UIView, CGPoint> and conformance NSObject.KeyValueObservingPublisher<A, B>);

    swift_release();
  }
  result = objc_msgSend(v0, sel_window);
  if (result)
  {
    v9 = result;
    v10 = swift_getKeyPath();
    specialized SystemRootLayerProxyView.registerForPropertyChangesOf<A>(_:on:)(v10, (uint64_t)v9, &demangling cache variable for type metadata for NSObject.KeyValueObservingPublisher<UIView, CGRect>, &lazy protocol witness table cache variable for type NSObject.KeyValueObservingPublisher<UIView, CGRect> and conformance NSObject.KeyValueObservingPublisher<A, B>);
    swift_release();
    v11 = swift_getKeyPath();
    specialized SystemRootLayerProxyView.registerForPropertyChangesOf<A>(_:on:)(v11, (uint64_t)v9, &demangling cache variable for type metadata for NSObject.KeyValueObservingPublisher<UIView, CGPoint>, &lazy protocol witness table cache variable for type NSObject.KeyValueObservingPublisher<UIView, CGPoint> and conformance NSObject.KeyValueObservingPublisher<A, B>);
    swift_release();
    v12 = swift_getKeyPath();
    specialized SystemRootLayerProxyView.registerForPropertyChangesOf<A>(_:on:)(v12, (uint64_t)v9, &demangling cache variable for type metadata for NSObject.KeyValueObservingPublisher<UIView, CGAffineTransform>, &lazy protocol witness table cache variable for type NSObject.KeyValueObservingPublisher<UIView, CGAffineTransform> and conformance NSObject.KeyValueObservingPublisher<A, B>);

    return (id)swift_release();
  }
  return result;
}

id key path setter for UIView.frame : UIView(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setFrame_, *a1, a1[1], a1[2], a1[3]);
}

double key path getter for UIView.transform : UIView@<D0>(id *a1@<X0>, _OWORD *a2@<X8>)
{
  double result;
  __int128 v4;
  __int128 v5;
  __int128 v6;

  objc_msgSend(*a1, sel_transform);
  result = *(double *)&v4;
  *a2 = v4;
  a2[1] = v5;
  a2[2] = v6;
  return result;
}

id key path setter for UIView.transform : UIView(_OWORD *a1, void **a2)
{
  void *v2;
  __int128 v3;
  _OWORD v5[3];

  v2 = *a2;
  v3 = a1[1];
  v5[0] = *a1;
  v5[1] = v3;
  v5[2] = a1[2];
  return objc_msgSend(v2, sel_setTransform_, v5);
}

id SystemRootLayerProxyView.didMoveToSuperview()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  objc_super v8;

  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for SystemRootLayerProxyView();
  OUTLINED_FUNCTION_90_0((uint64_t)v8.super_class, sel_didMoveToSuperview, v1, v2, v3, v4, v5, v6, v8);
  SystemRootLayerProxyView.needsUpdateSystemRootLayerTransform.setter(1);
  return SystemRootLayerProxyView.registerForGeometryChanges()();
}

uint64_t SystemRootLayerProxyView.layoutSubviews()()
{
  void *v0;
  _QWORD *v1;
  double v2;
  double v3;
  _QWORD *v4;
  double MidX;
  objc_super v7;
  CGRect v8;
  CGRect v9;

  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for SystemRootLayerProxyView();
  objc_msgSendSuper2(&v7, sel_layoutSubviews);
  v1 = SystemRootLayerProxyView.displayCornerView.getter();
  v2 = SystemRootLayerProxyView.preferredContentSize.getter();
  objc_msgSend(v1, sel_setBounds_, 0.0, 0.0, v2, v3);

  v4 = SystemRootLayerProxyView.displayCornerView.getter();
  objc_msgSend(v0, sel_bounds);
  MidX = CGRectGetMidX(v8);
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v4, sel_setCenter_, MidX, CGRectGetMidY(v9));

  SystemRootLayerProxyView.updateDisplayCornerView()();
  SystemRootLayerProxyView.needsUpdateSystemRootLayerTransform.setter(1);
  return SystemRootLayerProxyView.updateSystemRootLayerTransformIfNeeded()();
}

void SystemRootLayerProxyView.updateDisplayCornerView()()
{
  void *v0;
  void *v1;
  _QWORD *v2;
  double v3;
  CGFloat v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  id v11;
  CGMutablePathRef Mutable;
  void (*v13)(CGMutablePathRef);
  CGPath *v14;
  _QWORD *v15;
  CGAffineTransform transform;
  CGRect v17;
  CGRect v18;

  v1 = v0;
  v2 = SystemRootLayerProxyView.displayCornerView.getter();
  objc_msgSend(v2, sel_bounds);
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;

  v11 = objc_msgSend(v1, sel_traitCollection);
  objc_msgSend(v11, sel_displayCornerRadius);

  Mutable = CGPathCreateMutable();
  v17.origin.x = v4;
  v17.origin.y = v6;
  v17.size.width = v8;
  v17.size.height = v10;
  v18 = CGRectInset(v17, -200.0, -200.0);
  transform.a = 1.0;
  transform.b = 0.0;
  transform.c = 0.0;
  transform.d = 1.0;
  transform.tx = 0.0;
  transform.ty = 0.0;
  CGMutablePathRef.addRect(_:transform:)((__C::CGRect)v18, &transform);
  CGPathAddContinuousRoundedRect();
  v15 = SystemRootLayerProxyView.displayCornerView.getter();
  v13 = *(void (**)(CGMutablePathRef))((*MEMORY[0x1E0DEEDD8] & *v15) + 0x90);
  v14 = Mutable;
  v13(Mutable);

}

uint64_t SystemRootLayerProxyView.updateSystemRootLayerTransformIfNeeded()()
{
  uint64_t v0;
  uint64_t result;

  if (*(_BYTE *)(v0
                + OBJC_IVAR____TtC15ConversationKitP33_F76A9C58291D108FF33107E36997693224SystemRootLayerProxyView_needsUpdateSystemRootLayerTransform) == 1)
  {
    SystemRootLayerProxyView.updateSystemRootLayerTransform()();
    return SystemRootLayerProxyView.needsUpdateSystemRootLayerTransform.setter(0);
  }
  return result;
}

void SystemRootLayerProxyView.updateSystemRootLayerTransform()()
{
  void *v0;
  id v1;
  double v2;
  double v3;
  double v4;
  double v5;
  id v6;
  double v7;
  double v8;
  double v9;
  double v10;
  id v11;
  id v12;
  double MidX;
  double MidY;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  _QWORD *v26;
  id v27;
  CGAffineTransform v28;
  CGAffineTransform v29;
  CGAffineTransform v30;
  CGRect v31;
  CGRect v32;
  CGRect v33;
  CGRect v34;

  v1 = objc_msgSend(v0, sel_window);
  if (v1)
  {
    v27 = v1;
    objc_msgSend(v0, sel_bounds);
    v3 = v2;
    objc_msgSend(v0, sel_bounds);
    v5 = v3 / v4;
    v6 = objc_msgSend(v27, sel_screen);
    objc_msgSend(v6, sel_scale);
    v8 = v7;

    v9 = SystemRootLayerProxyView.preferredContentSize.getter();
    SystemRootLayerProxyView.preferredContentSize.getter();
    if (vabdd_f64(v5, v9 / v10) >= 0.01)
    {

    }
    else
    {
      v11 = objc_msgSend(v27, sel_screen);
      v12 = objc_msgSend(v11, sel_fixedCoordinateSpace);

      objc_msgSend(v12, sel_bounds);
      MidX = CGRectGetMidX(v31);
      objc_msgSend(v12, sel_bounds);
      MidY = CGRectGetMidY(v32);
      objc_msgSend(v0, sel_bounds);
      v15 = CGRectGetMidX(v33);
      objc_msgSend(v0, sel_bounds);
      objc_msgSend(v0, sel_convertPoint_toCoordinateSpace_, v12, v15, CGRectGetMidY(v34));
      v17 = v16;
      v19 = v18;
      objc_msgSend(v0, sel_bounds);
      v21 = v20 / SystemRootLayerProxyView.preferredContentSize.getter();
      objc_msgSend(v0, sel_bounds);
      v23 = v22;
      SystemRootLayerProxyView.preferredContentSize.getter();
      if (v21 > v23 / v24)
        v25 = v21;
      else
        v25 = v23 / v24;
      v30.a = 1.0;
      v30.b = 0.0;
      v30.c = 0.0;
      v30.d = 1.0;
      v30.tx = 0.0;
      v30.ty = 0.0;
      if (fabs(v25 + -1.0) >= 0.01)
      {
        CGAffineTransformTranslate(&v29, &v30, v8 * (v17 - MidX), v8 * (v19 - MidY));
        v30 = v29;
        CGAffineTransformScale(&v29, &v30, v25, v25);
        v30 = v29;
      }
      SystemRootLayerProxyView.systemRootLayerTransform.setter(&v30);
      v26 = SystemRootLayerProxyView.displayCornerView.getter();
      v29.a = 1.0;
      v29.b = 0.0;
      v29.c = 0.0;
      v29.d = 1.0;
      v29.tx = 0.0;
      v29.ty = 0.0;
      CGAffineTransformScale(&v28, &v29, v25, v25);
      v29 = v28;
      objc_msgSend(v26, sel_setTransform_, &v29);

      swift_unknownObjectRelease();
    }
  }
}

void SystemRootLayerProxyView._updateSystemRootLayerTransformOnActiveCall()()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  __int128 v17;
  __int128 v18;
  NSObject *v19;
  _OWORD v20[2];
  uint64_t v21;
  uint64_t v22;

  v1 = v0;
  if (one-time initialization token for sharedMonitor != -1)
    swift_once();
  v2 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)static ScreenSharingStateMonitor.sharedMonitor)
                                        + 0x128))();
  if (v2)
  {
    v19 = v2;
    v3 = -[NSObject screenShareAttributes](v2, sel_screenShareAttributes);
    if (v3)
    {
      v4 = v3;
      v17 = *(_OWORD *)(v1
                      + OBJC_IVAR____TtC15ConversationKitP33_F76A9C58291D108FF33107E36997693224SystemRootLayerProxyView_systemRootLayerTransform
                      + 16);
      v18 = *(_OWORD *)(v1
                      + OBJC_IVAR____TtC15ConversationKitP33_F76A9C58291D108FF33107E36997693224SystemRootLayerProxyView_systemRootLayerTransform);
      v5 = *(_QWORD *)(v1
                     + OBJC_IVAR____TtC15ConversationKitP33_F76A9C58291D108FF33107E36997693224SystemRootLayerProxyView_systemRootLayerTransform
                     + 32);
      v6 = *(_QWORD *)(v1
                     + OBJC_IVAR____TtC15ConversationKitP33_F76A9C58291D108FF33107E36997693224SystemRootLayerProxyView_systemRootLayerTransform
                     + 40);
      v7 = (void *)objc_opt_self();
      v8 = v4;
      v20[0] = v18;
      v20[1] = v17;
      v21 = v5;
      v22 = v6;
      v9 = objc_msgSend(v7, sel_valueWithCGAffineTransform_, v20);
      objc_msgSend(v8, sel_setSystemRootLayerTransform_, v9);

      -[NSObject setScreenShareAttributes:](v19, sel_setScreenShareAttributes_, v8);
      return;
    }
    if (one-time initialization token for screenSharing != -1)
      swift_once();
    v13 = type metadata accessor for Logger();
    __swift_project_value_buffer(v13, (uint64_t)&static Log.screenSharing);
    v14 = Logger.logObject.getter();
    v15 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      _os_log_impl(&dword_1BD004000, v14, v15, "Could not find current screen share attributes", v16, 2u);
      MEMORY[0x1C3B751B8](v16, -1, -1);
    }

  }
  else
  {
    if (one-time initialization token for screenSharing != -1)
      swift_once();
    v10 = type metadata accessor for Logger();
    __swift_project_value_buffer(v10, (uint64_t)&static Log.screenSharing);
    v19 = Logger.logObject.getter();
    v11 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v19, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_1BD004000, v19, v11, "Could not find active call to send updated screen share details", v12, 2u);
      MEMORY[0x1C3B751B8](v12, -1, -1);
    }
  }

}

uint64_t SystemRootLayerProxyView.updateSystemRootLayerTransformOnActiveCall()()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKitP33_F76A9C58291D108FF33107E36997693224SystemRootLayerProxyView_updateSystemRootLayerTransformOnActiveCallDebouncer];
  if (v4)
  {
    swift_retain();
    v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
    MEMORY[0x1C3B73268](v4, MEMORY[0x1E0DEE9C0] + 8, v5, MEMORY[0x1E0DEDB38]);
    swift_release();
  }
  v6 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload((uint64_t)v3, 1, 1, v6);
  type metadata accessor for MainActor();
  v7 = v0;
  v8 = static MainActor.shared.getter();
  v9 = (_QWORD *)swift_allocObject();
  v10 = MEMORY[0x1E0DF06E8];
  v9[2] = v8;
  v9[3] = v10;
  v9[4] = v7;
  v11 = _sScTss5Error_pRs_rlE8priority9operationScTyxsAA_pGScPSg_xyYaKYAcntcfCyt_Tgm5((uint64_t)v3, (uint64_t)&async function pointer to partial apply for closure #1 in SystemRootLayerProxyView.updateSystemRootLayerTransformOnActiveCall(), (uint64_t)v9);
  return SystemRootLayerProxyView.updateSystemRootLayerTransformOnActiveCallDebouncer.setter(v11);
}

uint64_t closure #1 in SystemRootLayerProxyView.updateSystemRootLayerTransformOnActiveCall()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[2] = a4;
  v5 = type metadata accessor for ContinuousClock();
  v4[3] = v5;
  v4[4] = *(_QWORD *)(v5 - 8);
  v4[5] = swift_task_alloc();
  type metadata accessor for MainActor();
  v4[6] = static MainActor.shared.getter();
  v4[7] = dispatch thunk of Actor.unownedExecutor.getter();
  v4[8] = v6;
  return swift_task_switch();
}

uint64_t closure #1 in SystemRootLayerProxyView.updateSystemRootLayerTransformOnActiveCall()()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  v1 = (uint64_t *)(*(_QWORD *)(v0 + 16)
                 + OBJC_IVAR____TtC15ConversationKitP33_F76A9C58291D108FF33107E36997693224SystemRootLayerProxyView_updateSystemRootLayerTransformOnActiveCallDebounceDelay);
  v3 = *v1;
  v2 = v1[1];
  ContinuousClock.init()();
  v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&async function pointer to specialized Clock.sleep(for:tolerance:)
                                                                        + async function pointer to specialized Clock.sleep(for:tolerance:));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v4;
  *v4 = v0;
  v4[1] = closure #1 in SystemRootLayerProxyView.updateSystemRootLayerTransformOnActiveCall();
  return v6(v3, v2, 0, 0, 1);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 24);
  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch();
}

{
  uint64_t v0;

  swift_release();
  SystemRootLayerProxyView._updateSystemRootLayerTransformOnActiveCall()();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v0 + 8));
}

void SystemRootLayerProxyView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id SystemRootLayerProxyView.__deallocating_deinit()
{
  return SystemRootLayerProxyView.__deallocating_deinit(0, type metadata accessor for SystemRootLayerProxyView);
}

id SystemRootLayerProxyViewController.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

char *SystemRootLayerProxyViewController.init()()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  char *v6;
  id v7;
  objc_class *v8;
  id v9;
  void *v10;
  char *v11;
  id v12;
  uint64_t v13;
  objc_super v15;

  v1 = type metadata accessor for NSNotificationCenter.Publisher();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit34SystemRootLayerProxyViewController_windowSceneOrientationSubscription] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit34SystemRootLayerProxyViewController_orientationTraitSubscription] = 0;
  v5 = objc_allocWithZone((Class)type metadata accessor for SystemRootLayerProxyView());
  v6 = v0;
  v7 = objc_msgSend(v5, sel_init);
  *(_QWORD *)&v6[OBJC_IVAR____TtC15ConversationKit34SystemRootLayerProxyViewController_systemRootLayerProxyView] = v7;

  v8 = (objc_class *)type metadata accessor for SystemRootLayerProxyViewController();
  v15.receiver = v6;
  v15.super_class = v8;
  v9 = objc_msgSendSuper2(&v15, sel_initWithNibName_bundle_, 0, 0);
  v10 = (void *)objc_opt_self();
  v11 = (char *)v9;
  v12 = objc_msgSend(v10, sel_defaultCenter);
  NSNotificationCenter.publisher(for:object:)();

  OUTLINED_FUNCTION_7_0();
  swift_unknownObjectWeakInit();
  lazy protocol witness table accessor for type NSNotificationCenter.Publisher and conformance NSNotificationCenter.Publisher();
  v13 = Publisher<>.sink(receiveValue:)();
  swift_release();

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  *(_QWORD *)&v11[OBJC_IVAR____TtC15ConversationKit34SystemRootLayerProxyViewController_windowSceneOrientationSubscription] = v13;
  swift_release();
  return v11;
}

uint64_t type metadata accessor for SystemRootLayerProxyView()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for SystemRootLayerProxyViewController()
{
  return objc_opt_self();
}

uint64_t sub_1BD0EBDE0()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void closure #1 in SystemRootLayerProxyViewController.init()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  void *v4;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = (void *)MEMORY[0x1C3B752C0](v2);
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v3, sel_setPreferredContentSize_, SystemRootLayerProxyView.preferredContentSize.getter());

  }
}

void partial apply for closure #1 in SystemRootLayerProxyViewController.init()(uint64_t a1)
{
  uint64_t v1;

  closure #1 in SystemRootLayerProxyViewController.init()(a1, v1);
}

id SystemRootLayerProxyViewController.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void SystemRootLayerProxyViewController.init(coder:)()
{
  char *v0;

  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit34SystemRootLayerProxyViewController_windowSceneOrientationSubscription] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit34SystemRootLayerProxyViewController_orientationTraitSubscription] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Void __swiftcall SystemRootLayerProxyViewController.loadView()()
{
  char *v0;

  objc_msgSend(v0, sel_setView_, *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit34SystemRootLayerProxyViewController_systemRootLayerProxyView]);
}

Swift::Void __swiftcall SystemRootLayerProxyViewController.viewDidLoad()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  objc_super v7;

  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for SystemRootLayerProxyViewController();
  OUTLINED_FUNCTION_90_0((uint64_t)v7.super_class, sel_viewDidLoad, v1, v2, v3, v4, v5, v6, v7);
  objc_msgSend(v0, sel_setPreferredContentSize_, SystemRootLayerProxyView.preferredContentSize.getter());
}

Swift::Void __swiftcall SystemRootLayerProxyViewController.viewDidMove(to:shouldAppearOrDisappear:)(UIWindow_optional *to, Swift::Bool shouldAppearOrDisappear)
{
  void *v2;
  void *v3;
  objc_super v6;

  v3 = v2;
  v6.receiver = v3;
  v6.super_class = (Class)type metadata accessor for SystemRootLayerProxyViewController();
  -[UIWindow_optional viewDidMoveToWindow:shouldAppearOrDisappear:](&v6, sel_viewDidMoveToWindow_shouldAppearOrDisappear_, to, shouldAppearOrDisappear);
  objc_msgSend(v3, sel_setPreferredContentSize_, SystemRootLayerProxyView.preferredContentSize.getter());
}

void SystemRootLayerProxyViewController.viewWillTransition(to:with:)(void *a1, double a2, double a3)
{
  void *v3;
  uint64_t v7;
  void *v8;
  id v9;
  _QWORD v10[6];
  objc_super v11;

  v11.receiver = v3;
  v11.super_class = (Class)type metadata accessor for SystemRootLayerProxyViewController();
  objc_msgSendSuper2(&v11, sel_viewWillTransitionToSize_withTransitionCoordinator_, a1, a2, a3);
  v7 = OUTLINED_FUNCTION_7_0();
  *(_QWORD *)(v7 + 16) = v3;
  v10[4] = partial apply for closure #1 in SystemRootLayerProxyViewController.viewWillTransition(to:with:);
  v10[5] = v7;
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 1107296256;
  v10[2] = thunk for @escaping @callee_guaranteed (@guaranteed UIViewControllerTransitionCoordinatorContext) -> ();
  v10[3] = &block_descriptor_14;
  v8 = _Block_copy(v10);
  v9 = v3;
  swift_release();
  objc_msgSend(a1, sel_animateAlongsideTransition_completion_, 0, v8);
  _Block_release(v8);
}

uint64_t sub_1BD0EC1F8()
{
  uint64_t v0;

  return swift_deallocObject();
}

id partial apply for closure #1 in SystemRootLayerProxyViewController.viewWillTransition(to:with:)()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16)+ OBJC_IVAR____TtC15ConversationKit34SystemRootLayerProxyViewController_systemRootLayerProxyView), sel_setNeedsLayout);
}

Swift::Bool __swiftcall SystemRootLayerProxyViewController._canShowWhileLocked()()
{
  return 1;
}

id SystemRootLayerProxyViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)MEMORY[0x1C3B72E00]();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void SystemRootLayerProxyViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id SystemRootLayerProxyViewController.__deallocating_deinit(uint64_t a1)
{
  return SystemRootLayerProxyView.__deallocating_deinit(a1, type metadata accessor for SystemRootLayerProxyViewController);
}

id SystemRootLayerProxyView.__deallocating_deinit(uint64_t a1, uint64_t (*a2)(void))
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  objc_super v10;

  v10.receiver = v2;
  v10.super_class = (Class)a2();
  return OUTLINED_FUNCTION_90_0((uint64_t)v10.super_class, sel_dealloc, v3, v4, v5, v6, v7, v8, v10);
}

id SystemRootLayerProxy.makeUIViewController(context:)()
{
  return objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SystemRootLayerProxyViewController()), sel_init);
}

unint64_t lazy protocol witness table accessor for type SystemRootLayerProxy and conformance SystemRootLayerProxy()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SystemRootLayerProxy and conformance SystemRootLayerProxy;
  if (!lazy protocol witness table cache variable for type SystemRootLayerProxy and conformance SystemRootLayerProxy)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for SystemRootLayerProxy, &type metadata for SystemRootLayerProxy);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SystemRootLayerProxy and conformance SystemRootLayerProxy);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SystemRootLayerProxy and conformance SystemRootLayerProxy;
  if (!lazy protocol witness table cache variable for type SystemRootLayerProxy and conformance SystemRootLayerProxy)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for SystemRootLayerProxy, &type metadata for SystemRootLayerProxy);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SystemRootLayerProxy and conformance SystemRootLayerProxy);
  }
  return result;
}

uint64_t protocol witness for UIViewControllerRepresentable.sizeThatFits(_:uiViewController:context:) in conformance SystemRootLayerProxy()
{
  return UIViewControllerRepresentable.sizeThatFits(_:uiViewController:context:)();
}

uint64_t protocol witness for static View._makeView(view:inputs:) in conformance SystemRootLayerProxy()
{
  lazy protocol witness table accessor for type SystemRootLayerProxy and conformance SystemRootLayerProxy();
  return static UIViewControllerRepresentable._makeView(view:inputs:)();
}

uint64_t protocol witness for static View._makeViewList(view:inputs:) in conformance SystemRootLayerProxy()
{
  lazy protocol witness table accessor for type SystemRootLayerProxy and conformance SystemRootLayerProxy();
  return static UIViewControllerRepresentable._makeViewList(view:inputs:)();
}

void protocol witness for View.body.getter in conformance SystemRootLayerProxy()
{
  lazy protocol witness table accessor for type SystemRootLayerProxy and conformance SystemRootLayerProxy();
  UIViewControllerRepresentable.body.getter();
  __break(1u);
}

uint64_t method lookup function for SystemRootLayerProxyViewController()
{
  return swift_lookUpClassMethod();
}

ValueMetadata *type metadata accessor for SystemRootLayerProxy()
{
  return &type metadata for SystemRootLayerProxy;
}

uint64_t sub_1BD0EC588()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in SystemRootLayerProxyView.updateSystemRootLayerTransformOnActiveCall()(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = partial apply for closure #1 in AsyncCancellableTimer.wait(with:);
  return closure #1 in SystemRootLayerProxyView.updateSystemRootLayerTransformOnActiveCall()(a1, v4, v5, v6);
}

char *keypath_get_selector_frame()
{
  return sel_frame;
}

void sub_1BD0EC62C(id *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  objc_msgSend(*a1, sel_frame);
  *a2 = v3;
  a2[1] = v4;
  a2[2] = v5;
  a2[3] = v6;
  OUTLINED_FUNCTION_0();
}

char *keypath_get_selector_center()
{
  return sel_center;
}

void sub_1BD0EC66C(id *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  objc_msgSend(*a1, sel_center);
  *a2 = v3;
  a2[1] = v4;
  OUTLINED_FUNCTION_0();
}

id sub_1BD0EC698(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCenter_, *a1, a1[1]);
}

char *keypath_get_selector_transform()
{
  return sel_transform;
}

void specialized closure #1 in SystemRootLayerProxyView.registerForPropertyChangesOf<A>(_:on:)(_OWORD *a1, uint64_t a2)
{
  __int128 v2;
  _OWORD v3[3];

  v2 = a1[1];
  v3[0] = *a1;
  v3[1] = v2;
  v3[2] = a1[2];
  specialized closure #1 in SystemRootLayerProxyView.registerForPropertyChangesOf<A>(_:on:)((uint64_t)v3, a2);
}

void partial apply for specialized closure #1 in SystemRootLayerProxyView.registerForPropertyChangesOf<A>(_:on:)(_OWORD *a1)
{
  uint64_t v1;

  specialized closure #1 in SystemRootLayerProxyView.registerForPropertyChangesOf<A>(_:on:)(a1, v1);
}

void partial apply for specialized closure #1 in SystemRootLayerProxyView.registerForPropertyChangesOf<A>(_:on:)(uint64_t a1)
{
  uint64_t v1;

  specialized closure #1 in SystemRootLayerProxyView.registerForPropertyChangesOf<A>(_:on:)(a1, v1);
}

{
  uint64_t v1;

  specialized closure #1 in SystemRootLayerProxyView.registerForPropertyChangesOf<A>(_:on:)(a1, v1);
}

uint64_t lazy protocol witness table accessor for type NSObject.KeyValueObservingPublisher<UIView, CGAffineTransform> and conformance NSObject.KeyValueObservingPublisher<A, B>(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CB2118], v4);
    atomic_store(result, a1);
  }
  return result;
}

void partial apply for closure #1 in SystemRootLayerProxyView.needsUpdateSystemRootLayerTransform.didset()
{
  SystemRootLayerProxyView.updateSystemRootLayerTransformIfNeeded()();
  OUTLINED_FUNCTION_0();
}

double Participant.screenTransform.getter@<D0>(CGFloat *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  CGFloat m31;
  uint64_t v18;
  unint64_t v19;
  CGFloat v20;
  id v21;
  id v22;
  uint64_t v23;
  double result;
  uint64_t v25;
  double m24;
  uint64_t v27;
  CGFloat m23;
  uint64_t v29;
  CGFloat m22;
  uint64_t v31;
  CGFloat m21;
  uint64_t v33;
  CGFloat m14;
  uint64_t v35;
  CGFloat m13;
  uint64_t v37;
  CGFloat m12;
  uint64_t v39;
  CGFloat m11;
  char v41[8];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68[216];
  CATransform3D v69;

  Participant.screenInfo.getter();
  v10 = OUTLINED_FUNCTION_14_2();
  if (*(_QWORD *)(v1 + *(int *)(v10 + 28)))
  {
    OUTLINED_FUNCTION_81_6(v10, v11, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?, v12, v13, v14, v15, v16, v25, v27, v29, v31, v33, v35, v37, v39, v41[0], v42, v43,
      v44,
      v45,
      v46,
      v47,
      v48,
      v49,
      v50,
      v51,
      v52,
      v53,
      v54,
      v55,
      v56,
      v57,
      v58,
      v59,
      v60,
      v61,
      v62,
      v63,
      v64,
      v65,
      v66,
      v67,
      v68[0]);
    if (v44 == 1)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v41, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
      m12 = *(double *)(MEMORY[0x1E0CD2610] + 8);
      m11 = *MEMORY[0x1E0CD2610];
      m14 = *(double *)(MEMORY[0x1E0CD2610] + 24);
      m13 = *(double *)(MEMORY[0x1E0CD2610] + 16);
      m22 = *(double *)(MEMORY[0x1E0CD2610] + 40);
      m21 = *(double *)(MEMORY[0x1E0CD2610] + 32);
      m31 = *(double *)(MEMORY[0x1E0CD2610] + 64);
      m24 = *(double *)(MEMORY[0x1E0CD2610] + 56);
      m23 = *(double *)(MEMORY[0x1E0CD2610] + 48);
      v2 = *(_QWORD *)(MEMORY[0x1E0CD2610] + 72);
      v3 = *(_QWORD *)(MEMORY[0x1E0CD2610] + 80);
      v4 = *(_QWORD *)(MEMORY[0x1E0CD2610] + 88);
      v5 = *(_QWORD *)(MEMORY[0x1E0CD2610] + 96);
      v6 = *(_QWORD *)(MEMORY[0x1E0CD2610] + 104);
      v7 = *(_QWORD *)(MEMORY[0x1E0CD2610] + 112);
      v8 = *(_QWORD *)(MEMORY[0x1E0CD2610] + 120);
    }
    else
    {
      v19 = v48;
      outlined destroy of Participant.ScreenInfo((uint64_t)v41);
      static Participant.screenRotationFor(_:)(v19);
      OUTLINED_FUNCTION_55_12(&v69, v20);
      m12 = v69.m12;
      m11 = v69.m11;
      m14 = v69.m14;
      m13 = v69.m13;
      m22 = v69.m22;
      m21 = v69.m21;
      m31 = v69.m31;
      m24 = v69.m24;
      m23 = v69.m23;
      OUTLINED_FUNCTION_70_7();
    }
  }
  else
  {
    OUTLINED_FUNCTION_81_6(v10, v11, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?, v12, v13, v14, v15, v16, v25, v27, v29, v31, v33, v35, v37, v39, v41[0], v42, v43,
      v44,
      v45,
      v46,
      v47,
      v48,
      v49,
      v50,
      v51,
      v52,
      v53,
      v54,
      v55,
      v56,
      v57,
      v58,
      v59,
      v60,
      v61,
      v62,
      v63,
      v64,
      v65,
      v66,
      v67,
      v68[0]);
    if (v44 == 1)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v41, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
      v18 = 1;
    }
    else
    {
      v18 = v47;
      outlined destroy of Participant.ScreenInfo((uint64_t)v41);
    }
    v21 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
    v22 = objc_msgSend(v21, sel_userInterfaceIdiom);

    if (one-time initialization token for shared != -1)
      swift_once();
    v23 = static Defaults.shared;
    swift_retain();
    specialized static Participant.transformForLocalParticipant(deviceOrientation:cameraType:currentIdiom:defaults:)(v18, 2, (unint64_t)v22, v23, &v69.m11);
    m12 = v69.m12;
    m11 = v69.m11;
    m14 = v69.m14;
    m13 = v69.m13;
    m22 = v69.m22;
    m21 = v69.m21;
    m31 = v69.m31;
    m24 = v69.m24;
    m23 = v69.m23;
    OUTLINED_FUNCTION_70_7();
    swift_release();
  }
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v68, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
  *a1 = m11;
  a1[1] = m12;
  a1[2] = m13;
  a1[3] = m14;
  a1[4] = m21;
  a1[5] = m22;
  result = m24;
  a1[6] = m23;
  a1[7] = m24;
  a1[8] = m31;
  *((_QWORD *)a1 + 9) = v2;
  *((_QWORD *)a1 + 10) = v3;
  *((_QWORD *)a1 + 11) = v4;
  *((_QWORD *)a1 + 12) = v5;
  *((_QWORD *)a1 + 13) = v6;
  *((_QWORD *)a1 + 14) = v7;
  *((_QWORD *)a1 + 15) = v8;
  return result;
}

uint64_t ParticipantViewModel.ParticipantDetails.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_33_0();
  return OUTLINED_FUNCTION_31_0(a1, v1, v3, *(uint64_t (**)(void))(*(_QWORD *)(v3 - 8) + 16));
}

uint64_t ParticipantViewModel.ParticipantDetails.identifier.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_33_0();
  return OUTLINED_FUNCTION_31_0(v1, a1, v3, *(uint64_t (**)(void))(*(_QWORD *)(v3 - 8) + 40));
}

uint64_t (*ParticipantViewModel.ParticipantDetails.identifier.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ParticipantViewModel.ParticipantDetails.displayName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ParticipantViewModel.ParticipantDetails(0) + 20));
  swift_bridgeObjectRetain();
  return v1;
}

void ParticipantViewModel.ParticipantDetails.displayName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + *(int *)(OUTLINED_FUNCTION_66_8() + 20));
  swift_bridgeObjectRelease();
  *v5 = v3;
  v5[1] = a2;
  OUTLINED_FUNCTION_18();
}

uint64_t (*ParticipantViewModel.ParticipantDetails.displayName.modify())(_QWORD)
{
  type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ParticipantViewModel.ParticipantDetails.isMomentsAvailable.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ParticipantViewModel.ParticipantDetails(0) + 24));
}

void ParticipantViewModel.ParticipantDetails.isMomentsAvailable.setter()
{
  char v0;
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_10_42() + 24)) = v0;
  OUTLINED_FUNCTION_0();
}

uint64_t (*ParticipantViewModel.ParticipantDetails.isMomentsAvailable.modify())(_QWORD)
{
  type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ParticipantViewModel.ParticipantDetails.isLocal.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ParticipantViewModel.ParticipantDetails(0) + 28));
}

void ParticipantViewModel.ParticipantDetails.isLocal.setter()
{
  char v0;
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_10_42() + 28)) = v0;
  OUTLINED_FUNCTION_0();
}

uint64_t (*ParticipantViewModel.ParticipantDetails.isLocal.modify())(_QWORD)
{
  type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ParticipantViewModel.ParticipantDetails.isKickingAvailable.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ParticipantViewModel.ParticipantDetails(0) + 32));
}

void ParticipantViewModel.ParticipantDetails.isKickingAvailable.setter()
{
  char v0;
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_10_42() + 32)) = v0;
  OUTLINED_FUNCTION_0();
}

uint64_t (*ParticipantViewModel.ParticipantDetails.isKickingAvailable.modify())(_QWORD)
{
  type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ParticipantViewModel.ParticipantDetails.isMostActive.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ParticipantViewModel.ParticipantDetails(0) + 36));
}

void ParticipantViewModel.ParticipantDetails.isMostActive.setter()
{
  char v0;
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_10_42() + 36)) = v0;
  OUTLINED_FUNCTION_0();
}

uint64_t (*ParticipantViewModel.ParticipantDetails.isMostActive.modify())(_QWORD)
{
  type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ParticipantViewModel.ParticipantDetails.isPreviewingReaction.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ParticipantViewModel.ParticipantDetails(0) + 40));
}

void ParticipantViewModel.ParticipantDetails.isPreviewingReaction.setter()
{
  char v0;
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_10_42() + 40)) = v0;
  OUTLINED_FUNCTION_0();
}

uint64_t (*ParticipantViewModel.ParticipantDetails.isPreviewingReaction.modify())(_QWORD)
{
  type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ParticipantViewModel.ParticipantDetails.isCameraMixedWithScreen.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ParticipantViewModel.ParticipantDetails(0) + 44));
}

void ParticipantViewModel.ParticipantDetails.isCameraMixedWithScreen.setter()
{
  char v0;
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_10_42() + 44)) = v0;
  OUTLINED_FUNCTION_0();
}

uint64_t (*ParticipantViewModel.ParticipantDetails.isCameraMixedWithScreen.modify())(_QWORD)
{
  type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
  return TPNumberPadCharacter.rawValue.getter;
}

void ParticipantViewModel.ParticipantDetails.init(participant:isMostActive:isPreviewingReaction:isLocalMemberAuthorizedToChangeGroupMembership:)()
{
  int v0;
  int v1;
  char v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t *v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  int v31;
  int v32;
  _BYTE v33[80];
  void *v34;
  char v35;

  OUTLINED_FUNCTION_93();
  v31 = v1;
  v32 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v8 = OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_79();
  v12 = v10 - v11;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v31 - v14;
  v16 = OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_5(v16);
  Participant.contactDetails.getter();
  v17 = v34;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_53();

  v18 = Participant.name(_:)();
  v20 = v19;
  OUTLINED_FUNCTION_25();
  v21 = (int *)OUTLINED_FUNCTION_83_6();
  v22 = (uint64_t *)(v7 + v21[5]);
  *v22 = v18;
  v22[1] = v20;
  LODWORD(v18) = *(unsigned __int8 *)(v5 + *(int *)(v8 + 24));
  _s15ConversationKit11ParticipantVWOcTm_2(v5, (uint64_t)v15, type metadata accessor for Participant);
  if ((_DWORD)v18 == 1)
  {
    Participant.hasReducedQualityVideo.getter();
    v24 = v23 ^ 1;
  }
  else
  {
    v24 = 0;
  }
  OUTLINED_FUNCTION_110((uint64_t)v15);
  *(_BYTE *)(v7 + v21[6]) = v24 & 1;
  *(_BYTE *)(v7 + v21[7]) = *(_QWORD *)(v5 + *(int *)(v8 + 28)) == 0;
  Participant.isKickingAvailable.getter();
  v26 = v25;
  _s15ConversationKit11ParticipantVWOcTm_2(v5, v12, type metadata accessor for Participant);
  v27 = 0;
  if ((v26 & 1) != 0 && (v31 & 1) != 0)
  {
    Participant.canShowKickButtonOnVideoTile.getter();
    v27 = v28;
  }
  OUTLINED_FUNCTION_110(v12);
  *(_BYTE *)(v7 + v21[8]) = v27 & 1;
  *(_BYTE *)(v7 + v21[9]) = v3 & 1;
  *(_BYTE *)(v7 + v21[10]) = v32 & 1;
  Participant.videoInfo.getter();
  OUTLINED_FUNCTION_110(v5);
  outlined init with take of Participant.VideoInfo?((uint64_t)v33, (uint64_t)&v34, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
  v29 = (char)v34;
  if (v34)
  {
    v30 = v35;
    outlined release of LinearGradient((uint64_t)v33);
    v29 = v30 & 1;
  }
  *(_BYTE *)(v7 + v21[11]) = v29;
  OUTLINED_FUNCTION_52_1();
}

void ParticipantViewModel.init(participant:videoProviderType:isInGrid:isMostActive:isPipped:isPreviewingReaction:hasOtherInvitedParticipants:isLocalMemberAuthorizedToChangeGroupMembership:prefersSnapshotFadeAnimation:snapshotImage:allowsVideoCroppedByAspectRatio:shouldRegisterVideoLayers:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unsigned __int8 a21,uint64_t a22,unsigned __int8 a23,unsigned __int8 a24)
{
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  _DWORD v44[16];
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;

  OUTLINED_FUNCTION_93();
  v44[14] = v24;
  v44[15] = v25;
  v44[8] = v26;
  v44[12] = v27;
  v44[13] = v28;
  v30 = v29;
  v45 = v31;
  v44[11] = a24;
  v44[9] = a23;
  v46 = a22;
  v44[10] = a21;
  OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v32);
  OUTLINED_FUNCTION_79();
  MEMORY[0x1E0C80A78](v33);
  OUTLINED_FUNCTION_72_1();
  v35 = MEMORY[0x1E0C80A78](v34);
  MEMORY[0x1E0C80A78](v35);
  v47 = (char *)v44 - v36;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Participant.State, Participant.VideoInfo?));
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v38);
  OUTLINED_FUNCTION_77();
  v41 = v40 - v39;
  Participant.videoInfo.getter();
  v42 = v41 + *(int *)(v37 + 48);
  _s15ConversationKit11ParticipantVWOcTm_2(v30, v41, type metadata accessor for Participant.State);
  outlined init with take of Participant.VideoInfo?((uint64_t)&v48, v42, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
  type metadata accessor for Participant.State(0);
  v43 = (char *)&loc_1BD0ED10C + *((int *)qword_1BD0ED9A8 + swift_getEnumCaseMultiPayload());
  __asm { BR              X10 }
}

void sub_1BD0ED11C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  OUTLINED_FUNCTION_4_45();
  v3 = type metadata accessor for Date();
  OUTLINED_FUNCTION_75(v3);
  v4 = *(_QWORD *)(v0 + 80);
  OUTLINED_FUNCTION_7_51(v1, v4);
  OUTLINED_FUNCTION_67_6();
  ParticipantViewModel.init(inactiveParticipant:isMostActive:isPipped:hasOtherInvitedParticipants:isLocalMemberAuthorizedToChangeGroupMembership:)(v4, v5, v2 & 1, *(_QWORD *)(v0 + 64));
  OUTLINED_FUNCTION_31_27();
  OUTLINED_FUNCTION_34_17();
  OUTLINED_FUNCTION_52_1();
}

uint64_t ParticipantViewModel.init(audioOnlyParticipant:isMostActive:isPipped:isLocalMemberAuthorizedToChangeGroupMembership:)@<X0>(uint64_t a1@<X0>, char a2@<W2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  Class isa;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;

  v68 = a3;
  v69 = type metadata accessor for PersonNameComponents();
  v63 = *(_QWORD *)(v69 - 8);
  MEMORY[0x1E0C80A78](v69);
  v6 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Participant(0);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v61 - v11;
  v13 = type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s15ConversationKit11ParticipantVWOcTm_2(a1, (uint64_t)v12, type metadata accessor for Participant);
  v67 = v15;
  ParticipantViewModel.ParticipantDetails.init(participant:isMostActive:isPreviewingReaction:isLocalMemberAuthorizedToChangeGroupMembership:)();
  v16 = *(_QWORD *)(a1 + *(int *)(v7 + 28));
  v70 = a1;
  if (v16)
  {
    Participant.contactDetails.getter();
    v17 = v73;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    a1 = v70;
    v18 = Participant.name(_:)();
    v20 = v19;
    swift_bridgeObjectRelease();
    if ((a2 & 1) != 0)
    {
LABEL_3:
      swift_bridgeObjectRelease();
      v18 = 0;
      v20 = 0;
      v65 = 0;
      goto LABEL_6;
    }
  }
  else
  {
    v18 = 0;
    v20 = 0xE000000000000000;
    if ((a2 & 1) != 0)
      goto LABEL_3;
  }
  v65 = 0xE000000000000000;
LABEL_6:
  _s15ConversationKit11ParticipantVWOcTm_2(a1, (uint64_t)v10, type metadata accessor for Participant);
  v21 = *(void **)&v10[*(int *)(v7 + 28)];
  v66 = v18;
  v64 = v20;
  if (!v21)
  {
LABEL_14:
    v38 = (uint64_t)v10;
    _s15ConversationKit11ParticipantVWOcTm_2((uint64_t)v10, (uint64_t)v12, type metadata accessor for Participant);
    swift_retain();
    ParticipantContactDetailsCache.contactDetails(for:)((uint64_t)v12, v40, v41, v42, v43, v44, v45, v46, (uint64_t)v61, v62, v63, v64, v65, v66, (uint64_t)v67, v68, v69, v70, v71,
      v72);
    v39 = v75;
    v62 = v74;
    v63 = v76;
    v37 = v77;
    v69 = v78;
    v35 = v79;
    v36 = v73;
    v47 = v73;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_release();
    outlined destroy of AccountUpdateNotice((uint64_t)v12, type metadata accessor for Participant);
    goto LABEL_15;
  }
  v22 = v21;
  outlined bridged method (pb) of @objc TUHandle.siriDisplayName.getter(v22);
  if (!v24)
  {

    goto LABEL_14;
  }
  v25 = v23;
  v26 = v24;
  if ((objc_msgSend(v22, sel_shouldHideContact) & 1) == 0)
  {

    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  v61 = v10;
  swift_bridgeObjectRetain();
  PersonNameComponents.init()();
  PersonNameComponents.givenName.setter();
  PersonNameComponents.familyName.setter();
  v27 = v26;
  if (one-time initialization token for initials != -1)
    swift_once();
  swift_beginAccess();
  v28 = (id)static NSPersonNameComponentsFormatter.initials;
  isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
  v30 = objc_msgSend(v28, sel_stringFromPersonNameComponents_, isa);

  v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v33 = v32;

  (*(void (**)(char *, uint64_t))(v63 + 8))(v6, v69);
  v71 = v31;
  v72 = v33;
  lazy protocol witness table accessor for type String and conformance String();
  v69 = StringProtocol.localizedUppercase.getter();
  v35 = v34;

  swift_bridgeObjectRelease();
  v36 = 0;
  v62 = v25;
  v63 = v25;
  v37 = v27;
  v38 = (uint64_t)v61;
  v39 = v27;
LABEL_15:
  v48 = v64;
  if (v64)
    v49 = v65;
  else
    v49 = 0;
  if (v64)
    v50 = v66;
  else
    v50 = 0;
  v51 = *(_QWORD *)(v38 + *(int *)(v7 + 32));
  v61 = v36;
  v52 = v36;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v53 = v39;
  outlined destroy of AccountUpdateNotice(v38, type metadata accessor for Participant);
  swift_bridgeObjectRetain();
  outlined copy of (title: String, subtitle: String?)?(v50, v48);
  outlined consume of AnsweringMachineCallStatus?(0, 0);
  v54 = v52;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  outlined copy of (title: String, subtitle: String?)?(v50, v48);
  outlined consume of AnsweringMachineCallStatus?(v50, v48);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();

  swift_bridgeObjectRelease_n();
  outlined consume of AnsweringMachineCallStatus?(v50, v48);
  outlined destroy of AccountUpdateNotice(v70, type metadata accessor for Participant);
  v55 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantMonogramView.ViewModel));
  v56 = v68 + *(int *)(v55 + 48);
  outlined init with take of ParticipantViewModel.ParticipantDetails((uint64_t)v67, v68);
  v57 = v62;
  *(_QWORD *)v56 = v61;
  *(_QWORD *)(v56 + 8) = v57;
  v58 = v63;
  *(_QWORD *)(v56 + 16) = v53;
  *(_QWORD *)(v56 + 24) = v58;
  v59 = v69;
  *(_QWORD *)(v56 + 32) = v37;
  *(_QWORD *)(v56 + 40) = v59;
  *(_QWORD *)(v56 + 48) = v35;
  *(_QWORD *)(v56 + 56) = v51;
  *(_WORD *)(v56 + 64) = 1;
  *(_QWORD *)(v56 + 72) = v50;
  *(_QWORD *)(v56 + 80) = v48;
  *(_QWORD *)(v56 + 88) = 0;
  *(_QWORD *)(v56 + 96) = v49;
  type metadata accessor for ParticipantViewModel(0);
  return swift_storeEnumTagMultiPayload();
}

void ParticipantViewModel.init(videoParticipant:videoProviderType:overlayImageName:isMostActive:isLocalMemberAuthorizedToChangeGroupMembership:prefersSnapshotFadeAnimation:shouldRegisterVideoLayers:labelString:)(uint64_t a1@<X0>, char a2@<W1>, __int128 *a3@<X2>, int a4@<W3>, int a5@<W4>, int a6@<W5>, int a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _DWORD v39[4];
  int v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE v44[40];
  _BYTE v45[40];
  __int128 __src[8];

  v42 = a8;
  v41 = a7;
  v40 = a6;
  v43 = a10;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for Participant(0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)v39 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  Participant.videoProvider(for:)((uint64_t)__src);
  if (*((_QWORD *)&__src[1] + 1))
  {
    outlined init with take of Notice(__src, (uint64_t)v45);
    _s15ConversationKit11ParticipantVWOcTm_2(a1, (uint64_t)v21, type metadata accessor for Participant);
    ParticipantViewModel.ParticipantDetails.init(participant:isMostActive:isPreviewingReaction:isLocalMemberAuthorizedToChangeGroupMembership:)();
    outlined init with copy of IDSLookupManager((uint64_t)v45, (uint64_t)v44);
    Participant.videoTransform.getter(__src);
    outlined destroy of AccountUpdateNotice(a1, type metadata accessor for Participant);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
    v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantVideoView.ViewModel, ParticipantVideoOverlayView.ViewModel));
    v26 = (_BYTE *)(a9 + *(int *)(v25 + 48));
    outlined init with take of Participant.VideoInfo?((uint64_t)v44, (uint64_t)v26, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
    memcpy(v26 + 40, __src, 0x80uLL);
    v26[168] = v40 & 1;
    v26[169] = 0;
    v26[170] = v41 & 1;
    v26[171] = 0;
    v27 = a9 + *(int *)(v25 + 64);
    outlined init with take of Notice(a3, v27);
    v28 = v43;
    *(_QWORD *)(v27 + 40) = v42;
    *(_QWORD *)(v27 + 48) = v28;
    *(_BYTE *)(v27 + 104) = 1;
    outlined init with take of ParticipantViewModel.ParticipantDetails((uint64_t)v24, a9);
    type metadata accessor for ParticipantViewModel(0);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    v40 = a4;
    v41 = a5;
    v42 = (uint64_t)a3;
    swift_bridgeObjectRelease();
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)__src, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    v43 = static OS_os_log.conversationKit;
    v39[3] = static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_1BD645380;
    LOBYTE(__src[0]) = a2;
    v30 = String.init<A>(reflecting:)();
    v32 = v31;
    v33 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v29 + 56) = MEMORY[0x1E0DEA968];
    v34 = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v29 + 64) = v34;
    *(_QWORD *)(v29 + 32) = v30;
    *(_QWORD *)(v29 + 40) = v32;
    _s15ConversationKit11ParticipantVWOcTm_2(a1, (uint64_t)v18, type metadata accessor for Participant);
    __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v19);
    specialized >> prefix<A>(_:)((uint64_t)v18);
    v36 = v35;
    v38 = v37;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v18, &demangling cache variable for type metadata for Participant?);
    *(_QWORD *)(v29 + 96) = v33;
    *(_QWORD *)(v29 + 104) = v34;
    *(_QWORD *)(v29 + 72) = v36;
    *(_QWORD *)(v29 + 80) = v38;
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    _s15ConversationKit11ParticipantVWOcTm_2(a1, (uint64_t)v21, type metadata accessor for Participant);
    ParticipantViewModel.init(audioOnlyParticipant:isMostActive:isPipped:isLocalMemberAuthorizedToChangeGroupMembership:)((uint64_t)v21, 0, a9);
    __swift_destroy_boxed_opaque_existential_1(v42);
    outlined destroy of AccountUpdateNotice(a1, type metadata accessor for Participant);
  }
}

void ParticipantViewModel.init(monogramVideoParticipant:videoProviderType:isMostActive:isLocalMemberAuthorizedToChangeGroupMembership:prefersSnapshotFadeAnimation:shouldRegisterVideoLayers:)(uint64_t a1@<X0>, char a2@<W1>, int a3@<W2>, int a4@<W3>, int a5@<W4>, int a6@<W5>, uint64_t a7@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void *v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  Class isa;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  id v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  __int128 v93[11];
  _BYTE v94[40];
  _QWORD __src[17];

  LODWORD(v82) = a6;
  LODWORD(v81) = a5;
  v83 = a7;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v75 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for PersonNameComponents();
  v78 = *(_QWORD *)(v14 - 8);
  v79 = v14;
  MEMORY[0x1E0C80A78](v14);
  v77 = (uint64_t)&v75 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Participant(0);
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v75 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v75 - v20;
  v22 = type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v75 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  Participant.videoProvider(for:)((uint64_t)v93);
  if (*((_QWORD *)&v93[1] + 1))
  {
    outlined init with take of Notice(v93, (uint64_t)v94);
    _s15ConversationKit11ParticipantVWOcTm_2(a1, (uint64_t)v21, type metadata accessor for Participant);
    v80 = v24;
    ParticipantViewModel.ParticipantDetails.init(participant:isMostActive:isPreviewingReaction:isLocalMemberAuthorizedToChangeGroupMembership:)();
    outlined init with copy of IDSLookupManager((uint64_t)v94, (uint64_t)v93);
    Participant.videoTransform.getter(__src);
    memcpy((char *)&v93[2] + 8, __src, 0x80uLL);
    WORD4(v93[10]) = v81 & 1;
    WORD5(v93[10]) = v82 & 1;
    v81 = a1;
    _s15ConversationKit11ParticipantVWOcTm_2(a1, (uint64_t)v19, type metadata accessor for Participant);
    v25 = *(void **)&v19[*(int *)(v16 + 28)];
    v26 = v16;
    if (v25)
    {
      v27 = v25;
      outlined bridged method (pb) of @objc TUHandle.siriDisplayName.getter(v27);
      if (v29)
      {
        v30 = v28;
        v31 = v29;
        if ((objc_msgSend(v27, sel_shouldHideContact) & 1) != 0)
        {
          v32 = v30;
          v76 = v16;
          swift_bridgeObjectRetain();
          v33 = v77;
          PersonNameComponents.init()();
          PersonNameComponents.givenName.setter();
          PersonNameComponents.familyName.setter();
          if (one-time initialization token for initials != -1)
            swift_once();
          swift_beginAccess();
          v34 = (id)static NSPersonNameComponentsFormatter.initials;
          isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
          v36 = objc_msgSend(v34, sel_stringFromPersonNameComponents_, isa);

          v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          v39 = v38;

          (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v33, v79);
          v84 = v37;
          v85 = v39;
          lazy protocol witness table accessor for type String and conformance String();
          v82 = StringProtocol.localizedUppercase.getter();
          v41 = v40;

          swift_bridgeObjectRelease();
          v42 = 0;
          v78 = v32;
          v79 = v32;
          v43 = v31;
          v44 = v81;
          v26 = v76;
          goto LABEL_14;
        }

        swift_bridgeObjectRelease();
      }
      else
      {

      }
    }
    _s15ConversationKit11ParticipantVWOcTm_2((uint64_t)v19, (uint64_t)v21, type metadata accessor for Participant);
    swift_retain();
    ParticipantContactDetailsCache.contactDetails(for:)((uint64_t)v21, v57, v58, v59, v60, v61, v62, v63, v75, v76, v77, v78, v79, (uint64_t)v80, v81, v82, v83, v84, v85,
      (uint64_t)v86);
    v42 = v86;
    v31 = v88;
    v78 = v89;
    v79 = v87;
    v43 = v90;
    v82 = v91;
    v41 = v92;
    v64 = v86;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_release();
    outlined destroy of AccountUpdateNotice((uint64_t)v21, type metadata accessor for Participant);
    v44 = v81;
LABEL_14:
    v65 = *(_QWORD *)&v19[*(int *)(v26 + 32)];
    v66 = v42;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    outlined destroy of AccountUpdateNotice((uint64_t)v19, type metadata accessor for Participant);
    swift_bridgeObjectRetain();
    outlined consume of AnsweringMachineCallStatus?(0, 0);
    v67 = v66;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    outlined copy of (title: String, subtitle: String?)?(0, 0);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

    swift_bridgeObjectRelease_n();
    outlined consume of AnsweringMachineCallStatus?(0, 0);
    outlined destroy of AccountUpdateNotice(v44, type metadata accessor for Participant);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v94);
    v68 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantVideoView.ViewModel, ParticipantVideoOverlayView.ViewModel));
    v69 = v83;
    v70 = v83 + *(int *)(v68 + 64);
    v71 = v79;
    *(_QWORD *)v70 = v42;
    *(_QWORD *)(v70 + 8) = v71;
    v72 = v78;
    *(_QWORD *)(v70 + 16) = v31;
    *(_QWORD *)(v70 + 24) = v72;
    v73 = v82;
    *(_QWORD *)(v70 + 32) = v43;
    *(_QWORD *)(v70 + 40) = v73;
    *(_QWORD *)(v70 + 48) = v41;
    *(_QWORD *)(v70 + 56) = v65;
    *(_WORD *)(v70 + 64) = 0;
    *(_OWORD *)(v70 + 72) = 0u;
    *(_OWORD *)(v70 + 88) = 0u;
    *(_BYTE *)(v70 + 104) = 4;
    v74 = (void *)(v69 + *(int *)(v68 + 48));
    outlined init with take of ParticipantViewModel.ParticipantDetails((uint64_t)v80, v69);
    memcpy(v74, v93, 0xACuLL);
    type metadata accessor for ParticipantViewModel(0);
    swift_storeEnumTagMultiPayload();
    return;
  }
  LODWORD(v81) = a3;
  LODWORD(v82) = a4;
  v45 = v16;
  v46 = a1;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v93, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v80 = (char *)static OS_os_log.conversationKit;
  LODWORD(v79) = static os_log_type_t.error.getter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v47 = swift_allocObject();
  *(_OWORD *)(v47 + 16) = xmmword_1BD645380;
  LOBYTE(v93[0]) = a2;
  v48 = String.init<A>(reflecting:)();
  v50 = v49;
  v51 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v47 + 56) = MEMORY[0x1E0DEA968];
  v52 = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v47 + 64) = v52;
  *(_QWORD *)(v47 + 32) = v48;
  *(_QWORD *)(v47 + 40) = v50;
  _s15ConversationKit11ParticipantVWOcTm_2(v46, (uint64_t)v13, type metadata accessor for Participant);
  __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v45);
  specialized >> prefix<A>(_:)((uint64_t)v13);
  v54 = v53;
  v56 = v55;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v13, &demangling cache variable for type metadata for Participant?);
  *(_QWORD *)(v47 + 96) = v51;
  *(_QWORD *)(v47 + 104) = v52;
  *(_QWORD *)(v47 + 72) = v54;
  *(_QWORD *)(v47 + 80) = v56;
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  _s15ConversationKit11ParticipantVWOcTm_2(v46, (uint64_t)v21, type metadata accessor for Participant);
  ParticipantViewModel.init(audioOnlyParticipant:isMostActive:isPipped:isLocalMemberAuthorizedToChangeGroupMembership:)((uint64_t)v21, 0, v83);
  outlined destroy of AccountUpdateNotice(v46, type metadata accessor for Participant);
}

void ParticipantViewModel.init(reconnectingVideoParticipant:videoProviderType:isMostActive:isLocalMemberAuthorizedToChangeGroupMembership:prefersSnapshotFadeAnimation:shouldRegisterVideoLayers:)(uint64_t a1@<X0>, char a2@<W1>, int a3@<W2>, int a4@<W3>, char a5@<W4>, int a6@<W5>, uint64_t a7@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _DWORD v35[2];
  uint64_t v36;
  int v37;
  int v38;
  _BYTE v39[40];
  _BYTE v40[40];
  __int128 __src[8];

  v38 = a6;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Participant(0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)v35 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  Participant.videoProvider(for:)((uint64_t)__src);
  if (*((_QWORD *)&__src[1] + 1))
  {
    outlined init with take of Notice(__src, (uint64_t)v40);
    _s15ConversationKit11ParticipantVWOcTm_2(a1, (uint64_t)v18, type metadata accessor for Participant);
    ParticipantViewModel.ParticipantDetails.init(participant:isMostActive:isPreviewingReaction:isLocalMemberAuthorizedToChangeGroupMembership:)();
    outlined init with copy of IDSLookupManager((uint64_t)v40, (uint64_t)v39);
    Participant.videoTransform.getter(__src);
    outlined destroy of AccountUpdateNotice(a1, type metadata accessor for Participant);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
    v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantVideoView.ViewModel, ParticipantVideoOverlayView.ViewModel));
    v23 = (_BYTE *)(a7 + *(int *)(v22 + 48));
    outlined init with take of Participant.VideoInfo?((uint64_t)v39, (uint64_t)v23, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
    memcpy(v23 + 40, __src, 0x80uLL);
    v23[168] = a5 & 1;
    v23[169] = 0;
    v23[170] = v38 & 1;
    v23[171] = 0;
    v24 = a7 + *(int *)(v22 + 64);
    *(_QWORD *)(v24 + 96) = 0;
    *(_OWORD *)(v24 + 64) = 0u;
    *(_OWORD *)(v24 + 80) = 0u;
    *(_OWORD *)(v24 + 32) = 0u;
    *(_OWORD *)(v24 + 48) = 0u;
    *(_OWORD *)v24 = 0u;
    *(_OWORD *)(v24 + 16) = 0u;
    *(_BYTE *)(v24 + 104) = 6;
    outlined init with take of ParticipantViewModel.ParticipantDetails((uint64_t)v21, a7);
    type metadata accessor for ParticipantViewModel(0);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    v37 = a3;
    v38 = a4;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)__src, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    v36 = static OS_os_log.conversationKit;
    v35[1] = static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_1BD645380;
    LOBYTE(__src[0]) = a2;
    v26 = String.init<A>(reflecting:)();
    v28 = v27;
    v29 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v25 + 56) = MEMORY[0x1E0DEA968];
    v30 = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v25 + 64) = v30;
    *(_QWORD *)(v25 + 32) = v26;
    *(_QWORD *)(v25 + 40) = v28;
    _s15ConversationKit11ParticipantVWOcTm_2(a1, (uint64_t)v15, type metadata accessor for Participant);
    __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v16);
    specialized >> prefix<A>(_:)((uint64_t)v15);
    v32 = v31;
    v34 = v33;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v15, &demangling cache variable for type metadata for Participant?);
    *(_QWORD *)(v25 + 96) = v29;
    *(_QWORD *)(v25 + 104) = v30;
    *(_QWORD *)(v25 + 72) = v32;
    *(_QWORD *)(v25 + 80) = v34;
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    _s15ConversationKit11ParticipantVWOcTm_2(a1, (uint64_t)v18, type metadata accessor for Participant);
    ParticipantViewModel.init(audioOnlyParticipant:isMostActive:isPipped:isLocalMemberAuthorizedToChangeGroupMembership:)((uint64_t)v18, 0, a7);
    outlined destroy of AccountUpdateNotice(a1, type metadata accessor for Participant);
  }
}

void ParticipantViewModel.init(videoParticipant:videoProviderType:symbol:isMostActive:isLocalMemberAuthorizedToChangeGroupMembership:prefersSnapshotFadeAnimation:shouldRegisterVideoLayers:labelString:labelFont:)(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, int a4@<W3>, int a5@<W4>, int a6@<W5>, int a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, void *a11)
{
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE v43[12];
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  int v56;
  id v57;
  _BYTE v58[40];
  _BYTE v59[40];
  __int128 __src[8];

  v53 = a8;
  LODWORD(v52) = a7;
  v51 = a6;
  v54 = a5;
  v56 = a4;
  v57 = a11;
  v55 = a10;
  v49 = *(_QWORD *)a3;
  v48 = *(_QWORD *)(a3 + 8);
  v47 = *(_QWORD *)(a3 + 16);
  v46 = *(_QWORD *)(a3 + 24);
  v15 = *(_BYTE *)(a3 + 32);
  v16 = *(_BYTE *)(a3 + 33);
  v45 = *(_QWORD *)(a3 + 40);
  v44 = *(unsigned __int8 *)(a3 + 48);
  v50 = *(_QWORD *)(a3 + 56);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v17);
  v19 = &v43[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v20 = type metadata accessor for Participant(0);
  MEMORY[0x1E0C80A78](v20);
  v22 = &v43[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v23 = type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
  MEMORY[0x1E0C80A78](v23);
  v25 = &v43[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  Participant.videoProvider(for:)((uint64_t)__src);
  if (*((_QWORD *)&__src[1] + 1))
  {
    outlined init with take of Notice(__src, (uint64_t)v59);
    _s15ConversationKit11ParticipantVWOcTm_2(a1, (uint64_t)v22, type metadata accessor for Participant);
    ParticipantViewModel.ParticipantDetails.init(participant:isMostActive:isPreviewingReaction:isLocalMemberAuthorizedToChangeGroupMembership:)();
    outlined init with copy of IDSLookupManager((uint64_t)v59, (uint64_t)v58);
    Participant.videoTransform.getter(__src);
    outlined destroy of AccountUpdateNotice(a1, type metadata accessor for Participant);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v59);
    v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantVideoView.ViewModel, ParticipantVideoOverlayView.ViewModel));
    v27 = (_BYTE *)(a9 + *(int *)(v26 + 48));
    outlined init with take of Participant.VideoInfo?((uint64_t)v58, (uint64_t)v27, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
    memcpy(v27 + 40, __src, 0x80uLL);
    v27[168] = v51 & 1;
    v27[169] = 0;
    v27[170] = v52 & 1;
    v27[171] = 0;
    v28 = a9 + *(int *)(v26 + 64);
    v29 = v48;
    *(_QWORD *)v28 = v49;
    *(_QWORD *)(v28 + 8) = v29;
    v30 = v46;
    *(_QWORD *)(v28 + 16) = v47;
    *(_QWORD *)(v28 + 24) = v30;
    *(_BYTE *)(v28 + 32) = v15 & 1;
    *(_BYTE *)(v28 + 33) = v16 & 1;
    *(_QWORD *)(v28 + 40) = v45;
    *(_BYTE *)(v28 + 48) = v44 & 1;
    v31 = v53;
    *(_QWORD *)(v28 + 56) = v50;
    *(_QWORD *)(v28 + 64) = v31;
    v32 = v57;
    *(_QWORD *)(v28 + 72) = v55;
    *(_QWORD *)(v28 + 80) = v32;
    *(_BYTE *)(v28 + 104) = 3;
    outlined init with take of ParticipantViewModel.ParticipantDetails((uint64_t)v25, a9);
    type metadata accessor for ParticipantViewModel(0);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    v52 = v20;
    v53 = a9;
    swift_bridgeObjectRelease();
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)__src, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    v55 = static OS_os_log.conversationKit;
    v51 = static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_1BD645380;
    LOBYTE(__src[0]) = a2;
    v34 = String.init<A>(reflecting:)();
    v36 = v35;
    v37 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v33 + 56) = MEMORY[0x1E0DEA968];
    v38 = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v33 + 64) = v38;
    *(_QWORD *)(v33 + 32) = v34;
    *(_QWORD *)(v33 + 40) = v36;
    _s15ConversationKit11ParticipantVWOcTm_2(a1, (uint64_t)v19, type metadata accessor for Participant);
    __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v52);
    specialized >> prefix<A>(_:)((uint64_t)v19);
    v40 = v39;
    v42 = v41;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v19, &demangling cache variable for type metadata for Participant?);
    *(_QWORD *)(v33 + 96) = v37;
    *(_QWORD *)(v33 + 104) = v38;
    *(_QWORD *)(v33 + 72) = v40;
    *(_QWORD *)(v33 + 80) = v42;
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    _s15ConversationKit11ParticipantVWOcTm_2(a1, (uint64_t)v22, type metadata accessor for Participant);
    ParticipantViewModel.init(audioOnlyParticipant:isMostActive:isPipped:isLocalMemberAuthorizedToChangeGroupMembership:)((uint64_t)v22, 0, v53);

    outlined release of SymbolImageDescription(a3);
    outlined destroy of AccountUpdateNotice(a1, type metadata accessor for Participant);
  }
}

void ParticipantViewModel.init(videoParticipantChangingConfiguration:videoProviderType:isMostActive:isLocalMemberAuthorizedToChangeGroupMembership:prefersSnapshotFadeAnimation:overlayViewModel:shouldRegisterVideoLayers:)(uint64_t a1@<X0>, char a2@<W1>, int a3@<W2>, int a4@<W3>, int a5@<W4>, const void *a6@<X5>, int a7@<W6>, uint64_t a8@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  _BYTE *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _DWORD v36[4];
  uint64_t v37;
  int v38;
  int v39;
  uint64_t v40;
  _BYTE v41[40];
  _BYTE v42[40];
  __int128 __src[8];

  LODWORD(v40) = a7;
  v39 = a5;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for Participant(0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)v36 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  Participant.videoProvider(for:)((uint64_t)__src);
  if (*((_QWORD *)&__src[1] + 1))
  {
    outlined init with take of Notice(__src, (uint64_t)v42);
    _s15ConversationKit11ParticipantVWOcTm_2(a1, (uint64_t)v19, type metadata accessor for Participant);
    ParticipantViewModel.ParticipantDetails.init(participant:isMostActive:isPreviewingReaction:isLocalMemberAuthorizedToChangeGroupMembership:)();
    outlined init with copy of IDSLookupManager((uint64_t)v42, (uint64_t)v41);
    Participant.videoTransform.getter(__src);
    outlined destroy of AccountUpdateNotice(a1, type metadata accessor for Participant);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
    v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantVideoView.ViewModel, ParticipantVideoOverlayView.ViewModel));
    v24 = (_BYTE *)(a8 + *(int *)(v23 + 48));
    outlined init with take of Participant.VideoInfo?((uint64_t)v41, (uint64_t)v24, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
    memcpy(v24 + 40, __src, 0x80uLL);
    v24[168] = v39 & 1;
    v24[169] = 0;
    v24[170] = v40 & 1;
    v24[171] = 0;
    v25 = (void *)(a8 + *(int *)(v23 + 64));
    outlined init with take of ParticipantViewModel.ParticipantDetails((uint64_t)v22, a8);
    outlined init with take of ParticipantVideoOverlayView.ViewModel(a6, v25);
    type metadata accessor for ParticipantViewModel(0);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    v38 = a3;
    v39 = a4;
    v40 = (uint64_t)a6;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)__src, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    v37 = static OS_os_log.conversationKit;
    v36[3] = static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_1BD645380;
    LOBYTE(__src[0]) = a2;
    v27 = String.init<A>(reflecting:)();
    v29 = v28;
    v30 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v26 + 56) = MEMORY[0x1E0DEA968];
    v31 = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v26 + 64) = v31;
    *(_QWORD *)(v26 + 32) = v27;
    *(_QWORD *)(v26 + 40) = v29;
    _s15ConversationKit11ParticipantVWOcTm_2(a1, (uint64_t)v16, type metadata accessor for Participant);
    __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v17);
    specialized >> prefix<A>(_:)((uint64_t)v16);
    v33 = v32;
    v35 = v34;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v16, &demangling cache variable for type metadata for Participant?);
    *(_QWORD *)(v26 + 96) = v30;
    *(_QWORD *)(v26 + 104) = v31;
    *(_QWORD *)(v26 + 72) = v33;
    *(_QWORD *)(v26 + 80) = v35;
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    _s15ConversationKit11ParticipantVWOcTm_2(a1, (uint64_t)v19, type metadata accessor for Participant);
    ParticipantViewModel.init(audioOnlyParticipant:isMostActive:isPipped:isLocalMemberAuthorizedToChangeGroupMembership:)((uint64_t)v19, 0, a8);
    outlined destroy of ParticipantVideoOverlayView.ViewModel(v40);
    outlined destroy of AccountUpdateNotice(a1, type metadata accessor for Participant);
  }
}

void ParticipantViewModel.init(videoParticipant:videoProviderType:isMostActive:isPreviewingReaction:isLocalMemberAuthorizedToChangeGroupMembership:prefersSnapshotFadeAnimation:shouldRegisterVideoLayers:)(uint64_t a1@<X0>, unsigned __int8 a2@<W1>, int a3@<W2>, int a4@<W4>, int a5@<W5>, int a6@<W6>, uint64_t a7@<X8>)
{
  int v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  int v34;
  uint64_t v35;
  int v36;
  int v37;
  char *v38;
  uint64_t v39;
  _BYTE v40[40];
  _BYTE v41[40];
  __int128 __src[8];

  v34 = a6;
  v33 = a5;
  v39 = a7;
  v11 = a2;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = type metadata accessor for Participant(0);
  MEMORY[0x1E0C80A78](v35);
  v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s15ConversationKit11ParticipantVWOcTm_2(a1, (uint64_t)v16, type metadata accessor for Participant);
  v38 = v19;
  v36 = a3;
  v37 = a4;
  ParticipantViewModel.ParticipantDetails.init(participant:isMostActive:isPreviewingReaction:isLocalMemberAuthorizedToChangeGroupMembership:)();
  if (v11 != 4)
  {
    Participant.videoProvider(for:)((uint64_t)__src);
    if (*((_QWORD *)&__src[1] + 1))
    {
      outlined init with take of Notice(__src, (uint64_t)v41);
      outlined init with copy of IDSLookupManager((uint64_t)v41, (uint64_t)v40);
      Participant.videoTransform.getter(__src);
      outlined destroy of AccountUpdateNotice(a1, type metadata accessor for Participant);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
      v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantVideoView.ViewModel));
      v21 = v39;
      v22 = (_BYTE *)(v39 + *(int *)(v20 + 48));
      outlined init with take of Participant.VideoInfo?((uint64_t)v40, (uint64_t)v22, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
      memcpy(v22 + 40, __src, 0x80uLL);
      v22[168] = v33 & 1;
      v22[169] = 0;
      v22[170] = v34 & 1;
      v22[171] = 0;
      outlined init with take of ParticipantViewModel.ParticipantDetails((uint64_t)v38, v21);
      type metadata accessor for ParticipantViewModel(0);
      swift_storeEnumTagMultiPayload();
      return;
    }
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)__src, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
  }
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v34 = static os_log_type_t.error.getter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1BD645380;
  if (a2 == 4)
  {
    v24 = 0xE300000000000000;
    v25 = 7104878;
  }
  else
  {
    LOBYTE(__src[0]) = a2;
    v25 = String.init<A>(reflecting:)();
    v24 = v26;
  }
  v27 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v23 + 56) = MEMORY[0x1E0DEA968];
  v28 = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v23 + 64) = v28;
  *(_QWORD *)(v23 + 32) = v25;
  *(_QWORD *)(v23 + 40) = v24;
  _s15ConversationKit11ParticipantVWOcTm_2(a1, (uint64_t)v14, type metadata accessor for Participant);
  __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v35);
  specialized >> prefix<A>(_:)((uint64_t)v14);
  v30 = v29;
  v32 = v31;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v14, &demangling cache variable for type metadata for Participant?);
  *(_QWORD *)(v23 + 96) = v27;
  *(_QWORD *)(v23 + 104) = v28;
  *(_QWORD *)(v23 + 72) = v30;
  *(_QWORD *)(v23 + 80) = v32;
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  _s15ConversationKit11ParticipantVWOcTm_2(a1, (uint64_t)v16, type metadata accessor for Participant);
  ParticipantViewModel.init(audioOnlyParticipant:isMostActive:isPipped:isLocalMemberAuthorizedToChangeGroupMembership:)((uint64_t)v16, 0, v39);
  outlined destroy of AccountUpdateNotice(a1, type metadata accessor for Participant);
  outlined destroy of AccountUpdateNotice((uint64_t)v38, type metadata accessor for ParticipantViewModel.ParticipantDetails);
}

uint64_t ParticipantViewModel.init(invitedWebParticipant:isMostActive:isLocalMemberAuthorizedToChangeGroupMembership:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  Swift::String v19;
  Swift::String_optional v20;
  Swift::String v21;
  Swift::String v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  Class isa;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  void *v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  Swift::String v81;

  v70 = a2;
  v71 = type metadata accessor for PersonNameComponents();
  v63 = *(_QWORD *)(v71 - 8);
  MEMORY[0x1E0C80A78](v71);
  v4 = (char *)&v60 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Participant(0);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v60 - v9;
  v11 = type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s15ConversationKit11ParticipantVWOcTm_2(a1, (uint64_t)v10, type metadata accessor for Participant);
  v68 = v13;
  ParticipantViewModel.ParticipantDetails.init(participant:isMostActive:isPreviewingReaction:isLocalMemberAuthorizedToChangeGroupMembership:)();
  Participant.contactDetails.getter();
  v14 = v74;
  swift_bridgeObjectRelease();
  v15 = v5;
  swift_bridgeObjectRelease();

  v16 = Participant.name(_:)();
  v66 = v17;
  v67 = v16;
  swift_bridgeObjectRelease();
  v69 = a1;
  _s15ConversationKit11ParticipantVWOcTm_2(a1, (uint64_t)v8, type metadata accessor for Participant);
  v18 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v81._object = (void *)0xE000000000000000;
  v19._object = (void *)0x80000001BD673470;
  v19._countAndFlagsBits = 0xD00000000000002FLL;
  v20.value._countAndFlagsBits = 0x61737265766E6F43;
  v20.value._object = (void *)0xEF74694B6E6F6974;
  v21._countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  v81._countAndFlagsBits = 0;
  v22 = NSLocalizedString(_:tableName:bundle:value:comment:)(v19, v20, (NSBundle)v18, v21, v81);
  object = v22._object;
  countAndFlagsBits = v22._countAndFlagsBits;

  v23 = *(void **)&v8[*(int *)(v5 + 28)];
  if (!v23)
    goto LABEL_9;
  v24 = v23;
  outlined bridged method (pb) of @objc TUHandle.siriDisplayName.getter(v24);
  if (!v26)
  {

LABEL_9:
    _s15ConversationKit11ParticipantVWOcTm_2((uint64_t)v8, (uint64_t)v10, type metadata accessor for Participant);
    swift_retain();
    ParticipantContactDetailsCache.contactDetails(for:)((uint64_t)v10, v39, v40, v41, v42, v43, v44, v45, v60, v61, v62, v63, (uint64_t)object, countAndFlagsBits, v66, v67, (uint64_t)v68, v69, v70,
      v71);
    v28 = v76;
    v62 = v75;
    v63 = v77;
    v38 = v78;
    v71 = v79;
    v36 = v80;
    v37 = v74;
    v46 = v74;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_release();
    outlined destroy of AccountUpdateNotice((uint64_t)v10, type metadata accessor for Participant);
    goto LABEL_10;
  }
  v27 = v25;
  v28 = v26;
  if ((objc_msgSend(v24, sel_shouldHideContact) & 1) == 0)
  {

    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  PersonNameComponents.init()();
  PersonNameComponents.givenName.setter();
  PersonNameComponents.familyName.setter();
  if (one-time initialization token for initials != -1)
    swift_once();
  swift_beginAccess();
  v29 = (id)static NSPersonNameComponentsFormatter.initials;
  isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
  v31 = objc_msgSend(v29, sel_stringFromPersonNameComponents_, isa);

  v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v34 = v33;

  (*(void (**)(char *, uint64_t))(v63 + 8))(v4, v71);
  v72 = v32;
  v73 = v34;
  lazy protocol witness table accessor for type String and conformance String();
  v71 = StringProtocol.localizedUppercase.getter();
  v36 = v35;

  swift_bridgeObjectRelease();
  v37 = 0;
  v62 = v27;
  v63 = v27;
  v38 = v28;
LABEL_10:
  v47 = *(_QWORD *)&v8[*(int *)(v15 + 32)];
  v61 = (uint64_t)v37;
  v48 = v37;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  outlined destroy of AccountUpdateNotice((uint64_t)v8, type metadata accessor for Participant);
  swift_bridgeObjectRetain();
  v49 = v66;
  swift_bridgeObjectRetain();
  v50 = object;
  swift_bridgeObjectRetain();
  outlined consume of AnsweringMachineCallStatus?(0, 0);
  v51 = v48;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v52 = v67;
  v53 = countAndFlagsBits;
  outlined copy of (title: String, subtitle: String?)?(v67, v49);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  outlined consume of AnsweringMachineCallStatus?(v52, v49);
  outlined destroy of AccountUpdateNotice(v69, type metadata accessor for Participant);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantMonogramView.ViewModel));
  v55 = v70 + *(int *)(v54 + 48);
  outlined init with take of ParticipantViewModel.ParticipantDetails((uint64_t)v68, v70);
  v56 = v62;
  *(_QWORD *)v55 = v61;
  *(_QWORD *)(v55 + 8) = v56;
  v57 = v63;
  *(_QWORD *)(v55 + 16) = v28;
  *(_QWORD *)(v55 + 24) = v57;
  v58 = v71;
  *(_QWORD *)(v55 + 32) = v38;
  *(_QWORD *)(v55 + 40) = v58;
  *(_QWORD *)(v55 + 48) = v36;
  *(_QWORD *)(v55 + 56) = v47;
  *(_WORD *)(v55 + 64) = 0;
  *(_QWORD *)(v55 + 72) = v52;
  *(_QWORD *)(v55 + 80) = v49;
  *(_QWORD *)(v55 + 88) = v53;
  *(_QWORD *)(v55 + 96) = v50;
  type metadata accessor for ParticipantViewModel(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t ParticipantViewModel.init(ringingParticipant:isMostActive:isLocalMemberAuthorizedToChangeGroupMembership:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  id v17;
  Swift::String v18;
  Swift::String_optional v19;
  Swift::String v20;
  Swift::String v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  Class isa;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  void *v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  uint64_t v60;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  Swift::String v82;

  v67 = a2;
  v68 = type metadata accessor for PersonNameComponents();
  v3 = *(_QWORD *)(v68 - 8);
  MEMORY[0x1E0C80A78](v68);
  v5 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Participant(0);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v59 - v10;
  v12 = type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s15ConversationKit11ParticipantVWOcTm_2(a1, (uint64_t)v11, type metadata accessor for Participant);
  v65 = v14;
  ParticipantViewModel.ParticipantDetails.init(participant:isMostActive:isPreviewingReaction:isLocalMemberAuthorizedToChangeGroupMembership:)();
  _s15ConversationKit11ParticipantVWOcTm_2(a1, (uint64_t)v9, type metadata accessor for Participant);
  v66 = a1;
  v15 = v6;
  Participant.contactDetails.getter();
  v16 = v79;
  v64 = v80;
  v63 = v81;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v17 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v82._object = (void *)0xE000000000000000;
  v18._object = (void *)0x80000001BD6734A0;
  v18._countAndFlagsBits = 0xD00000000000001ALL;
  v19.value._countAndFlagsBits = 0x61737265766E6F43;
  v19.value._object = (void *)0xEF74694B6E6F6974;
  v20._countAndFlagsBits = 0;
  v20._object = (void *)0xE000000000000000;
  v82._countAndFlagsBits = 0;
  v21 = NSLocalizedString(_:tableName:bundle:value:comment:)(v18, v19, (NSBundle)v17, v20, v82);
  countAndFlagsBits = v21._countAndFlagsBits;
  object = v21._object;

  v22 = *(void **)&v9[*(int *)(v6 + 28)];
  if (!v22)
    goto LABEL_9;
  v23 = v22;
  outlined bridged method (pb) of @objc TUHandle.siriDisplayName.getter(v23);
  if (!v25)
  {

LABEL_9:
    _s15ConversationKit11ParticipantVWOcTm_2((uint64_t)v9, (uint64_t)v11, type metadata accessor for Participant);
    swift_retain();
    ParticipantContactDetailsCache.contactDetails(for:)((uint64_t)v11, v38, v39, v40, v41, v42, v43, v44, v59, v60, (uint64_t)object, countAndFlagsBits, v63, v64, (uint64_t)v65, v66, v67, v68, v69,
      v70);
    v69 = v73;
    v27 = v74;
    v60 = v75;
    v37 = v76;
    v68 = v77;
    v35 = v78;
    v36 = v72;
    v45 = v72;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_release();
    outlined destroy of AccountUpdateNotice((uint64_t)v11, type metadata accessor for Participant);
    goto LABEL_10;
  }
  v26 = v24;
  v27 = v25;
  if ((objc_msgSend(v23, sel_shouldHideContact) & 1) == 0)
  {

    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  v69 = v26;
  swift_bridgeObjectRetain();
  PersonNameComponents.init()();
  PersonNameComponents.givenName.setter();
  PersonNameComponents.familyName.setter();
  if (one-time initialization token for initials != -1)
    swift_once();
  swift_beginAccess();
  v28 = (id)static NSPersonNameComponentsFormatter.initials;
  isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
  v30 = objc_msgSend(v28, sel_stringFromPersonNameComponents_, isa);

  v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v33 = v32;

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v68);
  v70 = v31;
  v71 = v33;
  lazy protocol witness table accessor for type String and conformance String();
  v68 = StringProtocol.localizedUppercase.getter();
  v35 = v34;

  swift_bridgeObjectRelease();
  v36 = 0;
  v60 = v69;
  v37 = v27;
LABEL_10:
  v46 = *(_QWORD *)&v9[*(int *)(v15 + 32)];
  v59 = (uint64_t)v36;
  v47 = v36;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  outlined destroy of AccountUpdateNotice((uint64_t)v9, type metadata accessor for Participant);
  v48 = v63;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v49 = object;
  swift_bridgeObjectRetain();
  outlined consume of AnsweringMachineCallStatus?(0, 0);
  v50 = v47;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v51 = v64;
  v52 = countAndFlagsBits;
  outlined copy of (title: String, subtitle: String?)?(v64, v48);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  outlined consume of AnsweringMachineCallStatus?(v51, v48);
  outlined destroy of AccountUpdateNotice(v66, type metadata accessor for Participant);
  v53 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantMonogramView.ViewModel));
  v54 = v67 + *(int *)(v53 + 48);
  outlined init with take of ParticipantViewModel.ParticipantDetails((uint64_t)v65, v67);
  v55 = v69;
  *(_QWORD *)v54 = v59;
  *(_QWORD *)(v54 + 8) = v55;
  v56 = v60;
  *(_QWORD *)(v54 + 16) = v27;
  *(_QWORD *)(v54 + 24) = v56;
  v57 = v68;
  *(_QWORD *)(v54 + 32) = v37;
  *(_QWORD *)(v54 + 40) = v57;
  *(_QWORD *)(v54 + 48) = v35;
  *(_QWORD *)(v54 + 56) = v46;
  *(_WORD *)(v54 + 64) = 0;
  *(_QWORD *)(v54 + 72) = v51;
  *(_QWORD *)(v54 + 80) = v48;
  *(_QWORD *)(v54 + 88) = v52;
  *(_QWORD *)(v54 + 96) = v49;
  type metadata accessor for ParticipantViewModel(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t ParticipantViewModel.init(inactiveParticipant:isMostActive:isPipped:hasOtherInvitedParticipants:isLocalMemberAuthorizedToChangeGroupMembership:)@<X0>(uint64_t a1@<X0>, char a2@<W2>, int a3@<W3>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  unint64_t v26;
  unint64_t v27;
  Swift::String_optional v28;
  Swift::String v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  Class isa;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  void *object;
  id v61;
  uint64_t v62;
  uint64_t countAndFlagsBits;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  Swift::String v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;

  LODWORD(v76._object) = a3;
  v80 = a4;
  v6 = type metadata accessor for PersonNameComponents();
  v73 = *(_QWORD *)(v6 - 8);
  v74 = v6;
  MEMORY[0x1E0C80A78](v6);
  v75 = (uint64_t)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Participant(0);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v71 - v13;
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v71 - v15;
  v17 = type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v71 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s15ConversationKit11ParticipantVWOcTm_2(a1, (uint64_t)v16, type metadata accessor for Participant);
  v79 = v19;
  ParticipantViewModel.ParticipantDetails.init(participant:isMostActive:isPreviewingReaction:isLocalMemberAuthorizedToChangeGroupMembership:)();
  v81 = a1;
  _s15ConversationKit11ParticipantVWOcTm_2(a1, (uint64_t)v14, type metadata accessor for Participant);
  if ((a2 & 1) != 0)
  {
    outlined destroy of AccountUpdateNotice((uint64_t)v14, type metadata accessor for Participant);
    HIDWORD(v71) = 0;
    v20 = v8;
  }
  else
  {
    v21 = *(_QWORD *)&v14[*(int *)(v8 + 36) + 8];
    swift_bridgeObjectRetain();
    outlined destroy of AccountUpdateNotice((uint64_t)v14, type metadata accessor for Participant);
    v20 = v8;
    if (v21)
    {
      swift_bridgeObjectRelease();
      HIDWORD(v71) = 0;
    }
    else
    {
      HIDWORD(v71) = 1;
    }
  }
  Participant.contactDetails.getter();
  v22 = v84;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v23 = Participant.name(_:)();
  v77 = v24;
  v78 = v23;
  swift_bridgeObjectRelease();
  v25 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  if (((uint64_t)v76._object & 1) != 0)
  {
    v70 = 0xE000000000000000;
    v26 = 0x80000001BD673470;
    v27 = 0xD00000000000002FLL;
  }
  else
  {
    v27 = 0xD000000000000033;
    v70 = 0xE000000000000000;
    v26 = 0x80000001BD673430;
  }
  v28.value._countAndFlagsBits = 0x61737265766E6F43;
  v28.value._object = (void *)0xEF74694B6E6F6974;
  v29._countAndFlagsBits = 0;
  v29._object = (void *)0xE000000000000000;
  v30 = 0;
  v76 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v27, v28, (NSBundle)v25, v29, *(Swift::String *)(&v70 - 1));
  v31 = v75;

  _s15ConversationKit11ParticipantVWOcTm_2(v81, (uint64_t)v11, type metadata accessor for Participant);
  v32 = *(void **)&v11[*(int *)(v20 + 28)];
  if (!v32)
    goto LABEL_17;
  v33 = v32;
  outlined bridged method (pb) of @objc TUHandle.siriDisplayName.getter(v33);
  if (!v35)
  {

LABEL_17:
    _s15ConversationKit11ParticipantVWOcTm_2((uint64_t)v11, (uint64_t)v16, type metadata accessor for Participant);
    swift_retain();
    ParticipantContactDetailsCache.contactDetails(for:)((uint64_t)v16, v48, v49, v50, v51, v52, v53, v54, v71, v72, v73, v74, v75, v76._countAndFlagsBits, (uint64_t)v76._object, v77, v78, (uint64_t)v79, v80,
      v81);
    v46 = v84;
    v37 = v86;
    v73 = v85;
    v74 = v87;
    v47 = v88;
    v75 = v89;
    v45 = v90;
    v55 = v20;
    v56 = v84;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v20 = v55;
    swift_release();
    outlined destroy of AccountUpdateNotice((uint64_t)v16, type metadata accessor for Participant);
    goto LABEL_18;
  }
  v36 = v34;
  v37 = v35;
  if ((objc_msgSend(v33, sel_shouldHideContact) & 1) == 0)
  {

    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  swift_bridgeObjectRetain();
  PersonNameComponents.init()();
  PersonNameComponents.givenName.setter();
  PersonNameComponents.familyName.setter();
  if (one-time initialization token for initials != -1)
    swift_once();
  swift_beginAccess();
  v38 = (id)static NSPersonNameComponentsFormatter.initials;
  isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
  v40 = objc_msgSend(v38, sel_stringFromPersonNameComponents_, isa);

  v41 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v43 = v42;

  (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v31, v74);
  v82 = v41;
  v83 = v43;
  lazy protocol witness table accessor for type String and conformance String();
  v75 = StringProtocol.localizedUppercase.getter();
  v45 = v44;

  swift_bridgeObjectRelease();
  v46 = 0;
  v73 = v36;
  v74 = v36;
  v47 = v37;
LABEL_18:
  v72 = (uint64_t)v46;
  v57 = *(_QWORD *)&v11[*(int *)(v20 + 32)];
  v58 = v46;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  outlined destroy of AccountUpdateNotice((uint64_t)v11, type metadata accessor for Participant);
  swift_bridgeObjectRetain();
  v59 = v77;
  swift_bridgeObjectRetain();
  object = v76._object;
  swift_bridgeObjectRetain();
  outlined consume of AnsweringMachineCallStatus?(0, 0);
  v61 = v58;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v62 = v78;
  countAndFlagsBits = v76._countAndFlagsBits;
  outlined copy of (title: String, subtitle: String?)?(v78, v59);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  outlined consume of AnsweringMachineCallStatus?(v62, v59);
  outlined destroy of AccountUpdateNotice(v81, type metadata accessor for Participant);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantMonogramView.ViewModel));
  v65 = v80 + *(int *)(v64 + 48);
  outlined init with take of ParticipantViewModel.ParticipantDetails((uint64_t)v79, v80);
  v66 = v73;
  *(_QWORD *)v65 = v72;
  *(_QWORD *)(v65 + 8) = v66;
  v67 = v74;
  *(_QWORD *)(v65 + 16) = v37;
  *(_QWORD *)(v65 + 24) = v67;
  v68 = v75;
  *(_QWORD *)(v65 + 32) = v47;
  *(_QWORD *)(v65 + 40) = v68;
  *(_QWORD *)(v65 + 48) = v45;
  *(_QWORD *)(v65 + 56) = v57;
  *(_BYTE *)(v65 + 64) = 0;
  *(_BYTE *)(v65 + 65) = BYTE4(v71);
  *(_QWORD *)(v65 + 72) = v62;
  *(_QWORD *)(v65 + 80) = v59;
  *(_QWORD *)(v65 + 88) = countAndFlagsBits;
  *(_QWORD *)(v65 + 96) = object;
  type metadata accessor for ParticipantViewModel(0);
  return swift_storeEnumTagMultiPayload();
}

void Participant.videoTransform.getter(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int16 v10;
  char v11;
  __int16 v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  CGFloat v18;
  uint64x2_t v19;
  int16x8_t v20;
  char v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  id v30;
  id v31;
  uint64_t v32;
  BOOL v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  CATransform3D *v45;
  CATransform3D *v46;
  CGFloat v47;
  CGFloat v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  __int128 v56;
  uint64_t v57;
  __int128 v58;
  uint64_t v59;
  __int128 v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD v82[2];
  __int16 v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  __int16 v90;
  uint64_t v91[8];
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  CATransform3D v100;
  _QWORD v101[10];
  _QWORD v102[5];
  char v103;
  uint64_t v104;
  __int16 v105;
  char v106;
  char v107;
  unsigned __int32 v108;
  __int16 v109;
  uint64_t v110;
  char v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  __int16 v116;

  v2 = v1;
  v4 = OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_77();
  v51 = v7 - v6;
  Participant.videoInfo.getter();
  v8 = v82[0];
  v9 = v82[1];
  v10 = v83;
  v55 = v84;
  v11 = v85;
  v63 = v86;
  v61 = v87;
  v59 = v88;
  v57 = v89;
  v12 = v90;
  Participant.copresenceInfo.getter(v91);
  outlined init with take of Participant.VideoInfo?((uint64_t)v91, (uint64_t)v102, &demangling cache variable for type metadata for Participant.CopresenceInfo?);
  if (v102[1])
  {
    v13 = v103;
    outlined release of Participant.CopresenceInfo?(v91);
    v65 = v13 & 1;
  }
  else
  {
    v65 = 0;
  }
  v14 = *(int *)(v4 + 28);
  if (*(_QWORD *)(v2 + v14))
  {
    outlined init with take of Participant.VideoInfo?((uint64_t)v82, (uint64_t)&v92, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
    if ((_QWORD)v92)
    {
      v15 = v14;
      v16 = *((_QWORD *)&v93 + 1);
      outlined release of LinearGradient((uint64_t)v82);
      v17 = v16;
      v14 = v15;
      static Participant.rotationFor(_:cameraPosition:)(v17);
      OUTLINED_FUNCTION_55_12(&v100, v18);
LABEL_15:
      v22 = *(_OWORD *)&v100.m43;
      v23 = *(_OWORD *)&v100.m41;
      v24 = *(_OWORD *)&v100.m33;
      v25 = *(_OWORD *)&v100.m31;
      v26 = *(_OWORD *)&v100.m23;
      v27 = *(_OWORD *)&v100.m21;
      v28 = *(_OWORD *)&v100.m13;
      v29 = *(_OWORD *)&v100.m11;
      goto LABEL_16;
    }
    v23 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 96);
    v22 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 112);
    v25 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 64);
    v24 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 80);
    v27 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 32);
    v26 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 48);
    v29 = *MEMORY[0x1E0CD2610];
    v28 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 16);
  }
  else
  {
    v50 = *(int *)(v4 + 28);
    outlined init with take of Participant.VideoInfo?((uint64_t)v82, (uint64_t)v101, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
    if (v101[0])
    {
      v49 = v101[3];
      v104 = v8;
      v105 = v9 & 0x101;
      v106 = BYTE2(v9) & 1;
      v107 = BYTE3(v9);
      v19 = (uint64x2_t)vdupq_n_s64(v9);
      v20 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v19, (uint64x2_t)xmmword_1BD64A110), (int32x4_t)vshlq_u64(v19, (uint64x2_t)xmmword_1BD64A100));
      *(int8x8_t *)v20.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v20), (int8x8_t)0x1000100010001);
      v108 = vmovn_s16(v20).u32[0];
      v109 = v10 & 0x101;
      v110 = v55;
      v111 = v11;
      v112 = v63;
      v113 = v61;
      v114 = v59;
      v115 = v57;
      v116 = v12 & 0x101;
      v21 = Participant.VideoInfo.cameraType.getter();
      outlined release of LinearGradient((uint64_t)v82);
    }
    else
    {
      v21 = 2;
      v49 = 1;
    }
    v30 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
    v31 = objc_msgSend(v30, sel_userInterfaceIdiom);

    if (one-time initialization token for shared != -1)
      swift_once();
    v32 = static Defaults.shared;
    swift_retain();
    specialized static Participant.transformForLocalParticipant(deviceOrientation:cameraType:currentIdiom:defaults:)(v49, v21, (unint64_t)v31, v32, (CGFloat *)&v92);
    v62 = v98;
    v64 = v99;
    v58 = v96;
    v60 = v97;
    v54 = v94;
    v56 = v95;
    v52 = v92;
    v53 = v93;
    swift_release();
    v29 = v52;
    v28 = v53;
    v27 = v54;
    v26 = v56;
    v25 = v58;
    v24 = v60;
    v23 = v62;
    v22 = v64;
    v33 = v21 == 1;
    v14 = v50;
    if (!v33)
    {
      OUTLINED_FUNCTION_7_51(v2, v51);
      v34 = *(_BYTE *)(v51 + *(int *)(v4 + 40));
      v14 = v50;
      outlined destroy of AccountUpdateNotice(v51, type metadata accessor for Participant);
      static Participant.compensatedVideoRotation(_:videoTransform:effectsEnabled:)(v49, (CGFloat *)&v92, v34, &v100.m11);
      goto LABEL_15;
    }
  }
LABEL_16:
  v35 = *((_QWORD *)&v29 + 1);
  v36 = *((_QWORD *)&v28 + 1);
  v37 = *((_QWORD *)&v27 + 1);
  v38 = *((_QWORD *)&v26 + 1);
  v39 = *((_QWORD *)&v25 + 1);
  v40 = *((_QWORD *)&v24 + 1);
  v41 = *((_QWORD *)&v23 + 1);
  v42 = *((_QWORD *)&v22 + 1);
  if (*(_QWORD *)(v2 + v14) && v65)
  {
    v43 = Participant.deviceOrientation.getter();
    if ((v44 & 1) != 0 || (v43 | 2) != 3)
    {
      v45 = (CATransform3D *)OUTLINED_FUNCTION_3_47();
      v47 = -1.0;
      v48 = 1.0;
    }
    else
    {
      v45 = (CATransform3D *)OUTLINED_FUNCTION_3_47();
      v47 = 1.0;
      v48 = -1.0;
    }
    CATransform3DScale(v46, v45, v47, v48, 1.0);
    *(_QWORD *)&v29 = v66;
    v35 = v67;
    *(_QWORD *)&v28 = v68;
    v36 = v69;
    *(_QWORD *)&v27 = v70;
    v37 = v71;
    *(_QWORD *)&v26 = v72;
    v38 = v73;
    *(_QWORD *)&v25 = v74;
    v39 = v75;
    *(_QWORD *)&v24 = v76;
    v40 = v77;
    *(_QWORD *)&v23 = v78;
    v41 = v79;
    *(_QWORD *)&v22 = v80;
    v42 = v81;
  }
  *a1 = v29;
  a1[1] = v35;
  a1[2] = v28;
  a1[3] = v36;
  a1[4] = v27;
  a1[5] = v37;
  a1[6] = v26;
  a1[7] = v38;
  a1[8] = v25;
  a1[9] = v39;
  a1[10] = v24;
  a1[11] = v40;
  a1[12] = v23;
  a1[13] = v41;
  a1[14] = v22;
  a1[15] = v42;
}

void ParticipantViewModel.participantDetails.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_93();
  OUTLINED_FUNCTION_59_14();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_61_8(v0, v2, v3);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload != 1)
    {
      v8 = v0
         + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantMonogramView.ViewModel))
                  + 48);
      v9 = *(void **)v8;
      v10 = *(_QWORD *)(v8 + 72);
      v11 = *(_QWORD *)(v8 + 80);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_133();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_2_1();

      outlined consume of AnsweringMachineCallStatus?(v10, v11);
      OUTLINED_FUNCTION_39_22();
      goto LABEL_7;
    }
    v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantVideoView.ViewModel, ParticipantVideoOverlayView.ViewModel));
    v6 = v0 + *(int *)(v5 + 48);
    v7 = v0 + *(int *)(v5 + 64);
    OUTLINED_FUNCTION_39_22();
    outlined destroy of ParticipantVideoOverlayView.ViewModel(v7);
  }
  else
  {
    v6 = v0
       + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantVideoView.ViewModel))
                + 48);
    OUTLINED_FUNCTION_39_22();
  }
  outlined destroy of ParticipantVideoView.ViewModel(v6);
LABEL_7:
  OUTLINED_FUNCTION_52_1();
}

void ParticipantViewModel.compatibleWithRoster.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  OUTLINED_FUNCTION_93();
  v2 = v1;
  OUTLINED_FUNCTION_59_14();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_77();
  v6 = v5 - v4;
  _s15ConversationKit11ParticipantVWOcTm_2(v0, v5 - v4, v7);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload != 1)
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantMonogramView.ViewModel));
      v12 = v6 + *(int *)(v11 + 48);
      v13 = *(void **)v12;
      v14 = *(_QWORD *)(v12 + 16);
      v31 = *(_QWORD *)(v12 + 24);
      v32 = *(_QWORD *)(v12 + 8);
      v15 = *(_QWORD *)(v12 + 32);
      v30 = *(_QWORD *)(v12 + 40);
      v16 = *(_QWORD *)(v12 + 48);
      v17 = *(_QWORD *)(v12 + 56);
      v28 = *(_BYTE *)(v12 + 65);
      v29 = *(_BYTE *)(v12 + 64);
      v18 = *(_QWORD *)(v12 + 80);
      v26 = *(_QWORD *)(v12 + 72);
      v27 = *(void **)v12;
      OUTLINED_FUNCTION_85_4();
      v19 = v13;
      OUTLINED_FUNCTION_8_8();
      OUTLINED_FUNCTION_25_2();
      OUTLINED_FUNCTION_35_0();
      OUTLINED_FUNCTION_86();
      outlined consume of AnsweringMachineCallStatus?(v26, v18);
      v20 = v2 + *(int *)(v11 + 48);
      v21 = v19;
      OUTLINED_FUNCTION_8_8();
      OUTLINED_FUNCTION_25_2();
      OUTLINED_FUNCTION_35_0();
      OUTLINED_FUNCTION_86();
      v22 = OUTLINED_FUNCTION_82_3();
      outlined copy of (title: String, subtitle: String?)?(v22, v23);

      OUTLINED_FUNCTION_2_1();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_133();
      OUTLINED_FUNCTION_30_4();
      *(_QWORD *)v20 = v27;
      *(_QWORD *)(v20 + 8) = v32;
      *(_QWORD *)(v20 + 16) = v14;
      *(_QWORD *)(v20 + 24) = v31;
      *(_QWORD *)(v20 + 32) = v15;
      *(_QWORD *)(v20 + 40) = v30;
      *(_QWORD *)(v20 + 48) = v16;
      *(_QWORD *)(v20 + 56) = v17;
      *(_BYTE *)(v20 + 64) = v29;
      *(_BYTE *)(v20 + 65) = v28;
      *(_OWORD *)(v20 + 72) = 0u;
      *(_OWORD *)(v20 + 88) = 0u;
      swift_storeEnumTagMultiPayload();
      OUTLINED_FUNCTION_30_4();
      OUTLINED_FUNCTION_133();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_2_1();

      v24 = OUTLINED_FUNCTION_82_3();
      outlined consume of AnsweringMachineCallStatus?(v24, v25);
      goto LABEL_7;
    }
    v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantVideoView.ViewModel, ParticipantVideoOverlayView.ViewModel));
    v10 = *(_DWORD *)(v9 + 48);
    outlined destroy of ParticipantVideoOverlayView.ViewModel(v6 + *(int *)(v9 + 64));
  }
  else
  {
    v10 = *(_DWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantVideoView.ViewModel))
                    + 48);
  }
  outlined destroy of ParticipantVideoView.ViewModel(v6 + v10);
  outlined destroy of AccountUpdateNotice(v6, type metadata accessor for ParticipantViewModel.ParticipantDetails);
  _s15ConversationKit11ParticipantVWOcTm_2(v0, v2, type metadata accessor for ParticipantViewModel);
LABEL_7:
  OUTLINED_FUNCTION_52_1();
}

void ParticipantViewModel.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v16;
  const void *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 v23;
  Swift::UInt v24;
  const void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;
  Swift::UInt v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  double v42;
  double v43;
  double v44;
  double v45;
  uint64_t v46;
  double v47;
  double v48;
  double v49;
  double v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  _BYTE v61[112];
  _QWORD v62[8];
  char v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD v69[3];
  uint64_t v70;
  uint64_t v71;

  OUTLINED_FUNCTION_93();
  OUTLINED_FUNCTION_66_8();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_79();
  v5 = v3 - v4;
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v51 - v8;
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v51 - v10;
  OUTLINED_FUNCTION_59_14();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_61_8(v0, v13, v14);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    v25 = (const void *)(v0
                       + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantVideoView.ViewModel))
                                + 48));
    outlined init with take of ParticipantViewModel.ParticipantDetails(v0, (uint64_t)v11);
    OUTLINED_FUNCTION_24_1(v62, v25);
    OUTLINED_FUNCTION_24_21(0);
    ParticipantViewModel.ParticipantDetails.hash(into:)();
    OUTLINED_FUNCTION_46_13((uint64_t)v62, v26, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
    v28 = v70;
    if (v70)
    {
      v29 = v71;
      v30 = __swift_project_boxed_opaque_existential_1(v69, v70);
      v31 = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 8))(v28, v29);
      OUTLINED_FUNCTION_20_32();
      if ((v30 & 1) == 0)
      {
        OUTLINED_FUNCTION_23_29(1u);
        Hasher._combine(_:)(v31);
LABEL_15:
        OUTLINED_FUNCTION_13_40((uint64_t)v62);
        OUTLINED_FUNCTION_79_6();
        ParticipantVideoView.ViewModel.contentsRect.getter();
        CGRect.hash(into:)(v47, v48, v49, v50);
        outlined destroy of ParticipantVideoView.ViewModel((uint64_t)v62);
        v46 = (uint64_t)v11;
        goto LABEL_16;
      }
    }
    else
    {
      OUTLINED_FUNCTION_45_20(v27, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
    }
    OUTLINED_FUNCTION_23_29(0);
    goto LABEL_15;
  }
  if (EnumCaseMultiPayload == 1)
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantVideoView.ViewModel, ParticipantVideoOverlayView.ViewModel));
    v17 = (const void *)(v0 + *(int *)(v16 + 48));
    v18 = (const void *)(v0 + *(int *)(v16 + 64));
    outlined init with take of ParticipantViewModel.ParticipantDetails(v0, (uint64_t)v9);
    OUTLINED_FUNCTION_24_1(v62, v17);
    outlined init with take of ParticipantVideoOverlayView.ViewModel(v18, v61);
    OUTLINED_FUNCTION_24_21(1uLL);
    ParticipantViewModel.ParticipantDetails.hash(into:)();
    OUTLINED_FUNCTION_46_13((uint64_t)v62, v19, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
    v21 = v70;
    if (v70)
    {
      v22 = v71;
      v23 = __swift_project_boxed_opaque_existential_1(v69, v70);
      v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8))(v21, v22);
      OUTLINED_FUNCTION_20_32();
      if ((v23 & 1) == 0)
      {
        OUTLINED_FUNCTION_23_29(1u);
        Hasher._combine(_:)(v24);
LABEL_12:
        OUTLINED_FUNCTION_13_40((uint64_t)v62);
        OUTLINED_FUNCTION_79_6();
        ParticipantVideoView.ViewModel.contentsRect.getter();
        CGRect.hash(into:)(v42, v43, v44, v45);
        ParticipantVideoOverlayView.ViewModel.hash(into:)();
        outlined destroy of ParticipantVideoOverlayView.ViewModel((uint64_t)v61);
        outlined destroy of ParticipantVideoView.ViewModel((uint64_t)v62);
        v46 = (uint64_t)v9;
LABEL_16:
        outlined destroy of AccountUpdateNotice(v46, type metadata accessor for ParticipantViewModel.ParticipantDetails);
        goto LABEL_17;
      }
    }
    else
    {
      OUTLINED_FUNCTION_45_20(v20, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
    }
    OUTLINED_FUNCTION_23_29(0);
    goto LABEL_12;
  }
  v32 = v0
      + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantMonogramView.ViewModel))
               + 48);
  v33 = *(void **)v32;
  v58 = *(_QWORD *)(v32 + 8);
  v59 = v33;
  v35 = *(_QWORD *)(v32 + 16);
  v34 = *(_QWORD *)(v32 + 24);
  v36 = *(_QWORD *)(v32 + 32);
  v37 = *(_QWORD *)(v32 + 48);
  v56 = *(_QWORD *)(v32 + 40);
  v57 = v34;
  v51 = v37;
  v52 = v36;
  v53 = *(_QWORD *)(v32 + 56);
  LODWORD(v34) = *(unsigned __int8 *)(v32 + 64);
  v54 = *(unsigned __int8 *)(v32 + 65);
  v55 = v34;
  v38 = *(_QWORD *)(v32 + 72);
  v39 = *(_QWORD *)(v32 + 80);
  v40 = *(_QWORD *)(v32 + 96);
  v60 = *(_QWORD *)(v32 + 88);
  outlined init with take of ParticipantViewModel.ParticipantDetails(v0, v5);
  OUTLINED_FUNCTION_24_21(2uLL);
  ParticipantViewModel.ParticipantDetails.hash(into:)();
  v62[0] = v33;
  v62[1] = v58;
  v62[2] = v35;
  v62[3] = v57;
  v62[4] = v52;
  v62[5] = v56;
  v62[6] = v37;
  v62[7] = v53;
  v63 = v55;
  v64 = v54;
  v65 = v38;
  v66 = v39;
  v67 = v60;
  v68 = v40;
  v41 = ParticipantMonogramView.ViewModel.hash(into:)(v1);
  OUTLINED_FUNCTION_43_19(v41, type metadata accessor for ParticipantViewModel.ParticipantDetails);
  OUTLINED_FUNCTION_53();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_25();
  swift_bridgeObjectRelease();

  outlined consume of AnsweringMachineCallStatus?(v38, v39);
LABEL_17:
  OUTLINED_FUNCTION_52_1();
}

BOOL static ParticipantViewModel.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int EnumCaseMultiPayload;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  Swift::Int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  char v63;
  void *v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  Swift::Int v69;
  id v70;
  BOOL v71;
  char v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  double v78;
  double v79;
  double v80;
  double v81;
  Swift::Int v82;
  uint64_t v83;
  uint64_t v84;
  double v85;
  double v86;
  double v87;
  double v88;
  BOOL v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  double v94;
  double v95;
  double v96;
  double v97;
  Swift::Int v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unsigned __int8 v104;
  void (*v105)(uint64_t, uint64_t);
  unsigned __int8 v106;
  uint64_t v107;
  double v108;
  double v109;
  double v110;
  double v111;
  uint64_t v112;
  uint64_t v113[4];
  int v114;
  int v115;
  uint64_t v116;
  void *v117;
  Swift::Int v118;
  id v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  int v126;
  int v127;
  uint64_t v128;
  id v129;
  Swift::Int v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  id v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  unsigned __int8 v140[8];
  _BYTE v141[40];
  _BYTE v142[136];
  unsigned __int8 v143[112];
  id v144;
  Swift::Int v145;
  uint64_t v146;
  id v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char v152;
  char v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  _QWORD v158[3];
  uint64_t v159;
  uint64_t v160;
  _QWORD v161[3];
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;

  OUTLINED_FUNCTION_93();
  v163 = v1;
  v164 = v2;
  v4 = v3;
  v6 = v5;
  type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_79();
  v138 = v8 - v9;
  MEMORY[0x1E0C80A78](v10);
  v137 = (uint64_t)v113 - v11;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v113 - v13;
  OUTLINED_FUNCTION_59_14();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_79();
  v18 = v16 - v17;
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_72_1();
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)v113 - v21;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel, ParticipantViewModel));
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v23);
  OUTLINED_FUNCTION_77();
  v26 = v25 - v24;
  v28 = v26 + *(int *)(v27 + 48);
  v29 = v6;
  v30 = v26;
  _s15ConversationKit11ParticipantVWOcTm_2(v29, v26, type metadata accessor for ParticipantViewModel);
  _s15ConversationKit11ParticipantVWOcTm_2(v4, v28, type metadata accessor for ParticipantViewModel);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    v139 = v30;
    if (EnumCaseMultiPayload != 1)
    {
      OUTLINED_FUNCTION_61_8(v30, v32, type metadata accessor for ParticipantViewModel);
      v42 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantMonogramView.ViewModel))
                   + 48);
      v43 = *(void **)(v18 + v42);
      v44 = *(_QWORD *)(v18 + v42 + 8);
      v136 = *(_QWORD *)(v18 + v42 + 16);
      v45 = *(_QWORD *)(v18 + v42 + 32);
      v129 = *(id *)(v18 + v42 + 24);
      v130 = v44;
      v46 = *(_QWORD *)(v18 + v42 + 48);
      v128 = *(_QWORD *)(v18 + v42 + 40);
      v47 = *(_QWORD *)(v18 + v42 + 56);
      LODWORD(v44) = *(unsigned __int8 *)(v18 + v42 + 64);
      v126 = *(unsigned __int8 *)(v18 + v42 + 65);
      v127 = v44;
      v48 = *(_QWORD *)(v18 + v42 + 72);
      v137 = *(_QWORD *)(v18 + v42 + 80);
      v49 = *(_QWORD *)(v18 + v42 + 88);
      v50 = *(_QWORD *)(v18 + v42 + 96);
      v134 = v43;
      v135 = v49;
      v51 = OUTLINED_FUNCTION_42_17();
      if (v51 == 2)
      {
        v52 = v47;
        v133 = v50;
        v53 = v135;
        v54 = v136;
        v55 = *(void **)(v28 + v42);
        v118 = *(_QWORD *)(v28 + v42 + 8);
        v119 = v55;
        v131 = *(_QWORD *)(v28 + v42 + 16);
        v56 = *(void **)(v28 + v42 + 24);
        v57 = *(_QWORD *)(v28 + v42 + 32);
        v116 = *(_QWORD *)(v28 + v42 + 40);
        v117 = v56;
        v121 = *(_QWORD *)(v28 + v42 + 48);
        v122 = v57;
        v120 = *(_QWORD *)(v28 + v42 + 56);
        LODWORD(v56) = *(unsigned __int8 *)(v28 + v42 + 64);
        v114 = *(unsigned __int8 *)(v28 + v42 + 65);
        v115 = (int)v56;
        v58 = *(_QWORD *)(v28 + v42 + 80);
        v123 = *(_QWORD *)(v28 + v42 + 72);
        v124 = v58;
        v59 = *(_QWORD *)(v28 + v42 + 96);
        v125 = *(_QWORD *)(v28 + v42 + 88);
        v132 = v59;
        v60 = v28;
        v61 = v138;
        outlined init with take of ParticipantViewModel.ParticipantDetails(v60, v138);
        static ParticipantViewModel.ParticipantDetails.== infix(_:_:)(v18, v61);
        v63 = v62;
        outlined destroy of AccountUpdateNotice(v18, type metadata accessor for ParticipantViewModel.ParticipantDetails);
        if ((v63 & 1) != 0)
        {
          v64 = v134;
          v144 = v134;
          v145 = v130;
          v146 = v54;
          v147 = v129;
          v148 = v45;
          v149 = v128;
          v150 = v46;
          v151 = v52;
          v152 = v127;
          v153 = v126;
          v154 = v48;
          v155 = v137;
          v156 = v53;
          v157 = v133;
          OUTLINED_FUNCTION_12_9();
          v134 = v64;
          swift_bridgeObjectRetain();
          v113[3] = v45;
          OUTLINED_FUNCTION_8_8();
          v113[2] = v46;
          OUTLINED_FUNCTION_35_0();
          v113[1] = v52;
          swift_bridgeObjectRetain();
          v113[0] = v48;
          v65 = v137;
          outlined copy of (title: String, subtitle: String?)?(v48, v137);
          OUTLINED_FUNCTION_74_2();
          v130 = Hasher._finalize()();
          OUTLINED_FUNCTION_30_4();
          OUTLINED_FUNCTION_58_1();
          OUTLINED_FUNCTION_25();
          OUTLINED_FUNCTION_78_7();
          OUTLINED_FUNCTION_56_9();
          outlined consume of AnsweringMachineCallStatus?(v48, v65);
          v66 = v119;
          v144 = v119;
          v145 = v118;
          v146 = v131;
          v147 = v117;
          v148 = v122;
          v149 = v116;
          v150 = v121;
          v151 = v120;
          v152 = v115;
          v153 = v114;
          v68 = v123;
          v67 = v124;
          v154 = v123;
          v155 = v124;
          v156 = v125;
          v157 = v132;
          OUTLINED_FUNCTION_12_9();
          v129 = v66;
          OUTLINED_FUNCTION_25_2();
          OUTLINED_FUNCTION_86();
          OUTLINED_FUNCTION_35_0();
          OUTLINED_FUNCTION_8_8();
          outlined copy of (title: String, subtitle: String?)?(v68, v67);
          OUTLINED_FUNCTION_74_2();
          v69 = Hasher._finalize()();
          OUTLINED_FUNCTION_2_1();
          OUTLINED_FUNCTION_133();
          OUTLINED_FUNCTION_30_4();
          swift_bridgeObjectRelease();
          v70 = v129;

          OUTLINED_FUNCTION_29_23();
          v71 = v130 == v69;
          outlined destroy of AccountUpdateNotice(v138, type metadata accessor for ParticipantViewModel.ParticipantDetails);
          OUTLINED_FUNCTION_2_1();
          OUTLINED_FUNCTION_133();
          OUTLINED_FUNCTION_30_4();
          swift_bridgeObjectRelease();

          OUTLINED_FUNCTION_29_23();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_78_7();
          OUTLINED_FUNCTION_56_9();
          outlined consume of AnsweringMachineCallStatus?(v113[0], v137);
LABEL_33:
          v91 = v139;
LABEL_47:
          outlined destroy of AccountUpdateNotice(v91, type metadata accessor for ParticipantViewModel);
          return v71;
        }
        outlined destroy of AccountUpdateNotice(v61, type metadata accessor for ParticipantViewModel.ParticipantDetails);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        outlined consume of AnsweringMachineCallStatus?(v123, v124);
        OUTLINED_FUNCTION_30_4();
        OUTLINED_FUNCTION_25();
        OUTLINED_FUNCTION_133();
        OUTLINED_FUNCTION_58_1();
        OUTLINED_FUNCTION_56_9();
        outlined consume of AnsweringMachineCallStatus?(v48, v137);
        goto LABEL_35;
      }
      OUTLINED_FUNCTION_58_1();
      OUTLINED_FUNCTION_25();
      OUTLINED_FUNCTION_133();
      OUTLINED_FUNCTION_78_7();
      OUTLINED_FUNCTION_56_9();
      outlined consume of AnsweringMachineCallStatus?(v48, v137);
      v22 = (char *)v18;
      goto LABEL_16;
    }
    _s15ConversationKit11ParticipantVWOcTm_2(v30, v0, type metadata accessor for ParticipantViewModel);
    v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantVideoView.ViewModel, ParticipantVideoOverlayView.ViewModel));
    v34 = *(int *)(v33 + 48);
    v35 = *(int *)(v33 + 64);
    if (OUTLINED_FUNCTION_42_17() != 1)
    {
      outlined destroy of ParticipantVideoOverlayView.ViewModel(v0 + v35);
      outlined destroy of ParticipantVideoView.ViewModel(v0 + v34);
      v22 = (char *)v0;
LABEL_16:
      v30 = v139;
      goto LABEL_17;
    }
    v36 = v137;
    outlined init with take of ParticipantViewModel.ParticipantDetails(v28, v137);
    OUTLINED_FUNCTION_24_1(&v144, (const void *)(v0 + v34));
    outlined init with take of ParticipantVideoOverlayView.ViewModel((const void *)(v0 + v35), v143);
    OUTLINED_FUNCTION_24_1(v141, (const void *)(v28 + v34));
    outlined init with take of ParticipantVideoOverlayView.ViewModel((const void *)(v28 + v35), v140);
    static ParticipantViewModel.ParticipantDetails.== infix(_:_:)(v0, v36);
    v38 = v37;
    OUTLINED_FUNCTION_37_17(v37, type metadata accessor for ParticipantViewModel.ParticipantDetails);
    if ((v38 & 1) == 0)
    {
LABEL_34:
      outlined destroy of ParticipantVideoOverlayView.ViewModel((uint64_t)v140);
      OUTLINED_FUNCTION_53_12();
      outlined destroy of ParticipantVideoOverlayView.ViewModel((uint64_t)v143);
      v92 = OUTLINED_FUNCTION_54_12();
      OUTLINED_FUNCTION_43_19(v92, type metadata accessor for ParticipantViewModel.ParticipantDetails);
LABEL_35:
      v77 = v139;
      goto LABEL_36;
    }
    OUTLINED_FUNCTION_12_9();
    OUTLINED_FUNCTION_46_13((uint64_t)&v144, v39, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
    if (v162)
    {
      OUTLINED_FUNCTION_9_38(v161);
      OUTLINED_FUNCTION_20_32();
      if ((v38 & 1) == 0)
      {
        OUTLINED_FUNCTION_20_5();
        OUTLINED_FUNCTION_48_16();
        goto LABEL_26;
      }
    }
    else
    {
      OUTLINED_FUNCTION_45_20(v40, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
    }
    OUTLINED_FUNCTION_31_14();
LABEL_26:
    OUTLINED_FUNCTION_13_40((uint64_t)&v144);
    OUTLINED_FUNCTION_68_7();
    ParticipantVideoView.ViewModel.contentsRect.getter();
    CGRect.hash(into:)(v78, v79, v80, v81);
    v82 = Hasher._finalize()();
    v83 = OUTLINED_FUNCTION_12_9();
    OUTLINED_FUNCTION_73_5(v83, v84, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
    if (v159)
    {
      OUTLINED_FUNCTION_9_38(v158);
      OUTLINED_FUNCTION_50_16();
      if ((v158 & 1) == 0)
      {
        OUTLINED_FUNCTION_20_5();
        OUTLINED_FUNCTION_48_16();
        goto LABEL_31;
      }
    }
    else
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v158, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
    }
    OUTLINED_FUNCTION_31_14();
LABEL_31:
    OUTLINED_FUNCTION_6_11(v158, v142);
    CATransform3D.hash(into:)();
    ParticipantVideoView.ViewModel.contentsRect.getter();
    CGRect.hash(into:)(v85, v86, v87, v88);
    if (v82 == Hasher._finalize()())
    {
      static ParticipantVideoOverlayView.ViewModel.== infix(_:_:)(v143, v140);
      v71 = v89;
      outlined destroy of ParticipantVideoOverlayView.ViewModel((uint64_t)v140);
      OUTLINED_FUNCTION_53_12();
      outlined destroy of ParticipantVideoOverlayView.ViewModel((uint64_t)v143);
      v90 = OUTLINED_FUNCTION_54_12();
      OUTLINED_FUNCTION_43_19(v90, type metadata accessor for ParticipantViewModel.ParticipantDetails);
      goto LABEL_33;
    }
    goto LABEL_34;
  }
  _s15ConversationKit11ParticipantVWOcTm_2(v30, (uint64_t)v22, type metadata accessor for ParticipantViewModel);
  v41 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantVideoView.ViewModel))
               + 48);
  if (!OUTLINED_FUNCTION_42_17())
  {
    OUTLINED_FUNCTION_85_4();
    OUTLINED_FUNCTION_24_1(&v144, &v22[v41]);
    OUTLINED_FUNCTION_24_1(v141, (const void *)(v28 + v41));
    static ParticipantViewModel.ParticipantDetails.== infix(_:_:)((uint64_t)v22, (uint64_t)v14);
    v73 = v72;
    outlined destroy of AccountUpdateNotice((uint64_t)v22, type metadata accessor for ParticipantViewModel.ParticipantDetails);
    if ((v73 & 1) == 0)
    {
      OUTLINED_FUNCTION_53_12();
      v76 = OUTLINED_FUNCTION_54_12();
      OUTLINED_FUNCTION_49_15(v76, type metadata accessor for ParticipantViewModel.ParticipantDetails);
      v77 = v30;
LABEL_36:
      outlined destroy of AccountUpdateNotice(v77, type metadata accessor for ParticipantViewModel);
      return 0;
    }
    OUTLINED_FUNCTION_12_9();
    OUTLINED_FUNCTION_46_13((uint64_t)&v144, v74, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
    if (v162)
    {
      OUTLINED_FUNCTION_9_38(v161);
      OUTLINED_FUNCTION_20_32();
      if ((v73 & 1) == 0)
      {
        OUTLINED_FUNCTION_20_5();
        OUTLINED_FUNCTION_48_16();
        goto LABEL_41;
      }
    }
    else
    {
      OUTLINED_FUNCTION_45_20(v75, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
    }
    OUTLINED_FUNCTION_31_14();
LABEL_41:
    OUTLINED_FUNCTION_13_40((uint64_t)&v144);
    OUTLINED_FUNCTION_68_7();
    ParticipantVideoView.ViewModel.contentsRect.getter();
    CGRect.hash(into:)(v94, v95, v96, v97);
    v98 = Hasher._finalize()();
    v99 = OUTLINED_FUNCTION_12_9();
    OUTLINED_FUNCTION_73_5(v99, v100, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
    v101 = v159;
    if (v159)
    {
      v102 = v30;
      v103 = v160;
      v104 = __swift_project_boxed_opaque_existential_1(v158, v159);
      v105 = *(void (**)(uint64_t, uint64_t))(v103 + 8);
      v106 = v104;
      v107 = v103;
      v30 = v102;
      v105(v101, v107);
      OUTLINED_FUNCTION_50_16();
      if ((v106 & 1) == 0)
      {
        OUTLINED_FUNCTION_20_5();
        OUTLINED_FUNCTION_48_16();
LABEL_46:
        OUTLINED_FUNCTION_6_11(v158, v142);
        CATransform3D.hash(into:)();
        ParticipantVideoView.ViewModel.contentsRect.getter();
        CGRect.hash(into:)(v108, v109, v110, v111);
        v71 = v98 == Hasher._finalize()();
        OUTLINED_FUNCTION_53_12();
        v112 = OUTLINED_FUNCTION_54_12();
        OUTLINED_FUNCTION_49_15(v112, type metadata accessor for ParticipantViewModel.ParticipantDetails);
        v91 = v30;
        goto LABEL_47;
      }
    }
    else
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v158, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
    }
    OUTLINED_FUNCTION_31_14();
    goto LABEL_46;
  }
  outlined destroy of ParticipantVideoView.ViewModel((uint64_t)&v22[v41]);
LABEL_17:
  outlined destroy of AccountUpdateNotice((uint64_t)v22, type metadata accessor for ParticipantViewModel.ParticipantDetails);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v30, &demangling cache variable for type metadata for (ParticipantViewModel, ParticipantViewModel));
  return 0;
}

void static ParticipantViewModel.ParticipantDetails.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  BOOL v8;

  if ((static UUID.== infix(_:_:)() & 1) != 0)
  {
    v4 = *(int *)(OUTLINED_FUNCTION_83_6() + 20);
    v5 = *(_QWORD *)(a1 + v4);
    v6 = *(_QWORD *)(a1 + v4 + 8);
    v7 = (_QWORD *)(a2 + v4);
    v8 = v5 == *v7 && v6 == v7[1];
    if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      OUTLINED_FUNCTION_15_7();
      if (v8)
      {
        OUTLINED_FUNCTION_15_7();
        if (v8)
        {
          OUTLINED_FUNCTION_15_7();
          if (v8)
          {
            OUTLINED_FUNCTION_15_7();
            if (v8)
              OUTLINED_FUNCTION_15_7();
          }
        }
      }
    }
  }
  OUTLINED_FUNCTION_18();
}

void ParticipantViewModel.hashValue.getter()
{
  ParticipantViewModel.hashValue.getter((void (*)(_BYTE *))ParticipantViewModel.hash(into:));
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance ParticipantViewModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  protocol witness for Hashable._rawHashValue(seed:) in conformance ParticipantViewModel(a1, a2, a3, (void (*)(_BYTE *))ParticipantViewModel.hash(into:));
}

void ParticipantViewModel.ParticipantDetails.hash(into:)()
{
  uint64_t v0;
  int *v1;

  OUTLINED_FUNCTION_33_0();
  _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  dispatch thunk of Hashable.hash(into:)();
  v1 = (int *)OUTLINED_FUNCTION_83_6();
  OUTLINED_FUNCTION_35_0();
  String.hash(into:)();
  OUTLINED_FUNCTION_133();
  Hasher._combine(_:)(*(_BYTE *)(v0 + v1[6]));
  OUTLINED_FUNCTION_41_17(v1[7]);
  OUTLINED_FUNCTION_41_17(v1[8]);
  OUTLINED_FUNCTION_41_17(v1[9]);
  OUTLINED_FUNCTION_41_17(v1[10]);
  OUTLINED_FUNCTION_41_17(v1[11]);
}

void ParticipantViewModel.ParticipantDetails.hashValue.getter()
{
  ParticipantViewModel.hashValue.getter((void (*)(_BYTE *))ParticipantViewModel.ParticipantDetails.hash(into:));
}

void ParticipantViewModel.hashValue.getter(void (*a1)(_BYTE *))
{
  _BYTE v2[72];

  OUTLINED_FUNCTION_12_9();
  a1(v2);
  Hasher._finalize()();
  OUTLINED_FUNCTION_2();
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance ParticipantViewModel.ParticipantDetails(uint64_t a1, uint64_t a2, uint64_t a3)
{
  protocol witness for Hashable._rawHashValue(seed:) in conformance ParticipantViewModel(a1, a2, a3, (void (*)(_BYTE *))ParticipantViewModel.ParticipantDetails.hash(into:));
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance ParticipantViewModel(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_BYTE *))
{
  _BYTE v5[72];

  Hasher.init(_seed:)();
  a4(v5);
  Hasher._finalize()();
  OUTLINED_FUNCTION_2();
}

void *static Participant.transformForLocalParticipant(deviceOrientation:cameraType:currentIdiom:defaults:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, unint64_t a3@<X2>, uint64_t a4@<X4>, void *a5@<X8>)
{
  uint64_t ObjectType;
  CGFloat v12[16];

  ObjectType = swift_getObjectType();
  specialized static Participant.transformForLocalParticipant(deviceOrientation:cameraType:currentIdiom:defaults:)(a1, a2, a3, ObjectType, a4, v12);
  return OUTLINED_FUNCTION_6_11(a5, v12);
}

void static Participant.compensatedVideoRotation(_:videoTransform:effectsEnabled:)(uint64_t a1@<X0>, CGFloat *a2@<X1>, char a3@<W2>, CGFloat *a4@<X8>)
{
  CGFloat m11;
  CGFloat m12;
  CGFloat m13;
  CGFloat m14;
  CGFloat m21;
  CGFloat m22;
  CGFloat m24;
  CGFloat m23;
  char v15;
  id v16;
  id v17;
  CGFloat m31;
  CGFloat m32;
  CGFloat m33;
  CGFloat m34;
  CGFloat m41;
  CGFloat m42;
  CGFloat m43;
  CGFloat m44;
  BOOL v26;
  double v27;
  CGFloat v28;
  double v29;
  CGFloat v30;
  CGFloat v31;
  CGFloat v32;
  CGFloat v33;
  CGFloat v34;
  CGFloat v35;
  CGFloat v36;
  CGFloat v37;
  CGFloat v38;
  CGFloat v39;
  CATransform3D m;
  CATransform3D v41;

  m11 = *a2;
  m12 = a2[1];
  m13 = a2[2];
  m14 = a2[3];
  m21 = a2[4];
  m22 = a2[5];
  m23 = a2[6];
  m24 = a2[7];
  v38 = a2[9];
  v39 = a2[8];
  v36 = a2[11];
  v37 = a2[10];
  v34 = a2[13];
  v35 = a2[12];
  v32 = a2[15];
  v33 = a2[14];
  if (one-time initialization token for shared != -1)
    swift_once();
  v15 = (*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 632))();
  v16 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
  v17 = objc_msgSend(v16, sel_userInterfaceIdiom);

  if ((v15 & 1) != 0)
  {
    if (v17 == (id)2)
    {
      m32 = v38;
      m31 = v39;
      m34 = v36;
      m33 = v37;
      m42 = v34;
      m41 = v35;
      m44 = v32;
      m43 = v33;
    }
    else
    {
      if ((a1 | 2) == 2)
      {
        v27 = 1.0;
        if ((a3 & 1) != 0)
          v27 = -1.0;
        v30 = v27;
        v31 = -1.0;
        v28 = 4.71238898;
      }
      else
      {
        v29 = -1.0;
        if ((a3 & 1) != 0)
          v29 = 1.0;
        v30 = v29;
        v31 = 1.0;
        v28 = 1.57079633;
      }
      v41.m11 = m11;
      v41.m12 = m12;
      v41.m13 = m13;
      v41.m14 = m14;
      v41.m21 = m21;
      v41.m22 = m22;
      v41.m23 = m23;
      v41.m24 = m24;
      v41.m31 = v39;
      v41.m32 = v38;
      v41.m33 = v37;
      v41.m34 = v36;
      v41.m41 = v35;
      v41.m42 = v34;
      v41.m43 = v33;
      v41.m44 = v32;
      CATransform3DRotate(&m, &v41, v28, 0.0, 0.0, 1.0);
      v41 = m;
      CATransform3DScale(&m, &v41, v31, v30, 1.0);
      m11 = m.m11;
      m12 = m.m12;
      m13 = m.m13;
      m14 = m.m14;
      m21 = m.m21;
      m22 = m.m22;
      m24 = m.m24;
      m23 = m.m23;
      m32 = m.m32;
      m31 = m.m31;
      m34 = m.m34;
      m33 = m.m33;
      m42 = m.m42;
      m41 = m.m41;
      m44 = m.m44;
      m43 = m.m43;
    }
  }
  else
  {
    v26 = v17 == (id)2 && a1 == 1;
    m32 = v38;
    m31 = v39;
    m34 = v36;
    m33 = v37;
    m42 = v34;
    m41 = v35;
    m44 = v32;
    m43 = v33;
    if (v26)
    {
      CGAffineTransformMakeRotation((CGAffineTransform *)&v41, 1.57079633);
      *(_OWORD *)&m.m11 = *(_OWORD *)&v41.m11;
      *(_OWORD *)&m.m13 = *(_OWORD *)&v41.m13;
      *(_OWORD *)&m.m21 = *(_OWORD *)&v41.m21;
      CATransform3DMakeAffineTransform(&v41, (CGAffineTransform *)&m);
      m11 = v41.m11;
      m12 = v41.m12;
      m13 = v41.m13;
      m14 = v41.m14;
      m21 = v41.m21;
      m22 = v41.m22;
      m24 = v41.m24;
      m23 = v41.m23;
      m32 = v41.m32;
      m31 = v41.m31;
      m34 = v41.m34;
      m33 = v41.m33;
      m42 = v41.m42;
      m41 = v41.m41;
      m44 = v41.m44;
      m43 = v41.m43;
    }
  }
  *a4 = m11;
  a4[1] = m12;
  a4[2] = m13;
  a4[3] = m14;
  a4[4] = m21;
  a4[5] = m22;
  a4[6] = m23;
  a4[7] = m24;
  a4[8] = m31;
  a4[9] = m32;
  a4[10] = m33;
  a4[11] = m34;
  a4[12] = m41;
  a4[13] = m42;
  a4[14] = m43;
  a4[15] = m44;
}

uint64_t static Participant.rotationFor(_:cameraPosition:)(uint64_t result)
{
  Swift::String v1;

  switch(result)
  {
    case 0:
    case 1:
    case 2:
    case 3:
      return result;
    default:
      _StringGuts.grow(_:)(47);
      swift_bridgeObjectRelease();
      v1._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v1);
      swift_bridgeObjectRelease();
      result = _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      break;
  }
  return result;
}

void static Participant.affineTransformForRemote(_:)(uint64_t a1@<X0>, CGFloat *a2@<X8>)
{
  id v4;
  id v5;
  CGFloat b;
  CGFloat a;
  double c;
  CGFloat d;
  CGFloat tx;
  CGFloat ty;
  CGFloat v12;
  Swift::String v13;
  Swift::String v14;
  CGAffineTransform v15;
  uint64_t v16;

  v4 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
  v5 = objc_msgSend(v4, sel_userInterfaceIdiom);

  b = 0.0;
  a = 1.0;
  if (v5 || (swift_beginAccess(), (static AmbientState.isPresented & 1) != 0))
  {
    c = OUTLINED_FUNCTION_71_10();
  }
  else
  {
    c = OUTLINED_FUNCTION_71_10();
    switch(a1)
    {
      case 0:
        v12 = 1.57079633;
        goto LABEL_9;
      case 1:
        break;
      case 2:
        v12 = -1.57079633;
        goto LABEL_9;
      case 3:
        v12 = 3.14159265;
LABEL_9:
        CGAffineTransformMakeRotation(&v15, v12);
        a = v15.a;
        b = v15.b;
        c = v15.c;
        d = v15.d;
        tx = v15.tx;
        ty = v15.ty;
        break;
      default:
        v15.a = 0.0;
        v15.b = -2.68156159e154;
        _StringGuts.grow(_:)(64);
        OUTLINED_FUNCTION_61();
        v13._countAndFlagsBits = 0xD00000000000003ELL;
        String.append(_:)(v13);
        v16 = a1;
        v14._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        String.append(_:)(v14);
        swift_bridgeObjectRelease();
        _assertionFailure(_:_:file:line:flags:)();
        __break(1u);
        JUMPOUT(0x1BD0F2A90);
    }
  }
  *a2 = a;
  a2[1] = b;
  a2[2] = c;
  a2[3] = d;
  a2[4] = tx;
  a2[5] = ty;
}

CGFloat static Participant.transformForRemote(_:)@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  CGFloat result;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  CATransform3D v11;
  CGAffineTransform m;
  CGAffineTransform v13;

  static Participant.affineTransformForRemote(_:)(a1, &v13.a);
  m = v13;
  CATransform3DMakeAffineTransform(&v11, &m);
  result = v11.m11;
  v4 = *(_OWORD *)&v11.m13;
  v5 = *(_OWORD *)&v11.m21;
  v6 = *(_OWORD *)&v11.m23;
  v7 = *(_OWORD *)&v11.m31;
  v8 = *(_OWORD *)&v11.m33;
  v9 = *(_OWORD *)&v11.m41;
  v10 = *(_OWORD *)&v11.m43;
  *a2 = *(_OWORD *)&v11.m11;
  a2[1] = v4;
  a2[2] = v5;
  a2[3] = v6;
  a2[4] = v7;
  a2[5] = v8;
  a2[6] = v9;
  a2[7] = v10;
  return result;
}

unint64_t static Participant.screenRotationFor(_:)(unint64_t result)
{
  Swift::String v1;
  Swift::String v2;

  if (result >= 4)
  {
    _StringGuts.grow(_:)(55);
    v1._object = (void *)0x80000001BD6734C0;
    v1._countAndFlagsBits = 0xD000000000000035;
    String.append(_:)(v1);
    v2._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v2);
    swift_bridgeObjectRelease();
    result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t specialized static Participant.transformForLocalParticipant(deviceOrientation:cameraType:currentIdiom:defaults:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, unint64_t a3@<X2>, uint64_t a4@<X3>, CGFloat *a5@<X8>)
{
  __int128 v11;
  __int128 v12;
  __int128 v13;
  CGFloat v14;
  uint64_t result;
  CGFloat m12;
  CGFloat m13;
  CGFloat m14;
  CGFloat m21;
  CGFloat m22;
  CGFloat m23;
  CGFloat m24;
  CGFloat m31;
  CGFloat m32;
  CGFloat m33;
  CGFloat m34;
  CGFloat m41;
  CGFloat m42;
  CGFloat m43;
  CGFloat m44;
  Swift::String v31;
  Swift::String v32;
  CATransform3D v33;
  CGAffineTransform m;

  if (a3 > 5 || ((1 << a3) & 0x26) == 0)
  {
    swift_beginAccess();
    if ((static AmbientState.isPresented & 1) == 0)
    {
      m.a = 1.0;
      m.b = 0.0;
      m.c = 0.0;
      m.d = 1.0;
      m.tx = 0.0;
      m.ty = 0.0;
LABEL_17:
      result = (uint64_t)CATransform3DMakeAffineTransform(&v33, &m);
      m12 = v33.m12;
      m13 = v33.m13;
      m14 = v33.m14;
      m21 = v33.m21;
      m22 = v33.m22;
      m23 = v33.m23;
      m24 = v33.m24;
      m31 = v33.m31;
      m32 = v33.m32;
      m33 = v33.m33;
      m34 = v33.m34;
      m41 = v33.m41;
      m42 = v33.m42;
      m43 = v33.m43;
      m44 = v33.m44;
      *a5 = v33.m11;
      a5[1] = m12;
      a5[2] = m13;
      a5[3] = m14;
      a5[4] = m21;
      a5[5] = m22;
      a5[6] = m23;
      a5[7] = m24;
      a5[8] = m31;
      a5[9] = m32;
      a5[10] = m33;
      a5[11] = m34;
      a5[12] = m41;
      a5[13] = m42;
      a5[14] = m43;
      a5[15] = m44;
      return result;
    }
  }
  if (((*(uint64_t (**)(void))(*(_QWORD *)a4 + 880))() & 1) != 0 && a3 == 1 && a2 == 1)
  {
    if (((*(uint64_t (**)(void))(*(_QWORD *)a4 + 632))() & 1) != 0)
LABEL_13:
      v14 = 3.14159265;
    else
LABEL_14:
      v14 = -1.57079633;
LABEL_15:
    CGAffineTransformMakeRotation((CGAffineTransform *)&v33, v14);
    v12 = *(_OWORD *)&v33.m11;
    v11 = *(_OWORD *)&v33.m13;
    v13 = *(_OWORD *)&v33.m21;
LABEL_16:
    *(_OWORD *)&m.a = v12;
    *(_OWORD *)&m.c = v11;
    *(_OWORD *)&m.tx = v13;
    goto LABEL_17;
  }
  v11 = xmmword_1BD645B90;
  v12 = xmmword_1BD64A130;
  v13 = 0uLL;
  switch(a1)
  {
    case 0:
      goto LABEL_14;
    case 1:
      goto LABEL_16;
    case 2:
      v14 = 1.57079633;
      goto LABEL_15;
    case 3:
      goto LABEL_13;
    default:
      _StringGuts.grow(_:)(70);
      v31._object = (void *)0x80000001BD673350;
      v31._countAndFlagsBits = 0xD000000000000044;
      String.append(_:)(v31);
      v32._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v32);
      swift_bridgeObjectRelease();
      result = _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      break;
  }
  return result;
}

uint64_t type metadata accessor for ParticipantViewModel.ParticipantDetails(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for ParticipantViewModel.ParticipantDetails);
}

uint64_t outlined retain of SymbolImageDescription(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;

  v2 = *(void **)(a1 + 24);
  v3 = *(id *)(a1 + 56);
  swift_bridgeObjectRetain();
  v4 = v2;
  return a1;
}

uint64_t *outlined release of Participant.CopresenceInfo?(uint64_t *a1)
{
  outlined consume of Participant.CopresenceInfo?(*a1, a1[1]);
  return a1;
}

uint64_t type metadata accessor for ParticipantViewModel(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for ParticipantViewModel);
}

uint64_t outlined init with take of ParticipantViewModel.ParticipantDetails(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of ParticipantVideoView.ViewModel(uint64_t a1)
{
  destroy for ParticipantVideoView.ViewModel(a1);
  return a1;
}

uint64_t outlined copy of (title: String, subtitle: String?)?(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

void outlined init with copy of Participant.ScreenInfo?(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_83(a1, a2, a3);
  OUTLINED_FUNCTION_5(v3);
  OUTLINED_FUNCTION_0();
}

uint64_t specialized static Participant.transformForLocalParticipant(deviceOrientation:cameraType:currentIdiom:defaults:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, unint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, CGFloat *a6@<X8>)
{
  __int128 v13;
  __int128 v14;
  __int128 v15;
  CGFloat v16;
  uint64_t result;
  CGFloat m12;
  CGFloat m13;
  CGFloat m14;
  CGFloat m21;
  CGFloat m22;
  CGFloat m23;
  CGFloat m24;
  CGFloat m31;
  CGFloat m32;
  CGFloat m33;
  CGFloat m34;
  CGFloat m41;
  CGFloat m42;
  CGFloat m43;
  CGFloat m44;
  Swift::String v33;
  Swift::String v34;
  CATransform3D v35;
  CGAffineTransform m;

  if (a3 > 5 || ((1 << a3) & 0x26) == 0)
  {
    swift_beginAccess();
    if ((static AmbientState.isPresented & 1) == 0)
    {
      m.a = 1.0;
      m.b = 0.0;
      m.c = 0.0;
      m.d = 1.0;
      m.tx = 0.0;
      m.ty = 0.0;
LABEL_17:
      result = (uint64_t)CATransform3DMakeAffineTransform(&v35, &m);
      m12 = v35.m12;
      m13 = v35.m13;
      m14 = v35.m14;
      m21 = v35.m21;
      m22 = v35.m22;
      m23 = v35.m23;
      m24 = v35.m24;
      m31 = v35.m31;
      m32 = v35.m32;
      m33 = v35.m33;
      m34 = v35.m34;
      m41 = v35.m41;
      m42 = v35.m42;
      m43 = v35.m43;
      m44 = v35.m44;
      *a6 = v35.m11;
      a6[1] = m12;
      a6[2] = m13;
      a6[3] = m14;
      a6[4] = m21;
      a6[5] = m22;
      a6[6] = m23;
      a6[7] = m24;
      a6[8] = m31;
      a6[9] = m32;
      a6[10] = m33;
      a6[11] = m34;
      a6[12] = m41;
      a6[13] = m42;
      a6[14] = m43;
      a6[15] = m44;
      return result;
    }
  }
  if (((*(uint64_t (**)(uint64_t, uint64_t))(a5 + 624))(a4, a5) & 1) != 0 && a3 == 1 && a2 == 1)
  {
    if (((*(uint64_t (**)(uint64_t, uint64_t))(a5 + 648))(a4, a5) & 1) != 0)
LABEL_13:
      v16 = 3.14159265;
    else
LABEL_14:
      v16 = -1.57079633;
LABEL_15:
    CGAffineTransformMakeRotation((CGAffineTransform *)&v35, v16);
    v14 = *(_OWORD *)&v35.m11;
    v13 = *(_OWORD *)&v35.m13;
    v15 = *(_OWORD *)&v35.m21;
LABEL_16:
    *(_OWORD *)&m.a = v14;
    *(_OWORD *)&m.c = v13;
    *(_OWORD *)&m.tx = v15;
    goto LABEL_17;
  }
  v13 = xmmword_1BD645B90;
  v14 = xmmword_1BD64A130;
  v15 = 0uLL;
  switch(a1)
  {
    case 0:
      goto LABEL_14;
    case 1:
      goto LABEL_16;
    case 2:
      v16 = 1.57079633;
      goto LABEL_15;
    case 3:
      goto LABEL_13;
    default:
      _StringGuts.grow(_:)(70);
      v33._object = (void *)0x80000001BD673350;
      v33._countAndFlagsBits = 0xD000000000000044;
      String.append(_:)(v33);
      v34._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v34);
      swift_bridgeObjectRelease();
      result = _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      break;
  }
  return result;
}

void base witness table accessor for Equatable in ParticipantViewModel()
{
  _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type ParticipantViewModel and conformance ParticipantViewModel, type metadata accessor for ParticipantViewModel, (uint64_t)&protocol conformance descriptor for ParticipantViewModel);
}

void base witness table accessor for Equatable in ParticipantViewModel.ParticipantDetails()
{
  _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type ParticipantViewModel.ParticipantDetails and conformance ParticipantViewModel.ParticipantDetails, type metadata accessor for ParticipantViewModel.ParticipantDetails, (uint64_t)&protocol conformance descriptor for ParticipantViewModel.ParticipantDetails);
}

_QWORD *initializeBufferWithCopyOfBuffer for ParticipantViewModel(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  int *v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  char *v53;
  _BYTE *v54;
  __int128 v55;
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  void *v60;
  void *v61;
  id v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  id v68;
  id v69;
  id v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  id v81;
  __int128 v82;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v21 = type metadata accessor for UUID();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(a1, a2, v21);
      v22 = (int *)type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
      v23 = v22[5];
      v24 = (_QWORD *)((char *)a1 + v23);
      v25 = (_QWORD *)((char *)a2 + v23);
      v27 = *v25;
      v26 = v25[1];
      *v24 = v27;
      v24[1] = v26;
      *((_BYTE *)a1 + v22[6]) = *((_BYTE *)a2 + v22[6]);
      *((_BYTE *)a1 + v22[7]) = *((_BYTE *)a2 + v22[7]);
      *((_BYTE *)a1 + v22[8]) = *((_BYTE *)a2 + v22[8]);
      *((_BYTE *)a1 + v22[9]) = *((_BYTE *)a2 + v22[9]);
      *((_BYTE *)a1 + v22[10]) = *((_BYTE *)a2 + v22[10]);
      *((_BYTE *)a1 + v22[11]) = *((_BYTE *)a2 + v22[11]);
      swift_bridgeObjectRetain();
      v28 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantMonogramView.ViewModel))
                   + 48);
      v29 = (char *)a1 + v28;
      v30 = (char *)a2 + v28;
      v31 = *(void **)((char *)a2 + v28);
      v32 = *((_QWORD *)v30 + 1);
      *(_QWORD *)v29 = v31;
      *((_QWORD *)v29 + 1) = v32;
      v33 = *((_QWORD *)v30 + 3);
      *((_QWORD *)v29 + 2) = *((_QWORD *)v30 + 2);
      *((_QWORD *)v29 + 3) = v33;
      v34 = *((_QWORD *)v30 + 5);
      *((_QWORD *)v29 + 4) = *((_QWORD *)v30 + 4);
      *((_QWORD *)v29 + 5) = v34;
      v35 = *((_QWORD *)v30 + 7);
      *((_QWORD *)v29 + 6) = *((_QWORD *)v30 + 6);
      *((_QWORD *)v29 + 7) = v35;
      v29[64] = v30[64];
      v29[65] = v30[65];
      v36 = *((_QWORD *)v30 + 10);
      v37 = v31;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v36)
      {
        *((_QWORD *)v29 + 9) = *((_QWORD *)v30 + 9);
        *((_QWORD *)v29 + 10) = v36;
        v38 = *((_QWORD *)v30 + 12);
        *((_QWORD *)v29 + 11) = *((_QWORD *)v30 + 11);
        *((_QWORD *)v29 + 12) = v38;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v57 = *(_OWORD *)(v30 + 88);
        *(_OWORD *)(v29 + 72) = *(_OWORD *)(v30 + 72);
        *(_OWORD *)(v29 + 88) = v57;
      }
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v7 = type metadata accessor for UUID();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = (int *)type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
      v9 = v8[5];
      v10 = (_QWORD *)((char *)a1 + v9);
      v11 = (_QWORD *)((char *)a2 + v9);
      v13 = *v11;
      v12 = v11[1];
      *v10 = v13;
      v10[1] = v12;
      *((_BYTE *)a1 + v8[6]) = *((_BYTE *)a2 + v8[6]);
      *((_BYTE *)a1 + v8[7]) = *((_BYTE *)a2 + v8[7]);
      *((_BYTE *)a1 + v8[8]) = *((_BYTE *)a2 + v8[8]);
      *((_BYTE *)a1 + v8[9]) = *((_BYTE *)a2 + v8[9]);
      *((_BYTE *)a1 + v8[10]) = *((_BYTE *)a2 + v8[10]);
      *((_BYTE *)a1 + v8[11]) = *((_BYTE *)a2 + v8[11]);
      swift_bridgeObjectRetain();
      v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantVideoView.ViewModel, ParticipantVideoOverlayView.ViewModel));
      v15 = *(int *)(v14 + 48);
      v16 = (char *)a1 + v15;
      v17 = (char *)a2 + v15;
      v18 = *(_QWORD *)((char *)a2 + v15 + 24);
      if (v18)
      {
        v19 = *((_QWORD *)v17 + 4);
        *((_QWORD *)v16 + 3) = v18;
        *((_QWORD *)v16 + 4) = v19;
        (**(void (***)(char *, char *))(v18 - 8))(v16, v17);
      }
      else
      {
        v51 = *((_OWORD *)v17 + 1);
        *(_OWORD *)v16 = *(_OWORD *)v17;
        *((_OWORD *)v16 + 1) = v51;
        *((_QWORD *)v16 + 4) = *((_QWORD *)v17 + 4);
      }
      memcpy(v16 + 40, v17 + 40, 0x84uLL);
      v52 = *(int *)(v14 + 64);
      v53 = (char *)a1 + v52;
      v54 = (char *)a2 + v52;
      switch(v54[104])
      {
        case 1:
          v55 = *(_OWORD *)(v54 + 24);
          *(_OWORD *)(v53 + 24) = v55;
          (**(void (***)(void *, _BYTE *))(v55 - 8))(v53, v54);
          v56 = *((_QWORD *)v54 + 6);
          *((_QWORD *)v53 + 5) = *((_QWORD *)v54 + 5);
          *((_QWORD *)v53 + 6) = v56;
          v53[104] = 1;
          swift_bridgeObjectRetain();
          break;
        case 2:
          v59 = *((_QWORD *)v54 + 1);
          *(_QWORD *)v53 = *(_QWORD *)v54;
          *((_QWORD *)v53 + 1) = v59;
          v60 = (void *)*((_QWORD *)v54 + 3);
          *((_QWORD *)v53 + 2) = *((_QWORD *)v54 + 2);
          *((_QWORD *)v53 + 3) = v60;
          *((_WORD *)v53 + 16) = *((_WORD *)v54 + 16);
          *((_QWORD *)v53 + 5) = *((_QWORD *)v54 + 5);
          v53[48] = v54[48];
          v61 = (void *)*((_QWORD *)v54 + 7);
          *((_QWORD *)v53 + 7) = v61;
          v53[104] = 2;
          swift_bridgeObjectRetain();
          v62 = v60;
          goto LABEL_21;
        case 3:
          v63 = *((_QWORD *)v54 + 1);
          *(_QWORD *)v53 = *(_QWORD *)v54;
          *((_QWORD *)v53 + 1) = v63;
          v64 = (void *)*((_QWORD *)v54 + 3);
          *((_QWORD *)v53 + 2) = *((_QWORD *)v54 + 2);
          *((_QWORD *)v53 + 3) = v64;
          *((_WORD *)v53 + 16) = *((_WORD *)v54 + 16);
          *((_QWORD *)v53 + 5) = *((_QWORD *)v54 + 5);
          v53[48] = v54[48];
          v66 = (void *)*((_QWORD *)v54 + 7);
          v65 = *((_QWORD *)v54 + 8);
          *((_QWORD *)v53 + 7) = v66;
          *((_QWORD *)v53 + 8) = v65;
          v67 = *((_QWORD *)v54 + 9);
          v61 = (void *)*((_QWORD *)v54 + 10);
          *((_QWORD *)v53 + 9) = v67;
          *((_QWORD *)v53 + 10) = v61;
          v53[104] = 3;
          swift_bridgeObjectRetain();
          v68 = v64;
          v69 = v66;
          swift_bridgeObjectRetain();
LABEL_21:
          v70 = v61;
          break;
        case 4:
          v71 = *(void **)v54;
          v72 = *((_QWORD *)v54 + 1);
          *(_QWORD *)v53 = *(_QWORD *)v54;
          *((_QWORD *)v53 + 1) = v72;
          v73 = *((_QWORD *)v54 + 3);
          *((_QWORD *)v53 + 2) = *((_QWORD *)v54 + 2);
          *((_QWORD *)v53 + 3) = v73;
          v74 = *((_QWORD *)v54 + 5);
          *((_QWORD *)v53 + 4) = *((_QWORD *)v54 + 4);
          *((_QWORD *)v53 + 5) = v74;
          v75 = *((_QWORD *)v54 + 7);
          *((_QWORD *)v53 + 6) = *((_QWORD *)v54 + 6);
          *((_QWORD *)v53 + 7) = v75;
          v53[64] = v54[64];
          v53[65] = v54[65];
          v76 = *((_QWORD *)v54 + 10);
          v77 = v71;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v76)
          {
            *((_QWORD *)v53 + 9) = *((_QWORD *)v54 + 9);
            *((_QWORD *)v53 + 10) = v76;
            v78 = *((_QWORD *)v54 + 11);
            v79 = *((_QWORD *)v54 + 12);
            *((_QWORD *)v53 + 11) = v78;
            *((_QWORD *)v53 + 12) = v79;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            v82 = *(_OWORD *)(v54 + 88);
            *(_OWORD *)(v53 + 72) = *(_OWORD *)(v54 + 72);
            *(_OWORD *)(v53 + 88) = v82;
          }
          v53[104] = 4;
          break;
        case 5:
          v80 = *(void **)v54;
          *(_QWORD *)v53 = *(_QWORD *)v54;
          v53[104] = 5;
          v81 = v80;
          break;
        default:
          memcpy(v53, v54, 0x69uLL);
          break;
      }
    }
    else
    {
      v39 = type metadata accessor for UUID();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(a1, a2, v39);
      v40 = (int *)type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
      v41 = v40[5];
      v42 = (_QWORD *)((char *)a1 + v41);
      v43 = (_QWORD *)((char *)a2 + v41);
      v45 = *v43;
      v44 = v43[1];
      *v42 = v45;
      v42[1] = v44;
      *((_BYTE *)a1 + v40[6]) = *((_BYTE *)a2 + v40[6]);
      *((_BYTE *)a1 + v40[7]) = *((_BYTE *)a2 + v40[7]);
      *((_BYTE *)a1 + v40[8]) = *((_BYTE *)a2 + v40[8]);
      *((_BYTE *)a1 + v40[9]) = *((_BYTE *)a2 + v40[9]);
      *((_BYTE *)a1 + v40[10]) = *((_BYTE *)a2 + v40[10]);
      *((_BYTE *)a1 + v40[11]) = *((_BYTE *)a2 + v40[11]);
      swift_bridgeObjectRetain();
      v46 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantVideoView.ViewModel))
                   + 48);
      v47 = (char *)a1 + v46;
      v48 = (char *)a2 + v46;
      v49 = *((_QWORD *)v48 + 3);
      if (v49)
      {
        v50 = *((_QWORD *)v48 + 4);
        *((_QWORD *)v47 + 3) = v49;
        *((_QWORD *)v47 + 4) = v50;
        (**(void (***)(char *, char *))(v49 - 8))(v47, v48);
      }
      else
      {
        v58 = *((_OWORD *)v48 + 1);
        *(_OWORD *)v47 = *(_OWORD *)v48;
        *((_OWORD *)v47 + 1) = v58;
        *((_QWORD *)v47 + 4) = *((_QWORD *)v48 + 4);
      }
      memcpy(v47 + 40, v48 + 40, 0x84uLL);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void destroy for ParticipantViewModel(uint64_t a1)
{
  int EnumCaseMultiPayload;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v9 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(a1, v9);
      type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
      swift_bridgeObjectRelease();
      v8 = a1
         + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantMonogramView.ViewModel))
                  + 48);
LABEL_11:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v8 + 80))
      {
        swift_bridgeObjectRelease();
LABEL_13:
        swift_bridgeObjectRelease();
      }
      break;
    case 1:
      v5 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
      type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
      swift_bridgeObjectRelease();
      v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantVideoView.ViewModel, ParticipantVideoOverlayView.ViewModel));
      v7 = a1 + *(int *)(v6 + 48);
      if (*(_QWORD *)(v7 + 24))
        __swift_destroy_boxed_opaque_existential_1(v7);
      v8 = a1 + *(int *)(v6 + 64);
      switch(*(_BYTE *)(v8 + 104))
      {
        case 1:
          __swift_destroy_boxed_opaque_existential_1(v8);
          goto LABEL_13;
        case 2:
          swift_bridgeObjectRelease();

          v10 = *(id *)(v8 + 56);
          goto LABEL_18;
        case 3:
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          v10 = *(id *)(v8 + 80);
          goto LABEL_18;
        case 4:
          goto LABEL_11;
        case 5:
          v10 = *(id *)v8;
LABEL_18:

          break;
        default:
          return;
      }
      break;
    case 0:
      v3 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
      swift_bridgeObjectRelease();
      v4 = a1
         + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantVideoView.ViewModel))
                  + 48);
      if (*(_QWORD *)(v4 + 24))
        __swift_destroy_boxed_opaque_existential_1(v4);
      break;
  }
}

uint64_t initializeWithCopy for ParticipantViewModel(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  char *v50;
  _BYTE *v51;
  __int128 v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  void *v57;
  void *v58;
  id v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  id v65;
  id v66;
  id v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  id v78;
  __int128 v79;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v18 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(a1, a2, v18);
    v19 = (int *)type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
    v20 = v19[5];
    v21 = (_QWORD *)(a1 + v20);
    v22 = (uint64_t *)(a2 + v20);
    v24 = *v22;
    v23 = v22[1];
    *v21 = v24;
    v21[1] = v23;
    *(_BYTE *)(a1 + v19[6]) = *(_BYTE *)(a2 + v19[6]);
    *(_BYTE *)(a1 + v19[7]) = *(_BYTE *)(a2 + v19[7]);
    *(_BYTE *)(a1 + v19[8]) = *(_BYTE *)(a2 + v19[8]);
    *(_BYTE *)(a1 + v19[9]) = *(_BYTE *)(a2 + v19[9]);
    *(_BYTE *)(a1 + v19[10]) = *(_BYTE *)(a2 + v19[10]);
    *(_BYTE *)(a1 + v19[11]) = *(_BYTE *)(a2 + v19[11]);
    swift_bridgeObjectRetain();
    v25 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantMonogramView.ViewModel))
                 + 48);
    v26 = a1 + v25;
    v27 = a2 + v25;
    v28 = *(void **)(a2 + v25);
    v29 = *(_QWORD *)(v27 + 8);
    *(_QWORD *)v26 = v28;
    *(_QWORD *)(v26 + 8) = v29;
    v30 = *(_QWORD *)(v27 + 24);
    *(_QWORD *)(v26 + 16) = *(_QWORD *)(v27 + 16);
    *(_QWORD *)(v26 + 24) = v30;
    v31 = *(_QWORD *)(v27 + 40);
    *(_QWORD *)(v26 + 32) = *(_QWORD *)(v27 + 32);
    *(_QWORD *)(v26 + 40) = v31;
    v32 = *(_QWORD *)(v27 + 56);
    *(_QWORD *)(v26 + 48) = *(_QWORD *)(v27 + 48);
    *(_QWORD *)(v26 + 56) = v32;
    *(_BYTE *)(v26 + 64) = *(_BYTE *)(v27 + 64);
    *(_BYTE *)(v26 + 65) = *(_BYTE *)(v27 + 65);
    v33 = *(_QWORD *)(v27 + 80);
    v34 = v28;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v33)
    {
      *(_QWORD *)(v26 + 72) = *(_QWORD *)(v27 + 72);
      *(_QWORD *)(v26 + 80) = v33;
      v35 = *(_QWORD *)(v27 + 96);
      *(_QWORD *)(v26 + 88) = *(_QWORD *)(v27 + 88);
      *(_QWORD *)(v26 + 96) = v35;
      swift_bridgeObjectRetain();
LABEL_12:
      swift_bridgeObjectRetain();
    }
    else
    {
      v54 = *(_OWORD *)(v27 + 88);
      *(_OWORD *)(v26 + 72) = *(_OWORD *)(v27 + 72);
      *(_OWORD *)(v26 + 88) = v54;
    }
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v5 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
    v6 = (int *)type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
    v7 = v6[5];
    v8 = (_QWORD *)(a1 + v7);
    v9 = (uint64_t *)(a2 + v7);
    v11 = *v9;
    v10 = v9[1];
    *v8 = v11;
    v8[1] = v10;
    *(_BYTE *)(a1 + v6[6]) = *(_BYTE *)(a2 + v6[6]);
    *(_BYTE *)(a1 + v6[7]) = *(_BYTE *)(a2 + v6[7]);
    *(_BYTE *)(a1 + v6[8]) = *(_BYTE *)(a2 + v6[8]);
    *(_BYTE *)(a1 + v6[9]) = *(_BYTE *)(a2 + v6[9]);
    *(_BYTE *)(a1 + v6[10]) = *(_BYTE *)(a2 + v6[10]);
    *(_BYTE *)(a1 + v6[11]) = *(_BYTE *)(a2 + v6[11]);
    swift_bridgeObjectRetain();
    v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantVideoView.ViewModel, ParticipantVideoOverlayView.ViewModel));
    v13 = *(int *)(v12 + 48);
    v14 = a1 + v13;
    v15 = a2 + v13;
    v16 = *(_QWORD *)(a2 + v13 + 24);
    if (v16)
    {
      v17 = *(_QWORD *)(v15 + 32);
      *(_QWORD *)(v14 + 24) = v16;
      *(_QWORD *)(v14 + 32) = v17;
      (**(void (***)(uint64_t, uint64_t))(v16 - 8))(v14, v15);
    }
    else
    {
      v48 = *(_OWORD *)(v15 + 16);
      *(_OWORD *)v14 = *(_OWORD *)v15;
      *(_OWORD *)(v14 + 16) = v48;
      *(_QWORD *)(v14 + 32) = *(_QWORD *)(v15 + 32);
    }
    memcpy((void *)(v14 + 40), (const void *)(v15 + 40), 0x84uLL);
    v49 = *(int *)(v12 + 64);
    v50 = (char *)(a1 + v49);
    v51 = (_BYTE *)(a2 + v49);
    switch(v51[104])
    {
      case 1:
        v52 = *(_OWORD *)(v51 + 24);
        *(_OWORD *)(v50 + 24) = v52;
        (**(void (***)(void *, _BYTE *))(v52 - 8))(v50, v51);
        v53 = *((_QWORD *)v51 + 6);
        *((_QWORD *)v50 + 5) = *((_QWORD *)v51 + 5);
        *((_QWORD *)v50 + 6) = v53;
        v50[104] = 1;
        goto LABEL_12;
      case 2:
        v56 = *((_QWORD *)v51 + 1);
        *(_QWORD *)v50 = *(_QWORD *)v51;
        *((_QWORD *)v50 + 1) = v56;
        v57 = (void *)*((_QWORD *)v51 + 3);
        *((_QWORD *)v50 + 2) = *((_QWORD *)v51 + 2);
        *((_QWORD *)v50 + 3) = v57;
        *((_WORD *)v50 + 16) = *((_WORD *)v51 + 16);
        *((_QWORD *)v50 + 5) = *((_QWORD *)v51 + 5);
        v50[48] = v51[48];
        v58 = (void *)*((_QWORD *)v51 + 7);
        *((_QWORD *)v50 + 7) = v58;
        v50[104] = 2;
        swift_bridgeObjectRetain();
        v59 = v57;
        goto LABEL_19;
      case 3:
        v60 = *((_QWORD *)v51 + 1);
        *(_QWORD *)v50 = *(_QWORD *)v51;
        *((_QWORD *)v50 + 1) = v60;
        v61 = (void *)*((_QWORD *)v51 + 3);
        *((_QWORD *)v50 + 2) = *((_QWORD *)v51 + 2);
        *((_QWORD *)v50 + 3) = v61;
        *((_WORD *)v50 + 16) = *((_WORD *)v51 + 16);
        *((_QWORD *)v50 + 5) = *((_QWORD *)v51 + 5);
        v50[48] = v51[48];
        v63 = (void *)*((_QWORD *)v51 + 7);
        v62 = *((_QWORD *)v51 + 8);
        *((_QWORD *)v50 + 7) = v63;
        *((_QWORD *)v50 + 8) = v62;
        v64 = *((_QWORD *)v51 + 9);
        v58 = (void *)*((_QWORD *)v51 + 10);
        *((_QWORD *)v50 + 9) = v64;
        *((_QWORD *)v50 + 10) = v58;
        v50[104] = 3;
        swift_bridgeObjectRetain();
        v65 = v61;
        v66 = v63;
        swift_bridgeObjectRetain();
LABEL_19:
        v67 = v58;
        break;
      case 4:
        v68 = *(void **)v51;
        v69 = *((_QWORD *)v51 + 1);
        *(_QWORD *)v50 = *(_QWORD *)v51;
        *((_QWORD *)v50 + 1) = v69;
        v70 = *((_QWORD *)v51 + 3);
        *((_QWORD *)v50 + 2) = *((_QWORD *)v51 + 2);
        *((_QWORD *)v50 + 3) = v70;
        v71 = *((_QWORD *)v51 + 5);
        *((_QWORD *)v50 + 4) = *((_QWORD *)v51 + 4);
        *((_QWORD *)v50 + 5) = v71;
        v72 = *((_QWORD *)v51 + 7);
        *((_QWORD *)v50 + 6) = *((_QWORD *)v51 + 6);
        *((_QWORD *)v50 + 7) = v72;
        v50[64] = v51[64];
        v50[65] = v51[65];
        v73 = *((_QWORD *)v51 + 10);
        v74 = v68;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v73)
        {
          *((_QWORD *)v50 + 9) = *((_QWORD *)v51 + 9);
          *((_QWORD *)v50 + 10) = v73;
          v75 = *((_QWORD *)v51 + 11);
          v76 = *((_QWORD *)v51 + 12);
          *((_QWORD *)v50 + 11) = v75;
          *((_QWORD *)v50 + 12) = v76;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v79 = *(_OWORD *)(v51 + 88);
          *(_OWORD *)(v50 + 72) = *(_OWORD *)(v51 + 72);
          *(_OWORD *)(v50 + 88) = v79;
        }
        v50[104] = 4;
        break;
      case 5:
        v77 = *(void **)v51;
        *(_QWORD *)v50 = *(_QWORD *)v51;
        v50[104] = 5;
        v78 = v77;
        break;
      default:
        memcpy(v50, v51, 0x69uLL);
        break;
    }
  }
  else
  {
    v36 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(a1, a2, v36);
    v37 = (int *)type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
    v38 = v37[5];
    v39 = (_QWORD *)(a1 + v38);
    v40 = (uint64_t *)(a2 + v38);
    v42 = *v40;
    v41 = v40[1];
    *v39 = v42;
    v39[1] = v41;
    *(_BYTE *)(a1 + v37[6]) = *(_BYTE *)(a2 + v37[6]);
    *(_BYTE *)(a1 + v37[7]) = *(_BYTE *)(a2 + v37[7]);
    *(_BYTE *)(a1 + v37[8]) = *(_BYTE *)(a2 + v37[8]);
    *(_BYTE *)(a1 + v37[9]) = *(_BYTE *)(a2 + v37[9]);
    *(_BYTE *)(a1 + v37[10]) = *(_BYTE *)(a2 + v37[10]);
    *(_BYTE *)(a1 + v37[11]) = *(_BYTE *)(a2 + v37[11]);
    swift_bridgeObjectRetain();
    v43 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantVideoView.ViewModel))
                 + 48);
    v44 = a1 + v43;
    v45 = a2 + v43;
    v46 = *(_QWORD *)(v45 + 24);
    if (v46)
    {
      v47 = *(_QWORD *)(v45 + 32);
      *(_QWORD *)(v44 + 24) = v46;
      *(_QWORD *)(v44 + 32) = v47;
      (**(void (***)(uint64_t, uint64_t))(v46 - 8))(v44, v45);
    }
    else
    {
      v55 = *(_OWORD *)(v45 + 16);
      *(_OWORD *)v44 = *(_OWORD *)v45;
      *(_OWORD *)(v44 + 16) = v55;
      *(_QWORD *)(v44 + 32) = *(_QWORD *)(v45 + 32);
    }
    memcpy((void *)(v44 + 40), (const void *)(v45 + 40), 0x84uLL);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for ParticipantViewModel(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 *v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  __int128 *v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  char *v38;
  _BYTE *v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  void *v44;
  uint64_t v45;
  void *v46;
  id v47;
  void *v48;
  uint64_t v49;
  void *v50;
  id v51;
  id v52;
  id v53;
  void *v54;
  uint64_t v55;
  id v56;
  void *v57;
  id v58;
  __int128 v59;

  if (a1 != a2)
  {
    outlined destroy of AccountUpdateNotice(a1, type metadata accessor for ParticipantViewModel);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v15 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a1, a2, v15);
      v16 = (int *)type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
      v17 = v16[5];
      v18 = (_QWORD *)(a1 + v17);
      v19 = (_QWORD *)(a2 + v17);
      *v18 = *v19;
      v18[1] = v19[1];
      *(_BYTE *)(a1 + v16[6]) = *(_BYTE *)(a2 + v16[6]);
      *(_BYTE *)(a1 + v16[7]) = *(_BYTE *)(a2 + v16[7]);
      *(_BYTE *)(a1 + v16[8]) = *(_BYTE *)(a2 + v16[8]);
      *(_BYTE *)(a1 + v16[9]) = *(_BYTE *)(a2 + v16[9]);
      *(_BYTE *)(a1 + v16[10]) = *(_BYTE *)(a2 + v16[10]);
      *(_BYTE *)(a1 + v16[11]) = *(_BYTE *)(a2 + v16[11]);
      swift_bridgeObjectRetain();
      v20 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantMonogramView.ViewModel))
                   + 48);
      v21 = a1 + v20;
      v22 = a2 + v20;
      v23 = *(void **)(a2 + v20);
      *(_QWORD *)v21 = v23;
      *(_QWORD *)(v21 + 8) = *(_QWORD *)(v22 + 8);
      *(_QWORD *)(v21 + 16) = *(_QWORD *)(v22 + 16);
      *(_QWORD *)(v21 + 24) = *(_QWORD *)(v22 + 24);
      *(_QWORD *)(v21 + 32) = *(_QWORD *)(v22 + 32);
      *(_QWORD *)(v21 + 40) = *(_QWORD *)(v22 + 40);
      *(_QWORD *)(v21 + 48) = *(_QWORD *)(v22 + 48);
      *(_QWORD *)(v21 + 56) = *(_QWORD *)(v22 + 56);
      *(_BYTE *)(v21 + 64) = *(_BYTE *)(v22 + 64);
      *(_BYTE *)(v21 + 65) = *(_BYTE *)(v22 + 65);
      v24 = *(_QWORD *)(v22 + 80);
      v25 = v23;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v24)
      {
        *(_QWORD *)(v21 + 72) = *(_QWORD *)(v22 + 72);
        *(_QWORD *)(v21 + 80) = *(_QWORD *)(v22 + 80);
        *(_QWORD *)(v21 + 88) = *(_QWORD *)(v22 + 88);
        *(_QWORD *)(v21 + 96) = *(_QWORD *)(v22 + 96);
        swift_bridgeObjectRetain();
LABEL_13:
        swift_bridgeObjectRetain();
      }
      else
      {
        v41 = *(_OWORD *)(v22 + 88);
        *(_OWORD *)(v21 + 72) = *(_OWORD *)(v22 + 72);
        *(_OWORD *)(v21 + 88) = v41;
      }
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v5 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
      v6 = (int *)type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
      v7 = v6[5];
      v8 = (_QWORD *)(a1 + v7);
      v9 = (_QWORD *)(a2 + v7);
      *v8 = *v9;
      v8[1] = v9[1];
      *(_BYTE *)(a1 + v6[6]) = *(_BYTE *)(a2 + v6[6]);
      *(_BYTE *)(a1 + v6[7]) = *(_BYTE *)(a2 + v6[7]);
      *(_BYTE *)(a1 + v6[8]) = *(_BYTE *)(a2 + v6[8]);
      *(_BYTE *)(a1 + v6[9]) = *(_BYTE *)(a2 + v6[9]);
      *(_BYTE *)(a1 + v6[10]) = *(_BYTE *)(a2 + v6[10]);
      *(_BYTE *)(a1 + v6[11]) = *(_BYTE *)(a2 + v6[11]);
      swift_bridgeObjectRetain();
      v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantVideoView.ViewModel, ParticipantVideoOverlayView.ViewModel));
      v11 = *(int *)(v10 + 48);
      v12 = a1 + v11;
      v13 = (__int128 *)(a2 + v11);
      v14 = *(_QWORD *)(a2 + v11 + 24);
      if (v14)
      {
        *(_QWORD *)(v12 + 24) = v14;
        *(_QWORD *)(v12 + 32) = *((_QWORD *)v13 + 4);
        (**(void (***)(uint64_t, __int128 *))(v14 - 8))(v12, v13);
      }
      else
      {
        v35 = *v13;
        v36 = v13[1];
        *(_QWORD *)(v12 + 32) = *((_QWORD *)v13 + 4);
        *(_OWORD *)v12 = v35;
        *(_OWORD *)(v12 + 16) = v36;
      }
      memcpy((void *)(v12 + 40), (char *)v13 + 40, 0x84uLL);
      v37 = *(int *)(v10 + 64);
      v38 = (char *)(a1 + v37);
      v39 = (_BYTE *)(a2 + v37);
      switch(v39[104])
      {
        case 1:
          v40 = *((_QWORD *)v39 + 3);
          *((_QWORD *)v38 + 3) = v40;
          *((_QWORD *)v38 + 4) = *((_QWORD *)v39 + 4);
          (**(void (***)(void *, _BYTE *))(v40 - 8))(v38, v39);
          *((_QWORD *)v38 + 5) = *((_QWORD *)v39 + 5);
          *((_QWORD *)v38 + 6) = *((_QWORD *)v39 + 6);
          v38[104] = 1;
          goto LABEL_13;
        case 2:
          *(_QWORD *)v38 = *(_QWORD *)v39;
          *((_QWORD *)v38 + 1) = *((_QWORD *)v39 + 1);
          *((_QWORD *)v38 + 2) = *((_QWORD *)v39 + 2);
          v44 = (void *)*((_QWORD *)v39 + 3);
          *((_QWORD *)v38 + 3) = v44;
          v38[32] = v39[32];
          v38[33] = v39[33];
          v45 = *((_QWORD *)v39 + 5);
          v38[48] = v39[48];
          *((_QWORD *)v38 + 5) = v45;
          v46 = (void *)*((_QWORD *)v39 + 7);
          *((_QWORD *)v38 + 7) = v46;
          v38[104] = 2;
          swift_bridgeObjectRetain();
          v47 = v44;
          goto LABEL_20;
        case 3:
          *(_QWORD *)v38 = *(_QWORD *)v39;
          *((_QWORD *)v38 + 1) = *((_QWORD *)v39 + 1);
          *((_QWORD *)v38 + 2) = *((_QWORD *)v39 + 2);
          v48 = (void *)*((_QWORD *)v39 + 3);
          *((_QWORD *)v38 + 3) = v48;
          v38[32] = v39[32];
          v38[33] = v39[33];
          v49 = *((_QWORD *)v39 + 5);
          v38[48] = v39[48];
          *((_QWORD *)v38 + 5) = v49;
          v50 = (void *)*((_QWORD *)v39 + 7);
          *((_QWORD *)v38 + 7) = v50;
          *((_QWORD *)v38 + 8) = *((_QWORD *)v39 + 8);
          *((_QWORD *)v38 + 9) = *((_QWORD *)v39 + 9);
          v46 = (void *)*((_QWORD *)v39 + 10);
          *((_QWORD *)v38 + 10) = v46;
          v38[104] = 3;
          swift_bridgeObjectRetain();
          v51 = v48;
          v52 = v50;
          swift_bridgeObjectRetain();
LABEL_20:
          v53 = v46;
          break;
        case 4:
          v54 = *(void **)v39;
          *(_QWORD *)v38 = *(_QWORD *)v39;
          *((_QWORD *)v38 + 1) = *((_QWORD *)v39 + 1);
          *((_QWORD *)v38 + 2) = *((_QWORD *)v39 + 2);
          *((_QWORD *)v38 + 3) = *((_QWORD *)v39 + 3);
          *((_QWORD *)v38 + 4) = *((_QWORD *)v39 + 4);
          *((_QWORD *)v38 + 5) = *((_QWORD *)v39 + 5);
          *((_QWORD *)v38 + 6) = *((_QWORD *)v39 + 6);
          *((_QWORD *)v38 + 7) = *((_QWORD *)v39 + 7);
          v38[64] = v39[64];
          v38[65] = v39[65];
          v55 = *((_QWORD *)v39 + 10);
          v56 = v54;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v55)
          {
            *((_QWORD *)v38 + 9) = *((_QWORD *)v39 + 9);
            *((_QWORD *)v38 + 10) = *((_QWORD *)v39 + 10);
            *((_QWORD *)v38 + 11) = *((_QWORD *)v39 + 11);
            *((_QWORD *)v38 + 12) = *((_QWORD *)v39 + 12);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            v59 = *(_OWORD *)(v39 + 88);
            *(_OWORD *)(v38 + 72) = *(_OWORD *)(v39 + 72);
            *(_OWORD *)(v38 + 88) = v59;
          }
          v38[104] = 4;
          break;
        case 5:
          v57 = *(void **)v39;
          *(_QWORD *)v38 = *(_QWORD *)v39;
          v38[104] = 5;
          v58 = v57;
          break;
        default:
          memcpy(v38, v39, 0x69uLL);
          break;
      }
    }
    else
    {
      v26 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(a1, a2, v26);
      v27 = (int *)type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
      v28 = v27[5];
      v29 = (_QWORD *)(a1 + v28);
      v30 = (_QWORD *)(a2 + v28);
      *v29 = *v30;
      v29[1] = v30[1];
      *(_BYTE *)(a1 + v27[6]) = *(_BYTE *)(a2 + v27[6]);
      *(_BYTE *)(a1 + v27[7]) = *(_BYTE *)(a2 + v27[7]);
      *(_BYTE *)(a1 + v27[8]) = *(_BYTE *)(a2 + v27[8]);
      *(_BYTE *)(a1 + v27[9]) = *(_BYTE *)(a2 + v27[9]);
      *(_BYTE *)(a1 + v27[10]) = *(_BYTE *)(a2 + v27[10]);
      *(_BYTE *)(a1 + v27[11]) = *(_BYTE *)(a2 + v27[11]);
      swift_bridgeObjectRetain();
      v31 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantVideoView.ViewModel))
                   + 48);
      v32 = a1 + v31;
      v33 = (__int128 *)(a2 + v31);
      v34 = *((_QWORD *)v33 + 3);
      if (v34)
      {
        *(_QWORD *)(v32 + 24) = v34;
        *(_QWORD *)(v32 + 32) = *((_QWORD *)v33 + 4);
        (**(void (***)(uint64_t, __int128 *))(v34 - 8))(v32, v33);
      }
      else
      {
        v42 = *v33;
        v43 = v33[1];
        *(_QWORD *)(v32 + 32) = *((_QWORD *)v33 + 4);
        *(_OWORD *)v32 = v42;
        *(_OWORD *)(v32 + 16) = v43;
      }
      memcpy((void *)(v32 + 40), (char *)v33 + 40, 0x84uLL);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for ParticipantViewModel(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  size_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v12 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
    v13 = (int *)type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
    *(_OWORD *)(a1 + v13[5]) = *(_OWORD *)(a2 + v13[5]);
    *(_BYTE *)(a1 + v13[6]) = *(_BYTE *)(a2 + v13[6]);
    *(_BYTE *)(a1 + v13[7]) = *(_BYTE *)(a2 + v13[7]);
    *(_BYTE *)(a1 + v13[8]) = *(_BYTE *)(a2 + v13[8]);
    *(_BYTE *)(a1 + v13[9]) = *(_BYTE *)(a2 + v13[9]);
    *(_BYTE *)(a1 + v13[10]) = *(_BYTE *)(a2 + v13[10]);
    *(_BYTE *)(a1 + v13[11]) = *(_BYTE *)(a2 + v13[11]);
    v14 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantMonogramView.ViewModel))
                 + 48);
    v9 = (void *)(a1 + v14);
    v10 = (const void *)(a2 + v14);
    v11 = 104;
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v5 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
    v6 = (int *)type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
    *(_OWORD *)(a1 + v6[5]) = *(_OWORD *)(a2 + v6[5]);
    *(_BYTE *)(a1 + v6[6]) = *(_BYTE *)(a2 + v6[6]);
    *(_BYTE *)(a1 + v6[7]) = *(_BYTE *)(a2 + v6[7]);
    *(_BYTE *)(a1 + v6[8]) = *(_BYTE *)(a2 + v6[8]);
    *(_BYTE *)(a1 + v6[9]) = *(_BYTE *)(a2 + v6[9]);
    *(_BYTE *)(a1 + v6[10]) = *(_BYTE *)(a2 + v6[10]);
    *(_BYTE *)(a1 + v6[11]) = *(_BYTE *)(a2 + v6[11]);
    v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantVideoView.ViewModel, ParticipantVideoOverlayView.ViewModel));
    memcpy((void *)(a1 + *(int *)(v7 + 48)), (const void *)(a2 + *(int *)(v7 + 48)), 0xACuLL);
    v8 = *(int *)(v7 + 64);
    v9 = (void *)(a1 + v8);
    v10 = (const void *)(a2 + v8);
    v11 = 105;
  }
  else
  {
    v15 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(a1, a2, v15);
    v16 = (int *)type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
    *(_OWORD *)(a1 + v16[5]) = *(_OWORD *)(a2 + v16[5]);
    *(_BYTE *)(a1 + v16[6]) = *(_BYTE *)(a2 + v16[6]);
    *(_BYTE *)(a1 + v16[7]) = *(_BYTE *)(a2 + v16[7]);
    *(_BYTE *)(a1 + v16[8]) = *(_BYTE *)(a2 + v16[8]);
    *(_BYTE *)(a1 + v16[9]) = *(_BYTE *)(a2 + v16[9]);
    *(_BYTE *)(a1 + v16[10]) = *(_BYTE *)(a2 + v16[10]);
    *(_BYTE *)(a1 + v16[11]) = *(_BYTE *)(a2 + v16[11]);
    v17 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantVideoView.ViewModel))
                 + 48);
    v9 = (void *)(a1 + v17);
    v10 = (const void *)(a2 + v17);
    v11 = 172;
  }
  memcpy(v9, v10, v11);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for ParticipantViewModel(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  size_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;

  if (a1 != a2)
  {
    outlined destroy of AccountUpdateNotice(a1, type metadata accessor for ParticipantViewModel);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v12 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
      v13 = (int *)type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
      *(_OWORD *)(a1 + v13[5]) = *(_OWORD *)(a2 + v13[5]);
      *(_BYTE *)(a1 + v13[6]) = *(_BYTE *)(a2 + v13[6]);
      *(_BYTE *)(a1 + v13[7]) = *(_BYTE *)(a2 + v13[7]);
      *(_BYTE *)(a1 + v13[8]) = *(_BYTE *)(a2 + v13[8]);
      *(_BYTE *)(a1 + v13[9]) = *(_BYTE *)(a2 + v13[9]);
      *(_BYTE *)(a1 + v13[10]) = *(_BYTE *)(a2 + v13[10]);
      *(_BYTE *)(a1 + v13[11]) = *(_BYTE *)(a2 + v13[11]);
      v14 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantMonogramView.ViewModel))
                   + 48);
      v9 = (void *)(a1 + v14);
      v10 = (const void *)(a2 + v14);
      v11 = 104;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v5 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
      v6 = (int *)type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
      *(_OWORD *)(a1 + v6[5]) = *(_OWORD *)(a2 + v6[5]);
      *(_BYTE *)(a1 + v6[6]) = *(_BYTE *)(a2 + v6[6]);
      *(_BYTE *)(a1 + v6[7]) = *(_BYTE *)(a2 + v6[7]);
      *(_BYTE *)(a1 + v6[8]) = *(_BYTE *)(a2 + v6[8]);
      *(_BYTE *)(a1 + v6[9]) = *(_BYTE *)(a2 + v6[9]);
      *(_BYTE *)(a1 + v6[10]) = *(_BYTE *)(a2 + v6[10]);
      *(_BYTE *)(a1 + v6[11]) = *(_BYTE *)(a2 + v6[11]);
      v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantVideoView.ViewModel, ParticipantVideoOverlayView.ViewModel));
      memcpy((void *)(a1 + *(int *)(v7 + 48)), (const void *)(a2 + *(int *)(v7 + 48)), 0xACuLL);
      v8 = *(int *)(v7 + 64);
      v9 = (void *)(a1 + v8);
      v10 = (const void *)(a2 + v8);
      v11 = 105;
    }
    else
    {
      v15 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(a1, a2, v15);
      v16 = (int *)type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
      *(_OWORD *)(a1 + v16[5]) = *(_OWORD *)(a2 + v16[5]);
      *(_BYTE *)(a1 + v16[6]) = *(_BYTE *)(a2 + v16[6]);
      *(_BYTE *)(a1 + v16[7]) = *(_BYTE *)(a2 + v16[7]);
      *(_BYTE *)(a1 + v16[8]) = *(_BYTE *)(a2 + v16[8]);
      *(_BYTE *)(a1 + v16[9]) = *(_BYTE *)(a2 + v16[9]);
      *(_BYTE *)(a1 + v16[10]) = *(_BYTE *)(a2 + v16[10]);
      *(_BYTE *)(a1 + v16[11]) = *(_BYTE *)(a2 + v16[11]);
      v17 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantVideoView.ViewModel))
                   + 48);
      v9 = (void *)(a1 + v17);
      v10 = (const void *)(a2 + v17);
      v11 = 172;
    }
    memcpy(v9, v10, v11);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t type metadata completion function for ParticipantViewModel()
{
  uint64_t result;
  unint64_t v1;
  char v2;
  char v3;
  char v4;
  char *v5;
  char *v6;
  char *v7;

  result = type metadata accessor for ParticipantViewModel.ParticipantDetails(319);
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v5 = &v4;
    swift_getTupleTypeLayout3();
    v6 = &v3;
    swift_getTupleTypeLayout2();
    v7 = &v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for ParticipantViewModel.ParticipantDetails(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UUID();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (_QWORD *)((char *)a1 + v8);
    v11 = (_QWORD *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    *((_BYTE *)a1 + v9) = *((_BYTE *)a2 + v9);
    v13 = a3[8];
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    *((_BYTE *)a1 + v13) = *((_BYTE *)a2 + v13);
    v14 = a3[10];
    *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
    *((_BYTE *)a1 + v14) = *((_BYTE *)a2 + v14);
    *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t initializeWithCopy for ParticipantViewModel.ParticipantDetails(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v12 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v12) = *(_BYTE *)(a2 + v12);
  v13 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v13) = *(_BYTE *)(a2 + v13);
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ParticipantViewModel.ParticipantDetails(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  return a1;
}

uint64_t initializeWithTake for ParticipantViewModel.ParticipantDetails(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  v8 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v9 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v9) = *(_BYTE *)(a2 + v9);
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  return a1;
}

uint64_t assignWithTake for ParticipantViewModel.ParticipantDetails(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v12) = *(_BYTE *)(a2 + v12);
  v13 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_BYTE *)(a1 + v13) = *(_BYTE *)(a2 + v13);
  v14 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_BYTE *)(a1 + v14) = *(_BYTE *)(a2 + v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for ParticipantViewModel.ParticipantDetails()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1BD0F4EB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_33_0();
  if (*(_DWORD *)(*(_QWORD *)(v4 - 8) + 84) == (_DWORD)a2)
    __swift_getEnumTagSinglePayload(a1, a2, v4);
  else
    OUTLINED_FUNCTION_18();
}

uint64_t storeEnumTagSinglePayload for ParticipantViewModel.ParticipantDetails()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BD0F4F34(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;

  v8 = OUTLINED_FUNCTION_33_0();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
    OUTLINED_FUNCTION_18();
  }
}

uint64_t type metadata completion function for ParticipantViewModel.ParticipantDetails()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void outlined init with take of Participant.VideoInfo?(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = OUTLINED_FUNCTION_83(a1, a2, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v3, v4, v5);
  OUTLINED_FUNCTION_0();
}

uint64_t outlined release of SymbolImageDescription(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 56);

  swift_bridgeObjectRelease();
  return a1;
}

uint64_t OUTLINED_FUNCTION_39_22()
{
  uint64_t v0;
  uint64_t v1;

  return outlined init with take of ParticipantViewModel.ParticipantDetails(v1, v0);
}

uint64_t OUTLINED_FUNCTION_85_4()
{
  uint64_t v0;
  uint64_t v1;

  return outlined init with take of ParticipantViewModel.ParticipantDetails(v0, v1);
}

void specialized RangeReplaceableCollection.removeFirst()(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  __int128 v4;
  uint64_t v5;

  v3 = *v1;
  if (!*(_QWORD *)(*v1 + 16))
  {
    __break(1u);
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  specialized Collection.first.getter(*v1);
  if (v5)
  {
    outlined init with take of Notice(&v4, a1);
    if (*(_QWORD *)(v3 + 16))
    {
      specialized Array.replaceSubrange<A>(_:with:)();
      return;
    }
    goto LABEL_6;
  }
LABEL_7:
  __break(1u);
}

void specialized RangeReplaceableCollection.removeFirst()()
{
  uint64_t v0;

  if (*(_QWORD *)(*(_QWORD *)v0 + 16))
    specialized Array.replaceSubrange<A>(_:with:)();
  else
    __break(1u);
}

void *AudioPowerSpectrumView.Constants.barWidth.unsafeMutableAddressor()
{
  return &static AudioPowerSpectrumView.Constants.barWidth;
}

double static AudioPowerSpectrumView.Constants.barWidth.getter()
{
  return 3.0;
}

void *AudioPowerSpectrumView.Constants.spacing.unsafeMutableAddressor()
{
  return &static AudioPowerSpectrumView.Constants.spacing;
}

double static AudioPowerSpectrumView.Constants.spacing.getter()
{
  return 1.0;
}

id AudioPowerSpectrumView.viewModel.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 8);
}

id key path getter for AudioPowerSpectrumView.viewModel : AudioPowerSpectrumView@<X0>(_QWORD *a1@<X8>)
{
  id result;

  result = AudioPowerSpectrumView.viewModel.getter();
  *a1 = result;
  return result;
}

void key path setter for AudioPowerSpectrumView.viewModel : AudioPowerSpectrumView(id *a1)
{
  AudioPowerSpectrumView.viewModel.setter((uint64_t)*a1);
}

void AudioPowerSpectrumView.viewModel.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = a1;
}

uint64_t (*AudioPowerSpectrumView.viewModel.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t AudioPowerSpectrumView.$viewModel.getter()
{
  OUTLINED_FUNCTION_2_54();
  lazy protocol witness table accessor for type AudioPowerSpectrumViewModel and conformance AudioPowerSpectrumViewModel();
  return ObservedObject.projectedValue.getter();
}

unint64_t lazy protocol witness table accessor for type AudioPowerSpectrumViewModel and conformance AudioPowerSpectrumViewModel()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type AudioPowerSpectrumViewModel and conformance AudioPowerSpectrumViewModel;
  if (!lazy protocol witness table cache variable for type AudioPowerSpectrumViewModel and conformance AudioPowerSpectrumViewModel)
  {
    v1 = type metadata accessor for AudioPowerSpectrumViewModel();
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for AudioPowerSpectrumViewModel, v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AudioPowerSpectrumViewModel and conformance AudioPowerSpectrumViewModel);
  }
  return result;
}

uint64_t default argument 2 of AudioPowerSpectrumView.init(viewModel:barWidth:barGradientColors:)()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Color>);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1BD646740;
  *(_QWORD *)(v0 + 32) = static Color.orange.getter();
  *(_QWORD *)(v0 + 40) = static Color.yellow.getter();
  *(_QWORD *)(v0 + 48) = static Color.green.getter();
  return v0;
}

uint64_t AudioPowerSpectrumView.init(viewModel:barWidth:barGradientColors:)@<X0>(double a1@<X1>, char a2@<W2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t result;
  double v9;
  uint64_t v10;

  OUTLINED_FUNCTION_2_54();
  lazy protocol witness table accessor for type AudioPowerSpectrumViewModel and conformance AudioPowerSpectrumViewModel();
  result = ObservedObject.init(wrappedValue:)();
  v9 = a1;
  *(_QWORD *)a4 = result;
  *(_QWORD *)(a4 + 8) = v10;
  if ((a2 & 1) != 0)
    v9 = 3.0;
  *(double *)(a4 + 16) = v9;
  *(_QWORD *)(a4 + 24) = a3;
  return result;
}

uint64_t AudioPowerSpectrumView.body.getter@<X0>(id (**a1)@<X0>(uint64_t a1@<X8>)@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id (*v7)@<X0>(uint64_t@<X8>);
  id v8;

  v3 = *v1;
  v4 = (void *)v1[1];
  v5 = v1[2];
  v6 = v1[3];
  v7 = (id (*)@<X0>(uint64_t@<X8>))swift_allocObject();
  *((_QWORD *)v7 + 2) = v3;
  *((_QWORD *)v7 + 3) = v4;
  *((_QWORD *)v7 + 4) = v5;
  *((_QWORD *)v7 + 5) = v6;
  *a1 = partial apply for closure #1 in AudioPowerSpectrumView.body.getter;
  a1[1] = v7;
  v8 = v4;
  return swift_bridgeObjectRetain();
}

id closure #1 in AudioPowerSpectrumView.body.getter@<X0>(void *a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  GeometryProxy.size.getter();
  GeometryProxy.size.getter();
  Path.init(_:)();
  v3 = swift_bridgeObjectRetain();
  MEMORY[0x1C3B72974](v3);
  LinearGradient.init(gradient:startPoint:endPoint:)();
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
  v4 = static Alignment.center.getter();
  v6 = v5;
  v7 = static Animation.easeOut.getter();
  *(_OWORD *)a2 = v10;
  *(_QWORD *)(a2 + 16) = v11;
  *(_QWORD *)(a2 + 24) = v12;
  *(_BYTE *)(a2 + 32) = v13;
  *(_QWORD *)(a2 + 40) = v18;
  *(_QWORD *)(a2 + 48) = v19;
  *(_QWORD *)(a2 + 56) = v20;
  *(_QWORD *)(a2 + 64) = v21;
  *(_QWORD *)(a2 + 72) = v22;
  *(_QWORD *)(a2 + 80) = v14;
  *(_OWORD *)(a2 + 88) = v15;
  *(_QWORD *)(a2 + 104) = v16;
  *(_QWORD *)(a2 + 112) = v17;
  *(_WORD *)(a2 + 120) = 256;
  *(_QWORD *)(a2 + 128) = v4;
  *(_QWORD *)(a2 + 136) = v6;
  *(_QWORD *)(a2 + 144) = v7;
  *(_QWORD *)(a2 + 152) = a1;
  return a1;
}

uint64_t sub_1BD0F5580()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

id partial apply for closure #1 in AudioPowerSpectrumView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return closure #1 in AudioPowerSpectrumView.body.getter(*(void **)(v1 + 24), a1);
}

void closure #1 in closure #1 in AudioPowerSpectrumView.body.getter(double a1, double a2, double a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  uint64_t (*v9)(void);
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void);
  double v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  float v24;
  double v25;
  double v26;
  uint64_t (*v27)(void);
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  float v41;
  double v42;
  double v43;

  v9 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *a6) + 0xF0);
  v10 = a6;
  v11 = v9();

  v12 = *(_QWORD *)(v11 + 16);
  swift_bridgeObjectRelease();
  if (v12)
  {
    v13 = 0;
    v14 = 0;
    v15 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v10) + 0x120);
    v16 = a1 + 1.0;
    v17 = -v12;
    while (1)
    {
      v18 = v10;
      v19 = v9();

      v20 = *(_QWORD *)(v19 + 16);
      swift_bridgeObjectRelease();
      v21 = v13 + v20 - 1;
      v22 = v18;
      v23 = v15();

      if ((v21 & 0x8000000000000000) != 0)
        break;
      if (v21 >= *(_QWORD *)(v23 + 16))
        goto LABEL_23;
      v24 = *(float *)(v23 + 4 * v21 + 32);
      swift_bridgeObjectRelease();
      v25 = v24 * a2;
      if (v25 <= a1)
        v25 = a1;
      if (v25 <= a2)
        v26 = v25;
      else
        v26 = a2;
      Path.move(to:)((CGPoint)__PAIR128__((a2 - v26) * 0.5, a3 - v16 * (double)v14));
      Path.addLine(to:)((CGPoint)__PAIR128__(v26 + (a2 - v26) * 0.5, a3 - v16 * (double)v14));
      --v13;
      ++v14;
      if (v17 == v13)
        goto LABEL_11;
    }
    __break(1u);
LABEL_23:
    __break(1u);
  }
  else
  {
LABEL_11:
    v27 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v10) + 0x120);
    v28 = v10;
    v29 = v27();

    v30 = *(_QWORD *)(v29 + 16);
    swift_bridgeObjectRelease();
    if (!v30)
      return;
    v31 = 0;
    v32 = 0;
    v33 = a1 + 1.0;
    v34 = -v30;
    while (1)
    {
      v35 = v28;
      v36 = v9();

      v37 = *(_QWORD *)(v36 + 16);
      swift_bridgeObjectRelease();
      v38 = v31 + v37 - 1;
      v39 = v35;
      v40 = v27();

      if ((v38 & 0x8000000000000000) != 0)
        break;
      if (v38 >= *(_QWORD *)(v40 + 16))
        goto LABEL_25;
      v41 = *(float *)(v40 + 4 * v38 + 32);
      swift_bridgeObjectRelease();
      v42 = v41 * a2;
      if (v42 <= a1)
        v42 = a1;
      if (v42 <= a2)
        v43 = v42;
      else
        v43 = a2;
      Path.move(to:)((CGPoint)__PAIR128__((a2 - v43) * 0.5, v33 * (double)v32 + a3));
      Path.addLine(to:)((CGPoint)__PAIR128__(v43 + (a2 - v43) * 0.5, v33 * (double)v32 + a3));
      --v31;
      ++v32;
      if (v34 == v31)
        return;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
}

char *one-time initialization function for viewModel()
{
  id v0;
  char *result;

  v0 = objc_allocWithZone((Class)type metadata accessor for MockAudioPowerSpectrumViewModel());
  result = MockAudioPowerSpectrumViewModel.init()();
  static AudioPowerSpectrumView_Preview.viewModel = (uint64_t)result;
  return result;
}

char *MockAudioPowerSpectrumViewModel.__allocating_init()()
{
  objc_class *v0;
  id v1;

  v1 = objc_allocWithZone(v0);
  return MockAudioPowerSpectrumViewModel.init()();
}

uint64_t static AudioPowerSpectrumView_Preview.previews.getter@<X0>(uint64_t a1@<X8>)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;

  if (one-time initialization token for viewModel != -1)
    swift_once();
  v2 = (id)static AudioPowerSpectrumView_Preview.viewModel;
  v8 = default argument 2 of AudioPowerSpectrumView.init(viewModel:barWidth:barGradientColors:)();
  OUTLINED_FUNCTION_2_54();
  lazy protocol witness table accessor for type AudioPowerSpectrumViewModel and conformance AudioPowerSpectrumViewModel();
  v3 = ObservedObject.init(wrappedValue:)();
  v5 = v4;
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  v6 = static Color.black.getter();
  result = static Edge.Set.all.getter();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = 0x4008000000000000;
  *(_QWORD *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 32) = v9;
  *(_BYTE *)(a1 + 40) = v10;
  *(_QWORD *)(a1 + 48) = v11;
  *(_BYTE *)(a1 + 56) = v12;
  *(_QWORD *)(a1 + 64) = v13;
  *(_QWORD *)(a1 + 72) = v14;
  *(_QWORD *)(a1 + 80) = v6;
  *(_BYTE *)(a1 + 88) = result;
  return result;
}

uint64_t protocol witness for static _PreviewProvider._previews.getter in conformance AudioPowerSpectrumView_Preview()
{
  lazy protocol witness table accessor for type AudioPowerSpectrumView_Preview and conformance AudioPowerSpectrumView_Preview();
  return static PreviewProvider._previews.getter();
}

uint64_t protocol witness for static _PreviewProvider._platform.getter in conformance AudioPowerSpectrumView_Preview()
{
  lazy protocol witness table accessor for type AudioPowerSpectrumView_Preview and conformance AudioPowerSpectrumView_Preview();
  return static PreviewProvider._platform.getter();
}

char *MockAudioPowerSpectrumViewModel.init()()
{
  uint64_t v0;
  id v1;
  id v2;
  void *v3;
  void *v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  void *v9;
  char *result;
  void *v11;
  char *v12;
  uint64_t v13;
  id v14;

  *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit31MockAudioPowerSpectrumViewModel_timer) = 0;
  v1 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v2 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  AudioPowerSpectrumViewModel.init(call:callCenter:notificationCenter:)();
  v4 = v3;
  type metadata accessor for NSTimer();
  v5 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v6 = v4;
  v7 = @nonobjc NSTimer.__allocating_init(timeInterval:repeats:block:)(1, (uint64_t)partial apply for closure #1 in MockAudioPowerSpectrumViewModel.init(), v5, 0.25);
  v8 = OBJC_IVAR____TtC15ConversationKit31MockAudioPowerSpectrumViewModel_timer;
  v9 = *(void **)&v6[OBJC_IVAR____TtC15ConversationKit31MockAudioPowerSpectrumViewModel_timer];
  *(_QWORD *)&v6[OBJC_IVAR____TtC15ConversationKit31MockAudioPowerSpectrumViewModel_timer] = v7;

  result = (char *)objc_msgSend((id)objc_opt_self(), sel_mainRunLoop);
  v11 = *(void **)&v6[v8];
  if (v11)
  {
    v12 = result;
    v13 = *MEMORY[0x1E0C99860];
    v14 = v11;
    objc_msgSend(v12, sel_addTimer_forMode_, v14, v13);

    return v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t type metadata accessor for NSTimer()
{
  unint64_t result;

  result = lazy cache variable for type metadata for NSTimer;
  if (!lazy cache variable for type metadata for NSTimer)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for NSTimer);
  }
  return result;
}

uint64_t sub_1BD0F5BF0()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void closure #1 in MockAudioPowerSpectrumViewModel.init()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  int v4;
  _QWORD *v5;
  _QWORD *v6;
  void *v7;
  void (*v8)(_BYTE *, _QWORD);
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  void (*v15)(_BYTE *, _QWORD);
  int v16;
  int v17;
  _QWORD *v18;
  void *v19;
  void (*v20)(_BYTE *, _QWORD);
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  void *v26;
  void (*v27)(_BYTE *, _QWORD);
  _BYTE v28[32];

  v2 = a2 + 16;
  specialized static BinaryFloatingPoint<>.random<A>(in:using:)(a1, 0.0, 1.0);
  v4 = v3;
  swift_beginAccess();
  v5 = (_QWORD *)MEMORY[0x1C3B752C0](v2);
  v6 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  if (v5)
  {
    v7 = v5;
    v8 = (void (*)(_BYTE *, _QWORD))(*(uint64_t (**)(_BYTE *))((*MEMORY[0x1E0DEEDD8] & *v5)
                                                                                  + 0x100))(v28);
    v10 = v9;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    v11 = *(_QWORD *)(*v10 + 16);
    specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v11);
    v12 = *v10;
    *(_QWORD *)(v12 + 16) = v11 + 1;
    *(_DWORD *)(v12 + 4 * v11 + 32) = v4;
    v8(v28, 0);

  }
  swift_beginAccess();
  v13 = (_QWORD *)MEMORY[0x1C3B752C0](v2);
  if (v13)
  {
    v14 = v13;
    v15 = (void (*)(_BYTE *, _QWORD))(*(uint64_t (**)(_BYTE *))((*v6 & *v13) + 0x100))(v28);
    specialized RangeReplaceableCollection.removeFirst()();
    v15(v28, 0);

  }
  specialized static BinaryFloatingPoint<>.random<A>(in:using:)((uint64_t)v13, 0.0, 1.0);
  v17 = v16;
  swift_beginAccess();
  v18 = (_QWORD *)MEMORY[0x1C3B752C0](v2);
  if (v18)
  {
    v19 = v18;
    v20 = (void (*)(_BYTE *, _QWORD))(*(uint64_t (**)(_BYTE *))((*v6 & *v18) + 0x130))(v28);
    v22 = v21;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    v23 = *(_QWORD *)(*v22 + 16);
    specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v23);
    v24 = *v22;
    *(_QWORD *)(v24 + 16) = v23 + 1;
    *(_DWORD *)(v24 + 4 * v23 + 32) = v17;
    v20(v28, 0);

  }
  swift_beginAccess();
  v25 = (_QWORD *)MEMORY[0x1C3B752C0](v2);
  if (v25)
  {
    v26 = v25;
    v27 = (void (*)(_BYTE *, _QWORD))(*(uint64_t (**)(_BYTE *))((*v6 & *v25) + 0x130))(v28);
    specialized RangeReplaceableCollection.removeFirst()();
    v27(v28, 0);

  }
}

void partial apply for closure #1 in MockAudioPowerSpectrumViewModel.init()(uint64_t a1)
{
  uint64_t v1;

  closure #1 in MockAudioPowerSpectrumViewModel.init()(a1, v1);
}

id @nonobjc NSTimer.__allocating_init(timeInterval:repeats:block:)(char a1, uint64_t a2, uint64_t a3, double a4)
{
  void *v6;
  id v7;
  _QWORD v9[6];

  v9[4] = a2;
  v9[5] = a3;
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 1107296256;
  v9[2] = thunk for @escaping @callee_guaranteed @Sendable (@guaranteed NSTimer) -> ();
  v9[3] = &block_descriptor_15;
  v6 = _Block_copy(v9);
  v7 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_timerWithTimeInterval_repeats_block_, a1 & 1, v6, a4);
  _Block_release(v6);
  swift_release();
  return v7;
}

void MockAudioPowerSpectrumViewModel.__allocating_init(call:callCenter:notificationCenter:)()
{
  OUTLINED_FUNCTION_0_57();
  __break(1u);
}

void MockAudioPowerSpectrumViewModel.init(call:callCenter:notificationCenter:)()
{
  OUTLINED_FUNCTION_0_57();
  __break(1u);
}

void MockAudioPowerSpectrumViewModel.__ivar_destroyer()
{
  uint64_t v0;

}

id MockAudioPowerSpectrumViewModel.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MockAudioPowerSpectrumViewModel();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for MockAudioPowerSpectrumViewModel()
{
  uint64_t result;

  result = type metadata singleton initialization cache for MockAudioPowerSpectrumViewModel;
  if (!type metadata singleton initialization cache for MockAudioPowerSpectrumViewModel)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t associated type witness table accessor for View.Body : View in AudioPowerSpectrumView()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t lazy protocol witness table accessor for type AudioPowerSpectrumView_Preview and conformance AudioPowerSpectrumView_Preview()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type AudioPowerSpectrumView_Preview and conformance AudioPowerSpectrumView_Preview;
  if (!lazy protocol witness table cache variable for type AudioPowerSpectrumView_Preview and conformance AudioPowerSpectrumView_Preview)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for AudioPowerSpectrumView_Preview, &type metadata for AudioPowerSpectrumView_Preview);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AudioPowerSpectrumView_Preview and conformance AudioPowerSpectrumView_Preview);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type AudioPowerSpectrumView_Preview and conformance AudioPowerSpectrumView_Preview;
  if (!lazy protocol witness table cache variable for type AudioPowerSpectrumView_Preview and conformance AudioPowerSpectrumView_Preview)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for AudioPowerSpectrumView_Preview, &type metadata for AudioPowerSpectrumView_Preview);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AudioPowerSpectrumView_Preview and conformance AudioPowerSpectrumView_Preview);
  }
  return result;
}

uint64_t associated type witness table accessor for PreviewProvider.Previews : View in AudioPowerSpectrumView_Preview()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for AudioPowerSpectrumView(uint64_t a1)
{

  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for AudioPowerSpectrumView(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for AudioPowerSpectrumView(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  v4 = (void *)a2[1];
  v5 = (void *)a1[1];
  a1[1] = v4;
  v6 = v4;

  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for AudioPowerSpectrumView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  void *v5;

  v4 = a2[1];
  v5 = (void *)a1[1];
  *a1 = *a2;
  a1[1] = v4;

  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for AudioPowerSpectrumView()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for AudioPowerSpectrumView.Constants()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for AudioPowerSpectrumView_Preview()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t ObjC metadata update function for MockAudioPowerSpectrumViewModel()
{
  return type metadata accessor for MockAudioPowerSpectrumViewModel();
}

uint64_t type metadata completion function for MockAudioPowerSpectrumViewModel()
{
  return swift_updateClassMetadata2();
}

uint64_t method lookup function for MockAudioPowerSpectrumViewModel()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MockAudioPowerSpectrumViewModel.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 672))();
}

uint64_t sub_1BD0F61B8()
{
  return lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type GeometryReader<ModifiedContent<StrokeShapeView<Path, LinearGradient, EmptyView>, _AnimationModifier<AudioPowerSpectrumViewModel>>> and conformance GeometryReader<A>, &demangling cache variable for type metadata for GeometryReader<ModifiedContent<StrokeShapeView<Path, LinearGradient, EmptyView>, _AnimationModifier<AudioPowerSpectrumViewModel>>>, MEMORY[0x1E0CD9318]);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<AudioPowerSpectrumView, _FrameLayout>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<AudioPowerSpectrumView, _FrameLayout>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<AudioPowerSpectrumView, _FrameLayout>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<AudioPowerSpectrumView, _FrameLayout>, _BackgroundStyleModifier<Color>>);
    v2[0] = lazy protocol witness table accessor for type ModifiedContent<AudioPowerSpectrumView, _FrameLayout> and conformance <> ModifiedContent<A, B>();
    v2[1] = lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type _BackgroundStyleModifier<Color> and conformance _BackgroundStyleModifier<A>, &demangling cache variable for type metadata for _BackgroundStyleModifier<Color>, MEMORY[0x1E0CDC6D0]);
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<AudioPowerSpectrumView, _FrameLayout>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<AudioPowerSpectrumView, _FrameLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<AudioPowerSpectrumView, _FrameLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<AudioPowerSpectrumView, _FrameLayout> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<AudioPowerSpectrumView, _FrameLayout>);
    v2[0] = lazy protocol witness table accessor for type AudioPowerSpectrumView and conformance AudioPowerSpectrumView();
    v2[1] = MEMORY[0x1E0CD8D70];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<AudioPowerSpectrumView, _FrameLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type AudioPowerSpectrumView and conformance AudioPowerSpectrumView()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type AudioPowerSpectrumView and conformance AudioPowerSpectrumView;
  if (!lazy protocol witness table cache variable for type AudioPowerSpectrumView and conformance AudioPowerSpectrumView)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for AudioPowerSpectrumView, &type metadata for AudioPowerSpectrumView);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AudioPowerSpectrumView and conformance AudioPowerSpectrumView);
  }
  return result;
}

uint64_t specialized static BinaryFloatingPoint<>.random<A>(in:using:)(uint64_t result, float a2, float a3)
{
  float v5;
  uint64_t v6;
  uint64_t v7;

  if (a2 == a3)
  {
    __break(1u);
    goto LABEL_7;
  }
  v5 = a3 - a2;
  if ((~COERCE_INT(a3 - a2) & 0x7F800000) == 0)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  v6 = result;
  v7 = 0;
  result = MEMORY[0x1C3B751D0](&v7, 8);
  if ((float)((float)(v5 * (float)((float)(v7 & 0xFFFFFF) * 0.000000059605)) + a2) == a3)
    return specialized static BinaryFloatingPoint<>.random<A>(in:using:)(v6, a2, a3);
  return result;
}

void partial apply for closure #1 in closure #1 in AudioPowerSpectrumView.body.getter(uint64_t a1)
{
  uint64_t v1;

  closure #1 in closure #1 in AudioPowerSpectrumView.body.getter(*(double *)(v1 + 32), *(double *)(v1 + 48), *(double *)(v1 + 56), a1, *(_QWORD *)(v1 + 16), *(_QWORD **)(v1 + 24));
}

id ConversationHUDAppLaunchPillView.controlsManager.getter()
{
  return OUTLINED_FUNCTION_7(OBJC_IVAR____TtC15ConversationKit32ConversationHUDAppLaunchPillView_controlsManager);
}

uint64_t ConversationHUDAppLaunchPillView.controlsContext.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ConversationKit32ConversationHUDAppLaunchPillView_controlsContext);
}

void ConversationHUDAppLaunchPillView.buttonType.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  outlined init with copy of ConversationControlsAppLaunchButtonType(v1 + OBJC_IVAR____TtC15ConversationKit32ConversationHUDAppLaunchPillView_buttonType, a1, type metadata accessor for ConversationControlsAppLaunchButtonType);
}

id ConversationHUDAppLaunchPillView.featureFlags.getter()
{
  return OUTLINED_FUNCTION_7(OBJC_IVAR____TtC15ConversationKit32ConversationHUDAppLaunchPillView_featureFlags);
}

uint64_t key path setter for ConversationHUDAppLaunchPillView.activity : ConversationHUDAppLaunchPillView(uint64_t a1, _QWORD **a2)
{
  _BYTE v4[40];

  outlined init with copy of Activity?(a1, (uint64_t)v4);
  return (*(uint64_t (**)(_BYTE *))((*MEMORY[0x1E0DEEDD8] & **a2) + 0xD0))(v4);
}

uint64_t ConversationHUDAppLaunchPillView.activity.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15ConversationKit32ConversationHUDAppLaunchPillView_activity;
  swift_beginAccess();
  return outlined init with copy of Activity?(v3, a1);
}

uint64_t outlined init with copy of Activity?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Activity?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void ConversationHUDAppLaunchPillView.activity.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15ConversationKit32ConversationHUDAppLaunchPillView_activity;
  OUTLINED_FUNCTION_60_0();
  outlined assign with copy of Activity?(a1, v3);
  swift_endAccess();
  ConversationHUDAppLaunchPillView.updateIconView()();
  ConversationHUDAppLaunchPillView.updateTitle()();
  ConversationHUDAppLaunchPillView.updateCallToAction()();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(a1, &demangling cache variable for type metadata for Activity?);
  OUTLINED_FUNCTION_9_0();
}

uint64_t outlined assign with copy of Activity?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Activity?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

void ConversationHUDAppLaunchPillView.activity.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_60_0();
  OUTLINED_FUNCTION_0();
}

void ConversationHUDAppLaunchPillView.activity.modify(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    ConversationHUDAppLaunchPillView.updateIconView()();
    ConversationHUDAppLaunchPillView.updateTitle()();
    ConversationHUDAppLaunchPillView.updateCallToAction()();
  }
  OUTLINED_FUNCTION_0();
}

void ConversationHUDAppLaunchPillView.backgroundMaterialView.getter()
{
  CallControlsFullScreenStatusView.textContainer.getter(&OBJC_IVAR____TtC15ConversationKit32ConversationHUDAppLaunchPillView____lazy_storage___backgroundMaterialView, (uint64_t (*)(uint64_t))closure #1 in ConversationHUDAppLaunchPillView.backgroundMaterialView.getter);
}

UIView *closure #1 in ConversationHUDAppLaunchPillView.backgroundMaterialView.getter(uint64_t a1)
{
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  UIView *v7;
  UIView *v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;

  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC15ConversationKit32ConversationHUDAppLaunchPillView_controlsContext))
  {
    if (*(_BYTE *)(a1 + OBJC_IVAR____TtC15ConversationKit32ConversationHUDAppLaunchPillView_controlsContext) == 1)
    {
      v1 = (void *)objc_opt_self();
      if (one-time initialization token for backgroundBlurEffect != -1)
        swift_once();
      v2 = objc_msgSend(v1, sel__effectForBlurEffect_vibrancyStyle_, static Colors.InCallControls.backgroundBlurEffect, 112);
      v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F58]), sel_initWithEffect_, v2);
      v4 = objc_msgSend(v3, sel_contentView);
      v5 = objc_msgSend((id)objc_opt_self(), sel_tintColor);
      objc_msgSend(v4, sel_setBackgroundColor_, v5);

      v6 = objc_allocWithZone(MEMORY[0x1E0DC3F10]);
      v7 = (UIView *)v3;
      v8 = (UIView *)objc_msgSend(v6, sel_init);
      -[UIView addSubview:](v8, sel_addSubview_, v7);
      ConversationHUDAppLaunchPillView.contentHStack.getter();
      v10 = v9;
      -[UIView addSubview:](v8, sel_addSubview_, v9);

      UIView.addConstraintsToFill(_:insets:)(v8, *MEMORY[0x1E0DC3298]);
    }
    else
    {
      type metadata accessor for ConversationHUDInCallBackdropView();
      v7 = (UIView *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
      ConversationHUDAppLaunchPillView.contentHStack.getter();
      v17 = v16;
      -[UIView addSubview:](v7, sel_addSubview_, v16);

      v8 = v7;
    }
  }
  else
  {
    v11 = objc_msgSend((id)objc_opt_self(), sel_effectWithStyle_, 18);
    v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F58]), sel_initWithEffect_, v11);
    v13 = objc_msgSend(v12, sel_contentView);
    ConversationHUDAppLaunchPillView.contentHStack.getter();
    v15 = v14;
    objc_msgSend(v13, sel_addSubview_, v14);

    v7 = (UIView *)v12;
    v8 = v7;
  }
  -[UIView setTranslatesAutoresizingMaskIntoConstraints:](v8, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  -[UIView _setContinuousCornerRadius:](v7, sel__setContinuousCornerRadius_, ConversationHUDAppLaunchPillView.minimumCornerRadius.getter());
  -[UIView setClipsToBounds:](v7, sel_setClipsToBounds_, 1);

  return v8;
}

void ConversationHUDAppLaunchPillView.backgroundMaterialView.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_4_3(a1, OBJC_IVAR____TtC15ConversationKit32ConversationHUDAppLaunchPillView____lazy_storage___backgroundMaterialView);
}

void ConversationHUDAppLaunchPillView.backgroundMaterialView.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[1] = v1;
  ConversationHUDAppLaunchPillView.backgroundMaterialView.getter();
  *a1 = v3;
  OUTLINED_FUNCTION_0();
}

void ConversationHUDAppLaunchPillView.backgroundMaterialView.modify(void **a1, char a2)
{
  void *v2;
  id v3;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = v2;
    ConversationHUDAppLaunchPillView.backgroundMaterialView.setter((uint64_t)v3);

  }
  else
  {
    ConversationHUDAppLaunchPillView.backgroundMaterialView.setter((uint64_t)v2);
  }
}

double ConversationHUDAppLaunchPillView.minimumCornerRadius.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char v5;
  char v6;
  double v7;
  uint64_t v9;

  v1 = type metadata accessor for ConversationControlsAppLaunchButtonType(0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = v0 + OBJC_IVAR____TtC15ConversationKit32ConversationHUDAppLaunchPillView_buttonType;
  swift_storeEnumTagMultiPayload();
  static ConversationControlsAppLaunchButtonType.== infix(_:_:)(v4, (uint64_t)v3);
  v6 = v5;
  outlined destroy of AccountUpdateNotice((uint64_t)v3, type metadata accessor for ConversationControlsAppLaunchButtonType);
  if (one-time initialization token for margins != -1)
    swift_once();
  v7 = 32.0;
  if ((v6 & 1) != 0)
    v7 = 52.0;
  return (v7 + *(double *)&static Layout.ConversationControlsAppLaunchPillView.margins + *(double *)&qword_1EF4FD600)
       * 0.5;
}

_QWORD *ConversationHUDAppLaunchPillView.appStoreLockup.getter()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  void *v4;
  _QWORD *v5;

  v1 = OBJC_IVAR____TtC15ConversationKit32ConversationHUDAppLaunchPillView____lazy_storage___appStoreLockup;
  v2 = *(_QWORD **)((char *)v0
                  + OBJC_IVAR____TtC15ConversationKit32ConversationHUDAppLaunchPillView____lazy_storage___appStoreLockup);
  v3 = v2;
  if (v2 == (_QWORD *)1)
  {
    v3 = closure #1 in ConversationHUDAppLaunchPillView.appStoreLockup.getter(v0);
    v4 = *(void **)((char *)v0 + v1);
    *(_QWORD *)((char *)v0 + v1) = v3;
    v5 = v3;
    outlined consume of UIView??(v4);
  }
  outlined copy of UIView??(v2);
  return v3;
}

_QWORD *closure #1 in ConversationHUDAppLaunchPillView.appStoreLockup.getter(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  void (*v9)(_QWORD *__return_ptr);
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  id v28;
  id v29;
  id v30;
  _QWORD *v31;
  uint64_t v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  uint64_t v42;
  _QWORD v43[3];
  _QWORD *v44;
  uint64_t v45;

  v2 = type metadata accessor for ConversationControlsAppLaunchButtonType(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v43[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Collaboration?);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v43[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = 0;
  if (objc_msgSend(*(id *)((char *)a1+ OBJC_IVAR____TtC15ConversationKit32ConversationHUDAppLaunchPillView_featureFlags), sel_uninstalledAppStoreLockupEnabled))
  {
    v9 = *(void (**)(_QWORD *__return_ptr))((*MEMORY[0x1E0DEEDD8] & *a1) + 0xC8);
    v9(v43);
    v8 = v44;
    if (v44)
    {
      v10 = v45;
      v11 = __swift_project_boxed_opaque_existential_1(v43, (uint64_t)v44);
      v12 = *(v8 - 1);
      MEMORY[0x1E0C80A78](v11);
      v14 = (char *)&v43[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v12 + 16))(v14);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v43, &demangling cache variable for type metadata for Activity?);
      v42 = (*(uint64_t (**)(_QWORD *, uint64_t))(v10 + 32))(v8, v10);
      v16 = v15;
      v17 = (*(uint64_t (**)(char *, _QWORD *))(v12 + 8))(v14, v8);
      if (!v16)
        return 0;
      ((void (*)(_QWORD *__return_ptr, uint64_t))v9)(v43, v17);
      v18 = (uint64_t)v44;
      if (v44)
      {
        v19 = v45;
        v20 = __swift_project_boxed_opaque_existential_1(v43, (uint64_t)v44);
        v21 = *(_QWORD *)(v18 - 8);
        MEMORY[0x1E0C80A78](v20);
        v23 = (char *)&v43[-1] - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v21 + 16))(v23);
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v43, &demangling cache variable for type metadata for Activity?);
        (*(void (**)(uint64_t, uint64_t))(v19 + 112))(v18, v19);
        (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v18);
        v24 = type metadata accessor for Collaboration(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v24) != 1)
        {
          swift_bridgeObjectRelease();
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v7, &demangling cache variable for type metadata for Collaboration?);
          return 0;
        }
      }
      else
      {
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v43, &demangling cache variable for type metadata for Activity?);
        v25 = type metadata accessor for Collaboration(0);
        __swift_storeEnumTagSinglePayload((uint64_t)v7, 1, 1, v25);
      }
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v7, &demangling cache variable for type metadata for Collaboration?);
      v26 = (uint64_t)a1 + OBJC_IVAR____TtC15ConversationKit32ConversationHUDAppLaunchPillView_buttonType;
      swift_storeEnumTagMultiPayload();
      static ConversationControlsAppLaunchButtonType.== infix(_:_:)(v26, (uint64_t)v4);
      LOBYTE(v26) = v27;
      outlined destroy of AccountUpdateNotice((uint64_t)v4, type metadata accessor for ConversationControlsAppLaunchButtonType);
      if ((v26 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        return 0;
      }
      v28 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CF9BC8]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
      objc_msgSend(v28, sel_setSize_, *MEMORY[0x1E0CF9B60]);
      objc_msgSend(v28, sel_setShowsPlaceholderContent_, 1);
      v29 = objc_allocWithZone(MEMORY[0x1E0CF9BD0]);
      v30 = @nonobjc ASCLockupViewGroup.init(name:)(0x502068636E75614CLL, 0xEB000000006C6C69);
      objc_msgSend(v28, sel_setGroup_, v30);
      v31 = (_QWORD *)swift_allocObject();
      v32 = v42;
      v31[2] = v42;
      v31[3] = v16;
      v31[4] = v28;
      swift_bridgeObjectRetain();
      v8 = v28;
      ASCLockupViewGroup.__lockupRequest(for:completion:)(v32, v16, partial apply for closure #1 in closure #1 in ConversationHUDAppLaunchPillView.appStoreLockup.getter, v31);
      swift_release();
      swift_bridgeObjectRelease();
      v33 = (void *)objc_opt_self();
      v34 = objc_msgSend(v33, sel_whiteColor);
      v35 = objc_msgSend(v33, sel_blackColor);
      v36 = objc_msgSend(v33, sel_blackColor);
      v37 = objc_msgSend(v33, sel_whiteColor);
      v38 = objc_msgSend(v33, sel_whiteColor);
      v39 = objc_allocWithZone(MEMORY[0x1E0CF9BE8]);
      v40 = @nonobjc ASCOfferTheme.init(titleBackgroundColor:titleTextColor:subtitleTextColor:iconTintColor:progressColor:)(v34, v35, v36, v37, v38);
      objc_msgSend(v8, sel_setOfferTheme_, v40);

    }
    else
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v43, &demangling cache variable for type metadata for Activity?);
    }
  }
  return v8;
}

void closure #1 in closure #1 in ConversationHUDAppLaunchPillView.appStoreLockup.getter(uint64_t a1, void *a2, int a3, int a4, id a5)
{
  uint64_t v6;
  id v7;
  id v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  NSObject *oslog;
  uint64_t v25;

  if (a2)
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v6 = type metadata accessor for Logger();
    __swift_project_value_buffer(v6, (uint64_t)&static Logger.conversationControls);
    swift_bridgeObjectRetain();
    v7 = a2;
    swift_bridgeObjectRetain();
    v8 = a2;
    oslog = Logger.logObject.getter();
    v9 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v9))
    {
      v10 = swift_slowAlloc();
      v11 = swift_slowAlloc();
      v25 = v11;
      *(_DWORD *)v10 = 136315394;
      swift_bridgeObjectRetain();
      v12 = String.init<A>(reflecting:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v12, v13, &v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v10 + 12) = 2080;
      v14 = a2;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
      v15 = String.init<A>(reflecting:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v15, v16, &v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BD004000, oslog, v9, "Failed to request lockup for bundleIdentifier: %s, error: %s", (uint8_t *)v10, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v11, -1, -1);
      MEMORY[0x1C3B751B8](v10, -1, -1);

    }
    else
    {
      swift_bridgeObjectRelease_n();

    }
  }
  else if (a1)
  {
    objc_msgSend(a5, sel_setRequest_, a1);
  }
  else
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v17 = type metadata accessor for Logger();
    __swift_project_value_buffer(v17, (uint64_t)&static Logger.conversationControls);
    swift_bridgeObjectRetain_n();
    v18 = Logger.logObject.getter();
    v19 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      v21 = swift_slowAlloc();
      v25 = v21;
      *(_DWORD *)v20 = 136315138;
      swift_bridgeObjectRetain();
      v22 = String.init<A>(reflecting:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v22, v23, &v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD004000, v18, v19, "Failed to get lockupRequest for bundleIdentifier %s and received no error", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v21, -1, -1);
      MEMORY[0x1C3B751B8](v20, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
}

void ASCLockupViewGroup.__lockupRequest(for:completion:)(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  void *v4;
  id v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *aBlock[7];

  aBlock[6] = *(void **)MEMORY[0x1E0C80C00];
  if (objc_msgSend(v4, sel_respondsToSelector_, sel__lockupRequestForBundleID_withContext_enableAppDistribution_completionBlock_))
  {
    aBlock[0] = v4;
    v9 = v4;
    closure #1 in closure #1 in ASCLockupViewGroup.__lockupRequest(for:completion:)(aBlock, a1, a2, (uint64_t)a3, (uint64_t)a4);

  }
  else
  {
    v10 = (void *)MEMORY[0x1C3B72E00](a1, a2);
    v11 = *MEMORY[0x1E0CF9B20];
    aBlock[4] = a3;
    aBlock[5] = a4;
    aBlock[0] = (void *)MEMORY[0x1E0C809B0];
    aBlock[1] = (void *)1107296256;
    aBlock[2] = thunk for @escaping @callee_guaranteed (@guaranteed ASCLockupRequest?, @guaranteed Error?) -> ();
    aBlock[3] = &block_descriptor_16;
    v12 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v4, sel__lockupRequestForBundleID_withContext_completionBlock_, v10, v11, v12);
    _Block_release(v12);

  }
}

void ConversationHUDAppLaunchPillView.contentHStack.getter()
{
  CallControlsFullScreenStatusView.textContainer.getter(&OBJC_IVAR____TtC15ConversationKit32ConversationHUDAppLaunchPillView____lazy_storage___contentHStack, (uint64_t (*)(uint64_t))closure #1 in ConversationHUDAppLaunchPillView.contentHStack.getter);
}

id closure #1 in ConversationHUDAppLaunchPillView.contentHStack.getter(uint64_t a1)
{
  id v2;
  _QWORD *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3CA8]), sel_init);
  objc_msgSend(v2, sel_setAxis_, 0);
  objc_msgSend(v2, sel_setAlignment_, 3);
  objc_msgSend(v2, sel_setSpacing_, 12.0);
  v3 = ConversationHUDAppLaunchPillView.appStoreLockup.getter();
  if (v3)
    goto LABEL_6;
  if (*(_QWORD *)(a1 + OBJC_IVAR____TtC15ConversationKit32ConversationHUDAppLaunchPillView_iconView))
    objc_msgSend(v2, sel_addArrangedSubview_);
  ConversationHUDAppLaunchPillView.labelsVStack.getter();
  v5 = v4;
  objc_msgSend(v2, sel_addArrangedSubview_, v4);

  v6 = *(void **)(a1 + OBJC_IVAR____TtC15ConversationKit32ConversationHUDAppLaunchPillView_callToAction);
  if (v6)
  {
    v3 = v6;
LABEL_6:
    v7 = v3;
    objc_msgSend(v2, sel_addArrangedSubview_, v3);

  }
  return v2;
}

void ConversationHUDAppLaunchPillView.labelsVStack.getter()
{
  CallControlsFullScreenStatusView.textContainer.getter(&OBJC_IVAR____TtC15ConversationKit32ConversationHUDAppLaunchPillView____lazy_storage___labelsVStack, (uint64_t (*)(uint64_t))closure #1 in ConversationHUDAppLaunchPillView.labelsVStack.getter);
}

id closure #1 in ConversationHUDAppLaunchPillView.labelsVStack.getter()
{
  id v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  unint64_t v5;
  void *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3CA8]), sel_init);
  objc_msgSend(v0, sel_setAxis_, 1);
  objc_msgSend(v0, sel_setAlignment_, 1);
  objc_msgSend(v0, sel_setSpacing_, 0.0);
  ConversationHUDAppLaunchPillView.titleLabel.getter();
  v2 = v1;
  objc_msgSend(v0, sel_addArrangedSubview_, v1);

  ConversationHUDAppLaunchPillView.subtitleLabel.getter();
  v4 = outlined bridged method (ob) of @objc UILabel.text.getter(v3);
  v6 = v0;
  if (v5)
  {
    v7 = (unint64_t)v4;
    v8 = v5;
    swift_bridgeObjectRelease();
    v9 = HIBYTE(v8) & 0xF;
    if ((v8 & 0x2000000000000000) == 0)
      v9 = v7 & 0xFFFFFFFFFFFFLL;
    v6 = v0;
    if (v9)
    {
      ConversationHUDAppLaunchPillView.subtitleLabel.getter();
      v6 = v10;
      objc_msgSend(v0, sel_addArrangedSubview_, v10);

    }
  }

  return v0;
}

void ConversationHUDAppLaunchPillView.iconView.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_4_3(a1, OBJC_IVAR____TtC15ConversationKit32ConversationHUDAppLaunchPillView_iconView);
}

void ConversationHUDAppLaunchPillView.titleLabel.getter()
{
  ConversationHUDAppLaunchPillView.titleLabel.getter(&OBJC_IVAR____TtC15ConversationKit32ConversationHUDAppLaunchPillView____lazy_storage___titleLabel, (SEL *)&selRef_labelColor);
}

void ConversationHUDAppLaunchPillView.subtitleLabel.getter()
{
  ConversationHUDAppLaunchPillView.titleLabel.getter(&OBJC_IVAR____TtC15ConversationKit32ConversationHUDAppLaunchPillView____lazy_storage___subtitleLabel, (SEL *)&selRef_secondaryLabelColor);
}

void ConversationHUDAppLaunchPillView.titleLabel.getter(_QWORD *a1, SEL *a2)
{
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  id v6;

  v4 = *(void **)(v2 + *a1);
  if (!v4)
  {
    v5 = closure #1 in ConversationHUDAppLaunchPillView.titleLabel.getter(a2);
    OUTLINED_FUNCTION_17_3(v5);

    v4 = 0;
  }
  v6 = v4;
  OUTLINED_FUNCTION_18();
}

id closure #1 in ConversationHUDAppLaunchPillView.titleLabel.getter(SEL *a1)
{
  id v2;
  id v3;
  Class isa;
  Class v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  OUTLINED_FUNCTION_11_4((uint64_t)objc_msgSend(v2, sel_setNumberOfLines_, 1), sel_setClipsToBounds_);
  objc_msgSend(v2, sel_setLineBreakMode_, 4);
  v3 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4B10]);
  isa = UIFont.withTraits(_:)(0x8000u).super.isa;

  v5 = UIFont.caseSensitive()().super.isa;
  OUTLINED_FUNCTION_4_24(v6, sel_setFont_);

  OUTLINED_FUNCTION_11_4(v7, sel_setAdjustsFontForContentSizeCategory_);
  v8 = objc_msgSend((id)objc_opt_self(), *a1);
  OUTLINED_FUNCTION_4_24((uint64_t)v8, sel_setTextColor_);

  v10 = OUTLINED_FUNCTION_11_4(v9, sel_setMarqueeEnabled_);
  OUTLINED_FUNCTION_11_4((uint64_t)v10, sel_setMarqueeRunning_);
  type metadata accessor for UILayoutPriority(0);
  lazy protocol witness table accessor for type UILayoutPriority and conformance UILayoutPriority();
  v11 = OUTLINED_FUNCTION_5_44();
  OUTLINED_FUNCTION_24_22(v11, sel_setContentCompressionResistancePriority_forAxis_);
  v12 = OUTLINED_FUNCTION_5_44();
  OUTLINED_FUNCTION_24_22(v12, sel_setContentHuggingPriority_forAxis_);
  return v2;
}

void ConversationHUDAppLaunchPillView.callToAction.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  void *v4;

  v3 = (_QWORD *)(v2 + OBJC_IVAR____TtC15ConversationKit32ConversationHUDAppLaunchPillView_callToAction);
  v4 = *(void **)(v2 + OBJC_IVAR____TtC15ConversationKit32ConversationHUDAppLaunchPillView_callToAction);
  *v3 = a1;
  v3[1] = a2;

}

id ConversationHUDAppLaunchPillView.__allocating_init(controlsManager:controlsContext:buttonType:menuHostViewController:activity:)(void *a1, char a2, uint64_t a3, void *a4, void *a5, uint64_t a6)
{
  objc_class *v6;
  id v13;

  v13 = objc_allocWithZone(v6);
  return ConversationHUDAppLaunchPillView.init(controlsManager:controlsContext:buttonType:menuHostViewController:activity:)(a1, a2, a3, a4, a5, a6);
}

id ConversationHUDAppLaunchPillView.init(controlsManager:controlsContext:buttonType:menuHostViewController:activity:)(void *a1, char a2, uint64_t a3, void *a4, void *a5, uint64_t a6)
{
  char *v6;
  uint64_t v13;
  id v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  __int128 v19;
  char *v20;
  void **v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  objc_super v27;

  v13 = OBJC_IVAR____TtC15ConversationKit32ConversationHUDAppLaunchPillView_featureFlags;
  v14 = objc_allocWithZone(MEMORY[0x1E0DBD2F0]);
  v15 = v6;
  *(_QWORD *)&v6[v13] = objc_msgSend(v14, sel_init);
  v16 = (uint64_t)&v15[OBJC_IVAR____TtC15ConversationKit32ConversationHUDAppLaunchPillView_activity];
  *(_OWORD *)v16 = 0u;
  *(_OWORD *)(v16 + 16) = 0u;
  *(_QWORD *)(v16 + 32) = 0;
  v17 = OBJC_IVAR____TtC15ConversationKit32ConversationHUDAppLaunchPillView_margins;
  if (one-time initialization token for margins != -1)
    swift_once();
  v18 = &v15[v17];
  v19 = *(_OWORD *)&qword_1EF4FD600;
  *(_OWORD *)v18 = static Layout.ConversationControlsAppLaunchPillView.margins;
  *((_OWORD *)v18 + 1) = v19;
  *(_QWORD *)&v15[OBJC_IVAR____TtC15ConversationKit32ConversationHUDAppLaunchPillView____lazy_storage___backgroundMaterialView] = 0;
  *(_QWORD *)&v15[OBJC_IVAR____TtC15ConversationKit32ConversationHUDAppLaunchPillView____lazy_storage___appStoreLockup] = 1;
  *(_QWORD *)&v15[OBJC_IVAR____TtC15ConversationKit32ConversationHUDAppLaunchPillView____lazy_storage___contentHStack] = 0;
  *(_QWORD *)&v15[OBJC_IVAR____TtC15ConversationKit32ConversationHUDAppLaunchPillView____lazy_storage___labelsVStack] = 0;
  *(_QWORD *)&v15[OBJC_IVAR____TtC15ConversationKit32ConversationHUDAppLaunchPillView_iconView] = 0;
  *(_QWORD *)&v15[OBJC_IVAR____TtC15ConversationKit32ConversationHUDAppLaunchPillView____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v15[OBJC_IVAR____TtC15ConversationKit32ConversationHUDAppLaunchPillView____lazy_storage___subtitleLabel] = 0;
  v20 = &v15[OBJC_IVAR____TtC15ConversationKit32ConversationHUDAppLaunchPillView_callToAction];
  *(_QWORD *)v20 = 0;
  *((_QWORD *)v20 + 1) = 0;
  v21 = (void **)&v15[OBJC_IVAR____TtC15ConversationKit32ConversationHUDAppLaunchPillView_menuHostViewController];
  *v21 = 0;
  v21[1] = 0;
  *(_QWORD *)&v15[OBJC_IVAR____TtC15ConversationKit32ConversationHUDAppLaunchPillView_controlsManager] = a1;
  v15[OBJC_IVAR____TtC15ConversationKit32ConversationHUDAppLaunchPillView_controlsContext] = a2;
  outlined init with copy of ConversationControlsAppLaunchButtonType(a3, (uint64_t)&v15[OBJC_IVAR____TtC15ConversationKit32ConversationHUDAppLaunchPillView_buttonType], type metadata accessor for ConversationControlsAppLaunchButtonType);
  v22 = *v21;
  *v21 = a4;
  v21[1] = a5;
  v23 = a1;
  v24 = a4;

  OUTLINED_FUNCTION_60_0();
  outlined assign with copy of Activity?(a6, v16);
  swift_endAccess();

  v27.receiver = v15;
  v27.super_class = (Class)ObjC metadata update function for ConversationHUDAppLaunchPillView();
  v25 = objc_msgSendSuper2(&v27, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  ConversationHUDAppLaunchPillView.setupRootView()();

  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(a6, &demangling cache variable for type metadata for Activity?);
  outlined destroy of AccountUpdateNotice(a3, type metadata accessor for ConversationControlsAppLaunchButtonType);
  return v25;
}

void ConversationHUDAppLaunchPillView.setupRootView()()
{
  _QWORD *v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v1 = objc_msgSend(v0, sel_layer);
  objc_msgSend(v1, sel_setAllowsGroupOpacity_, 0);

  v2 = ConversationHUDAppLaunchPillView.createIconView()();
  ConversationHUDAppLaunchPillView.iconView.setter((uint64_t)v2);
  ConversationHUDAppLaunchPillView.updateTitle()();
  ConversationHUDAppLaunchPillView.updateSubtitle()();
  v3 = ConversationHUDAppLaunchPillView.createCallToAction()();
  ConversationHUDAppLaunchPillView.callToAction.setter(v3, v4);
  v5 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
  objc_msgSend(v0, sel_addSubview_, v5);

  ConversationHUDAppLaunchPillView.setupLayoutConstraints()();
}

void ConversationHUDAppLaunchPillView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;

  objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  OUTLINED_FUNCTION_0();
}

void ConversationHUDAppLaunchPillView.init(coder:)()
{
  char *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  char *v4;
  __int128 v5;
  char *v6;
  char *v7;

  v1 = OBJC_IVAR____TtC15ConversationKit32ConversationHUDAppLaunchPillView_featureFlags;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DBD2F0]), sel_init);
  v2 = &v0[OBJC_IVAR____TtC15ConversationKit32ConversationHUDAppLaunchPillView_activity];
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_QWORD *)v2 + 4) = 0;
  v3 = OBJC_IVAR____TtC15ConversationKit32ConversationHUDAppLaunchPillView_margins;
  if (one-time initialization token for margins != -1)
    swift_once();
  v4 = &v0[v3];
  v5 = *(_OWORD *)&qword_1EF4FD600;
  *(_OWORD *)v4 = static Layout.ConversationControlsAppLaunchPillView.margins;
  *((_OWORD *)v4 + 1) = v5;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit32ConversationHUDAppLaunchPillView____lazy_storage___backgroundMaterialView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit32ConversationHUDAppLaunchPillView____lazy_storage___appStoreLockup] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit32ConversationHUDAppLaunchPillView____lazy_storage___contentHStack] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit32ConversationHUDAppLaunchPillView____lazy_storage___labelsVStack] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit32ConversationHUDAppLaunchPillView_iconView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit32ConversationHUDAppLaunchPillView____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit32ConversationHUDAppLaunchPillView____lazy_storage___subtitleLabel] = 0;
  v6 = &v0[OBJC_IVAR____TtC15ConversationKit32ConversationHUDAppLaunchPillView_callToAction];
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  v7 = &v0[OBJC_IVAR____TtC15ConversationKit32ConversationHUDAppLaunchPillView_menuHostViewController];
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Void __swiftcall ConversationHUDAppLaunchPillView.layoutSubviews()()
{
  _QWORD *v0;
  double v1;
  void *v2;
  double v3;
  CGFloat v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  void *v12;
  double v13;
  double v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  void *v21;
  uint64_t v22;
  objc_super v23;
  CGRect v24;

  swift_getObjectType();
  v23.receiver = v0;
  v23.super_class = (Class)ObjC metadata update function for ConversationHUDAppLaunchPillView();
  objc_msgSendSuper2(&v23, sel_layoutSubviews);
  v1 = ConversationHUDAppLaunchPillView.minimumCornerRadius.getter();
  v2 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
  objc_msgSend(v2, sel_bounds);
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;

  v24.origin.x = v4;
  v24.origin.y = v6;
  v24.size.width = v8;
  v24.size.height = v10;
  v11 = CGRectGetHeight(v24) * 0.5;
  if (v1 <= v11)
    v1 = v11;
  v12 = (void *)OUTLINED_FUNCTION_12_2();
  objc_msgSend(v12, sel__continuousCornerRadius);
  v14 = v13;

  if (v14 != v1)
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v15 = type metadata accessor for Logger();
    __swift_project_value_buffer(v15, (uint64_t)&static Logger.conversationControls);
    v16 = Logger.logObject.getter();
    v17 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = swift_slowAlloc();
      v22 = swift_slowAlloc();
      *(_DWORD *)v18 = 136446466;
      v19 = _typeName(_:qualified:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v19, v20, &v22);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 12) = 2048;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl(&dword_1BD004000, v16, v17, "[%{public}s] updating corner radius to %f", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_60();
    }

    v21 = (void *)OUTLINED_FUNCTION_12_2();
    objc_msgSend(v21, sel__setContinuousCornerRadius_, v1);

  }
}

void ConversationHUDAppLaunchPillView.addTarget(_:action:)(_QWORD *a1, uint64_t a2)
{
  char *v2;
  char *v3;
  id v6;
  id v7;
  void *v8;
  id v9;
  _QWORD v10[4];

  v3 = v2;
  outlined init with copy of Any((uint64_t)a1, (uint64_t)v10);
  v6 = objc_allocWithZone(MEMORY[0x1E0DC3D80]);
  v7 = @nonobjc UITapGestureRecognizer.init(target:action:)(v10, a2);
  objc_msgSend(v3, sel_addGestureRecognizer_, v7);

  v8 = *(void **)&v3[OBJC_IVAR____TtC15ConversationKit32ConversationHUDAppLaunchPillView_callToAction];
  if (v8)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    v9 = v8;
    objc_msgSend(v9, sel_addTarget_action_forControlEvents_, _bridgeAnythingToObjectiveC<A>(_:)(), a2, 64);

    swift_unknownObjectRelease();
  }
  OUTLINED_FUNCTION_9_0();
}

id ConversationHUDAppLaunchPillView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void ConversationHUDAppLaunchPillView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ConversationHUDAppLaunchPillView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)ObjC metadata update function for ConversationHUDAppLaunchPillView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id ConversationHUDAppLaunchPillView.createIconView()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void **v10;
  uint64_t v11;
  uint64_t (*v12)(_QWORD);
  char v13;
  char v14;
  id *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int EnumTagSinglePayload;
  void *v31;
  void *v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  void *v49;
  _QWORD v51[2];
  uint64_t v52;
  _QWORD v53[3];
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  uint64_t v57;
  void *v58;
  __int16 v59;
  uint64_t v60;
  char v61;
  uint64_t v62;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Collaboration?);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ConversationControlsAppLaunchButtonType(0);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (void **)((char *)v51 - v9);
  v11 = (uint64_t)v1 + OBJC_IVAR____TtC15ConversationKit32ConversationHUDAppLaunchPillView_buttonType;
  outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v1 + OBJC_IVAR____TtC15ConversationKit32ConversationHUDAppLaunchPillView_buttonType, (uint64_t)v51 - v9, v12);
  if (!swift_getEnumCaseMultiPayload())
  {
    v20 = *v10;
    v16 = ConversationHUDAppLaunchPillView.createIconViewForLagunaRecommendation(_:)();

    return v16;
  }
  outlined destroy of AccountUpdateNotice((uint64_t)v10, type metadata accessor for ConversationControlsAppLaunchButtonType);
  swift_storeEnumTagMultiPayload();
  static ConversationControlsAppLaunchButtonType.== infix(_:_:)(v11, (uint64_t)v8);
  v14 = v13;
  outlined destroy of AccountUpdateNotice((uint64_t)v8, type metadata accessor for ConversationControlsAppLaunchButtonType);
  if ((v14 & 1) == 0)
  {
    (*(void (**)(__int128 *__return_ptr))((*MEMORY[0x1E0DEEDD8] & *v1) + 0xC8))(&v56);
    if (!v58)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v56, &demangling cache variable for type metadata for Activity?);
      return 0;
    }
    outlined init with take of Notice(&v56, (uint64_t)v53);
    v21 = objc_msgSend(*(id *)((char *)v1+ OBJC_IVAR____TtC15ConversationKit32ConversationHUDAppLaunchPillView_featureFlags), sel_uninstalledAppStoreLockupEnabled);
    v22 = v54;
    v23 = v55;
    __swift_project_boxed_opaque_existential_1(v53, v54);
    if (!v21)
    {
      if (((*(uint64_t (**)(uint64_t, uint64_t))(v23 + 40))(v22, v23) & 1) == 0)
      {
        v26 = (void *)0x80000001BD673780;
        v24 = 0xD000000000000012;
LABEL_15:
        v27 = v54;
        v28 = v55;
        __swift_project_boxed_opaque_existential_1(v53, v54);
        (*(void (**)(uint64_t, uint64_t))(v28 + 112))(v27, v28);
        v29 = type metadata accessor for Collaboration(0);
        EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v4, 1, v29);
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v4, &demangling cache variable for type metadata for Collaboration?);
        if (EnumTagSinglePayload == 1)
        {
          type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIImageView);
          static UIImageView.appIcon(for:)(v24, v26);
          v32 = v31;
          if (!v31)
            goto LABEL_23;
        }
        else
        {
          type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
          v33 = (void *)*MEMORY[0x1E0DC4AE8];
          strcpy((char *)&v56, "person.2.fill");
          HIWORD(v56) = -4864;
          v57 = 3;
          v58 = v33;
          v59 = 0;
          v60 = 4;
          v61 = 0;
          v62 = 0;
          v34 = v33;
          v35 = static UIImage.symbolImage(for:)((uint64_t)&v56);

          swift_bridgeObjectRelease();
          if (v35)
          {
            v36 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
            v37 = objc_msgSend(v35, sel_imageWithTintColor_renderingMode_, v36, 1);

          }
          else
          {
            v37 = 0;
          }
          v38 = v54;
          v39 = v55;
          __swift_project_boxed_opaque_existential_1(v53, v54);
          LOBYTE(v38) = (*(uint64_t (**)(uint64_t, uint64_t))(v39 + 40))(v38, v39);
          type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIImageView);
          if ((v38 & 1) != 0)
          {
            static UIImageView.appIcon(for:)(v24, v26);
            v32 = v40;

            if (!v32)
            {
LABEL_23:
              if (one-time initialization token for conversationControls != -1)
                swift_once();
              v41 = type metadata accessor for Logger();
              __swift_project_value_buffer(v41, (uint64_t)&static Logger.conversationControls);
              swift_bridgeObjectRetain();
              v42 = Logger.logObject.getter();
              v43 = static os_log_type_t.error.getter();
              if (os_log_type_enabled(v42, v43))
              {
                v44 = (uint8_t *)swift_slowAlloc();
                v45 = swift_slowAlloc();
                v52 = v45;
                *(_DWORD *)v44 = 136315138;
                if (v26)
                {
                  v51[0] = v24;
                  v51[1] = v26;
                  swift_bridgeObjectRetain();
                  v46 = String.init<A>(reflecting:)();
                  v48 = v47;
                }
                else
                {
                  v48 = 0xE300000000000000;
                  v46 = 7104878;
                }
                v51[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v46, v48, &v52);
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                swift_bridgeObjectRelease_n();
                swift_bridgeObjectRelease();
                _os_log_impl(&dword_1BD004000, v42, v43, "Unable to obtain icon for bundleIdentifier: %s", v44, 0xCu);
                swift_arrayDestroy();
                MEMORY[0x1C3B751B8](v45, -1, -1);
                MEMORY[0x1C3B751B8](v44, -1, -1);

              }
              else
              {

                swift_bridgeObjectRelease_n();
              }
              __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
              return 0;
            }
          }
          else
          {
            static UIImageView.defaultAppIcon(for:)((uint64_t)v37);
            v32 = v49;

          }
        }
        v16 = v32;
        swift_bridgeObjectRelease();
        ConversationHUDAppLaunchPillView.constrainIconView(_:)(v16);

        __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
        return v16;
      }
      v22 = v54;
      v23 = v55;
      __swift_project_boxed_opaque_existential_1(v53, v54);
    }
    v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 32))(v22, v23);
    v26 = v25;
    goto LABEL_15;
  }
  if (one-time initialization token for shared != -1)
    swift_once();
  v15 = (id *)(static NameAndPhotoUtilities.shared
             + OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_personalAvatarView);
  swift_beginAccess();
  v16 = *v15;
  if (*v15)
  {
    v17 = v16;
    ConversationHUDAppLaunchPillView.constrainIconView(_:)(v17);
    v18 = objc_msgSend(v17, sel_layer);
    objc_msgSend(v18, sel_setCornerRadius_, 26.0);

    v19 = objc_msgSend(v17, sel_layer);
    objc_msgSend(v19, sel_setMasksToBounds_, 1);

  }
  return v16;
}

void ConversationHUDAppLaunchPillView.updateTitle()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  id *v24;
  uint64_t v25;
  uint64_t (*v26)(_QWORD);
  int v27;
  void *v28;
  void *v29;
  id v30;
  unint64_t v31;
  const char *v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  void *v39;
  int EnumCaseMultiPayload;
  void *v41;
  void *v42;
  unint64_t v43;
  void (*v44)(__int128 *__return_ptr);
  uint64_t v45;
  uint64_t v46;
  void *v47;
  void *v48;
  id v49;
  unsigned int v50;
  void *v51;
  void *v52;
  id v53;
  const char *v54;
  void *v55;
  void *v56;
  id v57;
  Swift::String v58;
  Swift::String_optional v59;
  Swift::String v60;
  Swift::String v61;
  void *v62;
  void *v63;
  Swift::String_optional v64;
  Swift::String v65;
  uint64_t v66;
  Swift::String v67;
  uint64_t v68;
  id v69;
  NSObject *v70;
  os_log_type_t v71;
  uint8_t *v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t (*v83)(uint64_t);
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  void *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void *v95;
  id v96;
  unint64_t v97;
  unint64_t v98;
  id v99;
  id v100;
  id v101;
  void *v102;
  uint64_t v103;
  void *v104;
  const char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void *v110;
  void *v111;
  uint64_t v112;
  void *v113;
  id v114;
  Swift::String v115;
  Swift::String_optional v116;
  Swift::String v117;
  Swift::String v118;
  uint64_t v119;
  void *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  void *v129;
  Swift::String_optional v130;
  Swift::String v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  void *v135;
  void *v136;
  void *v137;
  uint64_t v138;
  _QWORD *v139;
  uint64_t v140;
  uint64_t v141;
  void *v142;
  void *v143;
  id v144;
  Swift::String v145;
  Swift::String_optional v146;
  Swift::String v147;
  uint64_t v148;
  uint64_t countAndFlagsBits;
  void *v150;
  void *object;
  uint64_t *v152;
  uint64_t v153;
  uint64_t v154;
  void *v155;
  id v156;
  Swift::String v157;
  Swift::String_optional v158;
  Swift::String v159;
  uint64_t v160;
  void *v161;
  void *v162;
  const char *v163;
  void *v164;
  void *v165;
  void *v166;
  Swift::String_optional v167;
  Swift::String v168;
  uint64_t v169;
  Swift::String v170;
  void *v171;
  id v172;
  Swift::String v173;
  Swift::String_optional v174;
  Swift::String v175;
  Swift::String v176;
  unint64_t v177;
  unint64_t v178;
  unint64_t v179;
  uint64_t v180;
  _QWORD *v181;
  char *v182;
  char *v183;
  uint64_t v184;
  _QWORD *v185;
  __int128 v186;
  uint64_t v187;
  __int128 v188;
  uint64_t v189;
  uint64_t v190;
  Swift::String v191;
  Swift::String v192;
  Swift::String v193;
  Swift::String v194;
  Swift::String v195;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StagedCollaboration?);
  MEMORY[0x1E0C80A78](v1);
  v182 = (char *)&v180 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Collaboration?);
  v4 = MEMORY[0x1E0C80A78](v3);
  v183 = (char *)&v180 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v180 - v6;
  v184 = type metadata accessor for Collaboration(0);
  MEMORY[0x1E0C80A78](v184);
  v9 = (char *)&v180 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ConversationControlsAppLaunchButtonType(0);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v180 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v180 - v15;
  v17 = MEMORY[0x1E0C80A78](v14);
  v19 = (char *)&v180 - v18;
  v20 = MEMORY[0x1E0C80A78](v17);
  v22 = (char *)&v180 - v21;
  MEMORY[0x1E0C80A78](v20);
  v24 = (id *)((char *)&v180 - v23);
  v25 = (uint64_t)v0 + OBJC_IVAR____TtC15ConversationKit32ConversationHUDAppLaunchPillView_buttonType;
  outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v0 + OBJC_IVAR____TtC15ConversationKit32ConversationHUDAppLaunchPillView_buttonType, (uint64_t)&v180 - v23, v26);
  if (!swift_getEnumCaseMultiPayload())
  {
    v33 = *v24;
    v34 = outlined bridged method (ob) of @objc TUNearbyDeviceHandle.name.getter(objc_msgSend(*v24, sel_deviceHandle));
    if (v35)
    {
      v36 = (uint64_t)v34;
      v37 = v35;
      ConversationHUDAppLaunchPillView.titleLabel.getter();
      v39 = v38;
      outlined bridged method (mbnn) of @objc UILabel.text.setter(v36, v37, v38);

    }
    else
    {
      ConversationHUDAppLaunchPillView.titleLabel.getter();
      v56 = v55;
      v57 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
      v191._object = (void *)0xE000000000000000;
      v58._countAndFlagsBits = 0x56545F454C505041;
      v58._object = (void *)0xE800000000000000;
      v59.value._countAndFlagsBits = 0x61737265766E6F43;
      v59.value._object = (void *)0xEF74694B6E6F6974;
      v60._countAndFlagsBits = 0;
      v60._object = (void *)0xE000000000000000;
      v191._countAndFlagsBits = 0;
      v61 = NSLocalizedString(_:tableName:bundle:value:comment:)(v58, v59, (NSBundle)v57, v60, v191);

      outlined bridged method (mbnn) of @objc UILabel.text.setter(v61._countAndFlagsBits, (uint64_t)v61._object, v56);
    }

    return;
  }
  v181 = v9;
  v185 = v0;
  outlined destroy of AccountUpdateNotice((uint64_t)v24, type metadata accessor for ConversationControlsAppLaunchButtonType);
  outlined init with copy of ConversationControlsAppLaunchButtonType(v25, (uint64_t)v22, type metadata accessor for ConversationControlsAppLaunchButtonType);
  if (swift_getEnumCaseMultiPayload() - 9 > 2)
  {
    outlined destroy of AccountUpdateNotice((uint64_t)v22, type metadata accessor for ConversationControlsAppLaunchButtonType);
    outlined init with copy of ConversationControlsAppLaunchButtonType(v25, (uint64_t)v16, type metadata accessor for ConversationControlsAppLaunchButtonType);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    outlined destroy of AccountUpdateNotice((uint64_t)v16, type metadata accessor for ConversationControlsAppLaunchButtonType);
    v41 = v185;
    if (EnumCaseMultiPayload == 1)
    {
      ConversationHUDAppLaunchPillView.titleLabel.getter();
      v29 = v42;
      v30 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
      v177 = 0xE000000000000000;
      v31 = 0x535F4E4545524353;
      v43 = 0xEE00474E49524148;
LABEL_21:
      v64.value._countAndFlagsBits = 0x61737265766E6F43;
      v64.value._object = (void *)0xEF74694B6E6F6974;
      v65._countAndFlagsBits = 0;
      v65._object = (void *)0xE000000000000000;
      v66 = 0;
      v67 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v31, v64, (NSBundle)v30, v65, *(Swift::String *)(&v177 - 1));

      outlined bridged method (mbnn) of @objc UILabel.text.setter(v67._countAndFlagsBits, (uint64_t)v67._object, v29);
LABEL_22:

      return;
    }
    v44 = *(void (**)(__int128 *__return_ptr))((*MEMORY[0x1E0DEEDD8] & *v185) + 0xC8);
    v44(&v186);
    if (!v187)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v186, &demangling cache variable for type metadata for Activity?);
      if (one-time initialization token for conversationControls != -1)
        swift_once();
      v68 = type metadata accessor for Logger();
      __swift_project_value_buffer(v68, (uint64_t)&static Logger.conversationControls);
      v69 = v41;
      v70 = Logger.logObject.getter();
      v71 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v70, v71))
      {
        v72 = (uint8_t *)swift_slowAlloc();
        v73 = swift_slowAlloc();
        *(_QWORD *)&v186 = v73;
        *(_DWORD *)v72 = 136315138;
        v44(&v188);
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Activity?);
        v74 = String.init<A>(describing:)();
        *(_QWORD *)&v188 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v74, v75, (uint64_t *)&v186);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BD004000, v70, v71, "AppLaunchButton: No activity:%s", v72, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3B751B8](v73, -1, -1);
        MEMORY[0x1C3B751B8](v72, -1, -1);

      }
      else
      {

      }
      ConversationHUDAppLaunchPillView.titleLabel.getter();
      v29 = v76;
      objc_msgSend(v76, sel_setText_, 0);
      goto LABEL_22;
    }
    outlined init with take of Notice(&v186, (uint64_t)&v188);
    outlined init with copy of ConversationControlsAppLaunchButtonType(v25, (uint64_t)v13, type metadata accessor for ConversationControlsAppLaunchButtonType);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
      case 4u:
        v45 = v189;
        v46 = v190;
        __swift_project_boxed_opaque_existential_1(&v188, v189);
        v47 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v46 + 104))(v45, v46);
        if (v47)
        {
          v48 = v47;
          v49 = objc_msgSend(v47, sel_activity);
          v50 = objc_msgSend(v49, sel_isScreenSharingActivity);

          if (v50)
          {
            ConversationHUDAppLaunchPillView.titleLabel.getter();
            v52 = v51;
            v53 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
            v178 = 0xE000000000000000;
            v54 = "Join Screen Sharing";
            goto LABEL_53;
          }
        }
        v77 = v189;
        v78 = v190;
        __swift_project_boxed_opaque_existential_1(&v188, v189);
        v79 = (uint64_t)v183;
        (*(void (**)(uint64_t, uint64_t))(v78 + 112))(v77, v78);
        LODWORD(v77) = __swift_getEnumTagSinglePayload(v79, 1, v184);
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v79, &demangling cache variable for type metadata for Collaboration?);
        if ((_DWORD)v77 == 1)
        {
          ConversationHUDAppLaunchPillView.titleLabel.getter();
          v52 = v80;
          v53 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
          v178 = 0xE000000000000000;
          v81 = 0x616853206E696F4ALL;
          v82 = 0xEE0079616C506572;
          goto LABEL_64;
        }
        v125 = v189;
        v126 = v190;
        __swift_project_boxed_opaque_existential_1(&v188, v189);
        v127 = (*(uint64_t (**)(uint64_t, uint64_t))(v126 + 48))(v125, v126);
        if (v128)
        {
          v92 = v127;
          v94 = v128;
          ConversationHUDAppLaunchPillView.titleLabel.getter();
          v52 = v129;
          v96 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
          v97 = 0xD00000000000001DLL;
          v179 = 0xE000000000000000;
          v105 = "%@_Collaboration_Title_Quoted";
          goto LABEL_49;
        }
        ConversationHUDAppLaunchPillView.titleLabel.getter();
        v52 = v166;
        v53 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
        v81 = 0xD000000000000012;
        v178 = 0xE000000000000000;
        v163 = "Join Collaboration";
        goto LABEL_63;
      case 3u:
        v85 = v189;
        v86 = v190;
        __swift_project_boxed_opaque_existential_1(&v188, v189);
        (*(void (**)(uint64_t, uint64_t))(v86 + 112))(v85, v86);
        if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v184) != 1)
        {
          v138 = (uint64_t)v7;
          v139 = v181;
          outlined init with take of StagedCollaboration(v138, (uint64_t)v181, type metadata accessor for Collaboration);
          if (v139[7] == 1 || (v140 = v139[9]) == 0)
          {
            ConversationHUDAppLaunchPillView.titleLabel.getter();
            v143 = v171;
            v172 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
            v173._countAndFlagsBits = 0xD000000000000012;
            v195._object = (void *)0xE000000000000000;
            v173._object = (void *)0x80000001BD6737A0;
            v174.value._countAndFlagsBits = 0x61737265766E6F43;
            v174.value._object = (void *)0xEF74694B6E6F6974;
            v175._countAndFlagsBits = 0;
            v175._object = (void *)0xE000000000000000;
            v195._countAndFlagsBits = 0;
            v176 = NSLocalizedString(_:tableName:bundle:value:comment:)(v173, v174, (NSBundle)v172, v175, v195);
            countAndFlagsBits = v176._countAndFlagsBits;
            object = v176._object;

          }
          else
          {
            v141 = v139[8];
            swift_bridgeObjectRetain();
            ConversationHUDAppLaunchPillView.titleLabel.getter();
            v143 = v142;
            v144 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
            v145._countAndFlagsBits = 0xD00000000000001DLL;
            v193._object = (void *)0xE000000000000000;
            v145._object = (void *)0x80000001BD6737C0;
            v146.value._countAndFlagsBits = 0x61737265766E6F43;
            v146.value._object = (void *)0xEF74694B6E6F6974;
            v147._countAndFlagsBits = 0;
            v147._object = (void *)0xE000000000000000;
            v193._countAndFlagsBits = 0;
            NSLocalizedString(_:tableName:bundle:value:comment:)(v145, v146, (NSBundle)v144, v147, v193);

            __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
            v148 = swift_allocObject();
            *(_OWORD *)(v148 + 16) = xmmword_1BD6441D0;
            *(_QWORD *)(v148 + 56) = MEMORY[0x1E0DEA968];
            *(_QWORD *)(v148 + 64) = lazy protocol witness table accessor for type String and conformance String();
            *(_QWORD *)(v148 + 32) = v141;
            *(_QWORD *)(v148 + 40) = v140;
            countAndFlagsBits = String.init(format:_:)();
            object = v150;
            swift_bridgeObjectRelease();
          }
          outlined bridged method (mbnn) of @objc UILabel.text.setter(countAndFlagsBits, (uint64_t)object, v143);

          v83 = type metadata accessor for Collaboration;
          v84 = (uint64_t)v139;
LABEL_69:
          outlined destroy of AccountUpdateNotice(v84, v83);
          goto LABEL_66;
        }
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v7, &demangling cache variable for type metadata for Collaboration?);
        v87 = v189;
        v88 = v190;
        __swift_project_boxed_opaque_existential_1(&v188, v189);
        v89 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v88 + 104))(v87, v88);
        if (v89)
        {
          v90 = v89;
          outlined bridged method (ob) of @objc TUConversationActivity.localizedApplicationName.getter(objc_msgSend(v89, sel_activity));
          v92 = v91;
          v94 = v93;

          if (v94)
          {
            ConversationHUDAppLaunchPillView.titleLabel.getter();
            v52 = v95;
            v96 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
            v179 = 0xE000000000000000;
            v97 = 0x6975716552204025;
            v98 = 0xEB00000000646572;
            goto LABEL_50;
          }
        }
        ConversationHUDAppLaunchPillView.titleLabel.getter();
        v52 = v165;
        v53 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
        v81 = 0xD000000000000011;
        v178 = 0xE000000000000000;
        v163 = "App Not Installed";
        goto LABEL_63;
      case 5u:
        v99 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
        v100 = objc_msgSend(v99, sel_neighborhoodActivityConduit);

        v101 = objc_msgSend(v100, sel_activeSplitSessionTV);
        if (!v101 || (v102 = outlined bridged method (ob) of @objc TUNearbyDeviceHandle.name.getter(v101), !v103))
        {
          ConversationHUDAppLaunchPillView.titleLabel.getter();
          v52 = v137;
          v53 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
          v178 = 0xE000000000000000;
          v54 = "Playing on Apple TV";
LABEL_53:
          v82 = (unint64_t)(v54 - 32) | 0x8000000000000000;
          v81 = 0xD000000000000013;
          goto LABEL_64;
        }
        v92 = (uint64_t)v102;
        v94 = v103;
        ConversationHUDAppLaunchPillView.titleLabel.getter();
        v52 = v104;
        v96 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
        v97 = 0xD000000000000014;
        v179 = 0xE000000000000000;
        v105 = "Playing on Quoted_%@";
LABEL_49:
        v98 = (unint64_t)(v105 - 32) | 0x8000000000000000;
        goto LABEL_50;
      case 6u:
        v106 = v189;
        v107 = v190;
        __swift_project_boxed_opaque_existential_1(&v188, v189);
        v108 = (*(uint64_t (**)(uint64_t, uint64_t))(v107 + 48))(v106, v107);
        if (!v109)
        {
          ConversationHUDAppLaunchPillView.titleLabel.getter();
          v52 = v164;
          v53 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
          v178 = 0xE000000000000000;
          v81 = 0x414C504552414853;
          v82 = 0xE900000000000059;
          goto LABEL_64;
        }
        v92 = v108;
        v94 = v109;
        ConversationHUDAppLaunchPillView.titleLabel.getter();
        v52 = v110;
        v96 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
        v179 = 0xE000000000000000;
        v97 = 0x616C506572616853;
        v98 = 0xEC00000040252079;
LABEL_50:
        v130.value._countAndFlagsBits = 0x61737265766E6F43;
        v130.value._object = (void *)0xEF74694B6E6F6974;
        v131._countAndFlagsBits = 0;
        v131._object = (void *)0xE000000000000000;
        v132 = 0;
        NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v97, v130, (NSBundle)v96, v131, *(Swift::String *)(&v179 - 1));

        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
        v133 = swift_allocObject();
        *(_OWORD *)(v133 + 16) = xmmword_1BD6441D0;
        *(_QWORD *)(v133 + 56) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v133 + 64) = lazy protocol witness table accessor for type String and conformance String();
        *(_QWORD *)(v133 + 32) = v92;
        *(_QWORD *)(v133 + 40) = v94;
        v134 = String.init(format:_:)();
        v136 = v135;
        goto LABEL_51;
      case 7u:
        ConversationHUDAppLaunchPillView.titleLabel.getter();
        v52 = v111;
        if (one-time initialization token for conversationKit != -1)
          swift_once();
        v112 = unk_1EF4FCB30;
        v113 = (void *)qword_1EF4FCB38;
        v114 = (id)static LocalizationSource.conversationKit;
        swift_bridgeObjectRetain();
        v115._countAndFlagsBits = 0xD000000000000025;
        v192._object = (void *)0xE000000000000000;
        v115._object = (void *)0x80000001BD673840;
        v116.value._countAndFlagsBits = v112;
        v116.value._object = v113;
        v117._countAndFlagsBits = 0;
        v117._object = (void *)0xE000000000000000;
        v192._countAndFlagsBits = 0;
        v118 = NSLocalizedString(_:tableName:bundle:value:comment:)(v115, v116, (NSBundle)v114, v117, v192);
        swift_bridgeObjectRelease();

        v119 = v118._countAndFlagsBits;
        v120 = v118._object;
        goto LABEL_65;
      case 8u:
        v121 = v189;
        v122 = v190;
        __swift_project_boxed_opaque_existential_1(&v188, v189);
        v123 = (uint64_t)v182;
        (*(void (**)(uint64_t, uint64_t))(v122 + 120))(v121, v122);
        v124 = type metadata accessor for StagedCollaboration(0);
        if (__swift_getEnumTagSinglePayload(v123, 1, v124) == 1)
        {
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v123, &demangling cache variable for type metadata for StagedCollaboration?);
        }
        else
        {
          v152 = (uint64_t *)(v123 + *(int *)(v124 + 28));
          v154 = *v152;
          v153 = v152[1];
          swift_bridgeObjectRetain();
          outlined destroy of AccountUpdateNotice(v123, type metadata accessor for StagedCollaboration);
          if (v153)
          {
            ConversationHUDAppLaunchPillView.titleLabel.getter();
            v52 = v155;
            v156 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
            v194._object = (void *)0xE000000000000000;
            v157._object = (void *)0x80000001BD673820;
            v157._countAndFlagsBits = 0xD000000000000013;
            v158.value._countAndFlagsBits = 0x61737265766E6F43;
            v158.value._object = (void *)0xEF74694B6E6F6974;
            v159._countAndFlagsBits = 0;
            v159._object = (void *)0xE000000000000000;
            v194._countAndFlagsBits = 0;
            NSLocalizedString(_:tableName:bundle:value:comment:)(v157, v158, (NSBundle)v156, v159, v194);

            __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
            v160 = swift_allocObject();
            *(_OWORD *)(v160 + 16) = xmmword_1BD6441D0;
            *(_QWORD *)(v160 + 56) = MEMORY[0x1E0DEA968];
            *(_QWORD *)(v160 + 64) = lazy protocol witness table accessor for type String and conformance String();
            *(_QWORD *)(v160 + 32) = v154;
            *(_QWORD *)(v160 + 40) = v153;
            v134 = String.init(format:_:)();
            v136 = v161;
LABEL_51:
            swift_bridgeObjectRelease();
            v119 = v134;
            v120 = v136;
LABEL_65:
            outlined bridged method (mbnn) of @objc UILabel.text.setter(v119, (uint64_t)v120, v52);

LABEL_66:
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v188);
            return;
          }
        }
        ConversationHUDAppLaunchPillView.titleLabel.getter();
        v52 = v162;
        v53 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
        v81 = 0xD00000000000001BLL;
        v178 = 0xE000000000000000;
        v163 = "COLLABORATE_ON_GENERIC_ITEM";
LABEL_63:
        v82 = (unint64_t)(v163 - 32) | 0x8000000000000000;
LABEL_64:
        v167.value._countAndFlagsBits = 0x61737265766E6F43;
        v167.value._object = (void *)0xEF74694B6E6F6974;
        v168._countAndFlagsBits = 0;
        v168._object = (void *)0xE000000000000000;
        v169 = 0;
        v170 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v81, v167, (NSBundle)v53, v168, *(Swift::String *)(&v178 - 1));

        v119 = v170._countAndFlagsBits;
        v120 = v170._object;
        goto LABEL_65;
      default:
        v83 = type metadata accessor for ConversationControlsAppLaunchButtonType;
        v84 = (uint64_t)v13;
        goto LABEL_69;
    }
  }
  outlined init with copy of ConversationControlsAppLaunchButtonType(v25, (uint64_t)v19, type metadata accessor for ConversationControlsAppLaunchButtonType);
  v27 = swift_getEnumCaseMultiPayload();
  switch(v27)
  {
    case 11:
      ConversationHUDAppLaunchPillView.titleLabel.getter();
      v29 = v62;
      v30 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
      v31 = 0xD00000000000001DLL;
      v177 = 0xE000000000000000;
      v32 = "NEW_CONTACT_NAME_BANNER_TITLE";
      goto LABEL_20;
    case 10:
      ConversationHUDAppLaunchPillView.titleLabel.getter();
      v29 = v63;
      v30 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
      v31 = 0xD000000000000017;
      v177 = 0xE000000000000000;
      v32 = "SHARE_NAME_BANNER_TITLE";
      goto LABEL_20;
    case 9:
      ConversationHUDAppLaunchPillView.titleLabel.getter();
      v29 = v28;
      v30 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
      v31 = 0xD000000000000021;
      v177 = 0xE000000000000000;
      v32 = "SHARE_NAME_AND_PHOTO_BANNER_TITLE";
LABEL_20:
      v43 = (unint64_t)(v32 - 32) | 0x8000000000000000;
      goto LABEL_21;
  }
  outlined destroy of AccountUpdateNotice((uint64_t)v19, type metadata accessor for ConversationControlsAppLaunchButtonType);
}

void ConversationHUDAppLaunchPillView.updateSubtitle()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t (*v14)(_QWORD);
  int EnumCaseMultiPayload;
  void *v16;
  void *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  Swift::String v23;
  Swift::String_optional v24;
  Swift::String v25;
  uint64_t v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  Class isa;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  void *v40;
  uint64_t (*v41)(uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  Swift::String v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  Swift::String v69;

  v1 = type metadata accessor for PersonNameComponents();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Participant(0);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v58 - v9;
  v11 = type metadata accessor for ConversationControlsAppLaunchButtonType(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of ConversationControlsAppLaunchButtonType(v0 + OBJC_IVAR____TtC15ConversationKit32ConversationHUDAppLaunchPillView_buttonType, (uint64_t)v13, v14);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 1:
      outlined init with take of StagedCollaboration((uint64_t)v13, (uint64_t)v10, type metadata accessor for Participant);
      ConversationHUDAppLaunchPillView.subtitleLabel.getter();
      v61 = v21;
      v22 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
      v69._object = (void *)0xE000000000000000;
      v23._object = (void *)0x80000001BD673750;
      v23._countAndFlagsBits = 0xD000000000000024;
      v24.value._countAndFlagsBits = 0x61737265766E6F43;
      v24.value._object = (void *)0xEF74694B6E6F6974;
      v25._countAndFlagsBits = 0;
      v25._object = (void *)0xE000000000000000;
      v69._countAndFlagsBits = 0;
      v60 = NSLocalizedString(_:tableName:bundle:value:comment:)(v23, v24, (NSBundle)v22, v25, v69);

      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = xmmword_1BD6441D0;
      v27 = *(void **)&v10[*(int *)(v5 + 28)];
      if (v27)
      {
        v28 = v27;
        outlined bridged method (pb) of @objc TUHandle.siriDisplayName.getter(v28);
        v59 = v29;
        if (v30)
        {
          if ((objc_msgSend(v28, sel_shouldHideContact) & 1) != 0)
          {
            swift_bridgeObjectRetain();
            PersonNameComponents.init()();
            PersonNameComponents.givenName.setter();
            PersonNameComponents.familyName.setter();
            if (one-time initialization token for initials != -1)
              swift_once();
            swift_beginAccess();
            v31 = (id)static NSPersonNameComponentsFormatter.initials;
            isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
            v33 = objc_msgSend(v31, sel_stringFromPersonNameComponents_, isa);

            v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            v36 = v35;

            (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
            v62 = v34;
            v63 = v36;
            lazy protocol witness table accessor for type String and conformance String();
            StringProtocol.localizedUppercase.getter();

            swift_bridgeObjectRelease();
            v37 = 0;
            goto LABEL_25;
          }

          swift_bridgeObjectRelease();
        }
        else
        {

        }
      }
      outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v10, (uint64_t)v8, type metadata accessor for Participant);
      swift_retain();
      ParticipantContactDetailsCache.contactDetails(for:)((uint64_t)v8, v43, v44, v45, v46, v47, v48, v49, v58, v59, v60._countAndFlagsBits, (uint64_t)v60._object, (uint64_t)v61, v62, v63, (uint64_t)v64, v65, v66, v67,
        v68);
      v37 = v64;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_release();
      outlined destroy of AccountUpdateNotice((uint64_t)v8, type metadata accessor for Participant);
LABEL_25:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      v50 = Participant.name(_:)();
      v52 = v51;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v26 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v26 + 64) = lazy protocol witness table accessor for type String and conformance String();
      *(_QWORD *)(v26 + 32) = v50;
      *(_QWORD *)(v26 + 40) = v52;
      v53 = String.init(format:_:)();
      v55 = v54;
      swift_bridgeObjectRelease();
      v56 = v53;
      v57 = v61;
      outlined bridged method (mbnn) of @objc UILabel.text.setter(v56, v55, v61);

      v41 = type metadata accessor for Participant;
      v42 = (uint64_t)v10;
      goto LABEL_26;
    case 11:
      ConversationHUDAppLaunchPillView.subtitleLabel.getter();
      v17 = v38;
      if (one-time initialization token for shared != -1)
        swift_once();
      (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)(v0
                                                              + OBJC_IVAR____TtC15ConversationKit32ConversationHUDAppLaunchPillView_controlsManager))
                        + 0x270))();
      v20 = NameAndPhotoUtilities.pendingIncomingName(from:)();
      v19 = v39;
      swift_unknownObjectRelease();
      if (v19)
        goto LABEL_18;
      goto LABEL_19;
    case 10:
    case 9:
      ConversationHUDAppLaunchPillView.subtitleLabel.getter();
      v17 = v16;
      if (one-time initialization token for shared != -1)
        swift_once();
      v18 = (uint64_t *)(static NameAndPhotoUtilities.shared
                      + OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_personalDisplayName);
      swift_beginAccess();
      v19 = v18[1];
      if (v19)
      {
        v20 = *v18;
        swift_bridgeObjectRetain();
LABEL_18:
        v40 = (void *)MEMORY[0x1C3B72E00](v20, v19);
        swift_bridgeObjectRelease();
LABEL_20:
        objc_msgSend(v17, sel_setText_, v40);

        return;
      }
LABEL_19:
      v40 = 0;
      goto LABEL_20;
  }
  v41 = type metadata accessor for ConversationControlsAppLaunchButtonType;
  v42 = (uint64_t)v13;
LABEL_26:
  outlined destroy of AccountUpdateNotice(v42, v41);
}

uint64_t ConversationHUDAppLaunchPillView.createCallToAction()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  id *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  _QWORD v24[3];
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Collaboration?);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v24[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ConversationControlsAppLaunchButtonType(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (id *)((char *)&v24[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = type metadata accessor for ConversationControlsAction();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v24[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v1 + OBJC_IVAR____TtC15ConversationKit32ConversationHUDAppLaunchPillView_buttonType, (uint64_t)v7, type metadata accessor for ConversationControlsAppLaunchButtonType);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:

      *v10 = 1;
      goto LABEL_9;
    case 1u:
      swift_storeEnumTagMultiPayload();
      outlined destroy of AccountUpdateNotice((uint64_t)v7, type metadata accessor for ConversationControlsAppLaunchButtonType);
      goto LABEL_10;
    case 3u:
      if (!objc_msgSend(*(id *)((char *)v1+ OBJC_IVAR____TtC15ConversationKit32ConversationHUDAppLaunchPillView_featureFlags), sel_uninstalledAppStoreLockupEnabled))goto LABEL_9;
      (*(void (**)(_QWORD *__return_ptr))((*MEMORY[0x1E0DEEDD8] & *v1) + 0xC8))(v24);
      v11 = v25;
      if (v25)
      {
        v12 = v26;
        v13 = __swift_project_boxed_opaque_existential_1(v24, v25);
        v14 = *(_QWORD *)(v11 - 8);
        MEMORY[0x1E0C80A78](v13);
        v16 = (char *)&v24[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v14 + 16))(v16);
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v24, &demangling cache variable for type metadata for Activity?);
        (*(void (**)(uint64_t, uint64_t))(v12 + 112))(v11, v12);
        (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v11);
        v17 = type metadata accessor for Collaboration(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v17) != 1)
        {
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v4, &demangling cache variable for type metadata for Collaboration?);
LABEL_9:
          swift_storeEnumTagMultiPayload();
LABEL_10:
          v18 = objc_retain(*(id *)((char *)v1
                                  + OBJC_IVAR____TtC15ConversationKit32ConversationHUDAppLaunchPillView_menuHostViewController));
          ConversationControlsAction.button(controlsManager:menuHostViewController:context:options:)();
          v20 = v19;

          outlined destroy of AccountUpdateNotice((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsAction);
          return v20;
        }
      }
      else
      {
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v24, &demangling cache variable for type metadata for Activity?);
        v22 = type metadata accessor for Collaboration(0);
        __swift_storeEnumTagSinglePayload((uint64_t)v4, 1, 1, v22);
      }
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v4, &demangling cache variable for type metadata for Collaboration?);
      return 0;
    case 4u:
    case 5u:
    case 6u:
    case 8u:
    case 9u:
    case 0xAu:
    case 0xBu:
      goto LABEL_9;
    default:
      outlined destroy of AccountUpdateNotice((uint64_t)v7, type metadata accessor for ConversationControlsAppLaunchButtonType);
      return 0;
  }
}

Swift::Void __swiftcall ConversationHUDAppLaunchPillView.setupLayoutConstraints()()
{
  UIView *v0;
  void *v1;
  UIView *v2;
  CGFloat v3;
  CGFloat v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  Class isa;
  void *v30;
  _QWORD *v31;
  void *v32;
  uint64_t v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  id v39;
  void *v40;
  id v41;
  id v42;
  uint64_t v43;
  id v44;
  void *v45;
  void *v46;
  id v47;
  id v48;
  Class v49;
  _BYTE v50[104];
  double v51;
  _BYTE v52[104];
  double v53;
  double v54;
  NSDirectionalEdgeInsets v55;

  v2 = v0;
  v3 = 0.0;
  if (*((_BYTE *)&v0->super.super.isa
       + OBJC_IVAR____TtC15ConversationKit32ConversationHUDAppLaunchPillView_controlsContext))
  {
    if (*((_BYTE *)&v0->super.super.isa
         + OBJC_IVAR____TtC15ConversationKit32ConversationHUDAppLaunchPillView_controlsContext) == 1)
    {
      static Layout.ConversationControls.values.getter((uint64_t)v50);
      v4 = v51;
      static Layout.ConversationControls.values.getter((uint64_t)v52);
      v3 = v53;
    }
    else
    {
      static Layout.ConversationControls.values.getter((uint64_t)v52);
      v4 = v54;
    }
  }
  else
  {
    v4 = 0.0;
  }
  v5 = (void *)OUTLINED_FUNCTION_12_2();
  v55.top = 0.0;
  v55.leading = v4;
  v55.bottom = v3;
  v55.trailing = v4;
  UIView.addConstraintsToFill(_:insets:)(v2, v55);

  OUTLINED_FUNCTION_1_44();
  objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  v7 = (void *)objc_opt_self();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1BD644140;
  OUTLINED_FUNCTION_1_44();
  v10 = objc_msgSend(v9, sel_topAnchor);
  OUTLINED_FUNCTION_16_25();
  v11 = (void *)OUTLINED_FUNCTION_12_2();
  v12 = objc_msgSend(v11, sel_topAnchor);
  OUTLINED_FUNCTION_6_16();
  v13 = OUTLINED_FUNCTION_0_58();
  OUTLINED_FUNCTION_7_52();

  *(_QWORD *)(v8 + 32) = v11;
  OUTLINED_FUNCTION_1_44();
  v15 = objc_msgSend(v14, sel_leadingAnchor);
  OUTLINED_FUNCTION_16_25();
  v16 = (void *)OUTLINED_FUNCTION_12_2();
  v17 = objc_msgSend(v16, sel_leadingAnchor);
  OUTLINED_FUNCTION_6_16();
  v18 = OUTLINED_FUNCTION_0_58();
  OUTLINED_FUNCTION_7_52();

  *(_QWORD *)(v8 + 40) = v16;
  OUTLINED_FUNCTION_1_44();
  v20 = OUTLINED_FUNCTION_21_29(v19);
  OUTLINED_FUNCTION_16_25();
  v21 = (void *)OUTLINED_FUNCTION_12_2();
  v22 = OUTLINED_FUNCTION_21_29(v21);
  OUTLINED_FUNCTION_6_16();
  v23 = OUTLINED_FUNCTION_0_58();
  OUTLINED_FUNCTION_7_52();

  *(_QWORD *)(v8 + 48) = v21;
  OUTLINED_FUNCTION_1_44();
  v25 = OUTLINED_FUNCTION_19_10(v24);
  OUTLINED_FUNCTION_16_25();
  v26 = (void *)OUTLINED_FUNCTION_12_2();
  v27 = OUTLINED_FUNCTION_19_10(v26);
  OUTLINED_FUNCTION_6_16();
  v28 = OUTLINED_FUNCTION_0_58();
  OUTLINED_FUNCTION_7_52();

  *(_QWORD *)(v8 + 56) = v26;
  specialized Array._endMutation()();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v30 = v7;
  objc_msgSend(v7, sel_activateConstraints_, isa);

  v31 = ConversationHUDAppLaunchPillView.appStoreLockup.getter();
  if (v31)
  {
    v32 = v31;
    objc_msgSend(v31, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_1BD644B60;
    v34 = OUTLINED_FUNCTION_6_7(v33, sel_leadingAnchor);
    OUTLINED_FUNCTION_1_44();
    v36 = objc_msgSend(v35, sel_leadingAnchor);
    OUTLINED_FUNCTION_6_16();
    v37 = OUTLINED_FUNCTION_15_36();
    OUTLINED_FUNCTION_7_52();

    *(_QWORD *)(v33 + 32) = v2;
    v39 = OUTLINED_FUNCTION_6_7(v38, sel_trailingAnchor);
    OUTLINED_FUNCTION_1_44();
    v41 = OUTLINED_FUNCTION_19_10(v40);
    OUTLINED_FUNCTION_6_16();
    v42 = OUTLINED_FUNCTION_15_36();
    OUTLINED_FUNCTION_7_52();

    *(_QWORD *)(v33 + 40) = v2;
    v44 = OUTLINED_FUNCTION_6_7(v43, sel_bottomAnchor);
    ConversationHUDAppLaunchPillView.contentHStack.getter();
    v46 = v45;
    v47 = OUTLINED_FUNCTION_21_29(v45);

    v48 = objc_msgSend(v44, sel_constraintEqualToAnchor_, v47);
    *(_QWORD *)(v33 + 48) = v48;
    specialized Array._endMutation()();
    v49 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    objc_msgSend(v30, sel_activateConstraints_, v49);

  }
}

id ConversationHUDAppLaunchPillView.createIconViewForLagunaRecommendation(_:)()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  _QWORD v7[2];
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  v0 = (void *)*MEMORY[0x1E0DC4B10];
  strcpy((char *)v7, "appletv.fill");
  BYTE5(v7[1]) = 0;
  HIWORD(v7[1]) = -5120;
  v8 = 2;
  v9 = v0;
  LOWORD(v10) = 0;
  v11 = 6;
  LOBYTE(v12) = 0;
  v13 = 0;
  v1 = v0;
  v2 = static UIImage.symbolImage(for:)((uint64_t)v7);

  swift_bridgeObjectRelease();
  v3 = objc_allocWithZone(MEMORY[0x1E0DC3890]);
  v4 = objc_msgSend(v3, sel_initWithImage_, v2, v7[0], v7[1], v8, v9, v10, v11, v12, v13);

  objc_msgSend(v4, sel_setContentMode_, 1);
  v5 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
  objc_msgSend(v4, sel_setTintColor_, v5);

  ConversationHUDAppLaunchPillView.constrainIconView(_:)(v4);
  return v4;
}

void ConversationHUDAppLaunchPillView.constrainIconView(_:)(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char v7;
  double v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  Class isa;
  _QWORD v16[2];

  v3 = type metadata accessor for ConversationControlsAppLaunchButtonType(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v1 + OBJC_IVAR____TtC15ConversationKit32ConversationHUDAppLaunchPillView_buttonType;
  swift_storeEnumTagMultiPayload();
  static ConversationControlsAppLaunchButtonType.== infix(_:_:)(v6, (uint64_t)v5);
  LOBYTE(v6) = v7;
  outlined destroy of AccountUpdateNotice((uint64_t)v5, type metadata accessor for ConversationControlsAppLaunchButtonType);
  if ((v6 & 1) != 0)
    v8 = 52.0;
  else
    v8 = 32.0;
  objc_msgSend(a1, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v9 = (void *)objc_opt_self();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1BD6441C0;
  v11 = objc_msgSend(a1, sel_heightAnchor);
  v12 = objc_msgSend(v11, sel_constraintEqualToConstant_, v8);

  *(_QWORD *)(v10 + 32) = v12;
  v13 = objc_msgSend(a1, sel_widthAnchor);
  v14 = objc_msgSend(v13, sel_constraintEqualToConstant_, v8);

  *(_QWORD *)(v10 + 40) = v14;
  v16[1] = v10;
  specialized Array._endMutation()();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v9, sel_activateConstraints_, isa);

}

void ConversationHUDAppLaunchPillView.updateIconView()()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit32ConversationHUDAppLaunchPillView_iconView);
  if (v1)
  {
    v2 = v1;
    ConversationHUDAppLaunchPillView.contentHStack.getter();
    v4 = v3;
    objc_msgSend(v3, sel_removeArrangedSubview_, v2);

    objc_msgSend(v2, sel_removeFromSuperview);
  }
  v5 = ConversationHUDAppLaunchPillView.createIconView()();
  if (v5)
  {
    v6 = (uint64_t)v5;
    v7 = v5;
    ConversationHUDAppLaunchPillView.iconView.setter(v6);
    ConversationHUDAppLaunchPillView.contentHStack.getter();
    v9 = v8;
    objc_msgSend(v8, sel_insertArrangedSubview_atIndex_, v7, 0);

  }
}

void ConversationHUDAppLaunchPillView.updateCallToAction()()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit32ConversationHUDAppLaunchPillView_callToAction);
  if (v1)
  {
    v2 = v1;
    ConversationHUDAppLaunchPillView.contentHStack.getter();
    v4 = v3;
    objc_msgSend(v3, sel_removeArrangedSubview_, v2);

    objc_msgSend(v2, sel_removeFromSuperview);
  }
  v5 = (void *)ConversationHUDAppLaunchPillView.createCallToAction()();
  if (v5)
  {
    v7 = (uint64_t)v5;
    v8 = v6;
    v9 = v5;
    ConversationHUDAppLaunchPillView.callToAction.setter(v7, v8);
    ConversationHUDAppLaunchPillView.contentHStack.getter();
    v11 = v10;
    objc_msgSend(v10, sel_addArrangedSubview_, v9);

  }
}

void closure #1 in closure #1 in ASCLockupViewGroup.__lockupRequest(for:completion:)(void **a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  _QWORD v13[6];

  v9 = *a1;
  swift_unknownObjectRetain();
  v10 = (void *)MEMORY[0x1C3B72E00](a2, a3);
  v11 = *MEMORY[0x1E0CF9B20];
  v13[4] = a4;
  v13[5] = a5;
  v13[0] = MEMORY[0x1E0C809B0];
  v13[1] = 1107296256;
  v13[2] = thunk for @escaping @callee_guaranteed (@guaranteed ASCLockupRequest?, @guaranteed Error?) -> ();
  v13[3] = &block_descriptor_5;
  v12 = _Block_copy(v13);
  swift_retain();
  swift_release();
  objc_msgSend(v9, sel__lockupRequestForBundleID_withContext_enableAppDistribution_completionBlock_, v10, v11, 1, v12);
  _Block_release(v12);
  swift_unknownObjectRelease();

}

void thunk for @escaping @callee_guaranteed (@guaranteed ASCLockupRequest?, @guaranteed Error?) -> ()(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(void *, void *);
  id v6;
  id v7;

  v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

uint64_t type metadata accessor for ConversationHUDAppLaunchPillView()
{
  uint64_t result;

  result = type metadata singleton initialization cache for ConversationHUDAppLaunchPillView;
  if (!type metadata singleton initialization cache for ConversationHUDAppLaunchPillView)
    return swift_getSingletonMetadata();
  return result;
}

id @nonobjc ASCLockupViewGroup.init(name:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  id v4;

  if (a2)
  {
    v3 = (void *)MEMORY[0x1C3B72E00]();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = 0;
  }
  v4 = objc_msgSend(v2, sel_initWithName_, v3);

  return v4;
}

id @nonobjc ASCOfferTheme.init(titleBackgroundColor:titleTextColor:subtitleTextColor:iconTintColor:progressColor:)(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  void *v5;
  id v11;

  v11 = objc_msgSend(v5, sel_initWithTitleBackgroundColor_titleTextColor_subtitleTextColor_iconTintColor_progressColor_, a1, a2, a3, a4, a5);

  return v11;
}

void sub_1BD0FB240(_QWORD **a1)
{
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0xC8))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD0FB278(_QWORD **a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0xE0))();
  OUTLINED_FUNCTION_0();
}

uint64_t type metadata completion function for ConversationHUDAppLaunchPillView()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ConversationControlsAppLaunchButtonType(319);
  if (v1 <= 0x3F)
    return swift_updateClassMetadata2();
  return result;
}

uint64_t method lookup function for ConversationHUDAppLaunchPillView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ConversationHUDAppLaunchPillView.activity.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of ConversationHUDAppLaunchPillView.activity.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of ConversationHUDAppLaunchPillView.activity.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of ConversationHUDAppLaunchPillView.backgroundMaterialView.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of ConversationHUDAppLaunchPillView.backgroundMaterialView.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of ConversationHUDAppLaunchPillView.backgroundMaterialView.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of ConversationHUDAppLaunchPillView.__allocating_init(controlsManager:controlsContext:buttonType:menuHostViewController:activity:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 448))();
}

uint64_t dispatch thunk of ConversationHUDAppLaunchPillView.addTarget(_:action:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1C8))();
}

void outlined consume of UIView??(id a1)
{
  if (a1 != (id)1)

}

id outlined copy of UIView??(id result)
{
  if (result != (id)1)
    return result;
  return result;
}

uint64_t sub_1BD0FB470()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void partial apply for closure #1 in closure #1 in ConversationHUDAppLaunchPillView.appStoreLockup.getter(uint64_t a1, void *a2)
{
  uint64_t v2;

  closure #1 in closure #1 in ConversationHUDAppLaunchPillView.appStoreLockup.getter(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(id *)(v2 + 32));
}

unint64_t static ShapeView.layerClass.getter()
{
  return type metadata accessor for CAShapeLayer();
}

unint64_t type metadata accessor for CAShapeLayer()
{
  unint64_t result;

  result = lazy cache variable for type metadata for CAShapeLayer;
  if (!lazy cache variable for type metadata for CAShapeLayer)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for CAShapeLayer);
  }
  return result;
}

void ShapeView.shapeLayer.getter()
{
  void *v0;
  id v1;

  v1 = objc_msgSend(v0, sel_layer);
  objc_opt_self();
  if (swift_dynamicCastObjCClass())
  {
    OUTLINED_FUNCTION_36();
  }
  else
  {

    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
}

uint64_t key path setter for ShapeView.fillColor : ShapeView(id *a1, _QWORD **a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x60);
  v4 = *a1;
  return v3(v2);
}

void ShapeView.fillColor.getter()
{
  ShapeView.fillColor.getter((SEL *)&selRef_fillColor);
}

void ShapeView.fillColor.setter(void *a1)
{
  ShapeView.fillColor.setter(a1, (SEL *)&selRef_setFillColor_);
}

void ShapeView.fillColor.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  id v3;
  id v4;

  OUTLINED_FUNCTION_2_55(a1);
  v4 = objc_msgSend(v3, sel_fillColor);
  OUTLINED_FUNCTION_14_18();
  *v1 = v2;
  OUTLINED_FUNCTION_18();
}

void ShapeView.fillColor.modify(id *a1, char a2)
{
  ShapeView.fillColor.modify(a1, a2, (SEL *)&selRef_setFillColor_);
}

uint64_t key path setter for ShapeView.fillRule : ShapeView(id *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x78))(*a1);
}

void ShapeView.fillRule.getter()
{
  id v0;
  id v1;

  ShapeView.shapeLayer.getter();
  v1 = objc_msgSend(v0, sel_fillRule);
  OUTLINED_FUNCTION_49_5();
  OUTLINED_FUNCTION_0();
}

void ShapeView.fillRule.setter(void *a1)
{
  void *v1;
  void *v2;

  ShapeView.shapeLayer.getter();
  v2 = v1;
  objc_msgSend(v1, sel_setFillRule_, a1);

  OUTLINED_FUNCTION_7_1(a1);
}

void ShapeView.fillRule.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  id v3;
  id v4;

  OUTLINED_FUNCTION_2_55(a1);
  v4 = objc_msgSend(v3, sel_fillRule);
  OUTLINED_FUNCTION_14_18();
  *v1 = v2;
  OUTLINED_FUNCTION_18();
}

void ShapeView.fillRule.modify(void **a1, char a2)
{
  void *v2;
  id v3;
  void *v4;
  id v5;
  void *v6;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = v2;
    ShapeView.shapeLayer.getter();
    v6 = v4;
    objc_msgSend(v4, sel_setFillRule_, v3);

  }
  else
  {
    ShapeView.shapeLayer.getter();
    OUTLINED_FUNCTION_3_48(v5, sel_setFillRule_);
  }

  OUTLINED_FUNCTION_15_9(v6);
}

uint64_t key path setter for ShapeView.path : ShapeView(id *a1, _QWORD **a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x90);
  v4 = *a1;
  return v3(v2);
}

void ShapeView.path.getter()
{
  ShapeView.fillColor.getter((SEL *)&selRef_path);
}

void ShapeView.fillColor.getter(SEL *a1)
{
  void *v2;
  void *v3;
  id v4;

  ShapeView.shapeLayer.getter();
  v3 = v2;
  v4 = objc_msgSend(v2, *a1);

  OUTLINED_FUNCTION_0();
}

void ShapeView.path.setter(void *a1)
{
  ShapeView.fillColor.setter(a1, (SEL *)&selRef_setPath_);
}

void ShapeView.fillColor.setter(void *a1, SEL *a2)
{
  void *v3;
  void *v4;

  ShapeView.shapeLayer.getter();
  v4 = v3;
  objc_msgSend(v3, *a2, a1);

  OUTLINED_FUNCTION_7_1(a1);
}

void ShapeView.path.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  id v3;
  id v4;

  OUTLINED_FUNCTION_2_55(a1);
  v4 = objc_msgSend(v3, sel_path);
  OUTLINED_FUNCTION_14_18();
  *v1 = v2;
  OUTLINED_FUNCTION_18();
}

void ShapeView.path.modify(id *a1, char a2)
{
  ShapeView.fillColor.modify(a1, a2, (SEL *)&selRef_setPath_);
}

void ShapeView.fillColor.modify(id *a1, char a2, SEL *a3)
{
  id v4;
  id v5;
  id v6;
  void *v7;

  v4 = *a1;
  if ((a2 & 1) != 0)
  {
    v4 = v4;
    ShapeView.shapeLayer.getter();
    OUTLINED_FUNCTION_3_48(v5, *a3);

  }
  else
  {
    ShapeView.shapeLayer.getter();
    OUTLINED_FUNCTION_3_48(v6, *a3);
  }

  OUTLINED_FUNCTION_15_9(v7);
}

id ShapeView.__allocating_init(frame:)()
{
  Class v0;
  id v1;
  double v2;
  id v3;
  SEL v4;

  OUTLINED_FUNCTION_17_7();
  v1 = objc_allocWithZone(v0);
  v2 = OUTLINED_FUNCTION_15_0();
  return objc_msgSend(v3, v4, v2);
}

id ShapeView.init(frame:)()
{
  uint64_t v0;
  double v1;
  objc_super *v2;
  SEL v3;
  uint64_t v5;

  OUTLINED_FUNCTION_17_7();
  v5 = type metadata accessor for ShapeView();
  v1 = OUTLINED_FUNCTION_15_0();
  return objc_msgSendSuper2(v2, v3, v1, v0, v5);
}

uint64_t type metadata accessor for ShapeView()
{
  return objc_opt_self();
}

void ShapeView.__allocating_init(coder:)(uint64_t a1)
{
  objc_class *v1;

  objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);
  OUTLINED_FUNCTION_49_5();
  OUTLINED_FUNCTION_0();
}

void ShapeView.init(coder:)(uint64_t a1)
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for ShapeView();
  objc_msgSendSuper2(&v3, sel_initWithCoder_, a1);
  OUTLINED_FUNCTION_49_5();
  OUTLINED_FUNCTION_36();
}

id ShapeView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ShapeView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1BD0FBAD4()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x58))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD0FBB0C()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x70))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD0FBB44()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x88))();
  OUTLINED_FUNCTION_0();
}

uint64_t method lookup function for ShapeView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ShapeView.fillColor.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x58))();
}

uint64_t dispatch thunk of ShapeView.fillColor.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of ShapeView.fillColor.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of ShapeView.fillRule.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of ShapeView.fillRule.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of ShapeView.fillRule.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of ShapeView.path.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of ShapeView.path.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of ShapeView.path.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

void specialized Sequence.compactMap<A>(_:)(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int64_t v45;
  unint64_t v46;
  void *v47;

  v40 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Participant(0);
  v32 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x1E0C80A78](v6);
  v34 = (uint64_t)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v31 = (uint64_t)&v30 - v9;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
    lazy protocol witness table accessor for type TUHandle and conformance NSObject((unint64_t *)&lazy protocol witness table cache variable for type TUConversationMember and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
    Set.Iterator.init(_cocoa:)();
    a1 = v42;
    v39 = v43;
    v11 = v44;
    v10 = v45;
    v12 = v46;
  }
  else
  {
    v13 = -1 << *(_BYTE *)(a1 + 32);
    v14 = *(_QWORD *)(a1 + 56);
    v39 = a1 + 56;
    v11 = ~v13;
    v15 = -v13;
    if (v15 < 64)
      v16 = ~(-1 << v15);
    else
      v16 = -1;
    v12 = v16 & v14;
    swift_bridgeObjectRetain();
    v10 = 0;
  }
  v33 = v11;
  v37 = a1 & 0x7FFFFFFFFFFFFFFFLL;
  v38 = (unint64_t)(v11 + 64) >> 6;
  v35 = MEMORY[0x1E0DEE9D8];
  v36 = MEMORY[0x1E0DEE9B0] + 8;
  while (1)
  {
    v17 = v10;
    if ((a1 & 0x8000000000000000) == 0)
      break;
    v20 = __CocoaSet.Iterator.next()();
    if (!v20)
      goto LABEL_38;
    v41 = v20;
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v21 = v47;
    swift_unknownObjectRelease();
    if (!v21)
      goto LABEL_38;
LABEL_31:
    v25 = objc_msgSend(v21, sel_handle);
    ConversationController.participant(with:)();

    if (__swift_getEnumTagSinglePayload((uint64_t)v5, 1, v6) == 1)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v5, &demangling cache variable for type metadata for Participant?);
    }
    else
    {
      v26 = v31;
      outlined init with take of StagedCollaboration((uint64_t)v5, v31, type metadata accessor for Participant);
      outlined init with take of StagedCollaboration(v26, v34, type metadata accessor for Participant);
      v27 = v35;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v27 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      v28 = *(_QWORD *)(v27 + 16);
      if (v28 >= *(_QWORD *)(v27 + 24) >> 1)
        v27 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      *(_QWORD *)(v27 + 16) = v28 + 1;
      v29 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
      v35 = v27;
      outlined init with take of StagedCollaboration(v34, v27 + v29 + *(_QWORD *)(v32 + 72) * v28, type metadata accessor for Participant);
    }
  }
  if (v12)
  {
    v18 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    v19 = v18 | (v10 << 6);
LABEL_30:
    v21 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v19);
    if (!v21)
      goto LABEL_38;
    goto LABEL_31;
  }
  v22 = v10 + 1;
  if (!__OFADD__(v10, 1))
  {
    if (v22 >= v38)
      goto LABEL_38;
    v23 = *(_QWORD *)(v39 + 8 * v22);
    ++v10;
    if (!v23)
    {
      v10 = v17 + 2;
      if (v17 + 2 >= v38)
        goto LABEL_38;
      v23 = *(_QWORD *)(v39 + 8 * v10);
      if (!v23)
      {
        v10 = v17 + 3;
        if (v17 + 3 >= v38)
          goto LABEL_38;
        v23 = *(_QWORD *)(v39 + 8 * v10);
        if (!v23)
        {
          v10 = v17 + 4;
          if (v17 + 4 >= v38)
            goto LABEL_38;
          v23 = *(_QWORD *)(v39 + 8 * v10);
          if (!v23)
          {
            v10 = v17 + 5;
            if (v17 + 5 >= v38)
              goto LABEL_38;
            v23 = *(_QWORD *)(v39 + 8 * v10);
            if (!v23)
            {
              v24 = v17 + 6;
              while (v24 < v38)
              {
                v23 = *(_QWORD *)(v39 + 8 * v24++);
                if (v23)
                {
                  v10 = v24 - 1;
                  goto LABEL_29;
                }
              }
LABEL_38:
              outlined consume of [String : Application].Iterator._Variant();

              return;
            }
          }
        }
      }
    }
LABEL_29:
    v12 = (v23 - 1) & v23;
    v19 = __clz(__rbit64(v23)) + (v10 << 6);
    goto LABEL_30;
  }
  __break(1u);
}

uint64_t *ConversationControlsRecipeGenerator.shared.unsafeMutableAddressor()
{
  if (one-time initialization token for shared != -1)
    swift_once();
  return &static ConversationControlsRecipeGenerator.shared;
}

id specialized Conversation.avModeForSystemAperture.getter()
{
  void *v0;
  char **v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;

  v1 = &selRef_resolvedAudioVideoMode;
  if (objc_msgSend(v0, sel_state) == (id)4)
  {
    v2 = v0;
    v3 = objc_msgSend(v2, sel_remoteMembers);
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
    lazy protocol witness table accessor for type TUHandle and conformance NSObject((unint64_t *)&lazy protocol witness table cache variable for type TUConversationMember and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
    v4 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    v5 = specialized Set.count.getter(v4);
    swift_bridgeObjectRelease();
    if (v5 == 1)
      v1 = &selRef_avMode;
  }
  return objc_msgSend(v0, *v1);
}

void static UIImageView.appIcon(for:)(uint64_t a1, void *a2)
{
  uint64_t v4;
  void *v5;

  if (a2)
  {
    OUTLINED_FUNCTION_17_8(a1, (unint64_t *)&lazy cache variable for type metadata for UIImage);
    static UIImage.appIcon(for:usingIconCrop:)(a1, a2, 0);
    v5 = (void *)v4;
    static UIImageView.defaultAppIcon(for:)(v4);

  }
  OUTLINED_FUNCTION_0();
}

void static UIImageView.defaultAppIcon(for:)(uint64_t a1)
{
  id v1;

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_initWithImage_, a1);
  objc_msgSend(v1, sel_setClipsToBounds_, 1);
  objc_msgSend(v1, sel_setContentMode_, 1);
  OUTLINED_FUNCTION_0();
}

void ConversationControlsRecipeGenerator.__allocating_init()()
{
  OUTLINED_FUNCTION_15();
  ConversationControlsRecipeGenerator.init()();
  OUTLINED_FUNCTION_0();
}

uint64_t static ConversationControlsRecipeGenerator.shared.getter()
{
  if (one-time initialization token for shared != -1)
    swift_once();
  return swift_retain();
}

void ConversationControlsRecipeGenerator.generate(for:type:controlsManager:)()
{
  uint64_t v0;
  os_log_type_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  _QWORD v34[8];
  _QWORD v35[2];
  uint64_t v36[5];
  _BYTE v37[56];

  OUTLINED_FUNCTION_93();
  v2 = v0;
  v4 = v3;
  v6 = v5;
  v34[7] = v7;
  v9 = v8;
  v34[6] = type metadata accessor for PushToTalkNotice(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_77();
  v13 = v12 - v11;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  OUTLINED_FUNCTION_1_1();
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v18 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v18, (uint64_t)&static Logger.conversationControls);
  OUTLINED_FUNCTION_70_8();
  v19 = Logger.logObject.getter();
  v20 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_4_14(v20))
  {
    v34[4] = v9;
    v34[5] = v2;
    v21 = OUTLINED_FUNCTION_105();
    v34[2] = v17;
    v22 = (uint8_t *)v21;
    v23 = OUTLINED_FUNCTION_105();
    v34[1] = v13;
    v36[0] = v23;
    *(_DWORD *)v22 = 136315138;
    v34[3] = v4;
    outlined init with copy of ConversationControlsType((uint64_t)v37, (uint64_t)v35);
    v31 = specialized >> prefix<A>(_:)((uint64_t)v35, v24, v25, v26, v27, v28, v29, v30);
    v34[0] = v6;
    v33 = v32;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v35, &demangling cache variable for type metadata for ConversationControlsType?);
    v35[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v31, v33, v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    outlined destroy of ConversationControlsType((uint64_t)v37);
    _os_log_impl(&dword_1BD004000, v19, v1, "generating recipe for type %s", v22, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_60();
  }
  outlined destroy of ConversationControlsType((uint64_t)v37);

  type metadata accessor for ConversationControlsRecipe();
  OUTLINED_FUNCTION_83_0(v9, 1);
  OUTLINED_FUNCTION_70_8();
  __asm { BR              X10 }
}

uint64_t ConversationControlsRecipeGenerator.defaultHUDRecipe(controlsManager:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint8_t *v17;
  char v18;
  _QWORD *v19;
  id v20;
  unint64_t v21;
  unint64_t v22;
  Swift::String_optional v23;
  Swift::String v24;
  uint64_t v25;
  Swift::String v26;
  void *object;
  uint64_t v28;
  _QWORD *v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  void (*v37)(void);
  unsigned __int8 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t ObjectType;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  Swift::String v49;
  unint64_t v51;
  _QWORD v52[11];
  uint64_t (*v53)(void);
  uint64_t v54;
  char *v55;
  char *v56;
  id v57;
  uint64_t v58;
  uint64_t countAndFlagsBits;
  uint8_t *v60;
  uint64_t v61[10];
  uint64_t v62;

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  MEMORY[0x1E0C80A78](v5);
  v55 = (char *)v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  MEMORY[0x1E0C80A78](v7);
  v56 = (char *)v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ConversationControlsRecipe();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for UUID();
  v52[9] = *(_QWORD *)(v12 - 8);
  v13 = MEMORY[0x1E0C80A78](v12);
  v52[8] = (char *)v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v16 = (*(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x290))(v13);
  if (v16)
  {
    v52[1] = v2;
    v52[3] = v11;
    v54 = v9;
    v58 = v16;
    static ConversationControlsRecipeGenerator.assetsForDefaultHUD(controlsManager:conversation:)();
    v60 = v17;
    v53 = *(uint64_t (**)(void))((*v15 & *a1) + 0x868);
    v18 = v53();
    v52[7] = a2;
    v52[2] = v12;
    if ((v18 & 1) != 0)
    {
      v19 = v15;
      v20 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
      v51 = 0xE000000000000000;
      v21 = 0x80000001BD673D40;
      v22 = 0xD00000000000001CLL;
    }
    else
    {
      v37 = *(void (**)(void))((*v15 & *a1) + 0x270);
      v37();
      swift_getObjectType();
      v38 = Call.isFromMessagesScreenShare.getter();
      v39 = swift_unknownObjectRelease();
      if ((v38 & 1) == 0
        || (((void (*)(uint64_t))v37)(v39),
            v41 = v40,
            ObjectType = swift_getObjectType(),
            v43 = (*(uint64_t (**)(uint64_t, uint64_t))(v41 + 296))(ObjectType, v41),
            v39 = swift_unknownObjectRelease(),
            !v43))
      {
        v19 = v15;
        countAndFlagsBits = TUConversation.participantListDisplayName.getter(v39);
        object = v48;
LABEL_14:
        type metadata accessor for ConversationControlsRecipeGenerator();
        (*(void (**)(void))((*v19 & *a1) + 0x270))();
        v57 = static ConversationControlsRecipeGenerator.badgeBackgroundColor(forCall:)();
        swift_unknownObjectRelease();
        _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
        swift_bridgeObjectRetain();
        v49._countAndFlagsBits = countAndFlagsBits;
        v49._object = object;
        NSMutableAttributedString.__allocating_init(string:)(v49);
      }
      v19 = v15;
      ((void (*)(uint64_t))v37)(v39);
      v45 = v44;
      v46 = swift_getObjectType();
      v47 = (*(uint64_t (**)(uint64_t, uint64_t))(v45 + 296))(v46, v45);
      swift_unknownObjectRelease();
      v20 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
      v51 = 0xE000000000000000;
      if (v47 == 1)
      {
        v22 = 0x794D206572616853;
        v21 = 0xEF6E656572635320;
      }
      else
      {
        v22 = 0x535F4E4545524353;
        v21 = 0xEE00474E49524148;
      }
    }
    v23.value._countAndFlagsBits = 0x61737265766E6F43;
    v23.value._object = (void *)0xEF74694B6E6F6974;
    v24._countAndFlagsBits = 0;
    v24._object = (void *)0xE000000000000000;
    v25 = 0;
    v26 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v22, v23, (NSBundle)v20, v24, *(Swift::String *)(&v51 - 1));
    countAndFlagsBits = v26._countAndFlagsBits;
    object = v26._object;

    goto LABEL_14;
  }
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v28 = type metadata accessor for Logger();
  __swift_project_value_buffer(v28, (uint64_t)&static Logger.conversationControls);
  v29 = a1;
  v30 = Logger.logObject.getter();
  v31 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v30, v31))
  {
    v32 = (uint8_t *)swift_slowAlloc();
    v33 = swift_slowAlloc();
    v54 = v9;
    *(_DWORD *)v32 = 136315138;
    v61[0] = v33;
    v60 = v32 + 4;
    v34 = (*(uint64_t (**)(void))((*v15 & *v29) + 0x270))();
    swift_getObjectType();
    v62 = v34;
    v35 = String.init<A>(describing:)();
    v62 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v35, v36, v61);
    v9 = v54;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v30, v31, "defaultHUDRecipe: No active conversation, call: %s", v32, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v33, -1, -1);
    MEMORY[0x1C3B751B8](v32, -1, -1);

  }
  else
  {

  }
  return __swift_storeEnumTagSinglePayload(a2, 1, 1, v9);
}

void ConversationControlsRecipeGenerator.unauthorizedParticipantHUDRecipe(controlsManager:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  uint64_t (*v14)(void);
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int EnumTagSinglePayload;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  char v61;
  _BYTE v62[64];
  __int128 v63;
  __int128 v64;
  uint64_t v65;
  char v66;
  _OWORD v67[2];
  uint64_t v68;
  char v69;

  v57 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ConversationControlsRecipe();
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v14 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x840);
  v15 = ((uint64_t (*)(uint64_t))v14)(v10);
  v16 = (void *)(*(uint64_t (**)(void))((*v13 & *a1) + 0x290))();
  v17 = (void *)static ConversationControlsRecipeGenerator.unauthorizedParticipantAssets(controlsMode:conversation:)(v15, (uint64_t)v16);
  v19 = v18;
  v21 = v20;

  v56 = v17;
  if (v17)
  {
    v51 = v5;
    v52 = v8;
    v53 = v19;
    v54 = v12;
    v55 = v9;
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
    SymbolImageDescribers.ConversationControls.symbolImageDescription.getter(v21);
    v22 = static UIImage.symbolImage(for:)((uint64_t)v62);
    outlined release of SymbolImageDescription((uint64_t)v62);
    v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_initWithImage_, v22);

    objc_msgSend(v23, sel_setContentMode_, 4);
    v24 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
    objc_msgSend(v23, sel_setTintColor_, v24);

    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v25 = type metadata accessor for Logger();
    v26 = __swift_project_value_buffer(v25, (uint64_t)&static Logger.conversationControls);
    v27 = a1;
    v28 = Logger.logObject.getter();
    v29 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = swift_slowAlloc();
      v50 = v26;
      v31 = (uint8_t *)v30;
      v32 = swift_slowAlloc();
      *(_QWORD *)&v67[0] = v32;
      *(_DWORD *)v31 = 136315138;
      LOBYTE(v63) = v14();
      v33 = String.init<A>(describing:)();
      *(_QWORD *)&v63 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v33, v34, (uint64_t *)v67);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD004000, v28, v29, "unauthorizedParticipantHud, controlsMode: %s", v31, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v32, -1, -1);
      MEMORY[0x1C3B751B8](v31, -1, -1);

    }
    else
    {

    }
    v58 = 1;
    v59 = 0u;
    v60 = 0u;
    v61 = 6;
    v35 = v23;
    v36 = objc_msgSend(v35, sel_hash);
    v37 = type metadata accessor for AttributedString();
    v38 = (uint64_t)v51;
    __swift_storeEnumTagSinglePayload((uint64_t)v51, 1, 1, v37);
    v39 = v56;
    v40 = v53;
    swift_bridgeObjectRetain();
    ConversationControlsRecipeGenerator.buttonShelfActions(controlsManager:)();
    v67[0] = v63;
    v67[1] = v64;
    v68 = v65;
    v69 = v66;
    v41 = (uint64_t)v52;
    ConversationControlsRecipe.init(type:avatar:leadingAccessoryView:title:subtitles:subtitleLeadingBadge:fullSentence:showsInfoButton:showsSubtitleChevron:titleConfiguration:subtitleConfiguration:actions:leadingViewType:)((uint64_t)&v58, 0, v35, 0, (unint64_t)v36, v39, v40, 0, (uint64_t)v52, 0, 0, v38, OS_LOG_TYPE_DEFAULT, 0, 1, 1, (uint8_t *)v67, 0, 0,
      0xFFu);
    v42 = v55;
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v41, 1, v55);
    v44 = (uint64_t)v54;
    if (EnumTagSinglePayload == 1)
    {

      swift_bridgeObjectRelease();
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v41, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
      __swift_storeEnumTagSinglePayload(v57, 1, 1, v42);
    }
    else
    {
      outlined init with take of StagedCollaboration(v41, (uint64_t)v54, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
      if (SBUIIsSystemApertureEnabled())
      {
        v45 = Logger.logObject.getter();
        v46 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v45, v46))
        {
          v47 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v47 = 0;
          _os_log_impl(&dword_1BD004000, v45, v46, "unauthorizedParticipantHUD: [SystemAperture] showing content", v47, 2u);
          MEMORY[0x1C3B751B8](v47, -1, -1);
        }

        swift_bridgeObjectRelease();
        v48 = v44 + *(int *)(v42 + 72);
        outlined consume of SystemApertureElement?(*(void **)v48, *(_QWORD *)(v48 + 8), *(void **)(v48 + 16), *(_QWORD *)(v48 + 24), *(void **)(v48 + 32), *(_QWORD *)(v48 + 40), *(void **)(v48 + 48));
        *(_OWORD *)(v48 + 32) = 0u;
        *(_OWORD *)(v48 + 48) = 0u;
        *(_OWORD *)v48 = 0u;
        *(_OWORD *)(v48 + 16) = 0u;
        *(_QWORD *)(v48 + 64) = 4;
        *(_BYTE *)(v48 + 72) = -2;
      }
      else
      {

        swift_bridgeObjectRelease();
      }
      v49 = v57;
      outlined init with copy of ConversationControlsAppLaunchButtonType(v44, v57, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
      __swift_storeEnumTagSinglePayload(v49, 0, 1, v42);
      outlined destroy of AccountUpdateNotice(v44, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
    }
  }
  else
  {
    __swift_storeEnumTagSinglePayload(v57, 1, 1, v9);
  }
}

uint64_t ConversationControlsRecipeGenerator.pendingAuthorizationRequestRecipe(controlsManager:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v19;
  id v20[2];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Participant(0);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (void *)(*(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x290))(v8);
  if (v11)
  {
    v20[0] = v11;
    v12 = objc_msgSend(v11, sel_pendingMembers);
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
    lazy protocol witness table accessor for type TUHandle and conformance NSObject((unint64_t *)&lazy protocol witness table cache variable for type TUConversationMember and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
    v13 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    specialized Sequence.compactMap<A>(_:)(v13, a1);
    v15 = v14;
    swift_bridgeObjectRelease();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16 >= 2)
    {
      swift_bridgeObjectRelease();
      ConversationControlsRecipeGenerator.multipleAuthorizationRequestRecipe(withNumber:)(v16, a2);
    }
    specialized Collection.first.getter(v15, (uint64_t)v6);
    swift_bridgeObjectRelease();
    if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7) != 1)
    {
      outlined init with take of StagedCollaboration((uint64_t)v6, (uint64_t)v10, type metadata accessor for Participant);
      ConversationControlsRecipeGenerator.singleAuthoriziationRequestRecipe(for:participant:)((uint64_t)v20[0], (uint64_t)v10, a2);
    }

    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v6, &demangling cache variable for type metadata for Participant?);
    v19 = type metadata accessor for ConversationControlsRecipe();
    return __swift_storeEnumTagSinglePayload(a2, 1, 1, v19);
  }
  else
  {
    v17 = type metadata accessor for ConversationControlsRecipe();
    return __swift_storeEnumTagSinglePayload(a2, 1, 1, v17);
  }
}

uint64_t ConversationControlsRecipeGenerator.pttHUDRecipe(controlsManager:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  void *v19;
  void *v20;
  Swift::String v21;
  _QWORD v23[11];

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  MEMORY[0x1E0C80A78](v8);
  v23[10] = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ConversationControlsRecipe();
  v11 = MEMORY[0x1E0C80A78](v10);
  v12 = (*(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x270))(v11);
  objc_opt_self();
  v13 = (void *)swift_dynamicCastObjCClass();
  if (v13)
  {
    v14 = v13;
    v15 = ConversationControlsRecipeGenerator.pttLeadingAccessoryView(call:)(v13);
    if (v15)
    {
      v23[5] = v16;
      v23[6] = v10;
      v23[4] = v7;
      v23[7] = v15;
      v23[8] = v12;
      v23[0] = a1;
      v23[1] = v2;
      _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
      v17 = objc_msgSend(v14, sel_channelDisplayName);
      v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v20 = v19;

      v21._countAndFlagsBits = v18;
      v21._object = v20;
      NSMutableAttributedString.__allocating_init(string:)(v21);
    }
  }
  swift_unknownObjectRelease();
  return __swift_storeEnumTagSinglePayload(a2, 1, 1, v10);
}

void sub_1BD0FE9A0()
{
  void *v0;
  void *v1;

  JUMPOUT(0x1BD0FEA58);
}

void sub_1BD0FEAF0(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;

  *(_QWORD *)(v1 + 32) = a1;
  *(_QWORD *)(v6 - 136) = v1;
  specialized Array._endMutation()();
  v7 = *(_QWORD *)(v6 - 136);
  v8 = type metadata accessor for AttributedString();
  v9 = *(_QWORD *)(v6 - 272);
  __swift_storeEnumTagSinglePayload(v9, 1, 1, v8);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ConversationControlsAction>);
  type metadata accessor for ConversationControlsAction();
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1BD6441D0;
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)(v6 - 136) = v10;
  *(_OWORD *)(v6 - 128) = 0u;
  *(_OWORD *)(v6 - 112) = 0u;
  *(_BYTE *)(v6 - 96) = 0;
  v11 = *(_QWORD *)(v6 - 224);
  v12 = v2;
  v13 = v3;
  ConversationControlsRecipe.init(type:avatar:leadingAccessoryView:title:subtitles:subtitleLeadingBadge:fullSentence:showsInfoButton:showsSubtitleChevron:titleConfiguration:subtitleConfiguration:actions:leadingViewType:)(v6 - 216, 0, v12, v5, *(_QWORD *)(v6 - 264), v3, v7, 0, v11, 0, 0, v9, OS_LOG_TYPE_DEFAULT, 1, 1, 1, (uint8_t *)(v6 - 136), 0, 0,
    0xFFu);
  v14 = *(_QWORD *)(v6 - 256);
  if (__swift_getEnumTagSinglePayload(v11, 1, v14) == 1)
  {

    swift_unknownObjectRelease();
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v11, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
    __swift_storeEnumTagSinglePayload(*(_QWORD *)(v6 - 232), 1, 1, v14);
  }
  else
  {
    v15 = *(void **)(v6 - 280);
    v16 = *(_QWORD *)(v6 - 288);
    outlined init with take of StagedCollaboration(v11, v16, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
    *(_BYTE *)(v16 + *(int *)(v14 + 64)) = 1;
    v17 = SBUIIsSystemApertureEnabled();
    v18 = *(_QWORD *)(v6 - 232);
    if (v17)
    {
      if (one-time initialization token for conversationControls != -1)
        swift_once();
      v19 = type metadata accessor for Logger();
      __swift_project_value_buffer(v19, (uint64_t)&static Logger.conversationControls);
      v20 = Logger.logObject.getter();
      v21 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v20, v21))
      {
        v22 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v22 = 0;
        _os_log_impl(&dword_1BD004000, v20, v21, "pttHUD: [SystemAperture] showing content", v22, 2u);
        MEMORY[0x1C3B751B8](v22, -1, -1);
      }

      ConversationControlsRecipeGenerator.makePTTHUDSystemApertureElement(controlsManager:alertingStyle:)(*(_QWORD *)(v6 - 304), 128, v6 - 216);
      swift_unknownObjectRelease();

      outlined assign with take of Participant?(v6 - 216, v16 + *(int *)(v14 + 72), (uint64_t *)&demangling cache variable for type metadata for SystemApertureElement?);
    }
    else
    {

      swift_unknownObjectRelease();
    }
    outlined init with copy of ConversationControlsAppLaunchButtonType(v16, v18, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
    __swift_storeEnumTagSinglePayload(v18, 0, 1, v14);
    outlined destroy of AccountUpdateNotice(v16, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
  }
}

uint64_t ConversationControlsRecipeGenerator.noticeRecipe(controlsManager:notice:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t (*v34)(uint64_t);
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t updated;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  _BYTE v64[48];

  v60 = a1;
  v61 = a3;
  v51 = type metadata accessor for PushToTalkNotice(0);
  v4 = MEMORY[0x1E0C80A78](v51);
  v48 = (uint64_t)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v50 = (char *)&v48 - v6;
  updated = type metadata accessor for SystemUpdateNotice(0);
  v7 = MEMORY[0x1E0C80A78](updated);
  v49 = (uint64_t)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v53 = (char *)&v48 - v9;
  v57 = type metadata accessor for AppLaunchNotice(0);
  v10 = MEMORY[0x1E0C80A78](v57);
  v52 = (uint64_t)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v56 = (char *)&v48 - v12;
  v59 = type metadata accessor for SessionActionNotice(0);
  v13 = MEMORY[0x1E0C80A78](v59);
  v55 = (uint64_t)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v58 = (char *)&v48 - v15;
  v16 = type metadata accessor for ReactionNotice(0);
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v48 - v20;
  v22 = type metadata accessor for AccountUpdateNotice(0);
  v23 = MEMORY[0x1E0C80A78](v22);
  v25 = (char *)&v48 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v27 = (char *)&v48 - v26;
  v28 = type metadata accessor for SessionActivationRequestNotice(0);
  v29 = MEMORY[0x1E0C80A78](v28);
  v31 = (char *)&v48 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v29);
  v33 = (char *)&v48 - v32;
  outlined init with copy of FeatureEligibility?(a2, (uint64_t)&v62, (uint64_t *)&demangling cache variable for type metadata for Notice?);
  if (v63)
  {
    outlined init with take of Notice(&v62, (uint64_t)v64);
    outlined init with copy of RadarReporting((uint64_t)v64, (uint64_t)&v62);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Notice);
    if (swift_dynamicCast())
    {
      v34 = type metadata accessor for SessionActivationRequestNotice;
      outlined init with take of StagedCollaboration((uint64_t)v33, (uint64_t)v31, type metadata accessor for SessionActivationRequestNotice);
      ConversationControlsRecipeGenerator.sessionActivationRequestNoticeRecipe(controlsManager:notice:)(v60, (uint64_t)v31, v61);
      v35 = (uint64_t)v31;
    }
    else
    {
      if (swift_dynamicCast())
      {
        outlined init with take of StagedCollaboration((uint64_t)v27, (uint64_t)v25, type metadata accessor for AccountUpdateNotice);
        ConversationControlsRecipeGenerator.accountUpdateNoticeRecipe(controlsManager:notice:)(v60, (uint64_t)v25, v61);
      }
      if (swift_dynamicCast())
      {
        outlined init with take of StagedCollaboration((uint64_t)v21, (uint64_t)v19, type metadata accessor for ReactionNotice);
        ConversationControlsRecipeGenerator.reactionNoticeRecipe(controlsManager:notice:)(v60, (uint64_t)v19, v61);
      }
      v42 = (uint64_t)v58;
      if (swift_dynamicCast())
      {
        v34 = type metadata accessor for SessionActionNotice;
        v43 = v55;
        outlined init with take of StagedCollaboration(v42, v55, type metadata accessor for SessionActionNotice);
        ConversationControlsRecipeGenerator.sessionActionNoticeRecipe(controlsManager:notice:)(v60, v43, v61);
      }
      else
      {
        v44 = (uint64_t)v56;
        if (swift_dynamicCast())
        {
          v34 = type metadata accessor for AppLaunchNotice;
          v43 = v52;
          outlined init with take of StagedCollaboration(v44, v52, type metadata accessor for AppLaunchNotice);
          ConversationControlsRecipeGenerator.appLaunchNoticeRecipe(controlsManager:notice:)(v60, v43, v61);
        }
        else
        {
          v45 = (uint64_t)v53;
          if (swift_dynamicCast())
          {
            v34 = type metadata accessor for SystemUpdateNotice;
            v43 = v49;
            outlined init with take of StagedCollaboration(v45, v49, type metadata accessor for SystemUpdateNotice);
            ConversationControlsRecipeGenerator.systemUpdateNoticeRecipe(controlsManager:notice:)(v60, v43, v61);
          }
          else
          {
            v46 = (uint64_t)v50;
            if (!swift_dynamicCast())
            {
              __swift_destroy_boxed_opaque_existential_1((uint64_t)v64);
              v47 = type metadata accessor for ConversationControlsRecipe();
              __swift_storeEnumTagSinglePayload(v61, 1, 1, v47);
              return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v62);
            }
            v34 = type metadata accessor for PushToTalkNotice;
            v43 = v48;
            outlined init with take of StagedCollaboration(v46, v48, type metadata accessor for PushToTalkNotice);
            ConversationControlsRecipeGenerator.pttNoticeRecipe(controlsManager:notice:)(v60, v43, v61);
          }
        }
      }
      v35 = v43;
    }
    outlined destroy of AccountUpdateNotice(v35, v34);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v64);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v62);
  }
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v62, (uint64_t *)&demangling cache variable for type metadata for Notice?);
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v36 = type metadata accessor for Logger();
  __swift_project_value_buffer(v36, (uint64_t)&static Logger.conversationControls);
  v37 = Logger.logObject.getter();
  v38 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v37, v38))
  {
    v39 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v39 = 0;
    _os_log_impl(&dword_1BD004000, v37, v38, "noticeRecipe: No notice metadata", v39, 2u);
    MEMORY[0x1C3B751B8](v39, -1, -1);
  }

  v40 = type metadata accessor for ConversationControlsRecipe();
  return __swift_storeEnumTagSinglePayload(v61, 1, 1, v40);
}

uint64_t ConversationControlsRecipeGenerator.handoffHUDRecipe(controlsManager:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  Swift::String v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  _QWORD v26[14];
  uint64_t (*v27)(void);
  char *v28;
  _QWORD *v29;

  v29 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ConversationControlsRecipe();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for UUID();
  MEMORY[0x1E0C80A78](v12);
  if (one-time initialization token for shared != -1)
    swift_once();
  if (((*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 584))() & 1) != 0)
  {
    v28 = v8;
    v27 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v29) + 0x290);
    v13 = (void *)v27();
    if (v13)
    {
      v26[11] = v5;
      v14 = v13;
      v15 = objc_msgSend(v13, sel_handoffEligibility);

      if (v15)
      {
        v26[3] = v11;
        v26[7] = v9;
        v26[8] = a2;
        v17 = TUConversation.participantListDisplayName.getter(v16);
        v19 = v18;
        _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
        swift_bridgeObjectRetain();
        v26[10] = v17;
        v20._countAndFlagsBits = v17;
        v20._object = v19;
        NSMutableAttributedString.__allocating_init(string:)(v20);
      }

    }
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v21 = type metadata accessor for Logger();
    __swift_project_value_buffer(v21, (uint64_t)&static Logger.conversationControls);
    v22 = Logger.logObject.getter();
    v23 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v24 = 0;
      _os_log_impl(&dword_1BD004000, v22, v23, "handoffHUDRecipe: No active conversation to display nearby handoff HUD for.", v24, 2u);
      MEMORY[0x1C3B751B8](v24, -1, -1);
    }

  }
  return __swift_storeEnumTagSinglePayload(a2, 1, 1, v9);
}

uint64_t ConversationControlsRecipeGenerator.handoffCompletedRecipe(controlsManager:localizedDeviceCategory:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  id v19;
  Swift::String v20;
  Swift::String_optional v21;
  Swift::String v22;
  Swift::String v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint8_t *v28;
  uint8_t *v29;
  _QWORD v31[19];
  Swift::String v32;

  v31[18] = a3;
  v31[17] = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  MEMORY[0x1E0C80A78](v6);
  v31[16] = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ConversationControlsRecipe();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for UUID();
  MEMORY[0x1E0C80A78](v14);
  if (one-time initialization token for shared != -1)
    swift_once();
  if (((*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 584))() & 1) != 0)
  {
    v31[13] = v10;
    v31[14] = v13;
    if ((*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x490))())
    {
      v16 = v15;
      ObjectType = swift_getObjectType();
      v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(ObjectType, v16);
      swift_unknownObjectRelease();
      if (v18)
      {
        v31[9] = v11;
        v31[8] = a4;
        v19 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
        v32._object = (void *)0xE000000000000000;
        v20._countAndFlagsBits = 0x454D495445434146;
        v20._object = (void *)0xED00004C4C41435FLL;
        v21.value._countAndFlagsBits = 0x61737265766E6F43;
        v21.value._object = (void *)0xEF74694B6E6F6974;
        v22._countAndFlagsBits = 0;
        v22._object = (void *)0xE000000000000000;
        v32._countAndFlagsBits = 0;
        v23 = NSLocalizedString(_:tableName:bundle:value:comment:)(v20, v21, (NSBundle)v19, v22, v32);

        _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
        swift_bridgeObjectRetain();
        v31[11] = v23._countAndFlagsBits;
        v31[5] = v23._object;
        NSMutableAttributedString.__allocating_init(string:)(v23);
      }
    }
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v24 = type metadata accessor for Logger();
    __swift_project_value_buffer(v24, (uint64_t)&static Logger.conversationControls);
    v25 = Logger.logObject.getter();
    v26 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = v11;
      v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v28 = 0;
      _os_log_impl(&dword_1BD004000, v25, v26, "handoffCompletedRecipe: No conversation to display handoff completed banner for.", v28, 2u);
      v29 = v28;
      v11 = v27;
      MEMORY[0x1C3B751B8](v29, -1, -1);
    }

  }
  return __swift_storeEnumTagSinglePayload(a4, 1, 1, v11);
}

uint64_t ConversationControlsRecipeGenerator.lagunaHandoffHUDRecipe(controlsManager:suggestion:)@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  void *v13;
  uint64_t countAndFlagsBits;
  void *object;
  id v17;
  Swift::String v18;
  Swift::String_optional v19;
  Swift::String v20;
  Swift::String v21;
  Swift::String v22;
  _QWORD v23[10];
  uint64_t v24;
  Swift::String v25;

  v24 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ConversationControlsRecipe();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for shared != -1)
    swift_once();
  if (((*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 592))() & 1) != 0)
  {
    v23[7] = v5;
    v23[8] = v8;
    v23[2] = v11;
    v12 = outlined bridged method (ob) of @objc TUConversationHandoffEligibility.localizedDeviceCategory.getter(objc_msgSend(a1, sel_deviceHandle), (SEL *)&selRef_name);
    v23[6] = a1;
    if (v13)
    {
      countAndFlagsBits = (uint64_t)v12;
      object = v13;
    }
    else
    {
      v17 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
      v25._object = (void *)0xE000000000000000;
      v18._countAndFlagsBits = 0x56545F454C505041;
      v18._object = (void *)0xE800000000000000;
      v19.value._countAndFlagsBits = 0x61737265766E6F43;
      v19.value._object = (void *)0xEF74694B6E6F6974;
      v20._countAndFlagsBits = 0;
      v20._object = (void *)0xE000000000000000;
      v25._countAndFlagsBits = 0;
      v21 = NSLocalizedString(_:tableName:bundle:value:comment:)(v18, v19, (NSBundle)v17, v20, v25);
      countAndFlagsBits = v21._countAndFlagsBits;
      object = v21._object;

    }
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
    v22._countAndFlagsBits = countAndFlagsBits;
    v22._object = object;
    NSMutableAttributedString.__allocating_init(string:)(v22);
  }
  return __swift_storeEnumTagSinglePayload(v24, 1, 1, v9);
}

uint64_t ConversationControlsRecipeGenerator.lagunaHandoffCompletedRecipe(controlsManager:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  id v17;
  Swift::String v18;
  Swift::String_optional v19;
  Swift::String v20;
  Swift::String v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  _QWORD v27[21];
  char *v29;
  Swift::String v30;

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  MEMORY[0x1E0C80A78](v5);
  v29 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ConversationControlsRecipe();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for UUID();
  MEMORY[0x1E0C80A78](v13);
  if (one-time initialization token for shared != -1)
    swift_once();
  if (((*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 600))() & 1) != 0)
  {
    v27[12] = v9;
    if ((*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x290))())
    {
      v27[18] = a1;
      v27[11] = v2;
      v27[3] = v12;
      v27[8] = v10;
      v27[9] = a2;
      v14 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
      v15 = objc_msgSend(v14, sel_neighborhoodActivityConduit);

      v16 = objc_msgSend(v15, sel_activeSplitSessionTV);
      v17 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
      v30._object = (void *)0xE000000000000000;
      v18._countAndFlagsBits = 0x454D495445434146;
      v18._object = (void *)0xED00004C4C41435FLL;
      v19.value._countAndFlagsBits = 0x61737265766E6F43;
      v19.value._object = (void *)0xEF74694B6E6F6974;
      v20._countAndFlagsBits = 0;
      v20._object = (void *)0xE000000000000000;
      v30._countAndFlagsBits = 0;
      v21 = NSLocalizedString(_:tableName:bundle:value:comment:)(v18, v19, (NSBundle)v17, v20, v30);

      _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
      swift_bridgeObjectRetain();
      v27[10] = v21._countAndFlagsBits;
      v27[4] = v21._object;
      NSMutableAttributedString.__allocating_init(string:)(v21);
    }
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v22 = type metadata accessor for Logger();
    __swift_project_value_buffer(v22, (uint64_t)&static Logger.conversationControls);
    v23 = Logger.logObject.getter();
    v24 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v25 = 0;
      _os_log_impl(&dword_1BD004000, v23, v24, "lagunaHandoffCompletedRecipe: No conversation to display handoff completed banner for.", v25, 2u);
      MEMORY[0x1C3B751B8](v25, -1, -1);
    }

  }
  return __swift_storeEnumTagSinglePayload(a2, 1, 1, v10);
}

uint64_t ConversationControlsRecipeGenerator.makeIncomingCall(using:isThirdParty:)@<X0>(_QWORD *a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  uint64_t (*v21)(uint64_t, uint64_t);
  uint64_t (*v23)(void);
  void *v24;
  void *v25;
  id v26;
  uint64_t v27;
  void *v28;
  void *v29;
  id v30;
  uint64_t v31;
  void *v32;
  void *v33;
  void *v34;
  Swift::String v35;
  _QWORD v36[17];
  uint64_t v37;
  uint64_t v38;
  char *v39;
  int v40;

  v40 = a2;
  v36[16] = *v3;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  MEMORY[0x1E0C80A78](v6);
  v36[14] = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  MEMORY[0x1E0C80A78](v8);
  v36[15] = (char *)v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ConversationControlsRecipe();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ConversationControlsAction();
  v36[13] = *(_QWORD *)(v13 - 8);
  v14 = MEMORY[0x1E0C80A78](v13);
  v39 = (char *)v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v17 = (*(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x270))(v14);
  v19 = v18;
  ObjectType = swift_getObjectType();
  v21 = *(uint64_t (**)(uint64_t, uint64_t))(v19 + 104);
  v37 = v19;
  if ((v21(ObjectType, v19) & 1) == 0)
  {
    v38 = v17;
    v36[11] = a3;
    v36[12] = v10;
    v23 = *(uint64_t (**)(void))((*v16 & *a1) + 0x290);
    v24 = (void *)v23();
    v36[5] = v12;
    if (v24
      && (v25 = v24, v26 = objc_msgSend(v24, sel_link), v25, v26)
      && (outlined bridged method (ob) of @objc TUConversationLink.displayName.getter(v26), v27))
    {
      swift_bridgeObjectRelease();
      _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
    }
    else
    {
      _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
      if ((v40 & 1) == 0)
      {
        v28 = (void *)v23();
        if (v28)
        {
          v29 = v28;
          v30 = objc_msgSend(v28, sel_displayName);

          v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          v33 = v32;

          goto LABEL_11;
        }
      }
    }
    v31 = (*(uint64_t (**)(uint64_t))(v37 + 64))(ObjectType);
    v33 = v34;
LABEL_11:
    v35._countAndFlagsBits = v31;
    v35._object = v33;
    NSMutableAttributedString.__allocating_init(string:)(v35);
  }
  __swift_storeEnumTagSinglePayload(a3, 1, 1, v10);
  return swift_unknownObjectRelease();
}

void sub_1BD103288(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t (*v9)(void);
  uint64_t v10;
  char v11;
  _OWORD *v12;
  int v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  BOOL v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  _BOOL4 v48;
  uint8_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  uint8_t *v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  char v60;
  char v61;
  uint64_t v62;
  _QWORD *v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  char v68;
  id v69;
  objc_class *v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;
  void *v76;
  uint64_t v77;
  id v78;
  char *v79;
  id v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;

  *(_QWORD *)(v1 + 72) = a1;
  *(_QWORD *)(v1 + 80) = ConversationControlsRecipeGenerator.callTypeSubtitles(for:)(v5);
  v8 = *(_QWORD **)(v6 + 16);
  v9 = *(uint64_t (**)(void))((*v2 & *v8) + 0xC0);
  *(_QWORD *)(v1 + 24) = v9;
  v10 = v9();
  if ((v10 & 1) != 0 && (TUCallCenter.needsMultipleRejection.getter(v10), (v11 & 1) != 0))
    static ConversationControlsAction.acceptAndDeclineCall(controlsManager:)(v5, v3);
  else
    static ConversationControlsAction.acceptCall(controlsManager:)(v5, v3);
  v12 = (_OWORD *)(v7 - 208);
  v13 = *(_DWORD *)(v1 + 160);
  *(_QWORD *)(v1 + 32) = v8;
  if ((v13 & 1) != 0)
  {
    *(_QWORD *)(v1 + 56) = 0;
    *(_QWORD *)(v1 + 64) = 0;
    *(_QWORD *)(v1 + 48) = 0;
    *(_QWORD *)(v7 - 216) = 8;
    *v12 = 0u;
    *(_OWORD *)(v7 - 192) = 0u;
    *(_BYTE *)(v7 - 176) = 6;
    v14 = *(_QWORD *)(v1 + 136);
  }
  else
  {
    *(_QWORD *)(v7 - 216) = 6;
    *v12 = 0u;
    *(_OWORD *)(v7 - 192) = 0u;
    *(_BYTE *)(v7 - 176) = 6;
    v14 = *(_QWORD *)(v1 + 136);
    v15 = ConversationControlsRecipeGenerator.subtitleBadgeView(incomingCall:)(v4, v14);
    *(_QWORD *)(v1 + 56) = v16;
    *(_QWORD *)(v1 + 64) = v15;
    *(_QWORD *)(v1 + 48) = v17;
  }
  v18 = type metadata accessor for AttributedString();
  v19 = *(_QWORD *)(v1 + 112);
  __swift_storeEnumTagSinglePayload(v19, 1, 1, v18);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ConversationControlsAction>);
  v20 = *(_QWORD *)(v1 + 104);
  v21 = *(_QWORD *)(v20 + 72);
  v22 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1BD645380;
  static ConversationControlsAction.rejectCall(controlsManager:)(v5, (_BYTE *)(v23 + v22));
  v24 = *(_QWORD *)(v1 + 152);
  outlined init with copy of ConversationControlsAppLaunchButtonType(v24, v23 + v22 + v21, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsAction);
  *(_QWORD *)(v7 - 136) = v23;
  v25 = v7 - 136;
  *(_OWORD *)(v25 + 8) = 0u;
  *(_OWORD *)(v25 + 24) = 0u;
  *(_BYTE *)(v7 - 96) = 0;
  v26 = (_QWORD *)static ConversationControlsRecipeGenerator.makeAvatarUsingCall(_:with:isThirdParty:)(*(_QWORD *)(v1 + 144), v14, v5, *(_DWORD *)(v1 + 160) & 1);
  *(_QWORD *)(v1 + 104) = v6;
  v27 = ConversationControlsRecipeGenerator.makeLeadingViewType(using:avatarViewController:)(v5, v26);
  v29 = v28;
  LOBYTE(v22) = v30;

  v31 = *(id *)(v1 + 72);
  v87 = v27;
  v32 = *(_QWORD *)(v1 + 120);
  ConversationControlsRecipe.init(type:avatar:leadingAccessoryView:title:subtitles:subtitleLeadingBadge:fullSentence:showsInfoButton:showsSubtitleChevron:titleConfiguration:subtitleConfiguration:actions:leadingViewType:)(v7 - 216, 0, 0, 0, 0, v31, *(_QWORD *)(v1 + 80), *(NSObject **)(v1 + 64), v32, *(NSObject **)(v1 + 56), *(NSObject **)(v1 + 48), v19, OS_LOG_TYPE_DEFAULT, 0, 1, 1, (uint8_t *)(v7 - 136), v87, v29,
    v22 & 1);
  v33 = *(_QWORD *)(v1 + 96);
  if (__swift_getEnumTagSinglePayload(v32, 1, v33) == 1)
  {
    outlined destroy of AccountUpdateNotice(v24, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsAction);
    swift_unknownObjectRelease();

    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v32, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
    __swift_storeEnumTagSinglePayload(*(_QWORD *)(v1 + 88), 1, 1, v33);
    return;
  }
  v34 = *(_QWORD *)(v1 + 40);
  outlined init with take of StagedCollaboration(v32, v34, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
  v35 = SBUIIsSystemApertureEnabled();
  v36 = *(_QWORD *)(v1 + 88);
  if (v35)
  {
    v37 = (*(_DWORD *)(v1 + 160) & 1) == 0;
    v38 = 0x676E696D6F636E69;
    if ((*(_DWORD *)(v1 + 160) & 1) != 0)
      v38 = 0xD00000000000001ALL;
    *(_QWORD *)(v1 + 64) = v38;
    if (v37)
      v39 = 0xEC0000006C6C6143;
    else
      v39 = 0x80000001BD66D1D0;
    (*(void (**)(_QWORD, _QWORD, uint64_t *))(**(_QWORD **)(*(_QWORD *)(v1 + 104) + 24) + 112))(0, 0, v5);
    v40 = *(_QWORD *)(v1 + 184);
    v41 = *(_QWORD *)(v1 + 192);
    v42 = *(_QWORD *)(v1 + 200);
    *(_QWORD *)(v1 + 112) = *(_QWORD *)(v1 + 208);
    *(_QWORD *)(v1 + 120) = v42;
    v43 = *(_QWORD *)(v1 + 216);
    *(_QWORD *)(v1 + 72) = *(_QWORD *)(v1 + 224);
    *(_QWORD *)(v1 + 80) = v43;
    v44 = *(_QWORD *)(v1 + 240);
    outlined init with take of Any?(v1 + 184, v1 + 264, &demangling cache variable for type metadata for SystemApertureIcon?);
    if (*(_QWORD *)(v1 + 320))
    {
      *(_QWORD *)(v1 + 56) = v44;
      memcpy((void *)(v7 - 216), (const void *)(v1 + 264), 0x50uLL);
      if (one-time initialization token for conversationControls != -1)
        swift_once();
      *(_QWORD *)(v1 + 48) = v40;
      v45 = type metadata accessor for Logger();
      __swift_project_value_buffer(v45, (uint64_t)&static Logger.conversationControls);
      swift_bridgeObjectRetain();
      v46 = Logger.logObject.getter();
      v47 = static os_log_type_t.default.getter();
      v48 = os_log_type_enabled(v46, v47);
      *(_QWORD *)(v1 + 8) = v41;
      if (v48)
      {
        v49 = (uint8_t *)swift_slowAlloc();
        v50 = swift_slowAlloc();
        *(_QWORD *)(v1 + 176) = v50;
        *(_DWORD *)v49 = 136446210;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v1 + 168) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(*(_QWORD *)(v1 + 64), v39, (uint64_t *)(v1 + 176));
        v33 = *(_QWORD *)(v1 + 96);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1BD004000, v46, v47, "%{public}s: [SystemAperture] showing content", v49, 0xCu);
        swift_arrayDestroy();
        v51 = v50;
        v34 = *(_QWORD *)(v1 + 40);
        MEMORY[0x1C3B751B8](v51, -1, -1);
        MEMORY[0x1C3B751B8](v49, -1, -1);

      }
      else
      {

        v52 = swift_bridgeObjectRelease_n();
      }
      v59 = (_QWORD *)MEMORY[0x1E0DEEDD8];
      v60 = (*(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v5) + 0x280))(v52);
      v61 = (*(uint64_t (**)(void))((*v59 & **(_QWORD **)(v1 + 32)) + 0xA8))();
      *(_QWORD *)(v1 + 16) = v31;
      if ((v61 & 1) != 0)
      {
        *(_DWORD *)(v1 + 64) = 0;
        v62 = 3;
        if ((v60 & 1) == 0)
          v62 = 4;
      }
      else
      {
        if (((*(uint64_t (**)(void))(v1 + 24))() & 1) != 0)
          *(_BYTE *)(v34 + *(int *)(v33 + 64)) = 1;
        *(_DWORD *)(v1 + 64) = v60 & 1;
        v62 = 4;
      }
      *(_QWORD *)(v1 + 32) = v62;
      v63 = (_QWORD *)static ConversationControlsRecipeGenerator.makeAvatarUsingCall(_:with:isThirdParty:)(*(_QWORD *)(v1 + 144), *(_QWORD *)(v1 + 136), v5, *(_DWORD *)(v1 + 160) & 1);
      v64 = ConversationControlsRecipeGenerator.makeLeadingViewType(using:avatarViewController:)(v5, v63);
      v66 = v65;
      v68 = v67;

      v69 = objc_allocWithZone((Class)type metadata accessor for SystemApertureIncomingCallLeadingView());
      *(_QWORD *)(v1 + 160) = SystemApertureIncomingCallLeadingView.init(leadingViewType:)(v64, v66, v68 & 1);
      v70 = (objc_class *)type metadata accessor for SystemApertureIconView();
      v71 = objc_allocWithZone(v70);
      v72 = *(_QWORD *)(v1 + 80);
      v73 = *(_QWORD *)(v1 + 72) & 1;
      v74 = *(void **)(v1 + 48);
      v75 = *(_QWORD *)(v1 + 8);
      v77 = *(_QWORD *)(v1 + 112);
      v76 = *(void **)(v1 + 120);
      outlined copy of SystemApertureIconAsset(v74, v75, v76, v77, v72, *(_BYTE *)(v1 + 72) & 1);
      swift_bridgeObjectRetain();
      *(_QWORD *)(v1 + 136) = SystemApertureIconView.init(icon:isDetached:)(v7 - 216, 0);
      v78 = objc_allocWithZone(v70);
      outlined copy of SystemApertureIconAsset(v74, v75, v76, v77, v72, v73);
      swift_bridgeObjectRetain();
      v79 = SystemApertureIconView.init(icon:isDetached:)(v7 - 216, 0);
      v80 = objc_allocWithZone(v70);
      v81 = SystemApertureIconView.init(icon:isDetached:)(v7 - 216, 1);

      swift_unknownObjectRelease();
      outlined destroy of AccountUpdateNotice(*(_QWORD *)(v1 + 152), (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsAction);
      v82 = *(_QWORD *)(v1 + 96);
      v83 = *(_QWORD *)(v1 + 40);
      v84 = v83 + *(int *)(v82 + 72);
      outlined consume of SystemApertureElement?(*(void **)v84, *(_QWORD *)(v84 + 8), *(void **)(v84 + 16), *(_QWORD *)(v84 + 24), *(void **)(v84 + 32), *(_QWORD *)(v84 + 40), *(void **)(v84 + 48));
      *(_QWORD *)v84 = *(_QWORD *)(v1 + 160);
      *(_QWORD *)(v84 + 8) = &protocol witness table for SystemApertureIncomingCallLeadingView;
      *(_QWORD *)(v84 + 16) = *(_QWORD *)(v1 + 136);
      *(_QWORD *)(v84 + 24) = &protocol witness table for SystemApertureIconView;
      *(_QWORD *)(v84 + 32) = v79;
      *(_QWORD *)(v84 + 40) = &protocol witness table for SystemApertureIconView;
      *(_QWORD *)(v84 + 48) = v81;
      *(_QWORD *)(v84 + 56) = &protocol witness table for SystemApertureIconView;
      *(_QWORD *)(v84 + 64) = *(_QWORD *)(v1 + 32);
      *(_BYTE *)(v84 + 72) = *(_DWORD *)(v1 + 64);
      v85 = *(_QWORD *)(v1 + 88);
      outlined init with copy of ConversationControlsAppLaunchButtonType(v83, v85, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
      __swift_storeEnumTagSinglePayload(v85, 0, 1, v82);
      v86 = v83;
      goto LABEL_38;
    }
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v53 = type metadata accessor for Logger();
    __swift_project_value_buffer(v53, (uint64_t)&static Logger.conversationControls);
    swift_bridgeObjectRetain();
    v54 = Logger.logObject.getter();
    v55 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v54, v55))
    {
      v56 = (uint8_t *)swift_slowAlloc();
      v57 = swift_slowAlloc();
      *(_QWORD *)(v7 - 216) = v57;
      *(_DWORD *)v56 = 136446210;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v1 + 176) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(*(_QWORD *)(v1 + 64), v39, (uint64_t *)(v7 - 216));
      v34 = *(_QWORD *)(v1 + 40);
      v33 = *(_QWORD *)(v1 + 96);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1BD004000, v54, v55, "%{public}s: [SystemAperture] missing status icon", v56, 0xCu);
      swift_arrayDestroy();
      v58 = v57;
      v36 = *(_QWORD *)(v1 + 88);
      MEMORY[0x1C3B751B8](v58, -1, -1);
      MEMORY[0x1C3B751B8](v56, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    swift_unknownObjectRelease();

    outlined destroy of AccountUpdateNotice(*(_QWORD *)(v1 + 152), (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsAction);
  }
  else
  {
    outlined destroy of AccountUpdateNotice(*(_QWORD *)(v1 + 152), (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsAction);
    swift_unknownObjectRelease();

  }
  outlined init with copy of ConversationControlsAppLaunchButtonType(v34, v36, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
  __swift_storeEnumTagSinglePayload(v36, 0, 1, v33);
  v86 = v34;
LABEL_38:
  outlined destroy of AccountUpdateNotice(v86, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
}

uint64_t ConversationControlsRecipeGenerator.makeOngoingTelephonyCall(using:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t ObjectType;
  _BOOL4 v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(uint64_t, uint64_t);
  uint64_t (*v26)(uint64_t, uint64_t);
  Swift::String v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  _QWORD v36[8];
  unsigned int (*v37)(uint64_t, uint64_t);
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t __dst;
  __int128 v45;
  __int128 v46;
  char v47;

  v3 = v2;
  v40 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  MEMORY[0x1E0C80A78](v8);
  v39 = (char *)v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ConversationControlsRecipe();
  v11 = MEMORY[0x1E0C80A78](v10);
  v36[4] = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v14 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x270);
  v42 = a1;
  v15 = v14(v11);
  v17 = v16;
  v18 = SBSIsSystemApertureAvailable();
  v41 = v10;
  if ((v18 & 1) != 0 || ((*(uint64_t (**)(void))((*v13 & **(_QWORD **)(v3 + 16)) + 0x58))() & 1) == 0)
  {
    v20 = 0;
  }
  else
  {
    ObjectType = swift_getObjectType();
    v20 = ((*(uint64_t (**)(uint64_t, uint64_t))(v17 + 104))(ObjectType, v17) & 1) != 0
       || (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 184))(ObjectType, v17) == 1;
  }
  v21 = swift_getObjectType();
  v22 = *(uint64_t (**)(uint64_t, uint64_t))(v17 + 96);
  if ((v22(v21, v17) & 1) != 0
    || (v37 = *(unsigned int (**)(uint64_t, uint64_t))(v17 + 120), ((v37(v21, v17) | v20) & 1) != 0))
  {
    v36[3] = v14;
    v23 = type metadata accessor for ConversationControlsBadgingAvatarViewController();
    v24 = swift_unknownObjectRetain();
    v25 = (unsigned int (*)(uint64_t, uint64_t))specialized ConversationControlsBadgingAvatarViewController.__allocating_init(call:badgeImage:)(v24, 0, v23, v21, v17);
    v36[5] = v7;
    v37 = v25;
    ConversationControlsRecipeGenerator.makeLeadingViewType(using:avatarViewController:)(v42, v25);
    __dst = 7;
    v45 = 0u;
    v46 = 0u;
    v47 = 6;
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
    v26 = *(uint64_t (**)(uint64_t, uint64_t))(v17 + 64);
    v38 = v15;
    v27._countAndFlagsBits = v26(v21, v17);
    NSMutableAttributedString.__allocating_init(string:)(v27);
  }
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v28 = type metadata accessor for Logger();
  __swift_project_value_buffer(v28, (uint64_t)&static Logger.conversationControls);
  swift_unknownObjectRetain_n();
  v29 = Logger.logObject.getter();
  v30 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v29, v30))
  {
    v31 = swift_slowAlloc();
    v42 = (_QWORD *)swift_slowAlloc();
    __dst = (uint64_t)v42;
    *(_DWORD *)v31 = 67109890;
    LOBYTE(v43) = v22(v21, v17) & 1;
    LODWORD(v43) = v43;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v31 + 8) = 1024;
    LOBYTE(v43) = ((uint64_t (*)(uint64_t, uint64_t))v37)(v21, v17) & 1;
    LODWORD(v43) = v43;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v31 + 14) = 1024;
    LOBYTE(v43) = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 104))(v21, v17) & 1;
    LODWORD(v43) = v43;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v31 + 20) = 2080;
    LODWORD(v43) = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 184))(v21, v17);
    type metadata accessor for TUCallStatus(0);
    v32 = String.init<A>(reflecting:)();
    v43 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v32, v33, &__dst);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v29, v30, "makeOngoingTelephonyCallRecipe returning nil, isConnected: %{BOOL}d, isOutgoing: %{BOOL}d, isConnecting: %{BOOL}d, call.status: %s", (uint8_t *)v31, 0x1Eu);
    v34 = v42;
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v34, -1, -1);
    MEMORY[0x1C3B751B8](v31, -1, -1);
    swift_unknownObjectRelease();

  }
  else
  {

    swift_unknownObjectRelease_n();
  }
  return __swift_storeEnumTagSinglePayload(v40, 1, 1, v41);
}

uint64_t ConversationControlsRecipeGenerator.makeOngoingThirdPartyVoIPCall(using:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t (*v28)(uint64_t, uint64_t);
  Swift::String v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  _QWORD v39[4];
  uint64_t (*v40)(uint64_t);
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  char *v50;
  id v51;
  uint64_t v52;
  uint64_t v53[10];
  uint64_t __dst;
  __int128 v55;
  __int128 v56;
  char v57;

  v5 = *v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  MEMORY[0x1E0C80A78](v6);
  v50 = (char *)v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ConversationControlsRecipe();
  v12 = MEMORY[0x1E0C80A78](v11);
  v41 = (char *)v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x270);
  v14 = v40(v12);
  v16 = v15;
  ObjectType = swift_getObjectType();
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v16 + 96))(ObjectType, v16) & 1) != 0
    || ((*(uint64_t (**)(uint64_t, uint64_t))(v16 + 120))(ObjectType, v16) & 1) != 0)
  {
    v44 = v10;
    v52 = v11;
    v46 = a2;
    v49 = ObjectType;
    v18 = specialized static ConversationControlsRecipeGenerator.makeVoipBadgeIcon(for:)(v14, v5, ObjectType, v16);
    v19 = v18;
    v42 = v20;
    v43 = v21;
    if (v18)
      v22 = v18;
    v23 = type metadata accessor for ConversationControlsBadgingAvatarViewController();
    v24 = swift_unknownObjectRetain();
    v25 = v49;
    v45 = (_QWORD *)specialized ConversationControlsBadgingAvatarViewController.__allocating_init(call:badgeImage:)(v24, v19, v23, v49, v16);
    v51 = ConversationControlsRecipeGenerator.makeLeadingViewType(using:avatarViewController:)(a1, v45);
    v47 = v26;
    v48 = v27 & 1;
    __dst = 9;
    v55 = 0u;
    v56 = 0u;
    v57 = 6;
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
    v28 = *(uint64_t (**)(uint64_t, uint64_t))(v16 + 64);
    v39[3] = v16;
    v29._countAndFlagsBits = v28(v25, v16);
    NSMutableAttributedString.__allocating_init(string:)(v29);
  }
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v30 = type metadata accessor for Logger();
  __swift_project_value_buffer(v30, (uint64_t)&static Logger.conversationControls);
  swift_unknownObjectRetain_n();
  v31 = Logger.logObject.getter();
  v32 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v31, v32))
  {
    v33 = (uint8_t *)swift_slowAlloc();
    v34 = swift_slowAlloc();
    v52 = v11;
    v35 = v34;
    v53[0] = v34;
    *(_DWORD *)v33 = 136315138;
    __dst = v14;
    *(_QWORD *)&v55 = v16;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Call);
    v36 = String.init<A>(reflecting:)();
    __dst = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v36, v37, v53);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v31, v32, "Couldn't generate recipe due to invalid call state %s", v33, 0xCu);
    swift_arrayDestroy();
    v11 = v52;
    MEMORY[0x1C3B751B8](v35, -1, -1);
    MEMORY[0x1C3B751B8](v33, -1, -1);
    swift_unknownObjectRelease();

  }
  else
  {

    swift_unknownObjectRelease_n();
  }
  return __swift_storeEnumTagSinglePayload(a2, 1, 1, v11);
}

uint64_t ConversationControlsRecipeGenerator.callAgainHUDRecipe(controlsManager:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  _QWORD *v24;
  uint64_t (*v25)(void);
  uint64_t v26;
  uint64_t v27;
  uint64_t ObjectType;
  uint64_t v29;
  void *v30;
  id v31;
  unsigned __int8 v32;
  void *v33;
  id v34;
  _QWORD *v35;
  uint64_t (*v36)(char *);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int *v41;
  int EnumTagSinglePayload;
  uint64_t v43;
  void *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  Class isa;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  NSObject *v56;
  os_log_type_t v57;
  uint64_t v58;
  uint8_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint8_t *v64;
  uint64_t v65;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int *v77;
  int *v78;
  id v79;
  id v80;
  id v81;
  Swift::String v82;
  Swift::String_optional v83;
  Swift::String v84;
  uint64_t v85;
  void *v86;
  Class v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  void *v94;
  Swift::String v95;
  id v96;
  Swift::String v97;
  __int128 v98;
  id v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  int *v110;
  char *v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  _QWORD *v115;
  uint64_t v116[10];
  uint64_t __dst;
  __int128 v118;
  __int128 v119;
  char v120;
  Swift::String v121;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  MEMORY[0x1E0C80A78](v4);
  v111 = (char *)&v98 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  MEMORY[0x1E0C80A78](v6);
  v113 = (char *)&v98 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PersonNameComponents?);
  MEMORY[0x1E0C80A78](v8);
  v104 = (uint64_t)&v98 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = type metadata accessor for PersonNameComponents();
  v106 = *(_QWORD *)(v108 - 8);
  MEMORY[0x1E0C80A78](v108);
  v105 = (uint64_t)&v98 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = (int *)type metadata accessor for Participant(0);
  v11 = MEMORY[0x1E0C80A78](v110);
  v107 = (uint64_t)&v98 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v109 = (uint64_t)&v98 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v98 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v112 = (uint64_t)&v98 - v18;
  v19 = type metadata accessor for UUID();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = MEMORY[0x1E0C80A78](v19);
  v23 = (char *)&v98 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v25 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x270);
  v115 = a1;
  ((void (*)(uint64_t))v25)(v21);
  v27 = v26;
  ObjectType = swift_getObjectType();
  LOBYTE(v27) = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 496))(ObjectType, v27);
  v29 = swift_unknownObjectRelease();
  if ((v27 & 1) != 0)
  {
    v30 = (void *)(*(uint64_t (**)(uint64_t))((*v24 & *v115) + 0x2B0))(v29);
    if (v30 || (v30 = (void *)(*(uint64_t (**)(void))((*v24 & *v115) + 0x290))()) != 0)
    {
      v114 = a2;
      if (static Platform.current.getter() == 3
        || (v31 = v30,
            v32 = specialized Conversation.cnk_allowsVideoMessaging.getter(),
            v31,
            (v32 & 1) != 0))
      {
        type metadata accessor for ConversationControlsBadgingAvatarViewController();
        v33 = (void *)objc_opt_self();
        v34 = v30;
        v35 = (_QWORD *)ConversationControlsBadgingAvatarViewController.__allocating_init(conversation:badgeImage:displayName:badgeBackgroundColor:)(v34, 0, 0, 0, objc_msgSend(v33, sel_clearColor));
        v99 = objc_msgSend(v35, sel_view);
        (*(void (**)(void))((*v24 & *v115) + 0x278))();
        v36 = *(uint64_t (**)(char *))((*v24 & *v35) + 0x58);
        v102 = v35;
        v37 = v36(v23);
        (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v19);
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ConversationControlsAction>);
        type metadata accessor for ConversationControlsAction();
        v38 = swift_allocObject();
        v98 = xmmword_1BD6441D0;
        *(_OWORD *)(v38 + 16) = xmmword_1BD6441D0;
        swift_storeEnumTagMultiPayload();
        v39 = ConversationController.visibleParticipants.getter();
        v40 = v112;
        specialized Collection.first.getter(v39, v112);
        swift_bridgeObjectRelease();
        outlined init with copy of FeatureEligibility?(v40, (uint64_t)v17, &demangling cache variable for type metadata for Participant?);
        v41 = v110;
        EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v17, 1, (uint64_t)v110);
        v103 = (uint64_t)v34;
        v100 = v38;
        v101 = v37;
        if (EnumTagSinglePayload == 1)
        {
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v40, &demangling cache variable for type metadata for Participant?);
          v96 = v99;
          goto LABEL_25;
        }
        v43 = v109;
        outlined init with take of StagedCollaboration((uint64_t)v17, v109, type metadata accessor for Participant);
        v44 = *(void **)(v43 + v41[7]);
        if (v44)
        {
          v45 = v44;
          outlined bridged method (pb) of @objc TUHandle.siriDisplayName.getter(v45);
          if (v46)
          {
            if ((objc_msgSend(v45, sel_shouldHideContact) & 1) != 0)
            {
              swift_bridgeObjectRetain();
              v47 = v105;
              PersonNameComponents.init()();
              PersonNameComponents.givenName.setter();
              PersonNameComponents.familyName.setter();
              if (one-time initialization token for initials != -1)
                swift_once();
              swift_beginAccess();
              v48 = (id)static NSPersonNameComponentsFormatter.initials;
              isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
              v50 = objc_msgSend(v48, sel_stringFromPersonNameComponents_, isa);

              v51 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              v53 = v52;

              (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v47, v108);
              __dst = v51;
              *(_QWORD *)&v118 = v53;
              lazy protocol witness table accessor for type String and conformance String();
              StringProtocol.localizedUppercase.getter();

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              outlined destroy of AccountUpdateNotice(v109, type metadata accessor for Participant);
              outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v112, &demangling cache variable for type metadata for Participant?);
              v96 = v99;
              goto LABEL_25;
            }

            swift_bridgeObjectRelease();
          }
          else
          {

          }
        }
        v67 = v109;
        v68 = v107;
        outlined init with copy of ConversationControlsAppLaunchButtonType(v109, v107, type metadata accessor for Participant);
        swift_retain();
        ParticipantContactDetailsCache.contactDetails(for:)(v68, v69, v70, v71, v72, v73, v74, v75, v98, *((uint64_t *)&v98 + 1), (uint64_t)v99, v100, v101, (uint64_t)v102, v103, v104, v105, v106, v107,
          v108);
        v76 = __dst;
        v77 = (int *)(id)__dst;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v110 = v77;

        swift_release();
        outlined destroy of AccountUpdateNotice(v68, type metadata accessor for Participant);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        outlined destroy of AccountUpdateNotice(v67, type metadata accessor for Participant);
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v40, &demangling cache variable for type metadata for Participant?);
        if (v76)
        {
          v78 = v110;
          v79 = objc_msgSend(v110, sel_givenName);
          static String._unconditionallyBridgeFromObjectiveC(_:)();

          v80 = objc_msgSend(v78, sel_familyName);
          static String._unconditionallyBridgeFromObjectiveC(_:)();

          __swift_storeEnumTagSinglePayload(v104, 1, 1, v108);
          PersonNameComponents.init(namePrefix:givenName:middleName:familyName:nameSuffix:nickname:phoneticRepresentation:)();
          _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
          v81 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
          v121._object = (void *)0xE000000000000000;
          v82._object = (void *)0x80000001BD673E60;
          v82._countAndFlagsBits = 0xD00000000000001ELL;
          v83.value._countAndFlagsBits = 0x61737265766E6F43;
          v83.value._object = (void *)0xEF74694B6E6F6974;
          v84._countAndFlagsBits = 0;
          v84._object = (void *)0xE000000000000000;
          v121._countAndFlagsBits = 0;
          NSLocalizedString(_:tableName:bundle:value:comment:)(v82, v83, (NSBundle)v81, v84, v121);

          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
          v85 = swift_allocObject();
          *(_OWORD *)(v85 + 16) = v98;
          v86 = (void *)objc_opt_self();
          v87 = PersonNameComponents._bridgeToObjectiveC()().super.isa;
          v88 = objc_msgSend(v86, sel_localizedStringFromPersonNameComponents_style_options_, v87, 1, 0);

          v89 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          v91 = v90;

          *(_QWORD *)(v85 + 56) = MEMORY[0x1E0DEA968];
          *(_QWORD *)(v85 + 64) = lazy protocol witness table accessor for type String and conformance String();
          *(_QWORD *)(v85 + 32) = v89;
          *(_QWORD *)(v85 + 40) = v91;
          v92 = String.init(format:_:)();
          v94 = v93;
          swift_bridgeObjectRelease();
          v95._countAndFlagsBits = v92;
          v95._object = v94;
          NSMutableAttributedString.__allocating_init(string:)(v95);
        }
        v96 = v99;
LABEL_25:
        __dst = 10;
        v118 = 0u;
        v119 = 0u;
        v120 = 6;
        _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
        v97._countAndFlagsBits = TUConversation.participantListDisplayName.getter((uint64_t)v96);
        NSMutableAttributedString.__allocating_init(string:)(v97);
      }

      a2 = v114;
    }
  }
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v54 = type metadata accessor for Logger();
  __swift_project_value_buffer(v54, (uint64_t)&static Logger.conversationControls);
  v55 = v115;
  v56 = Logger.logObject.getter();
  v57 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v56, v57))
  {
    v58 = swift_slowAlloc();
    v114 = a2;
    v59 = (uint8_t *)v58;
    v60 = swift_slowAlloc();
    v116[0] = v60;
    *(_DWORD *)v59 = 136315138;
    __dst = v25();
    *(_QWORD *)&v118 = v61;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Call);
    v62 = String.init<A>(reflecting:)();
    __dst = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v62, v63, v116);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v56, v57, "Failed to acquire video message call again recipe for call %s", v59, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v60, -1, -1);
    v64 = v59;
    a2 = v114;
    MEMORY[0x1C3B751B8](v64, -1, -1);

  }
  else
  {

  }
  v65 = type metadata accessor for ConversationControlsRecipe();
  return __swift_storeEnumTagSinglePayload(a2, 1, 1, v65);
}

uint64_t ConversationControlsRecipeGenerator.collaborationHUDRecipe(controlsManager:alternateAppearance:)@<X0>(_QWORD *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  void *v13;
  char *v14;
  uint64_t v15;
  id v17;
  void *v18;
  void *v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  void *v27;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  void *v36;
  uint64_t v37;
  id v38;
  id v39;
  Swift::String v40;
  Swift::String_optional v41;
  Swift::String v42;
  Swift::String v43;
  id v44;
  Swift::String v45;
  void *v46;
  uint64_t v47;
  id v48;
  void *v49;
  uint64_t v50;
  char *v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  char v57;
  Swift::String v58;

  v53 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  MEMORY[0x1E0C80A78](v5);
  v6 = type metadata accessor for ForegroundCollaborationState(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for StagedCollaboration(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for shared != -1)
    swift_once();
  if (((*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 280))() & 1) != 0)
  {
    v12 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    v13 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x290))();
    if (v13)
    {
      v52 = v13;
      v14 = (char *)(*(uint64_t (**)(void))((*v12 & *a1) + 0x778))();
      if (v14)
      {
        v51 = v14;
        (*(void (**)(void))((*v12 & *a1) + 0x7D8))();
        if (!swift_getEnumCaseMultiPayload())
        {
          outlined init with take of StagedCollaboration((uint64_t)v8, (uint64_t)v11, type metadata accessor for StagedCollaboration);
          v17 = ConversationControlsRecipeGenerator.recipeViewFor(_:in:managedBy:usingAlternateApperance:)((uint64_t)v51, v52, a1, a2 & 1);
          v19 = v18;
          v50 = v20;
          type metadata accessor for ConversationControlsManager(0);
          v21 = *(id *)&v11[*(int *)(v9 + 40)];
          v22 = SWShareableContent.collaborationInitiator.getter();

          v23 = (uint64_t *)&v11[*(int *)(v9 + 28)];
          v24 = *v23;
          v25 = (void *)v23[1];
          swift_bridgeObjectRetain();
          v26 = static ConversationControlsManager.collaborationHUDStrings(initiator:itemTitle:)();
          v28 = v27;
          v49 = v29;

          swift_bridgeObjectRelease();
          if ((a2 & 1) != 0)
          {
            v48 = (id)v26;
            if (one-time initialization token for bundleIDToItemType != -1)
              swift_once();
            v30 = *(_QWORD *)&v51[OBJC_IVAR____TtC15ConversationKit13ForegroundApp_bundleIdentifier];
            v31 = *(_QWORD *)&v51[OBJC_IVAR____TtC15ConversationKit13ForegroundApp_bundleIdentifier + 8];
            swift_beginAccess();
            v32 = static AppLaunchNotice.bundleIDToItemType;
            swift_bridgeObjectRetain();
            specialized Dictionary.subscript.getter(v30, v31, v32);
            v34 = v33;
            v36 = v35;
            swift_endAccess();
            swift_bridgeObjectRelease();
            if (v36)
            {
              __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
              v37 = swift_allocObject();
              *(_OWORD *)(v37 + 16) = xmmword_1BD6441D0;
              v38 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
              v47 = v24;
              v39 = v38;
              v58._object = (void *)0xE000000000000000;
              v40._countAndFlagsBits = v34;
              v40._object = v36;
              v41.value._countAndFlagsBits = 0x61737265766E6F43;
              v41.value._object = (void *)0xEF74694B6E6F6974;
              v42._countAndFlagsBits = 0;
              v42._object = (void *)0xE000000000000000;
              v58._countAndFlagsBits = 0;
              v43 = NSLocalizedString(_:tableName:bundle:value:comment:)(v40, v41, (NSBundle)v39, v42, v58);
              v46 = v36;

              v24 = v47;
              *(Swift::String *)(v37 + 32) = v43;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v26 = (uint64_t)v48;
            if (v25)
            {
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              v26 = v24;
              v28 = v25;
            }
          }
          v54 = 11;
          v55 = 0u;
          v56 = 0u;
          v57 = 6;
          _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
          v48 = v19;
          swift_bridgeObjectRetain();
          v44 = v17;
          v45._countAndFlagsBits = v26;
          v49 = v28;
          v45._object = v28;
          NSMutableAttributedString.__allocating_init(string:)(v45);
        }

        outlined destroy of AccountUpdateNotice((uint64_t)v8, type metadata accessor for ForegroundCollaborationState);
      }
      else
      {

      }
    }
  }
  v15 = type metadata accessor for ConversationControlsRecipe();
  return __swift_storeEnumTagSinglePayload(v53, 1, 1, v15);
}

void ConversationControlsRecipeGenerator.shareNameAndPhotoRecipe(nameAndPhotoUtilities:)()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  Swift::String v3;
  Swift::String_optional v4;
  Swift::String v5;
  Swift::String v6;
  Swift::String v7;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  MEMORY[0x1E0C80A78](v0);
  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  MEMORY[0x1E0C80A78](v1);
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
  v2 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v7._object = (void *)0xE000000000000000;
  v3._object = (void *)0x80000001BD673910;
  v3._countAndFlagsBits = 0xD000000000000021;
  v4.value._countAndFlagsBits = 0x61737265766E6F43;
  v4.value._object = (void *)0xEF74694B6E6F6974;
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  v7._countAndFlagsBits = 0;
  v6 = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, v4, (NSBundle)v2, v5, v7);

  NSMutableAttributedString.__allocating_init(string:)(v6);
}

uint64_t sub_1BD106AA8(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v7;
  void *v8;
  uint64_t v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t v12;
  void **v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v7 = (uint64_t *)(v4 + OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_personalDisplayName);
  swift_beginAccess();
  v8 = (void *)v7[1];
  if (v8)
  {
    v9 = *v7;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BD6443F0;
    swift_bridgeObjectRetain();
    v10._countAndFlagsBits = v9;
    v10._object = v8;
    NSMutableAttributedString.__allocating_init(string:)(v10);
  }
  v11 = MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ConversationControlsAction>);
  type metadata accessor for ConversationControlsAction();
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1BD6441D0;
  swift_storeEnumTagMultiPayload();
  v13 = (void **)(v4 + OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_personalAvatarView);
  swift_beginAccess();
  v14 = *v13;
  if (v14)
    v15 = objc_msgSend(v14, sel_hash);
  else
    v15 = 0;
  *(_QWORD *)(v5 - 224) = 13;
  *(_OWORD *)(v5 - 216) = 0u;
  *(_OWORD *)(v5 - 200) = 0u;
  *(_BYTE *)(v5 - 184) = 6;
  v16 = type metadata accessor for AttributedString();
  __swift_storeEnumTagSinglePayload(v3, 1, 1, v16);
  *(_QWORD *)(v5 - 128) = v12;
  *(_OWORD *)(v5 - 120) = 0u;
  *(_OWORD *)(v5 - 104) = 0u;
  *(_BYTE *)(v5 - 88) = 0;
  ConversationControlsRecipe.init(type:avatar:leadingAccessoryView:title:subtitles:subtitleLeadingBadge:fullSentence:showsInfoButton:showsSubtitleChevron:titleConfiguration:subtitleConfiguration:actions:leadingViewType:)(v5 - 224, 0, v14, 0, (unint64_t)v15, a1, v11, 0, v2, 0, 0, v3, OS_LOG_TYPE_DEFAULT, 0, 1, 1, (uint8_t *)(v5 - 128), 0, 0,
    0xFFu);
  v17 = type metadata accessor for ConversationControlsRecipe();
  if (__swift_getEnumTagSinglePayload(v2, 1, v17) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v2, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
    v18 = 1;
  }
  else
  {
    outlined init with take of StagedCollaboration(v2, v1, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
    v18 = 0;
  }
  return __swift_storeEnumTagSinglePayload(v1, v18, 1, v17);
}

void ConversationControlsRecipeGenerator.shareNameRecipe(nameAndPhotoUtilities:)()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  Swift::String v3;
  Swift::String_optional v4;
  Swift::String v5;
  Swift::String v6;
  Swift::String v7;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  MEMORY[0x1E0C80A78](v0);
  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  MEMORY[0x1E0C80A78](v1);
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
  v2 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v7._object = (void *)0xE000000000000000;
  v3._object = (void *)0x80000001BD6738F0;
  v3._countAndFlagsBits = 0xD000000000000017;
  v4.value._countAndFlagsBits = 0x61737265766E6F43;
  v4.value._object = (void *)0xEF74694B6E6F6974;
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  v7._countAndFlagsBits = 0;
  v6 = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, v4, (NSBundle)v2, v5, v7);

  NSMutableAttributedString.__allocating_init(string:)(v6);
}

uint64_t sub_1BD106E4C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v7;
  void *v8;
  uint64_t v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v7 = (uint64_t *)(v4 + OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_personalDisplayName);
  swift_beginAccess();
  v8 = (void *)v7[1];
  if (v8)
  {
    v9 = *v7;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BD6443F0;
    swift_bridgeObjectRetain();
    v10._countAndFlagsBits = v9;
    v10._object = v8;
    NSMutableAttributedString.__allocating_init(string:)(v10);
  }
  v11 = MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ConversationControlsAction>);
  type metadata accessor for ConversationControlsAction();
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1BD6441D0;
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)(v5 - 112) = v12;
  *(_OWORD *)(v5 - 104) = 0u;
  *(_OWORD *)(v5 - 88) = 0u;
  *(_BYTE *)(v5 - 72) = 0;
  *(_QWORD *)(v5 - 184) = 14;
  *(_OWORD *)(v5 - 176) = 0u;
  *(_OWORD *)(v5 - 160) = 0u;
  *(_BYTE *)(v5 - 144) = 6;
  v13 = type metadata accessor for AttributedString();
  __swift_storeEnumTagSinglePayload(v3, 1, 1, v13);
  ConversationControlsRecipe.init(type:avatar:leadingAccessoryView:title:subtitles:subtitleLeadingBadge:fullSentence:showsInfoButton:showsSubtitleChevron:titleConfiguration:subtitleConfiguration:actions:leadingViewType:)(v5 - 184, 0, 0, 0, 0, a1, v11, 0, v2, 0, 0, v3, OS_LOG_TYPE_DEFAULT, 0, 1, 1, (uint8_t *)(v5 - 112), 0, 0,
    0xFFu);
  v14 = type metadata accessor for ConversationControlsRecipe();
  if (__swift_getEnumTagSinglePayload(v2, 1, v14) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v2, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
    v15 = 1;
  }
  else
  {
    outlined init with take of StagedCollaboration(v2, v1, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
    v15 = 0;
  }
  return __swift_storeEnumTagSinglePayload(v1, v15, 1, v14);
}

void ConversationControlsRecipeGenerator.incomingNameUpdateRecipe(nameAndPhotoUtilities:controlsManager:)()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  Swift::String v3;
  Swift::String_optional v4;
  Swift::String v5;
  Swift::String v6;
  Swift::String v7;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  MEMORY[0x1E0C80A78](v0);
  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  MEMORY[0x1E0C80A78](v1);
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
  v2 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v7._object = (void *)0xE000000000000000;
  v3._object = (void *)0x80000001BD6738D0;
  v3._countAndFlagsBits = 0xD00000000000001DLL;
  v4.value._countAndFlagsBits = 0x61737265766E6F43;
  v4.value._object = (void *)0xEF74694B6E6F6974;
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  v7._countAndFlagsBits = 0;
  v6 = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, v4, (NSBundle)v2, v5, v7);

  NSMutableAttributedString.__allocating_init(string:)(v6);
}

uint64_t sub_1BD1071AC(void *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  void *v5;
  void *v6;
  Swift::String v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;

  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v2) + 0x270))();
  v4 = NameAndPhotoUtilities.pendingIncomingName(from:)();
  v6 = v5;
  swift_unknownObjectRelease();
  if (v6)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BD6443F0;
    v7._countAndFlagsBits = v4;
    v7._object = v6;
    NSMutableAttributedString.__allocating_init(string:)(v7);
  }
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v8 = type metadata accessor for Logger();
  __swift_project_value_buffer(v8, (uint64_t)&static Logger.conversationControls);
  v9 = Logger.logObject.getter();
  v10 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v11 = 0;
    _os_log_impl(&dword_1BD004000, v9, v10, "Failed to create recipe for .incomingNameUpdate since failed to find pending incoming name for call", v11, 2u);
    MEMORY[0x1C3B751B8](v11, -1, -1);
  }

  v12 = type metadata accessor for ConversationControlsRecipe();
  return __swift_storeEnumTagSinglePayload(v1, 1, 1, v12);
}

uint64_t ConversationControlsRecipeGenerator.liveVoicemailOngoingRecipe(controlsManager:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t (*v10)(void);
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  id v14;
  Swift::String v15;
  Swift::String_optional v16;
  Swift::String v17;
  Swift::String v18;
  uint64_t v19;
  _QWORD *v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint8_t *v29;
  _QWORD v31[6];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  char v38;
  Swift::String v39;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  MEMORY[0x1E0C80A78](v4);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  MEMORY[0x1E0C80A78](v5);
  v6 = type metadata accessor for ConversationControlsRecipe();
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x270);
  ((void (*)(uint64_t))v10)(v7);
  v12 = v11;
  ObjectType = swift_getObjectType();
  LOBYTE(v12) = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 136))(ObjectType, v12);
  swift_unknownObjectRelease();
  if ((v12 & 1) != 0)
  {
    if (SBUIIsSystemApertureEnabled())
    {
      v31[5] = v9;
      v32 = a2;
      v35 = 21;
      v36 = 0u;
      v37 = 0u;
      v38 = 6;
      _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
      v14 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
      v39._object = (void *)0xE000000000000000;
      v15._object = (void *)0x80000001BD673E80;
      v15._countAndFlagsBits = 0xD000000000000019;
      v16.value._countAndFlagsBits = 0x61737265766E6F43;
      v16.value._object = (void *)0xEF74694B6E6F6974;
      v17._countAndFlagsBits = 0;
      v17._object = (void *)0xE000000000000000;
      v39._countAndFlagsBits = 0;
      v18 = NSLocalizedString(_:tableName:bundle:value:comment:)(v15, v16, (NSBundle)v14, v17, v39);

      NSMutableAttributedString.__allocating_init(string:)(v18);
    }
  }
  else
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v19 = type metadata accessor for Logger();
    __swift_project_value_buffer(v19, (uint64_t)&static Logger.conversationControls);
    v20 = a1;
    v21 = Logger.logObject.getter();
    v22 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = swift_slowAlloc();
      v33 = v6;
      v24 = (uint8_t *)v23;
      v25 = swift_slowAlloc();
      v35 = v25;
      v32 = a2;
      *(_DWORD *)v24 = 136315138;
      v26 = v10();
      swift_getObjectType();
      v34 = v26;
      v27 = String.init<A>(describing:)();
      v34 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v27, v28, &v35);
      a2 = v32;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD004000, v21, v22, "liveVoicemailOngoingRecipe: No call in Live Voicemail, call: %s", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v25, -1, -1);
      v29 = v24;
      v6 = v33;
      MEMORY[0x1C3B751B8](v29, -1, -1);

    }
    else
    {

    }
  }
  return __swift_storeEnumTagSinglePayload(a2, 1, 1, v6);
}

uint64_t ConversationControlsRecipeGenerator.incomingGreenTea3PHUDRecipe(controlsManager:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  _QWORD *v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  void *v30;
  void *v31;
  Swift::String v32;
  _QWORD v34[52];

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  MEMORY[0x1E0C80A78](v7);
  v34[13] = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ConversationControlsRecipe();
  MEMORY[0x1E0C80A78](v9);
  v34[11] = (char *)v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for UUID();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v17 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x270);
  v34[15] = a1;
  v18 = v17(v13);
  objc_opt_self();
  v19 = swift_dynamicCastObjCClass();
  if (v19)
  {
    v20 = (void *)v19;
    v34[7] = v6;
    swift_unknownObjectRetain();
    v21 = specialized static ConversationControlsRecipeGenerator.makeVoipBadgeIcon(for:)(v20);
    v34[8] = v22;
    v34[9] = v23;
    swift_unknownObjectRelease();
    if (v21)
      v24 = v21;
    v34[2] = v18;
    swift_unknownObjectRetain();
    v34[10] = v21;
    v25 = (_QWORD *)specialized ConversationControlsBadgingAvatarViewController.__allocating_init(call:badgeImage:)((uint64_t)v20, v21);
    v26 = objc_msgSend(v20, sel_uniqueProxyIdentifierUUID);
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    v34[6] = (*(uint64_t (**)(char *))((*v16 & *v25) + 0x58))(v15);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    v34[1] = v25;
    v27 = objc_msgSend(v25, sel_view);
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
    v28 = objc_msgSend(v20, sel_displayName);
    v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v31 = v30;

    v32._countAndFlagsBits = v29;
    v32._object = v31;
    NSMutableAttributedString.__allocating_init(string:)(v32);
  }
  swift_unknownObjectRelease();
  return __swift_storeEnumTagSinglePayload(a2, 1, 1, v9);
}

uint64_t ConversationControlsRecipeGenerator.ongoingGreenTea3PHUDRecipe(controlsManager:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  void *v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  id v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  Swift::String v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  Swift::String v39;
  Swift::String_optional v40;
  Swift::String v41;
  Swift::String v42;
  id v44;
  void *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  Swift::String v50;
  void *v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  Swift::String v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  Swift::String v60;
  Swift::String_optional v61;
  Swift::String v62;
  Swift::String v63;
  uint64_t v64;
  id v65;
  void *v66;
  id v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  Swift::String v72;
  Swift::String v73;
  _QWORD v74[7];
  uint64_t v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  uint64_t v84;
  char *v85;
  char *v86;
  _QWORD v87[5];
  unsigned __int8 v88;
  uint64_t v89;
  __int128 v90;
  __int128 v91;
  char v92;
  Swift::String v93;
  Swift::String v94;

  v3 = v2;
  v6 = *v2;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  MEMORY[0x1E0C80A78](v7);
  v85 = (char *)v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  MEMORY[0x1E0C80A78](v9);
  v86 = (char *)v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ConversationControlsRecipe();
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x270);
  v16 = v15(v12);
  objc_opt_self();
  v17 = swift_dynamicCastObjCClass();
  if (v17)
  {
    v18 = (void *)v17;
    v74[1] = v15;
    v74[4] = v14;
    v74[5] = v16;
    v19 = ConversationControlsManager.heldCalls()();
    v74[6] = a2;
    v84 = v11;
    if (v19 >> 62)
    {
      swift_bridgeObjectRetain();
      v20 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v21 = v3;
    v22 = ConversationControlsRecipeGenerator.ongoingGreenTea3PLeadingAccessoryView(controlsManager:hasHeldCalls:)(a1, v20 > 0);
    v82 = v24;
    v83 = v23;
    v74[3] = v21;
    ConversationControlsRecipeGenerator.ongoingGreenTea3PActions(controlsManager:hasHeldCalls:)(a1, v20 > 0, (uint64_t)v87);
    v25 = v87[0];
    v79 = v87[2];
    v80 = v87[1];
    v77 = v87[4];
    v78 = v87[3];
    v76 = v88;
    v26 = objc_msgSend(v18, sel_status);
    v74[2] = v6;
    v81 = v25;
    if (v26 == 2)
    {
      swift_bridgeObjectRelease();
      v27 = objc_msgSend(v18, sel_displayName);
      v75 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v29 = v28;

      v30 = objc_msgSend(v18, sel_provider);
      v31 = objc_msgSend(v30, sel_localizedName);

      v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v34 = v33;

      v89 = v32;
      *(_QWORD *)&v90 = v34;
      swift_bridgeObjectRetain();
      v35._countAndFlagsBits = 2108704;
      v35._object = (void *)0xE300000000000000;
      String.append(_:)(v35);
      swift_bridgeObjectRelease();
      v36 = v89;
      v37 = v90;
      v38 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
      v93._object = (void *)0xE000000000000000;
      v39._object = (void *)0x80000001BD673EC0;
      v39._countAndFlagsBits = 0xD000000000000012;
      v40.value._countAndFlagsBits = 0x61737265766E6F43;
      v40.value._object = (void *)0xEF74694B6E6F6974;
      v41._countAndFlagsBits = 0;
      v41._object = (void *)0xE000000000000000;
      v93._countAndFlagsBits = 0;
      v42 = NSLocalizedString(_:tableName:bundle:value:comment:)(v39, v40, (NSBundle)v38, v41, v93);

      v89 = v36;
      *(_QWORD *)&v90 = v37;
      swift_bridgeObjectRetain();
      String.append(_:)(v42);
      swift_bridgeObjectRelease();
LABEL_15:
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    if (v20 >= 1)
    {
      if (v19 >> 62)
      {
        swift_bridgeObjectRetain();
        v64 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v64)
          goto LABEL_10;
      }
      else if (*(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_10:
        specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v19 & 0xC000000000000001) == 0, v19);
        if ((v19 & 0xC000000000000001) != 0)
          v44 = (id)MEMORY[0x1C3B73D18](0, v19);
        else
          v44 = *(id *)(v19 + 32);
        v45 = v44;
        swift_bridgeObjectRelease();
        v46 = objc_msgSend(v18, sel_displayName);
        v47 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        v49 = v48;

        v89 = v47;
        *(_QWORD *)&v90 = v49;
        swift_bridgeObjectRetain();
        v50._countAndFlagsBits = 2108704;
        v50._object = (void *)0xE300000000000000;
        String.append(_:)(v50);
        swift_bridgeObjectRelease();
        v29 = (void *)v90;
        v75 = v89;
        v51 = v45;
        v52 = objc_msgSend(v45, sel_displayName);
        v53 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        v55 = v54;

        v89 = v53;
        *(_QWORD *)&v90 = v55;
        swift_bridgeObjectRetain();
        v56._countAndFlagsBits = 2108704;
        v56._object = (void *)0xE300000000000000;
        String.append(_:)(v56);
        swift_bridgeObjectRelease();
        v57 = v89;
        v58 = v90;
        v59 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
        v94._object = (void *)0xE000000000000000;
        v60._object = (void *)0x80000001BD673EC0;
        v60._countAndFlagsBits = 0xD000000000000012;
        v61.value._countAndFlagsBits = 0x61737265766E6F43;
        v61.value._object = (void *)0xEF74694B6E6F6974;
        v62._countAndFlagsBits = 0;
        v62._object = (void *)0xE000000000000000;
        v94._countAndFlagsBits = 0;
        v63 = NSLocalizedString(_:tableName:bundle:value:comment:)(v60, v61, (NSBundle)v59, v62, v94);

        v89 = v57;
        *(_QWORD *)&v90 = v58;
        swift_bridgeObjectRetain();
        String.append(_:)(v63);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

LABEL_16:
        v89 = 23;
        v90 = 0u;
        v91 = 0u;
        v92 = 6;
        _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
        outlined copy of ConversationControlsRecipe.View?(v22, v83);
        v73._countAndFlagsBits = v75;
        v73._object = v29;
        NSMutableAttributedString.__allocating_init(string:)(v73);
      }
    }
    swift_bridgeObjectRelease();
    v65 = objc_msgSend(v18, sel_displayName);
    v75 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v29 = v66;

    v67 = objc_msgSend(v18, sel_provider);
    v68 = objc_msgSend(v67, sel_localizedName);

    v69 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v71 = v70;

    v89 = v69;
    *(_QWORD *)&v90 = v71;
    swift_bridgeObjectRetain();
    v72._countAndFlagsBits = 2108704;
    v72._object = (void *)0xE300000000000000;
    String.append(_:)(v72);
    goto LABEL_15;
  }
  swift_unknownObjectRelease();
  return __swift_storeEnumTagSinglePayload(a2, 1, 1, v11);
}

uint64_t ConversationControlsRecipeGenerator.outgoingScreenSharingRequestHUDRecipe(controlsManager:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  void *v25;
  void *v26;
  id v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  id v36;
  Swift::String v37;
  Swift::String_optional v38;
  Swift::String v39;
  uint64_t v40;
  void *v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  Class isa;
  id v48;
  void *v49;
  void *v50;
  void *v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  id v64;
  Swift::String v65;
  Swift::String_optional v66;
  Swift::String v67;
  Swift::String v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  Swift::String v72;
  id v73;
  __int128 v74;
  uint64_t v75;
  id v76;
  id v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  id v81;
  uint64_t v82;
  char *v83;
  char *v84;
  char *v85;
  uint64_t v86;
  id v87[3];
  __int128 v88;
  char v89;
  Swift::String v90;
  Swift::String v91;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  MEMORY[0x1E0C80A78](v4);
  v84 = (char *)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  MEMORY[0x1E0C80A78](v6);
  v85 = (char *)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ConversationControlsRecipe();
  MEMORY[0x1E0C80A78](v8);
  v83 = (char *)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for PersonNameComponents();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for Participant(0);
  v18 = MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v69 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v86 = (uint64_t)&v69 - v21;
  if (objc_msgSend(*(id *)((char *)a1 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_featureFlags), sel_requestToScreenShareEnabled))
  {
    v22 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x290))();
    if (v22)
    {
      v23 = v22;
      if (objc_msgSend(v22, sel_state) != (id)3 || !objc_msgSend(v23, sel_avMode))
      {

        goto LABEL_11;
      }
      v82 = v8;
      v24 = v23;
      specialized Conversation.currentScreenSharingRequest(ignoring:)();
      v26 = v25;

      if (!v26)
      {

        goto LABEL_10;
      }
      v81 = v24;
      v80 = a2;
      v27 = objc_msgSend(v26, sel_handle);
      ConversationController.participant(with:)();

      if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v17) == 1)
      {

        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v16, &demangling cache variable for type metadata for Participant?);
        a2 = v80;
LABEL_10:
        v8 = v82;
        goto LABEL_11;
      }
      v33 = v86;
      outlined init with take of StagedCollaboration((uint64_t)v16, v86, type metadata accessor for Participant);
      v79 = v26;
      v77 = ConversationControlsRecipeGenerator.recipeViewFor(_:in:managedBy:)(v26, (uint64_t)v81, a1);
      v76 = v34;
      v75 = v35;
      v73 = (id)objc_opt_self();
      v36 = objc_msgSend(v73, sel_conversationKit);
      v90._object = (void *)0xE000000000000000;
      v37._object = (void *)0x80000001BD673750;
      v37._countAndFlagsBits = 0xD000000000000024;
      v38.value._countAndFlagsBits = 0x61737265766E6F43;
      v38.value._object = (void *)0xEF74694B6E6F6974;
      v39._countAndFlagsBits = 0;
      v39._object = (void *)0xE000000000000000;
      v90._countAndFlagsBits = 0;
      v72 = NSLocalizedString(_:tableName:bundle:value:comment:)(v37, v38, (NSBundle)v36, v39, v90);

      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v40 = swift_allocObject();
      v74 = xmmword_1BD6441D0;
      v71 = (_QWORD *)v40;
      *(_OWORD *)(v40 + 16) = xmmword_1BD6441D0;
      v41 = *(void **)(v33 + *(int *)(v17 + 28));
      if (v41)
      {
        v42 = v41;
        outlined bridged method (pb) of @objc TUHandle.siriDisplayName.getter(v42);
        v70 = v44;
        if (v43)
        {
          v45 = v43;
          if ((objc_msgSend(v42, sel_shouldHideContact) & 1) != 0)
          {
            v69 = v45;
            swift_bridgeObjectRetain();
            PersonNameComponents.init()();
            PersonNameComponents.givenName.setter();
            PersonNameComponents.familyName.setter();
            if (one-time initialization token for initials != -1)
              swift_once();
            swift_beginAccess();
            v46 = (id)static NSPersonNameComponentsFormatter.initials;
            isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
            v48 = objc_msgSend(v46, sel_stringFromPersonNameComponents_, isa);

            v49 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
            v51 = v50;

            (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
            v87[0] = v49;
            v87[1] = v51;
            lazy protocol witness table accessor for type String and conformance String();
            StringProtocol.localizedUppercase.getter();

            swift_bridgeObjectRelease();
            v52 = 0;
LABEL_25:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            v60 = Participant.name(_:)();
            v62 = v61;
            swift_bridgeObjectRelease();
            v63 = v71;
            v71[7] = MEMORY[0x1E0DEA968];
            v63[8] = lazy protocol witness table accessor for type String and conformance String();
            v63[4] = v60;
            v63[5] = v62;
            String.init(format:_:)();
            swift_bridgeObjectRelease();
            v87[0] = (id)24;
            *(_OWORD *)&v87[1] = 0u;
            v88 = 0u;
            v89 = 6;
            _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
            v72._object = v76;
            v72._countAndFlagsBits = (uint64_t)v77;
            v64 = objc_msgSend(v73, sel_conversationKit);
            v91._object = (void *)0xE000000000000000;
            v65._countAndFlagsBits = 0x535F4E4545524353;
            v65._object = (void *)0xEE00474E49524148;
            v66.value._countAndFlagsBits = 0x61737265766E6F43;
            v66.value._object = (void *)0xEF74694B6E6F6974;
            v67._countAndFlagsBits = 0;
            v67._object = (void *)0xE000000000000000;
            v91._countAndFlagsBits = 0;
            v68 = NSLocalizedString(_:tableName:bundle:value:comment:)(v65, v66, (NSBundle)v64, v67, v91);

            NSMutableAttributedString.__allocating_init(string:)(v68);
          }

          swift_bridgeObjectRelease();
        }
        else
        {

        }
      }
      outlined init with copy of ConversationControlsAppLaunchButtonType(v33, (uint64_t)v20, type metadata accessor for Participant);
      swift_retain();
      ParticipantContactDetailsCache.contactDetails(for:)((uint64_t)v20, v53, v54, v55, v56, v57, v58, v59, v69, v70, (uint64_t)v71, v72._countAndFlagsBits, (uint64_t)v72._object, (uint64_t)v73, v74, *((uint64_t *)&v74 + 1), v75, (uint64_t)v76, (uint64_t)v77,
        v78);
      v52 = v87[0];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_release();
      outlined destroy of AccountUpdateNotice((uint64_t)v20, type metadata accessor for Participant);
      goto LABEL_25;
    }
  }
LABEL_11:
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v28 = type metadata accessor for Logger();
  __swift_project_value_buffer(v28, (uint64_t)&static Logger.conversationControls);
  v29 = Logger.logObject.getter();
  v30 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v29, v30))
  {
    v31 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v31 = 0;
    _os_log_impl(&dword_1BD004000, v29, v30, "Cannot generate outgoing screen sharing request HUD", v31, 2u);
    MEMORY[0x1C3B751B8](v31, -1, -1);
  }

  return __swift_storeEnumTagSinglePayload(a2, 1, 1, v8);
}

uint64_t ConversationControlsRecipeGenerator.incomingScreenSharingRequestHUDRecipe(controlsManager:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint8_t *v25;
  uint8_t *v26;
  id v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  Swift::String v37;
  _QWORD v38[12];
  uint64_t v39;
  id v40;
  _QWORD v41[3];
  __int128 v42;
  char v43;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  MEMORY[0x1E0C80A78](v4);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  MEMORY[0x1E0C80A78](v5);
  v6 = type metadata accessor for ConversationControlsRecipe();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Participant(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(void **)((char *)a1 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_featureFlags);
  if ((objc_msgSend(v15, sel_requestToScreenShareEnabled) & 1) != 0
    || objc_msgSend(v15, sel_usesModernScreenSharingFromMessages))
  {
    v16 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x290))();
    if (v16)
    {
      v17 = v16;
      if (objc_msgSend(v16, sel_state) == (id)3
        && objc_msgSend(v17, sel_avMode)
        && (v38[11] = v8,
            v17 = v17,
            specialized Conversation.currentScreenSharingRequest(ignoring:)(),
            v19 = v18,
            v17,
            v19))
      {
        v40 = v17;
        v39 = a2;
        v20 = objc_msgSend(v19, sel_handle);
        ConversationController.participant(with:)();

        if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12) != 1)
        {
          outlined init with take of StagedCollaboration((uint64_t)v11, (uint64_t)v14, type metadata accessor for Participant);
          v38[10] = v19;
          v28 = ConversationControlsRecipeGenerator.recipeViewFor(_:in:managedBy:)(v19, (uint64_t)v40, a1);
          v30 = v29;
          v38[4] = v29;
          v38[6] = v31;
          type metadata accessor for ConversationControlsManager(0);
          v32 = static ConversationControlsManager.screenShareHUDStrings(initiator:incomingRequest:)((uint64_t)v14, 1);
          v34 = v33;
          v38[1] = v35;
          v38[0] = v36;
          v41[0] = 25;
          *(_OWORD *)&v41[1] = 0u;
          v42 = 0u;
          v43 = 6;
          _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
          v38[8] = v30;
          v38[9] = v28;
          v37._countAndFlagsBits = v32;
          v37._object = v34;
          NSMutableAttributedString.__allocating_init(string:)(v37);
        }

        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v11, &demangling cache variable for type metadata for Participant?);
        a2 = v39;
      }
      else
      {

      }
    }
  }
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v21 = type metadata accessor for Logger();
  __swift_project_value_buffer(v21, (uint64_t)&static Logger.conversationControls);
  v22 = Logger.logObject.getter();
  v23 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v22, v23))
  {
    v24 = a2;
    v25 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v25 = 0;
    _os_log_impl(&dword_1BD004000, v22, v23, "Cannot generate incoming screen sharing request HUD", v25, 2u);
    v26 = v25;
    a2 = v24;
    MEMORY[0x1C3B751B8](v26, -1, -1);
  }

  return __swift_storeEnumTagSinglePayload(a2, 1, 1, v6);
}

void ConversationControlsRecipeGenerator.enhancedEmergencyMediaUploadRequestRecipe(controlsManager:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  id v13;
  Swift::String v14;
  Swift::String_optional v15;
  Swift::String v16;
  Swift::String v17;
  _QWORD v18[43];
  Swift::String v19;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  MEMORY[0x1E0C80A78](v4);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  MEMORY[0x1E0C80A78](v5);
  v18[10] = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ConversationControlsRecipe();
  MEMORY[0x1E0C80A78](v7);
  v18[6] = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v18[4] = a1;
  v18[5] = a2;
  v18[11] = v7;
  v9 = type metadata accessor for Logger();
  v18[2] = __swift_project_value_buffer(v9, (uint64_t)&static Logger.conversationControls);
  v10 = Logger.logObject.getter();
  v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v12 = 0;
    _os_log_impl(&dword_1BD004000, v10, v11, "EnhancedEmergency: going to make recipe for enhancedEmergencyMediaUploadRequest", v12, 2u);
    MEMORY[0x1C3B751B8](v12, -1, -1);
  }

  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
  v13 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v19._object = (void *)0xE000000000000000;
  v14._object = (void *)0x80000001BD673EE0;
  v14._countAndFlagsBits = 0xD000000000000011;
  v15.value._countAndFlagsBits = 0x61737265766E6F43;
  v15.value._object = (void *)0xEF74694B6E6F6974;
  v16._countAndFlagsBits = 0;
  v16._object = (void *)0xE000000000000000;
  v19._countAndFlagsBits = 0;
  v17 = NSLocalizedString(_:tableName:bundle:value:comment:)(v14, v15, (NSBundle)v13, v16, v19);

  NSMutableAttributedString.__allocating_init(string:)(v17);
}

void ConversationControlsRecipeGenerator.enhancedEmergencyVideoStreamingRequestRecipe(controlsManager:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  id v13;
  Swift::String v14;
  Swift::String_optional v15;
  Swift::String v16;
  Swift::String v17;
  _QWORD v18[43];
  Swift::String v19;

  v18[4] = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  MEMORY[0x1E0C80A78](v3);
  v18[9] = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  MEMORY[0x1E0C80A78](v5);
  v18[10] = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ConversationControlsRecipe();
  MEMORY[0x1E0C80A78](v7);
  v18[6] = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v18[11] = v7;
  v18[5] = a2;
  v9 = type metadata accessor for Logger();
  v18[2] = __swift_project_value_buffer(v9, (uint64_t)&static Logger.conversationControls);
  v10 = Logger.logObject.getter();
  v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v12 = 0;
    _os_log_impl(&dword_1BD004000, v10, v11, "EnhancedEmergency: going to make recipe for enhancedEmergencyVideoStreamingRequestRecipe", v12, 2u);
    MEMORY[0x1C3B751B8](v12, -1, -1);
  }

  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
  v13 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v19._object = (void *)0xE000000000000000;
  v14._object = (void *)0x80000001BD673F20;
  v14._countAndFlagsBits = 0xD000000000000016;
  v15.value._countAndFlagsBits = 0x61737265766E6F43;
  v15.value._object = (void *)0xEF74694B6E6F6974;
  v16._countAndFlagsBits = 0;
  v16._object = (void *)0xE000000000000000;
  v19._countAndFlagsBits = 0;
  v17 = NSLocalizedString(_:tableName:bundle:value:comment:)(v14, v15, (NSBundle)v13, v16, v19);

  NSMutableAttributedString.__allocating_init(string:)(v17);
}

void ConversationControlsRecipeGenerator.enhancedEmergencyRTTMediaUploadRequestRecipe(controlsManager:)()
{
  os_log_type_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  void (*v4)(uint64_t);
  const char *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_93();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v24 = v9;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_77();
  v13 = v12 - v11;
  v14 = type metadata accessor for ConversationControlsRecipe();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_77();
  v18 = v17 - v16;
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v19 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v19, (uint64_t)&static Logger.conversationControls);
  v20 = Logger.logObject.getter();
  v21 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_4_14(v21))
  {
    v22 = (uint8_t *)OUTLINED_FUNCTION_105();
    *(_WORD *)v22 = 0;
    _os_log_impl(&dword_1BD004000, v20, v0, v6, v22, 2u);
    OUTLINED_FUNCTION_60();
  }

  v4(v8);
  if (__swift_getEnumTagSinglePayload(v13, 1, v14) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v13, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
    OUTLINED_FUNCTION_19_3(v24, 1);
  }
  else
  {
    outlined init with take of StagedCollaboration(v13, v18, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
    outlined destroy of ConversationControlsType(v18);
    *(_QWORD *)v18 = v2;
    *(_OWORD *)(v18 + 8) = 0u;
    *(_OWORD *)(v18 + 24) = 0u;
    *(_BYTE *)(v18 + 40) = 6;
    v23 = v18 + *(int *)(v14 + 72);
    outlined consume of SystemApertureElement?(*(void **)v23, *(_QWORD *)(v23 + 8), *(void **)(v23 + 16), *(_QWORD *)(v23 + 24), *(void **)(v23 + 32), *(_QWORD *)(v23 + 40), *(void **)(v23 + 48));
    *(_QWORD *)v23 = 1;
    *(_OWORD *)(v23 + 8) = 0u;
    *(_OWORD *)(v23 + 24) = 0u;
    *(_OWORD *)(v23 + 40) = 0u;
    *(_OWORD *)(v23 + 56) = 0u;
    *(_BYTE *)(v23 + 72) = 0;
    outlined init with copy of ConversationControlsAppLaunchButtonType(v18, v24, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
    OUTLINED_FUNCTION_19_3(v24, 0);
    outlined destroy of AccountUpdateNotice(v18, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
  }
  OUTLINED_FUNCTION_52_1();
}

void ConversationControlsRecipeGenerator.swapCallsRecipe(shownCall:controlsManager:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v9;
  uint64_t v10;
  void (**v11)(char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t ObjectType;
  void *v19;
  unsigned int v20;
  uint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  id v31;
  uint64_t (*v32)(char *);
  id v33;
  void *v34;
  id v35;
  void *v36;
  id v37;
  Swift::String v38;
  Swift::String_optional v39;
  Swift::String v40;
  Swift::String v41;
  _QWORD v42[12];
  uint64_t v43;
  void (**v44)(char *, uint64_t);
  uint64_t v45;
  uint64_t __dst;
  uint64_t v47;
  char v48;
  Swift::String v49;

  v5 = v4;
  v42[11] = a4;
  v9 = *v4;
  v10 = type metadata accessor for UUID();
  v11 = *(void (***)(char *, uint64_t))(v10 - 8);
  v43 = v10;
  v44 = v11;
  MEMORY[0x1E0C80A78](v10);
  v42[1] = (char *)v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  MEMORY[0x1E0C80A78](v13);
  v42[8] = (char *)v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  ObjectType = swift_getObjectType();
  v19 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 160))(ObjectType, a2);
  v20 = objc_msgSend(v19, sel_isSystemProvider);

  v45 = ObjectType;
  v42[9] = v5;
  v42[10] = a3;
  if (v20)
  {
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIImageView);
    v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    static UIImageView.appIcon(for:)(v21, v22);
    v24 = v23;
    swift_bridgeObjectRelease();
    v25 = objc_msgSend(v24, sel_image);

  }
  else
  {
    v25 = specialized static ConversationControlsRecipeGenerator.makeVoipBadgeIcon(for:)(a1, v9, ObjectType, a2);
    if (v25)
      swift_bridgeObjectRelease();
  }
  v26 = v43;
  v27 = type metadata accessor for ConversationControlsBadgingAvatarViewController();
  v42[7] = v25;
  v28 = swift_unknownObjectRetain();
  v42[4] = v27;
  v29 = v45;
  v30 = (_QWORD *)specialized ConversationControlsBadgingAvatarViewController.__allocating_init(call:badgeImage:)(v28, v25, v27, v45, a2);
  v31 = objc_msgSend(v30, sel_view);
  (*(void (**)(uint64_t, uint64_t))(a2 + 48))(v29, a2);
  UUID.init(uuidString:)();
  swift_bridgeObjectRelease();
  if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v26) != 1)
  {
    v32 = *(uint64_t (**)(char *))((*MEMORY[0x1E0DEEDD8] & *v30) + 0x58);
    v42[5] = v30;
    v42[6] = v32(v17);
    v44[1](v17, v26);
    (*(void (**)(uint64_t, uint64_t))(a2 + 64))(v29, a2);
    objc_opt_self();
    if (swift_dynamicCastObjCClass())
    {
      v33 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
      v34 = TUCall.associatedCallGroup(in:)(v33);

      if (v34)
      {
        swift_bridgeObjectRelease();
        v35 = objc_msgSend(v34, sel_displayName);
        static String._unconditionallyBridgeFromObjectiveC(_:)();

      }
    }
    __dst = a1;
    v47 = a2;
    v48 = 5;
    v36 = (void *)objc_opt_self();
    swift_unknownObjectRetain();
    v44 = (void (**)(char *, uint64_t))v31;
    v42[3] = v36;
    v37 = objc_msgSend(v36, sel_conversationKit);
    v49._object = (void *)0xE000000000000000;
    v38._object = (void *)0x80000001BD673F40;
    v38._countAndFlagsBits = 0xD000000000000010;
    v39.value._countAndFlagsBits = 0x61737265766E6F43;
    v39.value._object = (void *)0xEF74694B6E6F6974;
    v40._countAndFlagsBits = 0;
    v40._object = (void *)0xE000000000000000;
    v49._countAndFlagsBits = 0;
    v41 = NSLocalizedString(_:tableName:bundle:value:comment:)(v38, v39, (NSBundle)v37, v40, v49);

    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSMutableAttributedString);
    NSMutableAttributedString.__allocating_init(string:)(v41);
  }
  __break(1u);
}

uint64_t ConversationControlsRecipeGenerator.incomingRemoteControlRequestHUDRecipe(controlsManager:requestingParticipantDisplayName:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  _QWORD *v25;
  uint64_t (*v26)(char *);
  id v27;
  Swift::String v28;
  Swift::String_optional v29;
  Swift::String v30;
  Swift::String v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  _BOOL4 v35;
  uint64_t v36;
  uint8_t *v37;
  _QWORD *v39;
  id v40;
  void *v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  char *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  Swift::String v50;

  v48 = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  MEMORY[0x1E0C80A78](v7);
  v47 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  MEMORY[0x1E0C80A78](v9);
  v46 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = type metadata accessor for ConversationControlsRecipe();
  MEMORY[0x1E0C80A78](v49);
  v45 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for UUID();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v18 = (void *)(*(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x290))(v14);
  if (v18)
  {
    v19 = v18;
    if (objc_msgSend(v18, sel_state) == (id)3 && objc_msgSend(v19, sel_avMode))
    {
      static ConversationControlsRecipeGenerator.assetsForDefaultHUD(controlsManager:conversation:)();
      v42 = v20;
      v22 = v21;
      v44 = type metadata accessor for ConversationControlsBadgingAvatarViewController();
      v41 = v22;
      v23 = objc_msgSend(v22, sel_image);
      v24 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
      swift_bridgeObjectRetain();
      v40 = v19;
      v25 = (_QWORD *)ConversationControlsBadgingAvatarViewController.__allocating_init(conversation:badgeImage:displayName:badgeBackgroundColor:)(v40, v23, a2, a3, v24);
      v43 = objc_msgSend(v25, sel_view);
      (*(void (**)(void))((*v17 & *a1) + 0x278))();
      v26 = *(uint64_t (**)(char *))((*v17 & *v25) + 0x58);
      v39 = v25;
      v44 = v26(v16);
      (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
      _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
      v27 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
      v50._object = (void *)0xE000000000000000;
      v28._object = (void *)0x80000001BD673F60;
      v28._countAndFlagsBits = 0xD00000000000001CLL;
      v29.value._countAndFlagsBits = 0x61737265766E6F43;
      v29.value._object = (void *)0xEF74694B6E6F6974;
      v30._countAndFlagsBits = 0;
      v30._object = (void *)0xE000000000000000;
      v50._countAndFlagsBits = 0;
      v31 = NSLocalizedString(_:tableName:bundle:value:comment:)(v28, v29, (NSBundle)v27, v30, v50);

      NSMutableAttributedString.__allocating_init(string:)(v31);
    }

  }
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v32 = type metadata accessor for Logger();
  __swift_project_value_buffer(v32, (uint64_t)&static Logger.conversationControls);
  v33 = Logger.logObject.getter();
  v34 = static os_log_type_t.error.getter();
  v35 = os_log_type_enabled(v33, v34);
  v36 = v49;
  if (v35)
  {
    v37 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v37 = 0;
    _os_log_impl(&dword_1BD004000, v33, v34, "Cannot generate incoming remote control request HUD", v37, 2u);
    MEMORY[0x1C3B751B8](v37, -1, -1);
  }

  return __swift_storeEnumTagSinglePayload(v48, 1, 1, v36);
}

uint64_t ConversationControlsRecipeGenerator.rejectedRemoteControlRequestHUDRecipe(controlsManager:context:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  _QWORD *v21;
  uint64_t (*v22)(char *);
  id v23;
  Swift::String v24;
  Swift::String_optional v25;
  Swift::String v26;
  Swift::String v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  _BOOL4 v31;
  uint64_t v32;
  uint64_t v33;
  uint8_t *v34;
  uint8_t *v35;
  _QWORD v37[3];
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  Swift::String v47;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  MEMORY[0x1E0C80A78](v4);
  v45 = (char *)v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  MEMORY[0x1E0C80A78](v6);
  v46 = type metadata accessor for ConversationControlsRecipe();
  MEMORY[0x1E0C80A78](v46);
  v44 = (char *)v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UUID();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v14 = (void *)(*(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x290))(v10);
  if (v14)
  {
    v15 = v14;
    if (objc_msgSend(v14, sel_state) == (id)3 && objc_msgSend(v15, sel_avMode))
    {
      v41 = a2;
      static ConversationControlsRecipeGenerator.assetsForDefaultHUD(controlsManager:conversation:)();
      v40 = v16;
      v18 = v17;
      type metadata accessor for ConversationControlsBadgingAvatarViewController();
      v39 = v18;
      v19 = objc_msgSend(v18, sel_image);
      v20 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
      v38 = v15;
      v21 = (_QWORD *)ConversationControlsBadgingAvatarViewController.__allocating_init(conversation:badgeImage:displayName:badgeBackgroundColor:)(v38, v19, 0x796C6C6942, 0xE500000000000000, v20);
      v42 = objc_msgSend(v21, sel_view);
      (*(void (**)(void))((*v13 & *a1) + 0x278))();
      v22 = *(uint64_t (**)(char *))((*v13 & *v21) + 0x58);
      v37[2] = v21;
      v43 = v22(v12);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
      _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
      v23 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
      v47._object = (void *)0xE000000000000000;
      v24._object = (void *)0x80000001BD674040;
      v24._countAndFlagsBits = 0xD000000000000017;
      v25.value._countAndFlagsBits = 0x61737265766E6F43;
      v25.value._object = (void *)0xEF74694B6E6F6974;
      v26._countAndFlagsBits = 0;
      v26._object = (void *)0xE000000000000000;
      v47._countAndFlagsBits = 0;
      v27 = NSLocalizedString(_:tableName:bundle:value:comment:)(v24, v25, (NSBundle)v23, v26, v47);

      NSMutableAttributedString.__allocating_init(string:)(v27);
    }

  }
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v28 = type metadata accessor for Logger();
  __swift_project_value_buffer(v28, (uint64_t)&static Logger.conversationControls);
  v29 = Logger.logObject.getter();
  v30 = static os_log_type_t.error.getter();
  v31 = os_log_type_enabled(v29, v30);
  v32 = v46;
  if (v31)
  {
    v33 = a2;
    v34 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v34 = 0;
    _os_log_impl(&dword_1BD004000, v29, v30, "Cannot generate incoming remote control request HUD", v34, 2u);
    v35 = v34;
    a2 = v33;
    MEMORY[0x1C3B751B8](v35, -1, -1);
  }

  return __swift_storeEnumTagSinglePayload(a2, 1, 1, v32);
}

uint64_t ConversationControlsRecipeGenerator.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t ConversationControlsRecipeGenerator.__deallocating_deinit()
{
  ConversationControlsRecipeGenerator.deinit();
  return swift_deallocClassInstance();
}

uint64_t ConversationControlsRecipeGenerator.init()()
{
  uint64_t v0;
  void *v1;
  id v2;

  if (one-time initialization token for shared != -1)
    swift_once();
  v1 = static Features.shared;
  *(_QWORD *)(v0 + 16) = static Features.shared;
  type metadata accessor for SystemApertureIconFactory();
  v2 = v1;
  *(_QWORD *)(v0 + 24) = swift_initStaticObject();
  return v0;
}

void *Call.isFromMessagesScreenShare.getter()
{
  void *result;

  objc_opt_self();
  result = (void *)swift_dynamicCastObjCClass();
  if (result)
    return (void *)(objc_msgSend(result, sel_originatingUIType) == 32);
  return result;
}

id static ConversationControlsRecipeGenerator.badgeBackgroundColor(forCall:)()
{
  void *v0;
  char **v1;

  objc_opt_self();
  v0 = (void *)swift_dynamicCastObjCClass();
  if (v0 && (objc_msgSend(v0, sel_isRecording) & 1) != 0)
    v1 = &selRef_systemRedColor;
  else
    v1 = &selRef_clearColor;
  return objc_msgSend((id)objc_opt_self(), *v1);
}

void ConversationControlsRecipeGenerator.buttonShelfActions(controlsManager:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  char v12;
  id v13;
  id v14;
  uint64_t v15;
  __n128 *v16;
  uint64_t v17;
  char *v18;
  _OWORD v19[2];
  char v20;

  OUTLINED_FUNCTION_93();
  v3 = v2;
  v5 = v4;
  v6 = type metadata accessor for ConversationControlsAction();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_37_18();
  MEMORY[0x1E0C80A78](v7);
  if ((OUTLINED_FUNCTION_81_7(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v3) + 0x320)) & 1) == 0)
  {
    *(_QWORD *)&v19[0] = MEMORY[0x1E0DEE9D8];
    v13 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
    v14 = objc_msgSend(v13, sel_userInterfaceIdiom);

    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ConversationControlsAction>);
    OUTLINED_FUNCTION_78_8();
    v15 = swift_allocObject();
    if (v14 == (id)5)
    {
      *(_OWORD *)(v15 + 16) = xmmword_1BD645380;
      *((_BYTE *)v13 + v15) = 0;
    }
    else
    {
      OUTLINED_FUNCTION_77_6((__n128 *)v15, (__n128)xmmword_1BD646740);
      swift_storeEnumTagMultiPayload();
      *((_BYTE *)v13 + v1) = 0;
    }
    OUTLINED_FUNCTION_39_23();
    swift_storeEnumTagMultiPayload();
LABEL_11:
    specialized Array.append<A>(contentsOf:)();
    OUTLINED_FUNCTION_58_13();
    v18 = (char *)&loc_1BD10DB10
        + dword_1BD10DE04[OUTLINED_FUNCTION_81_7(*(uint64_t (**)(void))(v17 + 2112)) >> 5];
    __asm { BR              X10 }
  }
  OUTLINED_FUNCTION_58_13();
  if ((OUTLINED_FUNCTION_81_7(*(uint64_t (**)(void))(v8 + 2152)) & 1) == 0)
  {
    *(_QWORD *)&v19[0] = MEMORY[0x1E0DEE9D8];
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ConversationControlsAction>);
    OUTLINED_FUNCTION_78_8();
    v16 = (__n128 *)swift_allocObject();
    OUTLINED_FUNCTION_77_6(v16, (__n128)xmmword_1BD645380);
    swift_storeEnumTagMultiPayload();
    *(_BYTE *)(v0 + v1) = 1;
    OUTLINED_FUNCTION_39_23();
    goto LABEL_11;
  }
  if (one-time initialization token for avLessLeaveConfirmationActions != -1)
    swift_once();
  v9 = static ConversationControlsAction.avLessLeaveConfirmationActions;
  swift_bridgeObjectRetain();
  static ConversationHUDControlsButtonShelfView.Configuration.fillEqually.getter((uint64_t)v19);
  v11 = v19[0];
  v10 = v19[1];
  v12 = v20 | 0x80;
  *(_QWORD *)v5 = v9;
  *(_OWORD *)(v5 + 8) = v11;
  *(_OWORD *)(v5 + 24) = v10;
  *(_BYTE *)(v5 + 40) = v12;
  OUTLINED_FUNCTION_52_1();
}

void ConversationControlsRecipeGenerator.makeActiveFaceTimeCallSystemApertureElement(for:alertingStyle:)(_QWORD *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  char v12;
  void *v13;
  uint64_t (*v14)(void);
  uint64_t v15;
  void *v16;
  id v17;
  int v18;
  void *v19;
  id v20;
  int v21;
  id v22;
  id v23;
  _UNKNOWN **v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  char *v29;
  _UNKNOWN **v30;
  _UNKNOWN **v31;
  char *v32;
  _UNKNOWN **v33;
  char *v34;
  char v35;
  uint64_t v36;
  char v37;
  void *v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  id v46;
  objc_class *v47;
  id v48;
  char *v49;
  id v50;
  id v51;
  _UNKNOWN **v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  void *v57;
  uint64_t v58;
  uint64_t v59[3];
  uint64_t ObjectType;
  uint64_t v61;
  _QWORD v62[5];
  uint64_t v63;
  _QWORD v64[10];
  _QWORD v65[10];
  _BYTE v66[80];
  _QWORD __src[10];
  _BYTE __dst[88];

  v7 = *(_QWORD *)(v3 + 24);
  (*(void (**)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD *))(*(_QWORD *)v7 + 112))(v62, 0, 0, a1);
  v8 = v62[1];
  v57 = (void *)v62[0];
  v10 = (void *)v62[2];
  v9 = v62[3];
  v11 = v62[4];
  v12 = v63;
  outlined init with take of Any?((uint64_t)v62, (uint64_t)__src, &demangling cache variable for type metadata for SystemApertureIcon?);
  if (__src[7])
  {
    v54 = v9;
    v55 = v11;
    v56 = a2;
    v13 = memcpy(__dst, __src, 0x50uLL);
    v14 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x290);
    v15 = ((uint64_t (*)(void *))v14)(v13);
    v53 = v10;
    if (v15
      && (v16 = (void *)v15,
          v17 = specialized Conversation.avModeForSystemAperture.getter(),
          v16,
          v17 == (id)1))
    {
      v18 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x320))() ^ 1;
    }
    else
    {
      LOBYTE(v18) = 0;
    }
    v19 = (void *)v14();
    v20 = objc_msgSend(v19, sel_joinedActivitySession);

    v21 = v18 & (v20 == 0);
    (*(void (**)(_QWORD *__return_ptr, _QWORD *))(*(_QWORD *)v7 + 128))(v64, a1);
    outlined init with take of Any?((uint64_t)v64, (uint64_t)v65, &demangling cache variable for type metadata for SystemApertureIcon?);
    if (v65[7])
    {
      memcpy(v66, v65, sizeof(v66));
      v22 = objc_allocWithZone((Class)type metadata accessor for SystemApertureIconView());
      v23 = SystemApertureIconView.init(icon:isDetached:)((uint64_t)v66, 0);
      v24 = &protocol witness table for SystemApertureIconView;
    }
    else
    {
      if ((v18 & 1) != 0)
      {
        ConversationControlsManager.isOneToOneConversation.getter();
        if ((v37 & 1) != 0)
        {
          (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x270))();
          objc_opt_self();
          v38 = (void *)swift_dynamicCastObjCClass();
          if (!v38)
            swift_unknownObjectRelease();
          type metadata accessor for SystemApertureInCallWaveformTrailingView();
          v23 = (id)SystemApertureInCallWaveformTrailingView.__allocating_init(call:)(v38);
          v52 = &protocol witness table for SystemApertureInCallWaveformTrailingView;
          goto LABEL_20;
        }
      }
      type metadata accessor for SystemApertureEmptyTrailingView();
      v23 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
      v24 = &protocol witness table for SystemApertureEmptyTrailingView;
    }
    v52 = v24;
LABEL_20:
    if (v21)
    {
      v39 = type metadata accessor for SystemApertureInCallLeadingView();
      v40 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x270);
      outlined copy of SystemApertureIconAsset(v57, v8, v53, v54, v55, v12 & 1);
      v41 = swift_bridgeObjectRetain();
      v42 = v40(v41);
      v44 = v43;
      ObjectType = swift_getObjectType();
      v61 = *(_QWORD *)(v44 + 8);
      v58 = v42;
      v59[0] = v42;
      swift_unknownObjectRetain();
      specialized SystemApertureInCallLeadingView.__allocating_init(icon:callDurationProvider:)(__dst, (uint64_t)&v58, v39, ObjectType, v61);
      v29 = v45;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v59);
      v30 = &protocol witness table for SystemApertureInCallLeadingView;
    }
    else
    {
      v46 = objc_allocWithZone((Class)type metadata accessor for SystemApertureIconView());
      outlined copy of SystemApertureIconAsset(v57, v8, v53, v54, v55, v12 & 1);
      swift_bridgeObjectRetain();
      v29 = SystemApertureIconView.init(icon:isDetached:)((uint64_t)__dst, 0);
      v30 = &protocol witness table for SystemApertureIconView;
    }
    v36 = ConversationControlsManager.maximumLayoutMode.getter();
    v47 = (objc_class *)type metadata accessor for SystemApertureIconView();
    v48 = objc_allocWithZone(v47);
    outlined retain of SystemApertureIcon?(v62, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined copy of SystemApertureIcon?);
    v49 = v29;
    v50 = v23;
    v32 = SystemApertureIconView.init(icon:isDetached:)((uint64_t)__dst, 0);
    v51 = objc_allocWithZone(v47);
    v34 = SystemApertureIconView.init(icon:isDetached:)((uint64_t)__dst, 1);

    v33 = &protocol witness table for SystemApertureIconView;
    v35 = v56;
    v31 = v52;
    goto LABEL_24;
  }
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v25 = type metadata accessor for Logger();
  __swift_project_value_buffer(v25, (uint64_t)&static Logger.conversationControls);
  v26 = Logger.logObject.getter();
  v27 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v26, v27))
  {
    v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v28 = 0;
    _os_log_impl(&dword_1BD004000, v26, v27, "[SystemAperture] missing status icon for activeCall", v28, 2u);
    MEMORY[0x1C3B751B8](v28, -1, -1);
  }

  v29 = 0;
  v30 = 0;
  v23 = 0;
  v31 = 0;
  v32 = 0;
  v33 = 0;
  v34 = 0;
  v35 = -2;
  v36 = 4;
LABEL_24:
  *(_QWORD *)a3 = v29;
  *(_QWORD *)(a3 + 8) = v30;
  *(_QWORD *)(a3 + 16) = v23;
  *(_QWORD *)(a3 + 24) = v31;
  *(_QWORD *)(a3 + 32) = v32;
  *(_QWORD *)(a3 + 40) = v33;
  *(_QWORD *)(a3 + 48) = v34;
  *(_QWORD *)(a3 + 56) = v33;
  *(_QWORD *)(a3 + 64) = v36;
  *(_BYTE *)(a3 + 72) = v35;
}

uint64_t static ConversationControlsRecipeGenerator.unauthorizedParticipantAssets(controlsMode:conversation:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  objc_class *v4;
  unint64_t v5;
  NSBundle v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  void *v15;
  NSBundle v16;

  if (a2)
  {
    if ((a1 & 0xE1) == 0x41)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      v2 = OUTLINED_FUNCTION_15();
      *(_OWORD *)(v2 + 16) = xmmword_1BD6443F0;
      OUTLINED_FUNCTION_17_8(v2, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
      v3 = (void *)OUTLINED_FUNCTION_88_3();
      v4 = (objc_class *)OUTLINED_FUNCTION_80_4(v3);
      OUTLINED_FUNCTION_61();
      v5 = OUTLINED_FUNCTION_5_26(20);
      v6.super.isa = v4;
      OUTLINED_FUNCTION_49_2(v5, v7, v8, v9, v6);
      OUTLINED_FUNCTION_40_19();
      OUTLINED_FUNCTION_67_7();
    }
    OUTLINED_FUNCTION_17_8(a1, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
    v15 = (void *)OUTLINED_FUNCTION_88_3();
    v16.super.isa = (Class)OUTLINED_FUNCTION_80_4(v15);
    OUTLINED_FUNCTION_49_2(0x454D495445434146, 0xE800000000000000, 0x61737265766E6F43, 0xEF74694B6E6F6974, v16);
    OUTLINED_FUNCTION_40_19();
    OUTLINED_FUNCTION_67_7();
  }
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v10 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v10, (uint64_t)&static Logger.conversationControls);
  v11 = Logger.logObject.getter();
  v12 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)OUTLINED_FUNCTION_105();
    *(_WORD *)v13 = 0;
    _os_log_impl(&dword_1BD004000, v11, v12, "No active conversation", v13, 2u);
    OUTLINED_FUNCTION_60();
  }

  return 0;
}

uint64_t ConversationControlsRecipeGenerator.sessionActivationRequestNoticeRecipe(controlsManager:notice:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  _QWORD *v26;
  uint64_t *boxed_opaque_existential_1;
  _QWORD *v28;
  id v29;
  Swift::String v30;
  Swift::String_optional v31;
  Swift::String v32;
  Swift::String v33;
  uint64_t v34;
  _QWORD *v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  _QWORD v46[12];
  uint64_t v47;
  uint64_t v48;
  uint64_t v49[3];
  uint64_t v50;
  _UNKNOWN **v51;
  char v52;
  __int128 v53;
  Swift::String v54;

  v47 = a2;
  v5 = type metadata accessor for AttributedString();
  MEMORY[0x1E0C80A78](v5);
  v46[8] = (char *)v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UUID();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  MEMORY[0x1E0C80A78](v11);
  v46[10] = (char *)v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = type metadata accessor for ConversationControlsRecipe();
  MEMORY[0x1E0C80A78](v48);
  v46[7] = (char *)v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v15);
  v20 = (char *)v46 - v19;
  v21 = (*(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x290))(v18);
  if (v21)
  {
    v22 = (void *)v21;
    v46[6] = a3;
    type metadata accessor for ConversationControlsBadgingAvatarViewController();
    v23 = (void *)objc_opt_self();
    v24 = v22;
    v25 = objc_msgSend(v23, sel_clearColor);
    v46[5] = v24;
    v26 = (_QWORD *)ConversationControlsBadgingAvatarViewController.__allocating_init(conversation:badgeImage:displayName:badgeBackgroundColor:)(v24, 0, 0, 0, v25);
    __swift_storeEnumTagSinglePayload((uint64_t)v20, 1, 1, v5);
    if (SBUIIsSystemApertureEnabled())
    {
      SessionActivationRequestNotice.fullSentence.getter();
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v20, (uint64_t *)&demangling cache variable for type metadata for AttributedString?);
      __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v5);
      outlined init with take of Any?((uint64_t)v17, (uint64_t)v20, (uint64_t *)&demangling cache variable for type metadata for AttributedString?);
    }
    v50 = type metadata accessor for SessionActivationRequestNotice(0);
    v51 = &protocol witness table for SessionActivationRequestNotice;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v49);
    outlined init with copy of ConversationControlsAppLaunchButtonType(v47, (uint64_t)boxed_opaque_existential_1, type metadata accessor for SessionActivationRequestNotice);
    v52 = 0;
    v46[2] = objc_msgSend(v26, sel_view);
    v28 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x278))();
    v46[1] = (*(uint64_t (**)(char *))((*v28 & *v26) + 0x58))(v10);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
    v29 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
    v54._object = (void *)0xE000000000000000;
    v30._object = (void *)0x80000001BD673D60;
    v30._countAndFlagsBits = 0xD000000000000016;
    v31.value._countAndFlagsBits = 0x61737265766E6F43;
    v31.value._object = (void *)0xEF74694B6E6F6974;
    v32._countAndFlagsBits = 0;
    v32._object = (void *)0xE000000000000000;
    v54._countAndFlagsBits = 0;
    v33 = NSLocalizedString(_:tableName:bundle:value:comment:)(v30, v31, (NSBundle)v29, v32, v54);

    NSMutableAttributedString.__allocating_init(string:)(v33);
  }
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v34 = type metadata accessor for Logger();
  __swift_project_value_buffer(v34, (uint64_t)&static Logger.conversationControls);
  v35 = a1;
  v36 = Logger.logObject.getter();
  v37 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v36, v37))
  {
    v38 = (uint8_t *)swift_slowAlloc();
    v39 = a3;
    v40 = swift_slowAlloc();
    *(_DWORD *)v38 = 136315138;
    v49[0] = v40;
    v41 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v35) + 0x270))();
    swift_getObjectType();
    *(_QWORD *)&v53 = v41;
    v42 = String.init<A>(describing:)();
    *(_QWORD *)&v53 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v42, v43, v49);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v36, v37, "sessionActionNoticeRecipe: No active conversation, call: %s", v38, 0xCu);
    swift_arrayDestroy();
    v44 = v40;
    a3 = v39;
    MEMORY[0x1C3B751B8](v44, -1, -1);
    MEMORY[0x1C3B751B8](v38, -1, -1);

  }
  else
  {

  }
  return __swift_storeEnumTagSinglePayload(a3, 1, 1, v48);
}

void ConversationControlsRecipeGenerator.accountUpdateNoticeRecipe(controlsManager:notice:)(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void (*v23)(uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t ObjectType;
  void *v27;
  id v28;
  uint64_t v29;
  void *v30;
  id v31;
  _QWORD *v32;
  uint64_t *boxed_opaque_existential_1;
  _QWORD *v34;
  Swift::String v35;
  _QWORD v36[4];
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43[5];
  char v44;

  v41 = a3;
  v5 = type metadata accessor for AttributedString();
  MEMORY[0x1E0C80A78](v5);
  v38 = (char *)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = type metadata accessor for UUID();
  v7 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  v9 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  MEMORY[0x1E0C80A78](v10);
  v39 = (char *)v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = type metadata accessor for ConversationControlsRecipe();
  MEMORY[0x1E0C80A78](v40);
  v36[1] = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)v36 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  v20 = MEMORY[0x1E0C80A78](v19);
  v22 = (char *)v36 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = *(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x270);
  v42 = a1;
  v23(v20);
  v25 = v24;
  ObjectType = swift_getObjectType();
  v27 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v25 + 464))(ObjectType, v25);
  swift_unknownObjectRelease();
  v28 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97298]), sel_initWithConfiguration_, v27);

  specialized BidirectionalCollection.last.getter(*(_QWORD *)(a2 + 8), (uint64_t)v22);
  v29 = type metadata accessor for Participant(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v29) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v22, &demangling cache variable for type metadata for Participant?);
    v30 = 0;
  }
  else
  {
    v30 = *(void **)&v22[*(int *)(v29 + 28)];
    if (v30)
      v31 = v30;
    outlined destroy of AccountUpdateNotice((uint64_t)v22, type metadata accessor for Participant);
  }
  type metadata accessor for ConversationControlsBadgingAvatarViewController();
  v32 = (_QWORD *)ConversationControlsBadgingAvatarViewController.__allocating_init(contactStore:handle:badgeImage:)(v28, v30, 0);
  __swift_storeEnumTagSinglePayload((uint64_t)v18, 1, 1, v5);
  if (SBUIIsSystemApertureEnabled())
  {
    AccountUpdateNotice.fullSentence.getter();
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v18, (uint64_t *)&demangling cache variable for type metadata for AttributedString?);
    __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v5);
    outlined init with take of Any?((uint64_t)v16, (uint64_t)v18, (uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  }
  v43[3] = type metadata accessor for AccountUpdateNotice(0);
  v43[4] = (uint64_t)&protocol witness table for AccountUpdateNotice;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v43);
  outlined init with copy of ConversationControlsAppLaunchButtonType(a2, (uint64_t)boxed_opaque_existential_1, type metadata accessor for AccountUpdateNotice);
  v44 = 0;
  v36[3] = objc_msgSend(v32, sel_view);
  v34 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v42) + 0x278))();
  v36[2] = (*(uint64_t (**)(char *))((*v34 & *v32) + 0x58))(v9);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v37);
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
  AccountUpdateNotice.title.getter();
  NSMutableAttributedString.__allocating_init(string:)(v35);
}

void sub_1BD10F1B4(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  os_log_type_t v9;
  uint64_t v10;
  char v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BD6443F0;
  v7 = v2;
  AccountUpdateNotice.attributedSubtitle.getter();
  *(_QWORD *)(v6 + 32) = NSAttributedString.init(_:)();
  *(_QWORD *)(v4 - 144) = v6;
  specialized Array._endMutation()();
  v8 = *(_QWORD *)(v4 - 144);
  outlined init with copy of FeatureEligibility?(v2, v3, (uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  v9 = static Platform.current.getter() < 2u;
  ConversationControlsRecipeGenerator.buttonShelfActions(controlsManager:)();
  v10 = *(_QWORD *)(v4 - 240);
  v11 = *(_BYTE *)(v4 - 232);
  v12 = *(_OWORD *)(v4 - 256);
  *(_OWORD *)(v4 - 144) = *(_OWORD *)(v4 - 272);
  *(_OWORD *)(v4 - 128) = v12;
  *(_QWORD *)(v4 - 112) = v10;
  *(_BYTE *)(v4 - 104) = v11;
  v13 = *(_QWORD *)(v4 - 320);
  ConversationControlsRecipe.init(type:avatar:leadingAccessoryView:title:subtitles:subtitleLeadingBadge:fullSentence:showsInfoButton:showsSubtitleChevron:titleConfiguration:subtitleConfiguration:actions:leadingViewType:)(v4 - 224, 0, *(void **)(v4 - 360), 0, *(_QWORD *)(v4 - 368), a1, v8, 0, v13, 0, 0, v3, v9, 1, 1, 1, (uint8_t *)(v4 - 144), 0, 0,
    0xFFu);
  v14 = *(_QWORD *)(v4 - 304);
  if (__swift_getEnumTagSinglePayload(v13, 1, v14) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v2, (uint64_t *)&demangling cache variable for type metadata for AttributedString?);

    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v13, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
    __swift_storeEnumTagSinglePayload(*(_QWORD *)(v4 - 296), 1, 1, v14);
  }
  else
  {
    v15 = *(_QWORD *)(v4 - 376);
    outlined init with take of StagedCollaboration(v13, v15, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
    if (SBUIIsSystemApertureEnabled())
    {
      ConversationControlsRecipeGenerator.makeActiveFaceTimeCallSystemApertureElement(for:alertingStyle:)(*(_QWORD **)(v4 - 288), 64, v4 - 224);
      *(_OWORD *)(v4 - 288) = *(_OWORD *)(v4 - 224);
      *(_OWORD *)(v4 - 320) = *(_OWORD *)(v4 - 208);
      *(_OWORD *)(v4 - 336) = *(_OWORD *)(v4 - 192);
      *(_OWORD *)(v4 - 352) = *(_OWORD *)(v4 - 176);
      v16 = *(_QWORD *)(v4 - 160);
      v17 = *(_BYTE *)(v4 - 152);

      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v7, (uint64_t *)&demangling cache variable for type metadata for AttributedString?);
      v18 = v15 + *(int *)(v14 + 72);
      outlined consume of SystemApertureElement?(*(void **)v18, *(_QWORD *)(v18 + 8), *(void **)(v18 + 16), *(_QWORD *)(v18 + 24), *(void **)(v18 + 32), *(_QWORD *)(v18 + 40), *(void **)(v18 + 48));
      v19 = *(_OWORD *)(v4 - 320);
      *(_OWORD *)v18 = *(_OWORD *)(v4 - 288);
      *(_OWORD *)(v18 + 16) = v19;
      v20 = *(_OWORD *)(v4 - 352);
      *(_OWORD *)(v18 + 32) = *(_OWORD *)(v4 - 336);
      *(_OWORD *)(v18 + 48) = v20;
      *(_QWORD *)(v18 + 64) = v16;
      *(_BYTE *)(v18 + 72) = v17;
    }
    else
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v7, (uint64_t *)&demangling cache variable for type metadata for AttributedString?);

    }
    v21 = *(_QWORD *)(v4 - 296);
    outlined init with copy of ConversationControlsAppLaunchButtonType(v15, v21, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
    __swift_storeEnumTagSinglePayload(v21, 0, 1, v14);
    outlined destroy of AccountUpdateNotice(v15, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
  }
}

void ConversationControlsRecipeGenerator.reactionNoticeRecipe(controlsManager:notice:)(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t ObjectType;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *boxed_opaque_existential_1;
  _QWORD *v46;
  char *v47;
  Swift::String v48;
  _QWORD v49[2];
  uint64_t v50;
  uint64_t v51;
  char *v52;
  id v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  id v64;
  uint64_t v65[5];
  char v66;

  v62 = a3;
  v54 = type metadata accessor for AttributedString();
  MEMORY[0x1E0C80A78](v54);
  v56 = (char *)v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for UUID();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v55 = (char *)v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  MEMORY[0x1E0C80A78](v9);
  v59 = (char *)v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = type metadata accessor for ConversationControlsRecipe();
  MEMORY[0x1E0C80A78](v61);
  v52 = (char *)v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ParticipantReaction(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Participant(0);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  v21 = MEMORY[0x1E0C80A78](v20);
  v63 = (char *)v49 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x1E0C80A78](v21);
  v57 = (uint64_t)v49 - v24;
  v25 = *(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x270);
  v60 = a1;
  v25(v23);
  v27 = v26;
  ObjectType = swift_getObjectType();
  v29 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v27 + 464))(ObjectType, v27);
  swift_unknownObjectRelease();
  v53 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97298]), sel_initWithConfiguration_, v29);

  v58 = a2;
  v30 = *(_QWORD *)a2;
  v31 = *(_QWORD *)(*(_QWORD *)a2 + 16);
  v32 = MEMORY[0x1E0DEE9D8];
  if (v31)
  {
    v50 = v7;
    v51 = v6;
    v65[0] = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v31, 0);
    v33 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    v49[1] = v30;
    v34 = v30 + v33;
    v64 = *(id *)(v13 + 72);
    v32 = v65[0];
    do
    {
      outlined init with copy of ConversationControlsAppLaunchButtonType(v34, (uint64_t)v15, type metadata accessor for ParticipantReaction);
      outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v15, (uint64_t)v19, type metadata accessor for Participant);
      outlined destroy of AccountUpdateNotice((uint64_t)v15, type metadata accessor for ParticipantReaction);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(v32 + 16) + 1, 1);
        v32 = v65[0];
      }
      v36 = *(_QWORD *)(v32 + 16);
      v35 = *(_QWORD *)(v32 + 24);
      if (v36 >= v35 >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v35 > 1, v36 + 1, 1);
        v32 = v65[0];
      }
      *(_QWORD *)(v32 + 16) = v36 + 1;
      outlined init with take of StagedCollaboration((uint64_t)v19, v32+ ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))+ *(_QWORD *)(v17 + 72) * v36, type metadata accessor for Participant);
      v34 += (uint64_t)v64;
      --v31;
    }
    while (v31);
    swift_bridgeObjectRelease();
    v6 = v51;
    v7 = v50;
  }
  type metadata accessor for ConversationControlsBadgingAvatarViewController();
  ConversationControlsBadgingAvatarViewController.__allocating_init(contactStore:participants:badgeImage:)(v53, v32, 0);
  v38 = v37;
  v39 = v57;
  v40 = v54;
  __swift_storeEnumTagSinglePayload(v57, 1, 1, v54);
  v41 = SBUIIsSystemApertureEnabled();
  v42 = v60;
  v43 = v58;
  if ((v41 & 1) != 0)
  {
    v44 = (uint64_t)v63;
    ReactionNotice.fullSentence.getter();
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v39, (uint64_t *)&demangling cache variable for type metadata for AttributedString?);
    __swift_storeEnumTagSinglePayload(v44, 0, 1, v40);
    outlined init with take of Any?(v44, v39, (uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  }
  v65[3] = type metadata accessor for ReactionNotice(0);
  v65[4] = (uint64_t)&protocol witness table for ReactionNotice;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v65);
  outlined init with copy of ConversationControlsAppLaunchButtonType(v43, (uint64_t)boxed_opaque_existential_1, type metadata accessor for ReactionNotice);
  v66 = 0;
  v64 = objc_msgSend(v38, sel_view);
  v46 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v47 = v55;
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v42) + 0x278))();
  (*(void (**)(char *))((*v46 & *v38) + 0x58))(v47);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v47, v6);
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
  v48._countAndFlagsBits = ReactionNotice.title.getter();
  NSMutableAttributedString.__allocating_init(string:)(v48);
}

void sub_1BD10FA10(void *a1)
{
  void *v1;
  unint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1BD6443F0;
  ReactionNotice.attributedSubtitle.getter();
  *(_QWORD *)(v7 + 32) = NSAttributedString.init(_:)();
  *(_QWORD *)(v5 - 144) = v7;
  specialized Array._endMutation()();
  v8 = *(_QWORD *)(v5 - 144);
  v9 = *(_QWORD *)(v5 - 304);
  outlined init with copy of FeatureEligibility?(v4, v9, (uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  ConversationControlsRecipeGenerator.buttonShelfActions(controlsManager:)();
  v10 = *(_QWORD *)(v5 - 240);
  v11 = *(_BYTE *)(v5 - 232);
  v12 = *(_OWORD *)(v5 - 256);
  *(_OWORD *)(v5 - 144) = *(_OWORD *)(v5 - 272);
  *(_OWORD *)(v5 - 128) = v12;
  *(_QWORD *)(v5 - 112) = v10;
  *(_BYTE *)(v5 - 104) = v11;
  v13 = *(_QWORD *)(v5 - 352);
  ConversationControlsRecipe.init(type:avatar:leadingAccessoryView:title:subtitles:subtitleLeadingBadge:fullSentence:showsInfoButton:showsSubtitleChevron:titleConfiguration:subtitleConfiguration:actions:leadingViewType:)(v5 - 224, 0, *(void **)(v5 - 288), 0, v2, a1, v8, 0, v13, 0, 0, v9, OS_LOG_TYPE_DEFAULT, 1, 1, 1, (uint8_t *)(v5 - 144), 0, 0,
    0xFFu);
  v14 = *(_QWORD *)(v5 - 320);
  if (__swift_getEnumTagSinglePayload(v13, 1, v14) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v4, (uint64_t *)&demangling cache variable for type metadata for AttributedString?);

    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v13, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
    __swift_storeEnumTagSinglePayload(*(_QWORD *)(v5 - 312), 1, 1, v14);
  }
  else
  {
    v15 = v13;
    v16 = *(_QWORD *)(v5 - 408);
    outlined init with take of StagedCollaboration(v15, v16, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
    if (SBUIIsSystemApertureEnabled())
    {
      ConversationControlsRecipeGenerator.makeActiveFaceTimeCallSystemApertureElement(for:alertingStyle:)(v3, 64, v5 - 224);
      *(_OWORD *)(v5 - 288) = *(_OWORD *)(v5 - 224);
      *(_OWORD *)(v5 - 304) = *(_OWORD *)(v5 - 208);
      *(_OWORD *)(v5 - 336) = *(_OWORD *)(v5 - 192);
      *(_OWORD *)(v5 - 352) = *(_OWORD *)(v5 - 176);
      v17 = *(_QWORD *)(v5 - 160);
      v18 = *(_BYTE *)(v5 - 152);

      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v4, (uint64_t *)&demangling cache variable for type metadata for AttributedString?);
      v19 = v16 + *(int *)(v14 + 72);
      outlined consume of SystemApertureElement?(*(void **)v19, *(_QWORD *)(v19 + 8), *(void **)(v19 + 16), *(_QWORD *)(v19 + 24), *(void **)(v19 + 32), *(_QWORD *)(v19 + 40), *(void **)(v19 + 48));
      v20 = *(_OWORD *)(v5 - 304);
      *(_OWORD *)v19 = *(_OWORD *)(v5 - 288);
      *(_OWORD *)(v19 + 16) = v20;
      v21 = *(_OWORD *)(v5 - 352);
      *(_OWORD *)(v19 + 32) = *(_OWORD *)(v5 - 336);
      *(_OWORD *)(v19 + 48) = v21;
      *(_QWORD *)(v19 + 64) = v17;
      *(_BYTE *)(v19 + 72) = v18;
    }
    else
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v4, (uint64_t *)&demangling cache variable for type metadata for AttributedString?);

    }
    v22 = *(_QWORD *)(v5 - 312);
    outlined init with copy of ConversationControlsAppLaunchButtonType(v16, v22, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
    __swift_storeEnumTagSinglePayload(v22, 0, 1, v14);
    outlined destroy of AccountUpdateNotice(v16, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
  }
}

uint64_t ConversationControlsRecipeGenerator.sessionActionNoticeRecipe(controlsManager:notice:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  _QWORD *v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  void *v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  id v55;
  id v56;
  uint64_t v57;
  int EnumTagSinglePayload;
  _QWORD *v59;
  void *v60;
  uint64_t v61;
  id v63;
  _QWORD *v64;
  id v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *boxed_opaque_existential_1;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  void *v75;
  Swift::String v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  char *v86;
  uint64_t v87;
  id v88;
  _QWORD *v89;
  char *v90;
  id v91;
  char *v92;
  __int128 v93;
  int *v94;
  _UNKNOWN **v95;
  char v96;
  __int128 v97;

  v7 = type metadata accessor for AttributeContainer();
  MEMORY[0x1E0C80A78](v7);
  v85 = (char *)&v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = (id)type metadata accessor for AttributedString();
  MEMORY[0x1E0C80A78](v81);
  v84 = (char *)&v77 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = type metadata accessor for UUID();
  v82 = *(_QWORD *)(v83 - 8);
  MEMORY[0x1E0C80A78](v83);
  v11 = (char *)&v77 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  MEMORY[0x1E0C80A78](v12);
  v86 = (char *)&v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ConversationControlsRecipe();
  MEMORY[0x1E0C80A78](v14);
  v80 = (char *)&v77 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  v17 = MEMORY[0x1E0C80A78](v16);
  v90 = (char *)&v77 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v92 = (char *)&v77 - v19;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v77 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = (int *)type metadata accessor for SessionActionNotice(0);
  v24 = MEMORY[0x1E0C80A78](v23);
  v26 = (uint64_t *)((char *)&v77 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  v91 = (id)(*(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x290))(v24);
  if (v91)
  {
    v77 = v3;
    v89 = a1;
    v79 = v14;
    v27 = (_QWORD *)(a2 + v23[7]);
    v28 = v27[3];
    v29 = v27[4];
    __swift_project_boxed_opaque_existential_1(v27, v28);
    v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 16))(v28, v29);
    v87 = a3;
    if (v30 == 6)
    {
      v88 = 0;
    }
    else
    {
      _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIImageView);
      v45 = v27[3];
      v44 = v27[4];
      __swift_project_boxed_opaque_existential_1(v27, v45);
      v46 = (*(uint64_t (**)(uint64_t, uint64_t))(v44 + 32))(v45, v44);
      static UIImageView.appIcon(for:)(v46, v47);
      v88 = v48;
      swift_bridgeObjectRelease();
    }
    v49 = v23[8];
    v50 = *(unsigned __int8 *)(a2 + v49);
    outlined init with copy of ConversationControlsAppLaunchButtonType(a2, (uint64_t)v26, type metadata accessor for SessionActionNotice);
    v78 = v49;
    if (v50 == 1)
    {
      v52 = *v26;
      v51 = v26[1];
      v53 = v26[2];
      v54 = v26[3];
      if (v53 >> 62 != 3
        || v53 == 0xC000000000000000 && !(v51 | v52 | v54)
        || v52 == 1 && !v51 && v53 == 0xC000000000000000 && !v54
        || v52 == 2 && !v51 && v53 == 0xC000000000000000 && !v54
        || v52 == 3 && !v51 && v53 == 0xC000000000000000 && !v54
        || v52 == 4 && !v51 && v53 == 0xC000000000000000 && !v54
        || v52 == 5 && !v51 && v53 == 0xC000000000000000 && !v54
        || v52 == 6 && !v51 && v53 == 0xC000000000000000 && !v54
        || v52 != 7
        || v51
        || v53 != 0xC000000000000000
        || v54)
      {
        outlined copy of SessionActionNotice.NoticeType(*v26, v26[1], v26[2]);
        outlined consume of SessionActionNotice.NoticeType(v52, v51, v53);
        outlined consume of SessionActionNotice.NoticeType(7, 0, 0xC000000000000000);
        outlined destroy of AccountUpdateNotice((uint64_t)v26, type metadata accessor for SessionActionNotice);
        type metadata accessor for ConversationControlsBadgingAvatarViewController();
        v65 = objc_msgSend(v88, sel_image);
        v66 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
        v64 = (_QWORD *)ConversationControlsBadgingAvatarViewController.__allocating_init(conversation:badgeImage:displayName:badgeBackgroundColor:)(v91, v65, 0, 0, v66);
        v59 = v89;
        v61 = (uint64_t)v92;
        goto LABEL_51;
      }
      outlined consume of SessionActionNotice.NoticeType(7, 0, 0xC000000000000000);
      outlined consume of SessionActionNotice.NoticeType(7, 0, 0xC000000000000000);
    }
    outlined destroy of AccountUpdateNotice((uint64_t)v26, type metadata accessor for SessionActionNotice);
    v55 = objc_msgSend((id)objc_opt_self(), sel_tu_contactStoreConfigurationForConversation_, v91);
    v56 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97298]), sel_initWithConfiguration_, v55);
    outlined init with copy of FeatureEligibility?(a2 + v23[5], (uint64_t)v22, &demangling cache variable for type metadata for Participant?);
    v57 = type metadata accessor for Participant(0);
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v22, 1, v57);
    v59 = v89;
    if (EnumTagSinglePayload == 1)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v22, &demangling cache variable for type metadata for Participant?);
      v60 = 0;
      v61 = (uint64_t)v92;
    }
    else
    {
      v60 = *(void **)&v22[*(int *)(v57 + 28)];
      v61 = (uint64_t)v92;
      if (v60)
        v63 = v60;
      outlined destroy of AccountUpdateNotice((uint64_t)v22, type metadata accessor for Participant);
    }
    type metadata accessor for ConversationControlsBadgingAvatarViewController();
    v64 = (_QWORD *)ConversationControlsBadgingAvatarViewController.__allocating_init(contactStore:handle:badgeImage:)(v56, v60, objc_msgSend(v88, sel_image));

LABEL_51:
    v67 = (uint64_t)v81;
    __swift_storeEnumTagSinglePayload(v61, 1, 1, (uint64_t)v81);
    if (SBUIIsSystemApertureEnabled())
    {
      v68 = (uint64_t)v90;
      SessionActionNotice.fullSentence.getter();
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v61, (uint64_t *)&demangling cache variable for type metadata for AttributedString?);
      __swift_storeEnumTagSinglePayload(v68, 0, 1, v67);
      outlined init with take of Any?(v68, v61, (uint64_t *)&demangling cache variable for type metadata for AttributedString?);
    }
    v94 = v23;
    v95 = &protocol witness table for SessionActionNotice;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v93);
    outlined init with copy of ConversationControlsAppLaunchButtonType(a2, (uint64_t)boxed_opaque_existential_1, type metadata accessor for SessionActionNotice);
    v96 = 0;
    v81 = objc_msgSend(v64, sel_view);
    v70 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v59) + 0x278))();
    (*(void (**)(char *))((*v70 & *v64) + 0x58))(v11);
    v71 = (*(uint64_t (**)(char *, uint64_t))(v82 + 8))(v11, v83);
    if (*(_BYTE *)(a2 + v78) == 1)
      SessionActionNotice.actionDescription.getter();
    else
      v72 = SessionActionNotice.attributionDescription.getter(v71);
    v74 = v72;
    v75 = v73;
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
    v76._countAndFlagsBits = v74;
    v76._object = v75;
    NSMutableAttributedString.__allocating_init(string:)(v76);
  }
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v31 = type metadata accessor for Logger();
  __swift_project_value_buffer(v31, (uint64_t)&static Logger.conversationControls);
  v32 = a1;
  v33 = Logger.logObject.getter();
  v34 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v33, v34))
  {
    v35 = swift_slowAlloc();
    v87 = a3;
    v36 = (uint8_t *)v35;
    v37 = v14;
    v38 = swift_slowAlloc();
    *(_DWORD *)v36 = 136315138;
    *(_QWORD *)&v93 = v38;
    v39 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v32) + 0x270))();
    swift_getObjectType();
    *(_QWORD *)&v97 = v39;
    v40 = String.init<A>(describing:)();
    *(_QWORD *)&v97 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v40, v41, (uint64_t *)&v93);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v33, v34, "sessionActionNoticeRecipe: No active conversation, call: %s", v36, 0xCu);
    swift_arrayDestroy();
    v42 = v38;
    v14 = v37;
    MEMORY[0x1C3B751B8](v42, -1, -1);
    v43 = v36;
    a3 = v87;
    MEMORY[0x1C3B751B8](v43, -1, -1);

  }
  else
  {

  }
  return __swift_storeEnumTagSinglePayload(a3, 1, 1, v14);
}

uint64_t ConversationControlsRecipeGenerator.appLaunchNoticeRecipe(controlsManager:notice:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t (*v25)(uint64_t);
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t *v29;
  void *v30;
  uint64_t v31;
  void *v32;
  void *v33;
  id v34;
  id v35;
  _QWORD *v36;
  uint64_t *boxed_opaque_existential_1;
  _QWORD *v38;
  uint64_t v39;
  void *v40;
  void *v41;
  Swift::String v42;
  uint64_t v43;
  _QWORD *v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  _QWORD v53[3];
  id v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65[3];
  uint64_t v66;
  _UNKNOWN **v67;
  char v68;
  __int128 v69;

  v4 = v3;
  v64 = a2;
  v7 = type metadata accessor for AttributeContainer();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for AttributedString();
  MEMORY[0x1E0C80A78](v10);
  v60 = (char *)v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = type metadata accessor for UUID();
  v58 = *(_QWORD *)(v59 - 8);
  MEMORY[0x1E0C80A78](v59);
  v13 = (char *)v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  MEMORY[0x1E0C80A78](v14);
  v61 = (char *)v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for ConversationControlsRecipe();
  MEMORY[0x1E0C80A78](v16);
  v57 = (char *)v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  v19 = MEMORY[0x1E0C80A78](v18);
  v21 = (char *)v53 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x1E0C80A78](v19);
  v24 = (char *)v53 - v23;
  v25 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x290);
  v63 = a1;
  v26 = v25(v22);
  if (v26)
  {
    v27 = (void *)v26;
    v55 = v9;
    v53[0] = v4;
    v62 = v16;
    v56 = a3;
    type metadata accessor for ConversationControlsBadgingAvatarViewController();
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIImageView);
    v28 = type metadata accessor for AppLaunchNotice(0);
    v29 = (uint64_t *)(*(_QWORD *)(v64 + *(int *)(v28 + 28))
                    + OBJC_IVAR____TtC15ConversationKit13ForegroundApp_bundleIdentifier);
    v31 = *v29;
    v30 = (void *)v29[1];
    swift_bridgeObjectRetain();
    static UIImageView.appIcon(for:)(v31, v30);
    v33 = v32;
    swift_bridgeObjectRelease();
    v34 = objc_msgSend(v33, sel_image);

    v35 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
    v54 = v27;
    v36 = (_QWORD *)ConversationControlsBadgingAvatarViewController.__allocating_init(conversation:badgeImage:displayName:badgeBackgroundColor:)(v54, v34, 0, 0, v35);
    __swift_storeEnumTagSinglePayload((uint64_t)v24, 1, 1, v10);
    if (SBUIIsSystemApertureEnabled())
    {
      AppLaunchNotice.fullSentence.getter();
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v24, (uint64_t *)&demangling cache variable for type metadata for AttributedString?);
      __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, v10);
      outlined init with take of Any?((uint64_t)v21, (uint64_t)v24, (uint64_t *)&demangling cache variable for type metadata for AttributedString?);
    }
    v66 = v28;
    v67 = &protocol witness table for AppLaunchNotice;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v65);
    outlined init with copy of ConversationControlsAppLaunchButtonType(v64, (uint64_t)boxed_opaque_existential_1, type metadata accessor for AppLaunchNotice);
    v68 = 0;
    v53[2] = objc_msgSend(v36, sel_view);
    v38 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v63) + 0x278))();
    v53[1] = (*(uint64_t (**)(char *))((*v38 & *v36) + 0x58))(v13);
    (*(void (**)(char *, uint64_t))(v58 + 8))(v13, v59);
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
    v39 = AppLaunchNotice.noticeContent.getter();
    v41 = v40;
    swift_bridgeObjectRelease();
    v42._countAndFlagsBits = v39;
    v42._object = v41;
    NSMutableAttributedString.__allocating_init(string:)(v42);
  }
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v43 = type metadata accessor for Logger();
  __swift_project_value_buffer(v43, (uint64_t)&static Logger.conversationControls);
  v44 = v63;
  v45 = Logger.logObject.getter();
  v46 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v45, v46))
  {
    v47 = (uint8_t *)swift_slowAlloc();
    v48 = swift_slowAlloc();
    v62 = v16;
    *(_DWORD *)v47 = 136315138;
    v65[0] = v48;
    v49 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v44) + 0x270))();
    swift_getObjectType();
    *(_QWORD *)&v69 = v49;
    v50 = String.init<A>(describing:)();
    *(_QWORD *)&v69 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v50, v51, v65);
    v16 = v62;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v45, v46, "appLaunchNoticeRecipe: No active conversation, call: %s", v47, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v48, -1, -1);
    MEMORY[0x1C3B751B8](v47, -1, -1);

  }
  else
  {

  }
  return __swift_storeEnumTagSinglePayload(a3, 1, 1, v16);
}

uint64_t ConversationControlsRecipeGenerator.systemUpdateNoticeRecipe(controlsManager:notice:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;

  if (*(_QWORD *)(a2 + 16))
    return ConversationControlsRecipeGenerator.handoffApprovalNoticeRecipe(controlsManager:notice:)(a1, a2, a3);
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v5 = type metadata accessor for Logger();
  __swift_project_value_buffer(v5, (uint64_t)&static Logger.conversationControls);
  v6 = Logger.logObject.getter();
  v7 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_1BD004000, v6, v7, "Currently unsupported", v8, 2u);
    MEMORY[0x1C3B751B8](v8, -1, -1);
  }

  v9 = type metadata accessor for ConversationControlsRecipe();
  return __swift_storeEnumTagSinglePayload(a3, 1, 1, v9);
}

uint64_t ConversationControlsRecipeGenerator.pttNoticeRecipe(controlsManager:notice:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void (*v13)(uint64_t);
  void *v14;
  id v15;
  void *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t *boxed_opaque_existential_1;
  Swift::String v21;
  _QWORD v23[10];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26[5];
  char v27;

  v4 = v3;
  v25 = a2;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  MEMORY[0x1E0C80A78](v7);
  v24 = type metadata accessor for AttributedString();
  MEMORY[0x1E0C80A78](v24);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  MEMORY[0x1E0C80A78](v8);
  v9 = type metadata accessor for ConversationControlsRecipe();
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x270);
  v23[9] = a1;
  v13(v10);
  objc_opt_self();
  v14 = (void *)swift_dynamicCastObjCClass();
  if (v14)
  {
    v15 = ConversationControlsRecipeGenerator.pttLeadingAccessoryView(call:)(v14);
    if (v15)
    {
      v18 = v15;
      v23[1] = v4;
      v23[2] = v12;
      v23[8] = a3;
      v19 = v16;
      v23[4] = v16;
      v23[7] = v17;
      v26[3] = type metadata accessor for PushToTalkNotice(0);
      v26[4] = (uint64_t)&protocol witness table for PushToTalkNotice;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v26);
      outlined init with copy of ConversationControlsAppLaunchButtonType(v25, (uint64_t)boxed_opaque_existential_1, type metadata accessor for PushToTalkNotice);
      v27 = 0;
      _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
      v23[6] = v19;
      v23[5] = v18;
      PushToTalkNotice.title.getter();
      NSMutableAttributedString.__allocating_init(string:)(v21);
    }
  }
  swift_unknownObjectRelease();
  return __swift_storeEnumTagSinglePayload(a3, 1, 1, v9);
}

uint64_t ConversationControlsRecipeGenerator.handoffApprovalNoticeRecipe(controlsManager:notice:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  _QWORD *v20;
  uint64_t (*v21)(uint64_t);
  void *v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  uint64_t *boxed_opaque_existential_1;
  Swift::String v30;
  uint64_t v31;
  _QWORD *v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  _QWORD v41[8];
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45[5];
  char v46;
  _QWORD v47[4];
  __int16 v48;
  uint64_t v49;
  char v50;
  uint64_t v51;

  v4 = v3;
  v42 = a2;
  v7 = type metadata accessor for AttributedString();
  MEMORY[0x1E0C80A78](v7);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ConversationControlsRecipe();
  MEMORY[0x1E0C80A78](v11);
  v41[7] = (char *)v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v14);
  v19 = (char *)v41 - v18;
  v20 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v21 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x290);
  v43 = a1;
  v22 = (void *)v21(v17);

  v44 = v11;
  if (v22)
  {
    v41[4] = v10;
    v41[0] = v4;
    v41[6] = a3;
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
    v23 = (void *)*MEMORY[0x1E0DC4B10];
    strcpy((char *)v47, "appletv.fill");
    BYTE5(v47[1]) = 0;
    HIWORD(v47[1]) = -5120;
    v47[2] = 2;
    v47[3] = v23;
    v48 = 0;
    v49 = 6;
    v50 = 0;
    v51 = 0;
    v24 = v23;
    v25 = static UIImage.symbolImage(for:)((uint64_t)v47);

    swift_bridgeObjectRelease();
    v26 = objc_allocWithZone(MEMORY[0x1E0DC3890]);
    v41[3] = v25;
    v27 = objc_msgSend(v26, sel_initWithImage_, v25);
    objc_msgSend(v27, sel_setContentMode_, 1);
    v28 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
    objc_msgSend(v27, sel_setTintColor_, v28);

    __swift_storeEnumTagSinglePayload((uint64_t)v19, 1, 1, v7);
    if (SBUIIsSystemApertureEnabled())
    {
      SystemUpdateNotice.fullSentence.getter();
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v19, (uint64_t *)&demangling cache variable for type metadata for AttributedString?);
      __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v7);
      outlined init with take of Any?((uint64_t)v16, (uint64_t)v19, (uint64_t *)&demangling cache variable for type metadata for AttributedString?);
    }
    v45[3] = type metadata accessor for SystemUpdateNotice(0);
    v45[4] = (uint64_t)&protocol witness table for SystemUpdateNotice;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v45);
    outlined init with copy of ConversationControlsAppLaunchButtonType(v42, (uint64_t)boxed_opaque_existential_1, type metadata accessor for SystemUpdateNotice);
    v46 = 0;
    objc_msgSend(v27, sel_hash);
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
    v30._countAndFlagsBits = SystemUpdateNotice.title.getter();
    NSMutableAttributedString.__allocating_init(string:)(v30);
  }
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v31 = type metadata accessor for Logger();
  __swift_project_value_buffer(v31, (uint64_t)&static Logger.conversationControls);
  v32 = v43;
  v33 = Logger.logObject.getter();
  v34 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v33, v34))
  {
    v35 = (uint8_t *)swift_slowAlloc();
    v36 = swift_slowAlloc();
    *(_DWORD *)v35 = 136315138;
    v45[0] = v36;
    v37 = (*(uint64_t (**)(void))((*v20 & *v32) + 0x270))();
    swift_getObjectType();
    v47[0] = v37;
    v38 = String.init<A>(describing:)();
    v47[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v38, v39, v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v33, v34, "handoffApprovalNoticeRecipe: No active conversation, call: %s", v35, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v36, -1, -1);
    MEMORY[0x1C3B751B8](v35, -1, -1);

  }
  else
  {

  }
  return __swift_storeEnumTagSinglePayload(a3, 1, 1, v44);
}

void ConversationControlsRecipeGenerator.multipleAuthorizationRequestRecipe(withNumber:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSBundle v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  Swift::String v17;
  Swift::String_optional v18;
  Swift::String v19;
  uint64_t v20;
  void *v21;
  void *v22;
  Swift::String v23;
  _QWORD v24[2];
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  char v30;
  Swift::String v31;

  v26 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  MEMORY[0x1E0C80A78](v3);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Locale?);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  MEMORY[0x1E0C80A78](v7);
  v8 = type metadata accessor for ConversationControlsRecipe();
  MEMORY[0x1E0C80A78](v8);
  v24[1] = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = 2;
  v28 = 0u;
  v29 = 0u;
  v30 = 6;
  v10 = type metadata accessor for Locale();
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 1, 1, v10);
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v11.super.isa = (Class)static LocalizationSource.conversationControls;
  v12 = *(_QWORD *)algn_1EF4FCB48;
  v13 = (void *)qword_1EF4FCB50;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v14 = swift_allocObject();
  v15 = MEMORY[0x1E0DEB418];
  v25 = xmmword_1BD6441D0;
  *(_OWORD *)(v14 + 16) = xmmword_1BD6441D0;
  v16 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v14 + 56) = v15;
  *(_QWORD *)(v14 + 64) = v16;
  *(_QWORD *)(v14 + 32) = a1;
  v31._object = (void *)0xE000000000000000;
  v17._countAndFlagsBits = 0x706F655020756C25;
  v17._object = (void *)0xEA0000000000656CLL;
  v18.value._countAndFlagsBits = v12;
  v18.value._object = v13;
  v19._countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  v31._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v17, v18, v11, v19, v31);
  v20 = String.init(format:locale:arguments:)();
  v22 = v21;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v6, &demangling cache variable for type metadata for Locale?);
  v23._countAndFlagsBits = v20;
  v23._object = v22;
  NSMutableAttributedString.__allocating_init(string:)(v23);
}

void ConversationControlsRecipeGenerator.singleAuthoriziationRequestRecipe(for:participant:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  char v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  Swift::String v20;
  _QWORD v21[2];
  id v22;
  id v23;
  char *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  char v32;

  v27 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  MEMORY[0x1E0C80A78](v5);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  MEMORY[0x1E0C80A78](v6);
  v24 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ConversationControlsRecipe();
  MEMORY[0x1E0C80A78](v8);
  v21[0] = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  Participant.isDestinationTemporary.getter();
  v10 = 0;
  if ((v11 & 1) == 0)
  {
    v12 = objc_msgSend((id)objc_opt_self(), sel_tu_contactStoreConfigurationForConversation_, a1);
    v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97298]), sel_initWithConfiguration_, v12);
    v14 = *(void **)(a2 + *(int *)(type metadata accessor for Participant(0) + 28));
    if (v14)
      v15 = v14;
    type metadata accessor for ConversationControlsBadgingAvatarViewController();
    v10 = (void *)ConversationControlsBadgingAvatarViewController.__allocating_init(contactStore:handle:badgeImage:)(v13, v14, 0);

  }
  v29 = 2;
  v30 = 0u;
  v31 = 0u;
  v32 = 6;
  v25 = v10;
  if (v10)
  {
    v23 = objc_msgSend(v10, sel_view);
    v22 = objc_msgSend(v10, sel_hash);
  }
  else
  {
    v22 = 0;
    v23 = 0;
  }
  v26 = v8;
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
  Participant.contactDetails.getter();
  v16 = v28;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v17 = Participant.name(_:)();
  v19 = v18;
  swift_bridgeObjectRelease();
  v20._countAndFlagsBits = v17;
  v20._object = v19;
  NSMutableAttributedString.__allocating_init(string:)(v20);
}

void sub_1BD112960(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  Swift::String v5;
  Swift::String_optional v6;
  Swift::String v7;
  Swift::String v8;
  Swift::String v9;

  *(_QWORD *)(v1 - 248) = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BD6443F0;
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v2 = unk_1EF4FCB30;
  v3 = (void *)qword_1EF4FCB38;
  v4 = (id)static LocalizationSource.conversationKit;
  swift_bridgeObjectRetain();
  v9._object = (void *)0xE000000000000000;
  v5._object = (void *)0x80000001BD673D10;
  v5._countAndFlagsBits = 0xD00000000000002FLL;
  v6.value._countAndFlagsBits = v2;
  v6.value._object = v3;
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  v9._countAndFlagsBits = 0;
  v8 = NSLocalizedString(_:tableName:bundle:value:comment:)(v5, v6, (NSBundle)v4, v7, v9);
  swift_bridgeObjectRelease();

  NSMutableAttributedString.__allocating_init(string:)(v8);
}

id ConversationControlsRecipeGenerator.pttLeadingAccessoryView(call:)(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  void *v22;
  _QWORD *v23;
  id v24;
  _QWORD *v26;
  id v27;
  Swift::UInt v28;
  _BYTE __src[72];
  _BYTE __dst[72];

  v2 = type metadata accessor for UUID();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = &__src[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIImageView);
  outlined bridged method (ob) of @objc TUCallProvider.bundleIdentifier.getter(objc_msgSend(a1, sel_provider));
  static UIImageView.appIcon(for:)(v6, v7);
  v9 = v8;
  swift_bridgeObjectRelease();
  v10 = objc_msgSend(v9, sel_image);

  if (objc_msgSend(a1, sel_status) == 1
    && objc_msgSend(a1, sel_isReceivingTransmission)
    && (objc_msgSend(a1, sel_isSendingTransmission) & 1) == 0
    && (v11 = objc_msgSend(a1, sel_activeRemoteParticipant)) != 0)
  {
    v12 = v11;
    v13 = a1;
    v14 = v12;
    v15 = v10;
    specialized ConversationControlsBadgingAvatarViewController.__allocating_init(pttCall:activeRemoteParticipant:badgeImage:)(v13, v14, v10);
    v17 = v16;
    if (v16)
      v18 = objc_msgSend(v16, sel_view);
    else
      v18 = 0;
    Hasher.init()();
    if (v17)
    {
      v26 = v17;
      v27 = objc_msgSend(v13, sel_uniqueProxyIdentifierUUID);
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      v28 = (*(uint64_t (**)(_BYTE *))((*MEMORY[0x1E0DEEDD8] & *v26) + 0x58))(v5);
      (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
      Hasher._combine(_:)(1u);
      Hasher._combine(_:)(v28);
    }
    else
    {
      Hasher._combine(_:)(0);
      v26 = 0;
    }
    Hasher._combine(_:)((Swift::UInt)objc_msgSend(v14, sel_hash));
    memcpy(__dst, __src, sizeof(__dst));
    Hasher.finalize()();

  }
  else
  {
    v19 = a1;
    v20 = v10;
    specialized ConversationControlsBadgingAvatarViewController.__allocating_init(pttCall:badgeImage:)(v19, v10);
    if (v21)
    {
      v22 = v21;
      v18 = objc_msgSend(v21, sel_view);
      v23 = v22;
      v24 = objc_msgSend(v19, sel_uniqueProxyIdentifierUUID);
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      (*(void (**)(_BYTE *))((*MEMORY[0x1E0DEEDD8] & *v23) + 0x58))(v5);
      (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
    }
    else
    {

      return 0;
    }
  }
  return v18;
}

void ConversationControlsRecipeGenerator.makePTTHUDSystemApertureElement(controlsManager:alertingStyle:)(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  objc_class *v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  id v17;
  char *v18;
  char v19;
  id v20;
  char *v21;
  int64x2_t v22;
  _UNKNOWN **v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  char v28;
  _QWORD v29[5];
  uint64_t v30;
  _QWORD __src[10];
  _BYTE __dst[88];

  (*(void (**)(_QWORD *__return_ptr, _QWORD, _QWORD, uint64_t))(**(_QWORD **)(v3 + 24) + 112))(v29, 0, 0, a1);
  v6 = (void *)v29[0];
  v7 = v29[1];
  v8 = (void *)v29[2];
  v9 = v29[3];
  v11 = v29[4];
  v10 = v30;
  outlined init with take of Any?((uint64_t)v29, (uint64_t)__src, &demangling cache variable for type metadata for SystemApertureIcon?);
  if (__src[7])
  {
    memcpy(__dst, __src, 0x50uLL);
    v28 = a2;
    v12 = (objc_class *)type metadata accessor for SystemApertureIconView();
    objc_allocWithZone(v12);
    outlined copy of SystemApertureIconAsset(v6, v7, v8, v9, v11, v10 & 1);
    swift_bridgeObjectRetain();
    v13 = (uint64_t)SystemApertureIconView.init(icon:isDetached:)((uint64_t)__dst, 0);
    type metadata accessor for SystemApertureEmptyTrailingView();
    v14 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
    v15 = objc_allocWithZone(v12);
    outlined retain of SystemApertureIcon?(v29, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined copy of SystemApertureIcon?);
    v16 = (id)v13;
    v17 = v14;
    v18 = SystemApertureIconView.init(icon:isDetached:)((uint64_t)__dst, 0);
    v19 = v28;
    v20 = objc_allocWithZone(v12);
    v21 = SystemApertureIconView.init(icon:isDetached:)((uint64_t)__dst, 1);

    v22 = vdupq_n_s64(4uLL);
    v22.i64[0] = (uint64_t)&protocol witness table for SystemApertureIconView;
    v23 = &protocol witness table for SystemApertureEmptyTrailingView;
  }
  else
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v24 = type metadata accessor for Logger();
    __swift_project_value_buffer(v24, (uint64_t)&static Logger.conversationControls);
    v25 = Logger.logObject.getter();
    v26 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v27 = 0;
      _os_log_impl(&dword_1BD004000, v25, v26, "PushToTalk: [SystemAperture] missing status icon", v27, 2u);
      MEMORY[0x1C3B751B8](v27, -1, -1);
    }

    v14 = 0;
    v23 = 0;
    v18 = 0;
    v21 = 0;
    v19 = 0;
    v22 = 0uLL;
    v13 = 1;
  }
  *(_QWORD *)a3 = v13;
  *(_QWORD *)(a3 + 8) = v22.i64[0];
  *(_QWORD *)(a3 + 16) = v14;
  *(_QWORD *)(a3 + 24) = v23;
  *(_QWORD *)(a3 + 32) = v18;
  *(_QWORD *)(a3 + 40) = v22.i64[0];
  *(_QWORD *)(a3 + 48) = v21;
  *(int64x2_t *)(a3 + 56) = v22;
  *(_BYTE *)(a3 + 72) = v19;
}

void ConversationControlsRecipeGenerator.handoffNearbySubtitle(conversation:)(void *a1)
{
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  Swift::String_optional v7;
  Swift::String v8;
  uint64_t v9;
  Swift::String v10;
  id v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  Swift::String v16;
  Swift::String v17;
  uint64_t v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  Swift::String v26;
  unint64_t v27;
  Swift::String v28;
  id v29;

  v2 = objc_msgSend(a1, sel_avMode);
  if (v2)
  {
    if (v2 == (id)1)
    {
      v3 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
      v27 = 0xE000000000000000;
      v4 = 0x454D495445434146;
      v5 = 0x4F494455415FLL;
    }
    else
    {
      if (v2 != (id)2)
      {
        if (one-time initialization token for conversationControls != -1)
          swift_once();
        v18 = type metadata accessor for Logger();
        __swift_project_value_buffer(v18, (uint64_t)&static Logger.conversationControls);
        v19 = a1;
        v20 = Logger.logObject.getter();
        v21 = static os_log_type_t.fault.getter();
        if (os_log_type_enabled(v20, v21))
        {
          v22 = (uint8_t *)swift_slowAlloc();
          v23 = swift_slowAlloc();
          v28._countAndFlagsBits = v23;
          *(_DWORD *)v22 = 136315138;
          v29 = objc_msgSend(v19, sel_avMode);
          v24 = String.init<A>(reflecting:)();
          v29 = (id)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v24, v25, &v28._countAndFlagsBits);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1BD004000, v20, v21, "handoffNearbySubtitle: unexpected avMode %s", v22, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C3B751B8](v23, -1, -1);
          MEMORY[0x1C3B751B8](v22, -1, -1);

        }
        else
        {

        }
        _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
        v26._countAndFlagsBits = 0;
        v26._object = (void *)0xE000000000000000;
        NSMutableAttributedString.__allocating_init(string:)(v26);
      }
      v3 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
      v27 = 0xE000000000000000;
      v4 = 0x454D495445434146;
      v5 = 0x4F454449565FLL;
    }
    v6 = v5 & 0xFFFFFFFFFFFFLL | 0xEE00000000000000;
  }
  else
  {
    v3 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
    v27 = 0xE000000000000000;
    v4 = 0x414C504552414853;
    v6 = 0xE900000000000059;
  }
  v7.value._countAndFlagsBits = 0x61737265766E6F43;
  v7.value._object = (void *)0xEF74694B6E6F6974;
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  v9 = 0;
  v10 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v4, v7, (NSBundle)v3, v8, *(Swift::String *)(&v27 - 1));

  v11 = objc_msgSend(a1, sel_handoffEligibility);
  if (v11)
  {
    v12 = outlined bridged method (ob) of @objc TUConversationHandoffEligibility.localizedDeviceCategory.getter(v11, (SEL *)&selRef_localizedDeviceCategory);
    if (v13)
    {
      v14 = (uint64_t)v12;
      v15 = v13;
      v28 = v10;
      v16._countAndFlagsBits = 2108704;
      v16._object = (void *)0xE300000000000000;
      String.append(_:)(v16);
      v17._countAndFlagsBits = v14;
      v17._object = v15;
      String.append(_:)(v17);
      swift_bridgeObjectRelease();
    }
  }
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSMutableAttributedString);
  NSMutableAttributedString.__allocating_init(string:)(v10);
}

id ConversationControlsRecipeGenerator.handoffBadgeImage(conversation:)(void *a1)
{
  id result;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;

  result = objc_msgSend(a1, sel_avMode);
  if (result)
  {
    if (result == (id)2 || result == (id)1)
    {
      _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIImageView);
      v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      static UIImageView.appIcon(for:)(v3, v4);
      v6 = v5;
      swift_bridgeObjectRelease();
      return (id)v6;
    }
    else
    {
      if (one-time initialization token for conversationControls != -1)
        swift_once();
      v7 = type metadata accessor for Logger();
      __swift_project_value_buffer(v7, (uint64_t)&static Logger.conversationControls);
      v8 = a1;
      v9 = Logger.logObject.getter();
      v10 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v9, v10))
      {
        v11 = (uint8_t *)swift_slowAlloc();
        v12 = swift_slowAlloc();
        v15 = v12;
        *(_DWORD *)v11 = 136315138;
        objc_msgSend(v8, sel_avMode);
        v13 = String.init<A>(reflecting:)();
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v13, v14, &v15);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BD004000, v9, v10, "handoffBadgeImage: unexpected avMode %s", v11, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3B751B8](v12, -1, -1);
        MEMORY[0x1C3B751B8](v11, -1, -1);

      }
      else
      {

      }
      return 0;
    }
  }
  return result;
}

void ConversationControlsRecipeGenerator.handoffCompletedSubtitle(localizedDeviceCategory:)(uint64_t a1, uint64_t a2)
{
  void *v4;
  id v5;
  Swift::String v6;
  Swift::String_optional v7;
  Swift::String v8;
  uint64_t v9;
  uint64_t countAndFlagsBits;
  void *v11;
  void *object;
  id v13;
  Swift::String v14;
  Swift::String_optional v15;
  Swift::String v16;
  Swift::String v17;
  Swift::String v18;
  Swift::String v19;
  Swift::String v20;

  if (a2)
  {
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
    v4 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v5 = objc_msgSend(v4, sel_conversationKit);
    v19._object = (void *)0xE000000000000000;
    v6._countAndFlagsBits = 0x255F4E4F5F574F4ELL;
    v6._object = (void *)0xE900000000000040;
    v7.value._countAndFlagsBits = 0x61737265766E6F43;
    v7.value._object = (void *)0xEF74694B6E6F6974;
    v8._countAndFlagsBits = 0;
    v8._object = (void *)0xE000000000000000;
    v19._countAndFlagsBits = 0;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v6, v7, (NSBundle)v5, v8, v19);

    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1BD6441D0;
    *(_QWORD *)(v9 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v9 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v9 + 32) = a1;
    *(_QWORD *)(v9 + 40) = a2;
    countAndFlagsBits = String.init(format:_:)();
    object = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
    v13 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
    v20._object = (void *)0xE000000000000000;
    v14._object = (void *)0x80000001BD673D80;
    v14._countAndFlagsBits = 0xD000000000000013;
    v15.value._countAndFlagsBits = 0x61737265766E6F43;
    v15.value._object = (void *)0xEF74694B6E6F6974;
    v16._countAndFlagsBits = 0;
    v16._object = (void *)0xE000000000000000;
    v20._countAndFlagsBits = 0;
    v17 = NSLocalizedString(_:tableName:bundle:value:comment:)(v14, v15, (NSBundle)v13, v16, v20);
    countAndFlagsBits = v17._countAndFlagsBits;
    object = v17._object;

  }
  v18._countAndFlagsBits = countAndFlagsBits;
  v18._object = object;
  NSMutableAttributedString.__allocating_init(string:)(v18);
}

id ConversationControlsRecipeGenerator.recipeViewFor(_:in:managedBy:)(void *a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  id v10;
  _QWORD *v11;
  uint64_t v13;

  v5 = type metadata accessor for UUID();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ConversationControlsBadgingAvatarViewController();
  v9 = (_QWORD *)ConversationControlsBadgingAvatarViewController.__allocating_init(contactStore:handle:badgeImage:)(objc_msgSend(*(id *)((char *)a3 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_callCenter), sel_contactStore), objc_msgSend(a1, sel_handle), 0);
  v10 = objc_msgSend(v9, sel_view);
  v11 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *a3) + 0x278))();
  (*(void (**)(char *))((*v11 & *v9) + 0x58))(v8);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v10;
}

uint64_t static ConversationControlsManager.screenShareHUDStrings(initiator:incomingRequest:)(uint64_t a1, uint64_t a2)
{
  void *v3;
  objc_class *v4;
  unint64_t v5;
  NSBundle v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  objc_class *v11;
  NSBundle v12;
  NSBundle v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v23;

  v3 = (void *)objc_opt_self();
  v4 = (objc_class *)OUTLINED_FUNCTION_80_4(v3);
  if ((a2 & 1) != 0)
  {
    v5 = OUTLINED_FUNCTION_5_26(17);
    v6.super.isa = v4;
    OUTLINED_FUNCTION_49_2(v5, v7, v8, v9, v6);
  }
  else
  {
    v12.super.isa = v4;
    OUTLINED_FUNCTION_49_2(0x535F4E4545524353, 0xEE00474E49524148, 0x61737265766E6F43, 0xEF74694B6E6F6974, v12);
  }
  OUTLINED_FUNCTION_86_4();
  v11 = (objc_class *)OUTLINED_FUNCTION_2_2(v10, sel_conversationKit);
  OUTLINED_FUNCTION_2_15();
  v13.super.isa = v11;
  OUTLINED_FUNCTION_49_2(v14, v15, v16, v17, v13);
  OUTLINED_FUNCTION_36_24();

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v18 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v18 + 16) = xmmword_1BD6441D0;
  Participant.contactDetails.getter();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_21_0();

  v19 = Participant.name(_:)();
  v21 = v20;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v18 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v18 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v18 + 32) = v19;
  *(_QWORD *)(v18 + 40) = v21;
  OUTLINED_FUNCTION_49_16();
  String.init(format:_:)();
  OUTLINED_FUNCTION_53();
  return a2;
}

void ConversationControlsRecipeGenerator.incomingRemoteControlRequestSubtitle(requestingParticipantDisplayName:)()
{
  char *v0;

  v0 = (char *)&loc_1BD113EC8 + *((int *)qword_1BD1140A8 + static Platform.current.getter());
  __asm { BR              X10 }
}

void sub_1BD113ED8()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  Swift::String v3;
  Swift::String_optional v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  Swift::String v18;
  Swift::String v19;

  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
  v2 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v19._object = (void *)0xE000000000000000;
  v3._countAndFlagsBits = 0xD00000000000002BLL;
  v3._object = (void *)0x80000001BD673FE0;
  v4.value._countAndFlagsBits = 0x61737265766E6F43;
  v4.value._object = (void *)0xEF74694B6E6F6974;
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  v19._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v3, v4, (NSBundle)v2, v5, v19);
  swift_bridgeObjectRelease();

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BD645380;
  v7 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v6 + 56) = MEMORY[0x1E0DEA968];
  v8 = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v6 + 64) = v8;
  *(_QWORD *)(v6 + 32) = v1;
  *(_QWORD *)(v6 + 40) = v0;
  v9 = (void *)objc_opt_self();
  swift_bridgeObjectRetain();
  v10 = objc_msgSend(v9, sel_currentDevice);
  v11 = objc_msgSend(v10, sel_model);

  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v14 = v13;

  *(_QWORD *)(v6 + 96) = v7;
  *(_QWORD *)(v6 + 104) = v8;
  *(_QWORD *)(v6 + 72) = v12;
  *(_QWORD *)(v6 + 80) = v14;
  v15 = String.init(format:_:)();
  v17 = v16;
  swift_bridgeObjectRelease();
  v18._countAndFlagsBits = v15;
  v18._object = v17;
  NSMutableAttributedString.__allocating_init(string:)(v18);
}

id ConversationControlsRecipeGenerator.recipeViewFor(_:in:managedBy:usingAlternateApperance:)(uint64_t a1, void *a2, _QWORD *a3, char a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v21;

  v8 = type metadata accessor for UUID();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a4 & 1) != 0
    && (_sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIImageView),
        static UIImageView.appIcon(for:)(*(_QWORD *)(a1 + OBJC_IVAR____TtC15ConversationKit13ForegroundApp_bundleIdentifier), *(void **)(a1 + OBJC_IVAR____TtC15ConversationKit13ForegroundApp_bundleIdentifier + 8)), v12))
  {
    v13 = v12;
    objc_msgSend(v13, sel_image);
    closure #1 in ConversationControlsRecipeGenerator.recipeViewFor(_:in:managedBy:usingAlternateApperance:)(a1, a3);

  }
  else
  {
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
    static UIImage.appIcon(for:usingIconCrop:)(*(_QWORD *)(a1 + OBJC_IVAR____TtC15ConversationKit13ForegroundApp_bundleIdentifier), *(void **)(a1 + OBJC_IVAR____TtC15ConversationKit13ForegroundApp_bundleIdentifier + 8), 1);
    v15 = v14;
    type metadata accessor for ConversationControlsBadgingAvatarViewController();
    v16 = (void *)objc_opt_self();
    v17 = v15;
    v18 = (_QWORD *)ConversationControlsBadgingAvatarViewController.__allocating_init(conversation:badgeImage:displayName:badgeBackgroundColor:)(a2, v15, 0, 0, objc_msgSend(v16, sel_clearColor));
    v13 = objc_msgSend(v18, sel_view);
    v19 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *a3) + 0x278))();
    (*(void (**)(char *))((*v19 & *v18) + 0x58))(v11);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  return v13;
}

uint64_t static ConversationControlsManager.collaborationHUDStrings(initiator:itemTitle:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  objc_class *v18;
  unint64_t v19;
  NSBundle v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  objc_class *v27;
  NSBundle v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  objc_class *v39;
  NSBundle v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  objc_class *v50;
  NSBundle v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  Class isa;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  objc_class *v66;
  NSBundle v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  Class v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;

  OUTLINED_FUNCTION_93();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v6 = type metadata accessor for PersonNameComponents();
  v78 = *(_QWORD *)(v6 - 8);
  v79 = v6;
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_41();
  v77 = v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (PersonNameComponents?, String?));
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_77();
  v12 = v11 - v10;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PersonNameComponents?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_77();
  v16 = v15 - v14;
  if (v1)
  {
    v17 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v18 = (objc_class *)objc_msgSend(v17, sel_conversationKit);
    OUTLINED_FUNCTION_18_3();
    OUTLINED_FUNCTION_61();
    v19 = OUTLINED_FUNCTION_5_26(28);
    v20.super.isa = v18;
    OUTLINED_FUNCTION_49_2(v19, v21, v22, v23, v20);

    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v24 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v24 + 16) = xmmword_1BD6441D0;
    *(_QWORD *)(v24 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v24 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v24 + 32) = v3;
    *(_QWORD *)(v24 + 40) = v1;
    v25 = String.init(format:_:)();
    v26 = OUTLINED_FUNCTION_27();
  }
  else
  {
    v27 = (objc_class *)objc_msgSend((id)objc_opt_self(), sel_conversationKit);
    OUTLINED_FUNCTION_18_3();
    v28.super.isa = v27;
    v25 = OUTLINED_FUNCTION_49_2(v29, 0x80000001BD673AD0, 0x61737265766E6F43, 0xEF74694B6E6F6974, v28);

  }
  v30 = v79;
  v31 = OUTLINED_FUNCTION_6_7(v26, sel_nameComponents);
  if (v31)
  {
    v32 = v31;
    static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)();

    v33 = 0;
  }
  else
  {
    v33 = 1;
  }
  __swift_storeEnumTagSinglePayload(v16, v33, 1, v79);
  v34 = outlined bridged method (pb) of @objc TUCollaborationInitiator.handle.getter(v5);
  v36 = v35;
  v37 = (uint64_t *)(v12 + *(int *)(v8 + 48));
  outlined init with take of Any?(v16, v12, &demangling cache variable for type metadata for PersonNameComponents?);
  *v37 = v34;
  v37[1] = v36;
  if (__swift_getEnumTagSinglePayload(v12, 1, v79) == 1)
  {
    if (v36)
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
      v38 = OUTLINED_FUNCTION_15();
      *(_OWORD *)(v38 + 16) = xmmword_1BD6441D0;
      v39 = (objc_class *)objc_msgSend((id)objc_opt_self(), sel_conversationKit);
      OUTLINED_FUNCTION_18_3();
      OUTLINED_FUNCTION_2_15();
      v40.super.isa = v39;
      OUTLINED_FUNCTION_49_2(v41, v42, v43, v44, v40);
      OUTLINED_FUNCTION_73();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v45 = OUTLINED_FUNCTION_15();
      *(_OWORD *)(v45 + 16) = xmmword_1BD6441D0;
      *(_QWORD *)(v45 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v45 + 64) = lazy protocol witness table accessor for type String and conformance String();
      *(_QWORD *)(v45 + 32) = v34;
      *(_QWORD *)(v45 + 40) = v36;
      v46 = String.init(format:_:)();
      v48 = v47;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v38 + 32) = v46;
      *(_QWORD *)(v38 + 40) = v48;
    }
  }
  else
  {
    v80 = v25;
    OUTLINED_FUNCTION_91_3(v77, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v78 + 32));
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
    v49 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v49 + 16) = xmmword_1BD6441D0;
    if (v36)
    {
      v50 = (objc_class *)objc_msgSend((id)objc_opt_self(), sel_conversationKit);
      OUTLINED_FUNCTION_18_3();
      OUTLINED_FUNCTION_2_15();
      v51.super.isa = v50;
      OUTLINED_FUNCTION_49_2(v52, v53, v54, v55, v51);

      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v56 = OUTLINED_FUNCTION_15();
      *(_OWORD *)(v56 + 16) = xmmword_1BD645380;
      v57 = (void *)objc_opt_self();
      isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
      v59 = OUTLINED_FUNCTION_48_17(v57, sel_localizedStringFromPersonNameComponents_style_options_);

      v60 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v62 = v61;

      v63 = v30;
      v64 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v56 + 56) = MEMORY[0x1E0DEA968];
      v65 = lazy protocol witness table accessor for type String and conformance String();
      *(_QWORD *)(v56 + 32) = v60;
      *(_QWORD *)(v56 + 40) = v62;
      *(_QWORD *)(v56 + 96) = v64;
      *(_QWORD *)(v56 + 104) = v65;
      *(_QWORD *)(v56 + 64) = v65;
      *(_QWORD *)(v56 + 72) = v34;
      *(_QWORD *)(v56 + 80) = v36;
      String.init(format:_:)();
      OUTLINED_FUNCTION_45_21();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v49 + 32) = v60;
      *(_QWORD *)(v49 + 40) = v59;
      (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v77, v63);
    }
    else
    {
      v66 = (objc_class *)objc_msgSend((id)objc_opt_self(), sel_conversationKit);
      OUTLINED_FUNCTION_18_3();
      v67.super.isa = v66;
      OUTLINED_FUNCTION_49_2(v68, 0x80000001BD673B30, 0x61737265766E6F43, 0xEF74694B6E6F6974, v67);

      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v69 = OUTLINED_FUNCTION_15();
      *(_OWORD *)(v69 + 16) = xmmword_1BD6441D0;
      v70 = (void *)objc_opt_self();
      v71 = PersonNameComponents._bridgeToObjectiveC()().super.isa;
      v72 = OUTLINED_FUNCTION_48_17(v70, sel_localizedStringFromPersonNameComponents_style_options_);

      v73 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v75 = v74;

      *(_QWORD *)(v69 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v69 + 64) = lazy protocol witness table accessor for type String and conformance String();
      *(_QWORD *)(v69 + 32) = v73;
      *(_QWORD *)(v69 + 40) = v75;
      String.init(format:_:)();
      OUTLINED_FUNCTION_45_21();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v49 + 32) = v73;
      *(_QWORD *)(v49 + 40) = v69;
      (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v77, v30);
    }
    return v80;
  }
  return v25;
}

Swift::Int closure #1 in ConversationControlsRecipeGenerator.recipeViewFor(_:in:managedBy:usingAlternateApperance:)(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE __src[72];
  _BYTE __dst[72];

  v3 = type metadata accessor for UUID();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &__src[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  Hasher.init()();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  v7 = swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *a2) + 0x278))(v7);
  UUID.uuidString.getter();
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  memcpy(__dst, __src, sizeof(__dst));
  return Hasher.finalize()();
}

void static UIImage.appIcon(for:usingIconCrop:)(uint64_t a1, void *a2, char a3)
{
  void *v6;
  BOOL v7;
  char v8;
  uint64_t v9;
  Swift::String v10;

  if (a2)
  {
    v7 = static String._unconditionallyBridgeFromObjectiveC(_:)() == a1 && v6 == a2;
    if (v7
      || (v8 = _stringCompareWithSmolCheck(_:_:expecting:)(),
          swift_bridgeObjectRetain(),
          v9 = OUTLINED_FUNCTION_53(),
          (v8 & 1) != 0))
    {
      swift_bridgeObjectRelease();
      specialized static UIImage.image(named:)(4);
    }
    else
    {
      OUTLINED_FUNCTION_17_8(v9, (unint64_t *)&lazy cache variable for type metadata for UIImage);
      v10._countAndFlagsBits = a1;
      v10._object = a2;
      UIImage.init(bundleIdentifier:usingIconCrop:)(v10, a3 & 1);
    }
  }
}

uint64_t static ConversationControlsRecipeGenerator.makeAvatarUsingCall(_:with:isThirdParty:)(uint64_t a1, uint64_t a2, _QWORD *a3, char a4)
{
  uint64_t v4;
  uint64_t ObjectType;
  id v8;
  uint64_t v9;
  void (*v12)(uint64_t);
  uint64_t v13;

  if ((a4 & 1) != 0)
  {
    ObjectType = swift_getObjectType();
    v8 = specialized static ConversationControlsRecipeGenerator.makeVoipBadgeIcon(for:)(a1, v4, ObjectType, a2);
    if (v8)
      swift_bridgeObjectRelease();
    type metadata accessor for ConversationControlsBadgingAvatarViewController();
    OUTLINED_FUNCTION_61_9();
    v9 = swift_unknownObjectRetain();
    return specialized ConversationControlsBadgingAvatarViewController.__allocating_init(call:badgeImage:)(v9, v8, v4, ObjectType, a2);
  }
  else
  {
    type metadata accessor for ConversationControlsBadgingAvatarViewController();
    v12 = *(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *a3) + 0x290);
    v13 = swift_unknownObjectRetain();
    v12(v13);
    OUTLINED_FUNCTION_61_9();
    swift_getObjectType();
    return specialized ConversationControlsBadgingAvatarViewController.__allocating_init(call:conversation:badgeImage:)(a1, a3);
  }
}

id static ConversationControlsRecipeGenerator.makeVoipBadgeIcon(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType();
  return specialized static ConversationControlsRecipeGenerator.makeVoipBadgeIcon(for:)(a1, v2, ObjectType, a2);
}

unint64_t ConversationControlsRecipeGenerator.callTypeSubtitles(for:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t (*v5)(uint64_t, uint64_t);
  void *v6;
  unsigned int v7;
  void *v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  const char *v27;
  Swift::String v28;
  Swift::String_optional v29;
  Swift::String v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;

  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x270))();
  v3 = v2;
  ObjectType = swift_getObjectType();
  v5 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 160);
  v6 = (void *)v5(ObjectType, v3);
  v7 = objc_msgSend(v6, sel_isFaceTimeProvider);

  if (v7)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BD6443F0;
    ConversationControlsRecipeGenerator.faceTimeIncomingCallSubtitle(for:)(a1);
  }
  v8 = (void *)v5(ObjectType, v3);
  v9 = objc_msgSend(v8, sel_isSystemProvider);

  if (!v9)
  {
    v21 = (void *)v5(ObjectType, v3);
    v22 = objc_msgSend(v21, sel_localizedName);

    v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v25 = v24;

    LOBYTE(v22) = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 376))(ObjectType, v3);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BD6443F0;
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
    v26 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
    v40 = 0xE000000000000000;
    if ((v22 & 1) != 0)
      v27 = "THIRD_PARTY_CALL_PROVIDER_%@_VIDEO";
    else
      v27 = "THIRD_PARTY_CALL_PROVIDER_%@_AUDIO";
    v28._object = (void *)((unint64_t)(v27 - 32) | 0x8000000000000000);
    v28._countAndFlagsBits = 0xD000000000000022;
    v29.value._countAndFlagsBits = 0x61737265766E6F43;
    v29.value._object = (void *)0xEF74694B6E6F6974;
    v30._countAndFlagsBits = 0;
    v30._object = (void *)0xE000000000000000;
    v31 = 0;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v28, v29, (NSBundle)v26, v30, *(Swift::String *)(&v40 - 1));

    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v32 = swift_allocObject();
    *(_OWORD *)(v32 + 16) = xmmword_1BD6441D0;
    *(_QWORD *)(v32 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v32 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v32 + 32) = v23;
    *(_QWORD *)(v32 + 40) = v25;
    v33 = static String.localizedStringWithFormat(_:_:)();
    v35 = v34;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v36 = v33;
    v37 = v35;
    goto LABEL_16;
  }
  v10 = ConversationControlsRecipeGenerator.telephonyCallSubtitles(for:)(a1);
  if (v10 >> 62)
  {
    swift_bridgeObjectRetain();
    v39 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v39)
      goto LABEL_6;
  }
  else if (!*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_6:
    swift_bridgeObjectRelease();
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v11 = type metadata accessor for Logger();
    __swift_project_value_buffer(v11, (uint64_t)&static Logger.conversationControls);
    swift_unknownObjectRetain_n();
    v12 = Logger.logObject.getter();
    v13 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = swift_slowAlloc();
      v41 = v15;
      *(_DWORD *)v14 = 136446210;
      v16 = (void *)v5(ObjectType, v3);
      v17 = objc_msgSend(v16, sel_identifier);

      v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v20 = v19;

      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v18, v20, &v41);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD004000, v12, v13, "Unknown call type subtitle for provider: %{public}s", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v15, -1, -1);
      MEMORY[0x1C3B751B8](v14, -1, -1);

    }
    else
    {

      swift_unknownObjectRelease_n();
    }
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BD6443F0;
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
    v36 = 0;
    v37 = 0xE000000000000000;
LABEL_16:
    NSMutableAttributedString.__allocating_init(string:)(*(Swift::String *)&v36);
  }
  swift_unknownObjectRelease();
  return v10;
}

id ConversationControlsRecipeGenerator.subtitleBadgeView(incomingCall:)(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType;
  void *v4;
  unsigned int v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;

  ObjectType = swift_getObjectType();
  v4 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 160))(ObjectType, a2);
  v5 = objc_msgSend(v4, sel_isTelephonyProvider);

  if (v5)
  {
    _sSo8NSObjectCMaTm_0(0, &lazy cache variable for type metadata for TPBadgeView);
    v6 = swift_unknownObjectRetain();
    v7 = TPBadgeView.init(telephonyCall:)(v6, a2);
    v8 = v7;
    if (v7)
    {
      v9 = v7;
      v10 = objc_msgSend(v9, sel_title);
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      lazy protocol witness table accessor for type String and conformance String();
      StringProtocol.hash.getter();
      swift_bridgeObjectRelease();

    }
  }
  else
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v11 = type metadata accessor for Logger();
    __swift_project_value_buffer(v11, (uint64_t)&static Logger.conversationControls);
    v12 = Logger.logObject.getter();
    v13 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_1BD004000, v12, v13, "[SystemAperture][Badge] Not showing badge view for non-telephony calls", v14, 2u);
      MEMORY[0x1C3B751B8](v14, -1, -1);
    }

    return 0;
  }
  return v8;
}

id ConversationControlsRecipeGenerator.makeLeadingViewType(using:avatarViewController:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  Swift::String v18;
  id v19;
  _QWORD *v20;
  uint64_t v22;
  uint64_t v23;

  v4 = type metadata accessor for UUID();
  v22 = *(_QWORD *)(v4 - 8);
  v23 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for URL();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x270))(v12);
  v16 = v15;
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v16 + 80))(ObjectType, v16);
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v9, &demangling cache variable for type metadata for URL?);
LABEL_5:
    v19 = objc_msgSend(a2, sel_view, v22, v23);
    v20 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x278))();
    (*(void (**)(char *))((*v20 & *a2) + 0x58))(v6);
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v6, v23);
    return v19;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v14, v9, v10);
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  v18._countAndFlagsBits = URL.relativePath.getter();
  v19 = (id)UIImage.__allocating_init(contentsOfFile:)(v18);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  if (!v19)
    goto LABEL_5;
  swift_unknownObjectRelease();
  return v19;
}

id specialized Conversation.cnk_allowsVideoMessaging.getter()
{
  void *v0;
  id result;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;

  result = objc_msgSend(v0, sel_avMode);
  if (result)
  {
    v2 = v0;
    v3 = objc_msgSend(v2, sel_remoteMembers);
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
    lazy protocol witness table accessor for type TUHandle and conformance NSObject((unint64_t *)&lazy protocol witness table cache variable for type TUConversationMember and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
    v4 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    v5 = specialized Set.count.getter(v4);
    swift_bridgeObjectRelease();
    return (id)(v5 == 1);
  }
  return result;
}

id ConversationControlsRecipeGenerator.ongoingGreenTea3PLeadingAccessoryView(controlsManager:hasHeldCalls:)(_QWORD *a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void (*v12)(void);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  void *v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  id v33;
  void *v34;
  id v35;
  double v36;
  double v37;
  uint64_t v39;
  uint64_t v40;

  v3 = v2;
  v6 = *v3;
  v7 = type metadata accessor for UUID();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x270);
  v13 = ((uint64_t (*)(uint64_t))v12)(v9);
  v15 = v14;
  ObjectType = swift_getObjectType();
  if ((a2 & 1) != 0)
  {
    v17 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v15 + 160))(ObjectType, v15);
    swift_unknownObjectRelease();
    outlined bridged method (ob) of @objc TUCallProvider.bundleIdentifier.getter(v17);
    if (v18)
    {
      v19 = (void *)MEMORY[0x1C3B72E00]();
      swift_bridgeObjectRelease();
    }
    else
    {
      v19 = 0;
    }
    v34 = (void *)objc_opt_self();
    v35 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
    objc_msgSend(v35, sel_scale);
    v37 = v36;

    v32 = objc_msgSend(v34, sel__applicationIconImageForBundleIdentifier_format_scale_, v19, 2, v37);
    if (!v32)
      return 0;
    v33 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_initWithImage_, v32);
    NSObject.hashValue.getter();

  }
  else
  {
    v40 = v7;
    v20 = specialized static ConversationControlsRecipeGenerator.makeVoipBadgeIcon(for:)(v13, v6, ObjectType, v15);
    v21 = swift_unknownObjectRelease();
    v22 = ((uint64_t (*)(uint64_t))v12)(v21);
    v24 = v23;
    if (v20)
      v25 = v20;
    v26 = type metadata accessor for ConversationControlsBadgingAvatarViewController();
    v27 = swift_getObjectType();
    v28 = (_QWORD *)specialized ConversationControlsBadgingAvatarViewController.__allocating_init(call:badgeImage:)(v22, v20, v26, v27, v24);
    v12();
    v30 = v29;
    v31 = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v30 + 200))(v31, v30);
    swift_unknownObjectRelease();
    (*(void (**)(char *))((*MEMORY[0x1E0DEEDD8] & *v28) + 0x58))(v11);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v40);
    v32 = v28;
    v33 = objc_msgSend(v32, sel_view);
    outlined consume of (icon: UIImage, accessibilityLabel: String)?(v20);

  }
  return v33;
}

void ConversationControlsRecipeGenerator.ongoingGreenTea3PActions(controlsManager:hasHeldCalls:)(_QWORD *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  int v8;
  uint64_t v9;
  char v10;
  __int128 v11;
  __int128 v12;
  _OWORD v13[2];
  char v14;

  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x270))();
  v6 = v5;
  ObjectType = swift_getObjectType();
  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 184))(ObjectType, v6);
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ConversationControlsAction>);
  type metadata accessor for ConversationControlsAction();
  if (v8 == 2)
  {
    v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1BD6441D0;
    swift_storeEnumTagMultiPayload();
    v10 = 0;
    v11 = 0uLL;
    v12 = 0uLL;
  }
  else
  {
    v9 = swift_allocObject();
    if ((a2 & 1) != 0)
    {
      *(_OWORD *)(v9 + 16) = xmmword_1BD645390;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      *(_OWORD *)(v9 + 16) = xmmword_1BD646740;
    }
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    static ConversationHUDControlsButtonShelfView.Configuration.fillEqually.getter((uint64_t)v13);
    v11 = v13[0];
    v12 = v13[1];
    v10 = v14 | 0x80;
  }
  *(_QWORD *)a3 = v9;
  *(_OWORD *)(a3 + 8) = v11;
  *(_OWORD *)(a3 + 24) = v12;
  *(_BYTE *)(a3 + 40) = v10;
}

void static ConversationControlsRecipeGenerator.assetsForDefaultHUD(controlsManager:conversation:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  objc_class *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t (*v46)(uint64_t);
  uint64_t v47;
  char v48;
  int v49;
  objc_class *v50;
  uint64_t v51;
  NSBundle v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t (*v59)(void);
  char *v60;
  id v61;
  void (*v62)(__int128 *__return_ptr);
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t (*v66)(uint64_t, uint64_t);
  void *v67;
  void *v68;
  id v69;
  unsigned int v70;
  _QWORD *v71;
  uint64_t ObjectType;
  uint64_t v73;
  objc_class *v74;
  unint64_t v75;
  NSBundle v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  objc_class *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t (*v85)(uint64_t);
  void *v86;
  uint64_t v87;
  void (*v88)(uint64_t);
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  char *v94;
  uint64_t v95;
  NSBundle v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void (*v100)(uint64_t);
  uint64_t v101;
  int EnumTagSinglePayload;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  id v106;
  id v107;
  void *v108;
  id v109;
  objc_class *v110;
  NSBundle v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  void *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unsigned __int8 v126;
  uint64_t v127;
  unsigned __int8 v128;
  uint64_t v129;
  int v130;
  uint64_t v131;
  uint64_t v132;
  int v133;
  uint64_t v134;
  uint64_t (*v135)(uint64_t, char *);
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  id v139;
  uint64_t v140;
  id v141;
  uint64_t v142;
  uint64_t v143;
  BOOL v144;
  uint64_t (**v145)(uint64_t, uint64_t);
  char v146;
  uint64_t v147;
  uint64_t v148;
  char v149;
  uint64_t v150;
  char v151;
  id v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  objc_class *v158;
  NSBundle v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  objc_class *v165;
  char v166;
  uint64_t v167;
  uint64_t *v168;
  __int128 *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  _QWORD *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  char v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t *v188;
  __int128 *v189;
  uint64_t v190;
  char v191;
  uint64_t *v192;
  __int128 *v193;
  id v194;
  char v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  id v199;
  uint64_t v200;
  NSBundle v201;
  uint64_t v202;
  uint64_t v203;
  id v204;
  uint64_t v205;
  NSBundle v206;
  _QWORD *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  void *v211;
  uint64_t v212;
  id v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  id v219;
  Class isa;
  id v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  id v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  _QWORD v241[2];
  uint64_t v242;
  _BYTE *v243;
  void *v244;
  uint64_t v245;
  char *v246;
  uint64_t v247;
  char *v248;
  id v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  objc_class *v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  id v259;
  objc_class *v260;
  uint64_t v261;
  char *v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  _BYTE *v266;
  uint64_t v267;
  uint64_t v268;
  _QWORD *v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  _BYTE v275[16];
  __int128 v276;
  __int128 v277;
  uint64_t v278;
  char v279;
  _BYTE v280[24];
  uint64_t v281;
  _QWORD v282[3];
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;

  OUTLINED_FUNCTION_93();
  v285 = v2;
  v286 = v3;
  v265 = v0;
  v266 = v4;
  v6 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Collaboration?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_41();
  v258 = v8;
  v9 = type metadata accessor for PersonNameComponents();
  v251 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_41();
  v250 = v10;
  v268 = type metadata accessor for Participant.State(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_5_27();
  v260 = v12;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_18_0();
  v264 = v14;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_18_0();
  v270 = v16;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v241 - v18;
  v20 = type metadata accessor for Participant(0);
  v256 = *(_QWORD *)(v20 - 8);
  v257 = v20;
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_5_27();
  v252 = v21;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v22);
  OUTLINED_FUNCTION_18_0();
  v263 = v23;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v24);
  OUTLINED_FUNCTION_18_0();
  v267 = v25;
  OUTLINED_FUNCTION_8_4();
  v27 = MEMORY[0x1E0C80A78](v26);
  v29 = (char *)v241 - v28;
  v30 = MEMORY[0x1E0C80A78](v27);
  v32 = (char *)v241 - v31;
  MEMORY[0x1E0C80A78](v30);
  v34 = (char *)v241 - v33;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v35);
  OUTLINED_FUNCTION_37_18();
  MEMORY[0x1E0C80A78](v36);
  OUTLINED_FUNCTION_18_0();
  v253 = v37;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v38);
  OUTLINED_FUNCTION_18_0();
  v255 = (objc_class *)v39;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v40);
  OUTLINED_FUNCTION_18_0();
  v254 = v41;
  OUTLINED_FUNCTION_8_4();
  v43 = MEMORY[0x1E0C80A78](v42);
  v45 = (char *)v241 - v44;
  v46 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v6) + 0x840);
  v269 = v6;
  v47 = v46(v43);
  v48 = v47;
  v49 = v47 >> 5;
  if (v49 == 1)
  {
    if ((v47 & 1) == 0)
      goto LABEL_8;
    v56 = OUTLINED_FUNCTION_53_13(v47, sel_letMeInRequestState);
    if (v56 == (id)3)
      goto LABEL_8;
    v103 = (uint64_t)OUTLINED_FUNCTION_6_7((uint64_t)v56, sel_pendingMembers);
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
    lazy protocol witness table accessor for type TUHandle and conformance NSObject((unint64_t *)&lazy protocol witness table cache variable for type TUConversationMember and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
    v104 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    specialized Set.count.getter(v104);
    OUTLINED_FUNCTION_61_9();
    v105 = swift_bridgeObjectRelease();
    v106 = OUTLINED_FUNCTION_6_7(v105, sel_localParticipantAssociation);

    if (v106 && (v107 = OUTLINED_FUNCTION_6_7((uint64_t)v107, sel_state), v107 == (id)1))
    {
      v108 = (void *)MEMORY[0x1C3B72E00](0xD000000000000011, 0x80000001BD673C40);
      v109 = (id)TUStringKeyForProduct();

      if (!v109)
      {
        __break(1u);
        return;
      }
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      OUTLINED_FUNCTION_10_3();
      v110 = (objc_class *)objc_msgSend((id)objc_opt_self(), sel_conversationKit);
      OUTLINED_FUNCTION_18_3();
      v111.super.isa = v110;
      v103 = OUTLINED_FUNCTION_49_2((uint64_t)v108, 0x1E0DBD2A0, 0x61737265766E6F43, 0xEF74694B6E6F6974, v111);
      v113 = v112;
      OUTLINED_FUNCTION_53();

    }
    else
    {
      v152 = OUTLINED_FUNCTION_6_7((uint64_t)v107, sel_activeRemoteParticipants);
      _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
      lazy protocol witness table accessor for type TUHandle and conformance NSObject((unint64_t *)&lazy protocol witness table cache variable for type TUConversationParticipant and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
      v153 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

      v113 = specialized Set.count.getter(v153);
      OUTLINED_FUNCTION_53();
      if (v113 || v103 < 1)
      {
        v158 = (objc_class *)objc_msgSend((id)objc_opt_self(), sel_conversationKit);
        OUTLINED_FUNCTION_18_3();
        OUTLINED_FUNCTION_2_15();
        v159.super.isa = v158;
        OUTLINED_FUNCTION_49_2(v160, v161, v162, v163, v159);
        OUTLINED_FUNCTION_45_21();

      }
      else
      {
        OUTLINED_FUNCTION_61();
        String.localizedConversationControls.getter();
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
        v154 = OUTLINED_FUNCTION_15();
        v155 = MEMORY[0x1E0DEB418];
        *(_OWORD *)(v154 + 16) = xmmword_1BD6441D0;
        v156 = MEMORY[0x1E0DEB490];
        *(_QWORD *)(v154 + 56) = v155;
        *(_QWORD *)(v154 + 64) = v156;
        *(_QWORD *)(v154 + 32) = v103;
        v103 = static String.localizedStringWithFormat(_:_:)();
        v113 = v157;
        OUTLINED_FUNCTION_53();
        v114 = OUTLINED_FUNCTION_133();
      }
    }
    OUTLINED_FUNCTION_17_8(v114, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
    v54 = v103;
    v55 = v113;
LABEL_21:
    NSMutableAttributedString.__allocating_init(string:)(*(Swift::String *)&v54);
  }
  if (v49 == 2)
  {
    v81 = (objc_class *)objc_msgSend((id)objc_opt_self(), sel_conversationKit);
    if ((v48 & 1) != 0)
    {
      OUTLINED_FUNCTION_18_3();
      OUTLINED_FUNCTION_61();
    }
    else
    {
      v82 = OUTLINED_FUNCTION_30_27();
    }
    v96.super.isa = v81;
    OUTLINED_FUNCTION_49_2(v82, v83, 0x61737265766E6F43, 0xEF74694B6E6F6974, v96);
    OUTLINED_FUNCTION_10_3();
    OUTLINED_FUNCTION_17_8(v97, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
    v54 = OUTLINED_FUNCTION_31_13();
    goto LABEL_21;
  }
  if (v49 == 3 && v47 == 96)
  {
    OUTLINED_FUNCTION_17_8(v47, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
    v50 = (objc_class *)objc_msgSend((id)objc_opt_self(), sel_conversationKit);
    v51 = OUTLINED_FUNCTION_30_27();
    v52.super.isa = v50;
    OUTLINED_FUNCTION_49_2(v51, v53, 0x61737265766E6F43, 0xEF74694B6E6F6974, v52);
    OUTLINED_FUNCTION_40_19();
    v54 = (uint64_t)v32;
    v55 = v9;
    goto LABEL_21;
  }
LABEL_8:
  v247 = v1;
  v248 = v29;
  v245 = v9;
  v57 = v269;
  v58 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v59 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v269) + 0x270);
  v261 = v59();
  v262 = v60;
  v61 = static ConversationControlsRecipeGenerator.badge(forCall:)();
  v62 = *(void (**)(__int128 *__return_ptr))((*v58 & *v57) + 0x8C8);
  v259 = v61;
  v63 = v61;
  v62(&v276);
  if (*((_QWORD *)&v277 + 1))
  {
    v246 = v45;
    v249 = v63;
    outlined init with take of Notice(&v276, (uint64_t)v282);
    v64 = v284;
    OUTLINED_FUNCTION_33_16();
    v65 = OUTLINED_FUNCTION_61_9();
    v67 = (void *)v66(v65, v64);
    if (v67)
    {
      v68 = v67;
      v69 = objc_msgSend(v67, sel_activity);
      v70 = objc_msgSend(v69, sel_isScreenSharingActivity);

      if (v70)
      {
        v71 = v269;
        v59();
        OUTLINED_FUNCTION_45_21();
        ObjectType = swift_getObjectType();
        v73 = (*((uint64_t (**)(uint64_t, id))v69 + 41))(ObjectType, v69);
        swift_unknownObjectRelease();
        if ((v73 & 1) != 0)
        {
          v74 = (objc_class *)objc_msgSend((id)objc_opt_self(), sel_conversationKit);
          OUTLINED_FUNCTION_18_3();
          v75 = OUTLINED_FUNCTION_5_26(17);
          v76.super.isa = v74;
          OUTLINED_FUNCTION_49_2(v75, v77, v78, v79, v76);
          OUTLINED_FUNCTION_36_24();

          goto LABEL_142;
        }
        v242 = *(_QWORD *)((char *)v71
                         + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_conversationController);
        v115 = ConversationController.visibleParticipants.getter();
        v116 = *(_QWORD *)(v115 + 16);
        v117 = v261;
        if (v116)
        {
          OUTLINED_FUNCTION_92_2();
          v241[1] = v115;
          v119 = v115 + v118;
          OUTLINED_FUNCTION_90_5();
          v258 = v120;
          v243 = v275;
          v244 = v121;
          v265 = *(_QWORD *)(v122 + 72);
          v266 = v32;
          v262 = v19;
          while (1)
          {
            outlined init with copy of ConversationControlsAppLaunchButtonType(v119, (uint64_t)v34, type metadata accessor for Participant);
            outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v34, (uint64_t)v19, type metadata accessor for Participant.State);
            if (swift_getEnumCaseMultiPayload() == 4)
            {
              v123 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
              OUTLINED_FUNCTION_7_2((uint64_t *)&v19[*(int *)(v123 + 64)]);
              OUTLINED_FUNCTION_11_37();
              v124 = OUTLINED_FUNCTION_33();
              (*(void (**)(char *, uint64_t))(*(_QWORD *)(v124 - 8) + 8))(v19, v124);
              outlined init with copy of FeatureEligibility?(v258, (uint64_t)v280, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
              OUTLINED_FUNCTION_50_17();
              v125 = v270;
              if (v281 != 1)
              {
                OUTLINED_FUNCTION_51_14();
                v126 = v279;
                outlined destroy of Participant.ScreenInfo((uint64_t)&v276);
                v125 = v270;
                v127 = v261;
                v128 = v126;
                goto LABEL_35;
              }
            }
            else
            {
              outlined destroy of AccountUpdateNotice((uint64_t)v19, type metadata accessor for Participant.State);
              OUTLINED_FUNCTION_57_5();
              OUTLINED_FUNCTION_54_13(v244);
              v125 = v270;
            }
            v127 = v117;
            outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v280, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
            v128 = 2;
LABEL_35:
            v129 = (uint64_t)v266;
            v73 = (uint64_t)type metadata accessor for Participant;
            outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v34, (uint64_t)v266, type metadata accessor for Participant);
            v130 = v128;
            v117 = v127;
            if (v130 != 2)
            {
              outlined init with copy of ConversationControlsAppLaunchButtonType(v129, v125, type metadata accessor for Participant.State);
              if (swift_getEnumCaseMultiPayload() == 4)
              {
                v131 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
                OUTLINED_FUNCTION_7_2((uint64_t *)(v125 + *(int *)(v131 + 64)));
                OUTLINED_FUNCTION_11_37();
                v132 = OUTLINED_FUNCTION_33();
                OUTLINED_FUNCTION_16_0(v132);
                outlined init with copy of FeatureEligibility?(v258, (uint64_t)&v271, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
                OUTLINED_FUNCTION_50_17();
                if (v274 != 1)
                {
                  OUTLINED_FUNCTION_52_11();
                  OUTLINED_FUNCTION_76_7();
                  v73 = (uint64_t)type metadata accessor for Participant;
                  OUTLINED_FUNCTION_94(v129);
                  if ((v125 & 1) != 0)
                  {
                    v197 = (uint64_t)v246;
                    outlined init with take of StagedCollaboration((uint64_t)v34, (uint64_t)v246, type metadata accessor for Participant);
                    v198 = 0;
                    goto LABEL_87;
                  }
                  goto LABEL_43;
                }
              }
              else
              {
                outlined destroy of AccountUpdateNotice(v125, type metadata accessor for Participant.State);
                v271 = 0;
                v272 = 0;
                v273 = 0;
                v274 = 1;
                OUTLINED_FUNCTION_54_13(v243);
              }
              outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v271, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
              v73 = (uint64_t)type metadata accessor for Participant;
            }
            OUTLINED_FUNCTION_94(v129);
LABEL_43:
            OUTLINED_FUNCTION_94((uint64_t)v34);
            v119 += v265;
            --v116;
            v19 = v262;
            if (!v116)
            {
              v198 = 1;
              v197 = (uint64_t)v246;
              goto LABEL_87;
            }
          }
        }
        v198 = 1;
        v197 = (uint64_t)v246;
LABEL_87:
        v164 = v257;
        __swift_storeEnumTagSinglePayload(v197, v198, 1, v257);
        OUTLINED_FUNCTION_27();
        ConversationControlsManager.isOneToOneConversation.getter();
        v165 = v260;
        if ((v166 & 1) != 0)
        {
          v167 = v254;
          outlined init with copy of FeatureEligibility?(v197, v254, &demangling cache variable for type metadata for Participant?);
          OUTLINED_FUNCTION_23_30(v167);
          if (v191)
          {
            v168 = &demangling cache variable for type metadata for Participant?;
            v169 = (__int128 *)v167;
          }
          else
          {
            Participant.screenInfo.getter();
            OUTLINED_FUNCTION_15_12(v187, type metadata accessor for Participant);
            if (*((_QWORD *)&v277 + 1) != 1)
            {
              OUTLINED_FUNCTION_9_39();
              goto LABEL_121;
            }
            v168 = (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?;
            v169 = &v276;
          }
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v169, v168);
          v73 = 0;
          LOBYTE(v167) = 1;
LABEL_121:
          String.deviceAdjustedLocalizedKey(forDeviceFamily:)(v73, v167, 0x20676E6972616853, 0xEE006E6565726353);
          OUTLINED_FUNCTION_45_21();
          v194 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
LABEL_130:
          v199 = v194;
          v200 = OUTLINED_FUNCTION_63_10();
          v201.super.isa = v165;
          OUTLINED_FUNCTION_49_2(v200, v73, 0x61737265766E6F43, 0xEF74694B6E6F6974, v201);
          OUTLINED_FUNCTION_36_24();
          swift_bridgeObjectRelease();

          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v246, &demangling cache variable for type metadata for Participant?);
          goto LABEL_142;
        }
        v170 = ConversationController.visibleParticipants.getter();
        v171 = *(_QWORD *)(v170 + 16);
        if (v171)
        {
          OUTLINED_FUNCTION_92_2();
          v173 = v170 + v172;
          OUTLINED_FUNCTION_90_5();
          v269 = v175;
          v270 = v174;
          v265 = v170;
          v266 = v275;
          v177 = *(_QWORD *)(v176 + 72);
          v178 = v267;
          while (1)
          {
            OUTLINED_FUNCTION_85_5(v173);
            v179 = v178;
            v180 = v264;
            outlined init with copy of ConversationControlsAppLaunchButtonType(v179, v264, type metadata accessor for Participant.State);
            if (swift_getEnumCaseMultiPayload() == 4)
            {
              v181 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
              OUTLINED_FUNCTION_7_2((uint64_t *)(v180 + *(int *)(v181 + 64)));
              OUTLINED_FUNCTION_11_37();
              v182 = OUTLINED_FUNCTION_33();
              OUTLINED_FUNCTION_16_0(v182);
              outlined init with copy of FeatureEligibility?(v270, (uint64_t)v280, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
              OUTLINED_FUNCTION_50_17();
              if (v281 != 1)
              {
                OUTLINED_FUNCTION_51_14();
                v183 = v279;
                outlined destroy of Participant.ScreenInfo((uint64_t)&v276);
                v165 = v260;
                v197 = (uint64_t)v246;
                goto LABEL_98;
              }
            }
            else
            {
              outlined destroy of AccountUpdateNotice(v180, type metadata accessor for Participant.State);
              OUTLINED_FUNCTION_57_5();
              OUTLINED_FUNCTION_54_13(v269);
            }
            outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v280, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
            v183 = 2;
LABEL_98:
            v184 = v263;
            OUTLINED_FUNCTION_85_5(v267);
            if (v183 != 2)
            {
              outlined init with copy of ConversationControlsAppLaunchButtonType(v184, (uint64_t)v165, type metadata accessor for Participant.State);
              if (swift_getEnumCaseMultiPayload() == 4)
              {
                v185 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
                OUTLINED_FUNCTION_7_2((uint64_t *)((char *)v165 + *(int *)(v185 + 64)));
                OUTLINED_FUNCTION_11_37();
                v186 = OUTLINED_FUNCTION_33();
                (*(void (**)(objc_class *, uint64_t))(*(_QWORD *)(v186 - 8) + 8))(v165, v186);
                outlined init with copy of FeatureEligibility?(v270, (uint64_t)&v271, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
                OUTLINED_FUNCTION_50_17();
                if (v274 != 1)
                {
                  OUTLINED_FUNCTION_52_11();
                  OUTLINED_FUNCTION_76_7();
                  OUTLINED_FUNCTION_71_2(v184);
                  if ((v184 & 1) != 0)
                  {
                    v165 = v255;
                    outlined init with take of StagedCollaboration(v267, (uint64_t)v255, type metadata accessor for Participant);
                    v240 = 0;
                    v164 = v257;
                    goto LABEL_112;
                  }
                  goto LABEL_106;
                }
              }
              else
              {
                outlined destroy of AccountUpdateNotice((uint64_t)v165, type metadata accessor for Participant.State);
                v271 = 0;
                v272 = 0;
                v273 = 0;
                v274 = 1;
                OUTLINED_FUNCTION_54_13(v266);
              }
              outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v271, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
            }
            OUTLINED_FUNCTION_71_2(v184);
LABEL_106:
            v178 = v267;
            OUTLINED_FUNCTION_71_2(v267);
            v173 += v177;
            if (!--v171)
            {
              v240 = 1;
              v164 = v257;
              v165 = v255;
              goto LABEL_112;
            }
          }
        }
        v240 = 1;
        v165 = v255;
LABEL_112:
        OUTLINED_FUNCTION_83_0((uint64_t)v165, v240);
        OUTLINED_FUNCTION_27();
        OUTLINED_FUNCTION_23_30((uint64_t)v165);
        v73 = v247;
        if (!v191)
        {
          outlined init with take of StagedCollaboration((uint64_t)v165, (uint64_t)v248, type metadata accessor for Participant);
          v190 = v253;
          outlined init with copy of FeatureEligibility?(v197, v253, &demangling cache variable for type metadata for Participant?);
          OUTLINED_FUNCTION_23_30(v190);
          if (v191)
          {
            v192 = &demangling cache variable for type metadata for Participant?;
            v193 = (__int128 *)v190;
          }
          else
          {
            Participant.screenInfo.getter();
            OUTLINED_FUNCTION_15_12(v196, type metadata accessor for Participant);
            if (*((_QWORD *)&v277 + 1) != 1)
            {
              OUTLINED_FUNCTION_9_39();
LABEL_132:
              String.deviceAdjustedLocalizedKey(forDeviceFamily:)(v73, v190, 0xD000000000000011, 0x80000001BD673BC0);
              v203 = v202;
              v204 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
              v205 = OUTLINED_FUNCTION_63_10();
              v206.super.isa = v165;
              v207 = (_QWORD *)OUTLINED_FUNCTION_49_2(v205, v203, 0x61737265766E6F43, 0xEF74694B6E6F6974, v206);
              v209 = v208;
              OUTLINED_FUNCTION_133();

              __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
              v210 = OUTLINED_FUNCTION_15();
              *(_OWORD *)(v210 + 16) = xmmword_1BD6441D0;
              v211 = *(void **)&v248[*(int *)(v164 + 28)];
              v212 = MEMORY[0x1E0DEA968];
              v269 = v207;
              v270 = v209;
              if (v211)
              {
                v213 = v211;
                outlined bridged method (pb) of @objc TUHandle.siriDisplayName.getter(v213);
                if (v215)
                {
                  v216 = v214;
                  v217 = v215;
                  if ((objc_msgSend(v213, sel_shouldHideContact) & 1) != 0)
                  {
                    v268 = v216;
                    swift_bridgeObjectRetain();
                    v218 = v250;
                    PersonNameComponents.init()();
                    PersonNameComponents.givenName.setter();
                    PersonNameComponents.familyName.setter();
                    if (one-time initialization token for initials != -1)
                      swift_once();
                    swift_beginAccess();
                    v219 = (id)static NSPersonNameComponentsFormatter.initials;
                    isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
                    v221 = objc_msgSend(v219, sel_stringFromPersonNameComponents_, isa);

                    v222 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                    v224 = v223;

                    (*(void (**)(uint64_t, uint64_t))(v251 + 8))(v218, v245);
                    *(_QWORD *)&v276 = v222;
                    *((_QWORD *)&v276 + 1) = v224;
                    lazy protocol witness table accessor for type String and conformance String();
                    StringProtocol.localizedUppercase.getter();

                    OUTLINED_FUNCTION_53();
                    v225 = 0;
                    v226 = v217;
                    v227 = (uint64_t)v248;
                    v228 = v268;
                    goto LABEL_141;
                  }

                  OUTLINED_FUNCTION_21_0();
                }
                else
                {

                }
              }
              v227 = (uint64_t)v248;
              v229 = v252;
              outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v248, v252, type metadata accessor for Participant);
              swift_retain();
              ParticipantContactDetailsCache.contactDetails(for:)(v229, v230, v231, v232, v233, v234, v235, v236, v242, (uint64_t)v243, (uint64_t)v244, v245, (uint64_t)v246, v247, (uint64_t)v248, (uint64_t)v249, v250, v251, v252,
                v253);
              v228 = *((_QWORD *)&v277 + 1);
              v226 = v278;
              v225 = (id)v276;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              OUTLINED_FUNCTION_21_0();

              swift_release();
              v237 = v229;
              v212 = MEMORY[0x1E0DEA968];
              outlined destroy of AccountUpdateNotice(v237, type metadata accessor for Participant);
LABEL_141:
              swift_bridgeObjectRelease();
              OUTLINED_FUNCTION_21_0();

              *(_QWORD *)(v210 + 56) = v212;
              *(_QWORD *)(v210 + 64) = lazy protocol witness table accessor for type String and conformance String();
              *(_QWORD *)(v210 + 32) = v228;
              *(_QWORD *)(v210 + 40) = v226;
              String.init(format:_:)();
              OUTLINED_FUNCTION_36_24();
              OUTLINED_FUNCTION_27();
              outlined destroy of AccountUpdateNotice(v227, type metadata accessor for Participant);
              outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v246, &demangling cache variable for type metadata for Participant?);
LABEL_142:
              OUTLINED_FUNCTION_17_8(v80, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
              v238 = v283;
              v239 = v284;
              __swift_project_boxed_opaque_existential_1(v282, v283);
              (*(void (**)(uint64_t, uint64_t))(v239 + 72))(v238, v239);
              v276 = 0u;
              v277 = 0u;
              LOBYTE(v278) = 1;
              OUTLINED_FUNCTION_49_16();
              static NSAttributedString.localizedString(_:prefixImage:imageBounds:)();
            }
            v192 = (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?;
            v193 = &v276;
          }
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v193, v192);
          v73 = 0;
          LOBYTE(v190) = 1;
          goto LABEL_132;
        }
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v165, &demangling cache variable for type metadata for Participant?);
        outlined init with copy of FeatureEligibility?(v197, v73, &demangling cache variable for type metadata for Participant?);
        OUTLINED_FUNCTION_23_30(v73);
        if (v191)
        {
          v188 = &demangling cache variable for type metadata for Participant?;
          v189 = (__int128 *)v73;
        }
        else
        {
          v195 = v73;
          Participant.screenInfo.getter();
          outlined destroy of AccountUpdateNotice(v73, type metadata accessor for Participant);
          if (*((_QWORD *)&v277 + 1) != 1)
          {
            OUTLINED_FUNCTION_9_39();
            goto LABEL_129;
          }
          v188 = (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?;
          v189 = &v276;
        }
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v189, v188);
        v73 = 0;
        v195 = 1;
LABEL_129:
        String.deviceAdjustedLocalizedKey(forDeviceFamily:)(v73, v195, 0x535F4E4545524353, 0xEE00474E49524148);
        OUTLINED_FUNCTION_45_21();
        v194 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
        goto LABEL_130;
      }
    }
    OUTLINED_FUNCTION_33_16();
    v84 = OUTLINED_FUNCTION_31_13();
    v86 = (void *)v85(v84);

    outlined init with copy of RadarReporting((uint64_t)v282, (uint64_t)&v276);
    if (v86)
    {
      OUTLINED_FUNCTION_74_3();
LABEL_17:
      OUTLINED_FUNCTION_33_16();
      v87 = OUTLINED_FUNCTION_31_13();
      v88(v87);
      OUTLINED_FUNCTION_36_24();
      OUTLINED_FUNCTION_17_8(v89, (unint64_t *)&lazy cache variable for type metadata for UIImageView);
      v90 = v283;
      v91 = v284;
      __swift_project_boxed_opaque_existential_1(v282, v283);
      v92 = (*(uint64_t (**)(uint64_t, uint64_t))(v91 + 32))(v90, v91);
      static UIImageView.appIcon(for:)(v92, v93);
      v80 = swift_bridgeObjectRelease();
      goto LABEL_142;
    }
    __swift_project_boxed_opaque_existential_1(&v276, *((uint64_t *)&v277 + 1));
    v98 = v258;
    v99 = OUTLINED_FUNCTION_31_13();
    v100(v99);
    v101 = type metadata accessor for Collaboration(0);
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v98, 1, v101);
    v95 = v261;
    if (EnumTagSinglePayload == 1)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v98, &demangling cache variable for type metadata for Collaboration?);
      OUTLINED_FUNCTION_74_3();
      v94 = v262;
    }
    else
    {
      v133 = *(unsigned __int8 *)(v98 + 16);
      outlined destroy of AccountUpdateNotice(v98, type metadata accessor for Collaboration);
      OUTLINED_FUNCTION_74_3();
      v94 = v262;
      if (v133 == 2)
        goto LABEL_17;
    }
    v63 = v249;

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v282);
  }
  else
  {

    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v276, &demangling cache variable for type metadata for Activity?);
    v95 = v261;
    v94 = v262;
  }
  v134 = swift_getObjectType();
  v135 = (uint64_t (*)(uint64_t, char *))*((_QWORD *)v94 + 23);
  v136 = v135(v134, v94);
  if ((_DWORD)v136 == 1
    && OUTLINED_FUNCTION_2_2(v136, sel_state) == (id)3
    && (OUTLINED_FUNCTION_21_30(*((uint64_t (**)(uint64_t, uint64_t))v94 + 12)) & 1) != 0)
  {
    LODWORD(v270) = OUTLINED_FUNCTION_82_4(*v269) ^ 1;
  }
  else
  {
    LODWORD(v270) = 0;
  }
  LODWORD(v268) = OUTLINED_FUNCTION_22_32() != 5
               && (v137 = OUTLINED_FUNCTION_22_32(), (_DWORD)v137 != 6)
               && OUTLINED_FUNCTION_2_2(v137, sel_state) != (id)4;
  if ((OUTLINED_FUNCTION_66_9() & 1) == 0
    && (v138 = OUTLINED_FUNCTION_21_30(*((uint64_t (**)(uint64_t, uint64_t))v94 + 15)), (v138 & 1) != 0)
    && ((v139 = OUTLINED_FUNCTION_2_2(v138, sel_state), v139 == (id)2)
     || OUTLINED_FUNCTION_2_2((uint64_t)v139, sel_state) == (id)3)
    && OUTLINED_FUNCTION_22_32() != 1
    && (v140 = OUTLINED_FUNCTION_21_30(*((uint64_t (**)(uint64_t, uint64_t))v94 + 13)), (v140 & 1) != 0))
  {
    v141 = OUTLINED_FUNCTION_2_2(v140, sel_activeRemoteParticipants);
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
    lazy protocol witness table accessor for type TUHandle and conformance NSObject((unint64_t *)&lazy protocol witness table cache variable for type TUConversationParticipant and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
    v142 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    v143 = specialized Set.count.getter(v142);
    swift_bridgeObjectRelease();
    v144 = v143 != 0;
  }
  else
  {
    v144 = 1;
  }
  if (OUTLINED_FUNCTION_66_9())
  {
    v145 = (uint64_t (**)(uint64_t, uint64_t))v262;
    v146 = OUTLINED_FUNCTION_46_14(*((uint64_t (**)(uint64_t, uint64_t))v262 + 15));
  }
  else
  {
    v146 = 0;
    v145 = (uint64_t (**)(uint64_t, uint64_t))v262;
  }
  if ((OUTLINED_FUNCTION_46_14(v145[13]) & 1) == 0
    && (v147 = OUTLINED_FUNCTION_82_4(*v269), (v147 & 1) == 0)
    && (OUTLINED_FUNCTION_53_13(v147, sel_state) != (id)2) | v146 & 1
    && ((v148 = v135(v134, v262), (_DWORD)v148 != 3)
     || (v148 = (uint64_t)objc_msgSend(v266, sel_isOneToOneModeEnabled), (v148 & 1) != 0)
     || (v148 = (uint64_t)OUTLINED_FUNCTION_53_13(v148, sel_letMeInRequestState)) != 0)
    && OUTLINED_FUNCTION_53_13(v148, sel_state))
  {
    if (!((static Platform.current.getter() != 2) | v270 & 1))
    {
LABEL_75:
      v149 = v268 & v144;
      goto LABEL_78;
    }
  }
  else if ((v270 & 1) == 0)
  {
    goto LABEL_75;
  }
  v149 = 0;
LABEL_78:
  v150 = (uint64_t)v262;
  ConversationControlsManager.isOneToOneConversation.getter();
  if ((v151 & 1) != 0)
  {
    static ConversationControlsRecipeGenerator.individualCallSubtitle(conversation:call:isConnecting:)(v266, v95, v150, v149);
    OUTLINED_FUNCTION_44_15();
  }
  else
  {
    static ConversationControlsRecipeGenerator.groupCallSubtitle(conversation:isConnecting:)(v266, v149);
    OUTLINED_FUNCTION_44_15();

  }
}

id static ConversationControlsRecipeGenerator.badge(forCall:)()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  id v5;

  objc_opt_self();
  v0 = swift_dynamicCastObjCClass();
  if (!v0)
    return 0;
  v1 = (void *)v0;
  swift_unknownObjectRetain();
  if (!objc_msgSend(v1, sel_isRecording))
  {
    swift_unknownObjectRelease();
    return 0;
  }
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  v2 = @nonobjc UIImage.__allocating_init(systemName:)();
  if (v2)
  {
    v3 = objc_msgSend((id)objc_opt_self(), sel_systemWhiteColor);
    v4 = objc_msgSend(v2, sel_imageWithTintColor_renderingMode_, v3, 1);

    v2 = UIImage.withPadding(_:)(3.0);
  }
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_initWithImage_, v2);
  swift_unknownObjectRelease();

  return v5;
}

void static ConversationControlsRecipeGenerator.individualCallSubtitle(conversation:call:isConnecting:)(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t countAndFlagsBits;
  void *object;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  Swift::String v15;
  Swift::String_optional v16;
  Swift::String v17;
  Swift::String v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  id v27;
  uint64_t v28;
  char v29;
  uint64_t ObjectType;
  id v31;
  Swift::String v32;
  Swift::String_optional v33;
  Swift::String v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  void *v41;
  void *v42;
  id v43;
  id v44;
  id v45;
  id v46;
  Swift::String_optional v47;
  Swift::String v48;
  uint64_t v49;
  Swift::String v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  Swift::String_optional v55;
  Swift::String v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  void *v63;
  __int16 v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  Swift::String v68;
  Swift::String v69;

  if ((a4 & 1) != 0)
  {
    if (static Platform.current.getter() == 2)
    {
      _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
      countAndFlagsBits = 0;
      object = (void *)0xE000000000000000;
      goto LABEL_8;
    }
    v24 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
    v58 = 0xE000000000000000;
    v25 = 0x495443454E4E4F43;
    v26 = 0xEA0000000000474ELL;
LABEL_22:
    v47.value._countAndFlagsBits = 0x61737265766E6F43;
    v47.value._object = (void *)0xEF74694B6E6F6974;
    v48._countAndFlagsBits = 0;
    v48._object = (void *)0xE000000000000000;
    v49 = 0;
    v50 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v25, v47, (NSBundle)v24, v48, *(Swift::String *)(&v58 - 1));

    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSMutableAttributedString);
    NSMutableAttributedString.__allocating_init(string:)(v50);
  }
  v8 = objc_msgSend(a1, sel_localParticipantAssociation);

  if (!v8 || objc_msgSend(a1, sel_state) != (id)1)
  {
    if (!objc_msgSend(a1, sel_avMode))
    {
      v27 = objc_msgSend(a1, sel_activeRemoteParticipants);
      _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
      lazy protocol witness table accessor for type TUHandle and conformance NSObject((unint64_t *)&lazy protocol witness table cache variable for type TUConversationParticipant and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
      v28 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

      v29 = specialized Set.isEmpty.getter(v28);
      swift_bridgeObjectRelease();
      v24 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
      v58 = 0xE000000000000000;
      if ((v29 & 1) != 0)
      {
        v25 = 0x44455449564E49;
        v26 = 0xE700000000000000;
      }
      else
      {
        v25 = 0x455649544341;
        v26 = 0xE600000000000000;
      }
      goto LABEL_22;
    }
    if (objc_msgSend(a1, sel_isVideo))
    {
      _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
      v19 = (void *)*MEMORY[0x1E0DC4B10];
      v60 = 0x69662E6F65646976;
      v61 = 0xEA00000000006C6CLL;
      v62 = 1;
      v63 = v19;
      v64 = 0;
      v65 = 4;
      v66 = 0;
      v67 = 0;
      v20 = v19;
      v21 = static UIImage.symbolImage(for:)((uint64_t)&v60);

      swift_bridgeObjectRelease();
      if (v21)
      {
        v22 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
        v23 = objc_msgSend(v21, sel_imageWithTintColor_, v22);

      }
      _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
      v51 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
      v59 = 0xE000000000000000;
      v52 = 0x454D495445434146;
      v53 = 0x4F454449565FLL;
    }
    else
    {
      ObjectType = swift_getObjectType();
      if ((Call.isFromMessagesScreenShare.getter() & 1) != 0
        && (*(unsigned int (**)(uint64_t, uint64_t))(a3 + 184))(ObjectType, a3) == 3)
      {
        _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
        v31 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
        v32._countAndFlagsBits = 0xD000000000000027;
        v69._object = (void *)0xE000000000000000;
        v32._object = (void *)0x80000001BD673CC0;
        v33.value._countAndFlagsBits = 0x61737265766E6F43;
        v33.value._object = (void *)0xEF74694B6E6F6974;
        v34._countAndFlagsBits = 0;
        v34._object = (void *)0xE000000000000000;
        v69._countAndFlagsBits = 0;
        NSLocalizedString(_:tableName:bundle:value:comment:)(v32, v33, (NSBundle)v31, v34, v69);

        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
        v35 = swift_allocObject();
        *(_OWORD *)(v35 + 16) = xmmword_1BD6441D0;
        v36 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 64))(ObjectType, a3);
        v38 = v37;
        *(_QWORD *)(v35 + 56) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v35 + 64) = lazy protocol witness table accessor for type String and conformance String();
        *(_QWORD *)(v35 + 32) = v36;
        *(_QWORD *)(v35 + 40) = v38;
        v39 = String.init(format:_:)();
        v41 = v40;
        swift_bridgeObjectRelease();
        countAndFlagsBits = v39;
        object = v41;
LABEL_8:
        NSMutableAttributedString.__allocating_init(string:)(*(Swift::String *)&countAndFlagsBits);
      }
      _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
      v42 = (void *)*MEMORY[0x1E0DC4B10];
      v60 = 0x69662E656E6F6870;
      v61 = 0xEA00000000006C6CLL;
      v62 = 1;
      v63 = v42;
      v64 = 0;
      v65 = 4;
      v66 = 0;
      v67 = 0;
      v43 = v42;
      v44 = static UIImage.symbolImage(for:)((uint64_t)&v60);

      swift_bridgeObjectRelease();
      if (v44)
      {
        v45 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
        v46 = objc_msgSend(v44, sel_imageWithTintColor_, v45);

      }
      _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
      v51 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
      v59 = 0xE000000000000000;
      v52 = 0x454D495445434146;
      v53 = 0x4F494455415FLL;
    }
    v54 = v53 & 0xFFFFFFFFFFFFLL | 0xEE00000000000000;
    v55.value._countAndFlagsBits = 0x61737265766E6F43;
    v55.value._object = (void *)0xEF74694B6E6F6974;
    v56._countAndFlagsBits = 0;
    v56._object = (void *)0xE000000000000000;
    v57 = 0;
    NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v52, v55, (NSBundle)v51, v56, *(Swift::String *)(&v59 - 1));

    static NSAttributedString.localizedString(_:prefixImage:imageBounds:)();
  }
  v9 = (void *)MEMORY[0x1C3B72E00](0xD000000000000011, 0x80000001BD673C40);
  v10 = (id)TUStringKeyForProduct();

  if (v10)
  {
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v13 = v12;

    v14 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
    v68._object = (void *)0xE000000000000000;
    v15._countAndFlagsBits = v11;
    v15._object = v13;
    v16.value._countAndFlagsBits = 0x61737265766E6F43;
    v16.value._object = (void *)0xEF74694B6E6F6974;
    v17._countAndFlagsBits = 0;
    v17._object = (void *)0xE000000000000000;
    v68._countAndFlagsBits = 0;
    v18 = NSLocalizedString(_:tableName:bundle:value:comment:)(v15, v16, (NSBundle)v14, v17, v68);
    swift_bridgeObjectRelease();

    countAndFlagsBits = v18._countAndFlagsBits;
    object = v18._object;
    goto LABEL_8;
  }
  __break(1u);
}

void static ConversationControlsRecipeGenerator.groupCallSubtitle(conversation:isConnecting:)(void *a1, char a2)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  Swift::String v17;
  Swift::String_optional v18;
  Swift::String v19;
  Swift::String v20;
  uint64_t countAndFlagsBits;
  void *object;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  Swift::String v28;
  Swift::String_optional v29;
  Swift::String v30;
  Swift::String v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  Swift::String v36;
  Swift::String v37;
  Swift::String v38;

  v4 = objc_msgSend(a1, sel_mergedActiveRemoteParticipants);
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
  lazy protocol witness table accessor for type TUHandle and conformance NSObject((unint64_t *)&lazy protocol witness table cache variable for type TUConversationParticipant and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
  v5 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  v6 = specialized Set.count.getter(v5);
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(a1, sel_pendingMembers);
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
  lazy protocol witness table accessor for type TUHandle and conformance NSObject((unint64_t *)&lazy protocol witness table cache variable for type TUConversationMember and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
  v8 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  v9 = specialized Set.count.getter(v8);
  swift_bridgeObjectRelease();
  v10 = objc_msgSend(a1, sel_localParticipantAssociation);

  if (!v10 || objc_msgSend(a1, sel_state) != (id)1)
  {
    if (v6 || v9 < 1)
    {
      if ((a2 & 1) != 0)
      {
        v27 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
        v38._object = (void *)0xE000000000000000;
        v28._countAndFlagsBits = 0x495443454E4E4F43;
        v28._object = (void *)0xEA0000000000474ELL;
        v29.value._countAndFlagsBits = 0x61737265766E6F43;
        v29.value._object = (void *)0xEF74694B6E6F6974;
        v30._countAndFlagsBits = 0;
        v30._object = (void *)0xE000000000000000;
        v38._countAndFlagsBits = 0;
        v31 = NSLocalizedString(_:tableName:bundle:value:comment:)(v28, v29, (NSBundle)v27, v30, v38);
        countAndFlagsBits = v31._countAndFlagsBits;
        object = v31._object;

        goto LABEL_12;
      }
      String.localizedConversationControls.getter();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v32 = swift_allocObject();
      v33 = MEMORY[0x1E0DEB418];
      *(_OWORD *)(v32 + 16) = xmmword_1BD6441D0;
      v34 = MEMORY[0x1E0DEB490];
      *(_QWORD *)(v32 + 56) = v33;
      *(_QWORD *)(v32 + 64) = v34;
      *(_QWORD *)(v32 + 32) = v6;
      countAndFlagsBits = static String.localizedStringWithFormat(_:_:)();
      object = v35;
      swift_bridgeObjectRelease();
    }
    else
    {
      String.localizedConversationControls.getter();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v23 = swift_allocObject();
      v24 = MEMORY[0x1E0DEB418];
      *(_OWORD *)(v23 + 16) = xmmword_1BD6441D0;
      v25 = MEMORY[0x1E0DEB490];
      *(_QWORD *)(v23 + 56) = v24;
      *(_QWORD *)(v23 + 64) = v25;
      *(_QWORD *)(v23 + 32) = v9;
      countAndFlagsBits = static String.localizedStringWithFormat(_:_:)();
      object = v26;
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
LABEL_12:
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
    v36._countAndFlagsBits = countAndFlagsBits;
    v36._object = object;
    NSMutableAttributedString.__allocating_init(string:)(v36);
  }
  v11 = (void *)MEMORY[0x1C3B72E00](0xD000000000000011, 0x80000001BD673C40);
  v12 = (id)TUStringKeyForProduct();

  if (v12)
  {
    v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v15 = v14;

    v16 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
    v37._object = (void *)0xE000000000000000;
    v17._countAndFlagsBits = v13;
    v17._object = v15;
    v18.value._countAndFlagsBits = 0x61737265766E6F43;
    v18.value._object = (void *)0xEF74694B6E6F6974;
    v19._countAndFlagsBits = 0;
    v19._object = (void *)0xE000000000000000;
    v37._countAndFlagsBits = 0;
    v20 = NSLocalizedString(_:tableName:bundle:value:comment:)(v17, v18, (NSBundle)v16, v19, v37);
    countAndFlagsBits = v20._countAndFlagsBits;
    object = v20._object;
    swift_bridgeObjectRelease();

    goto LABEL_12;
  }
  __break(1u);
}

void ConversationControlsRecipeGenerator.faceTimeIncomingCallSubtitle(for:)(_QWORD *a1)
{
  void *v2;
  _QWORD *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;
  Swift::String v9;
  Swift::String_optional v10;
  Swift::String v11;
  Swift::String v12;
  uint64_t countAndFlagsBits;
  void *object;
  id v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  Swift::String v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t ObjectType;
  void *v31;
  uint64_t v32;
  void *v33;
  id v34;
  Swift::String v35;
  Swift::String_optional v36;
  Swift::String v37;
  Swift::String v38;
  uint64_t v39;
  Swift::String v40;
  Swift::String v41;

  v2 = (void *)0xEE004F494455415FLL;
  v3 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v4 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x290))();
  if (v4)
  {
    v5 = v4;
    if (objc_msgSend(v4, sel_resolvedAudioVideoMode) == (id)2)
      v2 = (void *)0xEE004F454449565FLL;
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    v6 = unk_1EF4FCB30;
    v7 = (void *)qword_1EF4FCB38;
    v8 = (id)static LocalizationSource.conversationKit;
    swift_bridgeObjectRetain();
    v40._object = (void *)0xE000000000000000;
    v9._countAndFlagsBits = 0x454D495445434146;
    v9._object = v2;
    v10.value._countAndFlagsBits = v6;
    v10.value._object = v7;
    v11._countAndFlagsBits = 0;
    v11._object = (void *)0xE000000000000000;
    v40._countAndFlagsBits = 0;
    v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, v10, (NSBundle)v8, v11, v40);
    countAndFlagsBits = v12._countAndFlagsBits;
    object = v12._object;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v15 = objc_msgSend(v5, sel_link);
    if (v15)
    {
      outlined bridged method (ob) of @objc TUConversationLink.displayName.getter(v15);
      if (v17)
      {
        v18 = v16;
        v19 = v17;
        swift_bridgeObjectRelease();
        countAndFlagsBits = v18;
        object = v19;
      }
    }
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
    v20._countAndFlagsBits = countAndFlagsBits;
    v20._object = object;
    NSMutableAttributedString.__allocating_init(string:)(v20);
  }
  (*(void (**)(void))((*v3 & *a1) + 0x270))();
  v22 = v21;
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v23 = type metadata accessor for Logger();
  __swift_project_value_buffer(v23, (uint64_t)&static Logger.conversationControls);
  swift_unknownObjectRetain_n();
  v24 = Logger.logObject.getter();
  v25 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = (uint8_t *)swift_slowAlloc();
    v27 = swift_slowAlloc();
    v39 = v27;
    *(_DWORD *)v26 = 136315138;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Call);
    v28 = String.init<A>(reflecting:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v28, v29, &v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v24, v25, "Unable to find FaceTime conversation for call %s", v26, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v27, -1, -1);
    MEMORY[0x1C3B751B8](v26, -1, -1);

  }
  else
  {

    swift_unknownObjectRelease_n();
  }
  ObjectType = swift_getObjectType();
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v22 + 128))(ObjectType, v22) & 1) != 0)
    v31 = (void *)0xEE004F454449565FLL;
  else
    v31 = (void *)0xEE004F494455415FLL;
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v32 = unk_1EF4FCB30;
  v33 = (void *)qword_1EF4FCB38;
  v34 = (id)static LocalizationSource.conversationKit;
  swift_bridgeObjectRetain();
  v41._object = (void *)0xE000000000000000;
  v35._countAndFlagsBits = 0x454D495445434146;
  v35._object = v31;
  v36.value._countAndFlagsBits = v32;
  v36.value._object = v33;
  v37._countAndFlagsBits = 0;
  v37._object = (void *)0xE000000000000000;
  v41._countAndFlagsBits = 0;
  v38 = NSLocalizedString(_:tableName:bundle:value:comment:)(v35, v36, (NSBundle)v34, v37, v41);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  NSMutableAttributedString.__allocating_init(string:)(v38);
}

uint64_t ConversationControlsRecipeGenerator.telephonyCallSubtitles(for:)(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  void *v7;
  unsigned int v8;
  char v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  Swift::String v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v25;

  v2 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v3 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x270))();
  v5 = v4;
  ObjectType = swift_getObjectType();
  v7 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 160))(ObjectType, v5);
  v8 = objc_msgSend(v7, sel_isTelephonyProvider);

  if (!v8)
  {
LABEL_13:
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  type metadata accessor for CallParticipantLabelDescriptor();
  v9 = (*(uint64_t (**)(void))((*v2 & *a1) + 0x968))();
  static CallParticipantLabelDescriptor.labelDescriptor(for:callCount:alertAvailable:allowsDuration:)(v3, v5, 1, v9 & 1, 0);
  if (!v10)
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v17 = type metadata accessor for Logger();
    __swift_project_value_buffer(v17, (uint64_t)&static Logger.conversationControls);
    swift_unknownObjectRetain_n();
    v18 = Logger.logObject.getter();
    v19 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      v21 = swift_slowAlloc();
      v25 = v21;
      *(_DWORD *)v20 = 136315138;
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Call);
      v22 = String.init<A>(reflecting:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v22, v23, &v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD004000, v18, v19, "Unable to obtain label descriptor for telephony call: %s", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v21, -1, -1);
      MEMORY[0x1C3B751B8](v20, -1, -1);

    }
    else
    {

      swift_unknownObjectRelease_n();
    }
    goto LABEL_13;
  }
  v11 = v10;
  v12 = (_QWORD *)(*(uint64_t (**)(void))((*v2 & *v10) + 0x80))();
  (*(void (**)(void))((*v2 & *v11) + 0x98))();
  if (v13)
    specialized Array.replaceSubrange<A>(_:with:)();
  if (v12[2])
  {
    v25 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    specialized ContiguousArray.reserveCapacity(_:)();
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
    v14 = v12[4];
    v15 = (void *)v12[5];
    swift_bridgeObjectRetain();
    v16._countAndFlagsBits = v14;
    v16._object = v15;
    NSMutableAttributedString.__allocating_init(string:)(v16);
  }
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  return MEMORY[0x1E0DEE9D8];
}

UIImage *UIImage.withPadding(_:)(double a1)
{
  void *v1;
  double v3;
  CGFloat v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  UIImage *v9;
  CGSize v11;

  objc_msgSend(v1, sel_size);
  v4 = a1 + a1 + v3;
  objc_msgSend(v1, sel_size);
  v6 = a1 + a1 + v5;
  objc_msgSend(v1, sel_scale);
  v8 = v7;
  v11.width = v4;
  v11.height = v6;
  UIGraphicsBeginImageContextWithOptions(v11, 0, v8);
  objc_msgSend(v1, sel_drawAtPoint_, a1, a1);
  v9 = UIGraphicsGetImageFromCurrentImageContext();
  UIGraphicsEndImageContext();
  return v9;
}

void *outlined bridged method (ob) of @objc TUNearbyDeviceHandle.name.getter(void *a1)
{
  return outlined bridged method (ob) of @objc TUConversationHandoffEligibility.localizedDeviceCategory.getter(a1, (SEL *)&selRef_name);
}

void *outlined bridged method (ob) of @objc TUConversationHandoffEligibility.localizedDeviceCategory.getter(void *a1, SEL *a2)
{
  void *v2;
  id v3;

  v2 = a1;
  v3 = objc_msgSend(a1, *a2);

  if (!v3)
    return 0;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  OUTLINED_FUNCTION_73();
  return v2;
}

id outlined bridged method (mbgnnn) of @objc static UIImage._applicationIconImage(forBundleIdentifier:format:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  void *v6;
  id v7;

  v6 = (void *)MEMORY[0x1C3B72E00]();
  v7 = objc_msgSend(a4, sel__applicationIconImageForBundleIdentifier_format_, v6, a3);

  return v7;
}

uint64_t outlined bridged method (pb) of @objc TUCollaborationInitiator.handle.getter(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_handle);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

id specialized static ConversationControlsRecipeGenerator.makeVoipBadgeIcon(for:)(void *a1)
{
  id v2;
  unsigned __int8 v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  id v12;

  v2 = objc_msgSend(a1, sel_provider);
  v3 = objc_msgSend(v2, sel_isSystemProvider);

  v4 = 0;
  if ((v3 & 1) == 0)
  {
    outlined bridged method (ob) of @objc TUCallProvider.bundleIdentifier.getter(objc_msgSend(a1, sel_provider));
    v7 = v6;
    if (v6)
    {
      v8 = v5;
      v9 = (void *)objc_opt_self();
      v4 = outlined bridged method (mbgnnn) of @objc static UIImage._applicationIconImage(forBundleIdentifier:format:)(v8, v7, 5, v9);
      if (v4)
      {
        v10 = objc_allocWithZone(MEMORY[0x1E0CA5870]);
        swift_bridgeObjectRetain();
        v11 = @nonobjc LSApplicationRecord.init(bundleIdentifier:allowPlaceholder:)(v8, v7, 1);
        swift_bridgeObjectRelease();
        v12 = objc_msgSend(v11, sel_localizedName);
        static String._unconditionallyBridgeFromObjectiveC(_:)();

      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      return 0;
    }
  }
  return v4;
}

id specialized static ConversationControlsRecipeGenerator.makeVoipBadgeIcon(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t (*v5)(uint64_t, uint64_t);
  void *v6;
  unsigned __int8 v7;
  id v8;
  uint64_t ObjectType;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  id v20;

  v5 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 160);
  v6 = (void *)v5(a3, a4);
  v7 = objc_msgSend(v6, sel_isSystemProvider);

  v8 = 0;
  if ((v7 & 1) == 0)
  {
    ObjectType = swift_getObjectType();
    v10 = (void *)v5(ObjectType, a4);
    outlined bridged method (ob) of @objc TUCallProvider.bundleIdentifier.getter(v10);
    if (v11)
    {
      OUTLINED_FUNCTION_36_24();
      objc_opt_self();
      v12 = OUTLINED_FUNCTION_49_16();
      v8 = outlined bridged method (mbgnnn) of @objc static UIImage._applicationIconImage(forBundleIdentifier:format:)(v12, v13, 5, v14);
      if (v8)
      {
        v15 = objc_allocWithZone(MEMORY[0x1E0CA5870]);
        OUTLINED_FUNCTION_25_2();
        v16 = OUTLINED_FUNCTION_49_16();
        v18 = @nonobjc LSApplicationRecord.init(bundleIdentifier:allowPlaceholder:)(v16, v17, 1);
        v19 = OUTLINED_FUNCTION_53();
        v20 = OUTLINED_FUNCTION_6_7(v19, sel_localizedName);
        static String._unconditionallyBridgeFromObjectiveC(_:)();

      }
      else
      {
        OUTLINED_FUNCTION_53();
      }
    }
    else
    {
      return 0;
    }
  }
  return v8;
}

uint64_t type metadata accessor for ConversationControlsRecipeGenerator()
{
  return objc_opt_self();
}

uint64_t method lookup function for ConversationControlsRecipeGenerator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ConversationControlsRecipeGenerator.generate(for:type:controlsManager:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of ConversationControlsRecipeGenerator.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

void outlined consume of SystemApertureElement?(void *a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, void *a7)
{
  if (a1 != (void *)1)
  {

  }
}

id outlined copy of ConversationControlsRecipe.View?(id result, void *a2)
{
  id v2;
  id v3;

  if (result)
  {
    v3 = result;
    v2 = a2;
    return v3;
  }
  return result;
}

void outlined consume of ConversationControlsRecipe.View?(void *a1, void *a2)
{
  if (a1)
  {

  }
}

uint64_t outlined consume of NoticeAccessory(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 2)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t outlined copy of SessionActionNotice.NoticeType(uint64_t result, uint64_t a2, unint64_t a3)
{
  if (a3 >> 62 == 2)
    return swift_bridgeObjectRetain();
  if ((a3 >> 62) <= 1)
    return outlined copy of CallScreening.EndingAction(result, a2, a3);
  return result;
}

uint64_t outlined consume of SessionActionNotice.NoticeType(uint64_t result, uint64_t a2, unint64_t a3)
{
  if (a3 >> 62 == 2)
    return swift_bridgeObjectRelease();
  if ((a3 >> 62) <= 1)
    return outlined consume of CallScreening.EndingAction(result, a2, a3);
  return result;
}

_QWORD *outlined retain of SystemApertureIcon?(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9]);
  return a1;
}

void *outlined consume of (icon: UIImage, accessibilityLabel: String)?(void *result)
{
  if (result)
  {

    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_39_23()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_76_7()
{
  uint64_t v0;

  return outlined destroy of Participant.ScreenInfo(v0 + 800);
}

void OUTLINED_FUNCTION_85_5(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(_QWORD);

  outlined init with copy of ConversationControlsAppLaunchButtonType(a1, v1, v2);
}

void Logger.traceFunctionStart(file:function:line:)()
{
  os_log_type_t v0;
  os_log_type_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  NSObject *v22;

  Logger.logObject.getter();
  v1 = OUTLINED_FUNCTION_12_10();
  if (OUTLINED_FUNCTION_9_40(v1, v2, v3, v4, v5, v6, v7, v8, v20, v21))
  {
    v9 = OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_105();
    *(_DWORD *)v9 = 136315650;
    v10 = StaticString.description.getter();
    OUTLINED_FUNCTION_16_26(v10, v11, v12, v13, v14);
    OUTLINED_FUNCTION_22_33();
    OUTLINED_FUNCTION_19_31();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2080;
    v15 = StaticString.description.getter();
    OUTLINED_FUNCTION_16_26(v15, v16, v17, v18, v19);
    OUTLINED_FUNCTION_19_31();
    OUTLINED_FUNCTION_133();
    OUTLINED_FUNCTION_13_41();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_30_28(&dword_1BD004000, v22, v0, "%s%s:%lu Called");
    OUTLINED_FUNCTION_21_31();
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_3_4(v22);
}

uint64_t specialized Logger.traceFunction<A>(returning:file:function:line:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, const void *a9)
{
  NSObject *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD __dst[11];
  uint64_t v18;

  v9 = OUTLINED_FUNCTION_29_24();
  static os_log_type_t.debug.getter();
  if (OUTLINED_FUNCTION_28_4(v9))
  {
    v10 = OUTLINED_FUNCTION_105();
    v18 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v10 = 136315906;
    v11 = OUTLINED_FUNCTION_15_37();
    OUTLINED_FUNCTION_25_27(v11, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ConversationKit/ConversationKit/Logger.swift");
    v12 = OUTLINED_FUNCTION_2_56();
    *(_WORD *)(v10 + 12) = 2080;
    __dst[0] = OUTLINED_FUNCTION_5_45(v12, 0x80000001BD674120, &v18);
    OUTLINED_FUNCTION_2_56();
    OUTLINED_FUNCTION_12_31();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v10 + 32) = 2080;
    memcpy(__dst, a9, sizeof(__dst));
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v13 = String.init<A>(reflecting:)();
    __dst[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v13, v14, &v18);
    OUTLINED_FUNCTION_7_53();
    OUTLINED_FUNCTION_133();
    OUTLINED_FUNCTION_6_37(&dword_1BD004000, v9, v15, "%s%s:#%ld returning %s");
    OUTLINED_FUNCTION_23_31();
    OUTLINED_FUNCTION_60();
  }

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

void specialized Logger.traceFunction<A>(returning:file:function:line:)()
{
  os_log_type_t v0;
  os_log_type_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *log;
  NSObject *loga;
  uint64_t v23;

  OUTLINED_FUNCTION_29_24();
  v1 = OUTLINED_FUNCTION_12_10();
  if (OUTLINED_FUNCTION_9_40(v1, v2, v3, v4, v5, v6, v7, v8, v20, log))
  {
    v9 = OUTLINED_FUNCTION_105();
    v23 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v9 = 136315906;
    v10 = OUTLINED_FUNCTION_15_37();
    OUTLINED_FUNCTION_16_26(v10, 0x80000001BD6740C0, v11, v12, v13);
    OUTLINED_FUNCTION_22_33();
    v14 = OUTLINED_FUNCTION_2_56();
    *(_WORD *)(v9 + 12) = 2080;
    OUTLINED_FUNCTION_5_45(v14, 0x80000001BD674120, &v23);
    OUTLINED_FUNCTION_2_56();
    OUTLINED_FUNCTION_13_41();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v9 + 32) = 2080;
    swift_retain();
    v15 = String.init<A>(reflecting:)();
    OUTLINED_FUNCTION_16_26(v15, v16, v17, v18, v19);
    OUTLINED_FUNCTION_7_53();
    OUTLINED_FUNCTION_133();
    _os_log_impl(&dword_1BD004000, loga, v0, "%s%s:#%ld returning %s", (uint8_t *)v9, 0x2Au);
    OUTLINED_FUNCTION_23_31();
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_4_46(loga);
}

{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;

  OUTLINED_FUNCTION_29_24();
  OUTLINED_FUNCTION_12_10();
  if (OUTLINED_FUNCTION_28_4(v10))
  {
    v0 = OUTLINED_FUNCTION_105();
    v11 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v0 = 136315906;
    v1 = OUTLINED_FUNCTION_15_37();
    OUTLINED_FUNCTION_16_26(v1, 0x80000001BD6740C0, v2, v3, v4);
    v5 = OUTLINED_FUNCTION_20_33();
    *(_WORD *)(v0 + 12) = 2080;
    OUTLINED_FUNCTION_5_45(v5, 0x80000001BD674120, &v11);
    OUTLINED_FUNCTION_20_33();
    OUTLINED_FUNCTION_12_31();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v0 + 32) = 2080;
    swift_retain();
    v6 = specialized CKStateMachine.description.getter();
    v8 = v7;
    OUTLINED_FUNCTION_19();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v6, v8, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_6_37(&dword_1BD004000, v10, v9, "%s%s:#%ld returning %s");
    OUTLINED_FUNCTION_23_31();
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_4_46(v10);
}

void Logger.traceFunction<A>(returning:file:function:line:)(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD v24[2];
  uint64_t v25;
  NSObject *v26;
  uint64_t v27;
  uint64_t v28;

  v12 = *(_QWORD *)(a10 - 8);
  MEMORY[0x1E0C80A78](a1);
  v14 = (char *)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain_n();
  v26 = Logger.logObject.getter();
  static os_log_type_t.debug.getter();
  if (OUTLINED_FUNCTION_28_4(v26))
  {
    v15 = OUTLINED_FUNCTION_105();
    v24[1] = a11;
    v16 = v15;
    v25 = OUTLINED_FUNCTION_105();
    v28 = v25;
    *(_DWORD *)v16 = 136315906;
    v17 = OUTLINED_FUNCTION_15_37();
    v27 = OUTLINED_FUNCTION_25_27(v17, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ConversationKit/ConversationKit/Logger.swift");
    v18 = OUTLINED_FUNCTION_24_24();
    *(_WORD *)(v16 + 12) = 2080;
    v27 = OUTLINED_FUNCTION_5_45(v18, 0x80000001BD674120, &v28);
    OUTLINED_FUNCTION_24_24();
    *(_WORD *)(v16 + 22) = 2048;
    v27 = 16;
    v19 = UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v16 + 32) = 2080;
    a1(v19);
    v20 = dispatch thunk of CustomStringConvertible.description.getter();
    v22 = v21;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, a10);
    v27 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v20, v22, &v28);
    OUTLINED_FUNCTION_7_53();
    OUTLINED_FUNCTION_16_8();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_6_37(&dword_1BD004000, v26, v23, "%s%s:#%ld returning %s");
    OUTLINED_FUNCTION_23_31();
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_16_8();

}

void Logger.traceFunctionReturn(file:function:line:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  const char *v9;

  OUTLINED_FUNCTION_14_44();
  OUTLINED_FUNCTION_33_17(v0, v1, v2, v3, v4, v5, v6, 40, v7, v8, v9);
  OUTLINED_FUNCTION_32_0();
}

void Logger.traceFunctionSuspensionStart(file:function:line:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  const char *v9;

  OUTLINED_FUNCTION_14_44();
  OUTLINED_FUNCTION_33_17(v0, v1, v2, v3, v4, v5, v6, 49, v7, v8, v9);
  OUTLINED_FUNCTION_32_0();
}

void Logger.traceFunctionSuspensionEnd(file:function:line:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  const char *v9;

  OUTLINED_FUNCTION_14_44();
  OUTLINED_FUNCTION_33_17(v0, v1, v2, v3, v4, v5, v6, 47, v7, v8, v9);
  OUTLINED_FUNCTION_32_0();
}

void Logger.traceFunctionReturn(file:function:line:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9, uint64_t a10, const char *a11)
{
  os_log_type_t v11;
  os_log_type_t v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  NSObject *v24;
  uint64_t v25;

  Logger.logObject.getter();
  v13 = OUTLINED_FUNCTION_12_10();
  if (OUTLINED_FUNCTION_9_40(v13, v14, v15, v16, v17, v18, v19, v20, v22, v23))
  {
    v21 = OUTLINED_FUNCTION_105();
    v25 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v21 = 136315650;
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000052, 0x80000001BD6740C0, &v25);
    OUTLINED_FUNCTION_22_33();
    OUTLINED_FUNCTION_18_39();
    *(_WORD *)(v21 + 12) = 2080;
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a8, a9, &v25);
    OUTLINED_FUNCTION_18_39();
    OUTLINED_FUNCTION_13_41();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_30_28(&dword_1BD004000, v24, v11, a11);
    OUTLINED_FUNCTION_21_31();
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_3_4(v24);
}

Swift::Void __swiftcall MultiwayViewController.registerForSystemEventsIfNecessary()()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  id v9;
  void **v10;
  void *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  os_log_type_t v18;
  uint8_t *v19;
  NSObject *v20;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((OUTLINED_FUNCTION_16_3(**(_QWORD **)&v0[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_features]) & 1) != 0)
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    v5 = type metadata accessor for Logger();
    __swift_project_value_buffer(v5, (uint64_t)&static Logger.conversationKit);
    v6 = Logger.logObject.getter();
    v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)OUTLINED_FUNCTION_7_8();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_1BD004000, v6, v7, "dockkit registering for system events", v8, 2u);
      OUTLINED_FUNCTION_60();
    }

    v9 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SystemEventsAgent()), sel_init);
    v10 = (void **)&v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_remoteControlAccessoryEventsAgent];
    swift_beginAccess();
    v11 = *v10;
    *v10 = v9;

    v12 = type metadata accessor for TaskPriority();
    __swift_storeEnumTagSinglePayload((uint64_t)v4, 1, 1, v12);
    type metadata accessor for MainActor();
    v13 = v1;
    v14 = static MainActor.shared.getter();
    v15 = (_QWORD *)swift_allocObject();
    v16 = MEMORY[0x1E0DF06E8];
    v15[2] = v14;
    v15[3] = v16;
    v15[4] = v13;
    _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
    swift_release();
  }
  else
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    v17 = type metadata accessor for Logger();
    __swift_project_value_buffer(v17, (uint64_t)&static Logger.conversationKit);
    v20 = Logger.logObject.getter();
    v18 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v20, v18))
    {
      v19 = (uint8_t *)OUTLINED_FUNCTION_7_8();
      *(_WORD *)v19 = 0;
      _os_log_impl(&dword_1BD004000, v20, v18, "DockKit system events control feature not enabled", v19, 2u);
      OUTLINED_FUNCTION_60();
    }

  }
}

uint64_t closure #1 in MultiwayViewController.registerForSystemEventsIfNecessary()()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[2] = type metadata accessor for MainActor();
  v0[3] = static MainActor.shared.getter();
  v1 = (_QWORD *)swift_task_alloc();
  v0[4] = v1;
  *v1 = v0;
  v1[1] = closure #1 in MultiwayViewController.registerForSystemEventsIfNecessary();
  return MultiwayViewController.registerForSystemEvents()();
}

{
  OUTLINED_FUNCTION_1_6();
  dispatch thunk of Actor.unownedExecutor.getter();
  return swift_task_switch();
}

{
  uint64_t v0;

  swift_release();
  return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t MultiwayViewController.registerForSystemEvents()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[5] = v0;
  type metadata accessor for MainActor();
  v1[6] = static MainActor.shared.getter();
  v1[7] = dispatch thunk of Actor.unownedExecutor.getter();
  v1[8] = v2;
  return swift_task_switch();
}

{
  uint64_t v0;
  void **v1;
  void *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(void (*)(void *), uint64_t);

  v1 = (void **)(*(_QWORD *)(v0 + 40)
               + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_remoteControlAccessoryEventsAgent);
  swift_beginAccess();
  v2 = *v1;
  *(_QWORD *)(v0 + 72) = *v1;
  if (v2)
  {
    v3 = swift_allocObject();
    *(_QWORD *)(v0 + 80) = v3;
    swift_unknownObjectWeakInit();
    v6 = (uint64_t (*)(void (*)(void *), uint64_t))((int)*MEMORY[0x1E0D1D7A0] + MEMORY[0x1E0D1D7A0]);
    v2;
    swift_retain();
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 88) = v4;
    *v4 = v0;
    v4[1] = MultiwayViewController.registerForSystemEvents();
    return v6(partial apply for closure #1 in MultiwayViewController.registerForSystemEvents(), v3);
  }
  else
  {
    swift_release();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(*(_QWORD *)v0 + 72);
  swift_task_dealloc();
  swift_release_n();

  return swift_task_switch();
}

{
  uint64_t v0;

  swift_release();
  return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v0 + 8));
}

Swift::Void __swiftcall MultiwayViewController.deregisterForSystemEventsIfNecessary()()
{
  uint64_t v0;

  if ((OUTLINED_FUNCTION_16_3(**(_QWORD **)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_features)) & 1) != 0)
    MultiwayViewController.deregisterForSystemEvents()();
}

void MultiwayViewController.deregisterForSystemEvents()()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_remoteControlAccessoryEventsAgent);
  swift_beginAccess();
  v2 = *v1;
  if (*v1)
  {
    v3 = v2;
    dispatch thunk of SystemEventsAgent.deregisterSync()();

    v2 = *v1;
  }
  *v1 = 0;

}

void closure #1 in MultiwayViewController.registerForSystemEvents()(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v3 = a2 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1C3B752C0](v3);
  if (v4)
  {
    v5 = (void *)v4;
    MultiwayViewController.handleDockKitEventCallback(event:)(a1);

  }
}

void MultiwayViewController.handleDockKitEventCallback(event:)(void *a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unsigned __int8 v10;
  uint64_t v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  _BOOL4 v15;
  uint8_t *v16;
  uint64_t v17;
  uint8_t *v18;
  uint8_t *v19;
  char *v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  void *v25;
  uint64_t v26;
  NSObject *v27;
  void *v28;
  NSObject *v29;
  char *v30;
  uint64_t v31;
  int v32;
  void *v33;
  uint64_t v34;
  NSObject *v35;
  void *v36;
  NSObject *v37;
  char *v38;
  uint64_t v39;
  id v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  NSObject *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  NSObject *v56;
  uint64_t aBlock;
  uint64_t v58;
  uint64_t (*v59)(uint64_t);
  void *v60;
  void (*v61)();
  uint64_t v62;

  v2 = type metadata accessor for DispatchWorkItemFlags();
  v3 = *(char **)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = AccessorySystemEvent.header.getter();
  type metadata accessor for AccessorySystemEvent();
  if (static AccessorySystemEvent.kHeaderCameraShutter.getter() == v10)
  {
    v55 = v7;
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    v11 = type metadata accessor for Logger();
    __swift_project_value_buffer(v11, (uint64_t)&static Logger.conversationKit);
    v12 = a1;
    v13 = Logger.logObject.getter();
    v14 = static os_log_type_t.default.getter();
    v15 = os_log_type_enabled(v13, v14);
    v54 = v5;
    if (v15)
    {
      v16 = (uint8_t *)swift_slowAlloc();
      v52 = v6;
      v53 = v3;
      v17 = v2;
      v18 = v16;
      *(_DWORD *)v16 = 67109120;
      LODWORD(aBlock) = AccessorySystemEvent.payload.getter();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      _os_log_impl(&dword_1BD004000, v13, v14, "Remote control accessory shutter button pressed with payload %u", v18, 8u);
      v19 = v18;
      v2 = v17;
      v6 = v52;
      v3 = v53;
      MEMORY[0x1C3B751B8](v19, -1, -1);

    }
    else
    {

    }
    v31 = v55;
    v32 = AccessorySystemEvent.payload.getter();
    if (v32 == static AccessorySystemEvent.kHeaderEventRelease.getter())
    {
      type metadata accessor for OS_dispatch_queue();
      v33 = (void *)static OS_dispatch_queue.main.getter();
      v34 = swift_allocObject();
      v35 = v56;
      *(_QWORD *)(v34 + 16) = v56;
      v61 = partial apply for closure #1 in MultiwayViewController.handleDockKitEventCallback(event:);
      v62 = v34;
      aBlock = MEMORY[0x1E0C809B0];
      v58 = 1107296256;
      v59 = thunk for @escaping @callee_guaranteed () -> ();
      v60 = &block_descriptor_21_1;
      v36 = _Block_copy(&aBlock);
      v37 = v35;
      swift_release();
      static DispatchQoS.unspecified.getter();
      aBlock = MEMORY[0x1E0DEE9D8];
      lazy protocol witness table accessor for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
      lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]();
      v38 = v54;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      MEMORY[0x1C3B7361C](0, v9, v38, v36);
      _Block_release(v36);

      (*((void (**)(char *, uint64_t))v3 + 1))(v38, v2);
      (*(void (**)(char *, uint64_t))(v31 + 8))(v9, v6);
    }
    return;
  }
  if (static AccessorySystemEvent.kHeaderCameraFlip.getter() == v10)
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    v20 = v5;
    v21 = type metadata accessor for Logger();
    __swift_project_value_buffer(v21, (uint64_t)&static Logger.conversationKit);
    v22 = Logger.logObject.getter();
    v23 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v24 = 0;
      _os_log_impl(&dword_1BD004000, v22, v23, "Remote control accessory flip button pressed.", v24, 2u);
      MEMORY[0x1C3B751B8](v24, -1, -1);
    }

    type metadata accessor for OS_dispatch_queue();
    v25 = (void *)static OS_dispatch_queue.main.getter();
    v26 = swift_allocObject();
    v27 = v56;
    *(_QWORD *)(v26 + 16) = v56;
    v61 = partial apply for closure #2 in MultiwayViewController.handleDockKitEventCallback(event:);
    v62 = v26;
    aBlock = MEMORY[0x1E0C809B0];
    v58 = 1107296256;
    v59 = thunk for @escaping @callee_guaranteed () -> ();
    v60 = &block_descriptor_15_0;
    v28 = _Block_copy(&aBlock);
    v29 = v27;
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock = MEMORY[0x1E0DEE9D8];
    lazy protocol witness table accessor for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags();
    v30 = v9;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]();
LABEL_30:
    dispatch thunk of SetAlgebra.init<A>(_:)();
    MEMORY[0x1C3B7361C](0, v30, v20, v28);
    _Block_release(v28);

    (*((void (**)(char *, uint64_t))v3 + 1))(v20, v2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v30, v6);
    return;
  }
  if (static AccessorySystemEvent.kHeaderCameraZoom.getter() == v10)
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    v54 = v5;
    v39 = type metadata accessor for Logger();
    __swift_project_value_buffer(v39, (uint64_t)&static Logger.conversationKit);
    v40 = a1;
    v41 = Logger.logObject.getter();
    v42 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc();
      v53 = v9;
      *(_DWORD *)v43 = 67109120;
      v55 = v7;
      LODWORD(aBlock) = AccessorySystemEvent.payload.getter();
      v7 = v55;
      v9 = v53;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      _os_log_impl(&dword_1BD004000, v41, v42, "Remote control accessory zoom button pressed with payload %u", v43, 8u);
      MEMORY[0x1C3B751B8](v43, -1, -1);

    }
    else
    {

    }
    if (AccessorySystemEvent.payload.getter())
      v47 = 1;
    else
      v47 = -1;
    type metadata accessor for OS_dispatch_queue();
    v25 = (void *)static OS_dispatch_queue.main.getter();
    v48 = swift_allocObject();
    v49 = v56;
    *(_QWORD *)(v48 + 16) = v56;
    *(_QWORD *)(v48 + 24) = v47;
    v61 = partial apply for closure #3 in MultiwayViewController.handleDockKitEventCallback(event:);
    v62 = v48;
    aBlock = MEMORY[0x1E0C809B0];
    v58 = 1107296256;
    v59 = thunk for @escaping @callee_guaranteed () -> ();
    v60 = &block_descriptor_17;
    v28 = _Block_copy(&aBlock);
    v50 = v49;
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock = MEMORY[0x1E0DEE9D8];
    lazy protocol witness table accessor for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags();
    v30 = v9;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]();
    v20 = v54;
    goto LABEL_30;
  }
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v44 = type metadata accessor for Logger();
  __swift_project_value_buffer(v44, (uint64_t)&static Logger.conversationKit);
  v56 = Logger.logObject.getter();
  v45 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v56, v45))
  {
    v46 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v46 = 0;
    _os_log_impl(&dword_1BD004000, v56, v45, "Remote control accessory unknown button pressed, ignoring", v46, 2u);
    MEMORY[0x1C3B751B8](v46, -1, -1);
  }

}

void closure #2 in MultiwayViewController.handleDockKitEventCallback(event:)()
{
  ConversationController.swapLocalParticipantCamera()();
  MultiwayViewController.updateShouldShowReactionPickerTipView()();
}

void closure #3 in MultiwayViewController.handleDockKitEventCallback(event:)(uint64_t a1, uint64_t a2)
{
  id *v3;
  void (*v4)(uint64_t, float);
  id v5;

  v3 = (id *)(a1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_pipZoomControl);
  swift_beginAccess();
  v4 = *(void (**)(uint64_t, float))((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)*v3) + 0x1B0);
  v5 = *v3;
  v4(a2, 0.1);

}

uint64_t sub_1BD11AB90()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in MultiwayViewController.registerForSystemEventsIfNecessary()()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = partial apply for closure #1 in MultiwayViewController.registerForSystemEventsIfNecessary();
  return closure #1 in MultiwayViewController.registerForSystemEventsIfNecessary()();
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_1_6();
  return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1BD11AC5C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void partial apply for closure #1 in MultiwayViewController.registerForSystemEvents()(void *a1)
{
  uint64_t v1;

  closure #1 in MultiwayViewController.registerForSystemEvents()(a1, v1);
}

uint64_t sub_1BD11AC88()
{
  uint64_t v0;

  return swift_deallocObject();
}

void partial apply for closure #3 in MultiwayViewController.handleDockKitEventCallback(event:)()
{
  uint64_t v0;

  closure #3 in MultiwayViewController.handleDockKitEventCallback(event:)(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1BD11ACB4()
{
  uint64_t v0;

  return swift_deallocObject();
}

void partial apply for closure #2 in MultiwayViewController.handleDockKitEventCallback(event:)()
{
  closure #2 in MultiwayViewController.handleDockKitEventCallback(event:)();
}

void partial apply for closure #1 in MultiwayViewController.handleDockKitEventCallback(event:)()
{
  MultiwayViewController.didTapOneToOneShutterButton()();
}

uint64_t ClarityUIDialerKeypadView.init(enteredNumbers:isPresented:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X8>)
{
  if (one-time initialization token for shared != -1)
    swift_once();
  *(_QWORD *)a8 = static ClarityUIPreferences.shared;
  *(_QWORD *)(a8 + 8) = a1;
  *(_QWORD *)(a8 + 16) = a2;
  *(_QWORD *)(a8 + 24) = a3;
  *(_QWORD *)(a8 + 32) = a4;
  *(_QWORD *)(a8 + 40) = a5;
  *(_QWORD *)(a8 + 48) = a6;
  *(_BYTE *)(a8 + 56) = a7 & 1;
  return swift_retain();
}

uint64_t ClarityUIDialerKeypadView.enteredNumbers.getter()
{
  uint64_t v0;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<String>);
  MEMORY[0x1C3B72860](&v2, v0);
  return v2;
}

void key path setter for ClarityUIDialerKeypadView.enteredNumbers : ClarityUIDialerKeypadView()
{
  swift_bridgeObjectRetain();
  ClarityUIDialerKeypadView.enteredNumbers.setter();
}

void ClarityUIDialerKeypadView.enteredNumbers.setter()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<String>);
  Binding.wrappedValue.setter();
  OUTLINED_FUNCTION_18_6();
}

void ClarityUIDialerKeypadView.enteredNumbers.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v3 = malloc(0x78uLL);
  *a1 = v3;
  v4 = *(_QWORD *)(v1 + 8);
  v5 = *(_QWORD *)(v1 + 16);
  v3[11] = v1;
  v3[12] = v4;
  v3[13] = v5;
  v6 = *(_OWORD *)(v1 + 24);
  *((_OWORD *)v3 + 3) = v6;
  v3[10] = v4;
  *v3 = v4;
  v3[1] = v5;
  *((_OWORD *)v3 + 1) = v6;
  outlined retain of AnyLocation<String>?((uint64_t)(v3 + 10));
  swift_retain();
  outlined retain of String((uint64_t)(v3 + 6));
  v3[14] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<String>);
  OUTLINED_FUNCTION_4_47();
}

void (*sub_1BD11AEE8())(uint64_t a1, char a2)
{
  return ClarityUIDialerKeypadView.enteredNumbers.modify;
}

void ClarityUIDialerKeypadView.enteredNumbers.modify(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;

  v2 = *(_QWORD **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v4 = *(_QWORD *)a1 + 48;
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 88);
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 104);
  *v2 = *(_QWORD *)(*(_QWORD *)a1 + 96);
  v2[1] = v6;
  v7 = *(_OWORD *)(v5 + 24);
  v2[8] = v3;
  v8 = v2[5];
  *((_OWORD *)v2 + 1) = v7;
  v2[9] = v8;
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_6_38();
    outlined release of Transaction((uint64_t)(v2 + 10));
    OUTLINED_FUNCTION_11_0();
    outlined release of String(v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_6_38();
    outlined release of Transaction((uint64_t)(v2 + 10));
    OUTLINED_FUNCTION_11_0();
    outlined release of String(v4);
  }
  free(v2);
}

uint64_t ClarityUIDialerKeypadView.$enteredNumbers.getter()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<String>);
  Binding.projectedValue.getter();
  return v1;
}

uint64_t ClarityUIDialerKeypadView.isPresented.getter()
{
  uint64_t v0;
  uint64_t v2;

  OUTLINED_FUNCTION_8_9();
  v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<Bool>);
  MEMORY[0x1C3B72860](&v2, v0);
  return v2;
}

void ClarityUIDialerKeypadView.isPresented.setter()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<Bool>);
  Binding.wrappedValue.setter();
  OUTLINED_FUNCTION_18_6();
}

void ClarityUIDialerKeypadView.isPresented.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = *(_QWORD *)(v1 + 40);
  v5 = *(_QWORD *)(v1 + 48);
  v3[4] = v4;
  v3[5] = v5;
  v6 = *(_BYTE *)(v1 + 56);
  *((_BYTE *)v3 + 19) = v6;
  v3[3] = v4;
  *v3 = v4;
  v3[1] = v5;
  *((_BYTE *)v3 + 16) = v6;
  outlined retain of AnyLocation<String>?((uint64_t)(v3 + 3));
  swift_retain();
  v3[6] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<Bool>);
  OUTLINED_FUNCTION_4_47();
}

void (*sub_1BD11B0E8())(uint64_t a1)
{
  return ClarityUIDialerKeypadView.isPresented.modify;
}

void ClarityUIDialerKeypadView.isPresented.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  char v5;

  v1 = *(_QWORD **)a1;
  v2 = *(_QWORD *)a1 + 24;
  v3 = *(_BYTE *)(*(_QWORD *)a1 + 18);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  v5 = *(_BYTE *)(*(_QWORD *)a1 + 19);
  *v1 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v1[1] = v4;
  *((_BYTE *)v1 + 16) = v5;
  *((_BYTE *)v1 + 17) = v3;
  Binding.wrappedValue.setter();
  outlined release of Transaction(v2);
  OUTLINED_FUNCTION_11_0();
  free(v1);
}

uint64_t ClarityUIDialerKeypadView.$isPresented.getter()
{
  uint64_t v1;

  OUTLINED_FUNCTION_8_9();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<Bool>);
  Binding.projectedValue.getter();
  return v1;
}

void ClarityUIDialerKeypadView.body.getter(uint64_t a1@<X8>)
{
  _OWORD *v1;
  uint64_t v2;
  _OWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t KeyPath;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v3 = v1;
  v69 = a1;
  v4 = type metadata accessor for MoveTransition();
  v67 = *(_QWORD *)(v4 - 8);
  v68 = v4;
  v5 = MEMORY[0x1E0C80A78](v4);
  v66 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v65 = (char *)&v58 - v7;
  v8 = type metadata accessor for DynamicTypeSize();
  v63 = *(_QWORD *)(v8 - 8);
  v64 = v8;
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_77();
  v62 = v10 - v9;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_6_0();
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>, _PaddingLayout>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_77();
  v16 = v15 - v14;
  v59 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_77();
  v20 = v19 - v18;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<ClarityUIDialerKeypadView.BarShape>>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v22);
  OUTLINED_FUNCTION_77();
  v25 = v24 - v23;
  v60 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<ClarityUIDialerKeypadView.BarShape>>, _EnvironmentKeyWritingModifier<DynamicTypeSize>>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v26);
  OUTLINED_FUNCTION_77();
  v29 = v28 - v27;
  v61 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<ClarityUIDialerKeypadView.BarShape>>, _EnvironmentKeyWritingModifier<DynamicTypeSize>>, _TraitWritingModifier<TransitionTraitKey>>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v30);
  OUTLINED_FUNCTION_77();
  v33 = v32 - v31;
  *(_QWORD *)v2 = static HorizontalAlignment.center.getter();
  *(_QWORD *)(v2 + 8) = 0;
  *(_BYTE *)(v2 + 16) = 0;
  v34 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>);
  closure #1 in ClarityUIDialerKeypadView.body.getter(v3, v2 + *(int *)(v34 + 44));
  LOBYTE(v3) = static Edge.Set.vertical.getter();
  static ClarityUIMetrics.standardSpacing.getter();
  EdgeInsets.init(_all:)();
  v36 = v35;
  v38 = v37;
  v40 = v39;
  v42 = v41;
  outlined init with copy of VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>(v2, v16, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>);
  v43 = v16 + *(int *)(v12 + 36);
  *(_BYTE *)v43 = (_BYTE)v3;
  *(_QWORD *)(v43 + 8) = v36;
  *(_QWORD *)(v43 + 16) = v38;
  *(_QWORD *)(v43 + 24) = v40;
  *(_QWORD *)(v43 + 32) = v42;
  *(_BYTE *)(v43 + 40) = 0;
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v2, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>);
  v44 = static Color.clarityUIContentBackground.getter();
  LOBYTE(v3) = static Edge.Set.all.getter();
  outlined init with copy of VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>(v16, v20, &demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>, _PaddingLayout>);
  v45 = v20 + *(int *)(v59 + 36);
  *(_QWORD *)v45 = v44;
  *(_BYTE *)(v45 + 8) = (_BYTE)v3;
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v16, &demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>, _PaddingLayout>);
  outlined init with copy of VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>(v20, v25, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>);
  *(_WORD *)(v25 + *(int *)(v21 + 36)) = 256;
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v20, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>);
  KeyPath = swift_getKeyPath();
  v48 = v62;
  v47 = v63;
  v49 = v64;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v63 + 104))(v62, *MEMORY[0x1E0CD98D0], v64);
  v50 = (uint64_t *)(v29 + *(int *)(v60 + 36));
  v51 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<DynamicTypeSize>);
  (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))((char *)v50 + *(int *)(v51 + 28), v48, v49);
  *v50 = KeyPath;
  outlined init with copy of VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>(v25, v29, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<ClarityUIDialerKeypadView.BarShape>>);
  (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v48, v49);
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v25, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<ClarityUIDialerKeypadView.BarShape>>);
  v52 = v65;
  MoveTransition.init(edge:)();
  v53 = v67;
  v54 = v68;
  (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v66, v52, v68);
  lazy protocol witness table accessor for type MoveTransition and conformance MoveTransition();
  v55 = v54;
  v56 = AnyTransition.init<A>(_:)();
  outlined init with copy of VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>(v29, v33, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<ClarityUIDialerKeypadView.BarShape>>, _EnvironmentKeyWritingModifier<DynamicTypeSize>>);
  *(_QWORD *)(v33 + *(int *)(v61 + 36)) = v56;
  (*(void (**)(char *, uint64_t))(v53 + 8))(v52, v55);
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v29, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<ClarityUIDialerKeypadView.BarShape>>, _EnvironmentKeyWritingModifier<DynamicTypeSize>>);
  v57 = v69;
  outlined init with copy of VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>(v33, v69, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<ClarityUIDialerKeypadView.BarShape>>, _EnvironmentKeyWritingModifier<DynamicTypeSize>>, _TraitWritingModifier<TransitionTraitKey>>);
  *(_BYTE *)(v57
           + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<ClarityUIDialerKeypadView.BarShape>>, _EnvironmentKeyWritingModifier<DynamicTypeSize>>, _TraitWritingModifier<TransitionTraitKey>>, _PreferenceWritingModifier<MultimodalChromeVisiblePreferenceKey>>)
                    + 36)) = 0;
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v33, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<ClarityUIDialerKeypadView.BarShape>>, _EnvironmentKeyWritingModifier<DynamicTypeSize>>, _TraitWritingModifier<TransitionTraitKey>>);
}

void closure #1 in ClarityUIDialerKeypadView.body.getter(_OWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  _OWORD *v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  _BYTE v41[4];
  int v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  unsigned __int8 v48;
  uint64_t v49;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v41[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = &v41[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v8);
  v12 = &v41[-v11];
  static ClarityUIMetrics.standardSpacing.getter();
  v14 = v13;
  *(_QWORD *)v6 = static VerticalAlignment.center.getter();
  *((_QWORD *)v6 + 1) = v14;
  v6[16] = 0;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_HStackLayout, TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>);
  closure #1 in closure #1 in ClarityUIDialerKeypadView.body.getter(a1, &v6[*(int *)(v15 + 44)]);
  v16 = static Edge.Set.horizontal.getter();
  static ClarityUIMetrics.standardSpacing.getter();
  EdgeInsets.init(_all:)();
  v18 = v17;
  v20 = v19;
  v22 = v21;
  v24 = v23;
  outlined init with copy of VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>((uint64_t)v6, (uint64_t)v10, &demangling cache variable for type metadata for HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>);
  v25 = &v10[*(int *)(v7 + 36)];
  *v25 = v16;
  *((_QWORD *)v25 + 1) = v18;
  *((_QWORD *)v25 + 2) = v20;
  *((_QWORD *)v25 + 3) = v22;
  *((_QWORD *)v25 + 4) = v24;
  v25[40] = 0;
  outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v6, &demangling cache variable for type metadata for HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>);
  outlined init with take of ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>((uint64_t)v10, (uint64_t)v12);
  static ClarityUIMetrics.standardSpacing.getter();
  v27 = v26;
  v28 = (_OWORD *)swift_allocObject();
  v29 = a1[1];
  v28[1] = *a1;
  v28[2] = v29;
  v28[3] = a1[2];
  *(_OWORD *)((char *)v28 + 57) = *(_OWORD *)((char *)a1 + 41);
  v43 = 0;
  v44 = 0;
  v45 = 1;
  outlined retain of ClarityUIDialerKeypadView((uint64_t)a1);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CGSize?);
  State.init(wrappedValue:)();
  v30 = v46;
  v31 = v47;
  v42 = v48;
  v32 = v49;
  static ClarityUIMetrics.standardSpacing.getter();
  v34 = v33;
  v35 = closure #1 in variable initialization expression of ClarityUIKeypadView.numberPadStrings();
  v36 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DBD130]), sel_init);
  outlined init with copy of VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>((uint64_t)v12, (uint64_t)v10, &demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>);
  outlined init with copy of VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>((uint64_t)v10, a2, &demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView));
  v38 = a2 + *(int *)(v37 + 48);
  *(_QWORD *)v38 = v27;
  *(_BYTE *)(v38 + 8) = 0;
  v39 = a2 + *(int *)(v37 + 64);
  *(_QWORD *)v39 = v30;
  *(_QWORD *)(v39 + 8) = v31;
  *(_BYTE *)(v39 + 16) = v42;
  *(_QWORD *)(v39 + 24) = v32;
  *(_QWORD *)(v39 + 32) = 0x4020000000000000;
  *(_QWORD *)(v39 + 40) = v34;
  *(_QWORD *)(v39 + 48) = v35;
  *(_QWORD *)(v39 + 56) = v36;
  *(_QWORD *)(v39 + 64) = partial apply for closure #2 in closure #1 in ClarityUIDialerKeypadView.body.getter;
  *(_QWORD *)(v39 + 72) = v28;
  swift_retain();
  swift_bridgeObjectRetain();
  v40 = v36;
  swift_retain();
  outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v12, &demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>);
  swift_release();

  swift_bridgeObjectRelease();
  swift_release();
  outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v10, &demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>);
}

unint64_t lazy protocol witness table accessor for type MoveTransition and conformance MoveTransition()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type MoveTransition and conformance MoveTransition;
  if (!lazy protocol witness table cache variable for type MoveTransition and conformance MoveTransition)
  {
    v1 = type metadata accessor for MoveTransition();
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD93E8], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MoveTransition and conformance MoveTransition);
  }
  return result;
}

uint64_t associated type witness table accessor for View.Body : View in ClarityUIDialerKeypadView()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t closure #1 in closure #1 in ClarityUIDialerKeypadView.body.getter@<X0>(_OWORD *a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _OWORD *v17;
  __int128 v18;
  char *v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  char *v23;
  _OWORD *v24;
  __int128 v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  char *v32;
  char *v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  char *v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  void (*v39)(char *, uint64_t);
  _QWORD v41[2];
  char *v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;

  v46 = a2;
  v45 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.buttonStyle<A>(_:)>>.0);
  v47 = *(_QWORD *)(v45 - 8);
  v3 = MEMORY[0x1E0C80A78](v45);
  v44 = (char *)v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v43 = (char *)v41 - v5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<VStack<TupleView<(Image, Text)>>>);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.buttonStyle<A>(_:)>>.0);
  v11 = *(_QWORD *)(v10 - 8);
  v41[0] = v10;
  v12 = v11;
  v13 = MEMORY[0x1E0C80A78](v10);
  v15 = (char *)v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v42 = (char *)v41 - v16;
  v17 = (_OWORD *)swift_allocObject();
  v18 = a1[1];
  v17[1] = *a1;
  v17[2] = v18;
  v17[3] = a1[2];
  *(_OWORD *)((char *)v17 + 57) = *(_OWORD *)((char *)a1 + 41);
  outlined retain of ClarityUIDialerKeypadView((uint64_t)a1);
  v41[1] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VStack<TupleView<(Image, Text)>>);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type VStack<TupleView<(Image, Text)>> and conformance VStack<A>, &demangling cache variable for type metadata for VStack<TupleView<(Image, Text)>>, MEMORY[0x1E0CDFCC0]);
  Button.init(action:label:)();
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type Button<VStack<TupleView<(Image, Text)>>> and conformance Button<A>, &demangling cache variable for type metadata for Button<VStack<TupleView<(Image, Text)>>>, MEMORY[0x1E0CDFA58]);
  lazy protocol witness table accessor for type ClarityUIDialerKeypadView.BackButtonStyle and conformance ClarityUIDialerKeypadView.BackButtonStyle();
  v19 = v15;
  View.buttonStyle<A>(_:)();
  v20 = *(void (**)(char *, uint64_t))(v7 + 8);
  v20(v9, v6);
  v21 = v12;
  v22 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v23 = v42;
  v22(v42, v19, v10);
  v24 = (_OWORD *)swift_allocObject();
  v25 = a1[1];
  v24[1] = *a1;
  v24[2] = v25;
  v24[3] = a1[2];
  *(_OWORD *)((char *)v24 + 57) = *(_OWORD *)((char *)a1 + 41);
  outlined retain of ClarityUIDialerKeypadView((uint64_t)a1);
  Button.init(action:label:)();
  lazy protocol witness table accessor for type ClarityUIDialerKeypadView.PrimaryActionButtonStyle and conformance ClarityUIDialerKeypadView.PrimaryActionButtonStyle();
  v26 = v44;
  View.buttonStyle<A>(_:)();
  v20(v9, v6);
  v27 = v47;
  v28 = v43;
  v29 = v26;
  v30 = v45;
  (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v43, v26, v45);
  v31 = *(void (**)(char *, char *, uint64_t))(v21 + 16);
  v32 = v23;
  v33 = v23;
  v34 = v41[0];
  v31(v19, v33, v41[0]);
  v35 = *(void (**)(char *, char *, uint64_t))(v27 + 16);
  v35(v29, v28, v30);
  v36 = v46;
  v31(v46, v19, v34);
  v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0));
  v35(&v36[*(int *)(v37 + 48)], v29, v30);
  v38 = *(void (**)(char *, uint64_t))(v47 + 8);
  v38(v28, v30);
  v39 = *(void (**)(char *, uint64_t))(v21 + 8);
  v39(v32, v34);
  v38(v29, v30);
  return ((uint64_t (*)(char *, uint64_t))v39)(v19, v34);
}

uint64_t closure #1 in closure #1 in closure #1 in ClarityUIDialerKeypadView.body.getter()
{
  static Animation.default.getter();
  withAnimation<A>(_:_:)();
  return swift_release();
}

uint64_t closure #1 in closure #1 in closure #1 in closure #1 in ClarityUIDialerKeypadView.body.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<Bool>);
  Binding.wrappedValue.setter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<String>);
  return Binding.wrappedValue.setter();
}

double closure #2 in closure #1 in closure #1 in ClarityUIDialerKeypadView.body.getter@<D0>(__n128 *a1@<X8>)
{
  double result;

  *(_QWORD *)&result = closure #2 in closure #1 in closure #1 in ClarityUIDialerKeypadView.body.getter((void (*)(unint64_t *__return_ptr))closure #1 in closure #2 in closure #1 in closure #1 in ClarityUIDialerKeypadView.body.getter, a1).n128_u64[0];
  return result;
}

uint64_t closure #1 in closure #2 in closure #1 in closure #1 in ClarityUIDialerKeypadView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  id v3;
  Swift::String v4;
  Swift::String_optional v5;
  Swift::String v6;
  Swift::String v7;
  Swift::String v9;

  v2 = Image.init(systemName:)();
  v3 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v9._object = (void *)0xE000000000000000;
  v4._object = (void *)0x80000001BD674210;
  v4._countAndFlagsBits = 0xD000000000000015;
  v5.value._countAndFlagsBits = 0x61737265766E6F43;
  v5.value._object = (void *)0xEF74694B6E6F6974;
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  v9._countAndFlagsBits = 0;
  v7 = NSLocalizedString(_:tableName:bundle:value:comment:)(v4, v5, (NSBundle)v3, v6, v9);

  *(_QWORD *)a1 = v2;
  *(Swift::String *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = MEMORY[0x1E0DEE9D8];
  swift_retain();
  outlined copy of Text.Storage(v7._countAndFlagsBits, (uint64_t)v7._object, 0);
  swift_bridgeObjectRetain();
  outlined consume of Text.Storage(v7._countAndFlagsBits, (uint64_t)v7._object, 0);
  swift_release();
  return swift_bridgeObjectRelease();
}

void ClarityUIDialerKeypadView.makeCall()()
{
  _OWORD *v0;
  _OWORD *v1;
  id v2;
  id v3;
  __int128 v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  __int128 v10;
  void *v11;
  id v12;
  __int128 v13;
  __int128 v14;
  void (*v15)(void *);
  uint64_t v16;
  uint64_t v17[2];

  v1 = v0;
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DBD1E0]), sel_init);
  v3 = objc_msgSend(v2, sel_telephonyProvider);
  type metadata accessor for TUHandle();
  v4 = *(_OWORD *)((char *)v0 + 24);
  v13 = *(_OWORD *)((char *)v0 + 8);
  v14 = v4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<String>);
  MEMORY[0x1C3B72860](v17, v5);
  TUHandle.__allocating_init(type:value:)(2, v17[0], v17[1]);
  v7 = v6;
  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DBD2E0]), sel_initWithProvider_, v3, v13, v14);
  objc_msgSend(v8, sel_setHandle_, v7);
  objc_msgSend(v8, sel_setOriginatingUIType_, 29);
  v9 = swift_allocObject();
  v10 = v1[1];
  *(_OWORD *)(v9 + 24) = *v1;
  *(_QWORD *)(v9 + 16) = v8;
  *(_OWORD *)(v9 + 40) = v10;
  *(_OWORD *)(v9 + 56) = v1[2];
  *(_OWORD *)(v9 + 65) = *(_OWORD *)((char *)v1 + 41);
  v15 = partial apply for closure #1 in ClarityUIDialerKeypadView.makeCall();
  v16 = v9;
  *(_QWORD *)&v13 = MEMORY[0x1E0C809B0];
  *((_QWORD *)&v13 + 1) = 1107296256;
  *(_QWORD *)&v14 = thunk for @escaping @callee_guaranteed (@guaranteed Error?) -> ();
  *((_QWORD *)&v14 + 1) = &block_descriptor_18;
  v11 = _Block_copy(&v13);
  v12 = v8;
  outlined retain of ClarityUIDialerKeypadView((uint64_t)v1);
  swift_release();
  objc_msgSend(v2, sel_launchAppForDialRequest_completion_, v12, v11);
  _Block_release(v11);

}

double closure #4 in closure #1 in closure #1 in ClarityUIDialerKeypadView.body.getter@<D0>(__n128 *a1@<X8>)
{
  double result;

  *(_QWORD *)&result = closure #2 in closure #1 in closure #1 in ClarityUIDialerKeypadView.body.getter((void (*)(unint64_t *__return_ptr))closure #1 in closure #4 in closure #1 in closure #1 in ClarityUIDialerKeypadView.body.getter, a1).n128_u64[0];
  return result;
}

__n128 closure #2 in closure #1 in closure #1 in ClarityUIDialerKeypadView.body.getter@<Q0>(void (*a1)(unint64_t *__return_ptr)@<X0>, __n128 *a2@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  unsigned __int8 v6;
  unint64_t v7;
  __n128 result;
  unint64_t v9;
  __n128 v10;
  unsigned __int8 v11;
  unint64_t v12;

  v4 = static HorizontalAlignment.center.getter();
  a1(&v9);
  v5 = v9;
  v6 = v11;
  v7 = v12;
  result = v10;
  a2->n128_u64[0] = v4;
  a2->n128_u64[1] = 0;
  a2[1].n128_u8[0] = 1;
  a2[1].n128_u64[1] = v5;
  a2[2] = result;
  a2[3].n128_u8[0] = v6;
  a2[3].n128_u64[1] = v7;
  return result;
}

uint64_t closure #1 in closure #4 in closure #1 in closure #1 in ClarityUIDialerKeypadView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  id v3;
  Swift::String v4;
  Swift::String_optional v5;
  Swift::String v6;
  Swift::String v7;
  Swift::String v9;

  v2 = Image.init(systemName:)();
  v3 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v9._object = (void *)0xE000000000000000;
  v4._object = (void *)0x80000001BD6741F0;
  v4._countAndFlagsBits = 0xD000000000000015;
  v5.value._countAndFlagsBits = 0x61737265766E6F43;
  v5.value._object = (void *)0xEF74694B6E6F6974;
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  v9._countAndFlagsBits = 0;
  v7 = NSLocalizedString(_:tableName:bundle:value:comment:)(v4, v5, (NSBundle)v3, v6, v9);

  *(_QWORD *)a1 = v2;
  *(Swift::String *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = MEMORY[0x1E0DEE9D8];
  swift_retain();
  outlined copy of Text.Storage(v7._countAndFlagsBits, (uint64_t)v7._object, 0);
  swift_bridgeObjectRetain();
  outlined consume of Text.Storage(v7._countAndFlagsBits, (uint64_t)v7._object, 0);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t closure #2 in closure #1 in ClarityUIDialerKeypadView.body.getter(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  Swift::String v6;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;

  v5 = *(_QWORD *)(a3 + 8);
  v10 = *(_OWORD *)(a3 + 24);
  v9 = v5;
  outlined retain of AnyLocation<String>?((uint64_t)&v9);
  swift_retain();
  outlined retain of String((uint64_t)&v10);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<String>);
  MEMORY[0x1C3B72860](&v8);
  v6._countAndFlagsBits = a1;
  v6._object = a2;
  String.append(_:)(v6);
  Binding.wrappedValue.setter();
  outlined release of Transaction((uint64_t)&v9);
  swift_release();
  return outlined release of String((uint64_t)&v10);
}

void closure #1 in ClarityUIDialerKeypadView.makeCall()(void *a1, void *a2, uint64_t a3)
{
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  id v11;
  os_log_type_t v12;
  uint64_t v13;
  _QWORD *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  NSObject *oslog;
  uint64_t v21[2];
  uint64_t v22;

  if (a1)
  {
    v6 = a1;
    if (one-time initialization token for clarityUI != -1)
      swift_once();
    v7 = type metadata accessor for Logger();
    __swift_project_value_buffer(v7, (uint64_t)&static Log.clarityUI);
    v8 = a1;
    v9 = a2;
    outlined retain of ClarityUIDialerKeypadView(a3);
    v10 = a1;
    v11 = v9;
    outlined retain of ClarityUIDialerKeypadView(a3);
    oslog = Logger.logObject.getter();
    v12 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v12))
    {
      v13 = swift_slowAlloc();
      v14 = (_QWORD *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      v22 = v19;
      *(_DWORD *)v13 = 138412802;
      v15 = v11;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *v14 = v11;

      *(_WORD *)(v13 + 12) = 2080;
      v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<String>);
      MEMORY[0x1C3B72860](v21, v16);
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v21[0], v21[1], &v22);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      outlined release of ClarityUIDialerKeypadView(a3);
      outlined release of ClarityUIDialerKeypadView(a3);
      *(_WORD *)(v13 + 22) = 2080;
      swift_getErrorValue();
      v17 = Error.localizedDescription.getter();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v17, v18, &v22);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BD004000, oslog, v12, "Unable to launch app for dial request: %@, phone number: %s, error: %s", (uint8_t *)v13, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v14, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v19, -1, -1);
      MEMORY[0x1C3B751B8](v13, -1, -1);

    }
    else
    {

      outlined release of ClarityUIDialerKeypadView(a3);
      outlined release of ClarityUIDialerKeypadView(a3);

    }
  }
}

uint64_t protocol witness for ButtonStyle.makeBody(configuration:) in conformance ClarityUIDialerKeypadView.BackButtonStyle(uint64_t a1)
{
  return ClarityUIDialerKeypadView.BackButtonStyle.makeBody(configuration:)(a1, (void (*)(uint64_t))MEMORY[0x1E0CDF400], (void (*)(void))MEMORY[0x1E0CDF530]);
}

uint64_t ClarityUIDialerKeypadView.BackButtonStyle.makeBody(configuration:)(uint64_t a1, void (*a2)(uint64_t), void (*a3)(void))
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v7 = type metadata accessor for PlatterButtonType();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_77();
  v11 = v10 - v9;
  v12 = type metadata accessor for ButtonStyleConfiguration();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_6_0();
  v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 16))(v3, a1);
  a2(v14);
  a3();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v8 + 104))(v11, *MEMORY[0x1E0CDABD8], v7);
  return PlatterButtonStyleView.init(configuration:background:foregroundColor:type:includesPadding:)();
}

uint64_t protocol witness for ButtonStyle.makeBody(configuration:) in conformance ClarityUIDialerKeypadView.PrimaryActionButtonStyle(uint64_t a1)
{
  return ClarityUIDialerKeypadView.BackButtonStyle.makeBody(configuration:)(a1, (void (*)(uint64_t))MEMORY[0x1E0CDF4B8], (void (*)(void))MEMORY[0x1E0CDF4D0]);
}

double ClarityUIDialerKeypadView.BarShape.path(in:)@<D0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)
{
  id v6;
  id v7;
  double result;
  __int128 v9;
  __int128 v10;
  char v11;

  v6 = objc_msgSend((id)objc_opt_self(), sel_bezierPathWithRoundedRect_byRoundingCorners_cornerRadii_, 3, a2, a3, a4, a5, 40.0, 40.0);
  v7 = objc_msgSend(v6, sel_CGPath);

  Path.init(_:)();
  result = *(double *)&v9;
  *(_OWORD *)a1 = v9;
  *(_OWORD *)(a1 + 16) = v10;
  *(_BYTE *)(a1 + 32) = v11;
  return result;
}

uint64_t static ClarityUIDialerKeypadView.BarShape.role.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x1E0CE0590];
  v3 = type metadata accessor for ShapeRole();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

double protocol witness for Shape.path(in:) in conformance ClarityUIDialerKeypadView.BarShape@<D0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)
{
  double result;
  __int128 v7;
  _OWORD v8[2];
  char v9;

  ClarityUIDialerKeypadView.BarShape.path(in:)((uint64_t)v8, a2, a3, a4, a5);
  result = *(double *)v8;
  v7 = v8[1];
  *(_OWORD *)a1 = v8[0];
  *(_OWORD *)(a1 + 16) = v7;
  *(_BYTE *)(a1 + 32) = v9;
  return result;
}

uint64_t protocol witness for Shape.sizeThatFits(_:) in conformance ClarityUIDialerKeypadView.BarShape()
{
  return Shape.sizeThatFits(_:)();
}

void (*protocol witness for Animatable.animatableData.modify in conformance ClarityUIDialerKeypadView.BarShape(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = Animatable<>.animatableData.modify();
  return protocol witness for ControlsView.cnkContentAlpha.modify in conformance SystemApertureOngoingTelephonyControlsView;
}

uint64_t protocol witness for static View._makeView(view:inputs:) in conformance ClarityUIDialerKeypadView.BarShape()
{
  lazy protocol witness table accessor for type ClarityUIDialerKeypadView.BarShape and conformance ClarityUIDialerKeypadView.BarShape();
  return static Shape._makeView(view:inputs:)();
}

uint64_t protocol witness for static View._makeViewList(view:inputs:) in conformance ClarityUIDialerKeypadView.BarShape()
{
  lazy protocol witness table accessor for type ClarityUIDialerKeypadView.BarShape and conformance ClarityUIDialerKeypadView.BarShape();
  return static Shape._makeViewList(view:inputs:)();
}

uint64_t protocol witness for View.body.getter in conformance ClarityUIDialerKeypadView.BarShape()
{
  lazy protocol witness table accessor for type ClarityUIDialerKeypadView.BarShape and conformance ClarityUIDialerKeypadView.BarShape();
  return Shape.body.getter();
}

void protocol witness for View.body.getter in conformance ClarityUIDialerKeypadView(uint64_t a1@<X8>)
{
  ClarityUIDialerKeypadView.body.getter(a1);
}

void sub_1BD11CA9C(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = ClarityUIDialerKeypadView.enteredNumbers.getter();
  a1[1] = v2;
  OUTLINED_FUNCTION_0();
}

void sub_1BD11CAC4(_BYTE *a1@<X8>)
{
  *a1 = ClarityUIDialerKeypadView.isPresented.getter() & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD11CAEC()
{
  ClarityUIDialerKeypadView.isPresented.setter();
  OUTLINED_FUNCTION_0();
}

uint64_t destroy for ClarityUIDialerKeypadView()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for ClarityUIDialerKeypadView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ClarityUIDialerKeypadView(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

__n128 __swift_memcpy57_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ClarityUIDialerKeypadView(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_release();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClarityUIDialerKeypadView(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 57))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClarityUIDialerKeypadView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 57) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ClarityUIDialerKeypadView()
{
  return &type metadata for ClarityUIDialerKeypadView;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<ClarityUIDialerKeypadView.BarShape>>, _EnvironmentKeyWritingModifier<DynamicTypeSize>>, _TraitWritingModifier<TransitionTraitKey>>, _PreferenceWritingModifier<MultimodalChromeVisiblePreferenceKey>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<ClarityUIDialerKeypadView.BarShape>>, _EnvironmentKeyWritingModifier<DynamicTypeSize>>, _TraitWritingModifier<TransitionTraitKey>>, _PreferenceWritingModifier<MultimodalChromeVisiblePreferenceKey>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<ClarityUIDialerKeypadView.BarShape>>, _EnvironmentKeyWritingModifier<DynamicTypeSize>>, _TraitWritingModifier<TransitionTraitKey>>, _PreferenceWritingModifier<MultimodalChromeVisiblePreferenceKey>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<ClarityUIDialerKeypadView.BarShape>>, _EnvironmentKeyWritingModifier<DynamicTypeSize>>, _TraitWritingModifier<TransitionTraitKey>>, _PreferenceWritingModifier<MultimodalChromeVisiblePreferenceKey>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<ClarityUIDialerKeypadView.BarShape>>, _EnvironmentKeyWritingModifier<DynamicTypeSize>>, _TraitWritingModifier<TransitionTraitKey>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type _PreferenceWritingModifier<MultimodalChromeVisiblePreferenceKey> and conformance _PreferenceWritingModifier<A>, &demangling cache variable for type metadata for _PreferenceWritingModifier<MultimodalChromeVisiblePreferenceKey>, MEMORY[0x1E0CDCAD0]);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<ClarityUIDialerKeypadView.BarShape>>, _EnvironmentKeyWritingModifier<DynamicTypeSize>>, _TraitWritingModifier<TransitionTraitKey>>, _PreferenceWritingModifier<MultimodalChromeVisiblePreferenceKey>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<ClarityUIDialerKeypadView.BarShape>>, _EnvironmentKeyWritingModifier<DynamicTypeSize>>, _TraitWritingModifier<TransitionTraitKey>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<ClarityUIDialerKeypadView.BarShape>>, _EnvironmentKeyWritingModifier<DynamicTypeSize>>, _TraitWritingModifier<TransitionTraitKey>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<ClarityUIDialerKeypadView.BarShape>>, _EnvironmentKeyWritingModifier<DynamicTypeSize>>, _TraitWritingModifier<TransitionTraitKey>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<ClarityUIDialerKeypadView.BarShape>>, _EnvironmentKeyWritingModifier<DynamicTypeSize>>, _TraitWritingModifier<TransitionTraitKey>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<ClarityUIDialerKeypadView.BarShape>>, _EnvironmentKeyWritingModifier<DynamicTypeSize>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type _TraitWritingModifier<TransitionTraitKey> and conformance _TraitWritingModifier<A>, &demangling cache variable for type metadata for _TraitWritingModifier<TransitionTraitKey>, MEMORY[0x1E0CDBEF0]);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<ClarityUIDialerKeypadView.BarShape>>, _EnvironmentKeyWritingModifier<DynamicTypeSize>>, _TraitWritingModifier<TransitionTraitKey>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<ClarityUIDialerKeypadView.BarShape>>, _EnvironmentKeyWritingModifier<DynamicTypeSize>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<ClarityUIDialerKeypadView.BarShape>>, _EnvironmentKeyWritingModifier<DynamicTypeSize>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<ClarityUIDialerKeypadView.BarShape>>, _EnvironmentKeyWritingModifier<DynamicTypeSize>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<ClarityUIDialerKeypadView.BarShape>>, _EnvironmentKeyWritingModifier<DynamicTypeSize>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<ClarityUIDialerKeypadView.BarShape>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<DynamicTypeSize> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<DynamicTypeSize>, MEMORY[0x1E0CDCF80]);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<ClarityUIDialerKeypadView.BarShape>>, _EnvironmentKeyWritingModifier<DynamicTypeSize>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<ClarityUIDialerKeypadView.BarShape>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<ClarityUIDialerKeypadView.BarShape>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<ClarityUIDialerKeypadView.BarShape>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<ClarityUIDialerKeypadView.BarShape>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type _ClipEffect<ClarityUIDialerKeypadView.BarShape> and conformance _ClipEffect<A>, &demangling cache variable for type metadata for _ClipEffect<ClarityUIDialerKeypadView.BarShape>, MEMORY[0x1E0CD89F0]);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<ClarityUIDialerKeypadView.BarShape>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type _BackgroundStyleModifier<Color> and conformance _BackgroundStyleModifier<A>, &demangling cache variable for type metadata for _BackgroundStyleModifier<Color>, MEMORY[0x1E0CDC6D0]);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>, _PaddingLayout>);
    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>> and conformance VStack<A>, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>, MEMORY[0x1E0CDFCC0]);
    v3[0] = v2;
    v3[1] = MEMORY[0x1E0CD9758];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v3);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

void *type metadata accessor for ClarityUIDialerKeypadView.BarShape()
{
  return &unk_1E761B670;
}

void *type metadata accessor for ClarityUIDialerKeypadView.PrimaryActionButtonStyle()
{
  return &unk_1E761B690;
}

void *type metadata accessor for ClarityUIDialerKeypadView.BackButtonStyle()
{
  return &unk_1E761B6B0;
}

uint64_t associated type witness table accessor for ButtonStyle.Body : View in ClarityUIDialerKeypadView.BackButtonStyle()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for ButtonStyle.Body : View in ClarityUIDialerKeypadView.PrimaryActionButtonStyle()
{
  return swift_getOpaqueTypeConformance2();
}

void associated type witness table accessor for View.Body : View in ClarityUIDialerKeypadView.BarShape()
{
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type _ShapeView<ClarityUIDialerKeypadView.BarShape, ForegroundStyle> and conformance _ShapeView<A, B>, &demangling cache variable for type metadata for _ShapeView<ClarityUIDialerKeypadView.BarShape, ForegroundStyle>, MEMORY[0x1E0CD8668]);
}

unint64_t lazy protocol witness table accessor for type EmptyAnimatableData and conformance EmptyAnimatableData()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type EmptyAnimatableData and conformance EmptyAnimatableData;
  if (!lazy protocol witness table cache variable for type EmptyAnimatableData and conformance EmptyAnimatableData)
  {
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDB3D0], MEMORY[0x1E0CDB3F0]);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EmptyAnimatableData and conformance EmptyAnimatableData);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ClarityUIDialerKeypadView.BarShape and conformance ClarityUIDialerKeypadView.BarShape()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ClarityUIDialerKeypadView.BarShape and conformance ClarityUIDialerKeypadView.BarShape;
  if (!lazy protocol witness table cache variable for type ClarityUIDialerKeypadView.BarShape and conformance ClarityUIDialerKeypadView.BarShape)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ClarityUIDialerKeypadView.BarShape, &unk_1E761B670);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ClarityUIDialerKeypadView.BarShape and conformance ClarityUIDialerKeypadView.BarShape);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ClarityUIDialerKeypadView.BarShape and conformance ClarityUIDialerKeypadView.BarShape;
  if (!lazy protocol witness table cache variable for type ClarityUIDialerKeypadView.BarShape and conformance ClarityUIDialerKeypadView.BarShape)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ClarityUIDialerKeypadView.BarShape, &unk_1E761B670);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ClarityUIDialerKeypadView.BarShape and conformance ClarityUIDialerKeypadView.BarShape);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ClarityUIDialerKeypadView.BarShape and conformance ClarityUIDialerKeypadView.BarShape;
  if (!lazy protocol witness table cache variable for type ClarityUIDialerKeypadView.BarShape and conformance ClarityUIDialerKeypadView.BarShape)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ClarityUIDialerKeypadView.BarShape, &unk_1E761B670);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ClarityUIDialerKeypadView.BarShape and conformance ClarityUIDialerKeypadView.BarShape);
  }
  return result;
}

uint64_t outlined init with take of ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t partial apply for closure #2 in closure #1 in ClarityUIDialerKeypadView.body.getter(uint64_t a1, void *a2)
{
  uint64_t v2;

  return closure #2 in closure #1 in ClarityUIDialerKeypadView.body.getter(a1, a2, v2 + 16);
}

uint64_t outlined retain of ClarityUIDialerKeypadView(uint64_t a1)
{
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void outlined init with copy of VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  OUTLINED_FUNCTION_0();
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in ClarityUIDialerKeypadView.body.getter()
{
  return closure #1 in closure #1 in closure #1 in ClarityUIDialerKeypadView.body.getter();
}

unint64_t lazy protocol witness table accessor for type ClarityUIDialerKeypadView.BackButtonStyle and conformance ClarityUIDialerKeypadView.BackButtonStyle()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ClarityUIDialerKeypadView.BackButtonStyle and conformance ClarityUIDialerKeypadView.BackButtonStyle;
  if (!lazy protocol witness table cache variable for type ClarityUIDialerKeypadView.BackButtonStyle and conformance ClarityUIDialerKeypadView.BackButtonStyle)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ClarityUIDialerKeypadView.BackButtonStyle, &unk_1E761B6B0);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ClarityUIDialerKeypadView.BackButtonStyle and conformance ClarityUIDialerKeypadView.BackButtonStyle);
  }
  return result;
}

uint64_t objectdestroyTm_2()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void partial apply for closure #3 in closure #1 in closure #1 in ClarityUIDialerKeypadView.body.getter()
{
  ClarityUIDialerKeypadView.makeCall()();
  OUTLINED_FUNCTION_0();
}

unint64_t lazy protocol witness table accessor for type ClarityUIDialerKeypadView.PrimaryActionButtonStyle and conformance ClarityUIDialerKeypadView.PrimaryActionButtonStyle()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ClarityUIDialerKeypadView.PrimaryActionButtonStyle and conformance ClarityUIDialerKeypadView.PrimaryActionButtonStyle;
  if (!lazy protocol witness table cache variable for type ClarityUIDialerKeypadView.PrimaryActionButtonStyle and conformance ClarityUIDialerKeypadView.PrimaryActionButtonStyle)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ClarityUIDialerKeypadView.PrimaryActionButtonStyle, &unk_1E761B690);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ClarityUIDialerKeypadView.PrimaryActionButtonStyle and conformance ClarityUIDialerKeypadView.PrimaryActionButtonStyle);
  }
  return result;
}

uint64_t sub_1BD11D468()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void partial apply for closure #1 in ClarityUIDialerKeypadView.makeCall()(void *a1)
{
  uint64_t v1;

  closure #1 in ClarityUIDialerKeypadView.makeCall()(a1, *(void **)(v1 + 16), v1 + 24);
}

uint64_t outlined release of ClarityUIDialerKeypadView(uint64_t a1)
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in closure #1 in ClarityUIDialerKeypadView.body.getter()
{
  return closure #1 in closure #1 in closure #1 in closure #1 in ClarityUIDialerKeypadView.body.getter();
}

void sub_1BD11D54C()
{
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type PlatterButtonStyleView<Color> and conformance PlatterButtonStyleView<A>, &demangling cache variable for type metadata for PlatterButtonStyleView<Color>, MEMORY[0x1E0CDC060]);
}

uint64_t specialized Sequence.compactMap<A>(_:)(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v3 = MEMORY[0x1E0DEE9D8];
  v10 = MEMORY[0x1E0DEE9D8];
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v5 = swift_bridgeObjectRetain() + 40;
    do
    {
      swift_bridgeObjectRetain();
      PeoplePickerViewController.composeRecipient(for:)();
      v7 = v6;
      v8 = swift_bridgeObjectRelease();
      if (v7)
      {
        MEMORY[0x1C3B7301C](v8);
        if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      v5 += 16;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    v3 = v10;
  }

  return v3;
}

{
  uint64_t v4;
  char *v5;

  v4 = type metadata accessor for Participant.State(0);
  MEMORY[0x1E0C80A78](v4);
  if (*(_QWORD *)(a1 + 16))
  {
    type metadata accessor for Participant(0);
    swift_bridgeObjectRetain();
    _s15ConversationKit11ParticipantVWOcTm_4();
    v5 = (char *)&loc_1BD4E0A90 + 4 * byte_1BD6652E0[swift_getEnumCaseMultiPayload()];
    __asm { BR              X9 }
  }

  return MEMORY[0x1E0DEE9D8];
}

uint64_t specialized _ArrayProtocol.filter(_:)(unint64_t a1, _QWORD *a2)
{
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  id v7;
  void *v8;
  uint64_t v10;
  id v11;
  char v12;
  Swift::Int v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  char v18;
  uint64_t v19;
  id v20;
  char v21;
  uint64_t v22;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  unint64_t v29;
  uint64_t v30;

  v3 = a1;
  v30 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_25;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      v24 = v3;
      v5 = 0;
      v6 = v3 & 0xC000000000000001;
      v28 = a2;
      v29 = v3 + 32;
      v3 &= 0xFFFFFFFFFFFFFF8uLL;
      v26 = v6;
      v27 = v4;
      v25 = v3;
      while (v6)
      {
        v7 = (id)MEMORY[0x1C3B73D18](v5, v24);
LABEL_7:
        v8 = v7;
        if (__OFADD__(v5++, 1))
          goto LABEL_24;
        v10 = *a2;
        if ((*a2 & 0xC000000000000001) != 0)
        {
          swift_bridgeObjectRetain();
          v11 = v8;
          v12 = __CocoaSet.contains(_:)();
          swift_bridgeObjectRelease();

          if ((v12 & 1) == 0)
            goto LABEL_19;

        }
        else
        {
          if (!*(_QWORD *)(v10 + 16))
            goto LABEL_19;
          v13 = *(_QWORD *)(v10 + 40);
          swift_bridgeObjectRetain();
          v14 = NSObject._rawHashValue(seed:)(v13);
          v15 = -1 << *(_BYTE *)(v10 + 32);
          v16 = v14 & ~v15;
          if (((*(_QWORD *)(v10 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
            goto LABEL_18;
          type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for CNComposeRecipient);
          v17 = *(id *)(*(_QWORD *)(v10 + 48) + 8 * v16);
          v18 = static NSObject.== infix(_:_:)();

          if ((v18 & 1) == 0)
          {
            v19 = ~v15;
            while (1)
            {
              v16 = (v16 + 1) & v19;
              if (((*(_QWORD *)(v10 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
                break;
              v20 = *(id *)(*(_QWORD *)(v10 + 48) + 8 * v16);
              v21 = static NSObject.== infix(_:_:)();

              if ((v21 & 1) != 0)
                goto LABEL_17;
            }
LABEL_18:
            swift_bridgeObjectRelease();
            v4 = v27;
            a2 = v28;
            v3 = v25;
            v6 = v26;
LABEL_19:
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
            specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized ContiguousArray._endMutation()();
            goto LABEL_20;
          }
LABEL_17:

          swift_bridgeObjectRelease();
          v4 = v27;
          a2 = v28;
          v3 = v25;
          v6 = v26;
        }
LABEL_20:
        if (v5 == v4)
        {
          v22 = v30;
          goto LABEL_27;
        }
      }
      if (v5 < *(_QWORD *)(v3 + 16))
        break;
      __break(1u);
LABEL_24:
      __break(1u);
LABEL_25:
      v4 = _CocoaArrayWrapper.endIndex.getter();
      if (!v4)
        goto LABEL_26;
    }
    v7 = *(id *)(v29 + 8 * v5);
    goto LABEL_7;
  }
LABEL_26:
  v22 = MEMORY[0x1E0DEE9D8];
LABEL_27:
  swift_bridgeObjectRelease();
  return v22;
}

uint64_t specialized _ArrayProtocol.filter(_:)(unint64_t a1, void *a2)
{
  uint64_t v3;
  unint64_t v4;
  id v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t inited;
  uint64_t v15;
  uint64_t v16;
  uint64_t v19;

  v19 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_20;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v3)
  {
    while (1)
    {
      v4 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v5 = (id)MEMORY[0x1C3B73D18](v4, a1);
LABEL_7:
        v6 = v5;
        v7 = v4 + 1;
        if (__OFADD__(v4, 1))
          goto LABEL_19;
        outlined bridged method (pb) of @objc TUConversationLink.displayName.getter(v5, (SEL *)&selRef_address);
        if (v8)
        {
          v9 = (void *)MEMORY[0x1C3B72E00]();
          swift_bridgeObjectRelease();
        }
        else
        {
          v9 = 0;
        }
        v10 = (id)TUCopyIDSCanonicalAddressForDestinationID();

        if (!v10)
          goto LABEL_14;
        v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        v13 = v12;

        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1BD6441D0;
        *(_QWORD *)(inited + 32) = v11;
        *(_QWORD *)(inited + 40) = v13;
        specialized Set.init(_nonEmptyArrayLiteral:)(inited);
        LOBYTE(v11) = PeoplePickerViewController.isMultiwayAllowed(for:)(v15, (SEL *)&selRef_isFaceTimeMultiwayAvailableForAnyDestinationInDestinations_);
        swift_bridgeObjectRelease();
        if ((v11 & 1) != 0)
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
        }
        else
        {
LABEL_14:

        }
        ++v4;
        if (v7 == v3)
        {
          v16 = v19;
          goto LABEL_22;
        }
      }
      if (v4 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_19:
      __break(1u);
LABEL_20:
      v3 = _CocoaArrayWrapper.endIndex.getter();
      if (!v3)
        goto LABEL_21;
    }
    v5 = *(id *)(a1 + 8 * v4 + 32);
    goto LABEL_7;
  }
LABEL_21:
  v16 = MEMORY[0x1E0DEE9D8];
LABEL_22:

  swift_bridgeObjectRelease();
  return v16;
}

{
  uint64_t v3;
  unint64_t v4;
  id v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t inited;
  uint64_t v15;
  uint64_t v16;
  uint64_t v19;

  v19 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_20;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v3)
  {
    while (1)
    {
      v4 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v5 = (id)MEMORY[0x1C3B73D18](v4, a1);
LABEL_7:
        v6 = v5;
        v7 = v4 + 1;
        if (__OFADD__(v4, 1))
          goto LABEL_19;
        outlined bridged method (pb) of @objc TUConversationLink.displayName.getter(v5, (SEL *)&selRef_address);
        if (v8)
        {
          v9 = (void *)MEMORY[0x1C3B72E00]();
          swift_bridgeObjectRelease();
        }
        else
        {
          v9 = 0;
        }
        v10 = (id)TUCopyIDSCanonicalAddressForDestinationID();

        if (!v10)
          goto LABEL_13;
        v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        v13 = v12;

        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1BD6441D0;
        *(_QWORD *)(inited + 32) = v11;
        *(_QWORD *)(inited + 40) = v13;
        specialized Set.init(_nonEmptyArrayLiteral:)(inited);
        LOBYTE(v11) = PeoplePickerViewController.isMultiwayAllowed(for:)(v15, (SEL *)&selRef_isFaceTimeMultiwayAvailableForAnyDestinationInDestinations_);
        swift_bridgeObjectRelease();
        if ((v11 & 1) == 0)
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
        }
        else
        {
LABEL_13:

        }
        ++v4;
        if (v7 == v3)
        {
          v16 = v19;
          goto LABEL_22;
        }
      }
      if (v4 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_19:
      __break(1u);
LABEL_20:
      v3 = _CocoaArrayWrapper.endIndex.getter();
      if (!v3)
        goto LABEL_21;
    }
    v5 = *(id *)(a1 + 8 * v4 + 32);
    goto LABEL_7;
  }
LABEL_21:
  v16 = MEMORY[0x1E0DEE9D8];
LABEL_22:

  swift_bridgeObjectRelease();
  return v16;
}

void *specialized Sequence.first(where:)(unint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;

  if (a1 >> 62)
  {
LABEL_34:
    swift_bridgeObjectRetain();
    v4 = _CocoaArrayWrapper.endIndex.getter();
    if (v4)
      goto LABEL_3;
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
    {
LABEL_3:
      v5 = 4;
      do
      {
        if ((a1 & 0xC000000000000001) != 0)
          v6 = (id)MEMORY[0x1C3B73D18](v5 - 4, a1);
        else
          v6 = *(id *)(a1 + 8 * v5);
        v7 = v6;
        v8 = v5 - 3;
        if (__OFADD__(v5 - 4, 1))
        {
          __break(1u);
          goto LABEL_34;
        }
        outlined bridged method (pb) of @objc TUConversationLink.displayName.getter(v6, (SEL *)&selRef_address);
        if (v9)
        {
          v10 = (void *)MEMORY[0x1C3B72E00]();
          swift_bridgeObjectRelease();
        }
        else
        {
          v10 = 0;
        }
        v11 = (id)TUCopyIDSCanonicalAddressForDestinationID();

        if (v11)
        {
          v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          v14 = v13;

          if (!a2[2])
          {
            if (!v14)
              goto LABEL_30;
LABEL_27:

            swift_bridgeObjectRelease();
            goto LABEL_28;
          }
        }
        else
        {
          if (!a2[2])
            goto LABEL_30;
          v14 = 0;
          v12 = 0;
        }
        v15 = a2[4];
        v16 = a2[5];
        swift_bridgeObjectRetain();
        if (!v14)
        {
          if (!v16)
          {
LABEL_30:
            swift_bridgeObjectRelease();
LABEL_32:
            swift_bridgeObjectRelease();
            return v7;
          }
          goto LABEL_27;
        }
        if (!v16)
          goto LABEL_27;
        if (v12 == v15 && v14 == v16)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_32;
        }
        v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v18 & 1) != 0)
          goto LABEL_30;

LABEL_28:
        ++v5;
      }
      while (v8 != v4);
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0;
}

void specialized Sequence.first(where:)(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  id v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  void *v33;

  v2 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for CNComposeRecipient);
    lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop(lazy protocol witness table cache variable for type CNComposeRecipient and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for CNComposeRecipient);
    Set.Iterator.init(_cocoa:)();
    v2 = v28;
    v26 = v29;
    v3 = v30;
    v4 = v31;
    v5 = v32;
  }
  else
  {
    v6 = -1 << *(_BYTE *)(a1 + 32);
    v26 = a1 + 56;
    v7 = ~v6;
    v8 = -v6;
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v5 = v9 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v3 = v7;
    v4 = 0;
  }
  v25 = (unint64_t)(v3 + 64) >> 6;
  if (v2 < 0)
    goto LABEL_10;
LABEL_8:
  if (v5)
  {
    v10 = (v5 - 1) & v5;
    v11 = __clz(__rbit64(v5)) | (v4 << 6);
    v12 = v4;
    goto LABEL_29;
  }
  v14 = v4 + 1;
  if (!__OFADD__(v4, 1))
  {
    if (v14 < v25)
    {
      v15 = *(_QWORD *)(v26 + 8 * v14);
      v12 = v4 + 1;
      if (v15)
        goto LABEL_28;
      v12 = v4 + 2;
      if (v4 + 2 >= v25)
        goto LABEL_44;
      v15 = *(_QWORD *)(v26 + 8 * v12);
      if (v15)
        goto LABEL_28;
      v12 = v4 + 3;
      if (v4 + 3 >= v25)
        goto LABEL_44;
      v15 = *(_QWORD *)(v26 + 8 * v12);
      if (v15)
        goto LABEL_28;
      v12 = v4 + 4;
      if (v4 + 4 >= v25)
        goto LABEL_44;
      v15 = *(_QWORD *)(v26 + 8 * v12);
      if (v15)
      {
LABEL_28:
        v10 = (v15 - 1) & v15;
        v11 = __clz(__rbit64(v15)) + (v12 << 6);
LABEL_29:
        v13 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v11);
        if (v13)
        {
          while (1)
          {
            outlined bridged method (pb) of @objc TUConversationLink.displayName.getter(a2, (SEL *)&selRef_address);
            v18 = v17;
            v20 = v19;
            outlined bridged method (pb) of @objc TUConversationLink.displayName.getter(v13, (SEL *)&selRef_address);
            if (!v20)
              break;
            if (!v22)
              goto LABEL_39;
            if (v18 == v21 && v20 == v22)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              goto LABEL_44;
            }
            v24 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v24 & 1) != 0)
              goto LABEL_44;

LABEL_40:
            v4 = v12;
            v5 = v10;
            if ((v2 & 0x8000000000000000) == 0)
              goto LABEL_8;
LABEL_10:
            if (__CocoaSet.Iterator.next()())
            {
              type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for CNComposeRecipient);
              swift_unknownObjectRetain();
              swift_dynamicCast();
              v13 = v33;
              swift_unknownObjectRelease();
              v12 = v4;
              v10 = v5;
              if (v33)
                continue;
            }
            goto LABEL_44;
          }
          if (!v22)
            goto LABEL_44;
LABEL_39:

          swift_bridgeObjectRelease();
          goto LABEL_40;
        }
        goto LABEL_44;
      }
      v12 = v4 + 5;
      if (v4 + 5 < v25)
      {
        v15 = *(_QWORD *)(v26 + 8 * v12);
        if (!v15)
        {
          v16 = v4 + 6;
          do
          {
            if (v16 >= v25)
              goto LABEL_44;
            v15 = *(_QWORD *)(v26 + 8 * v16++);
          }
          while (!v15);
          v12 = v16 - 1;
        }
        goto LABEL_28;
      }
    }
LABEL_44:
    outlined consume of [String : Application].Iterator._Variant();

    return;
  }
  __break(1u);
}

{
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  id v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  id v18;
  char v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  void *v27;

  v3 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
    lazy protocol witness table accessor for type TUConversationParticipant and conformance NSObject();
    Set.Iterator.init(_cocoa:)();
    v3 = v22;
    v21 = v23;
    v4 = v24;
    v5 = v25;
    v6 = v26;
  }
  else
  {
    v7 = -1 << *(_BYTE *)(a1 + 32);
    v21 = a1 + 56;
    v8 = ~v7;
    v9 = -v7;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v6 = v10 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v4 = v8;
    v5 = 0;
  }
  v20 = (unint64_t)(v4 + 64) >> 6;
  if (v3 < 0)
    goto LABEL_10;
LABEL_8:
  if (v6)
  {
    v11 = (v6 - 1) & v6;
    v12 = __clz(__rbit64(v6)) | (v5 << 6);
    v13 = v5;
    goto LABEL_29;
  }
  v15 = v5 + 1;
  if (!__OFADD__(v5, 1))
  {
    if (v15 < v20)
    {
      v16 = *(_QWORD *)(v21 + 8 * v15);
      v13 = v5 + 1;
      if (v16)
        goto LABEL_28;
      v13 = v5 + 2;
      if (v5 + 2 >= v20)
        goto LABEL_33;
      v16 = *(_QWORD *)(v21 + 8 * v13);
      if (v16)
        goto LABEL_28;
      v13 = v5 + 3;
      if (v5 + 3 >= v20)
        goto LABEL_33;
      v16 = *(_QWORD *)(v21 + 8 * v13);
      if (v16)
        goto LABEL_28;
      v13 = v5 + 4;
      if (v5 + 4 >= v20)
        goto LABEL_33;
      v16 = *(_QWORD *)(v21 + 8 * v13);
      if (v16)
      {
LABEL_28:
        v11 = (v16 - 1) & v16;
        v12 = __clz(__rbit64(v16)) + (v13 << 6);
LABEL_29:
        v14 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v12);
        if (v14)
        {
          do
          {
            _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSObject);
            v18 = objc_msgSend(v14, sel_handle);
            v19 = static NSObject.== infix(_:_:)();

            if ((v19 & 1) != 0)
              break;

            v5 = v13;
            v6 = v11;
            if ((v3 & 0x8000000000000000) == 0)
              goto LABEL_8;
LABEL_10:
            if (!__CocoaSet.Iterator.next()())
              break;
            _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
            swift_unknownObjectRetain();
            swift_dynamicCast();
            v14 = v27;
            swift_unknownObjectRelease();
            v13 = v5;
            v11 = v6;
          }
          while (v27);
        }
        goto LABEL_33;
      }
      v13 = v5 + 5;
      if (v5 + 5 < v20)
      {
        v16 = *(_QWORD *)(v21 + 8 * v13);
        if (!v16)
        {
          v17 = v5 + 6;
          while (v17 < v20)
          {
            v16 = *(_QWORD *)(v21 + 8 * v17++);
            if (v16)
            {
              v13 = v17 - 1;
              goto LABEL_28;
            }
          }
          goto LABEL_33;
        }
        goto LABEL_28;
      }
    }
LABEL_33:
    outlined consume of [String : Application].Iterator._Variant();

    return;
  }
  __break(1u);
}

{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  id v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  id v22;
  char v23;
  unint64_t v24;
  id v25;
  char v26;
  id v27;
  char v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  unint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  unint64_t v41;
  void *v42;

  v3 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
    lazy protocol witness table accessor for type TUConversation and conformance NSObject((unint64_t *)&lazy protocol witness table cache variable for type TUConversationMember and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember, 0x1E0DBD2A0, MEMORY[0x1E0DEFCF8]);
    Set.Iterator.init(_cocoa:)();
    v3 = v37;
    v4 = v38;
    v5 = v39;
    v6 = v40;
    v7 = v41;
  }
  else
  {
    v8 = -1 << *(_BYTE *)(a1 + 32);
    v4 = a1 + 56;
    v9 = ~v8;
    v10 = -v8;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v7 = v11 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v5 = v9;
    v6 = 0;
  }
  v30 = v5;
  v34 = (unint64_t)(v5 + 64) >> 6;
  v33 = v4;
  v31 = v3;
  while (1)
  {
    if (v3 < 0)
    {
      if (!__CocoaSet.Iterator.next()())
        goto LABEL_45;
      _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v15 = v42;
      swift_unknownObjectRelease();
      v14 = v6;
      v12 = v7;
      if (!v42)
        goto LABEL_45;
      goto LABEL_26;
    }
    if (!v7)
      break;
    v12 = (v7 - 1) & v7;
    v13 = __clz(__rbit64(v7)) | (v6 << 6);
    v14 = v6;
LABEL_25:
    v15 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v13);
    if (!v15)
      goto LABEL_45;
LABEL_26:
    v35 = v12;
    v36 = v14;
    v18 = v3;
    v19 = a2;
    v20 = objc_msgSend(v15, sel_handles, v30);
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
    lazy protocol witness table accessor for type TUConversation and conformance NSObject((unint64_t *)&lazy protocol witness table cache variable for type TUHandle and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUHandle, 0x1E0DBD2F8, MEMORY[0x1E0DEFCF8]);
    v21 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    if ((v21 & 0xC000000000000001) != 0)
    {
      v22 = a2;
      v23 = __CocoaSet.contains(_:)();
      swift_bridgeObjectRelease();

      if ((v23 & 1) != 0)
        goto LABEL_45;

      v7 = v35;
      v6 = v36;
      v3 = v18;
    }
    else if (*(_QWORD *)(v21 + 16))
    {
      v24 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v21 + 40)) & ~(-1 << *(_BYTE *)(v21 + 32));
      if (((*(_QWORD *)(v21 + 56 + ((v24 >> 3) & 0xFFFFFFFFFFFFF8)) >> v24) & 1) != 0)
      {
        v32 = -1 << *(_BYTE *)(v21 + 32);
        v25 = *(id *)(*(_QWORD *)(v21 + 48) + 8 * v24);
        v26 = static NSObject.== infix(_:_:)();

        if ((v26 & 1) != 0)
        {
LABEL_44:
          swift_bridgeObjectRelease();
          a2 = v19;
LABEL_45:
          outlined consume of [String : Application].Iterator._Variant();

          return;
        }
        while (1)
        {
          v24 = (v24 + 1) & ~v32;
          if (((*(_QWORD *)(v21 + 56 + ((v24 >> 3) & 0xFFFFFFFFFFFFF8)) >> v24) & 1) == 0)
            break;
          v27 = *(id *)(*(_QWORD *)(v21 + 48) + 8 * v24);
          v28 = static NSObject.== infix(_:_:)();

          if ((v28 & 1) != 0)
            goto LABEL_44;
        }

        swift_bridgeObjectRelease();
        v7 = v35;
        v6 = v36;
        a2 = v19;
        v3 = v31;
        v4 = v33;
      }
      else
      {

        swift_bridgeObjectRelease();
        v7 = v35;
        v6 = v36;
        v4 = v33;
        v3 = v18;
      }
    }
    else
    {

      swift_bridgeObjectRelease();
      v7 = v35;
      v6 = v36;
      v3 = v18;
    }
  }
  v14 = v6 + 1;
  if (!__OFADD__(v6, 1))
  {
    if (v14 >= v34)
      goto LABEL_45;
    v16 = *(_QWORD *)(v4 + 8 * v14);
    if (!v16)
    {
      v17 = v6 + 2;
      if (v6 + 2 >= v34)
        goto LABEL_45;
      v16 = *(_QWORD *)(v4 + 8 * v17);
      if (v16)
        goto LABEL_23;
      v17 = v6 + 3;
      if (v6 + 3 >= v34)
        goto LABEL_45;
      v16 = *(_QWORD *)(v4 + 8 * v17);
      if (v16)
        goto LABEL_23;
      v17 = v6 + 4;
      if (v6 + 4 >= v34)
        goto LABEL_45;
      v16 = *(_QWORD *)(v4 + 8 * v17);
      if (v16)
      {
LABEL_23:
        v14 = v17;
      }
      else
      {
        v14 = v6 + 5;
        if (v6 + 5 >= v34)
          goto LABEL_45;
        v16 = *(_QWORD *)(v4 + 8 * v14);
        if (!v16)
        {
          v29 = v6 + 6;
          while (v29 < v34)
          {
            v16 = *(_QWORD *)(v4 + 8 * v29++);
            if (v16)
            {
              v14 = v29 - 1;
              goto LABEL_24;
            }
          }
          goto LABEL_45;
        }
      }
    }
LABEL_24:
    v12 = (v16 - 1) & v16;
    v13 = __clz(__rbit64(v16)) + (v14 << 6);
    goto LABEL_25;
  }
  __break(1u);
}

{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  id v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  id v17;
  id v18;
  char v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  void *v28;

  v2 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
    lazy protocol witness table accessor for type TUHandle and conformance NSObject((unint64_t *)&lazy protocol witness table cache variable for type TUConversationMember and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
    Set.Iterator.init(_cocoa:)();
    v2 = v23;
    v21 = v24;
    v3 = v25;
    v4 = v26;
    v5 = v27;
  }
  else
  {
    v6 = -1 << *(_BYTE *)(a1 + 32);
    v21 = a1 + 56;
    v7 = ~v6;
    v8 = -v6;
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v5 = v9 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v3 = v7;
    v4 = 0;
  }
  v20 = (unint64_t)(v3 + 64) >> 6;
  if (v2 < 0)
    goto LABEL_10;
LABEL_8:
  if (v5)
  {
    v10 = (v5 - 1) & v5;
    v11 = __clz(__rbit64(v5)) | (v4 << 6);
    v12 = v4;
    goto LABEL_29;
  }
  v14 = v4 + 1;
  if (!__OFADD__(v4, 1))
  {
    if (v14 < v20)
    {
      v15 = *(_QWORD *)(v21 + 8 * v14);
      v12 = v4 + 1;
      if (v15)
        goto LABEL_28;
      v12 = v4 + 2;
      if (v4 + 2 >= v20)
        goto LABEL_33;
      v15 = *(_QWORD *)(v21 + 8 * v12);
      if (v15)
        goto LABEL_28;
      v12 = v4 + 3;
      if (v4 + 3 >= v20)
        goto LABEL_33;
      v15 = *(_QWORD *)(v21 + 8 * v12);
      if (v15)
        goto LABEL_28;
      v12 = v4 + 4;
      if (v4 + 4 >= v20)
        goto LABEL_33;
      v15 = *(_QWORD *)(v21 + 8 * v12);
      if (v15)
      {
LABEL_28:
        v10 = (v15 - 1) & v15;
        v11 = __clz(__rbit64(v15)) + (v12 << 6);
LABEL_29:
        v13 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v11);
        if (v13)
        {
          do
          {
            _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSObject);
            v17 = objc_msgSend(v13, sel_handle);
            v18 = objc_msgSend(a2, sel_handle);
            v19 = static NSObject.== infix(_:_:)();

            if ((v19 & 1) != 0)
              break;

            v4 = v12;
            v5 = v10;
            if ((v2 & 0x8000000000000000) == 0)
              goto LABEL_8;
LABEL_10:
            if (!__CocoaSet.Iterator.next()())
              break;
            _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
            swift_unknownObjectRetain();
            swift_dynamicCast();
            v13 = v28;
            swift_unknownObjectRelease();
            v12 = v4;
            v10 = v5;
          }
          while (v28);
        }
        goto LABEL_33;
      }
      v12 = v4 + 5;
      if (v4 + 5 < v20)
      {
        v15 = *(_QWORD *)(v21 + 8 * v12);
        if (!v15)
        {
          v16 = v4 + 6;
          while (v16 < v20)
          {
            v15 = *(_QWORD *)(v21 + 8 * v16++);
            if (v15)
            {
              v12 = v16 - 1;
              goto LABEL_28;
            }
          }
          goto LABEL_33;
        }
        goto LABEL_28;
      }
    }
LABEL_33:
    outlined consume of [String : Application].Iterator._Variant();

    return;
  }
  __break(1u);
}

unint64_t specialized Sequence.flatMap<A>(_:)(unint64_t a1, void *a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char **v8;
  id v9;
  void *v10;
  unint64_t result;
  unint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  unint64_t v25;
  char *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = a1;
  v4 = MEMORY[0x1E0DEE9D8];
  v30 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
  {
LABEL_34:
    swift_bridgeObjectRetain();
    v5 = _CocoaArrayWrapper.endIndex.getter();
    if (v5)
      goto LABEL_3;
LABEL_35:

    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v5)
    goto LABEL_35;
LABEL_3:
  v6 = 0;
  v7 = v3 & 0xC000000000000001;
  v26 = (char *)(v3 + 32);
  v8 = &selRef_inputDevices;
  v24 = a2;
  v25 = v3;
  v27 = v3 & 0xC000000000000001;
  v28 = v5;
  while (1)
  {
    if (v7)
      v9 = (id)MEMORY[0x1C3B73D18](v6, v3);
    else
      v9 = *(id *)&v26[8 * v6];
    v10 = v9;
    if (__OFADD__(v6++, 1))
      goto LABEL_33;
    if (objc_msgSend(v9, v8[110]))
      break;
    PeoplePickerViewController.pickablePerson(for:)(v10);
    if (v20)
    {
      v21 = v20;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      v22 = swift_allocObject();
      *(_OWORD *)(v22 + 16) = xmmword_1BD6443F0;
      *(_QWORD *)(v22 + 32) = v21;
      specialized Array._endMutation()();

LABEL_29:
      v8 = &selRef_inputDevices;
      goto LABEL_30;
    }

LABEL_30:
    specialized Array.append<A>(contentsOf:)();
    if (v6 == v5)
    {

      swift_bridgeObjectRelease();
      return v30;
    }
  }
  result = outlined bridged method (pb) of @objc CNComposeRecipient.children()(v10);
  if (result)
  {
    v13 = result;
    v29 = v4;
    if (result >> 62)
    {
      v23 = a2;
      swift_bridgeObjectRetain();
      v14 = _CocoaArrayWrapper.endIndex.getter();
      if (v14)
      {
LABEL_12:
        a2 = (void *)(v13 & 0xC000000000000001);
        v4 = 4;
        while (1)
        {
          v16 = a2 ? (id)MEMORY[0x1C3B73D18](v4 - 4, v13) : *(id *)(v13 + 8 * v4);
          v3 = (unint64_t)v16;
          v17 = v4 - 3;
          if (__OFADD__(v4 - 4, 1))
            break;
          PeoplePickerViewController.pickablePerson(for:)(v16);
          v19 = v18;

          if (v19)
          {
            MEMORY[0x1C3B7301C]();
            if (*(_QWORD *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
          }
          ++v4;
          if (v17 == v14)
          {
            swift_bridgeObjectRelease();
            a2 = v24;
            v3 = v25;
            v4 = MEMORY[0x1E0DEE9D8];
            goto LABEL_28;
          }
        }
        __break(1u);
LABEL_33:
        __break(1u);
        goto LABEL_34;
      }
    }
    else
    {
      v14 = *(_QWORD *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
      v15 = a2;
      swift_bridgeObjectRetain();
      if (v14)
        goto LABEL_12;
    }
    swift_bridgeObjectRelease();
LABEL_28:

    swift_bridgeObjectRelease();
    v7 = v27;
    v5 = v28;
    goto LABEL_29;
  }
  __break(1u);
  return result;
}

uint64_t specialized Sequence.contains(where:)(unint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  char v9;

  if (a1 >> 62)
    goto LABEL_12;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  OUTLINED_FUNCTION_25_2();
  for (; v4; v4 = _CocoaArrayWrapper.endIndex.getter())
  {
    v5 = 4;
    while (1)
    {
      v6 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C3B73D18](v5 - 4, a1) : *(id *)(a1 + 8 * v5);
      v7 = v6;
      v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1))
        break;
      v9 = PeoplePickerViewController.isIDSMultiwayLookupPending(for:)(v6);

      if ((v9 & 1) == 0)
      {
        ++v5;
        if (v8 != v4)
          continue;
      }
      goto LABEL_14;
    }
    __break(1u);
LABEL_12:
    OUTLINED_FUNCTION_25_2();
  }
  v9 = 0;
LABEL_14:

  swift_bridgeObjectRelease();
  return v9 & 1;
}

{
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;

  if (a1 >> 62)
  {
LABEL_25:
    swift_bridgeObjectRetain();
    v3 = _CocoaArrayWrapper.endIndex.getter();
    if (v3)
      goto LABEL_3;
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3)
    {
LABEL_3:
      v4 = 4;
      while (1)
      {
        if ((a1 & 0xC000000000000001) != 0)
          v5 = (id)MEMORY[0x1C3B73D18](v4 - 4, a1);
        else
          v5 = *(id *)(a1 + 8 * v4);
        v6 = v5;
        v7 = v4 - 3;
        if (__OFADD__(v4 - 4, 1))
        {
          __break(1u);
          goto LABEL_25;
        }
        v8 = v3;
        outlined bridged method (pb) of @objc TUConversationLink.displayName.getter(a2, (SEL *)&selRef_address);
        v10 = v9;
        v12 = v11;
        outlined bridged method (pb) of @objc TUConversationLink.displayName.getter(v6, (SEL *)&selRef_address);
        if (!v12)
          break;
        if (!v14)
          goto LABEL_18;
        if (v10 == v13 && v12 == v14)
        {

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_22:
          swift_bridgeObjectRelease();
          return 1;
        }
        v16 = _stringCompareWithSmolCheck(_:_:expecting:)();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v16 & 1) != 0)
        {

          goto LABEL_22;
        }
LABEL_19:
        ++v4;
        v3 = v8;
        if (v7 == v8)
          goto LABEL_26;
      }
      if (!v14)
      {

        swift_bridgeObjectRelease();
        return 1;
      }
LABEL_18:

      swift_bridgeObjectRelease();
      goto LABEL_19;
    }
  }
LABEL_26:

  swift_bridgeObjectRelease();
  return 0;
}

uint64_t specialized Sequence.contains(where:)(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  unint64_t v33;
  void *v34;

  v2 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for CNComposeRecipient);
    lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop(lazy protocol witness table cache variable for type CNComposeRecipient and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for CNComposeRecipient);
    result = Set.Iterator.init(_cocoa:)();
    v2 = v29;
    v27 = v30;
    v4 = v31;
    v5 = v32;
    v6 = v33;
  }
  else
  {
    v7 = -1 << *(_BYTE *)(a1 + 32);
    v27 = a1 + 56;
    v4 = ~v7;
    v8 = -v7;
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v6 = v9 & *(_QWORD *)(a1 + 56);
    result = swift_bridgeObjectRetain();
    v5 = 0;
  }
  v26 = (unint64_t)(v4 + 64) >> 6;
  while (1)
  {
    v10 = v5;
    if (v2 < 0)
    {
      v13 = __CocoaSet.Iterator.next()();
      if (!v13)
        goto LABEL_46;
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for CNComposeRecipient);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v14 = v34;
      swift_unknownObjectRelease();
      if (!v34)
        goto LABEL_42;
      goto LABEL_31;
    }
    if (!v6)
      break;
    v11 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    v12 = v11 | (v5 << 6);
LABEL_30:
    v14 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v12);
    if (!v14)
      goto LABEL_42;
LABEL_31:
    outlined bridged method (pb) of @objc TUConversationLink.displayName.getter(a2, (SEL *)&selRef_address);
    v19 = v18;
    v21 = v20;
    outlined bridged method (pb) of @objc TUConversationLink.displayName.getter(v14, (SEL *)&selRef_address);
    if (v21)
    {
      if (!v23)
        goto LABEL_41;
      if (v19 == v22 && v21 == v23)
      {

        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_13_3();
        goto LABEL_45;
      }
      v25 = _stringCompareWithSmolCheck(_:_:expecting:)();

      swift_bridgeObjectRelease();
      result = OUTLINED_FUNCTION_13_3();
      if ((v25 & 1) != 0)
        goto LABEL_45;
    }
    else
    {
      if (!v23)
      {

LABEL_45:
        v13 = 1;
        goto LABEL_46;
      }
LABEL_41:

      result = OUTLINED_FUNCTION_13_3();
    }
  }
  v15 = v5 + 1;
  if (!__OFADD__(v5, 1))
  {
    if (v15 >= v26)
      goto LABEL_42;
    v16 = *(_QWORD *)(v27 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v10 + 2;
      if (v10 + 2 >= v26)
        goto LABEL_42;
      v16 = *(_QWORD *)(v27 + 8 * v5);
      if (!v16)
      {
        v5 = v10 + 3;
        if (v10 + 3 >= v26)
          goto LABEL_42;
        v16 = *(_QWORD *)(v27 + 8 * v5);
        if (!v16)
        {
          v5 = v10 + 4;
          if (v10 + 4 >= v26)
            goto LABEL_42;
          v16 = *(_QWORD *)(v27 + 8 * v5);
          if (!v16)
          {
            v5 = v10 + 5;
            if (v10 + 5 >= v26)
              goto LABEL_42;
            v16 = *(_QWORD *)(v27 + 8 * v5);
            if (!v16)
            {
              v17 = v10 + 6;
              while (v17 < v26)
              {
                v16 = *(_QWORD *)(v27 + 8 * v17++);
                if (v16)
                {
                  v5 = v17 - 1;
                  goto LABEL_29;
                }
              }
LABEL_42:
              v13 = 0;
LABEL_46:
              outlined consume of [String : Application].Iterator._Variant();

              return v13;
            }
          }
        }
      }
    }
LABEL_29:
    v6 = (v16 - 1) & v16;
    v12 = __clz(__rbit64(v16)) + (v5 << 6);
    goto LABEL_30;
  }
  __break(1u);
  return result;
}

{
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t result;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  id v19;
  id v20;
  _QWORD v21[3];
  uint64_t v22;
  uint64_t v23;
  __int128 v24[2];
  _QWORD v25[5];

  specialized _NativeDictionary.makeIterator()(v25, a1);
  v3 = v25[0];
  v4 = v25[1];
  v5 = v25[3];
  v6 = v25[4];
  v7 = (unint64_t)(v25[2] + 64) >> 6;
  result = swift_bridgeObjectRetain();
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v5 << 6);
      goto LABEL_20;
    }
    v11 = v5 + 1;
    if (__OFADD__(v5, 1))
      break;
    if (v11 >= v7)
      goto LABEL_24;
    v12 = *(_QWORD *)(v4 + 8 * v11);
    v13 = v5 + 1;
    if (!v12)
    {
      v13 = v5 + 2;
      if (v5 + 2 >= v7)
        goto LABEL_24;
      v12 = *(_QWORD *)(v4 + 8 * v13);
      if (!v12)
      {
        v13 = v5 + 3;
        if (v5 + 3 >= v7)
          goto LABEL_24;
        v12 = *(_QWORD *)(v4 + 8 * v13);
        if (!v12)
        {
          v13 = v5 + 4;
          if (v5 + 4 >= v7)
            goto LABEL_24;
          v12 = *(_QWORD *)(v4 + 8 * v13);
          if (!v12)
          {
            v13 = v5 + 5;
            if (v5 + 5 >= v7)
              goto LABEL_24;
            v12 = *(_QWORD *)(v4 + 8 * v13);
            if (!v12)
            {
              v14 = v5 + 6;
              while (v14 < v7)
              {
                v12 = *(_QWORD *)(v4 + 8 * v14++);
                if (v12)
                {
                  v13 = v14 - 1;
                  goto LABEL_19;
                }
              }
LABEL_24:

              swift_release();
              return 0;
            }
          }
        }
      }
    }
LABEL_19:
    v6 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v13 << 6);
    v5 = v13;
LABEL_20:
    outlined init with copy of RadarReporting(*(_QWORD *)(v3 + 56) + 40 * v10, (uint64_t)v24);
    outlined init with take of Notice(v24, (uint64_t)v21);
    v15 = v22;
    v16 = v23;
    __swift_project_boxed_opaque_existential_1(v21, v22);
    v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(v15, v16);
    LOBYTE(v16) = v18;
    v19 = objc_msgSend(a2, sel_streamToken);
    if ((v16 & 1) != 0)
    {
      result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    }
    else
    {
      v20 = v19;
      result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
      if ((id)v17 == v20)
      {

        swift_release();
        return 1;
      }
    }
  }
  __break(1u);
  return result;
}

ConversationKit::PeoplePickerStyle_optional __swiftcall PeoplePickerStyle.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 3;
  if ((unint64_t)rawValue < 3)
    v2 = rawValue;
  *v1 = v2;
  return (ConversationKit::PeoplePickerStyle_optional)rawValue;
}

uint64_t PeoplePickerStyle.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

ConversationKit::PeoplePickerStyle_optional protocol witness for RawRepresentable.init(rawValue:) in conformance PeoplePickerStyle(Swift::Int *a1)
{
  return PeoplePickerStyle.init(rawValue:)(*a1);
}

void protocol witness for RawRepresentable.rawValue.getter in conformance PeoplePickerStyle(uint64_t *a1@<X8>)
{
  *a1 = PeoplePickerStyle.rawValue.getter();
  OUTLINED_FUNCTION_0();
}

void one-time initialization function for navigationTitleContainerSpacing()
{
  static LayoutConstants.navigationTitleContainerSpacing = 0x3FF0000000000000;
}

id TPPillView.__allocating_init(title:frame:theme:)(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6, double a7)
{
  id v14;
  void *v15;
  id v16;

  v14 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v15 = (void *)MEMORY[0x1C3B72E00](a1, a2);
  swift_bridgeObjectRelease();
  v16 = objc_msgSend(v14, sel_initWithTitle_frame_theme_, v15, a3, a4, a5, a6, a7);

  return v16;
}

void PeoplePickerViewController.navigationSubtitle.getter()
{
  uint64_t *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;

  if (*((_BYTE *)v0 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_style) == 2)
  {
    v1 = (void *)OUTLINED_FUNCTION_107_4(*v0);
    if (v1)
    {
      outlined bridged method (ob) of @objc TUConversationActivity.concatenatedMetadataDescription.getter(v1, (SEL *)&selRef_concatenatedMetadataDescription);
      if (v3)
      {
        v4 = v2;
        v5 = v3;
LABEL_6:
        v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
        objc_msgSend(v7, sel_setNumberOfLines_, 1);
        OUTLINED_FUNCTION_40_3(v7, sel_setClipsToBounds_);
        objc_msgSend(v7, sel_setLineBreakMode_, 4);
        v8 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4AA0]);
        OUTLINED_FUNCTION_48_1(v7, sel_setFont_);

        OUTLINED_FUNCTION_40_3(v7, sel_setAdjustsFontForContentSizeCategory_);
        v9 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
        OUTLINED_FUNCTION_48_1(v7, sel_setTextColor_);

        v10 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
        OUTLINED_FUNCTION_0_3(0xD000000000000014, 0x80000001BD674870);
        OUTLINED_FUNCTION_45_4();
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
        v11 = OUTLINED_FUNCTION_15();
        *(_OWORD *)(v11 + 16) = xmmword_1BD6441D0;
        *(_QWORD *)(v11 + 56) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v11 + 64) = lazy protocol witness table accessor for type String and conformance String();
        *(_QWORD *)(v11 + 32) = v4;
        *(_QWORD *)(v11 + 40) = v5;
        static String.localizedStringWithFormat(_:_:)();
        OUTLINED_FUNCTION_30_4();
        OUTLINED_FUNCTION_27();
        OUTLINED_FUNCTION_55_4();
        outlined bridged method (mbnn) of @objc UILabel.text.setter(v12, v13, v14);
        goto LABEL_7;
      }
    }
    v4 = OUTLINED_FUNCTION_109_5(*v0);
    v5 = v6;
    swift_bridgeObjectRelease();
    if (v5)
      goto LABEL_6;
  }
LABEL_7:
  OUTLINED_FUNCTION_49_0();
}

void PeoplePickerViewController.idsDestinations.setter()
{
  PeoplePickerViewController.idsDestinations.setter();
}

{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_84_4();
  OUTLINED_FUNCTION_32();
}

uint64_t PeoplePickerViewController.idsGroupDestinations.setter(uint64_t a1)
{
  return OUTLINED_FUNCTION_27_18(a1);
}

uint64_t PeoplePickerViewController.meHandles.setter(uint64_t a1)
{
  return OUTLINED_FUNCTION_27_18(a1);
}

void PeoplePickerViewController.restrictionPolicy.setter()
{
  PeoplePickerViewController.idsDestinations.setter();
}

uint64_t key path setter for PeoplePickerViewController.selectedSenderIdentity : PeoplePickerViewController(id *a1, _QWORD **a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x2D0);
  v4 = *a1;
  return v3(v2);
}

void PeoplePickerViewController.selectedSenderIdentity.getter()
{
  uint64_t v0;
  id *v1;
  id v2;

  v1 = (id *)(v0 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_selectedSenderIdentity);
  OUTLINED_FUNCTION_2_0();
  v2 = *v1;
  OUTLINED_FUNCTION_43_1();
}

void PeoplePickerViewController.selectedSenderIdentity.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;

  v3 = (void **)(v1 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_selectedSenderIdentity);
  OUTLINED_FUNCTION_2_0();
  v4 = *v3;
  *v3 = a1;

  OUTLINED_FUNCTION_32();
}

void PeoplePickerViewController.selectedSenderIdentity.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void PeoplePickerViewController.actionBar.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_4_3(a1, OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_actionBar);
}

void PeoplePickerViewController.currentConversationLink.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_4_3(a1, OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_currentConversationLink);
}

void *PeoplePickerViewController.currentConversationIsAVLess.getter()
{
  uint64_t v0;
  void *result;

  if (one-time initialization token for shared != -1)
    swift_once();
  if ((OUTLINED_FUNCTION_110_2() & 1) == 0)
    return 0;
  result = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_currentConversation);
  if (result)
    return (void *)(objc_msgSend(result, sel_avMode) == 0);
  return result;
}

void PeoplePickerViewController.smsAccount.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;

  v1 = OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController____lazy_storage___smsAccount;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController____lazy_storage___smsAccount);
  if (v2 == (void *)1)
  {
    closure #1 in PeoplePickerViewController.smsAccount.getter();
    v3 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v5 = v4;
    outlined consume of UIView??(v3);
  }
  outlined copy of UIView??(v2);
  OUTLINED_FUNCTION_91();
}

void closure #1 in PeoplePickerViewController.smsAccount.getter()
{
  id v0;
  void *v1;
  id v2;
  id v3;
  unint64_t v4;
  id v5;
  uint64_t v6;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  if (v0)
  {
    v1 = v0;
    v2 = objc_msgSend((id)objc_opt_self(), sel_smsService);
    v3 = objc_msgSend(v1, sel_accountsForService_, v2);

    if (v3)
    {
      type metadata accessor for NSObject(0, &lazy cache variable for type metadata for IMAccount);
      v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v4 >> 62)
      {
        swift_bridgeObjectRetain();
        v6 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v6)
        {
LABEL_5:
          specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v4 & 0xC000000000000001) == 0, v4);
          if ((v4 & 0xC000000000000001) != 0)
            MEMORY[0x1C3B73D18](0, v4);
          else
            v5 = *(id *)(v4 + 32);
        }
      }
      else if (*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_5;
      }
      swift_bridgeObjectRelease();
      return;
    }
    __break(1u);
  }
}

void PeoplePickerViewController.maxParticipantLimit.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController____lazy_storage___maxParticipantLimit;
  if (*(_BYTE *)(v0
                + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController____lazy_storage___maxParticipantLimit
                + 8) == 1)
  {
    *(_QWORD *)v1 = closure #1 in PeoplePickerViewController.maxParticipantLimit.getter();
    *(_BYTE *)(v1 + 8) = 0;
  }
  OUTLINED_FUNCTION_0();
}

uint64_t closure #1 in PeoplePickerViewController.maxParticipantLimit.getter()
{
  id v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v6;
  __int128 v7;
  __int128 v8;
  _OWORD v9[2];

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  if (v0)
  {
    v1 = v0;
    outlined bridged method (mbnn) of @objc FTServerBag.object(forKey:)(0xD000000000000013, 0x80000001BD674850, v0);
    v3 = v2;

    if (v3)
    {
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
    }
    else
    {
      v7 = 0u;
      v8 = 0u;
    }
    outlined init with take of Any?((uint64_t)&v7, (uint64_t)v9, &demangling cache variable for type metadata for Any?);
  }
  else
  {
    memset(v9, 0, sizeof(v9));
  }
  outlined init with copy of FeatureEligibility?((uint64_t)v9, (uint64_t)&v7, &demangling cache variable for type metadata for Any?);
  if (!*((_QWORD *)&v8 + 1))
    goto LABEL_11;
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSNumber);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_12:
    v4 = 32;
    goto LABEL_13;
  }
  v4 = (uint64_t)objc_msgSend(v6, sel_unsignedIntegerValue);

  if (v4 < 0)
  {
    __break(1u);
LABEL_11:
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)&v7, &demangling cache variable for type metadata for Any?);
    goto LABEL_12;
  }
LABEL_13:
  outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v9, &demangling cache variable for type metadata for Any?);
  return v4;
}

uint64_t key path setter for PeoplePickerViewController.delegate : PeoplePickerViewController(uint64_t a1, _QWORD **a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x368);
  v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

void PeoplePickerViewController.delegate.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_delegate;
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x1C3B752C0](v1);
  OUTLINED_FUNCTION_32();
}

void PeoplePickerViewController.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_delegate;
  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v4 + 8) = a2;
  OUTLINED_FUNCTION_64();
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_9_0();
}

void PeoplePickerViewController.delegate.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_delegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  OUTLINED_FUNCTION_65_2();
  OUTLINED_FUNCTION_2_0();
  v6 = MEMORY[0x1C3B752C0](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  OUTLINED_FUNCTION_18();
}

void PeoplePickerViewController.delegate.modify(uint64_t a1, char a2)
{
  void *v3;

  v3 = *(void **)a1;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 40) + *(_QWORD *)(*(_QWORD *)a1 + 48) + 8) = *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    OUTLINED_FUNCTION_10();
  }
  OUTLINED_FUNCTION_4_2(v3);
}

uint64_t key path setter for PeoplePickerViewController.appName : PeoplePickerViewController(uint64_t *a1, _QWORD **a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x380);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

void PeoplePickerViewController.appName.didset(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_appName);
  swift_beginAccess();
  v6 = v5[1];
  if (!v6)
  {
    if (!a2)
      return;
    goto LABEL_10;
  }
  if (!a2 || (*v5 == a1 ? (v7 = v6 == a2) : (v7 = 0), !v7 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0))
LABEL_10:
    PeoplePickerViewController.updateNavigationTitle()();
}

void PeoplePickerViewController.updateNavigationTitle()()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;
  unint64_t v4;
  Swift::String_optional v5;
  Swift::String v6;
  uint64_t v7;
  Swift::String v8;
  id v9;
  id v10;
  Swift::String v11;
  Swift::String_optional v12;
  Swift::String v13;
  Swift::String v14;
  id v15;
  Class isa;
  uint64_t v17;
  id v18;
  UIStackView *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  unint64_t v24;
  id v25;
  Swift::OpaquePointer v26;
  Swift::String v27;

  v1 = v0;
  if (!*((_BYTE *)v0 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_style))
  {
    v25 = objc_msgSend(v0, sel_navigationItem);
    v2 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
    v24 = 0xE000000000000000;
    v3 = 0x454341465F57454ELL;
    v4 = 0xEC000000454D4954;
    goto LABEL_5;
  }
  if (*((_BYTE *)v0 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_style) == 1)
  {
    v25 = objc_msgSend(v0, sel_navigationItem);
    v2 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
    v24 = 0xE000000000000000;
    v3 = 0x504F45505F444441;
    v4 = 0xEA0000000000454CLL;
LABEL_5:
    v5.value._countAndFlagsBits = 0x61737265766E6F43;
    v5.value._object = (void *)0xEF74694B6E6F6974;
    v6._countAndFlagsBits = 0;
    v6._object = (void *)0xE000000000000000;
    v7 = 0;
    v8 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v3, v5, (NSBundle)v2, v6, *(Swift::String *)(&v24 - 1));

    outlined bridged method (mbnn) of @objc UINavigationItem.title.setter(v8._countAndFlagsBits, (uint64_t)v8._object, v25);
    goto LABEL_11;
  }
  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  v10 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v27._object = (void *)0xE000000000000000;
  v11._object = (void *)0x80000001BD674C60;
  v11._countAndFlagsBits = 0xD000000000000017;
  v12.value._countAndFlagsBits = 0x61737265766E6F43;
  v12.value._object = (void *)0xEF74694B6E6F6974;
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  v27._countAndFlagsBits = 0;
  v14 = NSLocalizedString(_:tableName:bundle:value:comment:)(v11, v12, (NSBundle)v10, v13, v27);

  outlined bridged method (mbnn) of @objc UILabel.text.setter(v14._countAndFlagsBits, (uint64_t)v14._object, v9);
  v15 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4B10]);
  isa = UIFont.withTraits(_:)(2u).super.isa;

  objc_msgSend(v9, sel_setFont_, isa);
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UIStackView);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1BD6443F0;
  *(_QWORD *)(v17 + 32) = v9;
  v26._rawValue = (void *)v17;
  specialized Array._endMutation()();
  v18 = v9;
  UIStackView.__allocating_init(arrangedSubviews:)(v19, v26);
  v21 = v20;
  PeoplePickerViewController.navigationSubtitle.getter();
  if (v22)
  {
    v23 = v22;
    if (one-time initialization token for navigationTitleContainerSpacing != -1)
      swift_once();
    objc_msgSend(v21, sel_setSpacing_, *(double *)&static LayoutConstants.navigationTitleContainerSpacing);
    objc_msgSend(v21, sel_addArrangedSubview_, v23);

  }
  objc_msgSend(v21, sel_setAxis_, 1);
  objc_msgSend(v21, sel_setAlignment_, 3);
  objc_msgSend(v21, sel_setDistribution_, 3);
  v25 = objc_msgSend(v1, sel_navigationItem);
  objc_msgSend(v25, sel_setTitleView_, v21);

LABEL_11:
}

void PeoplePickerViewController.appName.getter()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_124();
  OUTLINED_FUNCTION_32();
}

uint64_t PeoplePickerViewController.appName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_appName);
  OUTLINED_FUNCTION_2_0();
  v6 = *v5;
  v7 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  PeoplePickerViewController.appName.didset(v6, v7);
  return OUTLINED_FUNCTION_133();
}

void PeoplePickerViewController.appName.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  v4 = (_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_appName);
  OUTLINED_FUNCTION_2_0();
  v5 = v4[1];
  v3[3] = *v4;
  v3[4] = v5;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_65_2();
  OUTLINED_FUNCTION_18();
}

void PeoplePickerViewController.appName.modify(void **a1, char a2)
{
  void *v2;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_89_6();
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_89_6();
  }
  OUTLINED_FUNCTION_4_2(v2);
}

uint64_t key path setter for PeoplePickerViewController.stagedActivity : PeoplePickerViewController(id *a1, _QWORD **a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x398);
  v4 = *a1;
  return v3(v2);
}

void PeoplePickerViewController.stagedActivity.didset(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void **v4;
  void *v5;
  id v6;
  id v7;
  char v8;

  v2 = v1;
  v4 = (void **)(v2 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_stagedActivity);
  swift_beginAccess();
  v5 = *v4;
  if (!*v4)
  {
    if (!a1)
      return;
    goto LABEL_6;
  }
  if (!a1
    || (type metadata accessor for NSObject(0, &lazy cache variable for type metadata for TUConversationActivity),
        v6 = v5,
        v7 = a1,
        v8 = static NSObject.== infix(_:_:)(),
        v6,
        v7,
        (v8 & 1) == 0))
  {
LABEL_6:
    PeoplePickerViewController.updateNavigationTitle()();
  }
}

void PeoplePickerViewController.stagedActivity.getter()
{
  uint64_t v0;
  id *v1;
  id v2;

  v1 = (id *)(v0 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_stagedActivity);
  OUTLINED_FUNCTION_2_0();
  v2 = *v1;
  OUTLINED_FUNCTION_43_1();
}

void PeoplePickerViewController.stagedActivity.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  id v5;

  v3 = (void **)(v1 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_stagedActivity);
  OUTLINED_FUNCTION_2_0();
  v4 = *v3;
  *v3 = a1;
  v5 = a1;
  PeoplePickerViewController.stagedActivity.didset(v4);

  OUTLINED_FUNCTION_9_0();
}

void PeoplePickerViewController.stagedActivity.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  void **v3;
  void *v4;
  id v5;

  v2 = OUTLINED_FUNCTION_38_1();
  *v0 = v2;
  v2[4] = v1;
  v3 = (void **)(v1 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_stagedActivity);
  OUTLINED_FUNCTION_2_0();
  v4 = *v3;
  v2[3] = *v3;
  v5 = v4;
  OUTLINED_FUNCTION_65_2();
  OUTLINED_FUNCTION_18();
}

void PeoplePickerViewController.stagedActivity.modify(uint64_t a1, char a2)
{
  void *v2;
  id v3;
  id *v4;
  id v5;

  v2 = *(void **)a1;
  v4 = (id *)(*(_QWORD *)a1 + 24);
  v3 = *v4;
  if ((a2 & 1) != 0)
  {
    v5 = v3;
    PeoplePickerViewController.stagedActivity.setter(v3);

  }
  else
  {
    PeoplePickerViewController.stagedActivity.setter(*(void **)(*(_QWORD *)a1 + 24));
  }
  OUTLINED_FUNCTION_4_2(v2);
}

uint64_t key path setter for PeoplePickerViewController.initialRecipientDestinations : PeoplePickerViewController(uint64_t a1, _QWORD **a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x3B0);
  v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

void PeoplePickerViewController.initialRecipientDestinations.didset(_QWORD *a1)
{
  char *v1;
  char *v3;
  char v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  void *v8;
  Class isa;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  char *v16;

  v3 = &v1[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_initialRecipientDestinations];
  swift_beginAccess();
  specialized static Array<A>.== infix(_:_:)(*(_QWORD **)v3, a1);
  if ((v4 & 1) == 0)
  {
    v5 = v1;
    v6 = swift_bridgeObjectRetain();
    v7 = specialized Sequence.compactMap<A>(_:)(v6, v5);
    swift_bridgeObjectRelease();
    v8 = *(void **)&v5[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_searchController];
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for CNComposeRecipient);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v8, sel_setRecipients_, isa);

    if (v7 >> 62)
      goto LABEL_13;
    v10 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    v11 = v5;
    swift_bridgeObjectRetain();
    for (; v10; v10 = _CocoaArrayWrapper.endIndex.getter())
    {
      v12 = 4;
      while (1)
      {
        v13 = (v7 & 0xC000000000000001) != 0
            ? (id)MEMORY[0x1C3B73D18](v12 - 4, v7)
            : *(id *)(v7 + 8 * v12);
        v14 = v13;
        v15 = v12 - 3;
        if (__OFADD__(v12 - 4, 1))
          break;
        PeoplePickerViewController.addRecipient(_:)(v13);

        ++v12;
        if (v15 == v10)
          goto LABEL_10;
      }
      __break(1u);
LABEL_13:
      v16 = v5;
      swift_bridgeObjectRetain();
    }
LABEL_10:

    swift_bridgeObjectRelease_n();
  }
}

void PeoplePickerViewController.composeRecipient(for:)()
{
  void *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  id v9;
  void *v10;
  void *v11;
  id v12;

  v0 = (void *)MEMORY[0x1C3B72E00]();
  outlined bridged method (ob) of @objc TUConversationActivity.concatenatedMetadataDescription.getter(v0, (SEL *)&selRef_stringByRemovingWhitespace);
  if (v2)
  {
    v3 = v1;
    v4 = v2;
    v5 = HIBYTE(v2) & 0xF;
    if ((v2 & 0x2000000000000000) == 0)
      v5 = v1 & 0xFFFFFFFFFFFFLL;
    if (v5)
    {
      v6 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
      v7 = objc_msgSend(v6, sel_contactStore);

      v8 = MEMORY[0x1C3B72E00](v3, v4);
      v9 = objc_msgSend(v7, sel_contactForDestinationId_, v8);

      v10 = (void *)MEMORY[0x1C3B72E00](v3, v4);
      LOBYTE(v8) = objc_msgSend(v10, sel_destinationIdIsEmailAddress);

      if ((v8 & 1) == 0)
      {
        v11 = (void *)MEMORY[0x1C3B72E00](v3, v4);
        objc_msgSend(v11, sel_destinationIdIsPhoneNumber);

      }
      v12 = objc_allocWithZone(MEMORY[0x1E0D13688]);
      @nonobjc CNComposeRecipient.init(contact:address:kind:)(v9, v3, v4);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
}

void PeoplePickerViewController.addRecipient(_:)(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  NSSet v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = v1;
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v4 = type metadata accessor for Logger();
  __swift_project_value_buffer(v4, (uint64_t)&static Logger.conversationKit);
  v5 = a1;
  v6 = Logger.logObject.getter();
  v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    v18 = v9;
    *(_DWORD *)v8 = 136315138;
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for CNComposeRecipient);
    v10 = v5;
    v11 = String.init<A>(reflecting:)();
    v17 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v11, v12, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v6, v7, "[PeoplePickerViewController] Adding recipient: %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v9, -1, -1);
    MEMORY[0x1C3B751B8](v8, -1, -1);

  }
  else
  {

  }
  v13 = objc_msgSend((id)objc_opt_self(), sel_sharedManager);
  CNComposeRecipient.idsDestinations()();
  v14.super.isa = Set._bridgeToObjectiveC()().super.isa;
  v15 = swift_bridgeObjectRelease();
  if (((*(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v2) + 0x3C0))(v15) & 1) != 0)
    v16 = 63;
  else
    v16 = 47;
  objc_msgSend(v13, sel_beginQueryWithDestinations_services_, v14.super.isa, v16, v17, v18);

  PeoplePickerViewController.currentRecipientsAddresses()();
  PeoplePickerViewController.callFilterPolicy(for:)();
  swift_bridgeObjectRelease();
  PeoplePickerViewController.restrictionPolicy.setter();
  PeoplePickerViewController.updateState()();
}

void PeoplePickerViewController.initialRecipientDestinations.getter()
{
  OUTLINED_FUNCTION_2_0();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_43_1();
}

void PeoplePickerViewController.initialRecipientDestinations.setter(_QWORD *a1)
{
  uint64_t v1;
  _QWORD **v3;
  _QWORD *v4;

  v3 = (_QWORD **)(v1 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_initialRecipientDestinations);
  OUTLINED_FUNCTION_2_0();
  v4 = *v3;
  *v3 = a1;
  PeoplePickerViewController.initialRecipientDestinations.didset(v4);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_9_0();
}

void PeoplePickerViewController.initialRecipientDestinations.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  v2 = OUTLINED_FUNCTION_38_1();
  *v0 = v2;
  v2[4] = v1;
  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_initialRecipientDestinations);
  OUTLINED_FUNCTION_2_0();
  v2[3] = *v3;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_65_2();
  OUTLINED_FUNCTION_18();
}

void PeoplePickerViewController.initialRecipientDestinations.modify(uint64_t a1, char a2)
{
  void *v2;
  _QWORD *v3;
  _QWORD *v4;

  v2 = *(void **)a1;
  v3 = *(_QWORD **)(*(_QWORD *)a1 + 24);
  if ((a2 & 1) != 0)
  {
    v4 = (_QWORD *)swift_bridgeObjectRetain();
    PeoplePickerViewController.initialRecipientDestinations.setter(v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    PeoplePickerViewController.initialRecipientDestinations.setter(v3);
  }
  OUTLINED_FUNCTION_4_2(v2);
}

void PeoplePickerViewController.setPreventsApplicationTerminationWhenModal.getter()
{
  swift_retain();
  OUTLINED_FUNCTION_0();
}

uint64_t PeoplePickerViewController.includeMessagesInIDSQueries.getter()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_style) == 2)
    return 1;
  else
    return (uint64_t)PeoplePickerViewController.currentConversationIsAVLess.getter();
}

unint64_t PeoplePickerViewController.defaultActionBarButtonStyle.getter()
{
  uint64_t v0;

  if (!*(_BYTE *)(v0 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_style))
    return 2;
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_style) == 1)
    return (unint64_t)PeoplePickerViewController.currentConversationIsAVLess.getter() & 1;
  if (one-time initialization token for shared != -1)
    swift_once();
  if ((OUTLINED_FUNCTION_110_2() & 1) != 0)
    return 4;
  else
    return 2;
}

uint64_t (*default argument 4 of PeoplePickerViewController.init(style:existingAddresses:currentConversation:stagedActivity:setPreventsApplicationTerminationWhenModal:)())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void PeoplePickerViewController.__allocating_init(style:existingAddresses:currentConversation:stagedActivity:setPreventsApplicationTerminationWhenModal:)(char *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6)
{
  objc_class *v6;
  id v13;

  v13 = objc_allocWithZone(v6);
  PeoplePickerViewController.init(style:existingAddresses:currentConversation:stagedActivity:setPreventsApplicationTerminationWhenModal:)(a1, a2, a3, a4, a5, a6);
}

void PeoplePickerViewController.init(style:existingAddresses:currentConversation:stagedActivity:setPreventsApplicationTerminationWhenModal:)(char *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6)
{
  char *v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  void **v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  id v45;
  void *v46;
  char *v47;
  id v48;
  id v49;
  uint64_t v50;
  id v51;
  id v52;
  id v53;
  id v54;
  char *v55;
  id v56;
  char *v57;
  uint64_t v58;
  void (*v59)(void);
  uint64_t v60;
  void (*v61)(void);
  char *v62;
  uint64_t v63;
  void *v64;
  void (*v65)(void);
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  uint64_t v90;
  void (*v91)(uint64_t, uint64_t);
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char v97;
  uint64_t v98;
  uint64_t v101;
  objc_super v102;
  uint64_t v103;
  uint64_t v104;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_41();
  v93 = v12;
  v101 = type metadata accessor for NSRunLoop.SchedulerTimeType.Stride();
  v96 = *(_QWORD *)(v101 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_41();
  v92 = v14;
  v95 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.Debounce<PassthroughSubject<(), Never>, NSRunLoop>);
  v90 = *(_QWORD *)(v95 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_41();
  v94 = v16;
  v97 = *a1;
  v17 = OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_availableRecipientTintColor;
  objc_opt_self();
  v18 = v6;
  v19 = OUTLINED_FUNCTION_9((uint64_t)v18, sel_systemTealColor);
  *(_QWORD *)&v6[v17] = v19;
  v20 = OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_unavailableRecipientTintColor;
  v21 = OUTLINED_FUNCTION_9((uint64_t)v19, sel_systemGrayColor);
  *(_QWORD *)&v18[v20] = v21;
  v22 = OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_gondolaRecipientTintColor;
  v23 = OUTLINED_FUNCTION_9((uint64_t)v21, sel_systemGreenColor);
  *(_QWORD *)&v18[v22] = v23;
  v24 = OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_restrictedRecipientTintColor;
  *(_QWORD *)&v18[v24] = OUTLINED_FUNCTION_9((uint64_t)v23, sel_systemRedColor);
  v25 = &v18[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_constants];
  *(_OWORD *)v25 = xmmword_1BD64A8C0;
  *((_QWORD *)v25 + 2) = 0x4034000000000000;
  v26 = OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_callProviderManager;
  v27 = OUTLINED_FUNCTION_95_3(objc_allocWithZone(MEMORY[0x1E0DBD1E0]));
  *(_QWORD *)&v18[v26] = v27;
  v28 = OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_senderIdentityPillView;
  OUTLINED_FUNCTION_59((uint64_t)v27, &lazy cache variable for type metadata for TPPillView);
  *(_QWORD *)&v18[v28] = OUTLINED_FUNCTION_2_57();
  v29 = OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_reporter;
  *(_QWORD *)&v18[v29] = OUTLINED_FUNCTION_95_3(objc_allocWithZone((Class)CNKCoreAnalyticsReporter));
  v30 = OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_possibleRecipients;
  v31 = MEMORY[0x1E0DEE9D8];
  v32 = MEMORY[0x1E0DEE9E8];
  v98 = a5;
  if ((MEMORY[0x1E0DEE9D8] & 0xC000000000000000) == 0)
  {
    *(_QWORD *)&v18[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_possibleRecipients] = MEMORY[0x1E0DEE9E8];
    v33 = v32;
    goto LABEL_4;
  }
  v86 = MEMORY[0x1E0DEE9D8];
  if (OUTLINED_FUNCTION_25_3())
  {
    specialized Set.init(_nonEmptyArrayLiteral:)(MEMORY[0x1E0DEE9D8]);
    *(_QWORD *)&v18[v30] = v87;
  }
  else
  {
    *(_QWORD *)&v18[v30] = v32;
    v33 = v32;
    if ((v86 & 0xC000000000000000) == 0)
      goto LABEL_4;
  }
  if (_CocoaArrayWrapper.endIndex.getter())
    specialized Set.init(_nonEmptyArrayLiteral:)(MEMORY[0x1E0DEE9D8]);
  else
    v33 = MEMORY[0x1E0DEE9E8];
LABEL_4:
  *(_QWORD *)&v18[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_loggedInvalidRecipients] = v33;
  v34 = OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_existingAddresses;
  *(_QWORD *)&v18[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_existingAddresses] = v32;
  *(_QWORD *)&v18[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_idsDestinations] = v32;
  *(_QWORD *)&v18[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_idsGroupDestinations] = v32;
  *(_QWORD *)&v18[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_meHandles] = v32;
  *(_DWORD *)&v18[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_keyboardHeight] = 0;
  *(_QWORD *)&v18[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_selectedSenderIdentity] = 0;
  *(_QWORD *)&v18[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_actionBar] = 0;
  v35 = OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_currentConversation;
  *(_QWORD *)&v18[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_currentConversation] = 0;
  *(_QWORD *)&v18[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_currentConversationLink] = 0;
  *(_QWORD *)&v18[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController____lazy_storage___smsAccount] = 1;
  v36 = &v18[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController____lazy_storage___maxParticipantLimit];
  *(_QWORD *)v36 = 0;
  v36[8] = 1;
  OUTLINED_FUNCTION_40_4((uint64_t)&v18[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_delegate]);
  v37 = &v18[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_appName];
  *(_QWORD *)v37 = 0;
  *((_QWORD *)v37 + 1) = 0;
  v38 = (void **)&v18[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_stagedActivity];
  *(_QWORD *)&v18[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_stagedActivity] = 0;
  *(_QWORD *)&v18[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_initialRecipientDestinations] = v31;
  v39 = &v18[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_addButtonHandler];
  *(_QWORD *)v39 = 0;
  *((_QWORD *)v39 + 1) = 0;
  v40 = &v18[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_linkShareCoordinator];
  *(_OWORD *)v40 = 0u;
  *((_OWORD *)v40 + 1) = 0u;
  *((_QWORD *)v40 + 4) = 0;
  v41 = OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_scheduleIDSQuerySubject;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PassthroughSubject<(), Never>);
  OUTLINED_FUNCTION_14_0();
  *(_QWORD *)&v18[v41] = OUTLINED_FUNCTION_27_2();
  v42 = OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_scheduleIDSQueryGroupSubject;
  OUTLINED_FUNCTION_63_11();
  *(_QWORD *)&v18[v42] = OUTLINED_FUNCTION_27_2();
  v43 = OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_scheduleIDSCachedQuerySubject;
  OUTLINED_FUNCTION_63_11();
  *(_QWORD *)&v18[v43] = OUTLINED_FUNCTION_27_2();
  *(_QWORD *)&v18[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_scheduleIDSQueryDebouncer] = 0;
  *(_QWORD *)&v18[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_scheduleIDSQueryGroupDebouncer] = 0;
  *(_QWORD *)&v18[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_scheduleIDSCachedQueryDebouncer] = 0;
  v18[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_style] = v97;
  v44 = *(void **)&v18[v35];
  *(_QWORD *)&v18[v35] = a3;
  v45 = a3;

  OUTLINED_FUNCTION_2_0();
  v46 = *v38;
  *v38 = a4;
  a4;

  if (a2)
  {
    *(_QWORD *)&v18[v34] = a2;
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_2_1();
  }
  v47 = &v18[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_setPreventsApplicationTerminationWhenModal];
  *(_QWORD *)v47 = v98;
  *((_QWORD *)v47 + 1) = a6;
  v48 = objc_allocWithZone(MEMORY[0x1E0D13648]);
  OUTLINED_FUNCTION_1_28();
  v49 = objc_msgSend(v48, sel_initWithSearchType_, 2);
  *(_QWORD *)&v18[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_searchController] = v49;
  type metadata accessor for PeoplePickerViewModel();
  OUTLINED_FUNCTION_15();
  v45;
  v50 = PeoplePickerViewModel.init(activeConversation:)((uint64_t)a3);
  *(_QWORD *)&v18[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_viewModel] = v50;
  OUTLINED_FUNCTION_59(v50, (unint64_t *)&lazy cache variable for type metadata for NSNumber);
  *(_QWORD *)&v18[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_restrictionPolicy] = Dictionary.init(dictionaryLiteral:)();
  *(_QWORD *)&v18[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_stackView] = OUTLINED_FUNCTION_95_3(objc_allocWithZone(MEMORY[0x1E0DC3CA8]));
  v51 = objc_msgSend((id)objc_opt_self(), sel_buttonWithType_, 1);
  v52 = OUTLINED_FUNCTION_54_14((uint64_t)v51, OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_audioButton);
  v53 = OUTLINED_FUNCTION_54_14((uint64_t)v52, OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_videoButton);
  *(_QWORD *)&v18[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_addPeopleButton] = v53;

  v102.receiver = v18;
  v102.super_class = (Class)type metadata accessor for PeoplePickerViewController();
  objc_msgSendSuper2(&v102, sel_initWithNibName_bundle_, 0, 0);
  v54 = objc_allocWithZone((Class)type metadata accessor for iOSPeoplePickerAddButtonHandler());
  v55 = (char *)OUTLINED_FUNCTION_64_7();
  v56 = OUTLINED_FUNCTION_25_1((uint64_t)v55, sel_init);
  v57 = &v55[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_addButtonHandler];
  *(_QWORD *)v57 = v56;
  *((_QWORD *)v57 + 1) = &protocol witness table for iOSPeoplePickerAddButtonHandler;
  swift_unknownObjectRelease();
  if (*(_QWORD *)v57)
  {
    v58 = *((_QWORD *)v57 + 1);
    OUTLINED_FUNCTION_15_6();
    OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_24_25();
    v59 = *(void (**)(void))(v58 + 64);
    OUTLINED_FUNCTION_72_9();
    OUTLINED_FUNCTION_1_28();
    OUTLINED_FUNCTION_55_4();
    v59();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_22();
    if (*(_QWORD *)v57)
    {
      v60 = *((_QWORD *)v57 + 1);
      OUTLINED_FUNCTION_15_6();
      v61 = *(void (**)(void))(v60 + 16);
      v62 = v55;
      OUTLINED_FUNCTION_72_9();
      OUTLINED_FUNCTION_55_4();
      v61();
      OUTLINED_FUNCTION_10();
      if (*(_QWORD *)v57)
      {
        v63 = *((_QWORD *)v57 + 1);
        OUTLINED_FUNCTION_15_6();
        v64 = *(void **)&v62[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_searchController];
        v65 = *(void (**)(void))(v63 + 40);
        OUTLINED_FUNCTION_72_9();
        v66 = v64;
        OUTLINED_FUNCTION_55_4();
        v65();
        OUTLINED_FUNCTION_10();
      }
    }
  }
  OUTLINED_FUNCTION_44_16(OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_scheduleIDSQuerySubject);
  static NSRunLoop.SchedulerTimeType.Stride.seconds(_:)();
  v89 = (void *)objc_opt_self();
  objc_msgSend(v89, sel_mainRunLoop);
  v88 = type metadata accessor for NSRunLoop.SchedulerOptions();
  v67 = OUTLINED_FUNCTION_36_25();
  __swift_storeEnumTagSinglePayload(v67, v68, v69, v70);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSRunLoop);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type PassthroughSubject<(), Never> and conformance PassthroughSubject<A, B>, &demangling cache variable for type metadata for PassthroughSubject<(), Never>);
  lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop(&lazy protocol witness table cache variable for type NSRunLoop and conformance NSRunLoop, (unint64_t *)&lazy cache variable for type metadata for NSRunLoop);
  OUTLINED_FUNCTION_114_3();
  v71 = Publisher.debounce<A>(for:scheduler:options:)();
  OUTLINED_FUNCTION_99_3(v71, (uint64_t *)&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  OUTLINED_FUNCTION_126_0();
  (*(void (**)(uint64_t, uint64_t))(v96 + 8))(v92, v101);
  OUTLINED_FUNCTION_125_0();
  v72 = OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_24_25();
  v73 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v73 + 16) = partial apply for closure #2 in PeoplePickerViewController.init(style:existingAddresses:currentConversation:stagedActivity:setPreventsApplicationTerminationWhenModal:);
  *(_QWORD *)(v73 + 24) = v72;
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.Debounce<PassthroughSubject<(), Never>, NSRunLoop> and conformance Publishers.Debounce<A, B>, &demangling cache variable for type metadata for Publishers.Debounce<PassthroughSubject<(), Never>, NSRunLoop>);
  Publisher<>.sink(receiveValue:)();
  OUTLINED_FUNCTION_16_20();
  v91 = *(void (**)(uint64_t, uint64_t))(v90 + 8);
  v91(v94, v95);
  OUTLINED_FUNCTION_79_7(OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_scheduleIDSQueryDebouncer);
  OUTLINED_FUNCTION_44_16(OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_scheduleIDSQueryGroupSubject);
  static NSRunLoop.SchedulerTimeType.Stride.seconds(_:)();
  v74 = objc_msgSend(v89, (SEL)&selRef_zoomControl_didChangeZoomFactor_interactionType_ + 6);
  v75 = OUTLINED_FUNCTION_36_25();
  __swift_storeEnumTagSinglePayload(v75, v76, v77, v88);
  OUTLINED_FUNCTION_43_20();
  Publisher.debounce<A>(for:scheduler:options:)();
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v93, (uint64_t *)&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  OUTLINED_FUNCTION_126_0();
  OUTLINED_FUNCTION_69_8();
  OUTLINED_FUNCTION_125_0();
  v78 = OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_24_25();
  v79 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v79 + 16) = partial apply for closure #3 in PeoplePickerViewController.init(style:existingAddresses:currentConversation:stagedActivity:setPreventsApplicationTerminationWhenModal:);
  *(_QWORD *)(v79 + 24) = v78;
  OUTLINED_FUNCTION_60_9();
  OUTLINED_FUNCTION_16_20();
  v91(v94, v95);
  OUTLINED_FUNCTION_79_7(OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_scheduleIDSQueryGroupDebouncer);
  OUTLINED_FUNCTION_44_16(OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_scheduleIDSCachedQuerySubject);
  static NSRunLoop.SchedulerTimeType.Stride.seconds(_:)();
  objc_msgSend(v89, sel_mainRunLoop);
  v80 = OUTLINED_FUNCTION_36_25();
  __swift_storeEnumTagSinglePayload(v80, v81, v82, v88);
  OUTLINED_FUNCTION_43_20();
  Publisher.debounce<A>(for:scheduler:options:)();
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v93, (uint64_t *)&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  OUTLINED_FUNCTION_126_0();
  OUTLINED_FUNCTION_69_8();
  OUTLINED_FUNCTION_125_0();
  v83 = OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_24_25();
  v84 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v84 + 16) = partial apply for closure #4 in PeoplePickerViewController.init(style:existingAddresses:currentConversation:stagedActivity:setPreventsApplicationTerminationWhenModal:);
  *(_QWORD *)(v84 + 24) = v83;
  v85 = OUTLINED_FUNCTION_60_9();
  swift_release();
  v91(v94, v95);
  *(_QWORD *)&v55[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_scheduleIDSCachedQueryDebouncer] = v85;
  swift_release();
  if (a2)
  {
    if (*(_QWORD *)(a2 + 16))
    {
      specialized Sequence.compactMap<A>(_:)(a2);
      OUTLINED_FUNCTION_16_27();
      specialized Set.init<A>(_:)(v85);
      OUTLINED_FUNCTION_2_0();
      OUTLINED_FUNCTION_84_4();
      PeoplePickerViewController.scheduleIDSQuery()();
    }
    else
    {
      OUTLINED_FUNCTION_27();
    }
  }

  OUTLINED_FUNCTION_121((uint64_t)&v103);
  OUTLINED_FUNCTION_121((uint64_t)&v104);
  swift_release();
  OUTLINED_FUNCTION_52_1();
}

void closure #1 in PeoplePickerViewController.init(style:existingAddresses:currentConversation:stagedActivity:setPreventsApplicationTerminationWhenModal:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v3 = a2 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1C3B752C0](v3);
  if (v4)
  {
    v5 = (void *)v4;
    objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_searchController), sel_addRecipient_, a1);

  }
}

void PeoplePickerViewController.scheduleIDSQuery()()
{
  id v0;
  Class isa;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedManager);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  isa = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_beginBatchQueryWithDestinations_, isa);

}

void PeoplePickerViewController.scheduleIDSQueryForGroups()()
{
  _QWORD *v0;
  uint64_t v1;
  id v2;
  NSSet v3;
  uint64_t v4;
  uint64_t v5;

  swift_beginAccess();
  swift_bridgeObjectRetain();
  v1 = swift_bridgeObjectRetain();
  specialized Set.union<A>(_:)(v1);
  PeoplePickerViewController.idsDestinations.setter();
  v2 = objc_msgSend((id)objc_opt_self(), sel_sharedManager);
  swift_bridgeObjectRetain();
  v3.super.isa = Set._bridgeToObjectiveC()().super.isa;
  v4 = swift_bridgeObjectRelease();
  if (((*(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x3C0))(v4) & 1) != 0)
    v5 = 63;
  else
    v5 = 47;
  objc_msgSend(v2, sel_beginBatchQueryWithDestinations_services_, v3.super.isa, v5);

}

void PeoplePickerViewController.scheduleIDSCachedQuery()()
{
  _QWORD *v0;
  id v1;
  uint64_t v2;
  NSSet v3;
  uint64_t v4;
  uint64_t v5;

  v1 = objc_msgSend((id)objc_opt_self(), sel_sharedManager);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v2 = swift_bridgeObjectRetain();
  specialized Set.union<A>(_:)(v2);
  v3.super.isa = Set._bridgeToObjectiveC()().super.isa;
  v4 = swift_bridgeObjectRelease();
  if (((*(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x3C0))(v4) & 1) != 0)
    v5 = 63;
  else
    v5 = 47;
  objc_msgSend(v1, sel_beginCachedQueryWithDestinations_services_, v3.super.isa, v5);

}

void PeoplePickerViewController.__allocating_init(coder:)(uint64_t a1)
{
  objc_class *v1;

  objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);
  OUTLINED_FUNCTION_49_5();
  OUTLINED_FUNCTION_0();
}

void PeoplePickerViewController.init(coder:)()
{
  char *v0;
  char *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_availableRecipientTintColor;
  v3 = objc_msgSend((id)objc_opt_self(), sel_systemTealColor);
  *(_QWORD *)&v0[v2] = v3;
  v4 = OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_unavailableRecipientTintColor;
  v5 = OUTLINED_FUNCTION_25_1((uint64_t)v3, sel_systemGrayColor);
  *(_QWORD *)&v0[v4] = v5;
  v6 = OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_gondolaRecipientTintColor;
  v7 = OUTLINED_FUNCTION_25_1((uint64_t)v5, sel_systemGreenColor);
  *(_QWORD *)&v0[v6] = v7;
  v8 = OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_restrictedRecipientTintColor;
  *(_QWORD *)&v0[v8] = OUTLINED_FUNCTION_25_1((uint64_t)v7, sel_systemRedColor);
  v9 = &v0[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_constants];
  *(_OWORD *)v9 = xmmword_1BD64A8C0;
  *((_QWORD *)v9 + 2) = 0x4034000000000000;
  v10 = OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_callProviderManager;
  v11 = OUTLINED_FUNCTION_70_0(objc_allocWithZone(MEMORY[0x1E0DBD1E0]));
  *(_QWORD *)&v1[v10] = v11;
  v12 = OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_senderIdentityPillView;
  OUTLINED_FUNCTION_59((uint64_t)v11, &lazy cache variable for type metadata for TPPillView);
  *(_QWORD *)&v1[v12] = OUTLINED_FUNCTION_2_57();
  v13 = OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_reporter;
  *(_QWORD *)&v1[v13] = OUTLINED_FUNCTION_70_0(objc_allocWithZone((Class)CNKCoreAnalyticsReporter));
  v14 = OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_possibleRecipients;
  v15 = MEMORY[0x1E0DEE9D8];
  v16 = MEMORY[0x1E0DEE9E8];
  if ((MEMORY[0x1E0DEE9D8] & 0xC000000000000000) != 0)
  {
    v17 = MEMORY[0x1E0DEE9D8];
    if (OUTLINED_FUNCTION_25_3())
    {
      specialized Set.init(_nonEmptyArrayLiteral:)(MEMORY[0x1E0DEE9D8]);
      *(_QWORD *)&v1[v14] = v18;
    }
    else
    {
      *(_QWORD *)&v1[v14] = v16;
      v19 = v16;
      if ((v17 & 0xC000000000000000) == 0)
        goto LABEL_9;
    }
    if (_CocoaArrayWrapper.endIndex.getter())
      specialized Set.init(_nonEmptyArrayLiteral:)(MEMORY[0x1E0DEE9D8]);
    else
      v19 = MEMORY[0x1E0DEE9E8];
  }
  else
  {
    *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_possibleRecipients] = MEMORY[0x1E0DEE9E8];
    v19 = v16;
  }
LABEL_9:
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_loggedInvalidRecipients] = v19;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_existingAddresses] = v16;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_idsDestinations] = v16;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_idsGroupDestinations] = v16;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_meHandles] = v16;
  *(_DWORD *)&v1[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_keyboardHeight] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_selectedSenderIdentity] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_actionBar] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_currentConversation] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_currentConversationLink] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController____lazy_storage___smsAccount] = 1;
  v20 = &v1[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController____lazy_storage___maxParticipantLimit];
  *(_QWORD *)v20 = 0;
  v20[8] = 1;
  OUTLINED_FUNCTION_40_4((uint64_t)&v1[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_delegate]);
  v21 = &v1[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_appName];
  *(_QWORD *)v21 = 0;
  *((_QWORD *)v21 + 1) = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_stagedActivity] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_initialRecipientDestinations] = v15;
  v22 = &v1[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_addButtonHandler];
  *(_QWORD *)v22 = 0;
  *((_QWORD *)v22 + 1) = 0;
  v23 = &v1[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_linkShareCoordinator];
  *(_OWORD *)v23 = 0u;
  *((_OWORD *)v23 + 1) = 0u;
  *((_QWORD *)v23 + 4) = 0;
  v24 = OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_scheduleIDSQuerySubject;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PassthroughSubject<(), Never>);
  OUTLINED_FUNCTION_14_0();
  *(_QWORD *)&v1[v24] = OUTLINED_FUNCTION_27_2();
  v25 = OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_scheduleIDSQueryGroupSubject;
  OUTLINED_FUNCTION_12_32();
  *(_QWORD *)&v1[v25] = OUTLINED_FUNCTION_27_2();
  v26 = OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_scheduleIDSCachedQuerySubject;
  OUTLINED_FUNCTION_12_32();
  *(_QWORD *)&v1[v26] = OUTLINED_FUNCTION_27_2();
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_scheduleIDSQueryDebouncer] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_scheduleIDSQueryGroupDebouncer] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_scheduleIDSCachedQueryDebouncer] = 0;

  OUTLINED_FUNCTION_67_8();
  __break(1u);
}

void PeoplePickerViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)MEMORY[0x1C3B72E00]();
    OUTLINED_FUNCTION_53();
  }
  else
  {
    v6 = 0;
  }
  objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  OUTLINED_FUNCTION_18();
}

void PeoplePickerViewController.init(nibName:bundle:)()
{
  char *v0;
  char *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_availableRecipientTintColor;
  v3 = objc_msgSend((id)objc_opt_self(), sel_systemTealColor);
  *(_QWORD *)&v0[v2] = v3;
  v4 = OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_unavailableRecipientTintColor;
  v5 = OUTLINED_FUNCTION_25_1((uint64_t)v3, sel_systemGrayColor);
  *(_QWORD *)&v0[v4] = v5;
  v6 = OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_gondolaRecipientTintColor;
  v7 = OUTLINED_FUNCTION_25_1((uint64_t)v5, sel_systemGreenColor);
  *(_QWORD *)&v0[v6] = v7;
  v8 = OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_restrictedRecipientTintColor;
  *(_QWORD *)&v0[v8] = OUTLINED_FUNCTION_25_1((uint64_t)v7, sel_systemRedColor);
  v9 = &v0[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_constants];
  *(_OWORD *)v9 = xmmword_1BD64A8C0;
  *((_QWORD *)v9 + 2) = 0x4034000000000000;
  v10 = OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_callProviderManager;
  v11 = OUTLINED_FUNCTION_70_0(objc_allocWithZone(MEMORY[0x1E0DBD1E0]));
  *(_QWORD *)&v1[v10] = v11;
  v12 = OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_senderIdentityPillView;
  OUTLINED_FUNCTION_59((uint64_t)v11, &lazy cache variable for type metadata for TPPillView);
  *(_QWORD *)&v1[v12] = OUTLINED_FUNCTION_2_57();
  v13 = OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_reporter;
  *(_QWORD *)&v1[v13] = OUTLINED_FUNCTION_70_0(objc_allocWithZone((Class)CNKCoreAnalyticsReporter));
  v14 = OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_possibleRecipients;
  v15 = MEMORY[0x1E0DEE9D8];
  v16 = MEMORY[0x1E0DEE9E8];
  if ((MEMORY[0x1E0DEE9D8] & 0xC000000000000000) != 0)
  {
    v17 = MEMORY[0x1E0DEE9D8];
    if (OUTLINED_FUNCTION_25_3())
    {
      specialized Set.init(_nonEmptyArrayLiteral:)(MEMORY[0x1E0DEE9D8]);
      *(_QWORD *)&v1[v14] = v18;
    }
    else
    {
      *(_QWORD *)&v1[v14] = v16;
      v19 = v16;
      if ((v17 & 0xC000000000000000) == 0)
        goto LABEL_9;
    }
    if (_CocoaArrayWrapper.endIndex.getter())
      specialized Set.init(_nonEmptyArrayLiteral:)(MEMORY[0x1E0DEE9D8]);
    else
      v19 = MEMORY[0x1E0DEE9E8];
  }
  else
  {
    *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_possibleRecipients] = MEMORY[0x1E0DEE9E8];
    v19 = v16;
  }
LABEL_9:
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_loggedInvalidRecipients] = v19;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_existingAddresses] = v16;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_idsDestinations] = v16;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_idsGroupDestinations] = v16;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_meHandles] = v16;
  *(_DWORD *)&v1[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_keyboardHeight] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_selectedSenderIdentity] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_actionBar] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_currentConversation] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_currentConversationLink] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController____lazy_storage___smsAccount] = 1;
  v20 = &v1[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController____lazy_storage___maxParticipantLimit];
  *(_QWORD *)v20 = 0;
  v20[8] = 1;
  OUTLINED_FUNCTION_40_4((uint64_t)&v1[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_delegate]);
  v21 = &v1[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_appName];
  *(_QWORD *)v21 = 0;
  *((_QWORD *)v21 + 1) = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_stagedActivity] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_initialRecipientDestinations] = v15;
  v22 = &v1[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_addButtonHandler];
  *(_QWORD *)v22 = 0;
  *((_QWORD *)v22 + 1) = 0;
  v23 = &v1[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_linkShareCoordinator];
  *(_OWORD *)v23 = 0u;
  *((_OWORD *)v23 + 1) = 0u;
  *((_QWORD *)v23 + 4) = 0;
  v24 = OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_scheduleIDSQuerySubject;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PassthroughSubject<(), Never>);
  OUTLINED_FUNCTION_14_0();
  *(_QWORD *)&v1[v24] = OUTLINED_FUNCTION_27_2();
  v25 = OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_scheduleIDSQueryGroupSubject;
  OUTLINED_FUNCTION_12_32();
  *(_QWORD *)&v1[v25] = OUTLINED_FUNCTION_27_2();
  v26 = OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_scheduleIDSCachedQuerySubject;
  OUTLINED_FUNCTION_12_32();
  *(_QWORD *)&v1[v26] = OUTLINED_FUNCTION_27_2();
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_scheduleIDSQueryDebouncer] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_scheduleIDSQueryGroupDebouncer] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_scheduleIDSCachedQueryDebouncer] = 0;

  OUTLINED_FUNCTION_67_8();
  __break(1u);
}

Swift::Void __swiftcall PeoplePickerViewController.viewDidLoad()()
{
  char *v0;
  uint64_t v1;
  id v2;
  void *v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  objc_super v22;

  v22.receiver = v0;
  v22.super_class = (Class)type metadata accessor for PeoplePickerViewController();
  objc_msgSendSuper2(&v22, sel_viewDidLoad);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_callProviderManager], sel_addDelegate_queue_, v0, 0);
  v1 = PeoplePickerViewController.initializeMeHandles()();
  v2 = OUTLINED_FUNCTION_25_1(v1, sel_view);
  if (v2)
  {
    v3 = v2;
    OUTLINED_FUNCTION_40_3(v2, sel_setPreservesSuperviewLayoutMargins_);

    v5 = OUTLINED_FUNCTION_25_1(v4, sel_view);
    if (v5)
    {
      v6 = v5;
      v7 = objc_msgSend((id)objc_opt_self(), sel_systemBackgroundColor);
      objc_msgSend(v6, sel_setBackgroundColor_, v7);

      PeoplePickerViewController.setUpStackView()();
      v8 = OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_stackView;
      v9 = *(id *)&v0[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_stackView];
      PeoplePickerViewController.setUpPillView(containerView:)(v9);

      v10 = *(id *)&v0[v8];
      PeoplePickerViewController.setUpSearchControllerView(containerView:)(v10);

      PeoplePickerViewController.refreshLocalizedSenderIdentity()();
      v11 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
      OUTLINED_FUNCTION_28(v11, v12, v13, (uint64_t)sel_keyboardWillShowWithNotification_, *MEMORY[0x1E0DC4FE8]);

      v15 = OUTLINED_FUNCTION_123(v14, sel_defaultCenter);
      OUTLINED_FUNCTION_28(v15, v16, v17, (uint64_t)sel_keyboardWillHideWithNotification_, *MEMORY[0x1E0DC4FE0]);

      v19 = OUTLINED_FUNCTION_123(v18, sel_defaultCenter);
      OUTLINED_FUNCTION_28(v19, v20, v21, (uint64_t)sel_handleIDSStatusChangedWithNotification_, *MEMORY[0x1E0DBD648]);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t PeoplePickerViewController.initializeMeHandles()()
{
  id v0;
  void *v1;
  uint64_t v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t i;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  Swift::String v15;
  _BYTE v16[8];
  uint64_t v17;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  if (v0)
  {
    v1 = v0;
    objc_msgSend(v0, sel_blockUntilConnected);

  }
  v2 = MEMORY[0x1E0DEE9E8];
  v17 = MEMORY[0x1E0DEE9E8];
  v3 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend((id)objc_opt_self(), sel_facetimeService);
    v6 = objc_msgSend(v4, sel_accountsForService_, v5);

    if (v6)
    {
      type metadata accessor for NSObject(0, &lazy cache variable for type metadata for IMAccount);
      v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v7 >> 62)
      {
LABEL_19:
        swift_bridgeObjectRetain();
        v8 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v8)
          goto LABEL_7;
      }
      else
      {
        v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v8)
        {
LABEL_7:
          for (i = 4; ; ++i)
          {
            if ((v7 & 0xC000000000000001) != 0)
              v10 = (id)MEMORY[0x1C3B73D18](i - 4, v7);
            else
              v10 = *(id *)(v7 + 8 * i);
            v11 = v10;
            v12 = i - 3;
            if (__OFADD__(i - 4, 1))
            {
              __break(1u);
              goto LABEL_19;
            }
            if (objc_msgSend(v10, sel_registrationStatus) == (id)5)
            {
              result = outlined bridged method (pb) of @objc IMAccount.strippedLogin.getter(v11);
              if (!v14)
              {
                __break(1u);
                return result;
              }
              v15 = String.lowercased()();
              swift_bridgeObjectRelease();
              specialized Set._Variant.insert(_:)(v16, v15._countAndFlagsBits, v15._object);

              swift_bridgeObjectRelease();
            }
            else
            {

            }
            if (v12 == v8)
            {
              swift_bridgeObjectRelease();
              return PeoplePickerViewController.meHandles.setter(v17);
            }
          }
        }
      }
      swift_bridgeObjectRelease();
    }
    v2 = MEMORY[0x1E0DEE9E8];
  }
  return PeoplePickerViewController.meHandles.setter(v2);
}

void PeoplePickerViewController.setUpStackView()()
{
  char *v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  Class isa;

  v1 = OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_stackView;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_stackView], sel_setAxis_, 1);
  objc_msgSend(*(id *)&v0[v1], sel_setAlignment_, 3);
  objc_msgSend(*(id *)&v0[v1], sel_setDistribution_, 0);
  objc_msgSend(*(id *)&v0[v1], sel_setPreservesSuperviewLayoutMargins_, 1);
  objc_msgSend(*(id *)&v0[v1], sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v2 = objc_msgSend(v0, sel_view);
  if (!v2)
  {
    __break(1u);
    goto LABEL_6;
  }
  v3 = v2;
  objc_msgSend(v2, sel_addSubview_, *(_QWORD *)&v0[v1]);

  v4 = objc_msgSend(v0, sel_view);
  if (!v4)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v5 = v4;
  v6 = objc_msgSend(v4, sel_safeAreaLayoutGuide);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1BD644140;
  v8 = objc_msgSend(*(id *)&v0[v1], sel_topAnchor);
  v9 = objc_msgSend(v6, sel_topAnchor);
  v10 = objc_msgSend(v8, sel_constraintEqualToAnchor_, v9);

  *(_QWORD *)(v7 + 32) = v10;
  v11 = objc_msgSend(*(id *)&v0[v1], sel_leadingAnchor);
  v12 = objc_msgSend(v6, sel_leadingAnchor);
  v13 = objc_msgSend(v11, sel_constraintEqualToAnchor_, v12);

  *(_QWORD *)(v7 + 40) = v13;
  v14 = objc_msgSend(*(id *)&v0[v1], sel_bottomAnchor);
  v15 = objc_msgSend(v0, sel_view);
  if (v15)
  {
    v16 = v15;
    v17 = objc_msgSend(v15, sel_bottomAnchor);

    v18 = objc_msgSend(v14, sel_constraintEqualToAnchor_constant_, v17, (float)-*(float *)&v0[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_keyboardHeight]);
    *(_QWORD *)(v7 + 48) = v18;
    v19 = objc_msgSend(*(id *)&v0[v1], sel_trailingAnchor);
    v20 = objc_msgSend(v6, sel_trailingAnchor);
    v21 = objc_msgSend(v19, sel_constraintEqualToAnchor_, v20);

    *(_QWORD *)(v7 + 56) = v21;
    specialized Array._endMutation()();
    v22 = (void *)objc_opt_self();
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    objc_msgSend(v22, sel_activateConstraints_, isa);

    return;
  }
LABEL_7:
  __break(1u);
}

id PeoplePickerViewController.setUpPillView(containerView:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;

  v2 = v1;
  v4 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_senderIdentityPillView);
  objc_msgSend(v4, sel_setDelegate_, v2);
  objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  return objc_msgSend(a1, sel_addArrangedSubview_, v4);
}

void PeoplePickerViewController.setUpSearchControllerView(containerView:)(void *a1)
{
  char *v1;
  void *v2;
  void *v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  Class isa;
  id v21;

  v2 = v1;
  v4 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_searchController];
  v5 = objc_msgSend(v4, sel_view);
  if (v5)
  {
    v6 = v5;
    objc_msgSend(v4, sel_setDelegate_, v2);
    swift_bridgeObjectRetain();
    specialized _copyCollectionToContiguousArray<A>(_:)();
    v8 = v7;
    swift_bridgeObjectRelease();
    outlined bridged method (mbnn) of @objc CNAutocompleteSearchController.otherRecipientAddresses.setter(v8, v4);
    objc_msgSend(v4, sel_setExpandRecipientsInNamedGroups_, 0);
    objc_msgSend(v6, sel_setPreservesSuperviewLayoutMargins_, 1);
    objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v2, sel_addChildViewController_, v4);
    objc_msgSend(a1, sel_addArrangedSubview_, v6);
    objc_msgSend(v4, sel_didMoveToParentViewController_, v2);
    v21 = objc_msgSend(a1, sel_safeAreaLayoutGuide);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1BD644B60;
    v10 = objc_msgSend(v6, sel_leadingAnchor);
    v11 = objc_msgSend(v21, sel_leadingAnchor);
    v12 = objc_msgSend(v10, sel_constraintEqualToAnchor_, v11);

    *(_QWORD *)(v9 + 32) = v12;
    v13 = objc_msgSend(v6, sel_bottomAnchor);
    v14 = objc_msgSend(v21, sel_bottomAnchor);
    v15 = objc_msgSend(v13, sel_constraintEqualToAnchor_, v14);

    *(_QWORD *)(v9 + 40) = v15;
    v16 = objc_msgSend(v6, sel_trailingAnchor);
    v17 = objc_msgSend(v21, sel_trailingAnchor);
    v18 = objc_msgSend(v16, sel_constraintEqualToAnchor_, v17);

    *(_QWORD *)(v9 + 48) = v18;
    specialized Array._endMutation()();
    v19 = (void *)objc_opt_self();
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    objc_msgSend(v19, sel_activateConstraints_, isa);

    PeoplePickerViewController.setUpSearchControllerFooterView(containerView:)();
  }
  else
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.error.getter();
    os_log(_:dso:log:type:_:)();
  }
}

Swift::Void __swiftcall PeoplePickerViewController.refreshLocalizedSenderIdentity()()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  void *v18;
  _OWORD v19[2];
  _BYTE v20[24];
  uint64_t v21;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_callProviderManager);
  v3 = OUTLINED_FUNCTION_123(v0, sel_faceTimeProvider);
  v4 = objc_msgSend(v3, sel_identifier);

  if (!v4)
  {
    v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v4 = (id)MEMORY[0x1C3B72E00](v5);
    OUTLINED_FUNCTION_53();
  }
  v6 = OUTLINED_FUNCTION_53_0(v2, sel_providerWithIdentifier_);

  if (!v6)
    goto LABEL_14;
  v8 = OUTLINED_FUNCTION_123(v7, sel_prioritizedSenderIdentities);
  v9 = (uint64_t)objc_msgSend(v8, sel_count);

  if (v9 < 2)
    goto LABEL_12;
  v11 = OUTLINED_FUNCTION_123(v10, sel_prioritizedSenderIdentities);
  v12 = objc_msgSend(v11, sel_firstObject);

  if (v12)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v19, 0, sizeof(v19));
  }
  outlined init with take of Any?((uint64_t)v19, (uint64_t)v20, &demangling cache variable for type metadata for Any?);
  if (!v21)
  {

    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v20, &demangling cache variable for type metadata for Any?);
    goto LABEL_14;
  }
  OUTLINED_FUNCTION_59(v13, (unint64_t *)&lazy cache variable for type metadata for TUSenderIdentity);
  v14 = OUTLINED_FUNCTION_97();
  if ((v14 & 1) == 0)
  {
LABEL_12:

    goto LABEL_14;
  }
  v15 = v18;
  v16 = OUTLINED_FUNCTION_9(v14, sel_localizedName);
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  v17 = String.count.getter();
  OUTLINED_FUNCTION_30_4();

  if (v17 < 1)
  {

LABEL_14:
    v15 = 0;
  }
  PeoplePickerViewController.updateLocalizedSenderIdentity(_:)(v15);

}

Swift::Void __swiftcall PeoplePickerViewController.viewWillAppear(_:)(Swift::Bool a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  objc_super v8;

  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for PeoplePickerViewController();
  OUTLINED_FUNCTION_90_6((uint64_t)v8.super_class, sel_viewWillAppear_, v2, v3, v4, v5, v6, v7, v8);
  PeoplePickerViewController.setUpNavigationBar()();
  PeoplePickerViewController.updateState()();
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_searchController], sel_becomeFirstResponder);
  OUTLINED_FUNCTION_36();
}

void PeoplePickerViewController.setUpNavigationBar()()
{
  unsigned __int8 *v0;
  id v1;
  void *v2;
  id v3;
  uint64_t inited;
  void **v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  os_log_type_t v17;
  uint8_t *v18;
  NSObject *oslog;
  _QWORD v20[4];

  v1 = objc_msgSend(v0, sel_navigationController);
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v1, sel_navigationBar);
    objc_msgSend(v3, sel_setPrefersLargeTitles_, v0[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_style] != 2);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<(NSAttributedStringKey, Any)>);
    inited = swift_initStackObject();
    v5 = (void **)MEMORY[0x1E0DC1140];
    *(_OWORD *)(inited + 16) = xmmword_1BD6441D0;
    v6 = *v5;
    *(_QWORD *)(inited + 32) = *v5;
    v7 = (void *)objc_opt_self();
    v8 = v6;
    v9 = objc_msgSend(v7, sel_labelColor);
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIColor);
    *(_QWORD *)(inited + 64) = v10;
    *(_QWORD *)(inited + 40) = v9;
    type metadata accessor for NSAttributedStringKey(0);
    lazy protocol witness table accessor for type NSAttributedStringKey and conformance NSAttributedStringKey(&lazy protocol witness table cache variable for type NSAttributedStringKey and conformance NSAttributedStringKey, 255, type metadata accessor for NSAttributedStringKey);
    v11 = Dictionary.init(dictionaryLiteral:)();
    outlined bridged method (mbnn) of @objc UINavigationBar.largeTitleTextAttributes.setter(v11, v3);
    v20[3] = type metadata accessor for PeoplePickerViewController();
    v20[0] = v0;
    objc_allocWithZone(MEMORY[0x1E0DC34F0]);
    v12 = v0;
    v13 = @nonobjc UIBarButtonItem.init(barButtonSystemItem:target:action:)(1, v20, (uint64_t)sel_cancelButtonTapped);
    v14 = objc_msgSend(v12, sel_navigationItem);
    objc_msgSend(v14, sel_setRightBarButtonItem_, v13);

    PeoplePickerViewController.updateNavigationTitle()();
    v15 = objc_msgSend(v12, sel_navigationItem);
    objc_msgSend(v15, sel__setLargeTitleTwoLineMode_, 2);

  }
  else
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    v16 = type metadata accessor for Logger();
    __swift_project_value_buffer(v16, (uint64_t)&static Logger.conversationKit);
    oslog = Logger.logObject.getter();
    v17 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(oslog, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v18 = 0;
      _os_log_impl(&dword_1BD004000, oslog, v17, "Navigation controller doesn't exist", v18, 2u);
      MEMORY[0x1C3B751B8](v18, -1, -1);
    }

  }
}

void PeoplePickerViewController.updateState()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  id *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  char **v25;
  char **v26;
  void *v27;
  id v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  void *v34;
  uint64_t v35;
  char v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  void *v49;
  id v50;
  uint64_t v51;
  void *v52;
  void *v53;
  Swift::String v54;
  int v55;
  char *v56;
  id v57;
  void *v58;
  _QWORD v59[6];

  v1 = v0;
  PeoplePickerViewController.activeParticipantsAddresses()();
  PeoplePickerViewController.currentRecipientsAddresses()();
  specialized Set.union<A>(_:)(v2);
  LOBYTE(v59[0]) = *(_BYTE *)(v0 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_style);
  v3 = LOBYTE(v59[0]);
  PeoplePickerViewModel.update(for:style:)(v4, (char *)v59);
  swift_bridgeObjectRelease();
  PeoplePickerViewController.updateActionBarState()();
  PeoplePickerViewController.updateHelpText()();
  v5 = (id *)(v0 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_possibleRecipients);
  swift_beginAccess();
  v6 = (unint64_t)*v5;
  v55 = v3;
  if (((unint64_t)*v5 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for CNComposeRecipient);
    lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop(lazy protocol witness table cache variable for type CNComposeRecipient and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for CNComposeRecipient);
    Set.Iterator.init(_cocoa:)();
    v6 = v59[0];
    v56 = (char *)v59[1];
    v7 = v59[2];
    v8 = v59[3];
    v9 = v59[4];
  }
  else
  {
    v10 = -1 << *(_BYTE *)(v6 + 32);
    v56 = (char *)(v6 + 56);
    v7 = ~v10;
    v11 = -v10;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v9 = v12 & *(_QWORD *)(v6 + 56);
    swift_bridgeObjectRetain();
    v8 = 0;
  }
  v13 = (void *)((unint64_t)(v7 + 64) >> 6);
  if ((v6 & 0x8000000000000000) != 0)
    goto LABEL_10;
  while (1)
  {
    if (v9)
    {
      v14 = (v9 - 1) & v9;
      v15 = __clz(__rbit64(v9)) | (v8 << 6);
      v16 = v8;
      goto LABEL_27;
    }
    v19 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_71;
    }
    if (v19 >= (uint64_t)v13)
      goto LABEL_32;
    v20 = *(_QWORD *)&v56[8 * v19];
    v16 = v8 + 1;
    if (!v20)
    {
      v16 = v8 + 2;
      if (v8 + 2 >= (uint64_t)v13)
        goto LABEL_32;
      v20 = *(_QWORD *)&v56[8 * v16];
      if (!v20)
      {
        v16 = v8 + 3;
        if (v8 + 3 >= (uint64_t)v13)
          goto LABEL_32;
        v20 = *(_QWORD *)&v56[8 * v16];
        if (!v20)
        {
          v16 = v8 + 4;
          if (v8 + 4 >= (uint64_t)v13)
            goto LABEL_32;
          v20 = *(_QWORD *)&v56[8 * v16];
          if (!v20)
            break;
        }
      }
    }
LABEL_26:
    v14 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v16 << 6);
LABEL_27:
    v18 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v15);
    if (!v18)
      goto LABEL_32;
    while (1)
    {
      v22 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_searchController);
      PeoplePickerViewController.tintColor(for:isChild:)(v18, 0);
      v24 = v23;
      objc_msgSend(v22, sel_setTintColor_forRecipient_, v23, v18);

      v25 = PeoplePickerViewController.preferredRecipient(for:)((char **)v18);
      if (v25)
      {
        v26 = v25;
        objc_msgSend(v22, sel_setPreferredRecipient_forRecipient_, v25, v18);

      }
      v8 = v16;
      v9 = v14;
      if ((v6 & 0x8000000000000000) == 0)
        break;
LABEL_10:
      v17 = (void *)__CocoaSet.Iterator.next()();
      if (v17)
      {
        v57 = v17;
        type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for CNComposeRecipient);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v18 = v58;
        swift_unknownObjectRelease();
        v16 = v8;
        v14 = v9;
        if (v58)
          continue;
      }
      goto LABEL_32;
    }
  }
  v21 = v8 + 5;
  while (v21 < (uint64_t)v13)
  {
    v20 = *(_QWORD *)&v56[8 * v21++];
    if (v20)
    {
      v16 = v21 - 1;
      goto LABEL_26;
    }
  }
LABEL_32:
  outlined consume of [String : Application].Iterator._Variant();
  if ((MEMORY[0x1E0DEE9D8] & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter())
    specialized Set.init(_nonEmptyArrayLiteral:)(MEMORY[0x1E0DEE9D8]);
  else
    v27 = (void *)MEMORY[0x1E0DEE9E8];
  v58 = v27;
  v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_searchController);
  v28 = objc_msgSend((id)v6, sel_recipients);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for CNComposeRecipient);
  v29 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v29 >> 62)
  {
    swift_bridgeObjectRetain();
    v30 = _CocoaArrayWrapper.endIndex.getter();
  }
  else
  {
    v30 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  if (!v30)
  {
    v32 = 0x8000;
    goto LABEL_49;
  }
  if (v30 < 1)
  {
    __break(1u);
    goto LABEL_79;
  }
  v31 = 0;
  v32 = 0x8000;
  do
  {
    if ((v29 & 0xC000000000000001) != 0)
      v33 = (id)MEMORY[0x1C3B73D18](v31, v29);
    else
      v33 = *(id *)(v29 + 8 * v31 + 32);
    v34 = v33;
    PeoplePickerViewController.presentationOptions(for:)(v33);
    v36 = v35;
    if ((v35 & 0x10001) != 0)
    {
      objc_msgSend((id)v6, sel_setPresentationOptions_forRecipient_, v35, v34);
      specialized Set._Variant.insert(_:)(&v57, v34);

    }
    else
    {

      if ((v36 & 2) != 0)
        v32 = 2;
    }
    ++v31;
  }
  while (v30 != v31);
LABEL_49:
  swift_bridgeObjectRelease();
  v37 = swift_bridgeObjectRetain();
  v38 = specialized _ArrayProtocol.filter(_:)(v37, &v58);
  PeoplePickerViewController.updatePresentationOptions(_:for:)(v32, v38);
  swift_bridgeObjectRelease();
  v39 = swift_bridgeObjectRetain();
  v40 = specialized Set.count.getter(v39);
  swift_bridgeObjectRelease();
  if (v40 >= 1)
    PeoplePickerViewController.setActionUnavailable()();
  v41 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_currentConversation);
  if (!v41)
  {
    swift_bridgeObjectRelease();
LABEL_69:
    swift_bridgeObjectRelease();
    return;
  }
  v6 = v41;
  v42 = objc_msgSend((id)v6, sel_link);

  if (!v42)
    goto LABEL_68;
  v43 = objc_msgSend((id)v6, sel_otherInvitedHandles);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
  lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop(&lazy protocol witness table cache variable for type TUHandle and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
  v44 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  v45 = specialized Set.count.getter(v44);
  swift_bridgeObjectRelease();
  if (v45 || v55 != 1)
    goto LABEL_68;
  if (v29 >> 62)
  {
    swift_bridgeObjectRetain();
    v46 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    v46 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v46 != 1 || !v30)
  {
LABEL_68:
    swift_bridgeObjectRelease();

    goto LABEL_69;
  }
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v29 & 0xC000000000000001) == 0, v29);
  if ((v29 & 0xC000000000000001) != 0)
  {
LABEL_79:
    v47 = (id)MEMORY[0x1C3B73D18](0, v29);
    goto LABEL_63;
  }
  v47 = *(id *)(v29 + 32);
LABEL_63:
  v13 = v47;
  swift_bridgeObjectRelease();
  if ((objc_msgSend(v13, sel_isGroup) & 1) != 0
    || *(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_existingAddresses)
                 + 16) > 1uLL
    || (PeoplePickerViewController.isIDSLookupPendingForCurrentRecipients()() & 1) != 0)
  {
    goto LABEL_74;
  }
  outlined bridged method (pb) of @objc TUConversationLink.displayName.getter(v13, (SEL *)&selRef_address);
  if (!v48)
  {
LABEL_71:
    v49 = 0;
    goto LABEL_72;
  }
  v49 = (void *)MEMORY[0x1C3B72E00]();
  swift_bridgeObjectRelease();
LABEL_72:
  v50 = (id)TUCopyIDSCanonicalAddressForDestinationID();

  if (v50)
  {
    v51 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v53 = v52;

    v54._countAndFlagsBits = v51;
    v54._object = v53;
    PeoplePickerViewModel.isWebCapableAvailable(for:)(v54);
  }
LABEL_74:
  swift_bridgeObjectRelease();

}

void PeoplePickerViewController.viewWillTransition(to:with:)(uint64_t a1, double a2, double a3)
{
  void *v3;
  uint64_t v7;
  void (*v8)(uint64_t);
  _QWORD v9[4];
  _BYTE v10[24];
  uint64_t v11;
  objc_super v12;

  v12.receiver = v3;
  v12.super_class = (Class)type metadata accessor for PeoplePickerViewController();
  objc_msgSendSuper2(&v12, sel_viewWillTransitionToSize_withTransitionCoordinator_, a1, a2, a3);
  outlined init with copy of FeatureEligibility?((uint64_t)v3 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_linkShareCoordinator, (uint64_t)v10, (uint64_t *)&demangling cache variable for type metadata for LinkShareCoordinatorProtocol?);
  if (v11)
  {
    outlined init with copy of IDSLookupManager((uint64_t)v10, (uint64_t)v9);
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v10, (uint64_t *)&demangling cache variable for type metadata for LinkShareCoordinatorProtocol?);
    __swift_project_boxed_opaque_existential_1(v9, v9[3]);
    v7 = OUTLINED_FUNCTION_65_2();
    v8(v7);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  }
  else
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v10, (uint64_t *)&demangling cache variable for type metadata for LinkShareCoordinatorProtocol?);
  }
}

Swift::Void __swiftcall PeoplePickerViewController.viewDidDisappear(_:)(Swift::Bool a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  objc_super v13;

  v13.receiver = v1;
  v13.super_class = (Class)type metadata accessor for PeoplePickerViewController();
  v8 = OUTLINED_FUNCTION_90_6((uint64_t)v13.super_class, sel_viewDidDisappear_, v2, v3, v4, v5, v6, v7, v13);
  v9 = OUTLINED_FUNCTION_25_1((uint64_t)v8, sel_presentedViewController);

  if (!v9 && OUTLINED_FUNCTION_108_1(*v1))
  {
    v11 = v10;
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v11 + 16))(ObjectType, v11);
    OUTLINED_FUNCTION_10();
  }
  OUTLINED_FUNCTION_36();
}

Swift::Void __swiftcall PeoplePickerViewController.willDismissViewAnimated(_:)(Swift::Bool a1)
{
  id v2;
  id v3;

  v2 = OUTLINED_FUNCTION_25_1(a1, sel_presentedViewController);
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, sel_dismissViewControllerAnimated_completion_, a1, 0);

  }
  else
  {
    OUTLINED_FUNCTION_36();
  }
}

id PeoplePickerViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PeoplePickerViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t protocol witness for PeoplePickerViewControllerProtocol.delegate.getter in conformance PeoplePickerViewController()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x360))();
}

uint64_t protocol witness for PeoplePickerViewControllerProtocol.delegate.setter in conformance PeoplePickerViewController()
{
  uint64_t *v0;

  return OUTLINED_FUNCTION_37_19(*v0);
}

uint64_t (*protocol witness for PeoplePickerViewControllerProtocol.delegate.modify in conformance PeoplePickerViewController(_QWORD *a1))()
{
  _QWORD *v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x370))();
  return protocol witness for ControlsView.cnkContentAlpha.modify in conformance SystemApertureOngoingTelephonyControlsView;
}

uint64_t protocol witness for PeoplePickerViewControllerProtocol.appName.getter in conformance PeoplePickerViewController()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x378))();
}

uint64_t protocol witness for PeoplePickerViewControllerProtocol.appName.setter in conformance PeoplePickerViewController()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x380))();
}

uint64_t (*protocol witness for PeoplePickerViewControllerProtocol.appName.modify in conformance PeoplePickerViewController(_QWORD *a1))()
{
  _QWORD *v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x388))();
  return protocol witness for ControlsView.cnkContentAlpha.modify in conformance SystemApertureOngoingTelephonyControlsView;
}

uint64_t protocol witness for PeoplePickerViewControllerProtocol.stagedActivity.getter in conformance PeoplePickerViewController()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x390))();
}

uint64_t protocol witness for PeoplePickerViewControllerProtocol.stagedActivity.setter in conformance PeoplePickerViewController()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x398))();
}

uint64_t (*protocol witness for PeoplePickerViewControllerProtocol.stagedActivity.modify in conformance PeoplePickerViewController(_QWORD *a1))()
{
  _QWORD *v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x3A0))();
  return protocol witness for ControlsView.cnkContentAlpha.modify in conformance SystemApertureOngoingTelephonyControlsView;
}

uint64_t protocol witness for PeoplePickerViewControllerProtocol.initialRecipientDestinations.getter in conformance PeoplePickerViewController()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x3A8))();
}

uint64_t protocol witness for PeoplePickerViewControllerProtocol.initialRecipientDestinations.setter in conformance PeoplePickerViewController()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x3B0))();
}

uint64_t (*protocol witness for PeoplePickerViewControllerProtocol.initialRecipientDestinations.modify in conformance PeoplePickerViewController(_QWORD *a1))()
{
  _QWORD *v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x3B8))();
  return protocol witness for ControlsView.cnkContentAlpha.modify in conformance SystemApertureOngoingTelephonyControlsView;
}

void PeoplePickerViewController.keyboardWillShow(notification:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  double v4;
  CGFloat v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  float Height;
  id v13[5];
  __int128 v14;
  __int128 v15;
  CGRect v16;

  if (!outlined bridged method (pb) of @objc NSNotification.userInfo.getter(a1))
  {
    v14 = 0u;
    v15 = 0u;
    goto LABEL_6;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  AnyHashable.init<A>(_:)();
  specialized Dictionary.subscript.getter();
  OUTLINED_FUNCTION_13_3();
  v2 = outlined destroy of AnyHashable((uint64_t)v13);
  if (!*((_QWORD *)&v15 + 1))
  {
LABEL_6:
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)&v14, &demangling cache variable for type metadata for Any?);
    return;
  }
  OUTLINED_FUNCTION_59(v2, (unint64_t *)&lazy cache variable for type metadata for NSValue);
  if ((OUTLINED_FUNCTION_97() & 1) != 0)
  {
    v3 = v13[0];
    objc_msgSend(v13[0], sel_CGRectValue);
    v5 = v4;
    v7 = v6;
    v9 = v8;
    v11 = v10;

    v16.origin.x = v5;
    v16.origin.y = v7;
    v16.size.width = v9;
    v16.size.height = v11;
    Height = CGRectGetHeight(v16);
    *(float *)(v1 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_keyboardHeight) = Height;
    PeoplePickerViewController.updateState()();
  }
}

uint64_t PeoplePickerViewController.handleIDSStatusChanged(notification:)()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v14;
  uint64_t v15;
  _QWORD aBlock[6];

  v1 = type metadata accessor for DispatchWorkItemFlags();
  v15 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DispatchQoS();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  static os_log_type_t.info.getter();
  v8 = MEMORY[0x1E0DEE9D8];
  os_log(_:dso:log:type:_:)();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v9 = (void *)static OS_dispatch_queue.main.getter();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v0;
  aBlock[4] = partial apply for closure #1 in PeoplePickerViewController.handleIDSStatusChanged(notification:);
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_19;
  v11 = _Block_copy(aBlock);
  v12 = v0;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = v8;
  lazy protocol witness table accessor for type NSAttributedStringKey and conformance NSAttributedStringKey(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, 255, (void (*)(uint64_t))MEMORY[0x1E0DEF4F8]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  MEMORY[0x1C3B7361C](0, v7, v3, v11);
  _Block_release(v11);

  (*(void (**)(char *, uint64_t))(v15 + 8))(v3, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t PeoplePickerViewController.cancelButtonTapped()()
{
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  static os_log_type_t.info.getter();
  os_log(_:dso:log:type:_:)();
  return PeoplePickerViewController.handleCancel()();
}

uint64_t PeoplePickerViewController.handleCancel()()
{
  _QWORD *v0;
  id v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;

  v1 = PeoplePickerViewController.reset()();
  result = (*(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x360))(v1);
  if (result)
  {
    v4 = v3;
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(ObjectType, v4);
    return swift_unknownObjectRelease();
  }
  return result;
}

id PeoplePickerViewController.reset()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v1 = v0;
  PeoplePickerViewController.cancelQueries()();
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : NSNumber]._Variant);
  Dictionary._Variant.removeAll(keepingCapacity:)(0);
  swift_endAccess();
  v2 = (_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_possibleRecipients);
  swift_beginAccess();
  v3 = MEMORY[0x1E0DEE9E8];
  *v2 = MEMORY[0x1E0DEE9E8];
  swift_bridgeObjectRelease();
  v4 = (_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_loggedInvalidRecipients);
  swift_beginAccess();
  *v4 = v3;
  swift_bridgeObjectRelease();
  v5 = (_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_idsDestinations);
  swift_beginAccess();
  *v5 = v3;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_existingAddresses) = v3;
  swift_bridgeObjectRelease();
  PeoplePickerViewController.currentConversationLink.setter(0);
  return objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_searchController), sel_prepareForReuse);
}

void PeoplePickerViewController.startCall(videoEnabled:)(char a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  id v7;
  unint64_t v8;
  char *v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  void *v16;
  uint64_t ObjectType;
  uint64_t (*v18)(void);
  id v19;
  void *v20;
  uint64_t v21;
  unsigned int v22;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MessagesGroup?);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_viewModel];
  swift_beginAccess();
  PeoplePickerViewController.reportIncompatibilityEvent(with:reason:)(*(_BYTE *)(v6 + 16), 0);
  v7 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_searchController], sel_recipients);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for CNComposeRecipient);
  v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  v9 = v1;
  v10 = specialized Sequence.flatMap<A>(_:)(v8, v9);
  v11 = swift_bridgeObjectRelease();
  v12 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  if ((*(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)v9) + 0x360))(v11))
  {
    v14 = v13;
    v15 = &OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_videoButton;
    v22 = a1 & 1;
    if ((a1 & 1) == 0)
      v15 = &OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_audioButton;
    v16 = *(void **)&v9[*v15];
    ObjectType = swift_getObjectType();
    v18 = *(uint64_t (**)(void))((*v12 & *(_QWORD *)v9) + 0x2C8);
    v19 = v16;
    v20 = (void *)v18();
    CNAutocompleteSearchController.messagesGroup.getter((uint64_t)v5);
    (*(void (**)(unint64_t, _QWORD, id, void *, char *, uint64_t, uint64_t))(v14 + 24))(v10, v22, v19, v20, v5, ObjectType, v14);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();

    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v5, &demangling cache variable for type metadata for MessagesGroup?);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

id PeoplePickerViewController.reportIncompatibilityEvent(with:reason:)(char a1, uint64_t a2)
{
  uint64_t v2;
  id v5;
  unint64_t v6;
  uint64_t v7;

  v5 = objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_searchController), sel_recipients);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for CNComposeRecipient);
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  return objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_reporter), *off_1E761BCB8[a1], v7, a2);
}

void PeoplePickerViewController.addPeople()()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  unint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  char *v20;
  _QWORD *v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  void *v33;
  os_log_type_t v34;
  _WORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  os_log_type_t v39;
  _WORD *v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  void *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  os_log_type_t v48;
  _WORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  NSObject *v57;
  os_log_type_t v58;
  uint8_t *v59;
  uint64_t v60;
  id v61;
  void *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(uint64_t);
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  id v80;
  uint64_t v81;
  void *v82;
  void *v83;
  Swift::String v84;
  _QWORD v85[2];
  uint64_t v86;
  char *v87;
  char *v88;
  _QWORD *v89;
  uint64_t v90;
  char *v91;
  id v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;

  v1 = type metadata accessor for UUID();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_41();
  v90 = v3;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_10_1();
  v5 = MEMORY[0x1E0C80A78](v4);
  v87 = (char *)v85 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v88 = (char *)v85 - v8;
  MEMORY[0x1E0C80A78](v7);
  v91 = (char *)v85 - v9;
  v10 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_searchController], sel_recipients);
  OUTLINED_FUNCTION_59((uint64_t)v10, (unint64_t *)&lazy cache variable for type metadata for CNComposeRecipient);
  v11 = OUTLINED_FUNCTION_25_28();

  v94 = v0;
  v12 = (char *)specialized Sequence.flatMap<A>(_:)(v11, v94);
  v13 = OUTLINED_FUNCTION_15();
  *(_BYTE *)(v13 + 16) = 0;
  v14 = (void *)(v13 + 16);
  if (one-time initialization token for peoplePicker != -1)
    swift_once();
  v15 = type metadata accessor for Logger();
  v93 = __swift_project_value_buffer(v15, (uint64_t)&static Logger.peoplePicker);
  v16 = v93;
  Logger.logObject.getter();
  v17 = OUTLINED_FUNCTION_12_0();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)OUTLINED_FUNCTION_7_8();
    *(_WORD *)v18 = 0;
    _os_log_impl(&dword_1BD004000, v16, v17, "Add people.", v18, 2u);
    OUTLINED_FUNCTION_60();
  }

  v19 = OUTLINED_FUNCTION_15();
  v20 = v94;
  swift_unknownObjectWeakInit();
  v21 = (_QWORD *)OUTLINED_FUNCTION_15();
  v21[2] = v19;
  v21[3] = v12;
  v21[4] = v13;
  v22 = *(void **)&v20[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_currentConversation];
  if (v22)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v23 = v22;
    v24 = objc_msgSend(v23, sel_link);

    v89 = v21;
    v86 = v2;
    v92 = v23;
    if (!v24)
      goto LABEL_27;
    v26 = OUTLINED_FUNCTION_9(v25, sel_otherInvitedHandles);
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
    lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop(&lazy protocol witness table cache variable for type TUHandle and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
    v27 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    v28 = specialized Set.count.getter(v27);
    OUTLINED_FUNCTION_2_1();
    if (v28 < 1)
    {
      OUTLINED_FUNCTION_21_0();
      v21 = v89;
    }
    else
    {
      if (v11 >> 62)
      {
        OUTLINED_FUNCTION_57_6();
        v29 = OUTLINED_FUNCTION_25_3();
        OUTLINED_FUNCTION_21_0();
      }
      else
      {
        v29 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      v21 = v89;
      if (v29 == 1
        && *(_QWORD *)(*(_QWORD *)&v94[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_existingAddresses]
                     + 16) <= 1uLL)
      {
        v2 = v86;
        if (v11 >> 62)
        {
          OUTLINED_FUNCTION_57_6();
          v38 = OUTLINED_FUNCTION_25_3();
          OUTLINED_FUNCTION_21_0();
          if (v38)
            goto LABEL_14;
        }
        else if (*(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
LABEL_14:
          specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v11 & 0xC000000000000001) == 0, v11);
          if ((v11 & 0xC000000000000001) != 0)
            v30 = (id)MEMORY[0x1C3B73D18](0, v11);
          else
            v30 = *(id *)(v11 + 32);
          v31 = v30;
          OUTLINED_FUNCTION_21_0();
          if ((objc_msgSend(v31, sel_isGroup) & 1) == 0)
          {
            outlined bridged method (pb) of @objc TUConversationLink.displayName.getter(v31, (SEL *)&selRef_address);
            if (v32)
            {
              v33 = (void *)MEMORY[0x1C3B72E00]();
              OUTLINED_FUNCTION_21_0();
            }
            else
            {
              v33 = 0;
            }
            v80 = (id)TUCopyIDSCanonicalAddressForDestinationID();

            if (v80)
            {
              v85[1] = v31;
              v81 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              v83 = v82;

              v84._countAndFlagsBits = v81;
              v84._object = v83;
              PeoplePickerViewModel.isWebCapableAvailable(for:)(v84);
            }
          }

LABEL_28:
          OUTLINED_FUNCTION_113_2();
          v39 = OUTLINED_FUNCTION_31_6();
          if (OUTLINED_FUNCTION_13_0(v39))
          {
            v40 = (_WORD *)OUTLINED_FUNCTION_7_8();
            OUTLINED_FUNCTION_124_3(v40);
            OUTLINED_FUNCTION_14_14(&dword_1BD004000, v41, v42, "shouldAddOtherInvitedToRemoteMembers = false");
            OUTLINED_FUNCTION_60();
          }

          v43 = objc_msgSend(v92, sel_messagesGroupUUID);
          if (v43)
          {
            v44 = v43;
            v45 = v90;
            static UUID._unconditionallyBridgeFromObjectiveC(_:)();

            v46 = v91;
            (*(void (**)(char *, uint64_t, uint64_t))(v2 + 32))(v91, v45, v1);
            OUTLINED_FUNCTION_112_3((uint64_t)v46, 0, 1);
            v47 = OUTLINED_FUNCTION_77_2((uint64_t)v46);
            if ((_DWORD)v47 != 1)
            {
              OUTLINED_FUNCTION_99_3(v47, (uint64_t *)&demangling cache variable for type metadata for UUID?);
              if ((PeoplePickerViewController.currentConversationIsAVLess.getter() & 1) == 0)
              {
                OUTLINED_FUNCTION_25();
                OUTLINED_FUNCTION_17_22();
                OUTLINED_FUNCTION_113_2();
                v48 = OUTLINED_FUNCTION_31_6();
                if (OUTLINED_FUNCTION_13_0(v48))
                {
                  v49 = (_WORD *)OUTLINED_FUNCTION_7_8();
                  OUTLINED_FUNCTION_124_3(v49);
                  OUTLINED_FUNCTION_14_14(&dword_1BD004000, v50, v51, "calling PlatformAlert.confirmAddToMessagesGroup");
                  OUTLINED_FUNCTION_60();
                }

                v52 = type metadata accessor for PlatformAlert();
                OUTLINED_FUNCTION_1_28();
                specialized static PlatformAlert.confirmAddToMessagesGroup(fromViewController:_:)((uint64_t)v94, v52, (uint64_t)partial apply for closure #1 in PeoplePickerViewController.addPeople(), (uint64_t)v21);
                OUTLINED_FUNCTION_27_0();
                OUTLINED_FUNCTION_22();

                return;
              }
              goto LABEL_38;
            }
          }
          else
          {
            v53 = OUTLINED_FUNCTION_36_25();
            v47 = OUTLINED_FUNCTION_112_3(v53, v54, v55);
          }
          OUTLINED_FUNCTION_99_3(v47, (uint64_t *)&demangling cache variable for type metadata for UUID?);
LABEL_38:
          v56 = v92;
          v57 = OUTLINED_FUNCTION_113_2();
          v58 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v57, v58))
          {
            v94 = v12;
            v59 = (uint8_t *)OUTLINED_FUNCTION_105();
            v60 = OUTLINED_FUNCTION_105();
            v93 = v60;
            v97 = v60;
            *(_DWORD *)v59 = 136315138;
            v61 = OUTLINED_FUNCTION_123(v60, sel_messagesGroupUUID);
            if (v61)
            {
              v62 = v61;
              v63 = v87;
              static UUID._unconditionallyBridgeFromObjectiveC(_:)();

              v64 = 0;
            }
            else
            {
              v64 = 1;
              v63 = v87;
            }
            v65 = (uint64_t)v88;
            v66 = (uint64_t)v63;
            v67 = v1;
            OUTLINED_FUNCTION_112_3(v66, v64, 1);
            v68 = OUTLINED_FUNCTION_64();
            outlined init with take of Any?(v68, v69, v70);
            if (OUTLINED_FUNCTION_77_2(v65))
            {
              outlined destroy of OS_dispatch_queue.SchedulerOptions?(v65, (uint64_t *)&demangling cache variable for type metadata for UUID?);
              v71 = 0xE300000000000000;
              v72 = 7104878;
            }
            else
            {
              v73 = v86;
              v74 = v90;
              v75 = OUTLINED_FUNCTION_64();
              v76(v75);
              outlined destroy of OS_dispatch_queue.SchedulerOptions?(v65, (uint64_t *)&demangling cache variable for type metadata for UUID?);
              v92 = (id)UUID.uuidString.getter();
              v78 = v77;
              (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v74, v67);
              v95 = (uint64_t)v92;
              v96 = v78;
              v72 = String.init<A>(reflecting:)();
              v71 = v79;
            }
            v95 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v72, v71, &v97);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();

            OUTLINED_FUNCTION_27();
            _os_log_impl(&dword_1BD004000, v57, v58, "non-avless conversation messagesGroupUUID: %s", v59, 0xCu);
            swift_arrayDestroy();
            OUTLINED_FUNCTION_60();
          }

          OUTLINED_FUNCTION_74_4();
          OUTLINED_FUNCTION_25();
          OUTLINED_FUNCTION_27_0();
          OUTLINED_FUNCTION_17_22();
          OUTLINED_FUNCTION_22();

          return;
        }
LABEL_27:
        OUTLINED_FUNCTION_21_0();
        goto LABEL_28;
      }
      OUTLINED_FUNCTION_21_0();
    }
    v2 = v86;
    goto LABEL_28;
  }
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  OUTLINED_FUNCTION_21_0();
  Logger.logObject.getter();
  v34 = OUTLINED_FUNCTION_31_6();
  if (OUTLINED_FUNCTION_13_0(v34))
  {
    v35 = (_WORD *)OUTLINED_FUNCTION_7_8();
    OUTLINED_FUNCTION_124_3(v35);
    OUTLINED_FUNCTION_14_14(&dword_1BD004000, v36, v37, "currentConversation is nil.");
    OUTLINED_FUNCTION_60();
  }

  OUTLINED_FUNCTION_74_4();
  OUTLINED_FUNCTION_25();
  OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_17_22();
  swift_release();
}

void closure #1 in PeoplePickerViewController.addPeople()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;

  v5 = a1 + 16;
  swift_beginAccess();
  v6 = MEMORY[0x1C3B752C0](v5);
  if (v6)
  {
    v7 = (_QWORD *)v6;
    if (one-time initialization token for peoplePicker != -1)
      swift_once();
    v8 = type metadata accessor for Logger();
    __swift_project_value_buffer(v8, (uint64_t)&static Logger.peoplePicker);
    v9 = Logger.logObject.getter();
    v10 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_1BD004000, v9, v10, "Did add people.", v11, 2u);
      MEMORY[0x1C3B751B8](v11, -1, -1);
    }

    v12 = *(_QWORD *)((char *)v7 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_viewModel);
    swift_beginAccess();
    v13 = PeoplePickerViewController.reportIncompatibilityEvent(with:reason:)(*(_BYTE *)(v12 + 16), 1);
    if ((*(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & *v7) + 0x360))(v13))
    {
      v15 = v14;
      ObjectType = swift_getObjectType();
      swift_beginAccess();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v15 + 32))(a2, *(unsigned __int8 *)(a3 + 16), ObjectType, v15);

      swift_unknownObjectRelease();
    }
    else
    {

    }
  }
}

uint64_t closure #2 in PeoplePickerViewController.addPeople()(uint64_t result, uint64_t (*a2)(void))
{
  if ((result & 1) != 0)
    return a2();
  return result;
}

void PeoplePickerViewController.dialTelephonyCall(handle:rttType:)(void *a1, char a2)
{
  char *v2;
  uint64_t v5;
  id v6;
  unint64_t v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  id v22;
  uint64_t ObjectType;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;

  v5 = *(_QWORD *)&v2[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_viewModel];
  swift_beginAccess();
  PeoplePickerViewController.reportIncompatibilityEvent(with:reason:)(*(_BYTE *)(v5 + 16), 0);
  v6 = objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_searchController], sel_recipients);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for CNComposeRecipient);
  v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  v8 = v2;
  v9 = specialized Sequence.flatMap<A>(_:)(v7, v8);
  swift_bridgeObjectRelease();
  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    if (_CocoaArrayWrapper.endIndex.getter())
      goto LABEL_3;
  }
  else
  {
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v10)
    {
LABEL_3:
      specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v9 & 0xC000000000000001) == 0, v9);
      if ((v9 & 0xC000000000000001) != 0)
        v11 = (char *)MEMORY[0x1C3B73D18](0, v9);
      else
        v11 = (char *)*(id *)(v9 + 32);
      v12 = v11;
      v13 = swift_bridgeObjectRelease_n();
      v14 = qword_1BD64AA90[a2];
      v15 = (_QWORD *)MEMORY[0x1E0DEEDD8];
      if ((*(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)v8) + 0x360))(v13))
      {
        v17 = v16;
        v18 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
        v19 = objc_msgSend(v18, sel_providerManager);

        v20 = objc_msgSend(v19, sel_telephonyProvider);
        v21 = *(_QWORD *)&v12[OBJC_IVAR____TtC15ConversationKit14PickablePerson_contact];
        v29 = v14;
        v30 = v12;
        if (a1)
          v22 = a1;
        else
          v22 = *(id *)&v12[OBJC_IVAR____TtC15ConversationKit14PickablePerson_handle];
        ObjectType = swift_getObjectType();
        v24 = (void *)(*(uint64_t (**)(void *))((*v15 & *(_QWORD *)v8) + 0x2C8))(a1);
        (*(void (**)(id, _QWORD, uint64_t, id, void *, uint64_t, uint64_t, uint64_t))(v17 + 40))(v20, 0, v21, v22, v24, v29, ObjectType, v17);

        swift_unknownObjectRelease();
      }
      else
      {

      }
      return;
    }
  }
  swift_bridgeObjectRelease();
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  static os_log_type_t.error.getter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1BD6441D0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [PickablePerson]);
  v26 = String.init<A>(reflecting:)();
  v28 = v27;
  *(_QWORD *)(v25 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v25 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v25 + 32) = v26;
  *(_QWORD *)(v25 + 40) = v28;
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
}

void PeoplePickerViewController.setUpSearchControllerFooterView(containerView:)()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  char v3;
  id v4;
  _QWORD *v5;
  void (*v6)(uint64_t, _UNKNOWN **);
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  Class isa;
  _QWORD *v22;

  v1 = v0;
  v2 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v3 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x3C8))();
  v4 = objc_allocWithZone((Class)type metadata accessor for PeoplePickerActionBar());
  v5 = PeoplePickerActionBar.init(frame:buttonsStyle:)(v3);
  objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v6 = *(void (**)(uint64_t, _UNKNOWN **))((*v2 & *v5) + 0x128);
  v7 = swift_unknownObjectRetain();
  v6(v7, &protocol witness table for PeoplePickerViewController);
  v8 = *(void **)((char *)v1 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_searchController);
  objc_msgSend(v8, sel_setFooterView_, v5);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1BD6441C0;
  v10 = objc_msgSend(v5, sel_leadingAnchor);
  v11 = objc_msgSend(v8, sel_view);
  if (v11)
  {
    v12 = v11;
    v13 = objc_msgSend(v11, sel_leadingAnchor);

    v14 = objc_msgSend(v10, sel_constraintEqualToAnchor_, v13);
    *(_QWORD *)(v9 + 32) = v14;
    v15 = objc_msgSend(v5, sel_trailingAnchor);
    v16 = objc_msgSend(v8, sel_view);
    if (v16)
    {
      v17 = v16;
      v18 = (void *)objc_opt_self();
      v19 = objc_msgSend(v17, sel_trailingAnchor);

      v20 = objc_msgSend(v15, sel_constraintEqualToAnchor_, v19);
      *(_QWORD *)(v9 + 40) = v20;
      specialized Array._endMutation()();
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      objc_msgSend(v18, sel_activateConstraints_, isa);

      v22 = v5;
      PeoplePickerViewController.actionBar.setter((uint64_t)v5);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void PeoplePickerViewController.activeParticipantsAddresses()()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  id v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  _QWORD v25[8];

  v25[2] = MEMORY[0x1E0DEE9E8];
  v1 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_currentConversation);
  if (v1)
  {
    v23 = v1;
    v2 = objc_msgSend(v23, sel_activeRemoteParticipants);
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
    lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop(&lazy protocol witness table cache variable for type TUConversationParticipant and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
    v3 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    if ((v3 & 0xC000000000000001) != 0)
    {
      __CocoaSet.makeIterator()();
      Set.Iterator.init(_cocoa:)();
      v3 = v25[3];
      v24 = v25[4];
      v4 = v25[5];
      v5 = v25[6];
      v6 = v25[7];
    }
    else
    {
      v5 = 0;
      v7 = -1 << *(_BYTE *)(v3 + 32);
      v24 = v3 + 56;
      v4 = ~v7;
      v8 = -v7;
      if (v8 < 64)
        v9 = ~(-1 << v8);
      else
        v9 = -1;
      v6 = v9 & *(_QWORD *)(v3 + 56);
    }
    v10 = (unint64_t)(v4 + 64) >> 6;
    if (v3 < 0)
      goto LABEL_11;
LABEL_9:
    if (v6)
    {
      v11 = (v6 - 1) & v6;
      v12 = __clz(__rbit64(v6)) | (v5 << 6);
      v13 = v5;
      goto LABEL_28;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
LABEL_37:
      __break(1u);
      return;
    }
    if (v15 >= v10)
      goto LABEL_34;
    v16 = *(_QWORD *)(v24 + 8 * v15);
    v13 = v5 + 1;
    if (!v16)
    {
      v13 = v5 + 2;
      if (v5 + 2 >= v10)
        goto LABEL_34;
      v16 = *(_QWORD *)(v24 + 8 * v13);
      if (v16)
        goto LABEL_27;
      v13 = v5 + 3;
      if (v5 + 3 >= v10)
        goto LABEL_34;
      v16 = *(_QWORD *)(v24 + 8 * v13);
      if (v16)
        goto LABEL_27;
      v13 = v5 + 4;
      if (v5 + 4 >= v10)
      {
LABEL_34:
        outlined consume of [String : Application].Iterator._Variant();

        return;
      }
      v16 = *(_QWORD *)(v24 + 8 * v13);
      if (!v16)
      {
        v17 = v5 + 5;
        while (v17 < v10)
        {
          v16 = *(_QWORD *)(v24 + 8 * v17++);
          if (v16)
          {
            v13 = v17 - 1;
            goto LABEL_27;
          }
        }
        goto LABEL_34;
      }
    }
LABEL_27:
    v11 = (v16 - 1) & v16;
    v12 = __clz(__rbit64(v16)) + (v13 << 6);
LABEL_28:
    v14 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v12);
    if (v14)
    {
      while (1)
      {
        v18 = objc_msgSend(v14, sel_handle);
        v19 = objc_msgSend(v18, sel_value);

        if (!v19)
        {
          v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          v19 = (id)MEMORY[0x1C3B72E00](v20);
          swift_bridgeObjectRelease();
        }
        outlined bridged method (ob) of @objc NSString._im_normalizedURI()(v19);
        if (!v22)
          goto LABEL_37;
        specialized Set._Variant.insert(_:)(v25, v21, v22);

        swift_bridgeObjectRelease();
        v5 = v13;
        v6 = v11;
        if ((v3 & 0x8000000000000000) == 0)
          goto LABEL_9;
LABEL_11:
        if (__CocoaSet.Iterator.next()())
        {
          swift_unknownObjectRetain();
          swift_dynamicCast();
          v14 = (id)v25[0];
          swift_unknownObjectRelease();
          v13 = v5;
          v11 = v6;
          if (v14)
            continue;
        }
        goto LABEL_34;
      }
    }
    goto LABEL_34;
  }
}

void PeoplePickerViewController.currentRecipientsAddresses()()
{
  uint64_t v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t i;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v14[8];
  uint64_t v15;

  v15 = MEMORY[0x1E0DEE9E8];
  v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_searchController), sel_recipients);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for CNComposeRecipient);
  v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v3)
      goto LABEL_3;
LABEL_14:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  v3 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v3)
    goto LABEL_14;
LABEL_3:
  if (v3 < 1)
  {
    __break(1u);
  }
  else
  {
    for (i = 0; i != v3; ++i)
    {
      if ((v2 & 0xC000000000000001) != 0)
        v5 = (id)MEMORY[0x1C3B73D18](i, v2);
      else
        v5 = *(id *)(v2 + 8 * i + 32);
      v6 = v5;
      v7 = *(_QWORD *)(CNComposeRecipient.normalizedAddresses()() + 16);
      swift_bridgeObjectRelease();
      if (v7)
      {
        v8 = CNComposeRecipient.normalizedAddresses()();
        v9 = specialized Set.init<A>(_:)(v8);
        specialized Set.union<A>(_:)(v9);
        v11 = v10;

        v15 = v11;
      }
      else
      {
        v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        specialized Set._Variant.insert(_:)(v14, v12, v13);

        swift_bridgeObjectRelease();
      }
    }
    swift_bridgeObjectRelease();
  }
}

void PeoplePickerViewController.updateActionBarState()()
{
  _QWORD *v0;
  void *v1;
  _QWORD *v2;
  void *v3;
  _QWORD *v4;
  id v5;
  unint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  char v15;
  char v16;
  id v17;
  void *v18;
  unsigned int v19;
  uint64_t v20;
  int v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v1 = *(void **)((char *)v0 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_actionBar);
  if (!v1)
    return;
  v2 = v0;
  v3 = *(void **)((char *)v0 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_searchController);
  v4 = v1;
  v5 = objc_msgSend(v3, sel_recipients);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for CNComposeRecipient);
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v7 == 1)
    {
      swift_bridgeObjectRetain();
      if (!_CocoaArrayWrapper.endIndex.getter())
      {
        swift_bridgeObjectRelease();
        v12 = 0;
LABEL_8:
        v7 = 1;
        goto LABEL_13;
      }
LABEL_5:
      specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v6 & 0xC000000000000001) == 0, v6);
      if ((v6 & 0xC000000000000001) != 0)
        v8 = (id)MEMORY[0x1C3B73D18](0, v6);
      else
        v8 = *(id *)(v6 + 32);
      v9 = v8;
      v10 = swift_bridgeObjectRelease();
      CNComposeRecipient.tuHandle.getter(v10);
      v12 = v11;

      goto LABEL_8;
    }
  }
  else
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v7 == 1)
    {
      swift_bridgeObjectRetain();
      goto LABEL_5;
    }
  }
  v12 = 0;
LABEL_13:
  v13 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v4) + 0x158))(v12);
  if (!v7)
    goto LABEL_20;
  if ((PeoplePickerViewController.isIDSLookupPendingForCurrentRecipients()() & 1) != 0)
    goto LABEL_20;
  if ((PeoplePickerViewController.recipientsIncludeInvalidAddresses()() & 1) != 0)
    goto LABEL_20;
  swift_beginAccess();
  v14 = swift_bridgeObjectRetain();
  PeoplePickerViewController.isCallAllowed(policy:)(v14);
  v16 = v15;
  swift_bridgeObjectRelease();
  if ((v16 & 1) == 0
    || v7 >= 2
    && (v17 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance)) != 0
    && (v18 = v17, v19 = objc_msgSend(v17, sel_isGreenTea), v18, v19))
  {
LABEL_20:
    swift_bridgeObjectRelease();
    (*(void (**)(_QWORD))((*v13 & *v4) + 0x188))(0);
  }
  else
  {
    v20 = *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_viewModel);
    swift_beginAccess();
    v21 = *(unsigned __int8 *)(v20 + 16);
    v22 = PeoplePickerViewController.isAudioAllowedForCurrentRecipients()();
    v23 = PeoplePickerViewController.isMultiwayAllowedForCurrentRecipients()();
    v24 = PeoplePickerViewController.isVideoAllowedForCurrentRecipients()();
    PeoplePickerViewController.isAVLessSharePlayAllowedForCurrentRecipients()();
    v26 = v25;
    if (v21 == 3)
    {
      (*(void (**)(uint64_t))((*v13 & *v4) + 0x140))(3);
      PeoplePickerViewController.reportIncompatibilityEvent(with:reason:recipients:)(3, 4, v6);
      swift_bridgeObjectRelease();
      v29 = 0;
    }
    else if (v21)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t))((*v13 & *v4) + 0x140))(3);
      v29 = 0x10000;
    }
    else
    {
      v27 = swift_bridgeObjectRelease();
      v28 = (*(uint64_t (**)(uint64_t))((*v13 & *v2) + 0x3C8))(v27);
      (*(void (**)(uint64_t))((*v13 & *v4) + 0x140))(v28);
      if ((v24 & 1) != 0)
        v29 = 0x10000;
      else
        v29 = 0;
    }
    PeoplePickerViewController.isTelephonyAllowedForCurrentState()();
    v31 = 0x100000000;
    if ((v26 & 1) == 0)
      v31 = 0;
    v32 = 0x1000000;
    if ((v23 & 1) == 0)
      v32 = 0;
    v33 = 256;
    if ((v22 & 1) == 0)
      v33 = 0;
    (*(void (**)(uint64_t))((*v13 & *v4) + 0x188))(v32 | v33 | v31 | v29 | v30 & 1);
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.default.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_1BD6441D0;
    v35 = String.init<A>(reflecting:)();
    v37 = v36;
    *(_QWORD *)(v34 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v34 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v34 + 32) = v35;
    *(_QWORD *)(v34 + 40) = v37;
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
  }

}

void PeoplePickerViewController.updateHelpText()()
{
  uint64_t v0;
  void *v1;
  id v2;
  unint64_t v3;
  uint64_t v4;
  char v5;
  id v6;
  void *v7;
  unsigned __int8 v8;
  uint64_t v9;
  int v10;
  uint64_t countAndFlagsBits;
  void *v12;
  void *object;
  void *v14;
  id v15;
  Swift::String v16;
  Swift::String_optional v17;
  Swift::String v18;
  Swift::String v19;
  Swift::String v20;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_searchController);
  v2 = objc_msgSend(v1, sel_recipients);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for CNComposeRecipient);
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v4 < 1)
  {
    swift_bridgeObjectRelease();
LABEL_11:
    objc_msgSend(v1, sel_setComposeFieldInfoText_, 0);
    return;
  }
  v5 = PeoplePickerViewController.isIDSLookupPendingForCurrentRecipients()();
  swift_bridgeObjectRelease();
  if ((v5 & 1) != 0)
    goto LABEL_11;
  if ((unint64_t)v4 >= 2)
  {
    v6 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
    if (v6)
    {
      v7 = v6;
      v8 = objc_msgSend(v6, sel_isGreenTea);

      if ((v8 & 1) != 0)
        goto LABEL_11;
    }
  }
  v9 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_viewModel);
  swift_beginAccess();
  v10 = *(unsigned __int8 *)(v9 + 16);
  if ((v10 - 1) < 2)
  {
    countAndFlagsBits = PeoplePickerViewController.webInviteeExplanation()();
    object = v12;
LABEL_14:
    v14 = (void *)MEMORY[0x1C3B72E00](countAndFlagsBits, object);
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  v14 = 0;
  if (v10)
  {
    v15 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
    v20._object = (void *)0xE000000000000000;
    v16._object = (void *)0x80000001BD674BE0;
    v16._countAndFlagsBits = 0xD00000000000001BLL;
    v17.value._countAndFlagsBits = 0x61737265766E6F43;
    v17.value._object = (void *)0xEF74694B6E6F6974;
    v18._countAndFlagsBits = 0;
    v18._object = (void *)0xE000000000000000;
    v20._countAndFlagsBits = 0;
    v19 = NSLocalizedString(_:tableName:bundle:value:comment:)(v16, v17, (NSBundle)v15, v18, v20);
    countAndFlagsBits = v19._countAndFlagsBits;
    object = v19._object;

    goto LABEL_14;
  }
LABEL_15:
  objc_msgSend(v1, sel_setComposeFieldInfoText_, v14);

}

void PeoplePickerViewController.tintColor(for:isChild:)(void *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t i;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  char v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  uint64_t v24;
  void *v25;
  unsigned int v26;
  uint64_t *v27;
  void *v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  unint64_t v33;
  uint64_t v34;
  Swift::String v35;
  void *v36;

  v3 = v2;
  if (!objc_msgSend(a1, sel_isGroup))
  {
    outlined bridged method (pb) of @objc TUConversationLink.displayName.getter(a1, (SEL *)&selRef_address);
    if (v17)
    {
      v18 = (void *)MEMORY[0x1C3B72E00]();
      swift_bridgeObjectRelease();
    }
    else
    {
      v18 = 0;
    }
    v19 = (id)TUCopyIDSCanonicalAddressForDestinationID();

    if (v19)
    {
      v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v22 = v21;

      if (!PeoplePickerViewController.isIDSLookupPending(for:)(v20, (uint64_t)v22))
      {
        outlined bridged method (pb) of @objc TUConversationLink.displayName.getter(a1, (SEL *)&selRef_address);
        if (v24)
        {
          v25 = (void *)MEMORY[0x1C3B72E00]();
          swift_bridgeObjectRelease();
          v26 = objc_msgSend(v25, sel_destinationIdIsPhoneNumber);

          v27 = &OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_gondolaRecipientTintColor;
          if (!v26)
            v27 = &OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_unavailableRecipientTintColor;
          v28 = *(void **)(v3 + *v27);
          if ((a2 & 1) != 0)
          {
            v29 = v28;
          }
          else
          {
            v30 = *(void **)(v3 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_searchController);
            v31 = v28;
            v32 = objc_msgSend(v30, sel_recipients);
            type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for CNComposeRecipient);
            v33 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

            if (v33 >> 62)
            {
              swift_bridgeObjectRetain();
              v34 = _CocoaArrayWrapper.endIndex.getter();
              swift_bridgeObjectRelease();
            }
            else
            {
              v34 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10);
            }
            swift_bridgeObjectRelease();
            if (v34 <= 0 && *(_BYTE *)(v3 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_style) != 1)
              PeoplePickerViewController.isFaceTimeAvailable(for:)(v20, (uint64_t)v22);
          }
          v35._countAndFlagsBits = v20;
          v35._object = v22;
          PeoplePickerViewModel.isMultiwayAvailable(for:)(v35);
        }
        goto LABEL_40;
      }
      swift_bridgeObjectRelease();
    }
    v23 = objc_retain(*(id *)(v3
                            + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_unavailableRecipientTintColor));
    return;
  }
  v6 = (uint64_t)objc_retain(*(id *)(v2
                                  + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_availableRecipientTintColor));
  v7 = outlined bridged method (pb) of @objc CNComposeRecipient.children()(a1);
  if (!v7)
  {
    __break(1u);
LABEL_40:
    __break(1u);
    return;
  }
  v8 = v7;
  if (v7 >> 62)
    goto LABEL_36;
  for (i = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10); i; i = _CocoaArrayWrapper.endIndex.getter())
  {
    v36 = (void *)v6;
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSObject);
    v6 = 4;
    v10 = v3;
    while (1)
    {
      v11 = (v8 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C3B73D18](v6 - 4, v8) : *(id *)(v8 + 8 * v6);
      v12 = v11;
      v13 = v6 - 3;
      if (__OFADD__(v6 - 4, 1))
        break;
      v14 = PeoplePickerViewController.tintColor(for:isChild:)(v11, 1);
      if ((static NSObject.== infix(_:_:)() & 1) != 0)
      {

        v15 = v36;
        v36 = (void *)v14;
      }
      else
      {
        v16 = static NSObject.== infix(_:_:)();

        if ((v16 & 1) != 0)
        {

          swift_bridgeObjectRelease();
          return;
        }
        v15 = (void *)v14;
      }

      ++v6;
      v3 = v10;
      if (v13 == i)
        goto LABEL_15;
    }
    __break(1u);
LABEL_36:
    ;
  }
LABEL_15:
  swift_bridgeObjectRelease();
}

char **PeoplePickerViewController.preferredRecipient(for:)(char **a1)
{
  uint64_t v1;
  uint64_t v2;
  char **v3;
  void *v4;
  unint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  id v19;
  unint64_t v20;
  uint64_t v21;
  Swift::String v22;
  char **v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  unsigned int v32;
  id v33;
  void *v35;
  char **v36;
  unint64_t v37;
  uint64_t v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t v41;

  v2 = v1;
  v3 = a1;
  v4 = 0;
  if ((objc_msgSend(a1, sel_isGroup) & 1) == 0)
  {
    v5 = outlined bridged method (pb) of @objc CNComposeRecipient.children()(v3);
    if (v5)
    {
      v6 = v5;
      v4 = (void *)(v5 >> 62);
      if (v5 >> 62)
        goto LABEL_56;
      v7 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
      while (1)
      {
        if (v7 < 2)
        {
          swift_bridgeObjectRelease();
          break;
        }
        v35 = v4;
        v37 = v6;
        v41 = MEMORY[0x1E0DEE9E8];
        v36 = v3;
        CNComposeRecipient.idsDestinations()();
        v4 = (void *)v8;
        v9 = *(_QWORD *)(v8 + 56);
        v10 = 1 << *(_BYTE *)(v8 + 32);
        v11 = -1;
        if (v10 < 64)
          v11 = ~(-1 << v10);
        v3 = (char **)OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_searchController;
        v38 = OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_style;
        v39 = (unint64_t)(v10 + 63) >> 6;
        if ((v11 & v9) != 0)
        {
          v12 = __clz(__rbit64(v11 & v9));
          goto LABEL_23;
        }
        if ((unint64_t)(v10 + 63) >> 6 <= 1)
          goto LABEL_32;
        v13 = *(_QWORD *)(v8 + 64);
        v6 = 1;
        if (v13)
          goto LABEL_22;
        v6 = 2;
        if (v39 <= 2)
          goto LABEL_32;
        v13 = *(_QWORD *)(v8 + 72);
        if (v13)
          goto LABEL_22;
        v6 = 3;
        if (v39 <= 3)
          goto LABEL_32;
        v13 = *(_QWORD *)(v8 + 80);
        if (v13)
          goto LABEL_22;
        v14 = 4;
        if (v39 <= 4)
        {
LABEL_32:
          swift_release();
          if (*(_QWORD *)(v41 + 16))
          {
            swift_bridgeObjectRetain_n();
            specialized _copyCollectionToContiguousArray<A>(_:)();
            v25 = v24;
            swift_bridgeObjectRelease();
            v40 = (_QWORD *)v25;
            specialized MutableCollection<>.sort(by:)((uint64_t *)&v40);
            swift_bridgeObjectRelease();
            v26 = v40;
            swift_bridgeObjectRetain();
            v4 = specialized Sequence.first(where:)(v37, v26);
            swift_release();
            if (v4)
            {
              swift_bridgeObjectRelease();
LABEL_52:
              swift_bridgeObjectRelease();
              return (char **)v4;
            }
          }
          if (v35)
          {
            swift_bridgeObjectRetain();
            v2 = _CocoaArrayWrapper.endIndex.getter();
            if (!v2)
            {
LABEL_48:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              return v36;
            }
          }
          else
          {
            v2 = *(_QWORD *)((v37 & 0xFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain();
            if (!v2)
              goto LABEL_48;
          }
          v6 = v37 & 0xC000000000000001;
          v27 = 4;
          v3 = &selRef_address;
          while (1)
          {
            v28 = v6 ? (id)MEMORY[0x1C3B73D18](v27 - 4, v37) : *(id *)(v37 + 8 * v27);
            v4 = v28;
            v29 = v27 - 3;
            if (__OFADD__(v27 - 4, 1))
              break;
            outlined bridged method (pb) of @objc TUConversationLink.displayName.getter(v28, (SEL *)&selRef_address);
            if (!v30)
            {
              __break(1u);
              JUMPOUT(0x1BD126F2CLL);
            }
            v31 = (void *)MEMORY[0x1C3B72E00]();
            swift_bridgeObjectRelease();
            v32 = objc_msgSend(v31, sel_destinationIdIsPhoneNumber);

            if (v32)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              return (char **)v4;
            }

            ++v27;
            if (v29 == v2)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, v6 == 0, v37);
              if (v6)
                v33 = (id)MEMORY[0x1C3B73D18](0, v37);
              else
                v33 = *(id *)(v37 + 32);
              v4 = v33;
              goto LABEL_52;
            }
          }
          __break(1u);
        }
        else
        {
          v13 = *(_QWORD *)(v8 + 88);
          if (v13)
          {
            v6 = 4;
LABEL_22:
            v12 = __clz(__rbit64(v13)) + (v6 << 6);
LABEL_23:
            v15 = (uint64_t *)(*(_QWORD *)(v8 + 48) + 16 * v12);
            v17 = *v15;
            v16 = (void *)v15[1];
            v18 = *(void **)(v2 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_searchController);
            swift_bridgeObjectRetain();
            v19 = objc_msgSend(v18, sel_recipients);
            type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for CNComposeRecipient);
            v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

            if (v20 >> 62)
            {
              swift_bridgeObjectRetain();
              v21 = _CocoaArrayWrapper.endIndex.getter();
              swift_bridgeObjectRelease();
            }
            else
            {
              v21 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
            }
            swift_bridgeObjectRelease();
            if (v21 <= 0 && *(_BYTE *)(v2 + v38) != 1)
              PeoplePickerViewController.isFaceTimeAvailable(for:)(v17, (uint64_t)v16);
            v22._countAndFlagsBits = v17;
            v22._object = v16;
            PeoplePickerViewModel.isMultiwayAvailable(for:)(v22);
          }
          while (1)
          {
            v6 = v14 + 1;
            if (__OFADD__(v14, 1))
              break;
            if (v6 >= v39)
              goto LABEL_32;
            v13 = *(_QWORD *)(v8 + 56 + 8 * v6);
            ++v14;
            if (v13)
              goto LABEL_22;
          }
        }
        __break(1u);
LABEL_56:
        swift_bridgeObjectRetain();
        v7 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
    }
    v23 = v3;
    return v3;
  }
  return (char **)v4;
}

void PeoplePickerViewController.presentationOptions(for:)(void *a1)
{
  _BYTE *v1;
  void *v2;
  _BYTE *v3;
  void *v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  id v25;
  Class isa;
  unsigned __int8 v27;
  uint64_t v28;
  void *v29;
  id v30;
  void *v31;
  id v32;
  void *v33;
  uint64_t v34;
  void *v35;
  id v36;
  unint64_t v37;
  uint64_t v38;
  Swift::String v39;
  uint64_t inited;
  id v41;
  void *v42;
  unint64_t v43;

  v3 = v1;
  v4 = a1;
  if (objc_msgSend(a1, sel_isGroup))
  {
    v5 = outlined bridged method (pb) of @objc CNComposeRecipient.children()(v4);
    if (v5)
    {
      v6 = v5;
      if (v5 >> 62)
      {
        v7 = _CocoaArrayWrapper.endIndex.getter();
        if (v7)
          goto LABEL_5;
      }
      else
      {
        v7 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v7)
        {
LABEL_5:
          if (v7 >= 1)
          {
            v8 = 0;
            v9 = 0;
            do
            {
              if ((v6 & 0xC000000000000001) != 0)
                v10 = (id)MEMORY[0x1C3B73D18](v9, v6);
              else
                v10 = *(id *)(v6 + 8 * v9 + 32);
              v11 = v10;
              ++v9;
              v12 = PeoplePickerViewController.presentationOptions(for:)();

              if ((v12 & ~v8) != 0)
                v13 = v12;
              else
                v13 = 0;
              v8 |= v13;
            }
            while (v7 != v9);
            goto LABEL_14;
          }
          __break(1u);
          goto LABEL_44;
        }
      }
LABEL_14:
      swift_bridgeObjectRelease();
      return;
    }
    __break(1u);
    goto LABEL_46;
  }
  v14 = CNComposeRecipient.normalizedAddresses()();
  PeoplePickerViewController.currentRecipientsAddresses()();
  v16 = v15;
  v17 = swift_bridgeObjectRetain();
  specialized Set.union<A>(_:)(v17, v16);
  v18 = PeoplePickerViewController.callFilterPolicy(for:)();
  swift_bridgeObjectRelease();
  v19 = *(_QWORD *)(v14 + 16);
  if (v19)
  {
    v42 = v4;
    v20 = (uint64_t *)(v14 + 40);
    while (1)
    {
      if (*(_QWORD *)(v18 + 16))
      {
        v21 = *(v20 - 1);
        v22 = *v20;
        swift_bridgeObjectRetain();
        v23 = specialized __RawDictionaryStorage.find<A>(_:)(v21, v22);
        if ((v24 & 1) != 0)
        {
          v25 = *(id *)(*(_QWORD *)(v18 + 56) + 8 * v23);
          swift_bridgeObjectRelease();
          type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSNumber);
          isa = NSNumber.init(integerLiteral:)(0).super.super.isa;
          v27 = objc_msgSend(v25, sel_isEqualToNumber_, isa);

          if ((v27 & 1) != 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
            inited = swift_initStackObject();
            *(_OWORD *)(inited + 16) = xmmword_1BD6443F0;
            *(_QWORD *)(inited + 32) = v42;
            v43 = inited;
            specialized Array._endMutation()();
            v41 = v42;
            PeoplePickerViewController.reportIncompatibilityEvent(with:reason:recipients:)(3, 5, v43);
            swift_bridgeObjectRelease();

            return;
          }

        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
      v20 += 2;
      if (!--v19)
      {
        swift_bridgeObjectRelease();
        v4 = v42;
        goto LABEL_25;
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_25:
  swift_bridgeObjectRelease();
  outlined bridged method (pb) of @objc TUConversationLink.displayName.getter(v4, (SEL *)&selRef_address);
  if (v28)
  {
    v29 = (void *)MEMORY[0x1C3B72E00]();
    swift_bridgeObjectRelease();
  }
  else
  {
    v29 = 0;
  }
  v30 = (id)TUCopyIDSCanonicalAddressForDestinationID();

  if (v30)
  {
    v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v2 = v31;

    if (!PeoplePickerViewController.isIDSLookupPending(for:)(v7, (uint64_t)v2))
    {
      outlined bridged method (pb) of @objc TUConversationLink.displayName.getter(v4, (SEL *)&selRef_address);
      if (v34)
      {
        v35 = (void *)MEMORY[0x1C3B72E00]();
        swift_bridgeObjectRelease();
        objc_msgSend(v35, sel_destinationIdIsPhoneNumber);

        v36 = objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_searchController], sel_recipients);
        type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for CNComposeRecipient);
        v37 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        if (!(v37 >> 62))
        {
          v38 = *(_QWORD *)((v37 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_35:
          swift_bridgeObjectRelease();
          if (v38 > 1 || v3[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_style] == 1)
          {
            v39._countAndFlagsBits = v7;
            v39._object = v2;
            PeoplePickerViewModel.isMultiwayAvailable(for:)(v39);
          }
          PeoplePickerViewController.isFaceTimeAvailable(for:)(v7, (uint64_t)v2);
        }
LABEL_44:
        swift_bridgeObjectRetain();
        v38 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        goto LABEL_35;
      }
      goto LABEL_47;
    }
    swift_bridgeObjectRelease();
    v32 = objc_msgSend(v3, sel_view);
    if (v32)
    {
      v33 = v32;
      objc_msgSend(v32, sel_effectiveUserInterfaceLayoutDirection);

      return;
    }
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
  }
}

uint64_t PeoplePickerViewController.updatePresentationOptions(_:for:)(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;

  if (!(a2 >> 62))
  {
    v5 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v5)
      goto LABEL_3;
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  result = _CocoaArrayWrapper.endIndex.getter();
  v5 = result;
  if (!result)
    return swift_bridgeObjectRelease();
LABEL_3:
  if (v5 >= 1)
  {
    v7 = 0;
    v8 = *(void **)(v2 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_searchController);
    do
    {
      if ((a2 & 0xC000000000000001) != 0)
        v9 = (id)MEMORY[0x1C3B73D18](v7, a2);
      else
        v9 = *(id *)(a2 + 8 * v7 + 32);
      v10 = v9;
      ++v7;
      objc_msgSend(v8, sel_setPresentationOptions_forRecipient_, a1, v9);

    }
    while (v5 != v7);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void PeoplePickerViewController.setActionUnavailable()()
{
  uint64_t v0;
  _QWORD *v1;
  void (*v2)(_QWORD);
  _QWORD *v3;

  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_searchController), sel_setComposeFieldInfoText_, 0);
  v1 = *(_QWORD **)(v0 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_actionBar);
  if (v1)
  {
    v2 = *(void (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x188);
    v3 = v1;
    v2(0);

  }
}

uint64_t PeoplePickerViewController.isIDSLookupPendingForCurrentRecipients()()
{
  char *v0;
  void *v1;
  id v2;
  unint64_t v3;
  id v4;
  void *v5;
  id v6;
  unint64_t v7;
  uint64_t v8;
  id v9;
  unint64_t v10;
  id v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  unsigned int v17;
  uint64_t v18;

  v1 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_searchController];
  v2 = objc_msgSend(v1, sel_recipients);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for CNComposeRecipient);
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v3 >> 62))
  {
    if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_3;
LABEL_22:
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  swift_bridgeObjectRetain();
  v18 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v18)
    goto LABEL_22;
LABEL_3:
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v3 & 0xC000000000000001) == 0, v3);
  if ((v3 & 0xC000000000000001) != 0)
    v4 = (id)MEMORY[0x1C3B73D18](0, v3);
  else
    v4 = *(id *)(v3 + 32);
  v5 = v4;
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v1, sel_recipients);
  v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    v8 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v8 > 1
    || v0[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_style] == 1
    || objc_msgSend(v5, sel_isGroup))
  {
    v9 = objc_msgSend(v1, sel_recipients);
    v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    LOBYTE(v0) = specialized Sequence.contains(where:)(v10, v0);
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  v11 = objc_msgSend(v1, sel_recipients);
  v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v12 >> 62)
  {
    swift_bridgeObjectRetain();
    v13 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v13 != 1)
  {

LABEL_23:
    LOBYTE(v0) = 0;
    return v0 & 1;
  }
  outlined bridged method (pb) of @objc TUConversationLink.displayName.getter(v5, (SEL *)&selRef_address);
  if (v14)
  {
    v15 = (void *)MEMORY[0x1C3B72E00]();
    swift_bridgeObjectRelease();
  }
  else
  {
    v15 = 0;
  }
  v0 = (char *)(id)TUCopyIDSCanonicalAddressForDestinationID();

  if (v0)
  {
    v16 = objc_msgSend((id)objc_opt_self(), sel_sharedManager);
    v17 = objc_msgSend(v16, sel_faceTimeVideoAvailabilityForDestination_, v0);

    LOBYTE(v0) = v17 == 0;
    return v0 & 1;
  }
LABEL_11:

  return v0 & 1;
}

uint64_t PeoplePickerViewController.reportIncompatibilityEvent(with:reason:recipients:)(char a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  id v6;
  void *v7;
  id v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  void *v15;
  char v16;
  id v17;
  void *v18;
  char v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  char v26;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  unint64_t v37;
  void *v38;

  v3 = a3;
  if (a3 >> 62)
    goto LABEL_38;
  v4 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; v4 = _CocoaArrayWrapper.endIndex.getter())
  {
    v36 = *(id *)(v30 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_searchController);
    v37 = v3 & 0xC000000000000001;
    v33 = (uint64_t *)(v30 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_loggedInvalidRecipients);
    swift_beginAccess();
    v5 = 0;
    v34 = v3;
    v35 = v4;
    v31 = v3 + 32;
    v32 = v3 & 0xFFFFFFFFFFFFFF8;
    while (1)
    {
      if (v37)
      {
        v6 = (id)MEMORY[0x1C3B73D18](v5, v34);
      }
      else
      {
        if (v5 >= *(_QWORD *)(v32 + 16))
          goto LABEL_37;
        v6 = *(id *)(v31 + 8 * v5);
      }
      v7 = v6;
      if (__OFADD__(v5++, 1))
      {
        __break(1u);
        goto LABEL_36;
      }
      v9 = objc_msgSend(v36, sel_recipients);
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for CNComposeRecipient);
      v3 = v10;
      v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v11 >> 62)
      {
        swift_bridgeObjectRetain();
        v12 = _CocoaArrayWrapper.endIndex.getter();
        if (!v12)
          goto LABEL_29;
      }
      else
      {
        v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v12)
          goto LABEL_29;
      }
      v13 = v11 & 0xC000000000000001;
      if ((v11 & 0xC000000000000001) != 0)
        v14 = (id)MEMORY[0x1C3B73D18](0, v11);
      else
        v14 = *(id *)(v11 + 32);
      v15 = v14;
      v16 = static NSObject.== infix(_:_:)();

      if ((v16 & 1) != 0)
      {
LABEL_19:
        swift_bridgeObjectRelease_n();
        v20 = *v33;
        swift_bridgeObjectRetain();
        v3 = specialized Set.contains(_:)(v7, v20);
        swift_bridgeObjectRelease();
        if ((v3 & 1) == 0)
        {
          swift_beginAccess();
          specialized Set._Variant.insert(_:)(&v38, v7);
          v21 = v38;
          swift_endAccess();

          v3 = v30;
          PeoplePickerViewController.reportIncompatibilityEvent(with:reason:)(a1, a2);
        }
        goto LABEL_30;
      }
      if (v12 != 1)
      {
        if (v13)
          v17 = (id)MEMORY[0x1C3B73D18](1, v11);
        else
          v17 = *(id *)(v11 + 40);
        v18 = v17;
        v19 = static NSObject.== infix(_:_:)();

        if ((v19 & 1) != 0)
          goto LABEL_19;
        if (v12 != 2)
          break;
      }
LABEL_29:
      swift_bridgeObjectRelease_n();
LABEL_30:

      if (v5 == v35)
        return swift_bridgeObjectRelease();
    }
    v22 = 6;
    while (1)
    {
      v23 = v13 ? (id)MEMORY[0x1C3B73D18](v22 - 4, v11) : *(id *)(v11 + 8 * v22);
      v24 = v23;
      v25 = v22 - 3;
      if (__OFADD__(v22 - 4, 1))
        break;
      v26 = static NSObject.== infix(_:_:)();

      if ((v26 & 1) != 0)
        goto LABEL_19;
      ++v22;
      if (v25 == v12)
        goto LABEL_29;
    }
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    swift_bridgeObjectRetain();
  }
  return swift_bridgeObjectRelease();
}

uint64_t PeoplePickerViewController.webInviteeExplanation()()
{
  uint64_t v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  unint64_t v6;
  Swift::String_optional v7;
  Swift::String v8;
  Swift::String v9;
  int v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  Swift::String_optional v14;
  Swift::String v15;
  uint64_t v16;
  Swift::String v17;
  id v18;
  Swift::String v19;
  Swift::String_optional v20;
  Swift::String v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v27;
  Swift::String v28;
  Swift::String v29;

  v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_searchController), sel_recipients);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for CNComposeRecipient);
  v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  v4 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  if (v3 <= 1)
    v5 = 5459283;
  else
    v5 = 5459277;
  v28._object = (void *)0xE000000000000000;
  v6 = 0xE300000000000000;
  v7.value._countAndFlagsBits = 0x61737265766E6F43;
  v7.value._object = (void *)0xEF74694B6E6F6974;
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  v28._countAndFlagsBits = 0;
  v9 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v5, v7, (NSBundle)v4, v8, v28);

  v10 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_style);
  v11 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v27 = 0xE000000000000000;
  if (v10)
  {
    v12 = 0x4C465F4552414853;
    v13 = 0xEA0000000000574FLL;
  }
  else
  {
    v12 = 0x465F455441455243;
    v13 = 0xEB00000000574F4CLL;
  }
  v14.value._countAndFlagsBits = 0x61737265766E6F43;
  v14.value._object = (void *)0xEF74694B6E6F6974;
  v15._countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  v16 = 0;
  v17 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v12, v14, (NSBundle)v11, v15, *(Swift::String *)(&v27 - 1));

  v18 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v29._object = (void *)0xE000000000000000;
  v19._object = (void *)0x80000001BD674C00;
  v19._countAndFlagsBits = 0xD000000000000017;
  v20.value._countAndFlagsBits = 0x61737265766E6F43;
  v20.value._object = (void *)0xEF74694B6E6F6974;
  v21._countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  v29._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v19, v20, (NSBundle)v18, v21, v29);

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1BD645380;
  v23 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v22 + 56) = MEMORY[0x1E0DEA968];
  v24 = lazy protocol witness table accessor for type String and conformance String();
  *(Swift::String *)(v22 + 32) = v9;
  *(_QWORD *)(v22 + 96) = v23;
  *(_QWORD *)(v22 + 104) = v24;
  *(_QWORD *)(v22 + 64) = v24;
  *(Swift::String *)(v22 + 72) = v17;
  v25 = String.init(format:_:)();
  swift_bridgeObjectRelease();
  return v25;
}

void CNComposeRecipient.tuHandle.getter(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_25_1(a1, sel_kind);
  if (v1)
  {
    if (v1 != (id)1)
    {
      OUTLINED_FUNCTION_18();
      return;
    }
    OUTLINED_FUNCTION_118_3(1, (SEL *)&selRef_address);
    if (v2)
    {
      objc_opt_self();
      OUTLINED_FUNCTION_75_7();
    }
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_118_3(0, (SEL *)&selRef_address);
    if (v3)
    {
      objc_opt_self();
      OUTLINED_FUNCTION_75_7();
    }
  }
  __break(1u);
}

unint64_t PeoplePickerViewController.recipientsIncludeInvalidAddresses()()
{
  uint64_t v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char **v7;
  id v8;
  void *v9;
  unint64_t result;
  unint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  void *v21;
  id v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;

  v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_searchController), sel_recipients);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for CNComposeRecipient);
  v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v2 >> 62)
  {
LABEL_37:
    swift_bridgeObjectRetain();
    v3 = _CocoaArrayWrapper.endIndex.getter();
    if (v3)
      goto LABEL_3;
LABEL_31:
    swift_bridgeObjectRelease_n();
    return 0;
  }
  v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v3)
    goto LABEL_31;
LABEL_3:
  v4 = 0;
  v5 = v2 & 0xC000000000000001;
  v6 = v2 + 32;
  v7 = &selRef_inputDevices;
  v25 = v3;
  v26 = v2;
  v23 = v2 + 32;
  v24 = v2 & 0xC000000000000001;
  while (1)
  {
    if (v5)
      v8 = (id)MEMORY[0x1C3B73D18](v4, v2);
    else
      v8 = *(id *)(v6 + 8 * v4);
    v9 = v8;
    if (__OFADD__(v4++, 1))
      goto LABEL_36;
    if (!objc_msgSend(v8, v7[110]))
      break;
    result = outlined bridged method (pb) of @objc CNComposeRecipient.children()(v9);
    if (!result)
    {
      __break(1u);
      return result;
    }
    v12 = result;
    if (result >> 62)
    {
      swift_bridgeObjectRetain_n();
      v13 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v13)
      {
LABEL_12:
        v2 = 4;
        while (1)
        {
          v14 = (v12 & 0xC000000000000001) != 0
              ? (id)MEMORY[0x1C3B73D18](v2 - 4, v12)
              : *(id *)(v12 + 8 * v2);
          v15 = v14;
          v16 = v2 - 3;
          if (__OFADD__(v2 - 4, 1))
            break;
          outlined bridged method (pb) of @objc TUConversationLink.displayName.getter(v14, (SEL *)&selRef_address);
          if (v17)
          {
            v18 = (void *)MEMORY[0x1C3B72E00]();
            swift_bridgeObjectRelease();
          }
          else
          {
            v18 = 0;
          }
          v19 = (id)TUCopyIDSCanonicalAddressForDestinationID();

          if (!v19)
          {
            swift_bridgeObjectRelease_n();

            swift_bridgeObjectRelease_n();
            return 1;
          }

          ++v2;
          if (v16 == v13)
          {

            swift_bridgeObjectRelease_n();
            v3 = v25;
            v2 = v26;
            v6 = v23;
            v5 = v24;
            v7 = &selRef_inputDevices;
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
    }
    else
    {
      v13 = *(_QWORD *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v13)
        goto LABEL_12;
    }

    swift_bridgeObjectRelease_n();
LABEL_30:
    if (v4 == v3)
      goto LABEL_31;
  }
  outlined bridged method (pb) of @objc TUConversationLink.displayName.getter(v9, (SEL *)&selRef_address);
  if (v20)
  {
    v21 = (void *)MEMORY[0x1C3B72E00]();
    swift_bridgeObjectRelease();
  }
  else
  {
    v21 = 0;
  }
  v22 = (id)TUCopyIDSCanonicalAddressForDestinationID();

  if (v22)
  {

    goto LABEL_30;
  }
  swift_bridgeObjectRelease_n();

  return 1;
}

void PeoplePickerViewController.isCallAllowed(policy:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  void *v13;
  id v14;
  Class isa;
  unsigned int v16;

  v2 = a1 + 64;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v6 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  v7 = 0;
  while (v5)
  {
    v8 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    v9 = v8 | (v7 << 6);
LABEL_20:
    v13 = *(void **)(*(_QWORD *)(a1 + 56) + 8 * v9);
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSNumber);
    v14 = v13;
    isa = NSNumber.init(integerLiteral:)(0).super.super.isa;
    v16 = objc_msgSend(v14, sel_isEqualToNumber_, isa);

    if (v16)
    {
LABEL_21:
      swift_release();
      return;
    }
  }
  v10 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v10 >= v6)
    goto LABEL_21;
  v11 = *(_QWORD *)(v2 + 8 * v10);
  ++v7;
  if (v11)
    goto LABEL_19;
  v7 = v10 + 1;
  if (v10 + 1 >= v6)
    goto LABEL_21;
  v11 = *(_QWORD *)(v2 + 8 * v7);
  if (v11)
    goto LABEL_19;
  v7 = v10 + 2;
  if (v10 + 2 >= v6)
    goto LABEL_21;
  v11 = *(_QWORD *)(v2 + 8 * v7);
  if (v11)
  {
LABEL_19:
    v5 = (v11 - 1) & v11;
    v9 = __clz(__rbit64(v11)) + (v7 << 6);
    goto LABEL_20;
  }
  v12 = v10 + 3;
  if (v12 >= v6)
    goto LABEL_21;
  v11 = *(_QWORD *)(v2 + 8 * v12);
  if (v11)
  {
    v7 = v12;
    goto LABEL_19;
  }
  while (1)
  {
    v7 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v7 >= v6)
      goto LABEL_21;
    v11 = *(_QWORD *)(v2 + 8 * v7);
    ++v12;
    if (v11)
      goto LABEL_19;
  }
LABEL_23:
  __break(1u);
}

uint64_t PeoplePickerViewController.isAudioAllowedForCurrentRecipients()()
{
  uint64_t v0;
  id v1;
  unint64_t v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  uint64_t v9;
  uint64_t v10;

  v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_searchController), sel_recipients);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for CNComposeRecipient);
  v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    v9 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v9 == 1)
    {
      swift_bridgeObjectRetain();
      v10 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v10)
        goto LABEL_3;
      swift_bridgeObjectRelease();
      __break(1u);
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return PeoplePickerViewController.isMultiwayAllowedForCurrentRecipients()();
  }
  if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10) != 1)
    goto LABEL_12;
LABEL_3:
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v2 & 0xC000000000000001) == 0, v2);
  if ((v2 & 0xC000000000000001) != 0)
    v3 = (id)MEMORY[0x1C3B73D18](0, v2);
  else
    v3 = *(id *)(v2 + 32);
  v4 = v3;
  swift_bridgeObjectRelease();
  CNComposeRecipient.idsDestinationsMatchingAddress()();
  v6 = v5;
  if (objc_msgSend((id)objc_opt_self(), sel_supportsDisplayingFaceTimeAudioCalls))
  {
    v7 = PeoplePickerViewController.isMultiwayAllowed(for:)(v6, (SEL *)&selRef_isFaceTimeAudioAvailableForAnyDestinationInDestinations_);
    swift_bridgeObjectRelease();

  }
  else
  {
    swift_bridgeObjectRelease();

    v7 = 0;
  }
  return v7 & 1;
}

uint64_t PeoplePickerViewController.isMultiwayAllowedForCurrentRecipients()()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  unint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  unsigned __int8 v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  BOOL v18;

  v1 = v0;
  v2 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_searchController), sel_recipients);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for CNComposeRecipient);
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v3 >> 62)
  {
LABEL_22:
    swift_bridgeObjectRetain();
    v6 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    v5 = v6 > 0;
    swift_bridgeObjectRetain();
    v4 = _CocoaArrayWrapper.endIndex.getter();
    if (v4)
      goto LABEL_3;
  }
  else
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    v5 = v4 != 0;
    swift_bridgeObjectRetain();
    v6 = v4;
    if (v4)
    {
LABEL_3:
      v7 = 0;
LABEL_4:
      v18 = v5;
      v8 = v7;
      do
      {
        if ((v3 & 0xC000000000000001) != 0)
        {
          v9 = (id)MEMORY[0x1C3B73D18](v8, v3);
        }
        else
        {
          if (v8 >= *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_21;
          v9 = *(id *)(v3 + 8 * v8 + 32);
        }
        v10 = v9;
        v7 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
          __break(1u);
LABEL_21:
          __break(1u);
          goto LABEL_22;
        }
        CNComposeRecipient.idsDestinationsMatchingAddress()();
        v12 = PeoplePickerViewController.isMultiwayAllowed(for:)(v11, (SEL *)&selRef_isFaceTimeMultiwayAvailableForAnyDestinationInDestinations_);
        swift_bridgeObjectRelease();
        if ((v12 & 1) == 0)
        {

LABEL_15:
          v5 = 0;
          if (v7 != v4)
            goto LABEL_4;
          swift_bridgeObjectRelease_n();
          return 0;
        }
        PeoplePickerViewController.hasMatchingMeHandle(for:)(v10);
        v14 = v13;

        if ((v14 & 1) != 0)
          goto LABEL_15;
        ++v8;
      }
      while (v7 != v4);
      swift_bridgeObjectRelease();
      if (!v18)
        goto LABEL_24;
      goto LABEL_18;
    }
  }
  swift_bridgeObjectRelease();
  if (v5)
  {
LABEL_18:
    v15 = *(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_existingAddresses)
                    + 16);
    result = swift_bridgeObjectRelease();
    if (__OFADD__(v15, v6))
    {
      __break(1u);
    }
    else
    {
      PeoplePickerViewController.maxParticipantLimit.getter();
      return v17 >= v15 + v6;
    }
    return result;
  }
LABEL_24:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t PeoplePickerViewController.isVideoAllowedForCurrentRecipients()()
{
  uint64_t v0;
  id v1;
  unint64_t v2;
  id v3;
  void *v4;
  uint64_t v5;
  unsigned __int8 v6;
  uint64_t v8;
  uint64_t v9;

  v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_searchController), sel_recipients);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for CNComposeRecipient);
  v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    v8 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v8 == 1)
    {
      swift_bridgeObjectRetain();
      v9 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v9)
        goto LABEL_3;
      swift_bridgeObjectRelease();
      __break(1u);
    }
LABEL_9:
    swift_bridgeObjectRelease();
    return PeoplePickerViewController.isMultiwayAllowedForCurrentRecipients()();
  }
  if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10) != 1)
    goto LABEL_9;
LABEL_3:
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v2 & 0xC000000000000001) == 0, v2);
  if ((v2 & 0xC000000000000001) != 0)
    v3 = (id)MEMORY[0x1C3B73D18](0, v2);
  else
    v3 = *(id *)(v2 + 32);
  v4 = v3;
  swift_bridgeObjectRelease();
  CNComposeRecipient.idsDestinationsMatchingAddress()();
  v6 = PeoplePickerViewController.isMultiwayAllowed(for:)(v5, (SEL *)&selRef_isFaceTimeVideoAvailableForAnyDestinationInDestinations_);

  swift_bridgeObjectRelease();
  return v6 & 1;
}

void PeoplePickerViewController.isAVLessSharePlayAllowedForCurrentRecipients()()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  id v3;
  unint64_t v4;
  char **v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  unsigned __int8 v12;
  char *v13;
  char *v14;
  char *v15;
  id v16;
  uint64_t v17;
  unsigned __int8 v18;

  v2 = v0;
  v3 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_searchController), sel_recipients);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for CNComposeRecipient);
  v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = (char **)_CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v5)
      goto LABEL_8;
  }
  else
  {
    v5 = *(char ***)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v5)
    {
LABEL_8:
      swift_bridgeObjectRelease();
      return;
    }
  }
  v6 = *(_QWORD *)(*(_QWORD *)(v2 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_existingAddresses)
                 + 16);
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (__OFADD__(v6, v7))
  {
LABEL_28:
    __break(1u);
  }
  else
  {
    PeoplePickerViewController.maxParticipantLimit.getter();
    if (v8 < v6 + v7)
      goto LABEL_8;
    v1 = v4 & 0xC000000000000001;
    specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v4 & 0xC000000000000001) == 0, v4);
    if ((v4 & 0xC000000000000001) == 0)
    {
      v9 = *(id *)(v4 + 32);
      goto LABEL_11;
    }
  }
  v9 = (id)MEMORY[0x1C3B73D18](0, v4);
LABEL_11:
  v10 = v9;
  CNComposeRecipient.idsDestinationsMatchingAddress()();
  if ((PeoplePickerViewController.isMultiwayAllowed(for:)(v11, (SEL *)&selRef_isiMessageAvailableForAnyDestinationInDestinations_) & 1) != 0)
  {
    v12 = PeoplePickerViewController.isAVLessSharePlayCapable(for:)();
    swift_bridgeObjectRelease();

    if ((v12 & 1) != 0)
    {
      v13 = 0;
      v14 = (char *)v5 - 1;
      v5 = &selRef_isiMessageAvailableForAnyDestinationInDestinations_;
      while (v14 != v13)
      {
        v15 = v13 + 1;
        if (v1)
        {
          v16 = (id)MEMORY[0x1C3B73D18](v13 + 1, v4);
        }
        else
        {
          if ((unint64_t)v15 >= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            return;
          }
          v16 = *(id *)(v4 + 8 * (_QWORD)v13 + 40);
        }
        v10 = v16;
        if (__OFADD__(v15, 1))
        {
          __break(1u);
          goto LABEL_28;
        }
        CNComposeRecipient.idsDestinationsMatchingAddress()();
        if ((PeoplePickerViewController.isMultiwayAllowed(for:)(v17, (SEL *)&selRef_isiMessageAvailableForAnyDestinationInDestinations_) & 1) == 0)goto LABEL_23;
        v18 = PeoplePickerViewController.isAVLessSharePlayCapable(for:)();
        swift_bridgeObjectRelease();

        ++v13;
        if ((v18 & 1) == 0)
          goto LABEL_8;
      }
    }
    goto LABEL_8;
  }
LABEL_23:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

void PeoplePickerViewController.isTelephonyAllowedForCurrentState()()
{
  uint64_t v0;
  id v1;
  unint64_t v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_style))
    return;
  v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_searchController), sel_recipients);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for CNComposeRecipient);
  v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v2 >> 62))
  {
    if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10) == 1)
      goto LABEL_4;
LABEL_10:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  v7 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v7 != 1)
    goto LABEL_10;
  swift_bridgeObjectRetain();
  v8 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v8)
    goto LABEL_10;
LABEL_4:
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v2 & 0xC000000000000001) == 0, v2);
  if ((v2 & 0xC000000000000001) != 0)
    v3 = (id)MEMORY[0x1C3B73D18](0, v2);
  else
    v3 = *(id *)(v2 + 32);
  v4 = v3;
  swift_bridgeObjectRelease();
  outlined bridged method (pb) of @objc TUConversationLink.displayName.getter(v4, (SEL *)&selRef_address);
  if (v6)
  {
    PeoplePickerViewController.isTelephonyCallAllowed(for:)(v5, v6);

    swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

void PeoplePickerViewController.updatePillView(senderIdentity:)(void *a1)
{
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  id v8;
  id v9;

  if (a1)
  {
    v2 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_senderIdentityPillView);
    v3 = a1;
    objc_msgSend(v2, sel_setHidden_, 0);
    v4 = objc_msgSend(v3, sel_localizedShortName);
    if (!v4)
    {
      v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v4 = (id)MEMORY[0x1C3B72E00](v5);
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v2, sel_setBadgeText_, v4);

    v6 = objc_msgSend(v3, sel_localizedName);
    if (!v6)
    {
      v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v8 = (id)MEMORY[0x1C3B72E00](v7);
      swift_bridgeObjectRelease();
      v6 = v8;
    }
    v9 = v6;
    objc_msgSend(v2, sel_setTitle_);

  }
  else
  {
    objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_senderIdentityPillView), sel_setHidden_, 1);
  }
}

void PeoplePickerViewController.cancelQueries()()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedManager);
  objc_msgSend(v0, sel_cancelQueries);

}

void CNComposeRecipient.idsDestinations()()
{
  void *v0;
  unint64_t v1;
  void *v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t j;
  id v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t i;
  id v32;
  void *v33;
  id v34;
  id v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;

  v49 = MEMORY[0x1E0DEE9E8];
  if (!objc_msgSend(v0, sel_isGroup))
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1BD6441C0;
    v13 = (void *)*MEMORY[0x1E0C966A8];
    v14 = (void *)*MEMORY[0x1E0C967C0];
    *(_QWORD *)(v12 + 32) = *MEMORY[0x1E0C966A8];
    *(_QWORD *)(v12 + 40) = v14;
    v48 = v12;
    specialized Array._endMutation()();
    v15 = v13;
    v16 = v14;
    v17 = outlined bridged method (mbnn) of @objc CNComposeRecipient.contactWithKeys(toFetch:)(v48, v0);
    if (!v17)
    {
      outlined bridged method (pb) of @objc TUConversationLink.displayName.getter(v0, (SEL *)&selRef_address);
      if (!v41)
        return;
      v42 = (void *)MEMORY[0x1C3B72E00]();
      swift_bridgeObjectRelease();
      v43 = (id)TUCopyIDSCanonicalAddressForDestinationID();

      if (!v43)
        return;
      v44 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v46 = v45;

      specialized Set._Variant.insert(_:)(&v48, v44, v46);
      goto LABEL_48;
    }
    v2 = v17;
    v18 = objc_msgSend(v17, sel_emailAddresses);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for CNLabeledValue);
    v1 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (!(v1 >> 62))
    {
      v19 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v19)
      {
LABEL_24:
        swift_bridgeObjectRelease();
        v28 = objc_msgSend(v2, sel_phoneNumbers);
        v29 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        if (v29 >> 62)
        {
          swift_bridgeObjectRetain();
          v30 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (v30)
          {
LABEL_26:
            v47 = v2;
            if (v30 >= 1)
            {
              for (i = 0; i != v30; ++i)
              {
                if ((v29 & 0xC000000000000001) != 0)
                  v32 = (id)MEMORY[0x1C3B73D18](i, v29);
                else
                  v32 = *(id *)(v29 + 8 * i + 32);
                v33 = v32;
                v34 = objc_msgSend(v32, sel_value, v47);
                v35 = objc_msgSend(v34, sel_stringValue);

                if (!v35)
                {
                  v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                  v35 = (id)MEMORY[0x1C3B72E00](v36);
                  swift_bridgeObjectRelease();
                }
                v37 = (id)TUCopyIDSCanonicalAddressForDestinationID();

                if (v37)
                {
                  v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                  v40 = v39;

                  specialized Set._Variant.insert(_:)(&v48, v38, v40);
                  swift_bridgeObjectRelease();
                }
                else
                {

                }
              }

              goto LABEL_48;
            }
            goto LABEL_51;
          }
        }
        else
        {
          v30 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (v30)
            goto LABEL_26;
        }

LABEL_48:
        swift_bridgeObjectRelease();
        return;
      }
LABEL_15:
      if (v19 < 1)
      {
        __break(1u);
LABEL_51:
        __break(1u);
        goto LABEL_52;
      }
      for (j = 0; j != v19; ++j)
      {
        if ((v1 & 0xC000000000000001) != 0)
          v21 = (id)MEMORY[0x1C3B73D18](j, v1);
        else
          v21 = *(id *)(v1 + 8 * j + 32);
        v22 = v21;
        v23 = objc_msgSend(v21, sel_value);
        v24 = (id)TUCopyIDSCanonicalAddressForDestinationID();

        if (v24)
        {
          v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          v27 = v26;

          specialized Set._Variant.insert(_:)(&v48, v25, v27);
          swift_bridgeObjectRelease();
        }
        else
        {

        }
      }
      goto LABEL_24;
    }
LABEL_44:
    swift_bridgeObjectRetain();
    v19 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v19)
      goto LABEL_24;
    goto LABEL_15;
  }
  v3 = outlined bridged method (pb) of @objc CNComposeRecipient.children()(v0);
  if (!v3)
  {
LABEL_52:
    __break(1u);
    return;
  }
  v4 = v3;
  if (v3 >> 62)
  {
    v5 = _CocoaArrayWrapper.endIndex.getter();
    if (!v5)
      goto LABEL_48;
  }
  else
  {
    v5 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v5)
      goto LABEL_48;
  }
  if (v5 < 1)
  {
    __break(1u);
    goto LABEL_44;
  }
  v6 = 0;
  do
  {
    if ((v4 & 0xC000000000000001) != 0)
      v7 = (id)MEMORY[0x1C3B73D18](v6, v4);
    else
      v7 = *(id *)(v4 + 8 * v6 + 32);
    v8 = v7;
    ++v6;
    v9 = CNComposeRecipient.idsDestinations()();
    specialized Set.union<A>(_:)(v9);
    v11 = v10;

  }
  while (v5 != v6);
  swift_bridgeObjectRelease();
  v49 = v11;
}

uint64_t PeoplePickerViewController.callFilterPolicy(for:)()
{
  id v0;
  id v1;
  NSSet v2;
  id v3;
  uint64_t v4;
  id v5;
  uint64_t v6;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v1 = objc_msgSend(v0, sel_callFilterController);

  v2.super.isa = Set._bridgeToObjectiveC()().super.isa;
  v3 = (id)TUPreferredFaceTimeBundleIdentifier();
  if (!v3)
  {
    v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v3 = (id)MEMORY[0x1C3B72E00](v4);
    swift_bridgeObjectRelease();
  }
  v5 = objc_msgSend(v1, sel_policyForAddresses_forBundleIdentifier_, v2.super.isa, v3);

  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSNumber);
  v6 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  return v6;
}

void PeoplePickerViewController.removeRecipient(_:)(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (one-time initialization token for conversationKit != -1)
    swift_once();
  static os_log_type_t.default.getter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BD6441D0;
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for CNComposeRecipient);
  a1;
  v3 = String.init<A>(reflecting:)();
  v5 = v4;
  *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v2 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v2 + 32) = v3;
  *(_QWORD *)(v2 + 40) = v5;
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  CNComposeRecipient.idsDestinations()();
  v7 = v6;
  swift_beginAccess();
  specialized Set._subtract<A>(_:)(v7);
  swift_endAccess();
  swift_bridgeObjectRelease();
  PeoplePickerViewController.currentRecipientsAddresses()();
  PeoplePickerViewController.callFilterPolicy(for:)();
  swift_bridgeObjectRelease();
  PeoplePickerViewController.restrictionPolicy.setter();
  PeoplePickerViewController.updateState()();
}

id PeoplePickerViewController.isTelephonyCallAllowed(for:)(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = (void *)objc_opt_self();
  if ((objc_msgSend(v4, sel_supportsPrimaryCalling) & 1) != 0
    || !objc_msgSend(v4, sel_supportsTelephonyCalls))
  {
    return 0;
  }
  v5 = (void *)MEMORY[0x1C3B72E00](a1, a2);
  v6 = objc_msgSend(v5, sel_destinationIdIsPhoneNumber);

  return v6;
}

void CNComposeRecipient.idsDestinationsMatchingAddress()()
{
  void *v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  if (objc_msgSend(v0, sel_isGroup))
  {
    v1 = outlined bridged method (pb) of @objc CNComposeRecipient.children()(v0);
    if (!v1)
    {
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
      return;
    }
    v2 = v1;
    if (v1 >> 62)
      goto LABEL_25;
    v3 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v3)
    {
      while (1)
      {
        v32 = MEMORY[0x1E0DEE9D8];
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        if (v3 < 0)
          break;
        v4 = 0;
        v5 = v32;
        while (v3 != v4)
        {
          if ((v2 & 0xC000000000000001) != 0)
            v6 = (id)MEMORY[0x1C3B73D18](v4, v2);
          else
            v6 = *(id *)(v2 + 8 * v4 + 32);
          v7 = v6;
          outlined bridged method (pb) of @objc TUConversationLink.displayName.getter(v6, (SEL *)&selRef_address);
          if (v8)
          {
            v9 = (void *)MEMORY[0x1C3B72E00]();
            swift_bridgeObjectRelease();
          }
          else
          {
            v9 = 0;
          }
          v10 = (id)TUCopyIDSCanonicalAddressForDestinationID();

          if (!v10)
            goto LABEL_36;
          v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          v13 = v12;

          v14 = *(_QWORD *)(v32 + 16);
          if (v14 >= *(_QWORD *)(v32 + 24) >> 1)
            specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          ++v4;
          *(_QWORD *)(v32 + 16) = v14 + 1;
          v15 = v32 + 16 * v14;
          *(_QWORD *)(v15 + 32) = v11;
          *(_QWORD *)(v15 + 40) = v13;
          if (v3 == v4)
          {
            swift_bridgeObjectRelease();
            goto LABEL_27;
          }
        }
        __break(1u);
LABEL_25:
        v3 = _CocoaArrayWrapper.endIndex.getter();
        if (!v3)
          goto LABEL_26;
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
LABEL_26:
    swift_bridgeObjectRelease();
    v5 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
    v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1BD6441D0;
    outlined bridged method (pb) of @objc TUConversationLink.displayName.getter(v0, (SEL *)&selRef_address);
    if (v16)
    {
      v17 = (void *)MEMORY[0x1C3B72E00]();
      swift_bridgeObjectRelease();
    }
    else
    {
      v17 = 0;
    }
    v18 = (id)TUCopyIDSCanonicalAddressForDestinationID();

    if (!v18)
      goto LABEL_38;
    v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v21 = v20;

    *(_QWORD *)(v5 + 32) = v19;
    *(_QWORD *)(v5 + 40) = v21;
  }
LABEL_27:
  v22 = *(_QWORD *)(v5 + 16);
  if (v22)
  {
    swift_bridgeObjectRetain();
    specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    v24 = v23;
    v25 = (uint64_t *)(v5 + 40);
    do
    {
      v27 = *(v25 - 1);
      v26 = *v25;
      v28 = *(_QWORD *)(v24 + 16);
      v29 = *(_QWORD *)(v24 + 24);
      swift_bridgeObjectRetain();
      if (v28 >= v29 >> 1)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v24 = v31;
      }
      v25 += 2;
      *(_QWORD *)(v24 + 16) = v28 + 1;
      v30 = v24 + 16 * v28;
      *(_QWORD *)(v30 + 32) = v27;
      *(_QWORD *)(v30 + 40) = v26;
      --v22;
    }
    while (v22);
    swift_bridgeObjectRelease();
  }
  else
  {
    v24 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  specialized Set.init<A>(_:)(v24);
}

void PeoplePickerViewController.hasMatchingMeHandle(for:)(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  int v21;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_meHandles);
  v4 = v3 + 56;
  v5 = 1 << *(_BYTE *)(v3 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(v3 + 56);
  v8 = (unint64_t)(v5 + 63) >> 6;
  swift_bridgeObjectRetain();
  v9 = 0;
  while (v7)
  {
    v10 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v11 = v10 | (v9 << 6);
LABEL_20:
    v15 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v11);
    v16 = *v15;
    v17 = v15[1];
    swift_bridgeObjectRetain();
    v18 = (void *)MEMORY[0x1C3B72E00](v16, v17);
    swift_bridgeObjectRelease();
    outlined bridged method (pb) of @objc TUConversationLink.displayName.getter(a1, (SEL *)&selRef_address);
    if (v19)
    {
      v20 = (void *)MEMORY[0x1C3B72E00]();
      swift_bridgeObjectRelease();
    }
    else
    {
      v20 = 0;
    }
    v21 = TUDestinationIDsAreEqual();

    if (v21)
    {
LABEL_24:
      swift_release();
      return;
    }
  }
  v12 = v9 + 1;
  if (__OFADD__(v9, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v12 >= v8)
    goto LABEL_24;
  v13 = *(_QWORD *)(v4 + 8 * v12);
  ++v9;
  if (v13)
    goto LABEL_19;
  v9 = v12 + 1;
  if (v12 + 1 >= v8)
    goto LABEL_24;
  v13 = *(_QWORD *)(v4 + 8 * v9);
  if (v13)
    goto LABEL_19;
  v9 = v12 + 2;
  if (v12 + 2 >= v8)
    goto LABEL_24;
  v13 = *(_QWORD *)(v4 + 8 * v9);
  if (v13)
  {
LABEL_19:
    v7 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v9 << 6);
    goto LABEL_20;
  }
  v14 = v12 + 3;
  if (v14 >= v8)
    goto LABEL_24;
  v13 = *(_QWORD *)(v4 + 8 * v14);
  if (v13)
  {
    v9 = v14;
    goto LABEL_19;
  }
  while (1)
  {
    v9 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v9 >= v8)
      goto LABEL_24;
    v13 = *(_QWORD *)(v4 + 8 * v9);
    ++v14;
    if (v13)
      goto LABEL_19;
  }
LABEL_26:
  __break(1u);
}

uint64_t PeoplePickerViewController.isIDSMultiwayLookupPending(for:)(void *a1)
{
  void *v1;
  uint64_t result;
  char v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  unsigned int v9;

  if (!objc_msgSend(a1, sel_isGroup))
  {
    outlined bridged method (pb) of @objc TUConversationLink.displayName.getter(a1, (SEL *)&selRef_address);
    if (v5)
    {
      v6 = (void *)MEMORY[0x1C3B72E00]();
      swift_bridgeObjectRelease();
    }
    else
    {
      v6 = 0;
    }
    v7 = (id)TUCopyIDSCanonicalAddressForDestinationID();

    if (v7)
    {
      v8 = objc_msgSend((id)objc_opt_self(), sel_sharedManager);
      v9 = objc_msgSend(v8, sel_faceTimeMultiwayAvailabilityForDestination_, v7);

      v4 = v9 == 0;
    }
    else
    {
      v4 = 0;
    }
    return v4 & 1;
  }
  result = outlined bridged method (pb) of @objc CNComposeRecipient.children()(a1);
  if (result)
  {
    v4 = specialized Sequence.contains(where:)(result, v1);
    swift_bridgeObjectRelease();
    return v4 & 1;
  }
  __break(1u);
  return result;
}

BOOL PeoplePickerViewController.isIDSLookupPending(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v5;
  unint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  unsigned int v10;
  unsigned int v11;

  v5 = objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_searchController), sel_recipients);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for CNComposeRecipient);
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v7 > 1 || *(_BYTE *)(v2 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_style) == 1)
  {
    v8 = objc_msgSend((id)objc_opt_self(), sel_sharedManager);
    v9 = (void *)MEMORY[0x1C3B72E00](a1, a2);
    v10 = objc_msgSend(v8, sel_faceTimeMultiwayAvailabilityForDestination_, v9);
  }
  else
  {
    v8 = objc_msgSend((id)objc_opt_self(), sel_sharedManager);
    v9 = (void *)MEMORY[0x1C3B72E00](a1, a2);
    v10 = objc_msgSend(v8, sel_faceTimeVideoAvailabilityForDestination_, v9);
  }
  v11 = v10;

  return v11 == 0;
}

id PeoplePickerViewController.isMultiwayAllowed(for:)(uint64_t a1, SEL *a2)
{
  id v3;
  Class isa;
  id v5;

  v3 = objc_msgSend((id)objc_opt_self(), sel_sharedManager);
  swift_bridgeObjectRetain();
  specialized _copyCollectionToContiguousArray<A>(_:)();
  OUTLINED_FUNCTION_27();
  isa = Array._bridgeToObjectiveC()().super.isa;
  OUTLINED_FUNCTION_22();
  v5 = objc_msgSend(v3, *a2, isa);

  return v5;
}

id PeoplePickerViewController.isAVLessSharePlayCapable(for:)()
{
  id v0;
  Class isa;
  id v2;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedManager);
  isa = Set._bridgeToObjectiveC()().super.isa;
  v2 = objc_msgSend(v0, sel_isAVLessSharePlayCapableForAnyDestinationInDestinations_, isa);

  return v2;
}

void PeoplePickerViewController.isFaceTimeAvailable(for:)(uint64_t a1, uint64_t a2)
{
  PeoplePickerViewModel.isAudioAvailable(for:)(*(Swift::String *)&a1);
}

uint64_t sub_1BD129FB0(char a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  void *v14;
  uint64_t v15;
  Swift::String v17;

  if ((a1 & 1) == 0)
  {
    v17._countAndFlagsBits = v15;
    v17._object = v14;
    PeoplePickerViewModel.isVideoAvailable(for:)(v17);
  }
  return 1;
}

void PeoplePickerViewController.pickablePerson(for:)(void *a1)
{
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  id v14;

  CNComposeRecipient.tuHandle.getter((uint64_t)a1);
  if (v2)
  {
    v3 = (void *)v2;
    v4 = OUTLINED_FUNCTION_2_2(v2, sel_contact);
    if (v4)
    {
      v5 = v4;
      v6 = objc_allocWithZone((Class)type metadata accessor for PickablePerson());
      v7 = v5;
    }
    else
    {
      v14 = objc_allocWithZone((Class)type metadata accessor for PickablePerson());
      v7 = 0;
    }
    PickablePerson.init(contact:handle:)(v7, v3);
  }
  else
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v8 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v8 + 16) = xmmword_1BD6441D0;
    outlined bridged method (pb) of @objc TUConversationLink.displayName.getter(a1, (SEL *)&selRef_address);
    v9 = MEMORY[0x1E0DEA968];
    if (v10)
    {
      v11 = String.init<A>(reflecting:)();
      v13 = v12;
    }
    else
    {
      v13 = 0xE300000000000000;
      v11 = 7104878;
    }
    *(_QWORD *)(v8 + 56) = v9;
    *(_QWORD *)(v8 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v8 + 32) = v11;
    *(_QWORD *)(v8 + 40) = v13;
    os_log(_:dso:log:type:_:)();
    OUTLINED_FUNCTION_2_1();
  }
  OUTLINED_FUNCTION_49_0();
}

uint64_t CNComposeRecipient.normalizedAddresses()()
{
  void *v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  uint64_t v34;
  uint64_t v35;

  if (!objc_msgSend(v0, sel_isGroup))
  {
    outlined bridged method (pb) of @objc TUConversationLink.displayName.getter(v0, (SEL *)&selRef_normalizedAddress);
    if (!v19)
      goto LABEL_36;
    v20 = v18;
    v21 = v19;
    swift_bridgeObjectRelease();
    v22 = HIBYTE(v21) & 0xF;
    if ((v21 & 0x2000000000000000) == 0)
      v22 = v20 & 0xFFFFFFFFFFFFLL;
    if (!v22)
    {
LABEL_36:
      v0 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
      v3 = v30;
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      v5 = v31;
      v1 = *(_QWORD *)(v31 + 16);
      v4 = v1 + 1;
      if (v1 < *(_QWORD *)(v31 + 24) >> 1)
      {
LABEL_37:
        *(_QWORD *)(v5 + 16) = v4;
        v32 = v5 + 16 * v1;
        *(_QWORD *)(v32 + 32) = v0;
        *(_QWORD *)(v32 + 40) = v3;
        return v5;
      }
LABEL_47:
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      v5 = v34;
      goto LABEL_37;
    }
    outlined bridged method (pb) of @objc TUConversationLink.displayName.getter(v0, (SEL *)&selRef_normalizedAddress);
    if (v24)
    {
      v25 = v23;
      v26 = v24;
      swift_bridgeObjectRetain();
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      v5 = v27;
      v28 = *(_QWORD *)(v27 + 16);
      if (v28 >= *(_QWORD *)(v27 + 24) >> 1)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v5 = v35;
      }
      *(_QWORD *)(v5 + 16) = v28 + 1;
      v29 = v5 + 16 * v28;
      *(_QWORD *)(v29 + 32) = v25;
      *(_QWORD *)(v29 + 40) = v26;
LABEL_35:
      swift_bridgeObjectRelease();
      return v5;
    }
    return MEMORY[0x1E0DEE9D8];
  }
  v2 = outlined bridged method (pb) of @objc CNComposeRecipient.children()(v0);
  if (v2)
  {
    v3 = v2;
    if (v2 >> 62)
      goto LABEL_42;
    v4 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v4)
    {
      while (v4 >= 1)
      {
        v1 = 0;
        v5 = MEMORY[0x1E0DEE9D8];
        while (1)
        {
          v6 = (v3 & 0xC000000000000001) != 0
             ? (id)MEMORY[0x1C3B73D18](v1, v3)
             : *(id *)(v3 + 8 * v1 + 32);
          v0 = v6;
          v7 = CNComposeRecipient.normalizedAddresses()();
          v8 = *(_QWORD *)(v7 + 16);
          v9 = *(_QWORD *)(v5 + 16);
          if (__OFADD__(v9, v8))
            break;
          v10 = v7;
          if (!swift_isUniquelyReferenced_nonNull_native() || v9 + v8 > *(_QWORD *)(v5 + 24) >> 1)
          {
            specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
            v5 = v11;
          }
          if (*(_QWORD *)(v10 + 16))
          {
            v12 = *(_QWORD *)(v5 + 16);
            if ((*(_QWORD *)(v5 + 24) >> 1) - v12 < v8)
              goto LABEL_40;
            v13 = v5 + 16 * v12 + 32;
            if (v10 + 32 < v13 + 16 * v8 && v13 < v10 + 32 + 16 * v8)
              goto LABEL_49;
            swift_arrayInitWithCopy();
            if (v8)
            {
              v15 = *(_QWORD *)(v5 + 16);
              v16 = __OFADD__(v15, v8);
              v17 = v15 + v8;
              if (v16)
                goto LABEL_41;
              *(_QWORD *)(v5 + 16) = v17;
            }
          }
          else if (v8)
          {
            goto LABEL_39;
          }
          ++v1;
          swift_bridgeObjectRelease();

          if (v4 == v1)
            goto LABEL_35;
        }
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        v4 = _CocoaArrayWrapper.endIndex.getter();
        if (!v4)
          goto LABEL_43;
      }
      __break(1u);
      goto LABEL_47;
    }
LABEL_43:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  __break(1u);
LABEL_49:
  result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t PeoplePickerViewController.addPossibleRecipient(_:)(void *a1)
{
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v8;

  swift_beginAccess();
  v2 = a1;
  specialized Set._Variant.insert(_:)(&v8, v2);
  v3 = v8;
  swift_endAccess();

  if (objc_msgSend(v2, sel_isGroup))
  {
    swift_bridgeObjectRetain();
    CNComposeRecipient.idsDestinations()();
    specialized Set.union<A>(_:)(v4);
    PeoplePickerViewController.idsGroupDestinations.setter(v5);
  }
  else
  {
    swift_beginAccess();
    swift_bridgeObjectRetain();
    CNComposeRecipient.idsDestinations()();
    specialized Set.union<A>(_:)(v6);
    PeoplePickerViewController.idsDestinations.setter();
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PassthroughSubject<(), Never>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(lazy protocol witness table cache variable for type PassthroughSubject<(), Never> and conformance PassthroughSubject<A, B>, &demangling cache variable for type metadata for PassthroughSubject<(), Never>);
  Subject<>.send()();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PassthroughSubject<(), Never>);
  return Subject<>.send()();
}

void PeoplePickerViewController.removePossibleRecipient(_:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  unint64_t v10;
  id v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;

  v2 = v1;
  swift_beginAccess();
  v4 = a1;
  v5 = swift_bridgeObjectRetain();
  specialized Sequence.first(where:)(v5, v4);
  v7 = v6;
  swift_bridgeObjectRelease();
  if (v7)
  {
    swift_beginAccess();
    v8 = (void *)specialized Set._Variant.remove(_:)(v7);
    swift_endAccess();

    v9 = objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_searchController), sel_recipients);
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for CNComposeRecipient);
    v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    v11 = v4;
    v12 = specialized Sequence.contains(where:)(v10, v11);
    swift_bridgeObjectRelease();
    if ((v12 & 1) != 0)
    {
LABEL_5:

      return;
    }
    v13 = *(_QWORD *)(v2 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_existingAddresses);
    swift_bridgeObjectRetain();
    outlined bridged method (pb) of @objc TUConversationLink.displayName.getter(v11, (SEL *)&selRef_address);
    if (v15)
    {
      specialized Set.contains(_:)(v14, v15, v13);
      v17 = v16;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v17 & 1) != 0)
        goto LABEL_5;
      CNComposeRecipient.idsDestinations()();
      v19 = v18;
      swift_beginAccess();
      specialized Set._subtract<A>(_:)(v19);
      swift_endAccess();

      swift_bridgeObjectRelease();
    }
    else
    {
      __break(1u);
    }
  }
}

void PeoplePickerViewController.updateLocalizedSenderIdentity(_:)(void *a1)
{
  _QWORD *v1;
  void (*v3)(void *);
  id v4;

  if (one-time initialization token for conversationKit != -1)
    swift_once();
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  v3 = *(void (**)(void *))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x2D0);
  v4 = a1;
  v3(a1);
  PeoplePickerViewController.updatePillView(senderIdentity:)(a1);
}

void PeoplePickerViewController.menu(for:)()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  id v20;
  void *v21;
  uint64_t v22;
  void *v23;
  id v24;
  void *v25;
  id v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  void *v41;
  void *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  void (*v52)(uint64_t, uint64_t);
  uint64_t v53;
  id v54;
  uint64_t v55;
  id v56;
  Swift::String v57;
  Swift::String_optional v58;
  Swift::String v59;
  Swift::String v60;
  Swift::String_optional v61;
  UIMenuElementSize v62;
  Swift::OpaquePointer v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  char *v71;
  __int128 v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  void *v77;
  uint64_t *v78;
  id v79;
  void *v80;
  __int128 v81;
  __int128 v82;
  uint64_t v83;
  UIMenuElementSize v84;
  uint64_t v85;
  UIImage_optional v86;
  Swift::String v87;

  v1 = type metadata accessor for UUID();
  v68 = *(_QWORD *)(v1 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_41();
  v67 = v3;
  v76 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_10_1();
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v64 - v12;
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v64 - v14;
  v65 = type metadata accessor for NSFastEnumerationIterator();
  v64 = *(_QWORD *)(v65 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = v0;
  v19 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_callProviderManager], sel_faceTimeProvider);
  v84 = MEMORY[0x1E0DEE9D8];
  v66 = v19;
  v20 = objc_msgSend(v19, sel_prioritizedSenderIdentities);
  NSOrderedSet.makeIterator()();

  OUTLINED_FUNCTION_80_5();
  if (v83)
  {
    v73 = 0x80000001BD674350;
    v72 = xmmword_1BD6441D0;
    v70 = v10;
    v71 = v6;
    v69 = v13;
    v74 = MEMORY[0x1E0DEE9B8] + 8;
    v75 = v18;
    while (1)
    {
      outlined init with take of Any(&v82, &v81);
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUSenderIdentity);
      if ((OUTLINED_FUNCTION_97() & 1) != 0)
        break;
LABEL_22:
      OUTLINED_FUNCTION_80_5();
      if (!v83)
        goto LABEL_23;
    }
    v21 = v80;
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIAction);
    v22 = OUTLINED_FUNCTION_15();
    v23 = v77;
    *(_QWORD *)(v22 + 16) = v77;
    *(_QWORD *)(v22 + 24) = v21;
    v78 = v23;
    v24 = v21;
    OUTLINED_FUNCTION_82();
    v25 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    v26 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
    OUTLINED_FUNCTION_0_3(0xD000000000000023, v73);
    OUTLINED_FUNCTION_45_4();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v27 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v27 + 16) = v72;
    v28 = OUTLINED_FUNCTION_2_2(v27, sel_localizedName);
    v29 = v1;
    v30 = v15;
    v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v33 = v32;

    *(_QWORD *)(v27 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v27 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v27 + 32) = v31;
    *(_QWORD *)(v27 + 40) = v33;
    v15 = v30;
    v1 = v29;
    v34 = String.init(format:_:)();
    v36 = v35;
    OUTLINED_FUNCTION_30_4();
    v37 = (void *)MEMORY[0x1C3B72E00](v34, v36);
    OUTLINED_FUNCTION_133();
    OUTLINED_FUNCTION_48_1(v25, sel_setTitle_);

    v79 = v24;
    v39 = OUTLINED_FUNCTION_2_2(v38, sel_UUID);
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    v40 = 1;
    __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v29);
    v41 = (void *)OUTLINED_FUNCTION_106_1(*v78);
    if (v41)
    {
      v42 = v41;
      v43 = objc_msgSend(v41, sel_UUID);

      v44 = (uint64_t)v69;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      v40 = 0;
      v46 = (uint64_t)v70;
      v45 = (uint64_t)v71;
    }
    else
    {
      v46 = (uint64_t)v70;
      v45 = (uint64_t)v71;
      v44 = (uint64_t)v69;
    }
    __swift_storeEnumTagSinglePayload(v44, v40, 1, v29);
    v47 = v45 + *(int *)(v76 + 48);
    OUTLINED_FUNCTION_87_0((uint64_t)v15, v45);
    OUTLINED_FUNCTION_87_0(v44, v47);
    OUTLINED_FUNCTION_59_0(v45);
    if (v48)
    {
      OUTLINED_FUNCTION_52_12(v44);
      OUTLINED_FUNCTION_52_12((uint64_t)v15);
      OUTLINED_FUNCTION_59_0(v47);
      if (v48)
      {
        OUTLINED_FUNCTION_52_12(v45);
LABEL_17:
        v53 = 1;
LABEL_19:
        objc_msgSend(v25, sel_setState_, v53);
        v54 = v25;
        MEMORY[0x1C3B7301C]();
        if (*(_QWORD *)((v84 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v84 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();

        v18 = v75;
        goto LABEL_22;
      }
    }
    else
    {
      OUTLINED_FUNCTION_87_0(v45, v46);
      OUTLINED_FUNCTION_59_0(v47);
      if (!v48)
      {
        v49 = v68;
        v50 = v67;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v68 + 32))(v67, v47, v29);
        lazy protocol witness table accessor for type NSAttributedStringKey and conformance NSAttributedStringKey(&lazy protocol witness table cache variable for type UUID and conformance UUID, 255, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
        v51 = dispatch thunk of static Equatable.== infix(_:_:)();
        v52 = *(void (**)(uint64_t, uint64_t))(v49 + 8);
        v52(v50, v29);
        outlined destroy of OS_dispatch_queue.SchedulerOptions?(v44, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v15, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        v52(v46, v29);
        outlined destroy of OS_dispatch_queue.SchedulerOptions?(v45, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        if ((v51 & 1) != 0)
          goto LABEL_17;
LABEL_18:
        v53 = 0;
        goto LABEL_19;
      }
      OUTLINED_FUNCTION_52_12(v44);
      OUTLINED_FUNCTION_52_12((uint64_t)v15);
      (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v46, v29);
    }
    outlined destroy of OS_dispatch_queue.SchedulerOptions?(v45, (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
    goto LABEL_18;
  }
LABEL_23:
  v55 = (*(uint64_t (**)(char *, uint64_t))(v64 + 8))(v18, v65);
  OUTLINED_FUNCTION_59(v55, &lazy cache variable for type metadata for UIMenu);
  v56 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v57._countAndFlagsBits = 0xD000000000000026;
  v87._object = (void *)0xE000000000000000;
  v57._object = (void *)0x80000001BD674320;
  v58.value._countAndFlagsBits = 0x61737265766E6F43;
  v58.value._object = (void *)0xEF74694B6E6F6974;
  v59._countAndFlagsBits = 0;
  v59._object = (void *)0xE000000000000000;
  v87._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v57, v58, (NSBundle)v56, v59, v87);

  v62 = v84;
  OUTLINED_FUNCTION_82();
  UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v60, v61, v86, (UIMenuIdentifier_optional)2, 0xFFFFFFFFFFFFFFFFLL, v62, v63);
  OUTLINED_FUNCTION_121((uint64_t)&v85);
  OUTLINED_FUNCTION_52_1();
}

void PeoplePickerViewController.providersChanged(for:)(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  if (one-time initialization token for conversationKit != -1)
    swift_once();
  static os_log_type_t.info.getter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v3 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v3 + 16) = xmmword_1BD645380;
  *(_QWORD *)(v3 + 56) = type metadata accessor for PeoplePickerViewController();
  lazy protocol witness table accessor for type NSAttributedStringKey and conformance NSAttributedStringKey(&lazy protocol witness table cache variable for type PeoplePickerViewController and conformance NSObject, v4, (void (*)(uint64_t))type metadata accessor for PeoplePickerViewController);
  *(_QWORD *)(v3 + 64) = v5;
  *(_QWORD *)(v3 + 32) = v1;
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for TUCallProviderManager);
  *(_QWORD *)(v3 + 96) = v6;
  lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop(lazy protocol witness table cache variable for type TUCallProviderManager and conformance NSObject, &lazy cache variable for type metadata for TUCallProviderManager);
  *(_QWORD *)(v3 + 104) = v7;
  *(_QWORD *)(v3 + 72) = a1;
  v8 = v1;
  OUTLINED_FUNCTION_64_7();
  OUTLINED_FUNCTION_56_11();
  OUTLINED_FUNCTION_133();
  PeoplePickerViewController.refreshLocalizedSenderIdentity()();
}

void PeoplePickerViewController.searchController(_:composeRecipientForAddress:)()
{
  PeoplePickerViewController.composeRecipient(for:)();
}

void PeoplePickerViewController.searchController(_:didAdd:)(uint64_t a1, void *a2)
{
  PeoplePickerViewController.addRecipient(_:)(a2);
}

void PeoplePickerViewController.searchController(_:didRemove:)(uint64_t a1, void *a2)
{
  PeoplePickerViewController.removeRecipient(_:)(a2);
}

void PeoplePickerViewController.searchController(_:willDisplayRowFor:)(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  char v5;

  OUTLINED_FUNCTION_2_0();
  v3 = a2;
  v4 = OUTLINED_FUNCTION_25_2();
  v5 = OUTLINED_FUNCTION_92_3(v4);
  OUTLINED_FUNCTION_53();
  if ((v5 & 1) == 0)
    PeoplePickerViewController.addPossibleRecipient(_:)(v3);
  OUTLINED_FUNCTION_9_0();
}

void PeoplePickerViewController.searchController(_:didEndDisplayingRowFor:)(uint64_t a1, void *a2)
{
  PeoplePickerViewController.removePossibleRecipient(_:)(a2);
}

char **PeoplePickerViewController.searchController(_:preferredRecipientFor:)(uint64_t a1, void *a2)
{
  char **v3;
  uint64_t v4;
  char v5;
  char **result;

  OUTLINED_FUNCTION_2_0();
  v3 = a2;
  v4 = OUTLINED_FUNCTION_25_2();
  v5 = OUTLINED_FUNCTION_92_3(v4);
  OUTLINED_FUNCTION_53();
  result = 0;
  if ((v5 & 1) != 0)
    return PeoplePickerViewController.preferredRecipient(for:)(v3);
  return result;
}

void PeoplePickerViewController.searchController(_:tintColorFor:)(uint64_t a1, void *a2)
{
  PeoplePickerViewController.tintColor(for:isChild:)(a2, 0);
}

void PeoplePickerViewController.searchController(_:presentationOptionsFor:)(uint64_t a1, void *a2)
{
  PeoplePickerViewController.presentationOptions(for:)(a2);
}

void PeoplePickerViewController.searchController(_:didTapTableAccessoryFor:)(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  id v10;
  void *v11;
  unsigned int v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  uint64_t v27;
  id v28;
  id v29;
  uint64_t v30;
  id v31;
  id v32;

  v3 = v2;
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  static os_log_type_t.info.getter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v5 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v5 + 16) = xmmword_1BD6441D0;
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for CNComposeRecipient);
  *(_QWORD *)(v5 + 56) = v6;
  lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop(&lazy protocol witness table cache variable for type CNComposeRecipient and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for CNComposeRecipient);
  *(_QWORD *)(v5 + 64) = v7;
  *(_QWORD *)(v5 + 32) = a2;
  v8 = a2;
  OUTLINED_FUNCTION_56_11();
  v9 = OUTLINED_FUNCTION_133();
  v10 = OUTLINED_FUNCTION_25_1(v9, sel_contact);
  if (v10)
  {
    v11 = v10;
    v12 = objc_msgSend(v10, sel_hasBeenPersisted);
    v13 = (void *)objc_opt_self();
    if (v12)
      v14 = OUTLINED_FUNCTION_53_0(v13, sel_viewControllerForContact_);
    else
      v14 = OUTLINED_FUNCTION_53_0(v13, sel_viewControllerForUnknownContact_);
  }
  else
  {
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for CNContact);
    OUTLINED_FUNCTION_118_3(v15, (SEL *)&selRef_address);
    @nonobjc CNContact.init(displayName:emailOrPhoneNumber:)(0, 0, v16, v17);
    v11 = v18;
    v19 = (void *)objc_opt_self();
    v14 = OUTLINED_FUNCTION_53_0(v19, sel_viewControllerForUnknownContact_);
  }
  v20 = v14;

  if (*(_QWORD *)(v3 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_currentConversation))
  {
    v21 = (void *)objc_opt_self();
    v22 = OUTLINED_FUNCTION_53_0(v21, sel_tu_contactStoreConfigurationForConversation_);
  }
  else
  {
    v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C972A0]), sel_init);
  }
  v32 = v22;
  OUTLINED_FUNCTION_40_3(v22, sel_setIncludeDonatedContacts_);
  v23 = OUTLINED_FUNCTION_40_3(v32, sel_setIncludeSuggestedContacts_);
  v24 = OUTLINED_FUNCTION_25_1((uint64_t)v23, sel_view);
  if (v24)
  {
    v25 = v24;
    v26 = objc_msgSend((id)objc_opt_self(), sel_systemBackgroundColor);
    objc_msgSend(v25, sel_setBackgroundColor_, v26);

    v28 = OUTLINED_FUNCTION_117_4(v27, sel_setAllowsEditing_);
    OUTLINED_FUNCTION_117_4((uint64_t)v28, sel_setAllowsActions_);
    v29 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97298]), sel_initWithConfiguration_, v32);
    objc_msgSend(v20, sel_setContactStore_, v29);

    v31 = OUTLINED_FUNCTION_123(v30, sel_navigationController);
    objc_msgSend(v31, sel_pushViewController_animated_, v20, 1);

  }
  else
  {
    __break(1u);
  }
}

void @nonobjc CNContact.init(displayName:emailOrPhoneNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  void *v7;
  id v8;

  if (!a2)
  {
    v6 = 0;
    if (a4)
      goto LABEL_3;
LABEL_5:
    v7 = 0;
    goto LABEL_6;
  }
  v6 = MEMORY[0x1C3B72E00]();
  OUTLINED_FUNCTION_133();
  if (!a4)
    goto LABEL_5;
LABEL_3:
  v7 = (void *)MEMORY[0x1C3B72E00](a3, a4);
  OUTLINED_FUNCTION_53();
LABEL_6:
  v8 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_contactWithDisplayName_emailOrPhoneNumber_, v6, v7);
  OUTLINED_FUNCTION_49_5();

  OUTLINED_FUNCTION_91();
}

void PeoplePickerViewController.didTapTextViewAccessoryButton(for:anchoredTo:)(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  NSObject *v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(id, uint64_t, uint64_t);
  uint64_t v18;

  v3 = v2;
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v5 = type metadata accessor for Logger();
  v6 = __swift_project_value_buffer(v5, (uint64_t)&static Logger.conversationKit);
  v7 = a2;
  v8 = v6;
  Logger.logObject.getter();
  v9 = OUTLINED_FUNCTION_12_0();
  if (os_log_type_enabled(v6, v9))
  {
    v10 = (uint8_t *)OUTLINED_FUNCTION_105();
    v11 = OUTLINED_FUNCTION_105();
    v18 = v11;
    *(_DWORD *)v10 = 136315138;
    OUTLINED_FUNCTION_59(v11, (unint64_t *)&lazy cache variable for type metadata for UIView);
    v12 = v7;
    v13 = String.init<A>(reflecting:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v13, v14, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v8, v9, "Showing contact picker from accessory button, anchorView: %s", v10, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_60();
  }

  if (*(_QWORD *)(v3 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_addButtonHandler))
  {
    v15 = *(_QWORD *)(v3 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_addButtonHandler + 8);
    v16 = OUTLINED_FUNCTION_15_6();
    v17 = *(void (**)(id, uint64_t, uint64_t))(v15 + 80);
    OUTLINED_FUNCTION_72_9();
    v17(v7, v16, v15);
    OUTLINED_FUNCTION_10();
  }
}

uint64_t PeoplePickerViewController.searchController(_:contextMenuConfigurationFor:)()
{
  return 0;
}

void PeoplePickerViewController.actionBar(_:selectedAction:)(uint64_t a1, void *a2, char a3)
{
  void *v3;
  char v4;
  uint64_t v7;
  id v8;

  switch((unint64_t)a2)
  {
    case 1uLL:
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      static os_log_type_t.default.getter();
      OUTLINED_FUNCTION_55_0();
      v4 = 0;
      goto LABEL_11;
    case 2uLL:
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      static os_log_type_t.default.getter();
      OUTLINED_FUNCTION_55_0();
      v4 = 1;
LABEL_11:
      PeoplePickerViewController.startCall(videoEnabled:)(v4);
      break;
    case 3uLL:
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      static os_log_type_t.default.getter();
      OUTLINED_FUNCTION_55_0();
      PeoplePickerViewController.addPeople()();
      break;
    case 4uLL:
      PeoplePickerViewController.handleShareLinkWithMessagesAction()();
      break;
    case 5uLL:
      PeoplePickerViewController.presentMessageComposeSheetWithActivity()();
      break;
    case 6uLL:
      objc_msgSend(v3, sel_cancelButtonTapped);
      break;
    default:
      v7 = one-time initialization token for conversationKit;
      v8 = a2;
      if (v7 != -1)
        swift_once();
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      PeoplePickerViewController.dialTelephonyCall(handle:rttType:)(a2, a3);
      outlined consume of PeoplePickerAction(a2);
      break;
  }
}

void PeoplePickerViewController.handleShareLinkWithMessagesAction()()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  unsigned int v6;
  void *v7;
  void *v8;
  unsigned __int8 v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_viewModel);
  swift_beginAccess();
  PeoplePickerViewController.reportIncompatibilityEvent(with:reason:)(*(_BYTE *)(v1 + 16), 2);
  PeoplePickerViewController.smsAccount.getter();
  v3 = v2;

  if (v3)
  {
    PeoplePickerViewController.smsAccount.getter();
    if (!v4)
    {
      __break(1u);
      goto LABEL_10;
    }
    v5 = v4;
    v6 = objc_msgSend(v4, sel_isSMSRelayCapable);

    if (v6)
    {
      PeoplePickerViewController.smsAccount.getter();
      if (v7)
      {
        v8 = v7;
        v9 = objc_msgSend(v7, sel_allowsSMSRelay);

        if ((v9 & 1) == 0)
        {
          v10 = swift_allocObject();
          swift_unknownObjectWeakInit();
          swift_retain();
          PeoplePickerViewController.showSMSRelayUpgradeAlert(withCompletion:)((uint64_t)partial apply for closure #1 in PeoplePickerViewController.handleShareLinkWithMessagesAction(), v10);
          swift_release_n();
          return;
        }
        goto LABEL_6;
      }
LABEL_10:
      __break(1u);
      return;
    }
  }
LABEL_6:
  PeoplePickerViewController.presentMessageComposeSheetWithConversationLink()();
}

uint64_t PeoplePickerViewController.presentMessageComposeSheetWithActivity()()
{
  uint64_t v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  _QWORD *v24;

  if (one-time initialization token for conversationKit != -1)
    goto LABEL_35;
  while (1)
  {
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_searchController), sel_recipients);
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for CNComposeRecipient);
    v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v2 >> 62)
    {
      swift_bridgeObjectRetain();
      v3 = _CocoaArrayWrapper.endIndex.getter();
    }
    else
    {
      v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
    }
    v24 = (_QWORD *)v0;
    if (!v3)
    {
      v5 = MEMORY[0x1E0DEE9D8];
LABEL_28:
      v17 = swift_bridgeObjectRelease_n();
      if ((*(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v24) + 0x360))(v17))
      {
        v19 = v18;
        ObjectType = swift_getObjectType();
        v21 = CNAutocompleteSearchController.messagesChatGUID.getter(ObjectType);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 48))(v5, v21, v22, ObjectType, v19);
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
      }
      return swift_bridgeObjectRelease();
    }
    if (v3 < 1)
      break;
    v4 = 0;
    v5 = MEMORY[0x1E0DEE9D8];
    while (1)
    {
      v6 = (v2 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C3B73D18](v4, v2) : *(id *)(v2 + 8 * v4 + 32);
      v7 = v6;
      v0 = CNComposeRecipient.normalizedAddresses()();

      v8 = *(_QWORD *)(v0 + 16);
      v9 = *(_QWORD *)(v5 + 16);
      if (__OFADD__(v9, v8))
        break;
      if (!swift_isUniquelyReferenced_nonNull_native() || v9 + v8 > *(_QWORD *)(v5 + 24) >> 1)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v5 = v10;
      }
      if (*(_QWORD *)(v0 + 16))
      {
        v11 = *(_QWORD *)(v5 + 16);
        if ((*(_QWORD *)(v5 + 24) >> 1) - v11 < v8)
          goto LABEL_33;
        v12 = v5 + 16 * v11 + 32;
        if (v0 + 32 < v12 + 16 * v8 && v12 < v0 + 32 + 16 * v8)
          goto LABEL_38;
        swift_arrayInitWithCopy();
        if (v8)
        {
          v14 = *(_QWORD *)(v5 + 16);
          v15 = __OFADD__(v14, v8);
          v16 = v14 + v8;
          if (v15)
            goto LABEL_34;
          *(_QWORD *)(v5 + 16) = v16;
        }
      }
      else if (v8)
      {
        goto LABEL_32;
      }
      swift_bridgeObjectRelease();
      if (v3 == ++v4)
        goto LABEL_28;
    }
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    swift_once();
  }
  __break(1u);
LABEL_38:
  result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void closure #1 in PeoplePickerViewController.handleShareLinkWithMessagesAction()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x1C3B752C0](v1);
  if (v2)
  {
    v3 = (void *)v2;
    PeoplePickerViewController.presentMessageComposeSheetWithConversationLink()();

  }
}

void PeoplePickerViewController.presentMessageComposeSheetWithConversationLink()()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  void (*v6)(_QWORD);
  _QWORD *v7;
  void *v8;
  void *v9;
  id v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  Class isa;
  void *v40;
  uint64_t v41;
  _QWORD *v42;
  void (*v43)(uint64_t);
  _QWORD *v44;
  char *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t aBlock;
  uint64_t v51;
  void (*v52)(uint64_t, void *, void *);
  void *v53;
  void (*v54)(void *, void *);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v1 = v0;
  if (one-time initialization token for conversationKit != -1)
    goto LABEL_22;
  while (1)
  {
    static os_log_type_t.default.getter();
    v2 = MEMORY[0x1E0DEE9D8];
    os_log(_:dso:log:type:_:)();
    v3 = OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_actionBar;
    v4 = *(_QWORD **)&v1[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_actionBar];
    v5 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    if (v4)
    {
      v6 = *(void (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & *v4) + 0x170);
      v7 = v4;
      v6(0);

    }
    v48 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v8 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_currentConversationLink];
    if (!v8)
    {
      v23 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_currentConversation];
      if (v23)
      {
        v24 = (void *)objc_opt_self();
        v25 = v23;
        v26 = objc_msgSend(v24, sel_sharedInstance);
        v27 = objc_msgSend(v26, sel_conversationManager);

        v54 = partial apply for closure #1 in PeoplePickerViewController.presentMessageComposeSheetWithConversationLink();
        v55 = v48;
        aBlock = MEMORY[0x1E0C809B0];
        v51 = 1107296256;
        v52 = thunk for @escaping @callee_guaranteed (@guaranteed ASCLockupRequest?, @guaranteed Error?) -> ();
        v53 = &block_descriptor_52;
        v28 = _Block_copy(&aBlock);
        swift_retain();
        swift_release();
        objc_msgSend(v27, sel_generateLinkForConversation_completionHandler_, v25, v28);
        swift_release();
        _Block_release(v28);

      }
      else
      {
        v29 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
        v30 = objc_msgSend(v29, sel_conversationManager);

        PeoplePickerViewController.currentRecipientHandlesWithFaceTimeAvailable()(v31, v32, v33, v34, v35, v36, v37, v38, v45, (uint64_t)v46, v47, v48, aBlock, v51, (uint64_t)v52, (uint64_t)v53, (uint64_t)v54, v55, v56,
          v57);
        type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
        lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop(&lazy protocol witness table cache variable for type TUHandle and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
        isa = Set._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        v54 = partial apply for closure #1 in PeoplePickerViewController.presentMessageComposeSheetWithConversationLink();
        v55 = v49;
        aBlock = MEMORY[0x1E0C809B0];
        v51 = 1107296256;
        v52 = thunk for @escaping @callee_guaranteed (@guaranteed ASCLockupRequest?, @guaranteed Error?) -> ();
        v53 = &block_descriptor_49;
        v40 = _Block_copy(&aBlock);
        swift_retain();
        swift_release();
        objc_msgSend(v30, sel_generateLinkWithInvitedMemberHandles_linkLifetimeScope_completionHandler_, isa, 0, v40);
        swift_release();
        _Block_release(v40);

      }
LABEL_26:
      v42 = *(_QWORD **)&v1[v3];
      if (v42)
      {
        v43 = *(void (**)(uint64_t))((*v5 & *v42) + 0x170);
        v44 = v42;
        v43(1);

      }
      return;
    }
    v47 = v3;
    v9 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_searchController];
    v46 = v8;
    v10 = objc_msgSend(v9, sel_recipients);
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for CNComposeRecipient);
    v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v11 >> 62)
    {
      swift_bridgeObjectRetain();
      v12 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v12)
      {
LABEL_24:
        swift_bridgeObjectRelease();
        v14 = MEMORY[0x1E0DEE9D8];
LABEL_25:
        v41 = *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_viewModel];
        swift_beginAccess();
        specialized PeoplePickerViewController.presentMessageComposeViewController(for:withRecipientHandles:shouldIgnoreEmails:delegate:)(v46, v14, *(_BYTE *)(v41 + 16) != 1, (uint64_t)v1, v1);

        swift_bridgeObjectRelease();
        swift_release();
        v3 = v47;
        goto LABEL_26;
      }
    }
    else
    {
      v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v12)
        goto LABEL_24;
    }
    aBlock = v2;
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    if (v12 < 0)
      break;
    v45 = v1;
    v13 = 0;
    v14 = aBlock;
    v1 = (char *)(v11 & 0xC000000000000001);
    while (v12 != v13)
    {
      if (v1)
        v15 = (id)MEMORY[0x1C3B73D18](v13, v11);
      else
        v15 = *(id *)(v11 + 8 * v13 + 32);
      v16 = v15;
      outlined bridged method (pb) of @objc TUConversationLink.displayName.getter(v15, (SEL *)&selRef_address);
      if (!v18)
        goto LABEL_30;
      v19 = v17;
      v20 = v18;

      aBlock = v14;
      v21 = *(_QWORD *)(v14 + 16);
      if (v21 >= *(_QWORD *)(v14 + 24) >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        v14 = aBlock;
      }
      ++v13;
      *(_QWORD *)(v14 + 16) = v21 + 1;
      v22 = v14 + 16 * v21;
      *(_QWORD *)(v22 + 32) = v19;
      *(_QWORD *)(v22 + 40) = v20;
      if (v12 == v13)
      {
        swift_bridgeObjectRelease();
        v1 = v45;
        v5 = (_QWORD *)MEMORY[0x1E0DEEDD8];
        goto LABEL_25;
      }
    }
    __break(1u);
LABEL_22:
    swift_once();
  }
  __break(1u);
LABEL_30:
  __break(1u);
}

void PeoplePickerViewController.showSMSRelayUpgradeAlert(withCompletion:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  Swift::String v9;
  Swift::String_optional v10;
  Swift::String v11;
  Swift::String v12;
  id v13;
  Swift::String v14;
  Swift::String_optional v15;
  Swift::String v16;
  Swift::String v17;
  id v18;
  Swift::String v19;
  Swift::String_optional v20;
  Swift::String v21;
  Swift::String v22;
  _QWORD *v23;
  id v24;
  id v25;
  id v26;
  Swift::String v27;
  Swift::String_optional v28;
  Swift::String v29;
  Swift::String v30;
  id v31;
  id v32;
  uint64_t v33;
  id v34;
  Swift::String v35;
  Swift::String v36;
  Swift::String v37;
  Swift::String v38;

  PeoplePickerViewController.smsAccount.getter();
  if (v5)
  {
    v6 = v5;
    v32 = v2;
    v33 = a1;
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIAlertController);
    v7 = (void *)objc_opt_self();
    v8 = objc_msgSend(v7, sel_conversationKit);
    v35._object = (void *)0xE000000000000000;
    v9._object = (void *)0x80000001BD674A10;
    v9._countAndFlagsBits = 0xD000000000000012;
    v10.value._countAndFlagsBits = 0x61737265766E6F43;
    v10.value._object = (void *)0xEF74694B6E6F6974;
    v11._countAndFlagsBits = 0;
    v11._object = (void *)0xE000000000000000;
    v35._countAndFlagsBits = 0;
    v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, v10, (NSBundle)v8, v11, v35);

    v13 = objc_msgSend(v7, (SEL)&selRef_setCornerRadius_ + 6);
    v14._countAndFlagsBits = 0xD00000000000001ALL;
    v36._object = (void *)0xE000000000000000;
    v14._object = (void *)0x80000001BD674A30;
    v15.value._countAndFlagsBits = 0x61737265766E6F43;
    v15.value._object = (void *)0xEF74694B6E6F6974;
    v16._countAndFlagsBits = 0;
    v16._object = (void *)0xE000000000000000;
    v36._countAndFlagsBits = 0;
    v17 = NSLocalizedString(_:tableName:bundle:value:comment:)(v14, v15, (NSBundle)v13, v16, v36);

    v34 = @nonobjc UIAlertController.__allocating_init(title:message:preferredStyle:)(v12._countAndFlagsBits, (uint64_t)v12._object, v17._countAndFlagsBits, (uint64_t)v17._object, 1);
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIAlertAction);
    v18 = objc_msgSend(v7, sel_conversationKit);
    v37._object = (void *)0xE000000000000000;
    v19._countAndFlagsBits = 0x4E4F5F4E525554;
    v19._object = (void *)0xE700000000000000;
    v20.value._countAndFlagsBits = 0x61737265766E6F43;
    v20.value._object = (void *)0xEF74694B6E6F6974;
    v21._countAndFlagsBits = 0;
    v21._object = (void *)0xE000000000000000;
    v37._countAndFlagsBits = 0;
    v22 = NSLocalizedString(_:tableName:bundle:value:comment:)(v19, v20, (NSBundle)v18, v21, v37);

    v23 = (_QWORD *)swift_allocObject();
    v23[2] = v6;
    v23[3] = v33;
    v23[4] = a2;
    v24 = v6;
    swift_retain();
    v25 = @nonobjc UIAlertAction.__allocating_init(title:style:handler:)(v22._countAndFlagsBits, (uint64_t)v22._object, 0, (uint64_t)partial apply for closure #1 in PeoplePickerViewController.showSMSRelayUpgradeAlert(withCompletion:));
    objc_msgSend(v34, sel_addAction_, v25);

    v26 = objc_msgSend(v7, sel_conversationKit);
    v38._object = (void *)0xE000000000000000;
    v27._countAndFlagsBits = 0x4C45434E4143;
    v27._object = (void *)0xE600000000000000;
    v28.value._countAndFlagsBits = 0x61737265766E6F43;
    v28.value._object = (void *)0xEF74694B6E6F6974;
    v29._countAndFlagsBits = 0;
    v29._object = (void *)0xE000000000000000;
    v38._countAndFlagsBits = 0;
    v30 = NSLocalizedString(_:tableName:bundle:value:comment:)(v27, v28, (NSBundle)v26, v29, v38);

    v31 = @nonobjc UIAlertAction.__allocating_init(title:style:handler:)(v30._countAndFlagsBits, (uint64_t)v30._object, 1, 0);
    objc_msgSend(v34, sel_addAction_, v31);

    objc_msgSend(v32, sel_presentViewController_animated_completion_, v34, 1, 0);
  }
  else
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
  }
}

void closure #1 in PeoplePickerViewController.presentMessageComposeSheetWithConversationLink()(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  uint64_t v27;
  _QWORD aBlock[6];

  v6 = type metadata accessor for DispatchWorkItemFlags();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v14 = MEMORY[0x1C3B752C0](a3 + 16);
  if (v14)
  {
    v15 = (void *)v14;
    if (a2)
    {
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_1BD6441D0;
      aBlock[0] = a2;
      v17 = a2;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
      v18 = String.init<A>(reflecting:)();
      v20 = v19;
      *(_QWORD *)(v16 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v16 + 64) = lazy protocol witness table accessor for type String and conformance String();
      *(_QWORD *)(v16 + 32) = v18;
      *(_QWORD *)(v16 + 40) = v20;
      os_log(_:dso:log:type:_:)();

      swift_bridgeObjectRelease();
    }
    else if (a1)
    {
      v21 = a1;
      PeoplePickerViewController.currentConversationLink.setter((uint64_t)a1);
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
      v27 = static OS_dispatch_queue.main.getter();
      v22 = swift_allocObject();
      *(_QWORD *)(v22 + 16) = v15;
      *(_QWORD *)(v22 + 24) = v21;
      aBlock[4] = partial apply for closure #1 in closure #1 in PeoplePickerViewController.presentMessageComposeSheetWithConversationLink();
      aBlock[5] = v22;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
      aBlock[3] = &block_descriptor_58;
      v23 = _Block_copy(aBlock);
      v26 = v21;
      v25 = v15;
      swift_release();
      static DispatchQoS.unspecified.getter();
      aBlock[0] = MEMORY[0x1E0DEE9D8];
      lazy protocol witness table accessor for type NSAttributedStringKey and conformance NSAttributedStringKey(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, 255, (void (*)(uint64_t))MEMORY[0x1E0DEF4F8]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
      lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
      dispatch thunk of SetAlgebra.init<A>(_:)();
      v24 = (void *)v27;
      MEMORY[0x1C3B7361C](0, v13, v9, v23);
      _Block_release(v23);

      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    }
    else
    {
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      static os_log_type_t.error.getter();
      os_log(_:dso:log:type:_:)();

    }
  }
}

void closure #1 in closure #1 in PeoplePickerViewController.presentMessageComposeSheetWithConversationLink()(char *a1, void *a2)
{
  char *v3;
  id v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  char *v18;
  uint64_t v19;

  v3 = a1;
  v4 = objc_msgSend(*(id *)&a1[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_searchController], sel_recipients);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for CNComposeRecipient);
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v5 >> 62)
    goto LABEL_15;
  v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v6)
  {
    while (1)
    {
      v19 = MEMORY[0x1E0DEE9D8];
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      if (v6 < 0)
        break;
      v17 = a2;
      v18 = v3;
      a2 = 0;
      v7 = v19;
      v3 = (char *)(v5 & 0xC000000000000001);
      while ((void *)v6 != a2)
      {
        if (v3)
          v8 = (id)MEMORY[0x1C3B73D18](a2, v5);
        else
          v8 = *(id *)(v5 + 8 * (_QWORD)a2 + 32);
        v9 = v8;
        outlined bridged method (pb) of @objc TUConversationLink.displayName.getter(v8, (SEL *)&selRef_address);
        if (!v11)
          goto LABEL_19;
        v12 = v10;
        v13 = v11;

        v14 = *(_QWORD *)(v19 + 16);
        if (v14 >= *(_QWORD *)(v19 + 24) >> 1)
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        a2 = (char *)a2 + 1;
        *(_QWORD *)(v19 + 16) = v14 + 1;
        v15 = v19 + 16 * v14;
        *(_QWORD *)(v15 + 32) = v12;
        *(_QWORD *)(v15 + 40) = v13;
        if ((void *)v6 == a2)
        {
          swift_bridgeObjectRelease();
          a2 = v17;
          v3 = v18;
          goto LABEL_17;
        }
      }
      __break(1u);
LABEL_15:
      swift_bridgeObjectRetain();
      v6 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v6)
        goto LABEL_16;
    }
    __break(1u);
LABEL_19:
    __break(1u);
  }
  else
  {
LABEL_16:
    swift_bridgeObjectRelease();
    v7 = MEMORY[0x1E0DEE9D8];
LABEL_17:
    v16 = *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_viewModel];
    swift_beginAccess();
    specialized PeoplePickerViewController.presentMessageComposeViewController(for:withRecipientHandles:shouldIgnoreEmails:delegate:)(a2, v7, *(_BYTE *)(v16 + 16) != 1, (uint64_t)v3, v3);
    swift_bridgeObjectRelease();
  }
}

void PeoplePickerViewController.currentRecipientHandlesWithFaceTimeAvailable()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  char *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t i;
  id v25;
  void *v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  OUTLINED_FUNCTION_59((uint64_t)objc_msgSend(*(id *)&v20[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_searchController], sel_recipients), (unint64_t *)&lazy cache variable for type metadata for CNComposeRecipient);
  OUTLINED_FUNCTION_25_28();
  OUTLINED_FUNCTION_123_0();
  v22 = specialized _ArrayProtocol.filter(_:)(v21, v20);
  v38 = MEMORY[0x1E0DEE9D8];
  if (!(v22 >> 62))
  {
    v23 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
    OUTLINED_FUNCTION_124();
    if (v23)
      goto LABEL_3;
LABEL_15:
    OUTLINED_FUNCTION_13_3();
    v30 = MEMORY[0x1E0DEE9D8];
LABEL_16:
    OUTLINED_FUNCTION_13_3();
    specialized Set.init<A>(_:)(v30, v31, v32, v33, v34, v35, v36, v37, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
      a20);
    return;
  }
  OUTLINED_FUNCTION_124();
  v23 = OUTLINED_FUNCTION_25_3();
  if (!v23)
    goto LABEL_15;
LABEL_3:
  if (v23 >= 1)
  {
    for (i = 0; i != v23; ++i)
    {
      if ((v22 & 0xC000000000000001) != 0)
        v25 = (id)MEMORY[0x1C3B73D18](i, v22);
      else
        v25 = *(id *)(v22 + 8 * i + 32);
      v26 = v25;
      CNComposeRecipient.tuHandle.getter((uint64_t)v25);
      v28 = v27;
      v29 = (id)TUNormalizedHandleForTUHandle();

      if (v29)
      {
        MEMORY[0x1C3B7301C]();
        if (*(_QWORD *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
    }
    OUTLINED_FUNCTION_13_3();
    v30 = v38;
    goto LABEL_16;
  }
  __break(1u);
}

void PeoplePickerViewController.currentRecipientsWithFaceTimeAvailable()()
{
  char *v0;
  char *v1;
  unint64_t v2;
  void *v3;
  id v4;

  OUTLINED_FUNCTION_59((uint64_t)objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_searchController], sel_recipients), (unint64_t *)&lazy cache variable for type metadata for CNComposeRecipient);
  OUTLINED_FUNCTION_25_28();
  OUTLINED_FUNCTION_123_0();
  v1 = v0;
  v2 = OUTLINED_FUNCTION_105_0();
  specialized _ArrayProtocol.filter(_:)(v2, v3);
  v4 = OUTLINED_FUNCTION_64_7();
  OUTLINED_FUNCTION_81_8(v4);
  OUTLINED_FUNCTION_16_27();
  OUTLINED_FUNCTION_43_1();
}

void PeoplePickerViewController.currentRecipientsWithFaceTimeUnvailable()()
{
  char *v0;
  char *v1;
  unint64_t v2;
  void *v3;
  id v4;

  OUTLINED_FUNCTION_59((uint64_t)objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_searchController], sel_recipients), (unint64_t *)&lazy cache variable for type metadata for CNComposeRecipient);
  OUTLINED_FUNCTION_25_28();
  OUTLINED_FUNCTION_123_0();
  v1 = v0;
  v2 = OUTLINED_FUNCTION_105_0();
  specialized _ArrayProtocol.filter(_:)(v2, v3);
  v4 = OUTLINED_FUNCTION_64_7();
  OUTLINED_FUNCTION_81_8(v4);
  OUTLINED_FUNCTION_16_27();
  OUTLINED_FUNCTION_43_1();
}

Swift::Void __swiftcall PeoplePickerViewController.messageComposeViewController(_:didFinishWith:)(MFMessageComposeViewController *_, MessageComposeResult didFinishWith)
{
  -[MFMessageComposeViewController dismissViewControllerAnimated:completion:](_, sel_dismissViewControllerAnimated_completion_, 1, 0);
  PeoplePickerViewController.handleMessageComposeCompletion(withResult:)(didFinishWith);
}

void PeoplePickerViewController.handleMessageComposeCompletion(withResult:)(uint64_t a1)
{
  uint64_t v1;

  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_style))
  {
    if (*(_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_style) == 1 && a1 == 1)
      PeoplePickerViewController.addPeople()();
  }
  else
  {
    PeoplePickerViewController.handleMessageComposeCompletionForInviteFlow(withResult:)(a1);
  }
}

void PeoplePickerViewController.handleMessageComposeCompletionForInviteFlow(withResult:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  void *v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  void *v16;
  void *v17;
  Swift::String v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t ObjectType;
  id v34;
  _QWORD aBlock[6];

  v2 = v1;
  v3 = *(void **)((char *)v1 + OBJC_IVAR____TtC15ConversationKit26PeoplePickerViewController_currentConversationLink);
  if (v3)
  {
    if (a1 != 1)
    {
      v19 = (void *)objc_opt_self();
      v20 = v3;
      v21 = objc_msgSend(v19, sel_sharedInstance);
      v22 = objc_msgSend(v21, sel_conversationManager);

      v23 = swift_allocObject();
      *(_QWORD *)(v23 + 16) = v20;
      aBlock[4] = partial apply for closure #1 in PeoplePickerViewController.handleMessageComposeCompletionForInviteFlow(withResult:);
      aBlock[5] = v23;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = thunk for @escaping @callee_guaranteed (@unowned Bool, @guaranteed Error?) -> ();
      aBlock[3] = &block_descriptor_34;
      v24 = _Block_copy(aBlock);
      v25 = v20;
      swift_release();
      objc_msgSend(v22, sel_invalidateLink_completionHandler_, v25, v24);
      _Block_release(v24);

      PeoplePickerViewController.currentConversationLink.setter(0);
      return;
    }
    v34 = v3;
    PeoplePickerViewController.currentRecipientsWithFaceTimeUnvailable()();
    v5 = v4;
    PeoplePickerViewController.currentRecipientsWithFaceTimeAvailable()();
    v7 = v6;
    if (v5 >> 62)
    {
      swift_bridgeObjectRetain();
      v8 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      v8 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    if (v8 >= 1)
    {
      if (v7 >> 62)
      {
        swift_bridgeObjectRetain();
        v30 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v30 == 1)
        {
          swift_bridgeObjectRetain();
          if (!_CocoaArrayWrapper.endIndex.getter())
          {
            swift_bridgeObjectRelease();
LABEL_18:
            swift_bridgeObjectRelease();
            if (one-time initialization token for conversationKit != -1)
              swift_once();
            static os_log_type_t.error.getter();
            __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
            v26 = swift_allocObject();
            *(_OWORD *)(v26 + 16) = xmmword_1BD6441D0;
            aBlock[0] = v7;
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [PickablePerson]);
            v27 = String.init<A>(reflecting:)();
            v29 = v28;
            *(_QWORD *)(v26 + 56) = MEMORY[0x1E0DEA968];
            *(_QWORD *)(v26 + 64) = lazy protocol witness table accessor for type String and conformance String();
            *(_QWORD *)(v26 + 32) = v27;
            *(_QWORD *)(v26 + 40) = v29;
            os_log(_:dso:log:type:_:)();
            swift_bridgeObjectRelease();

            return;
          }
LABEL_9:
          specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v7 & 0xC000000000000001) == 0, v7);
          if ((v7 & 0xC000000000000001) != 0)
            v9 = (char *)MEMORY[0x1C3B73D18](0, v7);
          else
            v9 = (char *)*(id *)(v7 + 32);
          v10 = v9;
          swift_bridgeObjectRelease();
          v11 = *(_QWORD *)&v10[OBJC_IVAR____TtC15ConversationKit14PickablePerson_address];
          v12 = *(_QWORD *)&v10[OBJC_IVAR____TtC15ConversationKit14PickablePerson_address + 8];
          swift_bridgeObjectRetain();
          v13 = (void *)MEMORY[0x1C3B72E00](v11, v12);
          swift_bridgeObjectRelease();
          v14 = (id)TUCopyIDSCanonicalAddressForDestinationID();

          if (v14)
          {
            v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            v17 = v16;

            v18._countAndFlagsBits = v15;
            v18._object = v17;
            PeoplePickerViewModel.isWebCapableAvailable(for:)(v18);
          }

          goto LABEL_18;
        }
      }
      else if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10) == 1)
      {
        swift_bridgeObjectRetain();
        goto LABEL_9;
      }
    }
    if ((*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v2) + 0x360))())
    {
      v32 = v31;
      ObjectType = swift_getObjectType();
      (*(void (**)(id, unint64_t, unint64_t, _QWORD, uint64_t, uint64_t))(v32 + 56))(v34, v5, v7, 0, ObjectType, v32);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }

  }
  else
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.error.getter();
    os_log(_:dso:log:type:_:)();
  }
}

void closure #1 in PeoplePickerViewController.handleMessageComposeCompletionForInviteFlow(withResult:)(int a1, id a2, void *a3)
{
  id v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;

  if (a2)
  {
    v5 = a2;
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1BD645380;
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationLink);
    v7 = a3;
    v8 = String.init<A>(reflecting:)();
    v10 = v9;
    v11 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v6 + 56) = MEMORY[0x1E0DEA968];
    v12 = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v6 + 64) = v12;
    *(_QWORD *)(v6 + 32) = v8;
    *(_QWORD *)(v6 + 40) = v10;
    v13 = a2;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
    v14 = String.init<A>(reflecting:)();
    *(_QWORD *)(v6 + 96) = v11;
    *(_QWORD *)(v6 + 104) = v12;
    *(_QWORD *)(v6 + 72) = v14;
    *(_QWORD *)(v6 + 80) = v15;
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();

  }
}

void @nonobjc CNComposeRecipient.init(contact:address:kind:)(void *a1, uint64_t a2, uint64_t a3)
{
  void *v4;
  void *v5;
  SEL v6;

  if (a3)
  {
    v4 = (void *)MEMORY[0x1C3B72E00](a2, a3);
    OUTLINED_FUNCTION_133();
  }
  else
  {
    v4 = 0;
  }
  v5 = (void *)OUTLINED_FUNCTION_114_3();
  objc_msgSend(v5, v6);

  OUTLINED_FUNCTION_91();
}

uint64_t type metadata accessor for PeoplePickerViewController()
{
  return objc_opt_self();
}

uint64_t sub_1BD12DD48()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void partial apply for closure #1 in PeoplePickerViewController.init(style:existingAddresses:currentConversation:stagedActivity:setPreventsApplicationTerminationWhenModal:)(uint64_t a1)
{
  uint64_t v1;

  closure #1 in PeoplePickerViewController.init(style:existingAddresses:currentConversation:stagedActivity:setPreventsApplicationTerminationWhenModal:)(a1, v1);
}

void partial apply for closure #2 in PeoplePickerViewController.init(style:existingAddresses:currentConversation:stagedActivity:setPreventsApplicationTerminationWhenModal:)()
{
  uint64_t v0;

  closure #1 in DestinationQueryController.init(idsLookupManager:)(v0, PeoplePickerViewController.scheduleIDSQuery());
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed () -> ()(uint64_t a1)
{
  uint64_t v1;

  return thunk for @escaping @callee_guaranteed () -> ()(a1, *(uint64_t (**)(void))(v1 + 16));
}

void partial apply for closure #3 in PeoplePickerViewController.init(style:existingAddresses:currentConversation:stagedActivity:setPreventsApplicationTerminationWhenModal:)()
{
  uint64_t v0;

  closure #1 in DestinationQueryController.init(idsLookupManager:)(v0, PeoplePickerViewController.scheduleIDSQueryForGroups());
}

void partial apply for closure #4 in PeoplePickerViewController.init(style:existingAddresses:currentConversation:stagedActivity:setPreventsApplicationTerminationWhenModal:)()
{
  uint64_t v0;

  closure #1 in DestinationQueryController.init(idsLookupManager:)(v0, PeoplePickerViewController.scheduleIDSCachedQuery());
}

uint64_t sub_1BD12DDDC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t specialized MutableCollection<>._insertionSort(within:sortedEnd:by:)(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 16 * a3;
    while (2)
    {
      v9 = (uint64_t *)(v7 + 16 * v4);
      v10 = *v9;
      v11 = v9[1];
      v12 = v6;
      v13 = (_QWORD *)v8;
      do
      {
        result = *(v13 - 2);
        if (result == v10 && *(v13 - 1) == v11)
          break;
        result = _stringCompareWithSmolCheck(_:_:expecting:)();
        if ((result & 1) == 0)
          break;
        if (!v7)
        {
          __break(1u);
          return result;
        }
        v10 = *v13;
        v11 = v13[1];
        *(_OWORD *)v13 = *((_OWORD *)v13 - 1);
        *(v13 - 1) = v11;
        *(v13 - 2) = v10;
        v13 -= 2;
        ++v12;
      }
      while (v4 != v12);
      ++v4;
      v8 += 16;
      if (v4 != a2)
        continue;
      break;
    }
  }
  return result;
}

{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v12 = result;
  if (a3 != a2)
  {
    v4 = a3;
    v5 = *a4;
    lazy protocol witness table accessor for type String and conformance String();
    v6 = (_QWORD *)(v5 + 16 * v4);
    while (2)
    {
      v7 = v12;
      v8 = v6;
      do
      {
        result = StringProtocol.localizedStandardCompare<A>(_:)();
        if (result != -1)
          break;
        if (!v5)
        {
          __break(1u);
          return result;
        }
        v9 = *v8;
        v10 = v8[1];
        *(_OWORD *)v8 = *((_OWORD *)v8 - 1);
        *(v8 - 1) = v10;
        *(v8 - 2) = v9;
        v8 -= 2;
        ++v7;
      }
      while (v4 != v7);
      ++v4;
      v6 += 2;
      if (v4 != a2)
        continue;
      break;
    }
  }
  return result;
}

{
  uint64_t v4;
  _BYTE *v5;
  unsigned int v6;
  uint64_t v7;
  _BYTE *v8;
  unsigned int v9;

  if (a3 != a2)
  {
    v4 = *a4;
    v5 = (_BYTE *)(*a4 + a3);
    while (2)
    {
      v6 = *(unsigned __int8 *)(v4 + a3);
      v7 = result;
      v8 = v5;
      do
      {
        v9 = *(v8 - 1);
        if (v6 >= v9)
          break;
        if (!v4)
        {
          __break(1u);
          return result;
        }
        *v8 = v9;
        *--v8 = v6;
        ++v7;
      }
      while (a3 != v7);
      ++a3;
      ++v5;
      if (a3 != a2)
        continue;
      break;
    }
  }
  return result;
}

{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 16 * a3;
    while (2)
    {
      v9 = (uint64_t *)(v7 + 16 * v4);
      result = *v9;
      v10 = v9[1];
      v11 = v6;
      v12 = (uint64_t *)v8;
      do
      {
        if (result == *(v12 - 2) && v10 == *(v12 - 1))
          break;
        result = _stringCompareWithSmolCheck(_:_:expecting:)();
        if ((result & 1) == 0)
          break;
        if (!v7)
        {
          __break(1u);
          return result;
        }
        result = *v12;
        v10 = v12[1];
        *(_OWORD *)v12 = *((_OWORD *)v12 - 1);
        *(v12 - 1) = v10;
        *(v12 - 2) = result;
        v12 -= 2;
        ++v11;
      }
      while (v4 != v11);
      ++v4;
      v8 += 16;
      if (v4 != a2)
        continue;
      break;
    }
  }
  return result;
}

{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 40 * a3 + 24;
    while (2)
    {
      v9 = v7 + 40 * v4;
      result = *(_QWORD *)(v9 + 16);
      v10 = *(_QWORD *)(v9 + 24);
      v11 = v6;
      v12 = v8;
      do
      {
        if (result == *(_QWORD *)(v12 - 48) && v10 == *(_QWORD *)(v12 - 40))
          break;
        result = _stringCompareWithSmolCheck(_:_:expecting:)();
        if ((result & 1) == 0)
          break;
        if (!v7)
        {
          __break(1u);
          return result;
        }
        v14 = v12 - 24;
        v15 = *(_OWORD *)v12;
        v16 = *(_QWORD *)(v12 - 32);
        v18 = *(_OWORD *)(v12 - 64);
        v17 = *(_OWORD *)(v12 - 48);
        *(_OWORD *)(v12 - 40) = *(_OWORD *)v12;
        v12 -= 40;
        v19 = *(_QWORD *)(v12 + 16);
        v20 = *(_QWORD *)(v12 + 24);
        result = *(_QWORD *)(v12 + 32);
        *(_OWORD *)v14 = v18;
        *(_OWORD *)(v14 + 16) = v17;
        *(_QWORD *)(v14 + 32) = v16;
        *(_QWORD *)(v12 - 24) = v19;
        *(_QWORD *)(v12 - 16) = v20;
        *(_QWORD *)(v12 - 8) = result;
        v10 = v15;
        ++v11;
      }
      while (v4 != v11);
      ++v4;
      v8 += 40;
      if (v4 != a2)
        continue;
      break;
    }
  }
  return result;
}

uint64_t specialized _merge<A>(low:mid:high:buffer:by:)(char *a1, char *a2, unint64_t a3, char *a4)
{
  char *v4;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  BOOL v14;
  char *v15;
  char *v18;
  char *v19;
  char *v20;
  BOOL v21;
  BOOL v22;
  BOOL v23;

  v4 = a4;
  v6 = a2;
  v7 = a1;
  v8 = a2 - a1;
  v9 = (a2 - a1) / 16;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 16;
  if (v9 >= v11)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(a2, (uint64_t)(a3 - (_QWORD)a2) / 16, a4);
    v12 = (unint64_t)&v4[16 * v11];
    if (v7 >= v6 || v10 < 16)
      goto LABEL_47;
    v18 = (char *)(a3 - 16);
    while (1)
    {
      v19 = v18 + 16;
      v20 = (char *)(v12 - 16);
      v21 = *((_QWORD *)v6 - 2) == *(_QWORD *)(v12 - 16) && *((_QWORD *)v6 - 1) == *(_QWORD *)(v12 - 8);
      if (v21 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
      {
        v23 = v19 != (char *)v12 || (unint64_t)v18 >= v12;
        v12 -= 16;
        if (!v23)
          goto LABEL_43;
      }
      else
      {
        v22 = v19 != v6 || v18 >= v6;
        v20 = v6 - 16;
        v6 -= 16;
        if (!v22)
          goto LABEL_43;
      }
      *(_OWORD *)v18 = *(_OWORD *)v20;
LABEL_43:
      v18 -= 16;
      if (v6 <= v7 || v12 <= (unint64_t)v4)
        goto LABEL_47;
    }
  }
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, (a2 - a1) / 16, a4);
  v12 = (unint64_t)&v4[16 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 16)
  {
    while (1)
    {
      v14 = *(_QWORD *)v4 == *(_QWORD *)v6 && *((_QWORD *)v4 + 1) == *((_QWORD *)v6 + 1);
      if (!v14 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        break;
      v15 = v4;
      v14 = v7 == v4;
      v4 += 16;
      if (!v14)
        goto LABEL_15;
LABEL_16:
      v7 += 16;
      if ((unint64_t)v4 >= v12 || (unint64_t)v6 >= a3)
        goto LABEL_21;
    }
    v15 = v6;
    v14 = v7 == v6;
    v6 += 16;
    if (v14)
      goto LABEL_16;
LABEL_15:
    *(_OWORD *)v7 = *(_OWORD *)v15;
    goto LABEL_16;
  }
LABEL_21:
  v6 = v7;
LABEL_47:
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(v4, (uint64_t)(v12 - (_QWORD)v4) / 16, v6);
  return 1;
}

{
  char *v4;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v16;
  BOOL v17;
  char *v19;
  char *v20;
  char *v21;
  BOOL v22;
  BOOL v24;

  v4 = a4;
  v6 = a2;
  v7 = a1;
  v8 = a2 - a1;
  v9 = (a2 - a1) / 16;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 16;
  if (v9 >= v11)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(a2, (uint64_t)(a3 - (_QWORD)a2) / 16, a4);
    v12 = &v4[16 * v11];
    if (v7 >= v6 || v10 < 16)
      goto LABEL_13;
    lazy protocol witness table accessor for type String and conformance String();
    v19 = (char *)(a3 - 16);
    while (1)
    {
      v20 = v19 + 16;
      v21 = v6 - 16;
      if (StringProtocol.localizedStandardCompare<A>(_:)() == -1)
      {
        v24 = v20 != v6 || v19 >= v6;
        v6 -= 16;
        if (!v24)
          goto LABEL_33;
      }
      else
      {
        v22 = v20 != v12 || v19 >= v12;
        v21 = v12 - 16;
        v12 -= 16;
        if (!v22)
          goto LABEL_33;
      }
      *(_OWORD *)v19 = *(_OWORD *)v21;
LABEL_33:
      v19 -= 16;
      if (v6 <= v7 || v12 <= v4)
        goto LABEL_13;
    }
  }
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, (a2 - a1) / 16, a4);
  v12 = &v4[16 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 16)
  {
    lazy protocol witness table accessor for type String and conformance String();
    while (StringProtocol.localizedStandardCompare<A>(_:)() != -1)
    {
      v16 = v4;
      v17 = v7 == v4;
      v4 += 16;
      if (!v17)
        goto LABEL_16;
LABEL_17:
      v7 += 16;
      if (v4 >= v12 || (unint64_t)v6 >= a3)
        goto LABEL_7;
    }
    v16 = v6;
    v17 = v7 == v6;
    v6 += 16;
    if (v17)
      goto LABEL_17;
LABEL_16:
    *(_OWORD *)v7 = *(_OWORD *)v16;
    goto LABEL_17;
  }
LABEL_7:
  v6 = v7;
LABEL_13:
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(v4, (v12 - v4) / 16, v6);
  return 1;
}

{
  char *v4;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  BOOL v14;
  char *v15;
  char *v18;
  char *v19;
  char *v20;
  BOOL v21;
  BOOL v22;
  BOOL v23;

  v4 = a4;
  v6 = a2;
  v7 = a1;
  v8 = a2 - a1;
  v9 = (a2 - a1) / 16;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 16;
  if (v9 >= v11)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(a2, (uint64_t)(a3 - (_QWORD)a2) / 16, a4);
    v12 = (unint64_t)&v4[16 * v11];
    if (v7 >= v6 || v10 < 16)
      goto LABEL_47;
    v18 = (char *)(a3 - 16);
    while (1)
    {
      v19 = v18 + 16;
      v20 = (char *)(v12 - 16);
      v21 = *(_QWORD *)(v12 - 16) == *((_QWORD *)v6 - 2) && *(_QWORD *)(v12 - 8) == *((_QWORD *)v6 - 1);
      if (v21 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
      {
        v23 = v19 != (char *)v12 || (unint64_t)v18 >= v12;
        v12 -= 16;
        if (!v23)
          goto LABEL_43;
      }
      else
      {
        v22 = v19 != v6 || v18 >= v6;
        v20 = v6 - 16;
        v6 -= 16;
        if (!v22)
          goto LABEL_43;
      }
      *(_OWORD *)v18 = *(_OWORD *)v20;
LABEL_43:
      v18 -= 16;
      if (v6 <= v7 || v12 <= (unint64_t)v4)
        goto LABEL_47;
    }
  }
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, (a2 - a1) / 16, a4);
  v12 = (unint64_t)&v4[16 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 16)
  {
    while (1)
    {
      v14 = *(_QWORD *)v6 == *(_QWORD *)v4 && *((_QWORD *)v6 + 1) == *((_QWORD *)v4 + 1);
      if (!v14 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        break;
      v15 = v4;
      v14 = v7 == v4;
      v4 += 16;
      if (!v14)
        goto LABEL_15;
LABEL_16:
      v7 += 16;
      if ((unint64_t)v4 >= v12 || (unint64_t)v6 >= a3)
        goto LABEL_21;
    }
    v15 = v6;
    v14 = v7 == v6;
    v6 += 16;
    if (v14)
      goto LABEL_16;
LABEL_15:
    *(_OWORD *)v7 = *(_OWORD *)v15;
    goto LABEL_16;
  }
LABEL_21:
  v6 = v7;
LABEL_47:
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(v4, (uint64_t)(v12 - (_QWORD)v4) / 16, v6);
  return 1;
}

{
  char *v4;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  BOOL v13;
  char *v14;
  __int128 v17;
  __int128 v18;
  unint64_t v20;
  char *v21;
  BOOL v22;
  char *v23;
  BOOL v24;
  BOOL v25;
  __int128 v26;
  __int128 v27;

  v4 = a4;
  v6 = a2;
  v7 = a1;
  v8 = a2 - a1;
  v9 = (a2 - a1) / 40;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 40;
  if (v9 >= v11)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(a2, (uint64_t)(a3 - (_QWORD)a2) / 40, a4);
    v12 = &v4[40 * v11];
    if (v7 >= v6 || v10 < 40)
      goto LABEL_49;
    v20 = a3 - 40;
    while (1)
    {
      v21 = (char *)(v20 + 40);
      v22 = *((_QWORD *)v12 - 3) == *((_QWORD *)v6 - 3) && *((_QWORD *)v12 - 2) == *((_QWORD *)v6 - 2);
      if (v22 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
      {
        v23 = v12 - 40;
        v25 = v21 != v12 || v20 >= (unint64_t)v12;
        v12 -= 40;
        if (!v25)
          goto LABEL_45;
      }
      else
      {
        v23 = v6 - 40;
        v24 = v21 != v6 || v20 >= (unint64_t)v6;
        v6 -= 40;
        if (!v24)
          goto LABEL_45;
      }
      v26 = *(_OWORD *)v23;
      v27 = *((_OWORD *)v23 + 1);
      *(_QWORD *)(v20 + 32) = *((_QWORD *)v23 + 4);
      *(_OWORD *)v20 = v26;
      *(_OWORD *)(v20 + 16) = v27;
LABEL_45:
      v20 -= 40;
      if (v6 <= v7 || v12 <= v4)
        goto LABEL_49;
    }
  }
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, (a2 - a1) / 40, a4);
  v12 = &v4[40 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 40)
  {
    do
    {
      v13 = *((_QWORD *)v6 + 2) == *((_QWORD *)v4 + 2) && *((_QWORD *)v6 + 3) == *((_QWORD *)v4 + 3);
      if (v13 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
      {
        v13 = v7 == v4;
        v14 = v4;
        v4 += 40;
        if (v13 && v7 < v4)
          goto LABEL_20;
      }
      else
      {
        v13 = v7 == v6;
        v14 = v6;
        v6 += 40;
        if (v13 && v7 < v6)
          goto LABEL_20;
      }
      v17 = *(_OWORD *)v14;
      v18 = *((_OWORD *)v14 + 1);
      *((_QWORD *)v7 + 4) = *((_QWORD *)v14 + 4);
      *(_OWORD *)v7 = v17;
      *((_OWORD *)v7 + 1) = v18;
LABEL_20:
      v7 += 40;
    }
    while (v4 < v12 && (unint64_t)v6 < a3);
  }
  v6 = v7;
LABEL_49:
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(v4, (v12 - v4) / 40, v6);
  return 1;
}

void outlined bridged method (mbnn) of @objc UINavigationItem.title.setter(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = (id)MEMORY[0x1C3B72E00]();
  swift_bridgeObjectRelease();
  objc_msgSend(a3, sel_setTitle_, v4);

}

void outlined bridged method (ob) of @objc TUConversationActivity.concatenatedMetadataDescription.getter(void *a1, SEL *a2)
{
  id v3;

  v3 = objc_msgSend(a1, *a2);

  if (v3)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();

  }
  OUTLINED_FUNCTION_64();
  OUTLINED_FUNCTION_18();
}

id outlined bridged method (mbnn) of @objc CNComposeRecipient.contactWithKeys(toFetch:)(uint64_t a1, void *a2)
{
  Class isa;
  id v4;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for CNKeyDescriptor);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(a2, sel_contactWithKeysToFetch_, isa);

  return v4;
}

uint64_t sub_1BD12E7EC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_115();

  return swift_deallocObject();
}

void partial apply for closure #1 in PeoplePickerViewController.menu(for:)()
{
  uint64_t v0;

  PeoplePickerViewController.updateLocalizedSenderIdentity(_:)(*(void **)(v0 + 24));
  OUTLINED_FUNCTION_0();
}

void lazy protocol witness table accessor for type NSAttributedStringKey and conformance NSAttributedStringKey(_QWORD *a1, uint64_t a2, void (*a3)(uint64_t))
{
  if (!*a1)
  {
    a3(a2);
    OUTLINED_FUNCTION_52_0();
  }
  OUTLINED_FUNCTION_0();
}

void outlined consume of PeoplePickerAction(id a1)
{
  if ((char *)a1 - 1 >= (char *)6)

}

unint64_t lazy protocol witness table accessor for type PeoplePickerStyle and conformance PeoplePickerStyle()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PeoplePickerStyle and conformance PeoplePickerStyle;
  if (!lazy protocol witness table cache variable for type PeoplePickerStyle and conformance PeoplePickerStyle)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for PeoplePickerStyle, &type metadata for PeoplePickerStyle);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PeoplePickerStyle and conformance PeoplePickerStyle);
  }
  return result;
}

void sub_1BD12E8BC()
{
  uint64_t *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = OUTLINED_FUNCTION_106_1(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD12E8EC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  *v0 = OUTLINED_FUNCTION_108_1(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_0();
}

void sub_1BD12E91C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  *v0 = OUTLINED_FUNCTION_109_5(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_0();
}

void sub_1BD12E94C()
{
  uint64_t *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = OUTLINED_FUNCTION_107_4(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD12E97C()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x3A8))();
  OUTLINED_FUNCTION_0();
}

uint64_t storeEnumTagSinglePayload for PeoplePickerStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BD12EA00 + 4 * byte_1BD64A8DB[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BD12EA34 + 4 * byte_1BD64A8D6[v4]))();
}

uint64_t sub_1BD12EA34(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD12EA3C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD12EA44);
  return result;
}

uint64_t sub_1BD12EA50(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD12EA58);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BD12EA5C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD12EA64(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PeoplePickerStyle()
{
  return &type metadata for PeoplePickerStyle;
}

uint64_t dispatch thunk of PeoplePickerViewControllerProtocol.delegate.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of PeoplePickerViewControllerProtocol.delegate.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of PeoplePickerViewControllerProtocol.appName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of PeoplePickerViewControllerProtocol.appName.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of PeoplePickerViewControllerProtocol.appName.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of PeoplePickerViewControllerProtocol.stagedActivity.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of PeoplePickerViewControllerProtocol.stagedActivity.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of PeoplePickerViewControllerProtocol.stagedActivity.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of PeoplePickerViewControllerProtocol.initialRecipientDestinations.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of PeoplePickerViewControllerProtocol.initialRecipientDestinations.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t dispatch thunk of PeoplePickerViewControllerProtocol.initialRecipientDestinations.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t dispatch thunk of PeoplePickerViewControllerDelegate.peoplePickerDismissed()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of PeoplePickerViewControllerDelegate.peoplePickerInvited(_:withVideo:button:senderIdentity:messagesGroup:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 24))();
}

uint64_t dispatch thunk of PeoplePickerViewControllerDelegate.peoplePickerAdded(_:shouldAddOtherInvitedToRemoteMembers:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of PeoplePickerViewControllerDelegate.peoplePickerRequestedDialCall(using:video:contact:handle:senderIdentity:ttyType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 40))();
}

uint64_t dispatch thunk of PeoplePickerViewControllerDelegate.peoplePickerRequestedMessageController(with:chatGUID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 48))();
}

uint64_t dispatch thunk of PeoplePickerViewControllerDelegate.peoplePickerSentInvitation(with:facetimeUnavailablePeople:facetimeAvailablePeople:shouldAddOtherInvitedToRemoteMembers:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 56))();
}

uint64_t dispatch thunk of PeoplePickerViewControllerDelegate.peoplePickerRequestedUnknownContactPopover(for:sourceView:sourceRect:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t method lookup function for PeoplePickerViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PeoplePickerViewController.selectedSenderIdentity.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2C8))();
}

uint64_t dispatch thunk of PeoplePickerViewController.selectedSenderIdentity.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2D0))();
}

uint64_t dispatch thunk of PeoplePickerViewController.selectedSenderIdentity.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2D8))();
}

uint64_t dispatch thunk of PeoplePickerViewController.delegate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x360))();
}

uint64_t dispatch thunk of PeoplePickerViewController.delegate.setter()
{
  uint64_t *v0;

  return OUTLINED_FUNCTION_37_19(*v0);
}

uint64_t dispatch thunk of PeoplePickerViewController.delegate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x370))();
}

uint64_t dispatch thunk of PeoplePickerViewController.appName.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x378))();
}

uint64_t dispatch thunk of PeoplePickerViewController.appName.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x380))();
}

uint64_t dispatch thunk of PeoplePickerViewController.appName.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x388))();
}

uint64_t dispatch thunk of PeoplePickerViewController.stagedActivity.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x390))();
}

uint64_t dispatch thunk of PeoplePickerViewController.stagedActivity.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x398))();
}

uint64_t dispatch thunk of PeoplePickerViewController.stagedActivity.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x3A0))();
}

uint64_t dispatch thunk of PeoplePickerViewController.initialRecipientDestinations.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x3A8))();
}

uint64_t dispatch thunk of PeoplePickerViewController.initialRecipientDestinations.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x3B0))();
}

uint64_t dispatch thunk of PeoplePickerViewController.initialRecipientDestinations.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x3B8))();
}

uint64_t dispatch thunk of PeoplePickerViewController.includeMessagesInIDSQueries.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x3C0))();
}

uint64_t dispatch thunk of PeoplePickerViewController.defaultActionBarButtonStyle.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x3C8))();
}

uint64_t dispatch thunk of PeoplePickerViewController.__allocating_init(style:existingAddresses:currentConversation:stagedActivity:setPreventsApplicationTerminationWhenModal:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 1096))();
}

uint64_t dispatch thunk of PeoplePickerViewController.willDismissViewAnimated(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x450))();
}

void *type metadata accessor for PeoplePickerViewController.Constants()
{
  return &unk_1E761BAE0;
}

uint64_t sub_1BD12ED2C()
{
  OUTLINED_FUNCTION_115();
  return swift_deallocObject();
}

void partial apply for closure #1 in PeoplePickerViewController.handleIDSStatusChanged(notification:)()
{
  PeoplePickerViewController.updateState()();
  OUTLINED_FUNCTION_0();
}

uint64_t outlined bridged method (pb) of @objc CNComposeRecipient.children()(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_children);
  if (!v1)
    return 0;
  v2 = v1;
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for CNComposeRecipient);
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

void outlined bridged method (mbnn) of @objc CNAutocompleteSearchController.otherRecipientAddresses.setter(uint64_t a1, void *a2)
{
  Class isa;

  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(a2, sel_setOtherRecipientAddresses_, isa);

}

void outlined bridged method (mbnn) of @objc UINavigationBar.largeTitleTextAttributes.setter(uint64_t a1, void *a2)
{
  Class isa;

  type metadata accessor for NSAttributedStringKey(0);
  lazy protocol witness table accessor for type NSAttributedStringKey and conformance NSAttributedStringKey(&lazy protocol witness table cache variable for type NSAttributedStringKey and conformance NSAttributedStringKey, 255, type metadata accessor for NSAttributedStringKey);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(a2, sel_setLargeTitleTextAttributes_, isa);

}

uint64_t outlined bridged method (pb) of @objc NSNotification.userInfo.getter(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_userInfo);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

void partial apply for closure #1 in PeoplePickerViewController.handleMessageComposeCompletionForInviteFlow(withResult:)(int a1, void *a2)
{
  uint64_t v2;

  closure #1 in PeoplePickerViewController.handleMessageComposeCompletionForInviteFlow(withResult:)(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_1BD12EF38()
{
  return swift_deallocObject();
}

uint64_t sub_1BD12EF48()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void partial apply for closure #1 in PeoplePickerViewController.addPeople()()
{
  uint64_t *v0;

  closure #1 in PeoplePickerViewController.addPeople()(v0[2], v0[3], v0[4]);
}

void partial apply for closure #1 in PeoplePickerViewController.handleShareLinkWithMessagesAction()()
{
  uint64_t v0;

  closure #1 in PeoplePickerViewController.handleShareLinkWithMessagesAction()(v0);
}

uint64_t sub_1BD12EF90()
{
  OUTLINED_FUNCTION_115();
  swift_release();
  return swift_deallocObject();
}

void partial apply for closure #1 in PeoplePickerViewController.showSMSRelayUpgradeAlert(withCompletion:)()
{
  uint64_t v0;

  (*(void (**)(id))(v0 + 24))(objc_msgSend(*(id *)(v0 + 16), sel_enrollSelfDeviceInSMSRelay));
  OUTLINED_FUNCTION_0();
}

void partial apply for closure #1 in PeoplePickerViewController.presentMessageComposeSheetWithConversationLink()(void *a1, void *a2)
{
  uint64_t v2;

  closure #1 in PeoplePickerViewController.presentMessageComposeSheetWithConversationLink()(a1, a2, v2);
}

uint64_t specialized PeoplePickerViewController.presentMessageComposeViewController(for:withRecipientHandles:shouldIgnoreEmails:delegate:)(void *a1, uint64_t a2, char a3, uint64_t a4, void *a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  id v19;
  void *v20;
  void (*v21)(char *, char *, uint64_t);
  id v22;
  id v23;
  Swift::String v24;
  Swift::String_optional v25;
  Swift::String v26;
  Swift::String v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  Class isa;
  NSURL *v34;
  void *v35;
  void *v36;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43[2];
  Swift::String v44;

  v43[0] = a5;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for URL();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)v43 - v17;
  v19 = objc_msgSend(a1, sel_URL);
  if (v19)
  {
    v20 = v19;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    v21 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
    v21(v11, v16, v12);
    __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v12);
    if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12) != 1)
    {
      v21(v18, v11, v12);
      v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CC68C8]), sel_init);
      objc_msgSend(v22, sel_setMessageComposeDelegate_, a4);
      outlined bridged method (mbgnn) of @objc MFMessageComposeViewController.recipients.setter(a2, v22);
      v23 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
      v44._object = (void *)0xE000000000000000;
      v24._object = (void *)0x80000001BD674B10;
      v24._countAndFlagsBits = 0xD000000000000010;
      v25.value._countAndFlagsBits = 0x61737265766E6F43;
      v25.value._object = (void *)0xEF74694B6E6F6974;
      v26._countAndFlagsBits = 0;
      v26._object = (void *)0xE000000000000000;
      v44._countAndFlagsBits = 0;
      v27 = NSLocalizedString(_:tableName:bundle:value:comment:)(v24, v25, (NSBundle)v23, v26, v44);

      outlined bridged method (mbnn) of @objc MFMessageComposeViewController.body.setter(v27._countAndFlagsBits, (uint64_t)v27._object, v22);
      objc_msgSend(v22, sel__setCanEditRecipients_, 0);
      objc_msgSend(v22, sel_setShouldHideClearPluginButton_, 1);
      objc_msgSend(v22, sel__setShouldIgnoreEmailsWhenSending_, a3 & 1);
      v28 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DBD310]), sel_initWithTUConversationLink_, a1);
      TULinkShareItem.dataRepresentation.getter();
      v30 = v29;
      v32 = v31;

      isa = Data._bridgeToObjectiveC()().super.isa;
      URL._bridgeToObjectiveC()(v34);
      v36 = v35;
      objc_msgSend(v22, sel_addRichLinkData_withWebpageURL_, isa, v35);

      objc_msgSend(v43[0], sel_presentViewController_animated_completion_, v22, 1, 0);
      outlined consume of Data._Representation(v30, v32);

      return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v18, v12);
    }
  }
  else
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v11, 1, 1, v12);
  }
  outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v11, &demangling cache variable for type metadata for URL?);
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  static os_log_type_t.error.getter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = xmmword_1BD6441D0;
  v43[1] = a1;
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationLink);
  v39 = a1;
  v40 = String.init<A>(reflecting:)();
  v42 = v41;
  *(_QWORD *)(v38 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v38 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v38 + 32) = v40;
  *(_QWORD *)(v38 + 40) = v42;
  os_log(_:dso:log:type:_:)();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  id v20;
  void *v21;
  void (*v22)(char *, char *, uint64_t);
  id v23;
  id v24;
  Swift::String v25;
  Swift::String_optional v26;
  Swift::String v27;
  Swift::String v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  Class isa;
  NSURL *v35;
  void *v36;
  void *v37;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44[2];
  Swift::String v45;

  v44[0] = a5;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for URL();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v17 = MEMORY[0x1E0C80A78](v16).n128_u64[0];
  v19 = (char *)v44 - v18;
  v20 = objc_msgSend(a1, sel_URL, v17);
  if (v20)
  {
    v21 = v20;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    v22 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
    v22(v11, v15, v12);
    __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v12);
    if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12) != 1)
    {
      v22(v19, v11, v12);
      v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CC68C8]), sel_init);
      objc_msgSend(v23, sel_setMessageComposeDelegate_, a4);
      outlined bridged method (mbgnn) of @objc MFMessageComposeViewController.recipients.setter(a2, v23);
      v24 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
      v45._object = (void *)0xE000000000000000;
      v25._object = (void *)0x80000001BD674B10;
      v25._countAndFlagsBits = 0xD000000000000010;
      v26.value._countAndFlagsBits = 0x61737265766E6F43;
      v26.value._object = (void *)0xEF74694B6E6F6974;
      v27._countAndFlagsBits = 0;
      v27._object = (void *)0xE000000000000000;
      v45._countAndFlagsBits = 0;
      v28 = NSLocalizedString(_:tableName:bundle:value:comment:)(v25, v26, (NSBundle)v24, v27, v45);

      outlined bridged method (mbnn) of @objc MFMessageComposeViewController.body.setter(v28._countAndFlagsBits, (uint64_t)v28._object, v23);
      objc_msgSend(v23, sel__setCanEditRecipients_, 0);
      objc_msgSend(v23, sel_setShouldHideClearPluginButton_, 1);
      objc_msgSend(v23, sel__setShouldIgnoreEmailsWhenSending_, a3 & 1);
      v29 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DBD310]), sel_initWithTUConversationLink_, a1);
      TULinkShareItem.dataRepresentation.getter();
      v31 = v30;
      v33 = v32;

      isa = Data._bridgeToObjectiveC()().super.isa;
      URL._bridgeToObjectiveC()(v35);
      v37 = v36;
      objc_msgSend(v23, sel_addRichLinkData_withWebpageURL_, isa, v36);

      objc_msgSend(v44[0], sel_presentViewController_animated_completion_, v23, 1, 0);
      outlined consume of Data._Representation(v31, v33);

      return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v19, v12);
    }
  }
  else
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v11, 1, 1, v12);
  }
  outlined destroy of URL?((uint64_t)v11);
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  static os_log_type_t.error.getter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = xmmword_1BD6441D0;
  v44[1] = a1;
  type metadata accessor for TUConversationLink();
  v40 = a1;
  v41 = String.init<A>(reflecting:)();
  v43 = v42;
  *(_QWORD *)(v39 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v39 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v39 + 32) = v41;
  *(_QWORD *)(v39 + 40) = v43;
  os_log(_:dso:log:type:_:)();
  return swift_bridgeObjectRelease();
}

uint64_t outlined consume of Data._Representation(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

void partial apply for closure #1 in closure #1 in PeoplePickerViewController.presentMessageComposeSheetWithConversationLink()()
{
  uint64_t v0;

  closure #1 in closure #1 in PeoplePickerViewController.presentMessageComposeSheetWithConversationLink()(*(char **)(v0 + 16), *(void **)(v0 + 24));
}

void OUTLINED_FUNCTION_75_7()
{
  JUMPOUT(0x1C3B72E00);
}

uint64_t OUTLINED_FUNCTION_89_6()
{
  uint64_t v0;
  uint64_t v1;

  return PeoplePickerViewController.appName.setter(v1, v0);
}

void OUTLINED_FUNCTION_99_3(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v2, a2);
}

uint64_t OUTLINED_FUNCTION_106_1@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(void))((v1 & a1) + 0x2C8))();
}

uint64_t OUTLINED_FUNCTION_109_5@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(void))((v1 & a1) + 0x378))();
}

uint64_t OUTLINED_FUNCTION_112_3(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return __swift_storeEnumTagSinglePayload(a1, a2, a3, v3);
}

id OUTLINED_FUNCTION_117_4(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2, 0);
}

void OUTLINED_FUNCTION_118_3(uint64_t a1, SEL *a2)
{
  void *v2;

  outlined bridged method (pb) of @objc TUConversationLink.displayName.getter(v2, a2);
}

void OUTLINED_FUNCTION_126_0()
{
  uint64_t v0;

}

uint64_t key path setter for InCallControlsOpenMessagesCell.delegate : InCallControlsOpenMessagesCell(uint64_t a1, _QWORD **a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x70);
  v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

uint64_t InCallControlsOpenMessagesCell.delegate.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit30InCallControlsOpenMessagesCell_delegate;
  OUTLINED_FUNCTION_2_0();
  return MEMORY[0x1C3B752C0](v1);
}

uint64_t InCallControlsOpenMessagesCell.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + OBJC_IVAR____TtC15ConversationKit30InCallControlsOpenMessagesCell_delegate;
  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*InCallControlsOpenMessagesCell.delegate.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC15ConversationKit30InCallControlsOpenMessagesCell_delegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  OUTLINED_FUNCTION_2_0();
  v6 = MEMORY[0x1C3B752C0](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return InCallControlsBaseCell.delegate.modify;
}

void InCallControlsOpenMessagesCell.buttonHeightConstraint.setter(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit30InCallControlsOpenMessagesCell_buttonHeightConstraint);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit30InCallControlsOpenMessagesCell_buttonHeightConstraint) = a1;

}

uint64_t closure #1 in variable initialization expression of InCallControlsOpenMessagesCell.openMessagesButton()
{
  id v0;
  Swift::String v1;
  Swift::String_optional v2;
  Swift::String v3;
  uint64_t v4;
  void *v5;
  uint64_t v7;
  uint64_t v8;
  Swift::String v9;

  type metadata accessor for InCallControlButton();
  LOBYTE(v8) = 0;
  v0 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v9._object = (void *)0xE000000000000000;
  v1._countAndFlagsBits = 0x4547415353454DLL;
  v1._object = (void *)0xE700000000000000;
  v2.value._countAndFlagsBits = 0x61737265766E6F43;
  v2.value._object = (void *)0xEF74694B6E6F6974;
  v3._countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  v9._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v1, v2, (NSBundle)v0, v3, v9);

  LOWORD(v7) = 256;
  v4 = InCallControlButton.__allocating_init(style:symbolDescriber:text:discSize:imageSpacing:visualEffectGroupName:wantsPointerInteraction:isImageTrailing:)();
  v5 = *(void **)(v4 + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_label);
  objc_msgSend(v5, sel_setAdjustsFontForContentSizeCategory_, 1, v7, v8);
  if (v5)
    objc_msgSend(v5, sel_setNumberOfLines_, 2);
  objc_msgSend(v5, sel_setAdjustsFontSizeToFitWidth_, 1);
  return v4;
}

id InCallControlsOpenMessagesCell.__allocating_init(frame:)()
{
  Class v0;
  id v1;
  double v2;
  id v3;
  SEL v4;

  OUTLINED_FUNCTION_17_7();
  v1 = objc_allocWithZone(v0);
  v2 = OUTLINED_FUNCTION_15_0();
  return objc_msgSend(v3, v4, v2);
}

_QWORD *InCallControlsOpenMessagesCell.init(frame:)()
{
  char *v0;
  uint64_t v1;
  char *v2;
  double v3;
  objc_super *v4;
  SEL v5;
  _QWORD *v6;
  void (*v7)(void);
  _QWORD *v8;
  uint64_t v10;

  OUTLINED_FUNCTION_17_7();
  OUTLINED_FUNCTION_18_1(OBJC_IVAR____TtC15ConversationKit30InCallControlsOpenMessagesCell_delegate);
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit30InCallControlsOpenMessagesCell_buttonHeightConstraint] = 0;
  v1 = OBJC_IVAR____TtC15ConversationKit30InCallControlsOpenMessagesCell_openMessagesButton;
  v2 = v0;
  *(_QWORD *)&v0[v1] = closure #1 in variable initialization expression of InCallControlsOpenMessagesCell.openMessagesButton();

  v10 = type metadata accessor for InCallControlsOpenMessagesCell();
  v3 = OUTLINED_FUNCTION_15_0();
  v6 = objc_msgSendSuper2(v4, v5, v3, v2, v10);
  v7 = *(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v6) + 0x98);
  v8 = v6;
  v7();

  return v8;
}

uint64_t type metadata accessor for InCallControlsOpenMessagesCell()
{
  return objc_opt_self();
}

Swift::Void __swiftcall InCallControlsOpenMessagesCell.configureSubviews()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  void (*v9)(uint64_t);
  uint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  id v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  id v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  id v36;
  id v37;
  id v38;
  id v39;
  Class isa;
  _QWORD v41[2];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIBackgroundConfiguration?);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UIBackgroundConfiguration.listPlainCell()();
  v5 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
  UIBackgroundConfiguration.backgroundColor.setter();
  v6 = type metadata accessor for UIBackgroundConfiguration();
  __swift_storeEnumTagSinglePayload((uint64_t)v4, 0, 1, v6);
  MEMORY[0x1C3B7370C](v4);
  v7 = *(_QWORD **)(v1 + OBJC_IVAR____TtC15ConversationKit30InCallControlsOpenMessagesCell_openMessagesButton);
  v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  UIControl.addAction(for:handler:)(64, (uint64_t)partial apply for closure #1 in InCallControlsOpenMessagesCell.configureSubviews(), v8);
  swift_release_n();
  if (one-time initialization token for brickButton != -1)
    swift_once();
  v9 = *(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v7) + 0x188);
  v10 = swift_bridgeObjectRetain();
  v9(v10);
  objc_msgSend(v7, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v11 = OUTLINED_FUNCTION_0_59();
  objc_msgSend(v11, sel_addSubview_, v7);

  v13 = OUTLINED_FUNCTION_9(v12, sel_heightAnchor);
  v14 = objc_msgSend(v13, sel_constraintGreaterThanOrEqualToConstant_, 52.0);

  InCallControlsOpenMessagesCell.buttonHeightConstraint.setter((uint64_t)v14);
  InCallControlsOpenMessagesCell.updateConstraintsConstants()();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1BD64AAB0;
  v16 = OUTLINED_FUNCTION_9(v15, sel_leadingAnchor);
  v17 = objc_msgSend(OUTLINED_FUNCTION_0_59(), sel_leadingAnchor);
  OUTLINED_FUNCTION_14();
  v18 = objc_msgSend(v16, sel_constraintEqualToAnchor_, &selRef_associatedAppBundleIdentifier);

  *(_QWORD *)(v15 + 32) = v18;
  v19 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit30InCallControlsOpenMessagesCell_buttonHeightConstraint);
  if (v19)
  {
    v20 = (void *)objc_opt_self();
    *(_QWORD *)(v15 + 40) = v19;
    v21 = OUTLINED_FUNCTION_9((uint64_t)v19, sel_centerYAnchor);
    v22 = OUTLINED_FUNCTION_0_59();
    v23 = objc_msgSend(v22, sel_centerYAnchor);
    OUTLINED_FUNCTION_8_10();
    v24 = OUTLINED_FUNCTION_1_46();
    OUTLINED_FUNCTION_14();

    *(_QWORD *)(v15 + 48) = v22;
    v26 = OUTLINED_FUNCTION_9(v25, sel_topAnchor);
    v27 = OUTLINED_FUNCTION_0_59();
    v28 = objc_msgSend(v27, sel_topAnchor);
    OUTLINED_FUNCTION_8_10();
    v29 = OUTLINED_FUNCTION_1_46();
    OUTLINED_FUNCTION_14();

    *(_QWORD *)(v15 + 56) = v27;
    v31 = OUTLINED_FUNCTION_9(v30, sel_bottomAnchor);
    v32 = OUTLINED_FUNCTION_0_59();
    v33 = objc_msgSend(v32, sel_bottomAnchor);
    OUTLINED_FUNCTION_8_10();
    v34 = OUTLINED_FUNCTION_1_46();
    OUTLINED_FUNCTION_14();

    *(_QWORD *)(v15 + 64) = v32;
    v36 = OUTLINED_FUNCTION_9(v35, sel_trailingAnchor);
    v37 = OUTLINED_FUNCTION_0_59();
    v38 = objc_msgSend(v37, sel_trailingAnchor);

    v39 = objc_msgSend(v36, sel_constraintEqualToAnchor_, v38);
    *(_QWORD *)(v15 + 72) = v39;
    v41[1] = v15;
    specialized Array._endMutation()();
    type metadata accessor for NSLayoutConstraint();
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    objc_msgSend(v20, sel_activateConstraints_, isa);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1BD12FD6C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void closure #1 in InCallControlsOpenMessagesCell.configureSubviews()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  void (*v8)(char *, id, uint64_t, uint64_t);
  id v9;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = (char *)MEMORY[0x1C3B752C0](v2);
  if (v3)
  {
    v4 = v3;
    if ((*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)v3) + 0x68))())
    {
      v6 = v5;
      ObjectType = swift_getObjectType();
      v8 = *(void (**)(char *, id, uint64_t, uint64_t))(v6 + 8);
      v9 = *(id *)&v4[OBJC_IVAR____TtC15ConversationKit30InCallControlsOpenMessagesCell_openMessagesButton];
      v8(v4, v9, ObjectType, v6);

      swift_unknownObjectRelease();
    }
    else
    {

    }
  }
}

void partial apply for closure #1 in InCallControlsOpenMessagesCell.configureSubviews()(uint64_t a1)
{
  uint64_t v1;

  closure #1 in InCallControlsOpenMessagesCell.configureSubviews()(a1, v1);
}

id InCallControlsOpenMessagesCell.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void InCallControlsOpenMessagesCell.init(coder:)()
{
  char *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_18_1(OBJC_IVAR____TtC15ConversationKit30InCallControlsOpenMessagesCell_delegate);
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit30InCallControlsOpenMessagesCell_buttonHeightConstraint] = 0;
  v1 = OBJC_IVAR____TtC15ConversationKit30InCallControlsOpenMessagesCell_openMessagesButton;
  *(_QWORD *)&v0[v1] = closure #1 in variable initialization expression of InCallControlsOpenMessagesCell.openMessagesButton();

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Void __swiftcall InCallControlsOpenMessagesCell.traitCollectionDidChange(_:)(UITraitCollection_optional a1)
{
  void *v1;
  Class isa;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v10;
  objc_super v11;

  isa = a1.value.super.isa;
  v11.receiver = v1;
  v11.super_class = (Class)type metadata accessor for InCallControlsOpenMessagesCell();
  objc_msgSendSuper2(&v11, sel_traitCollectionDidChange_, isa);
  if (isa)
    isa = (Class)-[objc_class preferredContentSizeCategory](isa, sel_preferredContentSizeCategory);
  v3 = objc_msgSend(v1, sel_traitCollection);
  v4 = objc_msgSend(v3, sel_preferredContentSizeCategory);

  if (isa)
  {
    v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v7 = v6;
    if (v5 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v7 == v8)
    {

      swift_bridgeObjectRelease_n();
      goto LABEL_13;
    }
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v10 & 1) != 0)
      goto LABEL_13;
  }
  else
  {

  }
  InCallControlsOpenMessagesCell.updateConstraintsConstants()();
LABEL_13:

}

void InCallControlsOpenMessagesCell.updateConstraintsConstants()()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit30InCallControlsOpenMessagesCell_buttonHeightConstraint);
  if (v1)
  {
    v2 = *(void **)(*(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit30InCallControlsOpenMessagesCell_openMessagesButton)
                  + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_label);
    v4 = v1;
    v3 = objc_msgSend(v2, sel_font);
    if (!v3)
      v3 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
    NSLayoutConstraint.setConstant(_:scaledToFont:)(v3, 52.0);

  }
  else
  {
    __break(1u);
  }
}

id InCallControlsOpenMessagesCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InCallControlsOpenMessagesCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BD130204@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x68))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t dispatch thunk of InCallControlsOpenMessagesCellDelegate.openMessages(cell:tappedOpenMessagesButton:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t method lookup function for InCallControlsOpenMessagesCell()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InCallControlsOpenMessagesCell.delegate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of InCallControlsOpenMessagesCell.delegate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of InCallControlsOpenMessagesCell.delegate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of InCallControlsOpenMessagesCell.configureSubviews()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t one-time initialization function for reuseIdentifier()
{
  uint64_t result;
  uint64_t v1;

  type metadata accessor for ParticipantCell();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantCell.Type);
  result = String.init<A>(describing:)();
  static ParticipantCell.reuseIdentifier = result;
  *(_QWORD *)algn_1EF4FCAC8 = v1;
  return result;
}

uint64_t *ParticipantCell.reuseIdentifier.unsafeMutableAddressor()
{
  if (one-time initialization token for reuseIdentifier != -1)
    swift_once();
  return &static ParticipantCell.reuseIdentifier;
}

uint64_t static ParticipantCell.reuseIdentifier.getter()
{
  uint64_t v0;

  if (one-time initialization token for reuseIdentifier != -1)
    swift_once();
  v0 = static ParticipantCell.reuseIdentifier;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t ParticipantCell.participantIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15ConversationKit15ParticipantCell_participantIdentifier;
  swift_beginAccess();
  return outlined init with copy of UUID?(v3, a1);
}

uint64_t outlined init with copy of UUID?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id ParticipantCell.participantView.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC15ConversationKit15ParticipantCell_participantView);
}

id ParticipantCell.__allocating_init(frame:)()
{
  Class v0;
  id v1;
  double v2;
  id v3;
  SEL v4;

  OUTLINED_FUNCTION_17_7();
  v1 = objc_allocWithZone(v0);
  v2 = OUTLINED_FUNCTION_15_0();
  return objc_msgSend(v3, v4, v2);
}

id ParticipantCell.init(frame:)()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  char *v9;
  char *v10;
  double v11;
  objc_super *v12;
  SEL v13;
  id v14;
  id v15;

  v1 = v0;
  OUTLINED_FUNCTION_17_7();
  v2 = OUTLINED_FUNCTION_15_6();
  v3 = (uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit15ParticipantCell_participantIdentifier];
  v4 = OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_77_0(v3, v5, v6, v4);
  v7 = OBJC_IVAR____TtC15ConversationKit15ParticipantCell_participantView;
  v8 = objc_allocWithZone((Class)type metadata accessor for ParticipantView());
  v9 = v1;
  *(_QWORD *)&v1[v7] = OUTLINED_FUNCTION_2_58();
  v10 = &v9[OBJC_IVAR____TtC15ConversationKit15ParticipantCell_accessibilityDisplayName];
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0xE000000000000000;

  v11 = OUTLINED_FUNCTION_15_0();
  v14 = objc_msgSendSuper2(v12, v13, v11, v9, v2);
  v15 = objc_msgSend(v14, sel_contentView);
  ParticipantCell.configureSubviews(in:)(v15);

  return v14;
}

id ParticipantCell.configureSubviews(in:)(void *a1)
{
  uint64_t v1;
  void *v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  Class isa;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit15ParticipantCell_participantView);
  objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  ParticipantView.isInRoster.setter(1);
  UIView.addTapInteraction(withTapCount:)(1);
  objc_msgSend(a1, sel_addSubview_, v3);
  v4 = (void *)objc_opt_self();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BD644140;
  v6 = objc_msgSend(v3, sel_leadingAnchor);
  v7 = objc_msgSend(a1, sel_leadingAnchor);
  v8 = objc_msgSend(v6, sel_constraintEqualToAnchor_, v7);

  *(_QWORD *)(v5 + 32) = v8;
  v9 = objc_msgSend(v3, sel_trailingAnchor);
  v10 = objc_msgSend(a1, sel_trailingAnchor);
  v11 = objc_msgSend(v9, sel_constraintEqualToAnchor_, v10);

  *(_QWORD *)(v5 + 40) = v11;
  v12 = objc_msgSend(v3, sel_topAnchor);
  v13 = objc_msgSend(a1, sel_topAnchor);
  v14 = objc_msgSend(v12, sel_constraintEqualToAnchor_, v13);

  *(_QWORD *)(v5 + 48) = v14;
  v15 = objc_msgSend(v3, sel_bottomAnchor);
  v16 = objc_msgSend(a1, sel_bottomAnchor);
  v17 = objc_msgSend(v15, sel_constraintEqualToAnchor_, v16);

  *(_QWORD *)(v5 + 56) = v17;
  specialized Array._endMutation()();
  type metadata accessor for NSLayoutConstraint();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_activateConstraints_, isa);

  static Platform.current.getter();
  objc_msgSend(a1, sel__setContinuousCornerRadius_, 10.0);
  return objc_msgSend(a1, sel_setClipsToBounds_, 1);
}

id ParticipantCell.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void ParticipantCell.init(coder:)()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  char *v8;

  v1 = v0;
  v2 = (uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit15ParticipantCell_participantIdentifier];
  v3 = OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_77_0(v2, v4, v5, v3);
  v6 = OBJC_IVAR____TtC15ConversationKit15ParticipantCell_participantView;
  v7 = objc_allocWithZone((Class)type metadata accessor for ParticipantView());
  *(_QWORD *)&v1[v6] = OUTLINED_FUNCTION_2_58();
  v8 = &v1[OBJC_IVAR____TtC15ConversationKit15ParticipantCell_accessibilityDisplayName];
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = 0xE000000000000000;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Void __swiftcall ParticipantCell.prepareForReuse()()
{
  void *v0;
  objc_class *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  objc_super v10;

  v1 = (objc_class *)OUTLINED_FUNCTION_15_6();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_77();
  v5 = v4 - v3;
  v10.receiver = v0;
  v10.super_class = v1;
  objc_msgSendSuper2(&v10, sel_prepareForReuse);
  v6 = OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_77_0(v5, v7, v8, v6);
  v9 = (uint64_t)v0 + OBJC_IVAR____TtC15ConversationKit15ParticipantCell_participantIdentifier;
  OUTLINED_FUNCTION_60_0();
  outlined assign with take of UUID?(v5, v9);
  swift_endAccess();
  ParticipantView.reset()();
}

uint64_t ParticipantCell.configure(with:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;

  type metadata accessor for ParticipantViewModel(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_77();
  v4 = (void *)(v3 - v2);
  v5 = type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_77();
  v9 = v8 - v7;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_77();
  v13 = v12 - v11;
  ParticipantViewModel.participantDetails.getter();
  v14 = OUTLINED_FUNCTION_33_0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v13, v9, v14);
  OUTLINED_FUNCTION_9_41();
  __swift_storeEnumTagSinglePayload(v13, 0, 1, v14);
  v15 = v0 + OBJC_IVAR____TtC15ConversationKit15ParticipantCell_participantIdentifier;
  OUTLINED_FUNCTION_60_0();
  outlined assign with take of UUID?(v13, v15);
  swift_endAccess();
  ParticipantViewModel.participantDetails.getter();
  v16 = (uint64_t *)(v9 + *(int *)(v5 + 20));
  v18 = *v16;
  v17 = v16[1];
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_9_41();
  v19 = (_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit15ParticipantCell_accessibilityDisplayName);
  *v19 = v18;
  v19[1] = v17;
  swift_bridgeObjectRelease();
  ParticipantViewModel.compatibleWithRoster.getter();
  ParticipantView.configure(with:)(v4);
  return outlined destroy of ConversationControlsAction((uint64_t)v4, type metadata accessor for ParticipantViewModel);
}

Swift::Void __swiftcall ParticipantCell.updateAudioPowerForParticipantCell(withPower:)(Swift::Float withPower)
{
  ParticipantMonogramView.updateAudioVisualization(with:)(withPower);
}

uint64_t ParticipantCell.accessibilityDisplayName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit15ParticipantCell_accessibilityDisplayName);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ParticipantCell.accessibilityDisplayName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3 = (_QWORD *)(v2 + OBJC_IVAR____TtC15ConversationKit15ParticipantCell_accessibilityDisplayName);
  *v3 = a1;
  v3[1] = a2;
  return swift_bridgeObjectRelease();
}

id ParticipantCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)OUTLINED_FUNCTION_15_6();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t outlined assign with take of UUID?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t ObjC metadata update function for ParticipantCell()
{
  return type metadata accessor for ParticipantCell();
}

uint64_t type metadata accessor for ParticipantCell()
{
  uint64_t result;

  result = type metadata singleton initialization cache for ParticipantCell;
  if (!type metadata singleton initialization cache for ParticipantCell)
    return swift_getSingletonMetadata();
  return result;
}

void type metadata completion function for ParticipantCell()
{
  unint64_t v0;

  type metadata accessor for UUID?();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void type metadata accessor for UUID?()
{
  unint64_t v0;
  uint64_t v1;

  if (!lazy cache variable for type metadata for UUID?)
  {
    type metadata accessor for UUID();
    v0 = type metadata accessor for Optional();
    if (!v1)
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for UUID?);
  }
}

uint64_t outlined destroy of UUID?(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t CallControlsFullScreenStatusViewModel.view.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit37CallControlsFullScreenStatusViewModel_view;
  OUTLINED_FUNCTION_2_0();
  return MEMORY[0x1C3B752C0](v1);
}

uint64_t key path getter for CallControlsFullScreenStatusViewModel.view : CallControlsFullScreenStatusViewModel@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *a1 + OBJC_IVAR____TtC15ConversationKit37CallControlsFullScreenStatusViewModel_view;
  swift_beginAccess();
  result = MEMORY[0x1C3B752C0](v3);
  v5 = *(_QWORD *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t key path setter for CallControlsFullScreenStatusViewModel.view : CallControlsFullScreenStatusViewModel(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = swift_unknownObjectRetain();
  return CallControlsFullScreenStatusViewModel.view.setter(v2, v1);
}

uint64_t CallControlsFullScreenStatusViewModel.view.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + OBJC_IVAR____TtC15ConversationKit37CallControlsFullScreenStatusViewModel_view;
  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  CallControlsFullScreenStatusViewModel.view.didset();
  return swift_unknownObjectRelease();
}

uint64_t CallControlsFullScreenStatusViewModel.view.didset()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t ObjectType;

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit37CallControlsFullScreenStatusViewModel_view;
  swift_beginAccess();
  result = MEMORY[0x1C3B752C0](v1);
  if (result)
  {
    v3 = *(_QWORD *)(v1 + 8);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(1, ObjectType, v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

void (*CallControlsFullScreenStatusViewModel.view.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC15ConversationKit37CallControlsFullScreenStatusViewModel_view;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  OUTLINED_FUNCTION_2_0();
  v6 = MEMORY[0x1C3B752C0](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return CallControlsFullScreenStatusViewModel.view.modify;
}

void CallControlsFullScreenStatusViewModel.view.modify(uint64_t a1, char a2)
{
  void *v3;

  v3 = *(void **)a1;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 40) + *(_QWORD *)(*(_QWORD *)a1 + 48) + 8) = *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    OUTLINED_FUNCTION_9_10();
    CallControlsFullScreenStatusViewModel.view.didset();
  }
  free(v3);
}

id CallControlsFullScreenStatusViewModel.__allocating_init(powerSaverManager:videoStatusProvider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  objc_class *v4;
  id v9;

  v9 = objc_allocWithZone(v4);
  return CallControlsFullScreenStatusViewModel.init(powerSaverManager:videoStatusProvider:)(a1, a2, a3, a4);
}

id CallControlsFullScreenStatusViewModel.init(powerSaverManager:videoStatusProvider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  objc_class *v9;
  char *v10;
  char *v11;
  objc_super v13;

  v9 = (objc_class *)OUTLINED_FUNCTION_15_6();
  *(_QWORD *)&v4[OBJC_IVAR____TtC15ConversationKit37CallControlsFullScreenStatusViewModel_view + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v4[OBJC_IVAR____TtC15ConversationKit37CallControlsFullScreenStatusViewModel_cancellable] = 0;
  v10 = &v4[OBJC_IVAR____TtC15ConversationKit37CallControlsFullScreenStatusViewModel_powerSaverManager];
  *(_QWORD *)v10 = a1;
  *((_QWORD *)v10 + 1) = a2;
  v11 = &v4[OBJC_IVAR____TtC15ConversationKit37CallControlsFullScreenStatusViewModel_videoStatusProvider];
  *(_QWORD *)v11 = a3;
  *((_QWORD *)v11 + 1) = a4;
  v13.receiver = v4;
  v13.super_class = v9;
  return objc_msgSendSuper2(&v13, sel_init);
}

Swift::Void __swiftcall CallControlsFullScreenStatusViewModel.startObservingStatesIfNeeded()()
{
  uint64_t v0;

  if (!*(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit37CallControlsFullScreenStatusViewModel_cancellable))
    CallControlsFullScreenStatusViewModel.startObservation(_:)(0, 0);
}

uint64_t CallControlsFullScreenStatusViewModel.startObservation(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t ObjectType;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v44;

  v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_77();
  v7 = v6 - v5;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.MergeMany<AnyPublisher<(), Never>>);
  v37 = *(_QWORD *)(v8 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_77();
  v12 = v11 - v10;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.Concatenate<Publishers.Sequence<[()], Never>, Publishers.MergeMany<AnyPublisher<(), Never>>>);
  v38 = *(_QWORD *)(v13 - 8);
  v39 = v13;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_77();
  v17 = v16 - v15;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.ReceiveOn<Publishers.Concatenate<Publishers.Sequence<[()], Never>, Publishers.MergeMany<AnyPublisher<(), Never>>>, NSRunLoop>);
  v40 = *(_QWORD *)(v18 - 8);
  v41 = v18;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_77();
  v22 = v21 - v20;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Empty<(), Never>);
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  OUTLINED_FUNCTION_77();
  v27 = v26 - v25;
  if (*(_QWORD *)(v3 + OBJC_IVAR____TtC15ConversationKit37CallControlsFullScreenStatusViewModel_videoStatusProvider))
  {
    v28 = *(_QWORD *)(v3
                    + OBJC_IVAR____TtC15ConversationKit37CallControlsFullScreenStatusViewModel_videoStatusProvider
                    + 8);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v28 + 16))(ObjectType, v28);
  }
  else
  {
    Empty.init(completeImmediately:)();
    lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type Empty<(), Never> and conformance Empty<A, B>, &demangling cache variable for type metadata for Empty<(), Never>, MEMORY[0x1E0C960D0]);
    Publisher.eraseToAnyPublisher()();
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v27, v23);
  }
  v30 = *(_QWORD *)(v3 + OBJC_IVAR____TtC15ConversationKit37CallControlsFullScreenStatusViewModel_powerSaverManager + 8);
  v31 = OUTLINED_FUNCTION_15_6();
  (*(void (**)(uint64_t, uint64_t))(v30 + 32))(v31, v30);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyPublisher<(), Never>);
  lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type AnyPublisher<(), Never> and conformance AnyPublisher<A, B>, &demangling cache variable for type metadata for AnyPublisher<(), Never>, MEMORY[0x1E0C95D90]);
  Publisher.merge(with:)();
  swift_release();
  lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type Publishers.MergeMany<AnyPublisher<(), Never>> and conformance Publishers.MergeMany<A>, &demangling cache variable for type metadata for Publishers.MergeMany<AnyPublisher<(), Never>>, MEMORY[0x1E0C95C80]);
  Publisher.prepend(_:)();
  (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v12, v8);
  v44 = objc_msgSend((id)objc_opt_self(), sel_mainRunLoop);
  v32 = type metadata accessor for NSRunLoop.SchedulerOptions();
  __swift_storeEnumTagSinglePayload(v7, 1, 1, v32);
  type metadata accessor for NSRunLoop();
  lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type Publishers.Concatenate<Publishers.Sequence<[()], Never>, Publishers.MergeMany<AnyPublisher<(), Never>>> and conformance Publishers.Concatenate<A, B>, &demangling cache variable for type metadata for Publishers.Concatenate<Publishers.Sequence<[()], Never>, Publishers.MergeMany<AnyPublisher<(), Never>>>, MEMORY[0x1E0C95788]);
  lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop();
  Publisher.receive<A>(on:options:)();
  outlined destroy of NSRunLoop.SchedulerOptions?(v7);

  (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v17, v39);
  v33 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v34 = (_QWORD *)swift_allocObject();
  v34[2] = v33;
  v34[3] = a1;
  v34[4] = a2;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(a1);
  lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type Publishers.ReceiveOn<Publishers.Concatenate<Publishers.Sequence<[()], Never>, Publishers.MergeMany<AnyPublisher<(), Never>>>, NSRunLoop> and conformance Publishers.ReceiveOn<A, B>, &demangling cache variable for type metadata for Publishers.ReceiveOn<Publishers.Concatenate<Publishers.Sequence<[()], Never>, Publishers.MergeMany<AnyPublisher<(), Never>>>, NSRunLoop>, MEMORY[0x1E0C95CB8]);
  v35 = Publisher<>.sink(receiveValue:)();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v22, v41);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC15ConversationKit37CallControlsFullScreenStatusViewModel_cancellable) = v35;
  return swift_release();
}

uint64_t sub_1BD1316FC()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void closure #1 in CallControlsFullScreenStatusViewModel.startObservation(_:)(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v4 = a2 + 16;
  swift_beginAccess();
  v5 = MEMORY[0x1C3B752C0](v4);
  if (v5)
  {
    v6 = (void *)v5;
    CallControlsFullScreenStatusViewModel.updateStatus()();

  }
  if (a3)
    a3();
}

uint64_t sub_1BD13178C()
{
  uint64_t v0;

  swift_release();
  if (*(_QWORD *)(v0 + 24))
    swift_release();
  return swift_deallocObject();
}

void partial apply for closure #1 in CallControlsFullScreenStatusViewModel.startObservation(_:)(uint64_t a1)
{
  uint64_t v1;

  closure #1 in CallControlsFullScreenStatusViewModel.startObservation(_:)(a1, *(_QWORD *)(v1 + 16), *(void (**)(void))(v1 + 24));
}

Swift::Void __swiftcall CallControlsFullScreenStatusViewModel.updateStatus()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (**v4)(_QWORD, _QWORD);
  uint64_t v5;
  uint64_t v6;
  void *v7;
  objc_class *v8;
  NSBundle v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  objc_class *v28;
  NSBundle v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t ObjectType;
  uint64_t (*v39)(uint64_t, uint64_t);
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v1 = v0;
  v2 = v0 + OBJC_IVAR____TtC15ConversationKit37CallControlsFullScreenStatusViewModel_view;
  OUTLINED_FUNCTION_2_0();
  if (MEMORY[0x1C3B752C0](v2))
  {
    v3 = *(_QWORD *)(v2 + 8);
    v4 = *(uint64_t (***)(_QWORD, _QWORD))(v1
                                                   + OBJC_IVAR____TtC15ConversationKit37CallControlsFullScreenStatusViewModel_powerSaverManager
                                                   + 8);
    v5 = OUTLINED_FUNCTION_15_6();
    if ((v4[1](v5, v4) & 1) != 0)
    {
      v6 = OUTLINED_FUNCTION_20_11();
      v7 = (void *)objc_opt_self();
      v8 = (objc_class *)objc_msgSend(v7, sel_conversationKit);
      OUTLINED_FUNCTION_2_59();
      v9.super.isa = v8;
      v14 = OUTLINED_FUNCTION_49_2(v10, v11, v12, v13, v9);
      v16 = v15;

      v17 = objc_msgSend(v7, sel_conversationKit, 0xE000000000000000);
      v18 = OUTLINED_FUNCTION_0_3(0xD000000000000013, 0x80000001BD674E70);
      v20 = v19;

      OUTLINED_FUNCTION_5_46(v14, v16, v18, v20, v6, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 32));
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
      v22 = 0;
LABEL_12:
      v21(v22, v6, v3);
      goto LABEL_13;
    }
    if ((v4[2](v5, v4) & 1) != 0)
    {
      v23 = v4[3](v5, v4);
      if (v24)
      {
        v25 = v23;
        v26 = v24;
        v27 = OUTLINED_FUNCTION_20_11();
        v28 = (objc_class *)objc_msgSend((id)objc_opt_self(), sel_conversationKit);
        OUTLINED_FUNCTION_2_59();
        v29.super.isa = v28;
        v34 = OUTLINED_FUNCTION_49_2(v30, v31, v32, v33, v29);
        v36 = v35;

        OUTLINED_FUNCTION_5_46(v34, v36, v25, v26, v27, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 32));
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        (*(void (**)(_QWORD, uint64_t, uint64_t))(v3 + 16))(0, v27, v3);
LABEL_13:
        swift_unknownObjectRelease();
        return;
      }
    }
    if (*(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit37CallControlsFullScreenStatusViewModel_videoStatusProvider))
    {
      v37 = *(_QWORD *)(v1
                      + OBJC_IVAR____TtC15ConversationKit37CallControlsFullScreenStatusViewModel_videoStatusProvider
                      + 8);
      ObjectType = swift_getObjectType();
      v39 = *(uint64_t (**)(uint64_t, uint64_t))(v37 + 8);
      swift_unknownObjectRetain();
      if ((v39(ObjectType, v37) & 1) != 0)
      {
        v40 = OUTLINED_FUNCTION_20_11();
        v41 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
        v42 = OUTLINED_FUNCTION_0_3(0xD000000000000011, 0x80000001BD674E50);
        v44 = v43;

        OUTLINED_FUNCTION_5_46(0, 0, v42, v44, v40, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 32));
        swift_bridgeObjectRelease();
        (*(void (**)(_QWORD, uint64_t, uint64_t))(v3 + 16))(0, v40, v3);
        OUTLINED_FUNCTION_9_10();
        goto LABEL_13;
      }
      OUTLINED_FUNCTION_9_10();
    }
    v6 = OUTLINED_FUNCTION_20_11();
    OUTLINED_FUNCTION_5_46(0, 0, 0, 0, v6, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 32));
    v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
    v22 = 1;
    goto LABEL_12;
  }
}

id CallControlsFullScreenStatusViewModel.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void CallControlsFullScreenStatusViewModel.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id CallControlsFullScreenStatusViewModel.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)OUTLINED_FUNCTION_15_6();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t dispatch thunk of CallControlsFullScreenStatusViewing.isHidden.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of CallControlsFullScreenStatusViewing.isHidden.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of CallControlsFullScreenStatusViewing.isHidden.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of CallControlsFullScreenStatusViewing.set(title:subtitle:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 32))();
}

uint64_t dispatch thunk of CallControlsFullScreenStatusViewing.update(statusLayoutGuide:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t type metadata accessor for CallControlsFullScreenStatusViewModel()
{
  return objc_opt_self();
}

uint64_t method lookup function for CallControlsFullScreenStatusViewModel()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CallControlsFullScreenStatusViewModel.__allocating_init(powerSaverManager:videoStatusProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

void CGAffineTransform.rotatingTranslationComponent(by:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, CGAffineTransform *a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, double a10@<D0>)
{
  uint64_t *v10;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  CGAffineTransform *v25;
  uint64_t v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  CGAffineTransform *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v13 = *v10;
  v14 = v10[1];
  v15 = v10[2];
  v16 = v10[3];
  v17 = v10[4];
  v18 = v10[5];
  v19 = OUTLINED_FUNCTION_3_49(a1, a2, a3, a4, a5, a6, a7, a8, v35, v39, v43, v47, v51, v55, v59, v62, v63, v64, v65,
          v66);
  if (!v19 && (*(_QWORD *)&a10 & 0x7FFFFFFFFFFFFFFFLL) != 0)
  {
    v27 = OUTLINED_FUNCTION_4_48(v19, v20, v21, v22, v23, v24, v25, v26, v36, v40, v44, v48, v52, v56, v60);
    OUTLINED_FUNCTION_1_47(v27, v28, v29, v30, v31, v32, v33, v34, v37, v41, v45, v49, v53, v57, v61);
    v13 = v38;
    v14 = v42;
    v15 = v46;
    v16 = v50;
    v17 = v54;
    v18 = v58;
  }
  *a9 = v13;
  a9[1] = v14;
  a9[2] = v15;
  a9[3] = v16;
  a9[4] = v17;
  a9[5] = v18;
  OUTLINED_FUNCTION_2_60();
}

void __swiftcall CGAffineTransform.transformingTranslationComponent(using:)(CGAffineTransform *__return_ptr retstr, CGAffineTransform *using)
{
  CGFloat *v2;
  CGFloat v5;
  CGFloat v6;
  CGFloat v7;
  CGFloat v8;
  double v9;
  double v10;
  double v11;
  CGAffineTransform v12;

  v5 = *v2;
  v6 = v2[1];
  v7 = v2[2];
  v8 = v2[3];
  v10 = v2[4];
  v9 = v2[5];
  v12.a = *v2;
  v12.b = v6;
  v12.c = v7;
  v12.d = v8;
  v12.tx = v10;
  v12.ty = v9;
  if (!CGAffineTransformIsIdentity(&v12))
  {
    v11 = v10 * using->b;
    v10 = using->tx + v10 * using->a + v9 * using->c;
    v9 = using->ty + v11 + v9 * using->d;
  }
  retstr->a = v5;
  retstr->b = v6;
  retstr->c = v7;
  retstr->d = v8;
  retstr->tx = v10;
  retstr->ty = v9;
}

void __swiftcall CGAffineTransform.transformingTranslationComponent(using:)(CGAffineTransform *__return_ptr retstr, CATransform3D *using)
{
  CGFloat *v2;
  CGFloat a;
  CGFloat b;
  CGFloat c;
  CGFloat d;
  CGFloat tx;
  CGFloat ty;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double m44;
  double v28;
  CATransform3D usinga;
  CGAffineTransform v30;

  m44 = using->m44;
  a = *v2;
  b = v2[1];
  c = v2[2];
  d = v2[3];
  tx = v2[4];
  ty = v2[5];
  usinga.m11 = *v2;
  usinga.m12 = b;
  usinga.m13 = c;
  usinga.m14 = d;
  usinga.m21 = tx;
  usinga.m22 = ty;
  if (!CGAffineTransformIsIdentity((CGAffineTransform *)&usinga))
  {
    v18 = OUTLINED_FUNCTION_0_60(v10, v11, v12, v13, v14, v15, v16, v17, m44);
    if (MEMORY[0x1C3B7430C](&usinga, v18))
    {
      OUTLINED_FUNCTION_0_60(v19, v20, v21, v22, v23, v24, v25, v26, v28);
      CATransform3DGetAffineTransform(&v30, &usinga);
      *(_OWORD *)&usinga.m11 = *(_OWORD *)&v30.a;
      *(_OWORD *)&usinga.m13 = *(_OWORD *)&v30.c;
      *(_OWORD *)&usinga.m21 = *(_OWORD *)&v30.tx;
      CGAffineTransform.transformingTranslationComponent(using:)(&v30, (CGAffineTransform *)&usinga);
      a = v30.a;
      b = v30.b;
      c = v30.c;
      d = v30.d;
      tx = v30.tx;
      ty = v30.ty;
    }
  }
  retstr->a = a;
  retstr->b = b;
  retstr->c = c;
  retstr->d = d;
  retstr->tx = tx;
  retstr->ty = ty;
}

void CGAffineTransform.rotatingTranslationComponent(for:)(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, CGAffineTransform *a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>)
{
  uint64_t *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  CGAffineTransform *v24;
  uint64_t v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  CGAffineTransform *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v11 = *v9;
  v12 = v9[1];
  v13 = v9[2];
  v14 = v9[3];
  v15 = 0;
  v16 = v9[4];
  v17 = v9[5];
  if (a1 <= 3)
    v15 = qword_1BD64ABD8[a1];
  v18 = OUTLINED_FUNCTION_3_49(a1, a2, a3, a4, a5, a6, a7, a8, v34, v38, v42, v46, v50, v54, v58, v61, v62, v63, v64,
          v65);
  if (!v18 && (v15 & 0x7FFFFFFFFFFFFFFFLL) != 0)
  {
    v26 = OUTLINED_FUNCTION_4_48(v18, v19, v20, v21, v22, v23, v24, v25, v35, v39, v43, v47, v51, v55, v59);
    OUTLINED_FUNCTION_1_47(v26, v27, v28, v29, v30, v31, v32, v33, v36, v40, v44, v48, v52, v56, v60);
    v11 = v37;
    v12 = v41;
    v13 = v45;
    v14 = v49;
    v16 = v53;
    v17 = v57;
  }
  *a9 = v11;
  a9[1] = v12;
  a9[2] = v13;
  a9[3] = v14;
  a9[4] = v16;
  a9[5] = v17;
  OUTLINED_FUNCTION_2_60();
}

double static _ColorMatrix.buttonPlatter.getter@<D0>(_OWORD *a1@<X8>)
{
  double result;

  *a1 = xmmword_1BD64AC00;
  a1[1] = xmmword_1BD64AC10;
  a1[2] = xmmword_1BD64AC20;
  a1[3] = xmmword_1BD64AC30;
  result = 0.0;
  a1[4] = xmmword_1BD647E20;
  return result;
}

double static _ColorMatrix.secondaryText.getter@<D0>(_OWORD *a1@<X8>)
{
  double result;

  *a1 = xmmword_1BD64AC40;
  a1[1] = xmmword_1BD64AC50;
  a1[2] = xmmword_1BD64AC60;
  a1[3] = xmmword_1BD64AC70;
  result = 0.0;
  a1[4] = xmmword_1BD647E20;
  return result;
}

void ModalOverlayTransition.body(content:phase:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<PlaceholderContentView<ModalOverlayTransition>, _OpacityEffect>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_77();
  v7 = v6 - v5;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<PlaceholderContentView<ModalOverlayTransition>, _OpacityEffect>, _BlurEffect>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_77();
  v12 = v11 - v10;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<PlaceholderContentView<ModalOverlayTransition>, _OpacityEffect>, _BlurEffect>, _ScaleEffect>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_77();
  v17 = v16 - v15;
  v18 = 0.0;
  if ((OUTLINED_FUNCTION_52_13() & 1) != 0)
    v19 = 1.0;
  else
    v19 = 0.0;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PlaceholderContentView<ModalOverlayTransition>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v7, a1, v20);
  *(double *)(v7 + *(int *)(v3 + 36)) = v19;
  if ((OUTLINED_FUNCTION_52_13() & 1) == 0)
    v18 = 25.0;
  outlined init with copy of FeatureEligibility?(v7, v12, &demangling cache variable for type metadata for ModifiedContent<PlaceholderContentView<ModalOverlayTransition>, _OpacityEffect>);
  v21 = v12 + *(int *)(v8 + 36);
  *(double *)v21 = v18;
  *(_BYTE *)(v21 + 8) = 0;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v7, &demangling cache variable for type metadata for ModifiedContent<PlaceholderContentView<ModalOverlayTransition>, _OpacityEffect>);
  if ((OUTLINED_FUNCTION_52_13() & 1) != 0)
    v22 = 1.0;
  else
    v22 = 0.8;
  static UnitPoint.center.getter();
  v24 = v23;
  v26 = v25;
  OUTLINED_FUNCTION_41_6(v12, v17);
  v27 = v17 + *(int *)(v13 + 36);
  *(double *)v27 = v22;
  *(double *)(v27 + 8) = v22;
  *(_QWORD *)(v27 + 16) = v24;
  *(_QWORD *)(v27 + 24) = v26;
  OUTLINED_FUNCTION_9_42(v12);
  outlined init with take of Any?(v17, a2, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<PlaceholderContentView<ModalOverlayTransition>, _OpacityEffect>, _BlurEffect>, _ScaleEffect>);
}

void ActivityIndicator.makeUIView(context:)()
{
  id v0;
  id v1;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3438]), sel_init);
  objc_msgSend(v0, sel_setActivityIndicatorViewStyle_, 16);
  v1 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
  objc_msgSend(v0, sel_setColor_, v1);

  objc_msgSend(v0, sel_startAnimating);
  OUTLINED_FUNCTION_0();
}

void ActivityIndicator.updateUIView(_:context:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;

  v4 = type metadata accessor for ControlSize();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_16_2();
  specialized Environment.wrappedValue.getter();
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 88))(v2, v4);
  if (v6 == *MEMORY[0x1E0CD8750])
  {
    objc_msgSend(a1, sel__setCustomWidth_, *(double *)(v1 + *(int *)(type metadata accessor for ActivityIndicator(0) + 20)));
  }
  else
  {
    v7 = v6;
    v8 = *MEMORY[0x1E0CD8740];
    v9 = type metadata accessor for ActivityIndicator(0);
    if (v7 == v8)
    {
      objc_msgSend(a1, sel__setCustomWidth_, *(double *)(v1 + *(int *)(v9 + 24)));
    }
    else
    {
      objc_msgSend(a1, sel__setCustomWidth_, *(double *)(v1 + *(int *)(v9 + 28)));
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
    }
  }
  OUTLINED_FUNCTION_65_1();
}

uint64_t type metadata accessor for ActivityIndicator(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for ActivityIndicator);
}

void ActivityIndicator.init()(uint64_t *a1@<X8>)
{
  int *v2;

  *a1 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ControlSize>.Content);
  OUTLINED_FUNCTION_46_15();
  v2 = (int *)type metadata accessor for ActivityIndicator(0);
  *(uint64_t *)((char *)a1 + v2[5]) = 0x402C000000000000;
  *(uint64_t *)((char *)a1 + v2[6]) = 0x403E000000000000;
  *(uint64_t *)((char *)a1 + v2[7]) = 0x4038000000000000;
  OUTLINED_FUNCTION_0();
}

void protocol witness for UIViewRepresentable.makeUIView(context:) in conformance ActivityIndicator()
{
  ActivityIndicator.makeUIView(context:)();
}

uint64_t protocol witness for static View._makeView(view:inputs:) in conformance ActivityIndicator()
{
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ActivityIndicator and conformance ActivityIndicator, (void (*)(uint64_t))type metadata accessor for ActivityIndicator);
  return static UIViewRepresentable._makeView(view:inputs:)();
}

uint64_t protocol witness for static View._makeViewList(view:inputs:) in conformance ActivityIndicator()
{
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ActivityIndicator and conformance ActivityIndicator, (void (*)(uint64_t))type metadata accessor for ActivityIndicator);
  return static UIViewRepresentable._makeViewList(view:inputs:)();
}

void protocol witness for View.body.getter in conformance ActivityIndicator()
{
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ActivityIndicator and conformance ActivityIndicator, (void (*)(uint64_t))type metadata accessor for ActivityIndicator);
  UIViewRepresentable.body.getter();
  __break(1u);
}

double one-time initialization function for regularButtonSize()
{
  double result;

  result = 170.0;
  regularButtonSize = (CGSize)xmmword_1BD64AC80;
  return result;
}

double one-time initialization function for compactButtonSize()
{
  double result;

  result = 142.0;
  compactButtonSize = (CGSize)xmmword_1BD64AC90;
  return result;
}

void ScreenSharingOverlayPlatterButtonStyle.makeBody(configuration:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  void (*v45)(_QWORD);
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t);
  uint64_t v52;
  uint64_t KeyPath;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  double v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __objc2_prop_list **p_base_props;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  void (*v71)(uint64_t, uint64_t);
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  void (*v80)(uint64_t, uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t (*v94)(void);
  _BYTE v95[12];
  int v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  _BYTE *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  void (*v119)(_QWORD);
  int v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char v124;
  _BYTE v125[12];
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;

  v113 = a2;
  type metadata accessor for Capsule();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_33_18(v4);
  v5 = type metadata accessor for UserInterfaceSizeClass();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_33_18(v7);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (UserInterfaceSizeClass?, UserInterfaceSizeClass?));
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_5_27();
  OUTLINED_FUNCTION_5_18();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_5_18();
  MEMORY[0x1E0C80A78](v11);
  v13 = &v95[-v12];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_5_27();
  OUTLINED_FUNCTION_5_18();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_5_18();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_5_18();
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_5_18();
  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_5_18();
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_5_18();
  v21 = MEMORY[0x1E0C80A78](v20);
  v23 = &v95[-v22];
  v24 = MEMORY[0x1E0C80A78](v21);
  v26 = &v95[-v25];
  MEMORY[0x1E0C80A78](v24);
  v28 = &v95[-v27];
  v102 = type metadata accessor for ButtonStyleConfiguration.Label();
  v101 = *(_QWORD *)(v102 - 8);
  MEMORY[0x1E0C80A78](v102);
  OUTLINED_FUNCTION_77();
  v31 = v30 - v29;
  v99 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<Font?>>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v32);
  OUTLINED_FUNCTION_77();
  v35 = v34 - v33;
  v100 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<Font?>>, _OpacityEffect>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v36);
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_33_18(v37);
  v105 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<Font?>>, _OpacityEffect>, _FlexFrameLayout>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v38);
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_33_18(v39);
  v106 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<Font?>>, _OpacityEffect>, _FlexFrameLayout>, _BackgroundModifier<ModifiedContent<Capsule, _BackdropEffect<<<opaque return type of View._colorMatrix(_:)>>.0>>>>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v40);
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_33_18(v41);
  v108 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<Font?>>, _OpacityEffect>, _FlexFrameLayout>, _BackgroundModifier<ModifiedContent<Capsule, _BackdropEffect<<<opaque return type of View._colorMatrix(_:)>>.0>>>>, _ContentShapeModifier<Capsule>>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v42);
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_33_18(v43);
  v103 = a1;
  ButtonStyleConfiguration.label.getter();
  specialized Environment.wrappedValue.getter();
  v44 = *MEMORY[0x1E0CDC160];
  v118 = v6;
  v45 = *(void (**)(_QWORD))(v6 + 104);
  v120 = v44;
  v119 = v45;
  v45(v26);
  __swift_storeEnumTagSinglePayload((uint64_t)v26, 0, 1, v5);
  v121 = v8;
  v46 = (uint64_t)&v13[*(int *)(v8 + 48)];
  outlined init with copy of FeatureEligibility?((uint64_t)v28, (uint64_t)v13, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  outlined init with copy of FeatureEligibility?((uint64_t)v26, v46, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  OUTLINED_FUNCTION_21_24((uint64_t)v13);
  if (v48)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v26, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v28, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    OUTLINED_FUNCTION_21_24(v46);
    v47 = v114;
    if (v48)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v13, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      OUTLINED_FUNCTION_30_29();
LABEL_11:
      v52 = static Font.headline.getter();
      goto LABEL_13;
    }
    goto LABEL_9;
  }
  outlined init with copy of FeatureEligibility?((uint64_t)v13, (uint64_t)v23, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  OUTLINED_FUNCTION_21_24(v46);
  if (v48)
  {
    OUTLINED_FUNCTION_9_42((uint64_t)v26);
    OUTLINED_FUNCTION_9_42((uint64_t)v28);
    OUTLINED_FUNCTION_26_20();
    v47 = v114;
LABEL_9:
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v13, &demangling cache variable for type metadata for (UserInterfaceSizeClass?, UserInterfaceSizeClass?));
    OUTLINED_FUNCTION_30_29();
    goto LABEL_12;
  }
  v49 = v118;
  v50 = v98;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v118 + 32))(v98, v46, v5);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UserInterfaceSizeClass and conformance UserInterfaceSizeClass, (void (*)(uint64_t))MEMORY[0x1E0CDC170]);
  v96 = OUTLINED_FUNCTION_28_27();
  v51 = *(void (**)(uint64_t, uint64_t))(v49 + 8);
  v51(v50, v5);
  OUTLINED_FUNCTION_9_42((uint64_t)v26);
  OUTLINED_FUNCTION_9_42((uint64_t)v28);
  v51((uint64_t)v23, v5);
  OUTLINED_FUNCTION_9_42((uint64_t)v13);
  OUTLINED_FUNCTION_30_29();
  v47 = v114;
  if ((v96 & 1) != 0)
    goto LABEL_11;
LABEL_12:
  static Font.subheadline.getter();
  static Font.Weight.medium.getter();
  v52 = Font.weight(_:)();
  swift_release();
LABEL_13:
  KeyPath = swift_getKeyPath();
  v54 = v101;
  v55 = v102;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v101 + 16))(v35, v31, v102);
  OUTLINED_FUNCTION_49_17();
  v57 = (uint64_t *)(v35 + v56);
  *v57 = KeyPath;
  v57[1] = v52;
  (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v31, v55);
  if ((ButtonStyleConfiguration.isPressed.getter() & 1) != 0)
    v58 = 0.5;
  else
    v58 = 1.0;
  v59 = v122;
  OUTLINED_FUNCTION_61_10(v35, v122);
  OUTLINED_FUNCTION_49_17();
  *(double *)(v59 + v60) = v58;
  OUTLINED_FUNCTION_25_0(v35);
  v61 = v117;
  specialized Environment.wrappedValue.getter();
  v62 = v116;
  OUTLINED_FUNCTION_31_28(v116);
  OUTLINED_FUNCTION_51_15(v62);
  v64 = v47 + v63;
  OUTLINED_FUNCTION_41_6(v61, v47);
  OUTLINED_FUNCTION_41_6(v62, v64);
  if (__swift_getEnumTagSinglePayload(v47, 1, v5) == 1)
  {
    OUTLINED_FUNCTION_9_42(v62);
    OUTLINED_FUNCTION_9_42(v61);
    OUTLINED_FUNCTION_21_24(v64);
    v65 = v107;
    p_base_props = (__objc2_prop_list **)(&ParticipantVideoOverlayView + 64);
    if (!v48)
      goto LABEL_23;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v47, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  }
  else
  {
    v67 = v97;
    outlined init with copy of FeatureEligibility?(v47, v97, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    OUTLINED_FUNCTION_21_24(v64);
    v65 = v107;
    if (v48)
    {
      OUTLINED_FUNCTION_25_0(v116);
      OUTLINED_FUNCTION_25_0(v117);
      OUTLINED_FUNCTION_26_20();
      p_base_props = &ParticipantVideoOverlayView.base_props;
LABEL_23:
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v47, &demangling cache variable for type metadata for (UserInterfaceSizeClass?, UserInterfaceSizeClass?));
      goto LABEL_27;
    }
    v68 = v118;
    v69 = v98;
    OUTLINED_FUNCTION_60_10(v98, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v118 + 32));
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UserInterfaceSizeClass and conformance UserInterfaceSizeClass, (void (*)(uint64_t))MEMORY[0x1E0CDC170]);
    v70 = OUTLINED_FUNCTION_28_27();
    v71 = *(void (**)(uint64_t, uint64_t))(v68 + 8);
    v71(v69, v5);
    OUTLINED_FUNCTION_9_42(v116);
    OUTLINED_FUNCTION_9_42(v117);
    v71(v67, v5);
    v28 = v115;
    OUTLINED_FUNCTION_9_42(v114);
    p_base_props = (__objc2_prop_list **)(&ParticipantVideoOverlayView + 64);
    if ((v70 & 1) == 0)
    {
LABEL_27:
      if (p_base_props[351] == (__objc2_prop_list *)-1)
        goto LABEL_29;
      goto LABEL_28;
    }
  }
  if (one-time initialization token for regularButtonSize != -1)
LABEL_28:
    swift_once();
LABEL_29:
  specialized Environment.wrappedValue.getter();
  OUTLINED_FUNCTION_31_28((uint64_t)v26);
  OUTLINED_FUNCTION_51_15((uint64_t)v26);
  v73 = v65 + v72;
  OUTLINED_FUNCTION_41_6((uint64_t)v28, v65);
  OUTLINED_FUNCTION_41_6((uint64_t)v26, v73);
  OUTLINED_FUNCTION_21_24(v65);
  if (v48)
  {
    OUTLINED_FUNCTION_9_42((uint64_t)v26);
    OUTLINED_FUNCTION_9_42((uint64_t)v28);
    OUTLINED_FUNCTION_21_24(v73);
    if (v48)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v65, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      goto LABEL_39;
    }
    goto LABEL_37;
  }
  outlined init with copy of FeatureEligibility?(v65, v104, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  OUTLINED_FUNCTION_21_24(v73);
  if (v74)
  {
    OUTLINED_FUNCTION_25_0((uint64_t)v26);
    OUTLINED_FUNCTION_25_0((uint64_t)v28);
    (*(void (**)(uint64_t, uint64_t))(v118 + 8))(v104, v5);
LABEL_37:
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v65, &demangling cache variable for type metadata for (UserInterfaceSizeClass?, UserInterfaceSizeClass?));
    goto LABEL_41;
  }
  v75 = v104;
  v76 = v118;
  v77 = (uint64_t)v28;
  v78 = v98;
  OUTLINED_FUNCTION_60_10(v98, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v118 + 32));
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UserInterfaceSizeClass and conformance UserInterfaceSizeClass, (void (*)(uint64_t))MEMORY[0x1E0CDC170]);
  v79 = dispatch thunk of static Equatable.== infix(_:_:)();
  v80 = *(void (**)(uint64_t, uint64_t))(v76 + 8);
  v80(v78, v5);
  OUTLINED_FUNCTION_9_42((uint64_t)v26);
  OUTLINED_FUNCTION_9_42(v77);
  v80(v75, v5);
  OUTLINED_FUNCTION_9_42(v65);
  if ((v79 & 1) != 0)
  {
LABEL_39:
    if (one-time initialization token for regularButtonSize == -1)
      goto LABEL_43;
    goto LABEL_42;
  }
LABEL_41:
  if (p_base_props[351] != (__objc2_prop_list *)-1)
LABEL_42:
    swift_once();
LABEL_43:
  static Alignment.center.getter();
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  v81 = v122;
  v82 = v109;
  OUTLINED_FUNCTION_61_10(v122, v109);
  OUTLINED_FUNCTION_49_17();
  OUTLINED_FUNCTION_15_38((void *)(v82 + v83), v125);
  OUTLINED_FUNCTION_25_0(v81);
  v122 = static Alignment.center.getter();
  v85 = v84;
  OUTLINED_FUNCTION_49_17();
  v86 = v111;
  v88 = v111 + v87;
  type metadata accessor for RoundedCornerStyle();
  OUTLINED_FUNCTION_59_15(v88);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Capsule, _BackdropEffect<<<opaque return type of View._colorMatrix(_:)>>.0>>);
  v123 = 0x4059000000000000;
  v124 = 1;
  v126 = xmmword_1BD64AC00;
  v127 = xmmword_1BD64AC10;
  v128 = xmmword_1BD64AC20;
  v129 = xmmword_1BD64AC30;
  v130 = xmmword_1BD647E20;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<_BackdropEffectPlaceholder, _BlurEffect>);
  lazy protocol witness table accessor for type ModifiedContent<_BackdropEffectPlaceholder, _BlurEffect> and conformance <> ModifiedContent<A, B>();
  View._colorMatrix(_:)();
  v89 = (_QWORD *)(v88
                 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _BackgroundModifier<ModifiedContent<Capsule, _BackdropEffect<<<opaque return type of View._colorMatrix(_:)>>.0>>>)
                          + 36));
  *v89 = v122;
  v89[1] = v85;
  outlined init with take of Any?(v82, v86, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<Font?>>, _OpacityEffect>, _FlexFrameLayout>);
  v90 = v112;
  OUTLINED_FUNCTION_59_15(v112);
  OUTLINED_FUNCTION_49_17();
  v91 = v110;
  v93 = v110 + v92;
  v94 = MEMORY[0x1E0CDFE18];
  outlined init with copy of ConversationControlsAppLaunchButtonType(v90, v110 + v92, (uint64_t (*)(_QWORD))MEMORY[0x1E0CDFE18]);
  *(_BYTE *)(v93
           + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContentShapeModifier<Capsule>)
                    + 36)) = 0;
  OUTLINED_FUNCTION_61_10(v86, v91);
  outlined destroy of AccountUpdateNotice(v90, (uint64_t (*)(_QWORD))v94);
  OUTLINED_FUNCTION_25_0(v86);
  outlined init with take of Any?(v91, v113, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<Font?>>, _OpacityEffect>, _FlexFrameLayout>, _BackgroundModifier<ModifiedContent<Capsule, _BackdropEffect<<<opaque return type of View._colorMatrix(_:)>>.0>>>>, _ContentShapeModifier<Capsule>>);
}

#error "1BD133150: call analysis failed (funcsize=10)"

void specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t *a59,uint64_t *a60)
{
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  char v76;
  double v77;
  char v78;
  uint64_t v79;
  double v80;
  int v81;
  int v82;
  double v83;
  double v85;
  double v86;
  double v87;
  double v88;
  double v89;
  double v90;
  uint64_t *v92;
  void *v93;
  uint64_t v94;

  OUTLINED_FUNCTION_23_32();
  a51 = v61;
  a52 = v62;
  v64 = v63;
  v65 = a59;
  v66 = a60;
  v77 = OUTLINED_FUNCTION_2_61(v67);
  if (!v78)
    v77 = -INFINITY;
  v79 = v71 & 1;
  v80 = *(double *)&v70;
  if ((_DWORD)v79)
    v80 = v77;
  v81 = v76 & 1;
  v82 = v75 & 1;
  v83 = *(double *)&v72;
  if ((v73 & 1) != 0)
    v83 = v80;
  if (v77 > v80 || v80 > v83)
    goto LABEL_22;
  v88 = OUTLINED_FUNCTION_18_40(v68, v69, v70, v79, v72, v73, v74);
  if (!v78)
    v88 = v85;
  v89 = v87;
  if (v81)
    v89 = v88;
  v90 = v86;
  if (v82)
    v90 = v89;
  if (v88 > v89 || v89 > v90)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    v92 = v66;
    v93 = (void *)static Log.runtimeIssuesLog.getter();
    OUTLINED_FUNCTION_5_47();

    v66 = v92;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  outlined init with copy of FeatureEligibility?(v60, v64, v65);
  v94 = __swift_instantiateConcreteTypeFromMangledName(v66);
  OUTLINED_FUNCTION_15_38((void *)(v64 + *(int *)(v94 + 36)), &a26);
  OUTLINED_FUNCTION_24_26();
}

#error "1BD1332E0: call analysis failed (funcsize=10)"

void specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_1_48();
  OUTLINED_FUNCTION_32_21(v0, v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_8_15();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_1_48();
  OUTLINED_FUNCTION_32_21(v0, v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_8_15();
}

uint64_t specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  __int128 *v2;
  double v4;
  char v5;
  double v6;
  char v7;
  double v8;
  char v9;
  double v10;
  double v11;
  BOOL v12;
  double v13;
  double v14;
  double v15;
  BOOL v16;
  void *v17;
  __int128 v18;
  __int128 v19;
  _BYTE v21[112];
  uint64_t v22;
  char v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  _BYTE v27[32];

  v8 = OUTLINED_FUNCTION_2_61(a1);
  if (!v9)
    v8 = -INFINITY;
  v10 = v4;
  if ((v5 & 1) != 0)
    v10 = v8;
  v11 = v6;
  if ((v7 & 1) != 0)
    v11 = v10;
  v12 = v8 > v10 || v10 > v11;
  if (v12 || ((OUTLINED_FUNCTION_39_24(), v15 <= v13) ? (v16 = v13 > v14) : (v16 = 1), v16))
  {
    static os_log_type_t.fault.getter();
    v17 = (void *)OUTLINED_FUNCTION_27_19();
    OUTLINED_FUNCTION_5_47();

  }
  OUTLINED_FUNCTION_43_21();
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  v18 = v2[1];
  v24 = *v2;
  v25 = v18;
  outlined init with take of Text.Storage((uint64_t)&v24, (uint64_t)v27);
  v26 = *((_QWORD *)&v25 + 1);
  v22 = *((_QWORD *)v2 + 4);
  v23 = *((_BYTE *)v2 + 40);
  v19 = v2[1];
  *a2 = *v2;
  a2[1] = v19;
  *(_OWORD *)((char *)a2 + 25) = *(__int128 *)((char *)v2 + 25);
  OUTLINED_FUNCTION_15_38(a2 + 3, v21);
  outlined retain of Text.Storage((uint64_t)v27);
  outlined retain of [Participant]((uint64_t)&v26);
  return outlined retain of AnyLocation<String>?((uint64_t)&v22);
}

#error "1BD1334C0: call analysis failed (funcsize=10)"

#error "1BD13357C: call analysis failed (funcsize=56)"

void specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,char a58)
{
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  double v65;
  char v66;
  double v67;
  char v68;
  double v69;
  char v70;
  double v71;
  double v72;
  BOOL v73;
  double v74;
  double v75;
  double v76;
  BOOL v77;
  char v78;
  void *v79;

  OUTLINED_FUNCTION_14_45();
  a49 = v58;
  a50 = v59;
  v61 = v60;
  v62 = a58;
  v63 = a57;
  v69 = OUTLINED_FUNCTION_2_61(v64);
  if (!v70)
    v69 = -INFINITY;
  v71 = v65;
  if ((v66 & 1) != 0)
    v71 = v69;
  v72 = v67;
  if ((v68 & 1) != 0)
    v72 = v71;
  v73 = v69 > v71 || v71 > v72;
  if (v73 || ((OUTLINED_FUNCTION_56_12(), v76 <= v74) ? (v77 = v74 > v75) : (v77 = 1), v77))
  {
    static os_log_type_t.fault.getter();
    v78 = v62;
    v79 = (void *)static Log.runtimeIssuesLog.getter();
    OUTLINED_FUNCTION_5_47();

    v62 = v78;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  *(_QWORD *)v61 = v63;
  *(_BYTE *)(v61 + 8) = v62 & 1;
  OUTLINED_FUNCTION_15_38((void *)(v61 + 16), &a24);
  OUTLINED_FUNCTION_20_9();
}

#error "1BD13371C: call analysis failed (funcsize=10)"

#error "1BD13374C: call analysis failed (funcsize=10)"

#error "1BD13377C: call analysis failed (funcsize=10)"

#error "1BD133838: call analysis failed (funcsize=56)"

#error "1BD133920: call analysis failed (funcsize=56)"

#error "1BD133A08: call analysis failed (funcsize=56)"

#error "1BD133A64: call analysis failed (funcsize=10)"

#error "1BD133B90: call analysis failed (funcsize=86)"

id specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,int a24,uint64_t a25,id a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  uint64_t v53;
  double v54;
  char v55;
  double v56;
  char v57;
  double v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  char v65;
  double v66;
  double v67;
  double v68;
  double v69;
  double v71;
  void *v75;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;

  OUTLINED_FUNCTION_23_32();
  v78 = v53;
  v79 = v60;
  v62 = v61;
  v63 = a17;
  v64 = a15;
  v67 = v66;
  if ((v65 & 1) != 0)
    v67 = -INFINITY;
  v68 = v54;
  if ((v55 & 1) != 0)
    v68 = v67;
  v69 = v56;
  if ((v57 & 1) != 0)
    v69 = v68;
  if (v67 > v68 || v68 > v69)
    goto LABEL_22;
  v71 = v58;
  if ((v59 & 1) != 0)
    v71 = -INFINITY;
  if ((a10 & 1) != 0)
    *(double *)&a9 = v71;
  if ((a12 & 1) != 0)
    a11 = a9;
  if (v71 > *(double *)&a9 || *(double *)&a9 > *(double *)&a11)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    v75 = (void *)OUTLINED_FUNCTION_27_19();
    OUTLINED_FUNCTION_5_47();

    v63 = a17;
    v64 = a15;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  *(_QWORD *)v62 = v64;
  *(_QWORD *)(v62 + 8) = a16;
  *(_BYTE *)(v62 + 16) = v63 & 1;
  *(_QWORD *)(v62 + 24) = a18;
  OUTLINED_FUNCTION_15_38((void *)(v62 + 32), &v77);
  swift_retain();
  return a16;
}

#error "1BD133DD4: call analysis failed (funcsize=10)"

#error "1BD133E04: call analysis failed (funcsize=10)"

#error "1BD133E34: call analysis failed (funcsize=10)"

#error "1BD133E64: call analysis failed (funcsize=10)"

#error "1BD133E94: call analysis failed (funcsize=10)"

#error "1BD133EC4: call analysis failed (funcsize=10)"

uint64_t specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  char v26;
  double v27;
  char v28;
  double v29;
  char v30;
  double v31;
  double v32;
  BOOL v33;
  double v34;
  double v35;
  double v36;
  BOOL v37;
  int v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  OUTLINED_FUNCTION_23_32();
  v62 = v18;
  v63 = v19;
  v21 = v20;
  v22 = a18;
  v23 = a16;
  v29 = OUTLINED_FUNCTION_2_61(v24);
  if (!v30)
    v29 = -INFINITY;
  v31 = v25;
  if ((v26 & 1) != 0)
    v31 = v29;
  v32 = v27;
  if ((v28 & 1) != 0)
    v32 = v31;
  v33 = v29 > v31 || v31 > v32;
  if (v33 || ((OUTLINED_FUNCTION_56_12(), v36 <= v34) ? (v37 = v34 > v35) : (v37 = 1), v37))
  {
    OUTLINED_FUNCTION_53_14();
    HIDWORD(v54) = v38;
    static os_log_type_t.fault.getter();
    v39 = (void *)static Log.runtimeIssuesLog.getter();
    OUTLINED_FUNCTION_5_47();

    OUTLINED_FUNCTION_62_9(v40, v41, v42, HIDWORD(v54), v43, v44, v45, v46, v48, v49, v50, v51, v52, v53, v54, v55, v56, v57, v58,
      v59,
      v60);
    v22 = a18;
    v23 = a16;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  *(_QWORD *)v21 = a15;
  *(_QWORD *)(v21 + 8) = v23;
  *(_BYTE *)(v21 + 16) = a17 & 1;
  *(_QWORD *)(v21 + 24) = v22;
  OUTLINED_FUNCTION_15_38((void *)(v21 + 32), &v61);
  outlined copy of Text.Storage(a15, v23, a17 & 1);
  return swift_bridgeObjectRetain();
}

#error "1BD13406C: call analysis failed (funcsize=10)"

#error "1BD13409C: call analysis failed (funcsize=10)"

void specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50)
{
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  double v56;
  char v57;
  double v58;
  char v59;
  double v60;
  char v61;
  double v62;
  double v63;
  BOOL v64;
  double v65;
  double v66;
  double v67;
  BOOL v68;
  void *v69;
  uint64_t v70;

  OUTLINED_FUNCTION_14_45();
  a49 = v51;
  a50 = v52;
  v54 = v53;
  v60 = OUTLINED_FUNCTION_2_61(v55);
  if (!v61)
    v60 = -INFINITY;
  v62 = v56;
  if ((v57 & 1) != 0)
    v62 = v60;
  v63 = v58;
  if ((v59 & 1) != 0)
    v63 = v62;
  v64 = v60 > v62 || v62 > v63;
  if (v64 || ((OUTLINED_FUNCTION_39_24(), v67 <= v65) ? (v68 = v65 > v66) : (v68 = 1), v68))
  {
    static os_log_type_t.fault.getter();
    v69 = (void *)static Log.runtimeIssuesLog.getter();
    OUTLINED_FUNCTION_5_47();

  }
  OUTLINED_FUNCTION_43_21();
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  outlined init with copy of ConversationControlsAppLaunchButtonType(v50, v54, type metadata accessor for TranscriptLabel);
  v70 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<TranscriptLabel, _FlexFrameLayout>);
  OUTLINED_FUNCTION_15_38((void *)(v54 + *(int *)(v70 + 36)), &a24);
  OUTLINED_FUNCTION_20_9();
}

void ScreenSharingOverlayPlatterButtonStyle.init(horizontalSizeClass:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  outlined init with take of Any?(a1, a2, &demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>);
}

uint64_t static ButtonStyle<>.screenSharingOverlayPlatter.getter@<X0>(uint64_t *a1@<X8>)
{
  *a1 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
  return OUTLINED_FUNCTION_36_7();
}

uint64_t ScreenSharingSpectatorModalOverlay.title.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  id v24;
  Swift::String v25;
  Swift::String_optional v26;
  Swift::String v27;
  uint64_t countAndFlagsBits;
  id v29;
  Swift::String v30;
  Swift::String_optional v31;
  Swift::String v32;
  void *object;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  id v41;
  Swift::String v42;
  Swift::String_optional v43;
  Swift::String v44;
  id v45;
  Swift::String v46;
  Swift::String_optional v47;
  Swift::String v48;
  Swift::String v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  void *v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  Class isa;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  void *v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  Class v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  unint64_t v100;
  void *v101;
  void *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  id v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  Swift::String v114;
  Swift::String v115;
  Swift::String v116;
  Swift::String v117;

  v0 = type metadata accessor for PersonNameComponents();
  v104 = *(_QWORD *)(v0 - 8);
  v105 = v0;
  MEMORY[0x1E0C80A78](v0);
  v103 = (uint64_t)&v101 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for Participant(0);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v101 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v3);
  v106 = (uint64_t)&v101 - v7;
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v101 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v101 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v101 - v14;
  type metadata accessor for ScreenSharingSpectatorModalOverlay(0);
  swift_retain();
  specialized Environment.wrappedValue.getter();
  v17 = v16;
  v18 = swift_release();
  (*(void (**)(unint64_t *__return_ptr, uint64_t))(*(_QWORD *)v17 + 648))(&v113, v18);
  swift_release();
  v19 = v113;
  swift_retain();
  specialized Environment.wrappedValue.getter();
  v21 = v20;
  v22 = swift_release();
  v23 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v21 + 504))(v22);
  swift_release();
  switch(v19 >> 61)
  {
    case 1uLL:
      v24 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
      v114._object = (void *)0xE000000000000000;
      v25._object = (void *)0x80000001BD673F60;
      v25._countAndFlagsBits = 0xD00000000000001CLL;
      v26.value._countAndFlagsBits = 0x61737265766E6F43;
      v26.value._object = (void *)0xEF74694B6E6F6974;
      v27._countAndFlagsBits = 0;
      v27._object = (void *)0xE000000000000000;
      v114._countAndFlagsBits = 0;
      countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v25, v26, (NSBundle)v24, v27, v114)._countAndFlagsBits;

      goto LABEL_3;
    case 2uLL:
      outlined consume of RemoteControlState(v19);
      goto LABEL_5;
    case 4uLL:
      if ((v23 & 1) != 0)
      {
        v40 = *(_QWORD *)((v19 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        outlined consume of RemoteControlState(v19);
        if (v40 >> 61 != 2)
          return 0;
LABEL_5:
        v29 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
        v30._countAndFlagsBits = 0xD000000000000022;
        v115._object = (void *)0xE000000000000000;
        v30._object = (void *)0x80000001BD675010;
        v31.value._countAndFlagsBits = 0x61737265766E6F43;
        v31.value._object = (void *)0xEF74694B6E6F6974;
        v32._countAndFlagsBits = 0;
        v32._object = (void *)0xE000000000000000;
        v115._countAndFlagsBits = 0;
        object = NSLocalizedString(_:tableName:bundle:value:comment:)(v30, v31, (NSBundle)v29, v32, v115)._object;

        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
        v34 = swift_allocObject();
        *(_OWORD *)(v34 + 16) = xmmword_1BD6441D0;
        swift_retain();
        specialized Environment.wrappedValue.getter();
        v36 = v35;
        v37 = swift_release();
        (*(void (**)(uint64_t))(*(_QWORD *)v36 + 216))(v37);
        swift_release();
        if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v2))
        {
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v15, &demangling cache variable for type metadata for Participant?);
          v38 = 0;
          v39 = 0;
LABEL_33:
          *(_QWORD *)(v34 + 56) = MEMORY[0x1E0DEA968];
          *(_QWORD *)(v34 + 64) = lazy protocol witness table accessor for type String and conformance String();
          if (v39)
            v87 = v38;
          else
            v87 = 0;
          v88 = 0xE000000000000000;
          if (v39)
            v88 = v39;
          *(_QWORD *)(v34 + 32) = v87;
          *(_QWORD *)(v34 + 40) = v88;
          countAndFlagsBits = String.init(format:_:)();
          swift_bridgeObjectRelease();
          return countAndFlagsBits;
        }
        outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v15, (uint64_t)v9, type metadata accessor for Participant);
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v15, &demangling cache variable for type metadata for Participant?);
        v56 = *(void **)&v9[*(int *)(v2 + 28)];
        v102 = object;
        if (v56)
        {
          v57 = v56;
          outlined bridged method (pb) of @objc TUHandle.siriDisplayName.getter(v57);
          if (v58)
          {
            if ((objc_msgSend(v57, sel_shouldHideContact) & 1) != 0)
            {
              swift_bridgeObjectRetain();
              v59 = v103;
              PersonNameComponents.init()();
              PersonNameComponents.givenName.setter();
              PersonNameComponents.familyName.setter();
              if (one-time initialization token for initials != -1)
                swift_once();
              swift_beginAccess();
              v60 = (id)static NSPersonNameComponentsFormatter.initials;
              isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
              v62 = objc_msgSend(v60, sel_stringFromPersonNameComponents_, isa);

              v63 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              v65 = v64;

              (*(void (**)(uint64_t, uint64_t))(v104 + 8))(v59, v105);
              v107 = v63;
              v108 = v65;
              lazy protocol witness table accessor for type String and conformance String();
              StringProtocol.localizedUppercase.getter();

              swift_bridgeObjectRelease();
              v66 = 0;
              goto LABEL_32;
            }

            swift_bridgeObjectRelease();
          }
          else
          {

          }
        }
        v78 = v106;
        outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v9, v106, type metadata accessor for Participant);
        swift_retain();
        ParticipantContactDetailsCache.contactDetails(for:)(v78, v79, v80, v81, v82, v83, v84, v85, (uint64_t)v101, (uint64_t)v102, v103, v104, v105, v106, v107, v108, (uint64_t)v109, v110, v111,
          v112);
        v66 = v109;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        swift_release();
        outlined destroy of AccountUpdateNotice(v78, type metadata accessor for Participant);
LABEL_32:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        v38 = Participant.name(_:)();
        v39 = v86;
        swift_bridgeObjectRelease();
        outlined destroy of AccountUpdateNotice((uint64_t)v9, type metadata accessor for Participant);
        goto LABEL_33;
      }
      if (*(_BYTE *)((v19 & 0x1FFFFFFFFFFFFFFFLL) + 0x18) != 2)
      {
LABEL_15:
        outlined consume of RemoteControlState(v19);
        return 0;
      }
      v45 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
      v46._countAndFlagsBits = 0xD000000000000030;
      v117._object = (void *)0xE000000000000000;
      v46._object = (void *)0x80000001BD674FD0;
      v47.value._countAndFlagsBits = 0x61737265766E6F43;
      v47.value._object = (void *)0xEF74694B6E6F6974;
      v48._countAndFlagsBits = 0;
      v48._object = (void *)0xE000000000000000;
      v117._countAndFlagsBits = 0;
      v49 = NSLocalizedString(_:tableName:bundle:value:comment:)(v46, v47, (NSBundle)v45, v48, v117);

      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v50 = swift_allocObject();
      *(_OWORD *)(v50 + 16) = xmmword_1BD6441D0;
      swift_retain();
      specialized Environment.wrappedValue.getter();
      v52 = v51;
      v53 = swift_release();
      (*(void (**)(uint64_t))(*(_QWORD *)v52 + 216))(v53);
      swift_release();
      if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v2))
      {
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v13, &demangling cache variable for type metadata for Participant?);
        v54 = 0;
        v55 = 0;
        goto LABEL_44;
      }
      outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v13, (uint64_t)v5, type metadata accessor for Participant);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v13, &demangling cache variable for type metadata for Participant?);
      v67 = *(void **)&v5[*(int *)(v2 + 28)];
      v101 = v49._object;
      v102 = (void *)v49._countAndFlagsBits;
      if (!v67)
        goto LABEL_42;
      v68 = v67;
      outlined bridged method (pb) of @objc TUHandle.siriDisplayName.getter(v68);
      if (!v69)
      {

LABEL_42:
        v90 = v106;
        outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v5, v106, type metadata accessor for Participant);
        swift_retain();
        ParticipantContactDetailsCache.contactDetails(for:)(v90, v91, v92, v93, v94, v95, v96, v97, (uint64_t)v101, (uint64_t)v102, v103, v104, v105, v106, v107, v108, (uint64_t)v109, v110, v111,
          v112);
        v77 = v109;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        swift_release();
        outlined destroy of AccountUpdateNotice(v90, type metadata accessor for Participant);
        goto LABEL_43;
      }
      if ((objc_msgSend(v68, sel_shouldHideContact, v101, v102) & 1) == 0)
      {

        swift_bridgeObjectRelease();
        goto LABEL_42;
      }
      swift_bridgeObjectRetain();
      v70 = v103;
      PersonNameComponents.init()();
      PersonNameComponents.givenName.setter();
      PersonNameComponents.familyName.setter();
      if (one-time initialization token for initials != -1)
        swift_once();
      swift_beginAccess();
      v71 = (id)static NSPersonNameComponentsFormatter.initials;
      v72 = PersonNameComponents._bridgeToObjectiveC()().super.isa;
      v73 = objc_msgSend(v71, sel_stringFromPersonNameComponents_, v72);

      v74 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v76 = v75;

      (*(void (**)(uint64_t, uint64_t))(v104 + 8))(v70, v105);
      v107 = v74;
      v108 = v76;
      lazy protocol witness table accessor for type String and conformance String();
      StringProtocol.localizedUppercase.getter();

      swift_bridgeObjectRelease();
      v77 = 0;
LABEL_43:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      v54 = Participant.name(_:)();
      v55 = v98;
      swift_bridgeObjectRelease();
      outlined destroy of AccountUpdateNotice((uint64_t)v5, type metadata accessor for Participant);
LABEL_44:
      *(_QWORD *)(v50 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v50 + 64) = lazy protocol witness table accessor for type String and conformance String();
      if (v55)
        v99 = v54;
      else
        v99 = 0;
      v100 = 0xE000000000000000;
      if (v55)
        v100 = v55;
      *(_QWORD *)(v50 + 32) = v99;
      *(_QWORD *)(v50 + 40) = v100;
      countAndFlagsBits = String.init(format:_:)();
      swift_bridgeObjectRelease();
LABEL_3:
      outlined consume of RemoteControlState(v19);
      return countAndFlagsBits;
    case 5uLL:
      if ((v19 | 0x10) != 0xA000000000000010)
        goto LABEL_15;
      v41 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
      v116._object = (void *)0xE000000000000000;
      v42._object = (void *)0x80000001BD673F60;
      v42._countAndFlagsBits = 0xD00000000000001CLL;
      v43.value._countAndFlagsBits = 0x61737265766E6F43;
      v43.value._object = (void *)0xEF74694B6E6F6974;
      v44._countAndFlagsBits = 0;
      v44._object = (void *)0xE000000000000000;
      v116._countAndFlagsBits = 0;
      countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v42, v43, (NSBundle)v41, v44, v116)._countAndFlagsBits;

      return countAndFlagsBits;
    default:
      goto LABEL_15;
  }
}

uint64_t ScreenSharingSpectatorModalOverlay.statusText.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  id v19;
  Swift::String v20;
  Swift::String_optional v21;
  Swift::String v22;
  Swift::String v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  _BOOL4 v29;
  id v30;
  Swift::String v31;
  Swift::String_optional v32;
  Swift::String v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  Class isa;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v60;
  void *object;
  uint64_t v62;
  uint64_t countAndFlagsBits;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  Swift::String v73;
  Swift::String v74;

  v0 = type metadata accessor for PersonNameComponents();
  v64 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v60 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Participant(0);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v65 = (uint64_t)&v60 - v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ScreenSharingSpectatorModalOverlay(0);
  swift_retain();
  specialized Environment.wrappedValue.getter();
  v12 = v11;
  v13 = swift_release();
  (*(void (**)(unint64_t *__return_ptr, uint64_t))(*(_QWORD *)v12 + 648))(&v72, v13);
  swift_release();
  v14 = v72;
  swift_retain();
  specialized Environment.wrappedValue.getter();
  v16 = v15;
  v17 = swift_release();
  v18 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 504))(v17);
  swift_release();
  switch(v14 >> 61)
  {
    case 1uLL:
      v19 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
      v20._countAndFlagsBits = 0xD00000000000002FLL;
      v73._object = (void *)0xE000000000000000;
      v20._object = (void *)0x80000001BD674FA0;
      v21.value._countAndFlagsBits = 0x61737265766E6F43;
      v21.value._object = (void *)0xEF74694B6E6F6974;
      v22._countAndFlagsBits = 0;
      v22._object = (void *)0xE000000000000000;
      v73._countAndFlagsBits = 0;
      v23 = NSLocalizedString(_:tableName:bundle:value:comment:)(v20, v21, (NSBundle)v19, v22, v73);
      countAndFlagsBits = v23._countAndFlagsBits;

      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v62 = swift_allocObject();
      *(_OWORD *)(v62 + 16) = xmmword_1BD6441D0;
      swift_retain();
      specialized Environment.wrappedValue.getter();
      v25 = v24;
      v26 = swift_release();
      (*(void (**)(uint64_t))(*(_QWORD *)v25 + 216))(v26);
      swift_release();
      if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v3))
      {
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v10, &demangling cache variable for type metadata for Participant?);
        v27 = 0;
        v28 = 0;
        goto LABEL_21;
      }
      v35 = v65;
      outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v10, v65, type metadata accessor for Participant);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v10, &demangling cache variable for type metadata for Participant?);
      v36 = *(void **)(v35 + *(int *)(v3 + 28));
      object = v23._object;
      if (!v36)
        goto LABEL_19;
      v37 = v36;
      outlined bridged method (pb) of @objc TUHandle.siriDisplayName.getter(v37);
      v60 = v38;
      if (!v39)
      {

LABEL_19:
        outlined init with copy of ConversationControlsAppLaunchButtonType(v35, (uint64_t)v6, type metadata accessor for Participant);
        swift_retain();
        v47 = v35;
        ParticipantContactDetailsCache.contactDetails(for:)((uint64_t)v6, v48, v49, v50, v51, v52, v53, v54, v60, (uint64_t)object, v62, countAndFlagsBits, v64, v65, v66, v67, (uint64_t)v68, v69, v70,
          v71);
        v46 = v68;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        swift_release();
        outlined destroy of AccountUpdateNotice((uint64_t)v6, type metadata accessor for Participant);
        goto LABEL_20;
      }
      if ((objc_msgSend(v37, sel_shouldHideContact, v60, object) & 1) == 0)
      {

        swift_bridgeObjectRelease();
        goto LABEL_19;
      }
      swift_bridgeObjectRetain();
      PersonNameComponents.init()();
      PersonNameComponents.givenName.setter();
      PersonNameComponents.familyName.setter();
      if (one-time initialization token for initials != -1)
        swift_once();
      swift_beginAccess();
      v40 = (id)static NSPersonNameComponentsFormatter.initials;
      isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
      v42 = objc_msgSend(v40, sel_stringFromPersonNameComponents_, isa);

      v43 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v45 = v44;

      (*(void (**)(char *, uint64_t))(v64 + 8))(v2, v0);
      v66 = v43;
      v67 = v45;
      lazy protocol witness table accessor for type String and conformance String();
      StringProtocol.localizedUppercase.getter();

      swift_bridgeObjectRelease();
      v46 = 0;
      v47 = v65;
LABEL_20:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      v27 = Participant.name(_:)();
      v28 = v55;
      swift_bridgeObjectRelease();
      outlined destroy of AccountUpdateNotice(v47, type metadata accessor for Participant);
LABEL_21:
      v56 = (_QWORD *)v62;
      *(_QWORD *)(v62 + 56) = MEMORY[0x1E0DEA968];
      v56[8] = lazy protocol witness table accessor for type String and conformance String();
      if (v28)
        v57 = v27;
      else
        v57 = 0;
      v58 = 0xE000000000000000;
      if (v28)
        v58 = v28;
      v56[4] = v57;
      v56[5] = v58;
      v34 = String.init(format:_:)();
      swift_bridgeObjectRelease();
      outlined consume of RemoteControlState(v14);
      return v34;
    case 2uLL:
      outlined consume of RemoteControlState(v14);
      goto LABEL_6;
    case 4uLL:
      v29 = *(_QWORD *)(v14 + 16) >> 61 == 2;
      outlined consume of RemoteControlState(v14);
      if ((v29 & v18 & 1) == 0)
        return 0;
LABEL_6:
      v30 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
      v74._object = (void *)0xE000000000000000;
      v31._object = (void *)0x80000001BD673F60;
      v31._countAndFlagsBits = 0xD00000000000001CLL;
      v32.value._countAndFlagsBits = 0x61737265766E6F43;
      v32.value._object = (void *)0xEF74694B6E6F6974;
      v33._countAndFlagsBits = 0;
      v33._object = (void *)0xE000000000000000;
      v74._countAndFlagsBits = 0;
      v34 = NSLocalizedString(_:tableName:bundle:value:comment:)(v31, v32, (NSBundle)v30, v33, v74)._countAndFlagsBits;

      return v34;
    case 5uLL:
      if ((v14 | 0x10) != 0xA000000000000010)
        goto LABEL_9;
      return 0x6465646E45;
    default:
LABEL_9:
      outlined consume of RemoteControlState(v14);
      return 0;
  }
}

void ScreenSharingSpectatorModalOverlay.statusView.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  unint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  unint64_t v62;
  uint64_t KeyPath;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t *v81;
  char *v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;

  v89 = a1;
  v2 = type metadata accessor for ControlSize();
  v83 = *(_QWORD *)(v2 - 8);
  v84 = v2;
  MEMORY[0x1E0C80A78](v2);
  v82 = (char *)&v66 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = type metadata accessor for ActivityIndicator(0);
  v4 = MEMORY[0x1E0C80A78](v79);
  v6 = (uint64_t *)((char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v4);
  v80 = (uint64_t)&v66 - v7;
  v88 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ZStack<ModifiedContent<ActivityIndicator, _EnvironmentKeyWritingModifier<ControlSize>>>);
  MEMORY[0x1E0C80A78](v88);
  v81 = (uint64_t *)((char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v85 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<_ConditionalContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, EmptyView>, ZStack<ModifiedContent<ActivityIndicator, _EnvironmentKeyWritingModifier<ControlSize>>>>.Storage);
  MEMORY[0x1E0C80A78](v85);
  v87 = (uint64_t)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, EmptyView>.Storage);
  MEMORY[0x1E0C80A78](v75);
  v77 = (char *)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, EmptyView>);
  MEMORY[0x1E0C80A78](v86);
  v78 = (char *)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = type metadata accessor for ScreenSharingOverlayPlatterButtonStyle(0);
  v12 = MEMORY[0x1E0C80A78](v74);
  v14 = (uint64_t *)((char *)&v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v12);
  v70 = (uint64_t)&v66 - v15;
  v16 = type metadata accessor for ScreenSharingSpectatorModalOverlay(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_QWORD *)(v17 + 64);
  MEMORY[0x1E0C80A78](v16);
  v73 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<Text>);
  v69 = *(_QWORD *)(v73 - 8);
  MEMORY[0x1E0C80A78](v73);
  v68 = (char *)&v66 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.buttonStyle<A>(_:)>>.0);
  v72 = *(_QWORD *)(v76 - 8);
  v20 = MEMORY[0x1E0C80A78](v76);
  v67 = (char *)&v66 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v71 = (char *)&v66 - v22;
  v23 = v1;
  swift_retain();
  specialized Environment.wrappedValue.getter();
  v25 = v24;
  v26 = swift_release();
  (*(void (**)(unint64_t *__return_ptr, uint64_t))(*(_QWORD *)v25 + 648))(&v94, v26);
  swift_release();
  v27 = v94;
  swift_retain();
  specialized Environment.wrappedValue.getter();
  v29 = v28;
  v30 = swift_release();
  v31 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v29 + 504))(v30);
  swift_release();
  if (v27 >> 61 == 4)
  {
    if ((v31 & 1) == 0 && *(_BYTE *)(v27 + 24) == 2)
    {
      swift_storeEnumTagMultiPayload();
      lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Button<Text> and conformance Button<A>, &demangling cache variable for type metadata for Button<Text>);
      v50 = v49;
      lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ScreenSharingOverlayPlatterButtonStyle and conformance ScreenSharingOverlayPlatterButtonStyle, (void (*)(uint64_t))type metadata accessor for ScreenSharingOverlayPlatterButtonStyle);
      v90 = v73;
      v91 = v74;
      v92 = v50;
      v93 = v51;
      swift_getOpaqueTypeConformance2();
      v52 = (uint64_t)v78;
      _ConditionalContent<>.init(storage:)();
      outlined init with copy of FeatureEligibility?(v52, v87, &demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, EmptyView>);
      swift_storeEnumTagMultiPayload();
      lazy protocol witness table accessor for type _ConditionalContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, EmptyView> and conformance <> _ConditionalContent<A, B>();
      lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type ZStack<ModifiedContent<ActivityIndicator, _EnvironmentKeyWritingModifier<ControlSize>>> and conformance ZStack<A>, &demangling cache variable for type metadata for ZStack<ModifiedContent<ActivityIndicator, _EnvironmentKeyWritingModifier<ControlSize>>>);
      _ConditionalContent<>.init(storage:)();
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v52, &demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, EmptyView>);
      v48 = v27;
      goto LABEL_7;
    }
  }
  else if (v27 >> 61 == 1)
  {
    outlined init with copy of ConversationControlsAppLaunchButtonType(v23, (uint64_t)&v66 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ScreenSharingSpectatorModalOverlay);
    v32 = (*(unsigned __int8 *)(v17 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
    v33 = swift_allocObject();
    outlined init with take of StagedCollaboration((uint64_t)&v66 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), v33 + v32, type metadata accessor for ScreenSharingSpectatorModalOverlay);
    v34 = v68;
    Button.init(action:label:)();
    *v14 = swift_getKeyPath();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
    swift_storeEnumTagMultiPayload();
    v35 = v70;
    outlined init with take of StagedCollaboration((uint64_t)v14, v70, type metadata accessor for ScreenSharingOverlayPlatterButtonStyle);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Button<Text> and conformance Button<A>, &demangling cache variable for type metadata for Button<Text>);
    v84 = v27;
    v37 = v36;
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ScreenSharingOverlayPlatterButtonStyle and conformance ScreenSharingOverlayPlatterButtonStyle, (void (*)(uint64_t))type metadata accessor for ScreenSharingOverlayPlatterButtonStyle);
    v39 = v38;
    v40 = v67;
    v41 = v73;
    v42 = v74;
    View.buttonStyle<A>(_:)();
    outlined destroy of AccountUpdateNotice(v35, type metadata accessor for ScreenSharingOverlayPlatterButtonStyle);
    (*(void (**)(char *, uint64_t))(v69 + 8))(v34, v41);
    v43 = v72;
    v44 = v71;
    v45 = v40;
    v46 = v76;
    (*(void (**)(char *, char *, uint64_t))(v72 + 32))(v71, v45, v76);
    (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v77, v44, v46);
    swift_storeEnumTagMultiPayload();
    v90 = v41;
    v91 = v42;
    v92 = v37;
    v93 = v39;
    swift_getOpaqueTypeConformance2();
    v47 = (uint64_t)v78;
    _ConditionalContent<>.init(storage:)();
    outlined init with copy of FeatureEligibility?(v47, v87, &demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, EmptyView>);
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type _ConditionalContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, EmptyView> and conformance <> _ConditionalContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type ZStack<ModifiedContent<ActivityIndicator, _EnvironmentKeyWritingModifier<ControlSize>>> and conformance ZStack<A>, &demangling cache variable for type metadata for ZStack<ModifiedContent<ActivityIndicator, _EnvironmentKeyWritingModifier<ControlSize>>>);
    _ConditionalContent<>.init(storage:)();
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v47, &demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, EmptyView>);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v44, v46);
    v48 = v84;
LABEL_7:
    outlined consume of RemoteControlState(v48);
    return;
  }
  outlined consume of RemoteControlState(v27);
  v53 = static Alignment.center.getter();
  v54 = (uint64_t)v81;
  *v81 = v53;
  *(_QWORD *)(v54 + 8) = v55;
  v56 = v54
      + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_ZStackLayout, ModifiedContent<ActivityIndicator, _EnvironmentKeyWritingModifier<ControlSize>>>)
               + 44);
  *v6 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ControlSize>.Content);
  swift_storeEnumTagMultiPayload();
  v57 = v79;
  *(uint64_t *)((char *)v6 + *(int *)(v79 + 20)) = 0x402C000000000000;
  *(uint64_t *)((char *)v6 + *(int *)(v57 + 24)) = 0x403E000000000000;
  *(uint64_t *)((char *)v6 + *(int *)(v57 + 28)) = 0x4038000000000000;
  v58 = (uint64_t)v6;
  v59 = v80;
  outlined init with take of StagedCollaboration(v58, v80, type metadata accessor for ActivityIndicator);
  v61 = v82;
  v60 = v83;
  v62 = v84;
  (*(void (**)(char *, _QWORD, unint64_t))(v83 + 104))(v82, *MEMORY[0x1E0CD8758], v84);
  KeyPath = swift_getKeyPath();
  v64 = (uint64_t *)(v56
                  + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ActivityIndicator, _EnvironmentKeyWritingModifier<ControlSize>>)
                           + 36));
  v65 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<ControlSize>);
  (*(void (**)(char *, char *, unint64_t))(v60 + 16))((char *)v64 + *(int *)(v65 + 28), v61, v62);
  *v64 = KeyPath;
  outlined init with copy of ConversationControlsAppLaunchButtonType(v59, v56, type metadata accessor for ActivityIndicator);
  (*(void (**)(char *, unint64_t))(v60 + 8))(v61, v62);
  outlined destroy of AccountUpdateNotice(v59, type metadata accessor for ActivityIndicator);
  outlined init with copy of FeatureEligibility?(v54, v87, &demangling cache variable for type metadata for ZStack<ModifiedContent<ActivityIndicator, _EnvironmentKeyWritingModifier<ControlSize>>>);
  swift_storeEnumTagMultiPayload();
  lazy protocol witness table accessor for type _ConditionalContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, EmptyView> and conformance <> _ConditionalContent<A, B>();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type ZStack<ModifiedContent<ActivityIndicator, _EnvironmentKeyWritingModifier<ControlSize>>> and conformance ZStack<A>, &demangling cache variable for type metadata for ZStack<ModifiedContent<ActivityIndicator, _EnvironmentKeyWritingModifier<ControlSize>>>);
  _ConditionalContent<>.init(storage:)();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v54, &demangling cache variable for type metadata for ZStack<ModifiedContent<ActivityIndicator, _EnvironmentKeyWritingModifier<ControlSize>>>);
}

uint64_t closure #1 in ScreenSharingSpectatorModalOverlay.statusView.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  type metadata accessor for ScreenSharingSpectatorModalOverlay(0);
  swift_retain();
  specialized Environment.wrappedValue.getter();
  v1 = v0;
  v2 = swift_release();
  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 904))(v2);
  return swift_release();
}

uint64_t closure #2 in ScreenSharingSpectatorModalOverlay.statusView.getter@<X0>(uint64_t a1@<X8>)
{
  id v2;
  Swift::String v3;
  Swift::String_optional v4;
  Swift::String v5;
  uint64_t result;
  uint64_t v7;
  char v8;
  uint64_t v9;
  Swift::String v10;

  v2 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v10._object = (void *)0xE000000000000000;
  v3._object = (void *)0x80000001BD674F80;
  v3._countAndFlagsBits = 0xD00000000000001DLL;
  v4.value._countAndFlagsBits = 0x61737265766E6F43;
  v4.value._object = (void *)0xEF74694B6E6F6974;
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  v10._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v3, v4, (NSBundle)v2, v5, v10);

  lazy protocol witness table accessor for type String and conformance String();
  result = Text.init<A>(_:)();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8 & 1;
  *(_QWORD *)(a1 + 24) = v9;
  return result;
}

#error "1BD135F10: call analysis failed (funcsize=97)"

void closure #1 in ScreenSharingSpectatorModalOverlay.body.getter(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(char *);
  uint64_t v69;
  int EnumTagSinglePayload;
  int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char v81;
  void (*v82)(char *, uint64_t);
  uint64_t v83;
  uint64_t v84;
  void (*v85)(uint64_t, uint64_t, uint64_t);
  int v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  void (*v90)(char *, uint64_t);
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  int v104;
  uint64_t v105;
  void (*v106)(uint64_t, uint64_t, uint64_t);
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  int v110;
  uint64_t v111;
  char *v112;
  void (*v113)(char *, uint64_t);
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  void (*v119)(uint64_t, uint64_t, uint64_t);
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char v124;
  void (*v125)(char *, uint64_t);
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  char v133;
  void (*v134)(char *, uint64_t);
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  void *v139;
  uint64_t v140;
  _QWORD *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  int *v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t *v160;
  uint64_t v161;
  uint64_t v162;
  int v163;
  uint64_t v164;
  int v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  char *v170;
  char *v171;
  char *v172;
  int v173;
  char *v174;
  void *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  _QWORD *v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  void (*v197)(char *);
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  unsigned int v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  unsigned __int8 v205;
  uint64_t v206;
  unsigned __int8 v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  unsigned __int8 v211;
  uint64_t v212;
  unsigned __int8 v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  unsigned __int8 v217;
  uint64_t v218;
  unsigned __int8 v219;
  uint64_t *v220;
  uint64_t v221;
  _QWORD __src[15];

  v182 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<_ConditionalContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, EmptyView>, ZStack<ModifiedContent<ActivityIndicator, _EnvironmentKeyWritingModifier<ControlSize>>>>);
  MEMORY[0x1E0C80A78](v3);
  v194 = (uint64_t)&v153 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v183 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<_ConditionalContent<_ConditionalContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, EmptyView>, ZStack<ModifiedContent<ActivityIndicator, _EnvironmentKeyWritingModifier<ControlSize>>>>, _FlexFrameLayout>);
  v5 = MEMORY[0x1E0C80A78](v183);
  v196 = (uint64_t)&v153 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v184 = (uint64_t)&v153 - v8;
  MEMORY[0x1E0C80A78](v7);
  v195 = (uint64_t)&v153 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VStack<TupleView<(Text?, ModifiedContent<Text, _BackdropEffect<<<opaque return type of View._colorMatrix(_:)>>.0>>?)>>);
  MEMORY[0x1E0C80A78](v10);
  v160 = (uint64_t *)((char *)&v153 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v159 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IDView<VStack<TupleView<(Text?, ModifiedContent<Text, _BackdropEffect<<<opaque return type of View._colorMatrix(_:)>>.0>>?)>>, RemoteControlState>);
  v12 = MEMORY[0x1E0C80A78](v159);
  v200 = (uint64_t)&v153 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v12);
  v158 = (uint64_t)&v153 - v15;
  MEMORY[0x1E0C80A78](v14);
  v199 = (uint64_t)&v153 - v16;
  v17 = type metadata accessor for UserInterfaceSizeClass();
  v202 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v185 = (char *)&v153 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (UserInterfaceSizeClass?, UserInterfaceSizeClass?));
  v20 = MEMORY[0x1E0C80A78](v19);
  v174 = (char *)&v153 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x1E0C80A78](v20);
  v193 = (uint64_t)&v153 - v23;
  v24 = MEMORY[0x1E0C80A78](v22);
  v192 = (uint64_t)&v153 - v25;
  v26 = MEMORY[0x1E0C80A78](v24);
  v191 = (uint64_t)&v153 - v27;
  MEMORY[0x1E0C80A78](v26);
  v29 = (char *)&v153 - v28;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
  v31 = MEMORY[0x1E0C80A78](v30);
  v156 = (uint64_t)&v153 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = MEMORY[0x1E0C80A78](v31);
  v171 = (char *)&v153 - v34;
  v35 = MEMORY[0x1E0C80A78](v33);
  v172 = (char *)&v153 - v36;
  v37 = MEMORY[0x1E0C80A78](v35);
  v155 = (uint64_t)&v153 - v38;
  v39 = MEMORY[0x1E0C80A78](v37);
  v190 = (uint64_t)&v153 - v40;
  v41 = MEMORY[0x1E0C80A78](v39);
  v170 = (char *)&v153 - v42;
  v43 = MEMORY[0x1E0C80A78](v41);
  v154 = (uint64_t)&v153 - v44;
  v45 = MEMORY[0x1E0C80A78](v43);
  v188 = (uint64_t)&v153 - v46;
  v47 = MEMORY[0x1E0C80A78](v45);
  v189 = (uint64_t)&v153 - v48;
  v49 = MEMORY[0x1E0C80A78](v47);
  v169 = (char *)&v153 - v50;
  v51 = MEMORY[0x1E0C80A78](v49);
  v186 = (uint64_t)&v153 - v52;
  v53 = MEMORY[0x1E0C80A78](v51);
  v187 = (uint64_t)&v153 - v54;
  v55 = MEMORY[0x1E0C80A78](v53);
  v168 = (uint64_t)&v153 - v56;
  v57 = MEMORY[0x1E0C80A78](v55);
  v59 = (char *)&v153 - v58;
  MEMORY[0x1E0C80A78](v57);
  v61 = (char *)&v153 - v60;
  v62 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v62);
  v64 = (char *)&v153 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  v157 = a1 + *(int *)(type metadata accessor for ScreenSharingSpectatorModalOverlay(0) + 20);
  swift_retain();
  specialized Environment.wrappedValue.getter();
  v66 = v65;
  v67 = swift_release();
  (*(void (**)(uint64_t))(*(_QWORD *)v66 + 216))(v67);
  swift_release();
  LOBYTE(v216) = 1;
  ParticipantAvatar.init(_:colorStyle:)((uint64_t)v64, (unsigned __int8 *)&v216, (uint64_t)__src);
  v180 = __src[2];
  v181 = __src[1];
  v178 = __src[4];
  v179 = __src[3];
  v177 = __src[5];
  v175 = (void *)__src[0];
  v176 = __src[6];
  v173 = LOBYTE(__src[7]);
  v203 = a1;
  specialized Environment.wrappedValue.getter();
  v68 = *(void (**)(char *))(v202 + 104);
  v201 = *MEMORY[0x1E0CDC160];
  v68(v59);
  __swift_storeEnumTagSinglePayload((uint64_t)v59, 0, 1, v17);
  v198 = v19;
  v69 = (uint64_t)&v29[*(int *)(v19 + 48)];
  outlined init with copy of FeatureEligibility?((uint64_t)v61, (uint64_t)v29, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  outlined init with copy of FeatureEligibility?((uint64_t)v59, v69, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v29, 1, v17);
  v197 = v68;
  if (EnumTagSinglePayload == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v59, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    v68 = v197;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v61, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    v71 = __swift_getEnumTagSinglePayload(v69, 1, v17);
    v72 = v191;
    v73 = (uint64_t)v169;
    if (v71 == 1)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v29, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      v74 = 0x4056800000000000;
      v75 = v198;
      v76 = v201;
      v77 = v187;
      goto LABEL_9;
    }
  }
  else
  {
    v78 = v168;
    outlined init with copy of FeatureEligibility?((uint64_t)v29, v168, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    if (__swift_getEnumTagSinglePayload(v69, 1, v17) != 1)
    {
      v79 = v202;
      v80 = v185;
      (*(void (**)(char *, uint64_t, uint64_t))(v202 + 32))(v185, v69, v17);
      lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UserInterfaceSizeClass and conformance UserInterfaceSizeClass, (void (*)(uint64_t))MEMORY[0x1E0CDC170]);
      v81 = dispatch thunk of static Equatable.== infix(_:_:)();
      v82 = *(void (**)(char *, uint64_t))(v79 + 8);
      v82(v80, v17);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v59, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v61, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      v82((char *)v78, v17);
      v68 = v197;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v29, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      v74 = 0x4056800000000000;
      v75 = v198;
      v76 = v201;
      v72 = v191;
      v73 = (uint64_t)v169;
      v77 = v187;
      if ((v81 & 1) != 0)
        goto LABEL_9;
      goto LABEL_8;
    }
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v59, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v61, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    (*(void (**)(uint64_t, uint64_t))(v202 + 8))(v78, v17);
    v72 = v191;
    v73 = (uint64_t)v169;
  }
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v29, &demangling cache variable for type metadata for (UserInterfaceSizeClass?, UserInterfaceSizeClass?));
  v75 = v198;
  v76 = v201;
  v77 = v187;
LABEL_8:
  v74 = 0x4052C00000000000;
LABEL_9:
  v169 = (char *)v74;
  specialized Environment.wrappedValue.getter();
  v83 = v186;
  ((void (*)(uint64_t, uint64_t, uint64_t))v68)(v186, v76, v17);
  __swift_storeEnumTagSinglePayload(v83, 0, 1, v17);
  v84 = v72 + *(int *)(v75 + 48);
  outlined init with copy of FeatureEligibility?(v77, v72, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  outlined init with copy of FeatureEligibility?(v83, v84, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  if (__swift_getEnumTagSinglePayload(v72, 1, v17) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v83, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v77, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    if (__swift_getEnumTagSinglePayload(v84, 1, v17) == 1)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v191, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      v85 = (void (*)(uint64_t, uint64_t, uint64_t))v197;
      goto LABEL_16;
    }
    goto LABEL_14;
  }
  outlined init with copy of FeatureEligibility?(v72, v73, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  v86 = __swift_getEnumTagSinglePayload(v84, 1, v17);
  v87 = v72;
  v88 = v202;
  if (v86 == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v186, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v187, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v73, v17);
LABEL_14:
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v191, &demangling cache variable for type metadata for (UserInterfaceSizeClass?, UserInterfaceSizeClass?));
    v85 = (void (*)(uint64_t, uint64_t, uint64_t))v197;
    goto LABEL_16;
  }
  v89 = v185;
  (*(void (**)(char *, uint64_t, uint64_t))(v202 + 32))(v185, v84, v17);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UserInterfaceSizeClass and conformance UserInterfaceSizeClass, (void (*)(uint64_t))MEMORY[0x1E0CDC170]);
  dispatch thunk of static Equatable.== infix(_:_:)();
  v90 = *(void (**)(char *, uint64_t))(v88 + 8);
  v90(v89, v17);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v186, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v187, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  v90((char *)v73, v17);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v87, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  v85 = (void (*)(uint64_t, uint64_t, uint64_t))v197;
LABEL_16:
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  v191 = v204;
  LODWORD(v187) = v205;
  v186 = v206;
  LODWORD(v169) = v207;
  v167 = v209;
  v168 = v208;
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  v166 = v210;
  v165 = v211;
  v164 = v212;
  v163 = v213;
  v161 = v215;
  v162 = v214;
  v91 = static HorizontalAlignment.center.getter();
  v92 = (uint64_t)v160;
  *v160 = v91;
  *(_QWORD *)(v92 + 8) = 0;
  *(_BYTE *)(v92 + 16) = 1;
  v93 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, TupleView<(Text?, ModifiedContent<Text, _BackdropEffect<<<opaque return type of View._colorMatrix(_:)>>.0>>?)>>);
  closure #1 in closure #1 in ScreenSharingSpectatorModalOverlay.body.getter(v203, (_QWORD *)(v92 + *(int *)(v93 + 44)));
  swift_retain();
  specialized Environment.wrappedValue.getter();
  v95 = v94;
  v96 = swift_release();
  (*(void (**)(_QWORD *__return_ptr, uint64_t))(*(_QWORD *)v95 + 648))(__src, v96);
  swift_release();
  v97 = __src[0];
  v98 = v158;
  outlined init with copy of FeatureEligibility?(v92, v158, &demangling cache variable for type metadata for VStack<TupleView<(Text?, ModifiedContent<Text, _BackdropEffect<<<opaque return type of View._colorMatrix(_:)>>.0>>?)>>);
  *(_QWORD *)(v98 + *(int *)(v159 + 52)) = v97;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v92, &demangling cache variable for type metadata for VStack<TupleView<(Text?, ModifiedContent<Text, _BackdropEffect<<<opaque return type of View._colorMatrix(_:)>>.0>>?)>>);
  outlined init with take of Any?(v98, v199, &demangling cache variable for type metadata for IDView<VStack<TupleView<(Text?, ModifiedContent<Text, _BackdropEffect<<<opaque return type of View._colorMatrix(_:)>>.0>>?)>>, RemoteControlState>);
  v99 = v189;
  specialized Environment.wrappedValue.getter();
  v100 = v188;
  v85(v188, v201, v17);
  __swift_storeEnumTagSinglePayload(v100, 0, 1, v17);
  v101 = *(int *)(v75 + 48);
  v102 = v192;
  v103 = v192 + v101;
  outlined init with copy of FeatureEligibility?(v99, v192, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  outlined init with copy of FeatureEligibility?(v100, v103, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  if (__swift_getEnumTagSinglePayload(v102, 1, v17) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v100, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v99, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    v104 = __swift_getEnumTagSinglePayload(v103, 1, v17);
    v105 = (uint64_t)v170;
    if (v104 == 1)
    {
      v106 = v85;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v192, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      v107 = v198;
      v108 = v201;
      goto LABEL_23;
    }
    goto LABEL_21;
  }
  v109 = v154;
  outlined init with copy of FeatureEligibility?(v102, v154, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  v110 = __swift_getEnumTagSinglePayload(v103, 1, v17);
  v105 = (uint64_t)v170;
  if (v110 == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v188, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v189, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    (*(void (**)(uint64_t, uint64_t))(v202 + 8))(v109, v17);
LABEL_21:
    v106 = v85;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v192, &demangling cache variable for type metadata for (UserInterfaceSizeClass?, UserInterfaceSizeClass?));
    v107 = v198;
    v108 = v201;
    goto LABEL_23;
  }
  v111 = v202;
  v112 = v185;
  (*(void (**)(char *, uint64_t, uint64_t))(v202 + 32))(v185, v103, v17);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UserInterfaceSizeClass and conformance UserInterfaceSizeClass, (void (*)(uint64_t))MEMORY[0x1E0CDC170]);
  dispatch thunk of static Equatable.== infix(_:_:)();
  v113 = *(void (**)(char *, uint64_t))(v111 + 8);
  v113(v112, v17);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v188, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v189, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  v113((char *)v109, v17);
  v106 = (void (*)(uint64_t, uint64_t, uint64_t))v197;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v102, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  v107 = v198;
  v108 = v201;
LABEL_23:
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  v192 = v216;
  LODWORD(v189) = v217;
  v188 = v218;
  LODWORD(v170) = v219;
  v159 = v221;
  v160 = v220;
  ScreenSharingSpectatorModalOverlay.statusView.getter(v194);
  specialized Environment.wrappedValue.getter();
  v114 = v190;
  v106(v190, v108, v17);
  __swift_storeEnumTagSinglePayload(v114, 0, 1, v17);
  v115 = v193;
  v116 = v193 + *(int *)(v107 + 48);
  outlined init with copy of FeatureEligibility?(v105, v193, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  outlined init with copy of FeatureEligibility?(v114, v116, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  if (__swift_getEnumTagSinglePayload(v115, 1, v17) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v114, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v105, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    if (__swift_getEnumTagSinglePayload(v116, 1, v17) == 1)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v193, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      v117 = (uint64_t)v174;
      v118 = (uint64_t)v171;
      v119 = v106;
      goto LABEL_30;
    }
    goto LABEL_28;
  }
  v120 = v155;
  outlined init with copy of FeatureEligibility?(v115, v155, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  if (__swift_getEnumTagSinglePayload(v116, 1, v17) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v190, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v105, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    (*(void (**)(uint64_t, uint64_t))(v202 + 8))(v120, v17);
LABEL_28:
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v193, &demangling cache variable for type metadata for (UserInterfaceSizeClass?, UserInterfaceSizeClass?));
    v117 = (uint64_t)v174;
    v118 = (uint64_t)v171;
    v119 = v106;
    goto LABEL_32;
  }
  v121 = v202;
  v122 = v120;
  v123 = v185;
  (*(void (**)(char *, uint64_t, uint64_t))(v202 + 32))(v185, v116, v17);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UserInterfaceSizeClass and conformance UserInterfaceSizeClass, (void (*)(uint64_t))MEMORY[0x1E0CDC170]);
  v124 = dispatch thunk of static Equatable.== infix(_:_:)();
  v125 = *(void (**)(char *, uint64_t))(v121 + 8);
  v125(v123, v17);
  v119 = (void (*)(uint64_t, uint64_t, uint64_t))v197;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v190, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v105, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  v125((char *)v122, v17);
  v107 = v198;
  v108 = v201;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v115, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  v117 = (uint64_t)v174;
  v118 = (uint64_t)v171;
  if ((v124 & 1) == 0)
  {
LABEL_32:
    if (one-time initialization token for compactButtonSize == -1)
      goto LABEL_33;
    goto LABEL_44;
  }
LABEL_30:
  if (one-time initialization token for regularButtonSize != -1)
LABEL_44:
    swift_once();
LABEL_33:
  v126 = (uint64_t)v172;
  specialized Environment.wrappedValue.getter();
  v119(v118, v108, v17);
  __swift_storeEnumTagSinglePayload(v118, 0, 1, v17);
  v127 = v117 + *(int *)(v107 + 48);
  outlined init with copy of FeatureEligibility?(v126, v117, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  outlined init with copy of FeatureEligibility?(v118, v127, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  if (__swift_getEnumTagSinglePayload(v117, 1, v17) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v118, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v126, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    if (__swift_getEnumTagSinglePayload(v127, 1, v17) == 1)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v117, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      goto LABEL_40;
    }
    goto LABEL_38;
  }
  v128 = v156;
  outlined init with copy of FeatureEligibility?(v117, v156, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  if (__swift_getEnumTagSinglePayload(v127, 1, v17) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v118, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v126, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    (*(void (**)(uint64_t, uint64_t))(v202 + 8))(v128, v17);
LABEL_38:
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v117, &demangling cache variable for type metadata for (UserInterfaceSizeClass?, UserInterfaceSizeClass?));
    goto LABEL_42;
  }
  v129 = v202;
  v130 = v118;
  v131 = v126;
  v132 = v185;
  (*(void (**)(char *, uint64_t, uint64_t))(v202 + 32))(v185, v127, v17);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UserInterfaceSizeClass and conformance UserInterfaceSizeClass, (void (*)(uint64_t))MEMORY[0x1E0CDC170]);
  v133 = dispatch thunk of static Equatable.== infix(_:_:)();
  v134 = *(void (**)(char *, uint64_t))(v129 + 8);
  v134(v132, v17);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v130, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v131, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  v134((char *)v128, v17);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v117, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  if ((v133 & 1) != 0)
  {
LABEL_40:
    if (one-time initialization token for regularButtonSize == -1)
      goto LABEL_43;
    goto LABEL_45;
  }
LABEL_42:
  if (one-time initialization token for compactButtonSize != -1)
LABEL_45:
    swift_once();
LABEL_43:
  static Alignment.center.getter();
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  v135 = v194;
  v136 = v184;
  outlined init with copy of FeatureEligibility?(v194, v184, &demangling cache variable for type metadata for _ConditionalContent<_ConditionalContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, EmptyView>, ZStack<ModifiedContent<ActivityIndicator, _EnvironmentKeyWritingModifier<ControlSize>>>>);
  memcpy((void *)(v136 + *(int *)(v183 + 36)), __src, 0x70uLL);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v135, &demangling cache variable for type metadata for _ConditionalContent<_ConditionalContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, EmptyView>, ZStack<ModifiedContent<ActivityIndicator, _EnvironmentKeyWritingModifier<ControlSize>>>>);
  v137 = v136;
  v138 = v195;
  outlined init with take of Any?(v137, v195, &demangling cache variable for type metadata for ModifiedContent<_ConditionalContent<_ConditionalContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, EmptyView>, ZStack<ModifiedContent<ActivityIndicator, _EnvironmentKeyWritingModifier<ControlSize>>>>, _FlexFrameLayout>);
  outlined init with copy of FeatureEligibility?(v199, v200, &demangling cache variable for type metadata for IDView<VStack<TupleView<(Text?, ModifiedContent<Text, _BackdropEffect<<<opaque return type of View._colorMatrix(_:)>>.0>>?)>>, RemoteControlState>);
  outlined init with copy of FeatureEligibility?(v138, v196, &demangling cache variable for type metadata for ModifiedContent<_ConditionalContent<_ConditionalContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, EmptyView>, ZStack<ModifiedContent<ActivityIndicator, _EnvironmentKeyWritingModifier<ControlSize>>>>, _FlexFrameLayout>);
  v139 = v175;
  v140 = v176;
  v142 = v181;
  v141 = v182;
  *v182 = v175;
  v141[1] = v142;
  v144 = v179;
  v143 = v180;
  v141[2] = v180;
  v141[3] = v144;
  v145 = v177;
  v141[4] = v178;
  v141[5] = v145;
  v141[6] = v140;
  *((_BYTE *)v141 + 56) = v173;
  v141[8] = v191;
  *((_BYTE *)v141 + 72) = v187;
  v141[10] = v186;
  *((_BYTE *)v141 + 88) = (_BYTE)v169;
  v146 = v167;
  v141[12] = v168;
  v141[13] = v146;
  v141[14] = 0;
  *((_BYTE *)v141 + 120) = 1;
  v141[16] = v166;
  *((_BYTE *)v141 + 136) = v165;
  v141[18] = v164;
  *((_BYTE *)v141 + 152) = v163;
  v147 = v161;
  v141[20] = v162;
  v141[21] = v147;
  v148 = (int *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<ParticipantAvatar, _FrameLayout>, ModifiedContent<Spacer, _FrameLayout>, IDView<VStack<TupleView<(Text?, ModifiedContent<Text, _BackdropEffect<<<opaque return type of View._colorMatrix(_:)>>.0>>?)>>, RemoteControlState>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<_ConditionalContent<_ConditionalContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, EmptyView>, ZStack<ModifiedContent<ActivityIndicator, _EnvironmentKeyWritingModifier<ControlSize>>>>, _FlexFrameLayout>));
  outlined init with copy of FeatureEligibility?(v200, (uint64_t)v141 + v148[16], &demangling cache variable for type metadata for IDView<VStack<TupleView<(Text?, ModifiedContent<Text, _BackdropEffect<<<opaque return type of View._colorMatrix(_:)>>.0>>?)>>, RemoteControlState>);
  v149 = (char *)v141 + v148[20];
  *(_QWORD *)v149 = 0;
  v149[8] = 1;
  *((_QWORD *)v149 + 2) = v192;
  v149[24] = v189;
  *((_QWORD *)v149 + 4) = v188;
  v149[40] = (char)v170;
  v150 = v159;
  *((_QWORD *)v149 + 6) = v160;
  *((_QWORD *)v149 + 7) = v150;
  v151 = (uint64_t)v141 + v148[24];
  v152 = v196;
  outlined init with copy of FeatureEligibility?(v196, v151, &demangling cache variable for type metadata for ModifiedContent<_ConditionalContent<_ConditionalContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, EmptyView>, ZStack<ModifiedContent<ActivityIndicator, _EnvironmentKeyWritingModifier<ControlSize>>>>, _FlexFrameLayout>);
  outlined copy of ParticipantContactDetails?(v139, v142, v143);
  outlined copy of ParticipantContactDetails?(v139, v142, v143);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v195, &demangling cache variable for type metadata for ModifiedContent<_ConditionalContent<_ConditionalContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, EmptyView>, ZStack<ModifiedContent<ActivityIndicator, _EnvironmentKeyWritingModifier<ControlSize>>>>, _FlexFrameLayout>);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v199, &demangling cache variable for type metadata for IDView<VStack<TupleView<(Text?, ModifiedContent<Text, _BackdropEffect<<<opaque return type of View._colorMatrix(_:)>>.0>>?)>>, RemoteControlState>);
  outlined consume of ParticipantContactDetails?(v139, v142, v143);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v152, &demangling cache variable for type metadata for ModifiedContent<_ConditionalContent<_ConditionalContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, EmptyView>, ZStack<ModifiedContent<ActivityIndicator, _EnvironmentKeyWritingModifier<ControlSize>>>>, _FlexFrameLayout>);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v200, &demangling cache variable for type metadata for IDView<VStack<TupleView<(Text?, ModifiedContent<Text, _BackdropEffect<<<opaque return type of View._colorMatrix(_:)>>.0>>?)>>, RemoteControlState>);
  outlined consume of ParticipantContactDetails?(v139, v142, v143);
}

uint64_t closure #1 in closure #1 in ScreenSharingSpectatorModalOverlay.body.getter@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int *v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int EnumTagSinglePayload;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t);
  char *v50;
  char v51;
  void (*v52)(char *, uint64_t);
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char v72;
  void (*v73)(char *, uint64_t);
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  uint64_t v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;

  v113 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _BackdropEffect<<<opaque return type of View._colorMatrix(_:)>>.0>);
  MEMORY[0x1E0C80A78](v3);
  v104 = (char *)&v95 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Text, _BackdropEffect<<<opaque return type of View._colorMatrix(_:)>>.0>>);
  v5 = MEMORY[0x1E0C80A78](v111);
  v103 = (char *)&v95 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v102 = (uint64_t)&v95 - v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Text, _BackdropEffect<<<opaque return type of View._colorMatrix(_:)>>.0>>?);
  v9 = MEMORY[0x1E0C80A78](v8);
  v112 = (uint64_t)&v95 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v110 = (uint64_t)&v95 - v11;
  v12 = type metadata accessor for UserInterfaceSizeClass();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v100 = (char *)&v95 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (UserInterfaceSizeClass?, UserInterfaceSizeClass?));
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v95 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v95 - v19;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
  v22 = MEMORY[0x1E0C80A78](v21);
  v109 = (char *)&v95 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x1E0C80A78](v22);
  v106 = (char *)&v95 - v25;
  v26 = MEMORY[0x1E0C80A78](v24);
  v114 = (uint64_t)&v95 - v27;
  v28 = MEMORY[0x1E0C80A78](v26);
  v30 = (char *)&v95 - v29;
  v31 = MEMORY[0x1E0C80A78](v28);
  v33 = (char *)&v95 - v32;
  MEMORY[0x1E0C80A78](v31);
  v35 = (char *)&v95 - v34;
  v36 = ScreenSharingSpectatorModalOverlay.title.getter();
  v38 = (unsigned int *)MEMORY[0x1E0CDC160];
  if (!v37)
  {
    v107 = 0;
    v108 = 0;
    v46 = 0;
    v105 = 0;
    v47 = (uint64_t)v109;
    goto LABEL_13;
  }
  v108 = v18;
  *(_QWORD *)&v115 = v36;
  *((_QWORD *)&v115 + 1) = v37;
  lazy protocol witness table accessor for type String and conformance String();
  v97 = Text.init<A>(_:)();
  v96 = v39;
  LODWORD(v107) = v40;
  v98 = v41;
  specialized Environment.wrappedValue.getter();
  v42 = *v38;
  v101 = v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 104))(v33, v42, v12);
  __swift_storeEnumTagSinglePayload((uint64_t)v33, 0, 1, v12);
  v43 = (uint64_t)&v20[*(int *)(v15 + 48)];
  outlined init with copy of FeatureEligibility?((uint64_t)v35, (uint64_t)v20, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  outlined init with copy of FeatureEligibility?((uint64_t)v33, v43, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v20, 1, v12);
  v99 = v15;
  if (EnumTagSinglePayload != 1)
  {
    outlined init with copy of FeatureEligibility?((uint64_t)v20, (uint64_t)v30, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    if (__swift_getEnumTagSinglePayload(v43, 1, v12) != 1)
    {
      v48 = v101;
      v49 = *(void (**)(char *, uint64_t, uint64_t))(v101 + 32);
      v105 = a1;
      v50 = v100;
      v49(v100, v43, v12);
      lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UserInterfaceSizeClass and conformance UserInterfaceSizeClass, (void (*)(uint64_t))MEMORY[0x1E0CDC170]);
      v51 = dispatch thunk of static Equatable.== infix(_:_:)();
      v52 = *(void (**)(char *, uint64_t))(v48 + 8);
      v52(v50, v12);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v33, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v35, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      v52(v30, v12);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v20, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      v18 = v108;
      v45 = v109;
      if ((v51 & 1) != 0)
        goto LABEL_10;
LABEL_11:
      static Font.title3.getter();
      static Font.Weight.medium.getter();
      goto LABEL_12;
    }
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v33, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v35, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    (*(void (**)(char *, uint64_t))(v101 + 8))(v30, v12);
LABEL_8:
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v20, &demangling cache variable for type metadata for (UserInterfaceSizeClass?, UserInterfaceSizeClass?));
    v18 = v108;
    v45 = v109;
    goto LABEL_11;
  }
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v33, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v35, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  if (__swift_getEnumTagSinglePayload(v43, 1, v12) != 1)
    goto LABEL_8;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v20, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  v18 = v108;
  v45 = v109;
LABEL_10:
  static Font.title2.getter();
  static Font.Weight.semibold.getter();
LABEL_12:
  Font.weight(_:)();
  swift_release();
  v53 = v107 & 1;
  v54 = v97;
  v55 = v96;
  v56 = Text.font(_:)();
  v107 = v57;
  v108 = (char *)v56;
  v59 = v58;
  v105 = v60;
  swift_release();
  v46 = v59 & 1;
  outlined consume of Text.Storage(v54, v55, v53);
  swift_bridgeObjectRelease();
  v13 = v101;
  v15 = v99;
  v47 = (uint64_t)v45;
LABEL_13:
  v61 = (uint64_t)v106;
  v62 = ScreenSharingSpectatorModalOverlay.statusText.getter();
  v64 = v114;
  if (v63)
  {
    *(_QWORD *)&v115 = v62;
    *((_QWORD *)&v115 + 1) = v63;
    lazy protocol witness table accessor for type String and conformance String();
    v109 = (char *)Text.init<A>(_:)();
    v106 = v65;
    LODWORD(v101) = v66;
    specialized Environment.wrappedValue.getter();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v13 + 104))(v61, *MEMORY[0x1E0CDC160], v12);
    __swift_storeEnumTagSinglePayload(v61, 0, 1, v12);
    v67 = (uint64_t)&v18[*(int *)(v15 + 48)];
    outlined init with copy of FeatureEligibility?(v64, (uint64_t)v18, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    outlined init with copy of FeatureEligibility?(v61, v67, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v12) == 1)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v61, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v64, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      if (__swift_getEnumTagSinglePayload(v67, 1, v12) == 1)
      {
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v18, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
LABEL_22:
        static Font.body.getter();
LABEL_24:
        v74 = v101 & 1;
        v75 = (uint64_t)v109;
        v76 = (uint64_t)v106;
        v77 = Text.font(_:)();
        v79 = v78;
        v81 = v80;
        v83 = v82;
        swift_release();
        outlined consume of Text.Storage(v75, v76, v74);
        swift_bridgeObjectRelease();
        v115 = xmmword_1BD64AC40;
        v116 = xmmword_1BD64AC50;
        v117 = xmmword_1BD64AC60;
        v118 = xmmword_1BD64AC70;
        v119 = xmmword_1BD647E20;
        v84 = (uint64_t)v104;
        View._colorMatrix(_:)();
        v69 = v111;
        v85 = v103;
        outlined init with copy of FeatureEligibility?(v84, (uint64_t)&v103[*(int *)(v111 + 36)], &demangling cache variable for type metadata for _BackdropEffect<<<opaque return type of View._colorMatrix(_:)>>.0>);
        *(_QWORD *)v85 = v77;
        *((_QWORD *)v85 + 1) = v79;
        v85[16] = v81 & 1;
        *((_QWORD *)v85 + 3) = v83;
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v84, &demangling cache variable for type metadata for _BackdropEffect<<<opaque return type of View._colorMatrix(_:)>>.0>);
        v86 = (uint64_t)v85;
        v87 = v102;
        outlined init with take of Any?(v86, v102, &demangling cache variable for type metadata for ModifiedContent<Text, _BackdropEffect<<<opaque return type of View._colorMatrix(_:)>>.0>>);
        v70 = v110;
        outlined init with take of Any?(v87, v110, &demangling cache variable for type metadata for ModifiedContent<Text, _BackdropEffect<<<opaque return type of View._colorMatrix(_:)>>.0>>);
        v68 = 0;
        goto LABEL_25;
      }
    }
    else
    {
      outlined init with copy of FeatureEligibility?((uint64_t)v18, v47, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      if (__swift_getEnumTagSinglePayload(v67, 1, v12) != 1)
      {
        v71 = v100;
        (*(void (**)(char *, uint64_t, uint64_t))(v13 + 32))(v100, v67, v12);
        lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UserInterfaceSizeClass and conformance UserInterfaceSizeClass, (void (*)(uint64_t))MEMORY[0x1E0CDC170]);
        v72 = dispatch thunk of static Equatable.== infix(_:_:)();
        v73 = *(void (**)(char *, uint64_t))(v13 + 8);
        v73(v71, v12);
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v61, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v114, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
        v73((char *)v47, v12);
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v18, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
        if ((v72 & 1) != 0)
          goto LABEL_22;
LABEL_23:
        static Font.subheadline.getter();
        static Font.Weight.regular.getter();
        Font.weight(_:)();
        swift_release();
        goto LABEL_24;
      }
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v61, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v64, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v47, v12);
    }
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v18, &demangling cache variable for type metadata for (UserInterfaceSizeClass?, UserInterfaceSizeClass?));
    goto LABEL_23;
  }
  v68 = 1;
  v70 = v110;
  v69 = v111;
LABEL_25:
  __swift_storeEnumTagSinglePayload(v70, v68, 1, v69);
  v88 = v112;
  outlined init with copy of FeatureEligibility?(v70, v112, &demangling cache variable for type metadata for ModifiedContent<Text, _BackdropEffect<<<opaque return type of View._colorMatrix(_:)>>.0>>?);
  v89 = v113;
  v91 = v107;
  v90 = (uint64_t)v108;
  *v113 = v108;
  v89[1] = v91;
  v92 = v105;
  v89[2] = v46;
  v89[3] = v92;
  v93 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Text?, ModifiedContent<Text, _BackdropEffect<<<opaque return type of View._colorMatrix(_:)>>.0>>?));
  outlined init with copy of FeatureEligibility?(v88, (uint64_t)v89 + *(int *)(v93 + 48), &demangling cache variable for type metadata for ModifiedContent<Text, _BackdropEffect<<<opaque return type of View._colorMatrix(_:)>>.0>>?);
  outlined copy of Text?(v90, v91, v46, v92);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v70, &demangling cache variable for type metadata for ModifiedContent<Text, _BackdropEffect<<<opaque return type of View._colorMatrix(_:)>>.0>>?);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v88, &demangling cache variable for type metadata for ModifiedContent<Text, _BackdropEffect<<<opaque return type of View._colorMatrix(_:)>>.0>>?);
  return outlined consume of Text?(v90, v91, v46, v92);
}

void ScreenSharingSpectatorModalOverlay.init()(uint64_t *a1@<X8>)
{
  uint64_t v1;
  char v2;

  *a1 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
  OUTLINED_FUNCTION_46_15();
  type metadata accessor for ScreenSharingSpectatorModalOverlay(0);
  OUTLINED_FUNCTION_50_18();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ScreenSharingSpectatorViewModel and conformance ScreenSharingSpectatorViewModel, (void (*)(uint64_t))type metadata accessor for ScreenSharingSpectatorViewModel);
  *(_QWORD *)v1 = OUTLINED_FUNCTION_42_18();
  *(_BYTE *)(v1 + 8) = v2 & 1;
  OUTLINED_FUNCTION_0();
}

uint64_t ScreenSharingOverlayPlatterButtonStyle.init()@<X0>(uint64_t *a1@<X8>)
{
  *a1 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
  return OUTLINED_FUNCTION_36_7();
}

void ScreenSharingSpectatorModalOverlay.init(horizontalSizeClass:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char v3;

  outlined init with take of Any?(a1, a2, &demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>);
  type metadata accessor for ScreenSharingSpectatorModalOverlay(0);
  OUTLINED_FUNCTION_50_18();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ScreenSharingSpectatorViewModel and conformance ScreenSharingSpectatorViewModel, (void (*)(uint64_t))type metadata accessor for ScreenSharingSpectatorViewModel);
  *(_QWORD *)v2 = OUTLINED_FUNCTION_42_18();
  *(_BYTE *)(v2 + 8) = v3 & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD138050()
{
  EnvironmentValues.controlSize.getter();
  OUTLINED_FUNCTION_0();
}

uint64_t key path setter for EnvironmentValues.controlSize : EnvironmentValues(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = type metadata accessor for ControlSize();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  return MEMORY[0x1C3B71870](v4);
}

void key path getter for EnvironmentValues.font : EnvironmentValues, serialized()
{
  uint64_t *v0;

  *v0 = OUTLINED_FUNCTION_58_14();
  OUTLINED_FUNCTION_0();
}

void sub_1BD138108()
{
  uint64_t *v0;

  *v0 = OUTLINED_FUNCTION_58_14();
  OUTLINED_FUNCTION_0();
}

void key path setter for EnvironmentValues.font : EnvironmentValues, serialized()
{
  swift_retain();
  EnvironmentValues.font.setter();
  OUTLINED_FUNCTION_0();
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<_BackdropEffectPlaceholder, _BlurEffect> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<_BackdropEffectPlaceholder, _BlurEffect> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<_BackdropEffectPlaceholder, _BlurEffect> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<_BackdropEffectPlaceholder, _BlurEffect>);
    v2[0] = MEMORY[0x1E0CDCA68];
    v2[1] = MEMORY[0x1E0CD89B8];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<_BackdropEffectPlaceholder, _BlurEffect> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t type metadata accessor for ScreenSharingSpectatorModalOverlay(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for ScreenSharingSpectatorModalOverlay);
}

uint64_t associated type witness table accessor for Transition.Body : View in ModalOverlayTransition()
{
  return swift_getOpaqueTypeConformance2();
}

void base witness table accessor for View in ActivityIndicator()
{
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ActivityIndicator and conformance ActivityIndicator, (void (*)(uint64_t))type metadata accessor for ActivityIndicator);
}

uint64_t associated type witness table accessor for ButtonStyle.Body : View in ScreenSharingOverlayPlatterButtonStyle()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for View.Body : View in ScreenSharingSpectatorModalOverlay()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for ModalOverlayTransition()
{
  return &type metadata for ModalOverlayTransition;
}

uint64_t *initializeBufferWithCopyOfBuffer for ActivityIndicator(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ControlSize>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = type metadata accessor for ControlSize();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v9 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
  }
  return a1;
}

uint64_t destroy for ActivityIndicator(uint64_t a1)
{
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ControlSize>.Content);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v2 = type metadata accessor for ControlSize();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

_QWORD *initializeWithCopy for ActivityIndicator(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ControlSize>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = type metadata accessor for ControlSize();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v7 = a3[6];
  *(_QWORD *)((char *)a1 + a3[5]) = *(_QWORD *)((char *)a2 + a3[5]);
  *(_QWORD *)((char *)a1 + v7) = *(_QWORD *)((char *)a2 + v7);
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  return a1;
}

_QWORD *assignWithCopy for ActivityIndicator(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)a1, &demangling cache variable for type metadata for Environment<ControlSize>.Content);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ControlSize>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = type metadata accessor for ControlSize();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *(_QWORD *)((char *)a1 + a3[5]) = *(_QWORD *)((char *)a2 + a3[5]);
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  return a1;
}

char *initializeWithTake for ActivityIndicator(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ControlSize>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = type metadata accessor for ControlSize();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = a3[6];
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  *(_QWORD *)&a1[v8] = *(_QWORD *)&a2[v8];
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  return a1;
}

char *assignWithTake for ActivityIndicator(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)a1, &demangling cache variable for type metadata for Environment<ControlSize>.Content);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ControlSize>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = type metadata accessor for ControlSize();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = a3[6];
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  *(_QWORD *)&a1[v8] = *(_QWORD *)&a2[v8];
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivityIndicator()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BD1386C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_116_0();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ControlSize>);
  return OUTLINED_FUNCTION_35_13(v1, v0, v2);
}

uint64_t storeEnumTagSinglePayload for ActivityIndicator()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BD1386FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_116_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ControlSize>);
  v0 = OUTLINED_FUNCTION_29_4();
  return OUTLINED_FUNCTION_34_5(v0, v1, v2, v3);
}

void type metadata completion function for ActivityIndicator()
{
  unint64_t v0;

  type metadata accessor for Environment<ControlSize>.Content();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void type metadata accessor for Environment<ControlSize>.Content()
{
  unint64_t v0;
  uint64_t v1;

  if (!lazy cache variable for type metadata for Environment<ControlSize>.Content)
  {
    type metadata accessor for ControlSize();
    v0 = type metadata accessor for Environment.Content();
    if (!v1)
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Environment<ControlSize>.Content);
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for ScreenSharingOverlayPlatterButtonStyle(uint64_t *a1, uint64_t *a2)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content)
                             - 8)
                 + 80);
  if ((v4 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v5 = type metadata accessor for UserInterfaceSizeClass();
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v5))
      {
        v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v5);
      }
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for ScreenSharingOverlayPlatterButtonStyle(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v2 = type metadata accessor for UserInterfaceSizeClass();
  result = __swift_getEnumTagSinglePayload(a1, 1, v2);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return result;
}

_QWORD *initializeWithCopy for ScreenSharingOverlayPlatterButtonStyle(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = type metadata accessor for UserInterfaceSizeClass();
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v4))
    {
      v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v4);
    }
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *assignWithCopy for ScreenSharingOverlayPlatterButtonStyle(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  if (a1 != a2)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)a1, &demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v4 = type metadata accessor for UserInterfaceSizeClass();
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v4))
      {
        v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v4);
      }
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *initializeWithTake for ScreenSharingOverlayPlatterButtonStyle(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = type metadata accessor for UserInterfaceSizeClass();
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v5))
    {
      v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v5);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for ScreenSharingOverlayPlatterButtonStyle(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (a1 != a2)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)a1, &demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
    v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v5 = type metadata accessor for UserInterfaceSizeClass();
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v5))
      {
        v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v5);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for ScreenSharingOverlayPlatterButtonStyle()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BD138D74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_116_0();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>);
  return OUTLINED_FUNCTION_35_13(v1, v0, v2);
}

uint64_t storeEnumTagSinglePayload for ScreenSharingOverlayPlatterButtonStyle()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BD138DB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_116_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>);
  v0 = OUTLINED_FUNCTION_29_4();
  return OUTLINED_FUNCTION_34_5(v0, v1, v2, v3);
}

uint64_t type metadata accessor for ScreenSharingOverlayPlatterButtonStyle(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for ScreenSharingOverlayPlatterButtonStyle);
}

void type metadata completion function for ScreenSharingOverlayPlatterButtonStyle()
{
  unint64_t v0;

  type metadata accessor for Environment<UserInterfaceSizeClass?>.Content();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t *initializeBufferWithCopyOfBuffer for ScreenSharingSpectatorModalOverlay(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = type metadata accessor for UserInterfaceSizeClass();
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
      {
        v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
      }
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v10 = *(int *)(a3 + 20);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = *(_QWORD *)v12;
    LOBYTE(v12) = v12[8];
    *(_QWORD *)v11 = v13;
    v11[8] = (char)v12;
  }
  swift_retain();
  return a1;
}

uint64_t destroy for ScreenSharingSpectatorModalOverlay(uint64_t a1)
{
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v2 = type metadata accessor for UserInterfaceSizeClass();
    if (!__swift_getEnumTagSinglePayload(a1, 1, v2))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  }
  else
  {
    swift_release();
  }
  return swift_release();
}

_QWORD *initializeWithCopy for ScreenSharingSpectatorModalOverlay(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = type metadata accessor for UserInterfaceSizeClass();
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
    {
      v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
    }
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = *(_QWORD *)v10;
  LOBYTE(v10) = v10[8];
  *(_QWORD *)v9 = v11;
  v9[8] = (char)v10;
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for ScreenSharingSpectatorModalOverlay(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  if (a1 != a2)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)a1, &demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = type metadata accessor for UserInterfaceSizeClass();
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
      {
        v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      }
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = *(_QWORD *)v10;
  LOBYTE(v10) = v10[8];
  *(_QWORD *)v9 = v11;
  v9[8] = (char)v10;
  swift_retain();
  swift_release();
  return a1;
}

char *initializeWithTake for ScreenSharingSpectatorModalOverlay(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = type metadata accessor for UserInterfaceSizeClass();
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  *(_QWORD *)v10 = *(_QWORD *)v11;
  v10[8] = v11[8];
  return a1;
}

char *assignWithTake for ScreenSharingSpectatorModalOverlay(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  if (a1 != a2)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)a1, &demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = type metadata accessor for UserInterfaceSizeClass();
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
      {
        v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *(_QWORD *)v11;
  LOBYTE(v11) = v11[8];
  *(_QWORD *)v10 = v12;
  v10[8] = (char)v11;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ScreenSharingSpectatorModalOverlay()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BD1394C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unsigned int v8;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  v8 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20) + 8);
  if (v8 > 1)
    return (v8 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ScreenSharingSpectatorModalOverlay()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BD13954C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  char v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_116_0();
  result = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>);
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
  {
    v9 = OUTLINED_FUNCTION_29_4();
    return __swift_storeEnumTagSinglePayload(v9, v10, v11, v12);
  }
  else
  {
    *(_BYTE *)(v5 + *(int *)(a4 + 20) + 8) = -v4;
  }
  return result;
}

void type metadata completion function for ScreenSharingSpectatorModalOverlay()
{
  unint64_t v0;

  type metadata accessor for Environment<UserInterfaceSizeClass?>.Content();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_1BD139628()
{
  return lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<PlaceholderContentView<ModalOverlayTransition>, _OpacityEffect>, _BlurEffect>, _ScaleEffect> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<PlaceholderContentView<ModalOverlayTransition>, _OpacityEffect>, _BlurEffect>, _ScaleEffect> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<PlaceholderContentView<ModalOverlayTransition>, _OpacityEffect>, _BlurEffect>, _ScaleEffect>, lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<PlaceholderContentView<ModalOverlayTransition>, _OpacityEffect>, _BlurEffect> and conformance <> ModifiedContent<A, B>, MEMORY[0x1E0CD8DA8]);
}

uint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<PlaceholderContentView<ModalOverlayTransition>, _OpacityEffect>, _BlurEffect> and conformance <> ModifiedContent<A, B>()
{
  return lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<PlaceholderContentView<ModalOverlayTransition>, _OpacityEffect>, _BlurEffect>, _ScaleEffect> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<PlaceholderContentView<ModalOverlayTransition>, _OpacityEffect>, _BlurEffect> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<PlaceholderContentView<ModalOverlayTransition>, _OpacityEffect>, _BlurEffect>, (uint64_t (*)(void))lazy protocol witness table accessor for type ModifiedContent<PlaceholderContentView<ModalOverlayTransition>, _OpacityEffect> and conformance <> ModifiedContent<A, B>, MEMORY[0x1E0CD89B8]);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<PlaceholderContentView<ModalOverlayTransition>, _OpacityEffect> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<PlaceholderContentView<ModalOverlayTransition>, _OpacityEffect> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<PlaceholderContentView<ModalOverlayTransition>, _OpacityEffect> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<PlaceholderContentView<ModalOverlayTransition>, _OpacityEffect>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type PlaceholderContentView<ModalOverlayTransition> and conformance PlaceholderContentView<A>, &demangling cache variable for type metadata for PlaceholderContentView<ModalOverlayTransition>);
    v3[0] = v2;
    v3[1] = MEMORY[0x1E0CD9728];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v3);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<PlaceholderContentView<ModalOverlayTransition>, _OpacityEffect> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<Font?>>, _OpacityEffect>, _FlexFrameLayout>, _BackgroundModifier<ModifiedContent<Capsule, _BackdropEffect<<<opaque return type of View._colorMatrix(_:)>>.0>>>>, _ContentShapeModifier<Capsule>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<Font?>>, _OpacityEffect>, _FlexFrameLayout>, _BackgroundModifier<ModifiedContent<Capsule, _BackdropEffect<<<opaque return type of View._colorMatrix(_:)>>.0>>>>, _ContentShapeModifier<Capsule>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<Font?>>, _OpacityEffect>, _FlexFrameLayout>, _BackgroundModifier<ModifiedContent<Capsule, _BackdropEffect<<<opaque return type of View._colorMatrix(_:)>>.0>>>>, _ContentShapeModifier<Capsule>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<Font?>>, _OpacityEffect>, _FlexFrameLayout>, _BackgroundModifier<ModifiedContent<Capsule, _BackdropEffect<<<opaque return type of View._colorMatrix(_:)>>.0>>>>, _ContentShapeModifier<Capsule>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<Font?>>, _OpacityEffect>, _FlexFrameLayout>, _BackgroundModifier<ModifiedContent<Capsule, _BackdropEffect<<<opaque return type of View._colorMatrix(_:)>>.0>>>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _ContentShapeModifier<Capsule> and conformance _ContentShapeModifier<A>, &demangling cache variable for type metadata for _ContentShapeModifier<Capsule>);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<Font?>>, _OpacityEffect>, _FlexFrameLayout>, _BackgroundModifier<ModifiedContent<Capsule, _BackdropEffect<<<opaque return type of View._colorMatrix(_:)>>.0>>>>, _ContentShapeModifier<Capsule>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<Font?>>, _OpacityEffect>, _FlexFrameLayout>, _BackgroundModifier<ModifiedContent<Capsule, _BackdropEffect<<<opaque return type of View._colorMatrix(_:)>>.0>>>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<Font?>>, _OpacityEffect>, _FlexFrameLayout>, _BackgroundModifier<ModifiedContent<Capsule, _BackdropEffect<<<opaque return type of View._colorMatrix(_:)>>.0>>>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<Font?>>, _OpacityEffect>, _FlexFrameLayout>, _BackgroundModifier<ModifiedContent<Capsule, _BackdropEffect<<<opaque return type of View._colorMatrix(_:)>>.0>>>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<Font?>>, _OpacityEffect>, _FlexFrameLayout>, _BackgroundModifier<ModifiedContent<Capsule, _BackdropEffect<<<opaque return type of View._colorMatrix(_:)>>.0>>>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<PlaceholderContentView<ModalOverlayTransition>, _OpacityEffect>, _BlurEffect>, _ScaleEffect> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<Font?>>, _OpacityEffect>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<Font?>>, _OpacityEffect>, _FlexFrameLayout>, lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<Font?>>, _OpacityEffect> and conformance <> ModifiedContent<A, B>, MEMORY[0x1E0CDA228]);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _BackgroundModifier<ModifiedContent<Capsule, _BackdropEffect<<<opaque return type of View._colorMatrix(_:)>>.0>>> and conformance _BackgroundModifier<A>, &demangling cache variable for type metadata for _BackgroundModifier<ModifiedContent<Capsule, _BackdropEffect<<<opaque return type of View._colorMatrix(_:)>>.0>>>);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<Font?>>, _OpacityEffect>, _FlexFrameLayout>, _BackgroundModifier<ModifiedContent<Capsule, _BackdropEffect<<<opaque return type of View._colorMatrix(_:)>>.0>>>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<Font?>>, _OpacityEffect> and conformance <> ModifiedContent<A, B>()
{
  return lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<PlaceholderContentView<ModalOverlayTransition>, _OpacityEffect>, _BlurEffect>, _ScaleEffect> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<Font?>>, _OpacityEffect> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<Font?>>, _OpacityEffect>, (uint64_t (*)(void))lazy protocol witness table accessor for type ModifiedContent<ButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>, MEMORY[0x1E0CD9728]);
}

uint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<PlaceholderContentView<ModalOverlayTransition>, _OpacityEffect>, _BlurEffect>, _ScaleEffect> and conformance <> ModifiedContent<A, B>(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = a3();
    v9[1] = a4;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<Font?>>);
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label, (void (*)(uint64_t))MEMORY[0x1E0CDC528]);
    v3 = v2;
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Font?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Font?>);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v5);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<ParticipantAvatar, _FrameLayout>, ModifiedContent<Spacer, _FrameLayout>, IDView<VStack<TupleView<(Text?, ModifiedContent<Text, _BackdropEffect<<<opaque return type of View._colorMatrix(_:)>>.0>>?)>>, RemoteControlState>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<_ConditionalContent<_ConditionalContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, EmptyView>, ZStack<ModifiedContent<ActivityIndicator, _EnvironmentKeyWritingModifier<ControlSize>>>>, _FlexFrameLayout>)>>, _FlexFrameLayout>, _AnimationModifier<RemoteControlState>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<ParticipantAvatar, _FrameLayout>, ModifiedContent<Spacer, _FrameLayout>, IDView<VStack<TupleView<(Text?, ModifiedContent<Text, _BackdropEffect<<<opaque return type of View._colorMatrix(_:)>>.0>>?)>>, RemoteControlState>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<_ConditionalContent<_ConditionalContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, EmptyView>, ZStack<ModifiedContent<ActivityIndicator, _EnvironmentKeyWritingModifier<ControlSize>>>>, _FlexFrameLayout>)>>, _FlexFrameLayout>, _AnimationModifier<RemoteControlState>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<ParticipantAvatar, _FrameLayout>, ModifiedContent<Spacer, _FrameLayout>, IDView<VStack<TupleView<(Text?, ModifiedContent<Text, _BackdropEffect<<<opaque return type of View._colorMatrix(_:)>>.0>>?)>>, RemoteControlState>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<_ConditionalContent<_ConditionalContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, EmptyView>, ZStack<ModifiedContent<ActivityIndicator, _EnvironmentKeyWritingModifier<ControlSize>>>>, _FlexFrameLayout>)>>, _FlexFrameLayout>, _AnimationModifier<RemoteControlState>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<ParticipantAvatar, _FrameLayout>, ModifiedContent<Spacer, _FrameLayout>, IDView<VStack<TupleView<(Text?, ModifiedContent<Text, _BackdropEffect<<<opaque return type of View._colorMatrix(_:)>>.0>>?)>>, RemoteControlState>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<_ConditionalContent<_ConditionalContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, EmptyView>, ZStack<ModifiedContent<ActivityIndicator, _EnvironmentKeyWritingModifier<ControlSize>>>>, _FlexFrameLayout>)>>, _FlexFrameLayout>, _AnimationModifier<RemoteControlState>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<VStack<TupleView<(ModifiedContent<ParticipantAvatar, _FrameLayout>, ModifiedContent<Spacer, _FrameLayout>, IDView<VStack<TupleView<(Text?, ModifiedContent<Text, _BackdropEffect<<<opaque return type of View._colorMatrix(_:)>>.0>>?)>>, RemoteControlState>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<_ConditionalContent<_ConditionalContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, EmptyView>, ZStack<ModifiedContent<ActivityIndicator, _EnvironmentKeyWritingModifier<ControlSize>>>>, _FlexFrameLayout>)>>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _AnimationModifier<RemoteControlState> and conformance _AnimationModifier<A>, &demangling cache variable for type metadata for _AnimationModifier<RemoteControlState>);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<ParticipantAvatar, _FrameLayout>, ModifiedContent<Spacer, _FrameLayout>, IDView<VStack<TupleView<(Text?, ModifiedContent<Text, _BackdropEffect<<<opaque return type of View._colorMatrix(_:)>>.0>>?)>>, RemoteControlState>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<_ConditionalContent<_ConditionalContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, EmptyView>, ZStack<ModifiedContent<ActivityIndicator, _EnvironmentKeyWritingModifier<ControlSize>>>>, _FlexFrameLayout>)>>, _FlexFrameLayout>, _AnimationModifier<RemoteControlState>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<VStack<TupleView<(ModifiedContent<ParticipantAvatar, _FrameLayout>, ModifiedContent<Spacer, _FrameLayout>, IDView<VStack<TupleView<(Text?, ModifiedContent<Text, _BackdropEffect<<<opaque return type of View._colorMatrix(_:)>>.0>>?)>>, RemoteControlState>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<_ConditionalContent<_ConditionalContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, EmptyView>, ZStack<ModifiedContent<ActivityIndicator, _EnvironmentKeyWritingModifier<ControlSize>>>>, _FlexFrameLayout>)>>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<VStack<TupleView<(ModifiedContent<ParticipantAvatar, _FrameLayout>, ModifiedContent<Spacer, _FrameLayout>, IDView<VStack<TupleView<(Text?, ModifiedContent<Text, _BackdropEffect<<<opaque return type of View._colorMatrix(_:)>>.0>>?)>>, RemoteControlState>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<_ConditionalContent<_ConditionalContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, EmptyView>, ZStack<ModifiedContent<ActivityIndicator, _EnvironmentKeyWritingModifier<ControlSize>>>>, _FlexFrameLayout>)>>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<VStack<TupleView<(ModifiedContent<ParticipantAvatar, _FrameLayout>, ModifiedContent<Spacer, _FrameLayout>, IDView<VStack<TupleView<(Text?, ModifiedContent<Text, _BackdropEffect<<<opaque return type of View._colorMatrix(_:)>>.0>>?)>>, RemoteControlState>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<_ConditionalContent<_ConditionalContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, EmptyView>, ZStack<ModifiedContent<ActivityIndicator, _EnvironmentKeyWritingModifier<ControlSize>>>>, _FlexFrameLayout>)>>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(ModifiedContent<ParticipantAvatar, _FrameLayout>, ModifiedContent<Spacer, _FrameLayout>, IDView<VStack<TupleView<(Text?, ModifiedContent<Text, _BackdropEffect<<<opaque return type of View._colorMatrix(_:)>>.0>>?)>>, RemoteControlState>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<_ConditionalContent<_ConditionalContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, EmptyView>, ZStack<ModifiedContent<ActivityIndicator, _EnvironmentKeyWritingModifier<ControlSize>>>>, _FlexFrameLayout>)>>, _FlexFrameLayout>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type VStack<TupleView<(ModifiedContent<ParticipantAvatar, _FrameLayout>, ModifiedContent<Spacer, _FrameLayout>, IDView<VStack<TupleView<(Text?, ModifiedContent<Text, _BackdropEffect<<<opaque return type of View._colorMatrix(_:)>>.0>>?)>>, RemoteControlState>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<_ConditionalContent<_ConditionalContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, EmptyView>, ZStack<ModifiedContent<ActivityIndicator, _EnvironmentKeyWritingModifier<ControlSize>>>>, _FlexFrameLayout>)>> and conformance VStack<A>, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<ParticipantAvatar, _FrameLayout>, ModifiedContent<Spacer, _FrameLayout>, IDView<VStack<TupleView<(Text?, ModifiedContent<Text, _BackdropEffect<<<opaque return type of View._colorMatrix(_:)>>.0>>?)>>, RemoteControlState>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<_ConditionalContent<_ConditionalContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, EmptyView>, ZStack<ModifiedContent<ActivityIndicator, _EnvironmentKeyWritingModifier<ControlSize>>>>, _FlexFrameLayout>)>>);
    v3[0] = v2;
    v3[1] = MEMORY[0x1E0CDA228];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v3);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<VStack<TupleView<(ModifiedContent<ParticipantAvatar, _FrameLayout>, ModifiedContent<Spacer, _FrameLayout>, IDView<VStack<TupleView<(Text?, ModifiedContent<Text, _BackdropEffect<<<opaque return type of View._colorMatrix(_:)>>.0>>?)>>, RemoteControlState>, ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<_ConditionalContent<_ConditionalContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, EmptyView>, ZStack<ModifiedContent<ActivityIndicator, _EnvironmentKeyWritingModifier<ControlSize>>>>, _FlexFrameLayout>)>>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t outlined retain of ModifiedContent<ModifiedContent<VideoMessageControlsView.RemoteBottomControlsView, _PaddingLayout>, _PaddingLayout>(uint64_t a1)
{
  id v2;

  v2 = *(id *)(a1 + 8);
  return a1;
}

uint64_t outlined retain of _ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>(uint64_t a1)
{
  outlined copy of _ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>.Storage(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(void **)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_WORD *)(a1 + 80), *(_BYTE *)(a1 + 82));
  return a1;
}

id outlined copy of _ConditionalContent<_ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>.Storage(uint64_t a1, char a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, __int16 a11, char a12)
{
  if ((a12 & 1) == 0)
    return outlined copy of _ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>.Storage(a1, a2, a3, a4);
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(a1, a2 & 1);
  return a4;
}

id outlined copy of _ConditionalContent<ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>, ModifiedContent<VideoMessageControlsView.TopControlsView, _PaddingLayout>>.Storage(uint64_t a1, char a2, uint64_t a3, void *a4)
{
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(a1, a2 & 1);
  return a4;
}

uint64_t outlined retain of HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<AnimatedSaveButton, _FrameLayout>, _PaddingLayout>)>>(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 48);
  swift_retain();
  v3 = v2;
  return a1;
}

uint64_t outlined retain of ModifiedContent<Text, _PaddingLayout>(uint64_t a1)
{
  outlined copy of Text.Storage(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t outlined init with take of Text.Storage(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x1E0CDDCD8] - 8) + 32))(a2, a1);
  return a2;
}

uint64_t outlined retain of Text.Storage(uint64_t a1)
{
  outlined copy of Text.Storage(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  return a1;
}

void *outlined copy of ParticipantContactDetails?(void *result, uint64_t a2, uint64_t a3)
{
  id v3;

  if (a3)
  {
    v3 = result;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return (void *)swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t outlined consume of RemoteControlState(unint64_t result)
{
  switch(result >> 61)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
      result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type _ConditionalContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, EmptyView> and conformance <> _ConditionalContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[6];

  result = lazy protocol witness table cache variable for type _ConditionalContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, EmptyView> and conformance <> _ConditionalContent<A, B>;
  if (!lazy protocol witness table cache variable for type _ConditionalContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, EmptyView> and conformance <> _ConditionalContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, EmptyView>);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Button<Text>);
    v3 = type metadata accessor for ScreenSharingOverlayPlatterButtonStyle(255);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Button<Text> and conformance Button<A>, &demangling cache variable for type metadata for Button<Text>);
    v5 = v4;
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ScreenSharingOverlayPlatterButtonStyle and conformance ScreenSharingOverlayPlatterButtonStyle, (void (*)(uint64_t))type metadata accessor for ScreenSharingOverlayPlatterButtonStyle);
    v7[2] = v2;
    v7[3] = v3;
    v7[4] = v5;
    v7[5] = v6;
    v7[0] = swift_getOpaqueTypeConformance2();
    v7[1] = MEMORY[0x1E0CE0400];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDB8A0], v1, v7);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _ConditionalContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, EmptyView> and conformance <> _ConditionalContent<A, B>);
  }
  return result;
}

uint64_t sub_1BD139DAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ScreenSharingSpectatorModalOverlay(0) - 8) + 80);
  v2 = (v1 + 16) & ~v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v3 = type metadata accessor for UserInterfaceSizeClass();
    if (!__swift_getEnumTagSinglePayload(v0 + v2, 1, v3))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v0 + v2, v3);
  }
  else
  {
    swift_release();
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ScreenSharingSpectatorModalOverlay.statusView.getter()
{
  type metadata accessor for ScreenSharingSpectatorModalOverlay(0);
  return closure #1 in ScreenSharingSpectatorModalOverlay.statusView.getter();
}

uint64_t outlined copy of Text?(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    outlined copy of Text.Storage(result, a2, a3 & 1);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t outlined consume of Text?(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    outlined consume of Text.Storage(result, a2, a3 & 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t ConversationControlsBadgingAvatarViewController.__allocating_init(conversation:badgeImage:displayName:badgeBackgroundColor:)(void *a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  int v23;
  char v24;
  uint64_t v25;
  void *v26;
  void *v27;
  id v28;
  unsigned __int8 v29;
  id v30;
  int64_t v31;
  int v32;
  char v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  void (*v40)(_BYTE *, _QWORD);
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  id v53;
  uint64_t v54;
  id v55;
  void *v56;
  void *v57;
  void *v58;
  _BYTE v61[32];
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;

  v8 = objc_msgSend((id)objc_opt_self(), sel_tu_contactStoreConfigurationForConversation_, a1);
  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97298]), sel_initWithConfiguration_, v8);

  v10 = objc_msgSend(a1, sel_mergedRemoteMembers);
  OUTLINED_FUNCTION_17_8((uint64_t)v10, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
  lazy protocol witness table accessor for type TUConversationMember and conformance NSObject();
  OUTLINED_FUNCTION_50();
  v11 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  v12 = specialized Set.count.getter(v11);
  if (!v12)
  {
    OUTLINED_FUNCTION_25();
    v17 = MEMORY[0x1E0DEE9D8];
LABEL_18:
    v41 = objc_allocWithZone((Class)type metadata accessor for ConversationControlsBadgingAvatarViewController());
    v42 = a2;
    v43 = a5;
    ConversationControlsBadgingAvatarViewController.init(contactStore:contacts:badgeImage:badgeBackgroundColor:)(v9, v17, a2, v43);
    v45 = v44;
    v46 = objc_msgSend(v45, sel_avatarViewController);
    v47 = v46;
    v48 = a4;
    if (!a4)
    {
      a3 = TUConversation.participantListDisplayName.getter((uint64_t)v46);
      v48 = v49;
    }
    v50 = outlined bridged method (pb) of @objc TUConversation.messagesGroupPhotoData.getter(a1);
    v52 = v51;
    v53 = objc_msgSend(v45, sel_contacts);

    OUTLINED_FUNCTION_17_8(v54, (unint64_t *)&lazy cache variable for type metadata for CNContact);
    static Array._unconditionallyBridgeFromObjectiveC(_:)();

    v55 = objc_allocWithZone(MEMORY[0x1E0C974F0]);
    v56 = @nonobjc CNGroupIdentity.init(groupWithName:photo:contacts:)(a3, v48, v50, v52);
    OUTLINED_FUNCTION_48_1(v47, sel_updateViewWithGroupIdentity_);

    return (uint64_t)v45;
  }
  v13 = v12;
  v57 = a5;
  v58 = a2;
  v65 = MEMORY[0x1E0DEE9D8];
  specialized ContiguousArray.reserveCapacity(_:)();
  if ((v11 & 0xC000000000000001) != 0)
  {
    result = __CocoaSet.startIndex.getter();
    v16 = 1;
  }
  else
  {
    result = specialized _NativeSet.startIndex.getter(v11);
    v16 = v18 & 1;
  }
  v62 = result;
  v63 = v15;
  v64 = v16;
  if ((v13 & 0x8000000000000000) == 0)
  {
    do
    {
      v20 = v62;
      v19 = v63;
      v21 = v64;
      v22 = OUTLINED_FUNCTION_27_20();
      specialized Set.subscript.getter(v22, v23, v24, v25, &lazy cache variable for type metadata for TUConversationMember);
      v27 = v26;
      v28 = objc_msgSend(v26, sel_handle);
      v29 = objc_msgSend(v28, sel_shouldHideContact);

      if ((v29 & 1) != 0)
      {
        objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97360]), sel_initWithContact_, 0);
      }
      else
      {
        v30 = objc_msgSend(v27, sel_handle);
        objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97360]), sel__initWithHandle_, v30);

        v27 = v30;
      }

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      result = specialized ContiguousArray._endMutation()();
      if ((v11 & 0xC000000000000001) != 0)
      {
        if ((v21 & 1) == 0)
          goto LABEL_22;
        if (__CocoaSet.Index.handleBitPattern.getter())
          swift_isUniquelyReferenced_nonNull_native();
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Set<TUConversationMember>.Index);
        v40 = (void (*)(_BYTE *, _QWORD))Set.Index._asCocoa.modify();
        __CocoaSet.formIndex(after:isUnique:)();
        v40(v61, 0);
      }
      else
      {
        v31 = OUTLINED_FUNCTION_27_20();
        v35 = specialized _NativeSet.index(after:)(v31, v32, v33, v34);
        v37 = v36;
        v39 = v38;
        outlined consume of Set<TUHandle>.Index._Variant(v20, v19, v21);
        v62 = v35;
        v63 = v37;
        v64 = v39 & 1;
      }
      --v13;
    }
    while (v13);
    outlined consume of Set<TUHandle>.Index._Variant(v62, v63, v64);
    v17 = v65;
    OUTLINED_FUNCTION_25();
    a5 = v57;
    a2 = v58;
    goto LABEL_18;
  }
  __break(1u);
LABEL_22:
  __break(1u);
  return result;
}

unint64_t lazy protocol witness table accessor for type TUConversationMember and conformance NSObject()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type TUConversationMember and conformance NSObject;
  if (!lazy protocol witness table cache variable for type TUConversationMember and conformance NSObject)
  {
    v1 = _sSo8NSObjectCMaTm_0(255, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type TUConversationMember and conformance NSObject);
  }
  return result;
}

uint64_t ConversationControlsBadgingAvatarViewController.__allocating_init(contactStore:handle:badgeImage:)(void *a1, void *a2, void *a3)
{
  uint64_t v6;
  unsigned __int8 v7;
  id v8;
  id v9;
  id v10;
  id v11;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1BD6443F0;
    v7 = objc_msgSend(a2, sel_shouldHideContact);
    v8 = objc_allocWithZone(MEMORY[0x1E0C97360]);
    if ((v7 & 1) != 0)
      v9 = objc_msgSend(v8, sel_initWithContact_, 0);
    else
      v9 = objc_msgSend(v8, sel__initWithHandle_, a2);
    *(_QWORD *)(v6 + 32) = v9;
    specialized Array._endMutation()();
  }
  else
  {
    v6 = MEMORY[0x1E0DEE9D8];
  }
  v10 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
  v11 = objc_allocWithZone((Class)type metadata accessor for ConversationControlsBadgingAvatarViewController());
  OUTLINED_FUNCTION_26_21(a1, v6, a3, v10);
  OUTLINED_FUNCTION_49_5();
  return v6;
}

void ConversationControlsBadgingAvatarViewController.__allocating_init(contactStore:participants:badgeImage:)(void *a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;

  v6 = type metadata accessor for Participant(0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a2 + 16);
  if (!v10)
  {
    OUTLINED_FUNCTION_53();
    v16 = MEMORY[0x1E0DEE9D8];
    goto LABEL_11;
  }
  v20 = a1;
  v21 = a3;
  v22 = MEMORY[0x1E0DEE9D8];
  specialized ContiguousArray.reserveCapacity(_:)();
  v11 = *(unsigned __int8 *)(v7 + 80);
  v19 = a2;
  v12 = a2 + ((v11 + 32) & ~v11);
  v13 = *(_QWORD *)(v7 + 72);
  do
  {
    outlined init with copy of Participant(v12, (uint64_t)v9);
    v14 = *(void **)&v9[*(int *)(v6 + 28)];
    if (!v14)
      goto LABEL_6;
    v15 = v14;
    if ((objc_msgSend(v15, sel_shouldHideContact, v19) & 1) != 0)
    {

LABEL_6:
      objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97360]), sel_initWithContact_, 0);
      goto LABEL_8;
    }
    OUTLINED_FUNCTION_48_1(objc_allocWithZone(MEMORY[0x1E0C97360]), sel__initWithHandle_);

LABEL_8:
    outlined destroy of Participant((uint64_t)v9);
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
    specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized ContiguousArray._endMutation()();
    v12 += v13;
    --v10;
  }
  while (v10);
  v16 = v22;
  swift_bridgeObjectRelease();
  a1 = v20;
  a3 = v21;
LABEL_11:
  v17 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
  v18 = objc_allocWithZone((Class)type metadata accessor for ConversationControlsBadgingAvatarViewController());
  OUTLINED_FUNCTION_26_21(a1, v16, a3, v17);
}

id ConversationControlsBadgingAvatarViewController.__allocating_init(pttCall:activeRemoteParticipant:badgeImage:)()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_7_21();
  v0 = OUTLINED_FUNCTION_8_47();
  return specialized ConversationControlsBadgingAvatarViewController.__allocating_init(pttCall:activeRemoteParticipant:badgeImage:)(v0, v1, v2, v3, v4, v5);
}

void ConversationControlsBadgingAvatarViewController.__allocating_init(pttCall:badgeImage:)()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;

  OUTLINED_FUNCTION_14_46();
  v0 = OUTLINED_FUNCTION_13_42();
  specialized ConversationControlsBadgingAvatarViewController.__allocating_init(pttCall:badgeImage:)(v0, v1, v2, v3, v4);
}

uint64_t ConversationControlsBadgingAvatarViewController.__allocating_init(call:conversation:badgeImage:)()
{
  uint64_t v0;
  void *v1;

  OUTLINED_FUNCTION_7_21();
  v0 = OUTLINED_FUNCTION_8_47();
  return specialized ConversationControlsBadgingAvatarViewController.__allocating_init(call:conversation:badgeImage:)(v0, v1);
}

uint64_t ConversationControlsBadgingAvatarViewController.__allocating_init(call:badgeImage:)()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_14_46();
  v0 = OUTLINED_FUNCTION_13_42();
  return OUTLINED_FUNCTION_3_51(v0, v1, v2, v3, v4);
}

uint64_t static ConversationControlsBadgingAvatarViewController.hasAvatar(for:)()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  void **v7;
  void *v8;
  uint64_t v9;
  Swift::String v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v23;

  objc_opt_self();
  if (!swift_dynamicCastObjCClass())
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v11 = type metadata accessor for Logger();
    __swift_project_value_buffer(v11, (uint64_t)&static Logger.conversationControls);
    swift_unknownObjectRetain_n();
    v12 = Logger.logObject.getter();
    v13 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)OUTLINED_FUNCTION_105();
      v23 = OUTLINED_FUNCTION_105();
      *(_DWORD *)v14 = 136315138;
      swift_getObjectType();
      v15 = _typeName(_:qualified:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v15, v16, &v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_97_0();
      OUTLINED_FUNCTION_25();
      _os_log_impl(&dword_1BD004000, v12, v13, "hasAvatar: Unexpected call type: %s", v14, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_97_0();
    return 0;
  }
  OUTLINED_FUNCTION_20_34();
  v1 = outlined bridged method (pb) of @objc TUCall.contactIdentifiers.getter(v0);
  if (!v1)
  {
LABEL_15:
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v17 = type metadata accessor for Logger();
    __swift_project_value_buffer(v17, (uint64_t)&static Logger.conversationControls);
    v18 = Logger.logObject.getter();
    v19 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)OUTLINED_FUNCTION_105();
      *(_WORD *)v20 = 0;
      _os_log_impl(&dword_1BD004000, v18, v19, "hasAvatar: call has no contactIdentifiers", v20, 2u);
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_19_0();
    return 0;
  }
  v2 = v1;
  if (!*(_QWORD *)(v1 + 16))
  {
    OUTLINED_FUNCTION_2_1();
    goto LABEL_15;
  }
  v3 = (void *)objc_opt_self();
  v4 = OUTLINED_FUNCTION_48_1(v3, sel_tu_contactStoreConfigurationForCall_);
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97298]), sel_initWithConfiguration_, v4);

  v6 = *(_QWORD *)(v2 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    v7 = (void **)(v2 + 40);
    while (1)
    {
      v9 = (uint64_t)*(v7 - 1);
      v8 = *v7;
      swift_bridgeObjectRetain();
      v10._countAndFlagsBits = v9;
      v10._object = v8;
      LOBYTE(v9) = CNContactStore.hasImage(forContactId:)(v10);
      OUTLINED_FUNCTION_53();
      if ((v9 & 1) != 0)
        break;
      v7 += 2;
      if (!--v6)
      {

        OUTLINED_FUNCTION_19_0();
        OUTLINED_FUNCTION_2_1();
        goto LABEL_22;
      }
    }

    OUTLINED_FUNCTION_19_0();
    OUTLINED_FUNCTION_2_1();
    v21 = 1;
  }
  else
  {

    OUTLINED_FUNCTION_19_0();
LABEL_22:
    v21 = 0;
  }
  OUTLINED_FUNCTION_2_1();
  return v21;
}

void ConversationControlsBadgingAvatarViewController.init(contactStore:contacts:badgeImage:badgeBackgroundColor:)(void *a1, uint64_t a2, void *a3, void *a4)
{
  void *v4;
  id v8;
  id v9;
  id v10;
  Class isa;
  uint64_t v12;
  id v13;
  id v14;
  objc_super v15;

  v8 = objc_msgSend((id)objc_opt_self(), sel_settingsWithContactStore_threeDTouchEnabled_, a1, 0);
  v15.receiver = v4;
  v15.super_class = (Class)type metadata accessor for ConversationControlsBadgingAvatarViewController();
  v9 = objc_msgSendSuper2(&v15, sel_initWithSettings_, v8);
  OUTLINED_FUNCTION_17_8((uint64_t)v9, (unint64_t *)&lazy cache variable for type metadata for CNContact);
  v10 = v9;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_48_1(v10, sel_setContacts_);

  OUTLINED_FUNCTION_17_8(v12, &lazy cache variable for type metadata for CNBadgingAvatarBadgeStyleSettings);
  v13 = CNBadgingAvatarBadgeStyleSettings.__allocating_init(position:color:backgroundColor:cropStyle:)(2, 0, 0, 1);
  OUTLINED_FUNCTION_48_1(v10, sel_setBadgeStyleSettings_);

  v14 = objc_msgSend(v10, sel_badgeStyleSettings);
  objc_msgSend(v14, sel_setBackgroundColor_, a4);

  objc_msgSend(v10, sel_setBadgeImage_, a3);
  OUTLINED_FUNCTION_6_2();
}

Swift::Int ConversationControlsBadgingAvatarViewController.hash(callUUID:)()
{
  void *v0;
  void *v1;
  id v2;
  unint64_t v3;
  Swift::UInt v4;
  UIImage *v5;
  UIImage *v6;
  NSData *v7;
  NSData *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  Swift::UInt v12;
  _BYTE v14[72];
  _BYTE __dst[72];

  v1 = v0;
  Hasher.init()();
  v2 = objc_msgSend(v0, sel_contacts);
  OUTLINED_FUNCTION_17_8((uint64_t)v2, (unint64_t *)&lazy cache variable for type metadata for CNContact);
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    v4 = _CocoaArrayWrapper.endIndex.getter();
    OUTLINED_FUNCTION_27();
  }
  else
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  OUTLINED_FUNCTION_27();
  Hasher._combine(_:)(v4);
  UUID.uuidString.getter();
  String.hash(into:)();
  OUTLINED_FUNCTION_27();
  v5 = (UIImage *)objc_msgSend(v1, sel_badgeImage);
  if (v5)
  {
    v6 = v5;
    v7 = UIImagePNGRepresentation(v5);
    if (v7)
    {
      v8 = v7;
      v9 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      v11 = v10;

      v12 = Data.count.getter();
      Hasher._combine(_:)(v12);

      outlined consume of Data._Representation(v9, v11);
    }
    else
    {

    }
  }
  memcpy(__dst, v14, sizeof(__dst));
  return Hasher.finalize()();
}

objc_class *ConversationControlsBadgingAvatarViewController.__allocating_init(settings:)(uint64_t a1)
{
  objc_class *v1;

  objc_msgSend(objc_allocWithZone(v1), sel_initWithSettings_, a1);
  OUTLINED_FUNCTION_49_5();
  return v1;
}

void ConversationControlsBadgingAvatarViewController.init(settings:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ConversationControlsBadgingAvatarViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ConversationControlsBadgingAvatarViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id CNBadgingAvatarBadgeStyleSettings.__allocating_init(position:color:backgroundColor:cropStyle:)(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  id v6;

  v6 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithPosition_color_backgroundColor_cropStyle_, a1, a2, a3, a4);

  return v6;
}

void *@nonobjc CNGroupIdentity.init(groupWithName:photo:contacts:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  void *v4;
  uint64_t v7;
  Class isa;
  Class v9;

  if (a2)
  {
    v7 = MEMORY[0x1C3B72E00]();
    a1 = OUTLINED_FUNCTION_53();
  }
  else
  {
    v7 = 0;
  }
  if (a4 >> 60 == 15)
  {
    isa = 0;
  }
  else
  {
    isa = Data._bridgeToObjectiveC()().super.isa;
    a1 = outlined consume of Data?(a3, a4);
  }
  OUTLINED_FUNCTION_17_8(a1, (unint64_t *)&lazy cache variable for type metadata for CNContact);
  v9 = Array._bridgeToObjectiveC()().super.isa;
  OUTLINED_FUNCTION_2_1();
  objc_msgSend(v4, sel_initGroupWithName_photo_contacts_, v7, isa, v9);
  OUTLINED_FUNCTION_49_5();

  return v4;
}

uint64_t outlined bridged method (pb) of @objc TUConversation.messagesGroupPhotoData.getter(void *a1)
{
  id v1;
  void *v2;

  v1 = objc_msgSend(a1, sel_messagesGroupPhotoData);
  if (v1)
  {
    v2 = v1;
    static Data._unconditionallyBridgeFromObjectiveC(_:)();

  }
  return OUTLINED_FUNCTION_50();
}

uint64_t outlined bridged method (pb) of @objc TUCall.contactIdentifiers.getter(void *a1)
{
  uint64_t v1;

  if (!objc_msgSend(a1, sel_contactIdentifiers))
    return 0;
  static Array._unconditionallyBridgeFromObjectiveC(_:)();
  OUTLINED_FUNCTION_49_5();
  return v1;
}

int64_t specialized _NativeSet.index(after:)(int64_t result, int a2, char a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if ((a3 & 1) != 0)
    goto LABEL_20;
  v4 = result;
  if (result < 0 || (result = 1 << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = v4 >> 6;
  v6 = a4 + 56;
  v7 = *(_QWORD *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8)
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  v9 = v5 + 1;
  if (v5 + 1 < (unint64_t)(result + 63) >> 6)
  {
    v10 = *(_QWORD *)(v6 + 8 * v9);
    if (v10)
      return __clz(__rbit64(v10)) + (v9 << 6);
    v11 = (unint64_t)(result + 63) >> 6;
    v9 = v5 + 2;
    if (v5 + 2 < v11)
    {
      v10 = *(_QWORD *)(v6 + 8 * v9);
      if (v10)
        return __clz(__rbit64(v10)) + (v9 << 6);
      while (v5 + 3 < v11)
      {
        v10 = *(_QWORD *)(a4 + 80 + 8 * v5++);
        if (v10)
        {
          v9 = v5 + 2;
          return __clz(__rbit64(v10)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

void specialized Set.subscript.getter(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v4;
  char v5;
  char v6;
  int v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;

  if (a1 < 0 || (OUTLINED_FUNCTION_1_49(), v5 ^ v6 | v4))
  {
    __break(1u);
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_10_43();
  if ((v9 & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(v8 + 36) == v7)
  {
    v10 = *(_QWORD *)(v8 + 48);
    v11 = v10 + *(_QWORD *)(*(_QWORD *)(type metadata accessor for Participant(0) - 8) + 72) * a1;
    outlined init with copy of Participant(v11, a2);
    return;
  }
LABEL_8:
  __break(1u);
}

{
  char v4;
  char v5;
  char v6;
  int v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;

  if (a1 < 0 || (OUTLINED_FUNCTION_1_49(), v5 ^ v6 | v4))
  {
    __break(1u);
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_10_43();
  if ((v9 & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(v8 + 36) == v7)
  {
    v10 = *(_QWORD *)(v8 + 48);
    v11 = type metadata accessor for Participant();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a2, v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, v11);
    return;
  }
LABEL_8:
  __break(1u);
}

void specialized Set.subscript.getter(uint64_t a1, int a2, char a3, uint64_t a4)
{
  specialized Set.subscript.getter(a1, a2, a3, a4, &lazy cache variable for type metadata for TUConversationMember);
}

{
  specialized Set.subscript.getter(a1, a2, a3, a4, &lazy cache variable for type metadata for TUHandle);
}

{
  specialized Set.subscript.getter(a1, a2, a3, a4, &lazy cache variable for type metadata for TUScreenSharingRequest);
}

{
  specialized Set.subscript.getter(a1, a2, a3, a4, &lazy cache variable for type metadata for TUConversationParticipant);
}

{
  specialized Set.subscript.getter(a1, a2, a3, a4, &lazy cache variable for type metadata for SGURL);
}

{
  specialized Set.subscript.getter(a1, a2, a3, a4, &lazy cache variable for type metadata for TUConversation);
}

{
  specialized Set.subscript.getter(a1, a2, a3, a4, &lazy cache variable for type metadata for TUConversationLink);
}

{
  specialized Set.subscript.getter(a1, a2, a3, a4, &lazy cache variable for type metadata for CHHandle);
}

{
  specialized Set.subscript.getter(a1, a2, a3, a4, &lazy cache variable for type metadata for UIScene);
}

uint64_t type metadata accessor for ConversationControlsBadgingAvatarViewController()
{
  return objc_opt_self();
}

void specialized Set.subscript.getter(uint64_t a1, int a2, char a3, uint64_t a4, void *a5)
{
  void *v5;
  uint64_t v8;
  uint64_t v9;
  Swift::Int v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  char v15;
  char v16;
  id v17;
  void *v18;

  v8 = a1;
  if ((a4 & 0xC000000000000001) != 0)
  {
    if ((a3 & 1) != 0)
    {
      v9 = OUTLINED_FUNCTION_114();
      MEMORY[0x1C3B73C10](v9);
      OUTLINED_FUNCTION_6_40();
      OUTLINED_FUNCTION_20_34();
      swift_dynamicCast();
      OUTLINED_FUNCTION_19_0();
      OUTLINED_FUNCTION_6_2();
      return;
    }
    goto LABEL_22;
  }
  if ((a3 & 1) != 0)
    goto LABEL_10;
  if (a1 < 0 || 1 << *(_BYTE *)(a4 + 32) <= a1)
  {
    __break(1u);
    goto LABEL_19;
  }
  if (((*(_QWORD *)(a4 + (((unint64_t)a1 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> a1) & 1) == 0)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (*(_DWORD *)(a4 + 36) == a2)
    goto LABEL_17;
  __break(1u);
LABEL_10:
  OUTLINED_FUNCTION_114();
  if (__CocoaSet.Index.age.getter() != *(_DWORD *)(a4 + 36))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  OUTLINED_FUNCTION_114();
  __CocoaSet.Index.element.getter();
  OUTLINED_FUNCTION_6_40();
  swift_unknownObjectRetain();
  swift_dynamicCast();
  a5 = v18;
  swift_unknownObjectRelease();
  v10 = NSObject._rawHashValue(seed:)(*(_QWORD *)(a4 + 40));
  v11 = -1 << *(_BYTE *)(a4 + 32);
  v8 = v10 & ~v11;
  OUTLINED_FUNCTION_28_28();
  if ((v12 & 1) != 0)
  {
    OUTLINED_FUNCTION_24_27();
    v13 = OUTLINED_FUNCTION_12_5();

    if ((v13 & 1) == 0)
    {
      v14 = ~v11;
      do
      {
        v8 = (v8 + 1) & v14;
        OUTLINED_FUNCTION_28_28();
        if ((v15 & 1) == 0)
          goto LABEL_21;
        OUTLINED_FUNCTION_24_27();
        v16 = OUTLINED_FUNCTION_12_5();

      }
      while ((v16 & 1) == 0);
    }

LABEL_17:
    v17 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v8);
    return;
  }
LABEL_21:

  __break(1u);
LABEL_22:
  __break(1u);
}

void specialized Set.subscript.getter(uint64_t a1)
{
  unint64_t v1;
  int v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;

  if (a1 < 0 || (OUTLINED_FUNCTION_1_49(), v5 ^ v6 | v4))
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(v3 + ((v1 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> v1) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(v3 + 36) == v2)
  {
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_50();
    return;
  }
LABEL_8:
  __break(1u);
}

uint64_t specialized Set.subscript.getter@<X0>(uint64_t result@<X0>, int a2@<W1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (result < 0 || 1 << *(_BYTE *)(a3 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a3 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a3 + 36) == a2)
  {
    v4 = *(_QWORD *)(a3 + 48) + 24 * result;
    v6 = *(_QWORD *)(v4 + 8);
    v5 = *(_QWORD *)(v4 + 16);
    *(_BYTE *)a4 = *(_BYTE *)v4;
    *(_QWORD *)(a4 + 8) = v6;
    *(_QWORD *)(a4 + 16) = v5;
    return swift_bridgeObjectRetain();
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t outlined init with copy of Participant(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Participant(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t specialized _NativeSet.startIndex.getter(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  uint64_t i;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v2 = 64;
  for (i = 9; i - 7 < (unint64_t)(v3 + 63) >> 6; ++i)
  {
    v1 = *(_QWORD *)(a1 + 8 * i);
    v2 += 64;
    if (v1)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

id specialized ConversationControlsBadgingAvatarViewController.__allocating_init(pttCall:activeRemoteParticipant:badgeImage:)(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t);
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  void *v37;
  void (*v38)(char *, char *, uint64_t);
  char *v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  char **v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  id v49;
  void *v50;
  id v51;
  uint64_t v53;
  uint64_t v54;
  id v55;
  id v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;

  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for URL();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v58 = (char *)&v53 - v19;
  if (((*(uint64_t (**)(uint64_t, uint64_t))(a6 + 216))(a5, a6) & 1) != 0)
  {
    v54 = v15;
    v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97360]), sel_init);
    v21 = objc_msgSend(a2, sel_name);
    v55 = a2;
    if (!v21)
    {
      v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v21 = (id)MEMORY[0x1C3B72E00](v22);
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v20, sel_setNickname_, v21);

    v23 = *(uint64_t (**)(uint64_t, uint64_t))(a6 + 464);
    v57 = a1;
    v24 = (void *)v23(a5, a6);
    v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97298]), sel_initWithConfiguration_, v24);

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_1BD6443F0;
    *(_QWORD *)(v26 + 32) = v20;
    v59 = v26;
    specialized Array._endMutation()();
    v27 = v59;
    v28 = (void *)objc_opt_self();
    v56 = a3;
    v29 = v25;
    v30 = v20;
    v31 = objc_msgSend(v28, sel_clearColor);
    v32 = objc_allocWithZone((Class)type metadata accessor for ConversationControlsBadgingAvatarViewController());
    ConversationControlsBadgingAvatarViewController.init(contactStore:contacts:badgeImage:badgeBackgroundColor:)(v29, v27, a3, v31);
    v34 = v33;
    v35 = v55;
    v36 = objc_msgSend(v55, sel_imageURL);
    if (v36)
    {
      v37 = v36;
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      v38 = *(void (**)(char *, char *, uint64_t))(v54 + 32);
      v38(v13, v18, v14);
      __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v14);
      if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14) != 1)
      {
        v39 = v58;
        v38(v58, v13, v14);
        v40 = Data.init(contentsOf:options:)();
        v42 = v41;
        v43 = &selRef_inputDevices;
        (*(void (**)(char *, uint64_t))(v54 + 8))(v39, v14);
LABEL_10:
        v44 = objc_msgSend(v35, v43[187]);
        v45 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        v47 = v46;

        outlined copy of Data?(v40, v42);
        v48 = objc_msgSend(v34, sel_contacts);
        _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for CNContact);
        static Array._unconditionallyBridgeFromObjectiveC(_:)();

        v49 = objc_allocWithZone(MEMORY[0x1E0C974F0]);
        v50 = @nonobjc CNGroupIdentity.init(groupWithName:photo:contacts:)(v45, v47, v40, v42);
        v51 = objc_msgSend(v34, sel_avatarViewController);

        objc_msgSend(v51, sel_updateViewWithGroupIdentity_, v50);
        swift_unknownObjectRelease();

        outlined consume of Data?(v40, v42);
        return v34;
      }
    }
    else
    {
      __swift_storeEnumTagSinglePayload((uint64_t)v13, 1, 1, v14);
    }
    outlined destroy of URL?((uint64_t)v13);
    v40 = 0;
    v42 = 0xF000000000000000;
    v43 = &selRef_inputDevices;
    goto LABEL_10;
  }
  swift_unknownObjectRelease();

  return 0;
}

void specialized ConversationControlsBadgingAvatarViewController.__allocating_init(pttCall:badgeImage:)(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t (*v20)(void *, uint64_t);
  void *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  id v37;
  uint64_t v38;
  void *v39;
  _QWORD *v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  _QWORD *v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  void *v61;
  char *v62;
  void (*v63)(uint64_t, char *, uint64_t);
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  id v69;
  id v70;
  void *v71;
  id v72;
  char *v73;
  uint64_t v74;
  __int128 v75;
  uint64_t v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  id v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;

  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  MEMORY[0x1E0C80A78](v9);
  v83 = (uint64_t)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = (_QWORD *)type metadata accessor for URL();
  v11 = *(v84 - 1);
  v12 = MEMORY[0x1E0C80A78](v84);
  v81 = (char *)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v73 - v14;
  v16 = type metadata accessor for CharacterSet();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v73 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(uint64_t (**)(void *, uint64_t))(a5 + 216);
  v82 = a4;
  v21 = a4;
  v22 = a5;
  if ((v20(v21, a5) & 1) == 0 || (objc_opt_self(), (v23 = swift_dynamicCastObjCClass()) == 0))
  {
    swift_unknownObjectRelease();

    return;
  }
  v24 = (void *)v23;
  v73 = v15;
  v74 = v11;
  swift_unknownObjectRetain();
  v77 = v24;
  v25 = objc_msgSend(v24, sel_channelDisplayName);
  v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v28 = v27;

  v78 = v28;
  v79 = v26;
  v85 = v26;
  v86 = v28;
  static CharacterSet.whitespaces.getter();
  lazy protocol witness table accessor for type String and conformance String();
  v29 = StringProtocol.components(separatedBy:)();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  v30 = specialized Collection.prefix(_:)(2, v29);
  v32 = v31;
  v34 = v33;
  v36 = v35;
  v37 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97360]), sel_init);
  v38 = (v36 >> 1) - v34;
  if (!__OFSUB__(v36 >> 1, v34))
  {
    v39 = v37;
    v80 = a1;
    v76 = v30;
    if (v38 <= 0)
    {
      v40 = v84;
      v42 = 0;
      v43 = 0xE000000000000000;
    }
    else
    {
      v40 = v84;
      if (v34 > 0 || v36 < 2)
        goto LABEL_28;
      v42 = *v32;
      v43 = v32[1];
      swift_bridgeObjectRetain();
    }
    outlined bridged method (mbnn) of @objc CNMutableContact.firstName.setter(v42, v43, v39);
    if (v38 < 2)
    {
      v48 = 0;
      v47 = 0xE000000000000000;
      v45 = (uint64_t)v40;
      v46 = a2;
    }
    else
    {
      if (v34 > 1 || v36 < 4)
        goto LABEL_29;
      v45 = (uint64_t)v40;
      v46 = a2;
      v48 = v32[2];
      v47 = v32[3];
      swift_bridgeObjectRetain();
    }
    outlined bridged method (mbnn) of @objc CNMutableContact.lastName.setter(v48, v47, v39);
    v49 = (void *)(*(uint64_t (**)(id, uint64_t))(v22 + 464))(v82, v22);
    v50 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97298]), sel_initWithConfiguration_, v49);

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    v51 = swift_allocObject();
    v75 = xmmword_1BD6443F0;
    *(_OWORD *)(v51 + 16) = xmmword_1BD6443F0;
    *(_QWORD *)(v51 + 32) = v39;
    v85 = v51;
    specialized Array._endMutation()();
    v52 = v85;
    v53 = (void *)objc_opt_self();
    v82 = v46;
    v54 = v50;
    v55 = v39;
    v56 = objc_msgSend(v53, sel_clearColor);
    v57 = objc_allocWithZone((Class)type metadata accessor for ConversationControlsBadgingAvatarViewController());
    v84 = v54;
    ConversationControlsBadgingAvatarViewController.init(contactStore:contacts:badgeImage:badgeBackgroundColor:)(v54, v52, v46, v56);
    v59 = v58;
    v60 = objc_msgSend(v77, sel_imageURL);
    if (v60)
    {
      v61 = v60;
      v62 = v81;
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      v63 = *(void (**)(uint64_t, char *, uint64_t))(v74 + 32);
      v64 = v83;
      v63(v83, v62, v45);
      __swift_storeEnumTagSinglePayload(v64, 0, 1, v45);
      if (__swift_getEnumTagSinglePayload(v64, 1, v45) != 1)
      {
        v63((uint64_t)v73, (char *)v64, v45);
        v65 = Data.init(contentsOf:options:)();
        v67 = v66;
        (*(void (**)(char *, uint64_t))(v74 + 8))(v73, v45);
LABEL_26:
        v68 = swift_allocObject();
        *(_OWORD *)(v68 + 16) = v75;
        *(_QWORD *)(v68 + 32) = v55;
        v85 = v68;
        specialized Array._endMutation()();
        v69 = objc_allocWithZone(MEMORY[0x1E0C974F0]);
        v70 = v55;
        outlined copy of Data?(v65, v67);
        v71 = @nonobjc CNGroupIdentity.init(groupWithName:photo:contacts:)(v79, v78, v65, v67);
        v72 = objc_msgSend(v59, sel_avatarViewController);

        objc_msgSend(v72, sel_updateViewWithGroupIdentity_, v71);
        swift_unknownObjectRelease();

        outlined consume of Data?(v65, v67);
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();

        return;
      }
    }
    else
    {
      v64 = v83;
      __swift_storeEnumTagSinglePayload(v83, 1, 1, v45);
    }
    outlined destroy of URL?(v64);
    v65 = 0;
    v67 = 0xF000000000000000;
    goto LABEL_26;
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
}

uint64_t specialized ConversationControlsBadgingAvatarViewController.__allocating_init(call:badgeImage:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  int v22;
  char v23;
  uint64_t v24;
  void *v25;
  void *v26;
  unsigned int v27;
  id v28;
  void *v29;
  char **v30;
  int64_t v31;
  int v32;
  char v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  void (*v40)(_BYTE *, _QWORD);
  id v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  _BYTE v46[32];
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;

  v8 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a5 + 464))(a4, a5);
  v9 = OUTLINED_FUNCTION_48_1(objc_allocWithZone(MEMORY[0x1E0C97298]), sel_initWithConfiguration_);

  v10 = (*(uint64_t (**)(uint64_t, uint64_t))(a5 + 168))(a4, a5);
  v11 = specialized Set.count.getter(v10);
  if (!v11)
  {
    swift_bridgeObjectRelease();
    v16 = MEMORY[0x1E0DEE9D8];
LABEL_20:
    v41 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
    v42 = objc_allocWithZone((Class)type metadata accessor for ConversationControlsBadgingAvatarViewController());
    OUTLINED_FUNCTION_26_21(v9, v16, a2, v41);
    v44 = v43;
    swift_unknownObjectRelease();
    return v44;
  }
  v12 = v11;
  v45 = v9;
  v50 = MEMORY[0x1E0DEE9D8];
  specialized ContiguousArray.reserveCapacity(_:)();
  if ((v10 & 0xC000000000000001) != 0)
  {
    result = __CocoaSet.startIndex.getter();
    v15 = 1;
  }
  else
  {
    result = specialized _NativeSet.startIndex.getter(v10);
    v15 = v17 & 1;
  }
  v47 = result;
  v48 = v14;
  v49 = v15;
  if ((v12 & 0x8000000000000000) == 0)
  {
    do
    {
      v18 = v47;
      v19 = v48;
      v20 = v49;
      v21 = OUTLINED_FUNCTION_16_28();
      specialized Set.subscript.getter(v21, v22, v23, v24, &lazy cache variable for type metadata for TUHandle);
      v26 = v25;
      v27 = objc_msgSend(v25, sel_shouldHideContact);
      v28 = objc_allocWithZone(MEMORY[0x1E0C97360]);
      if (v27)
        v29 = 0;
      else
        v29 = v26;
      v30 = &selRef_initWithContact_;
      if (!v27)
        v30 = &selRef__initWithHandle_;
      objc_msgSend(v28, *v30, v29);

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      result = specialized ContiguousArray._endMutation()();
      if ((v10 & 0xC000000000000001) != 0)
      {
        if ((v20 & 1) == 0)
          goto LABEL_22;
        if (__CocoaSet.Index.handleBitPattern.getter())
          swift_isUniquelyReferenced_nonNull_native();
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Set<TUHandle>.Index);
        v40 = (void (*)(_BYTE *, _QWORD))Set.Index._asCocoa.modify();
        __CocoaSet.formIndex(after:isUnique:)();
        v40(v46, 0);
      }
      else
      {
        v31 = OUTLINED_FUNCTION_16_28();
        v35 = specialized _NativeSet.index(after:)(v31, v32, v33, v34);
        v37 = v36;
        v39 = v38;
        outlined consume of Set<TUHandle>.Index._Variant(v18, v19, v20);
        v47 = v35;
        v48 = v37;
        v49 = v39 & 1;
      }
      --v12;
    }
    while (v12);
    outlined consume of Set<TUHandle>.Index._Variant(v47, v48, v49);
    v16 = v50;
    swift_bridgeObjectRelease();
    v9 = v45;
    goto LABEL_20;
  }
  __break(1u);
LABEL_22:
  __break(1u);
  return result;
}

uint64_t specialized ConversationControlsBadgingAvatarViewController.__allocating_init(call:conversation:badgeImage:)(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (a2)
  {
    v3 = (void *)objc_opt_self();
    v4 = a2;
    v5 = objc_msgSend(v3, sel_clearColor);
    v6 = (void *)OUTLINED_FUNCTION_114();
    v9 = ConversationControlsBadgingAvatarViewController.__allocating_init(conversation:badgeImage:displayName:badgeBackgroundColor:)(v6, v7, 0, 0, v8);
    OUTLINED_FUNCTION_19_0();

    return v9;
  }
  else
  {
    v11 = OUTLINED_FUNCTION_50();
    return OUTLINED_FUNCTION_3_51(v11, v12, v13, v14, v15);
  }
}

uint64_t method lookup function for ConversationControlsBadgingAvatarViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ConversationControlsBadgingAvatarViewController.hash(callUUID:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x58))();
}

uint64_t outlined copy of Data?(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return outlined copy of Data._Representation(a1, a2);
  return a1;
}

uint64_t outlined copy of Data._Representation(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t outlined consume of Data?(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return outlined consume of Data._Representation(a1, a2);
  return a1;
}

void *specialized Sequence.first(where:)(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  char **v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t Strong;
  uint64_t v14;
  uint64_t v15;
  char v17;
  unint64_t v19;

  v1 = a1;
  if (a1 >> 62)
  {
LABEL_30:
    swift_bridgeObjectRetain();
    v2 = _CocoaArrayWrapper.endIndex.getter();
    if (v2)
      goto LABEL_3;
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_3:
      v3 = v1 & 0xC000000000000001;
      v4 = 4;
      v5 = &selRef_inputDevices;
      v19 = v1;
      while (1)
      {
        if (v3)
          v6 = (id)MEMORY[0x1C3B73D18](v4 - 4, v1);
        else
          v6 = *(id *)(v1 + 8 * v4);
        v7 = v6;
        v8 = v4 - 3;
        if (__OFADD__(v4 - 4, 1))
        {
          __break(1u);
          goto LABEL_30;
        }
        if (objc_msgSend(v6, v5[334]))
          break;

LABEL_24:
        ++v4;
        if (v8 == v2)
          goto LABEL_31;
      }
      v9 = v2;
      v10 = outlined bridged method (pb) of @objc FBSDisplayLayoutElement.bundleIdentifier.getter(v7);
      v12 = v11;
      swift_beginAccess();
      Strong = swift_weakLoadStrong();
      if (Strong)
      {
        v14 = *(_QWORD *)(Strong + 24);
        v15 = *(_QWORD *)(Strong + 32);
        swift_bridgeObjectRetain();
        swift_release();
        if (v12)
        {
          if (v15)
          {
            if (v10 == v14 && v12 == v15)
            {
              swift_release();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              goto LABEL_28;
            }
            v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v17 & 1) != 0)
              goto LABEL_26;

            goto LABEL_23;
          }
        }
        else if (!v15)
        {
LABEL_26:
          swift_release();
LABEL_28:
          swift_bridgeObjectRelease();
          return v7;
        }
      }
      else if (!v12)
      {
        goto LABEL_26;
      }

      swift_bridgeObjectRelease();
LABEL_23:
      v2 = v9;
      v1 = v19;
      v5 = &selRef_inputDevices;
      goto LABEL_24;
    }
  }
LABEL_31:
  swift_release();
  swift_bridgeObjectRelease();
  return 0;
}

{
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;

  if (a1 >> 62)
    goto LABEL_14;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; v2 = _CocoaArrayWrapper.endIndex.getter())
  {
    v3 = 4;
    while (1)
    {
      v4 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C3B73D18](v3 - 4, a1) : *(id *)(a1 + 8 * v3);
      v5 = v4;
      v6 = v3 - 3;
      if (__OFADD__(v3 - 4, 1))
        break;
      if (objc_msgSend(v4, sel_isEligibleForScreening))
      {
        swift_bridgeObjectRelease();
        return v5;
      }

      ++v3;
      if (v6 == v2)
        goto LABEL_10;
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
  }
LABEL_10:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t _sSq3mapyqd_0_Sgqd_0_xqd__YKXEqd__YKs5ErrorRd__Ri_d_0_r0_lF@<X0>(void (*a1)(char *, char *)@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X6>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, char *);
  uint64_t v26;

  v24 = a4;
  v25 = a1;
  v26 = a3;
  v22 = *(_QWORD *)(a2 - 8);
  v23 = a2;
  v7 = MEMORY[0x1E0C80A78](a1);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v10 + 16);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v7);
  v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v18 + 16))(v17, v19);
  v20 = 1;
  if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v11) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v15, v17, v11);
    v25(v15, v9);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    if (v5)
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v22 + 32))(v24, v9, v23);
    v20 = 0;
  }
  return __swift_storeEnumTagSinglePayload(a5, v20, 1, v26);
}

id @nonobjc NSMapTable.__allocating_init(keyOptions:valueOptions:)(uint64_t a1, uint64_t a2)
{
  return objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_mapTableWithKeyOptions_valueOptions_, a1, a2);
}

uint64_t AudioCallManager.CallsCache.calls.getter()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = v0;
  *(_QWORD *)(v1 + 40) = *v0;
  return swift_task_switch();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 40);
  *(_QWORD *)(v0 + 24) = objc_msgSend(*(id *)(*(_QWORD *)(v0 + 32) + 112), sel_objectEnumerator);
  v2 = OUTLINED_FUNCTION_21_5();
  *(_QWORD *)(v2 + 16) = *(_QWORD *)(v1 + 80);
  *(_OWORD *)(v2 + 24) = *(_OWORD *)(v1 + 88);
  *(_QWORD *)(v2 + 40) = *(_QWORD *)(v1 + 104);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSEnumerator?);
  v3 = type metadata accessor for Array();
  _sSq3mapyqd_0_Sgqd_0_xqd__YKXEqd__YKs5ErrorRd__Ri_d_0_r0_lF((void (*)(char *, char *))partial apply for closure #1 in AudioCallManager.CallsCache.calls.getter, MEMORY[0x1E0DEDCE8], v3, v4, v0 + 16);

  swift_task_dealloc();
  v5 = *(_QWORD *)(v0 + 16);
  if (!v5)
    v5 = static Array._allocateUninitialized(_:)();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v5);
}

uint64_t closure #1 in AudioCallManager.CallsCache.calls.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for NSEnumerator);
  lazy protocol witness table accessor for type NSEnumerator and conformance NSEnumerator();
  result = Sequence.compactMap<A>(_:)();
  *a1 = result;
  return result;
}

uint64_t closure #1 in closure #1 in AudioCallManager.CallsCache.calls.getter@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  outlined init with copy of Any(a1, (uint64_t)&v4);
  result = swift_dynamicCast();
  if ((result & 1) == 0)
    *a2 = 0;
  return result;
}

uint64_t AudioCallManager.CallsCache.addCall(_:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;

  v2[3] = a1;
  v2[4] = v1;
  v2[5] = *v1;
  return swift_task_switch();
}

uint64_t AudioCallManager.CallsCache.addCall(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  id v7;
  uint64_t v8;
  void *v9;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(void **)(*(_QWORD *)(v0 + 32) + 112);
  *(_QWORD *)(v0 + 16) = v2;
  v4 = *(_QWORD *)(v1 + 104);
  v5 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 16);
  v6 = *(_QWORD *)(v1 + 80);
  v7 = v3;
  v8 = v5(v6, v4);
  v9 = (void *)MEMORY[0x1C3B72E00](v8);
  OUTLINED_FUNCTION_27();
  objc_msgSend(v7, sel_setObject_forKey_, v2, v9);

  return OUTLINED_FUNCTION_1_8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t AudioCallManager.CallsCache.removeCall(_:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;

  v2[3] = a1;
  v2[4] = v1;
  v2[5] = *v1;
  return swift_task_switch();
}

uint64_t AudioCallManager.CallsCache.removeCall(_:)()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  id v6;
  uint64_t v7;
  void *v8;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(void **)(*(_QWORD *)(v0 + 32) + 112);
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v1 + 104);
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 16);
  v5 = *(_QWORD *)(v1 + 80);
  v6 = v2;
  v7 = v4(v5, v3);
  v8 = (void *)MEMORY[0x1C3B72E00](v7);
  OUTLINED_FUNCTION_27();
  objc_msgSend(v6, sel_removeObjectForKey_, v8);

  return OUTLINED_FUNCTION_16_29(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t AudioCallManager.CallsCache.deinit()
{
  uint64_t v0;

  swift_defaultActor_destroy();
  return v0;
}

uint64_t AudioCallManager.CallsCache.__deallocating_deinit()
{
  AudioCallManager.CallsCache.deinit();
  return swift_defaultActor_deallocate();
}

uint64_t AudioCallManager.CallsCache.__allocating_init()()
{
  swift_allocObject();
  return AudioCallManager.CallsCache.init()();
}

uint64_t AudioCallManager.CallsCache.init()()
{
  uint64_t v0;

  swift_defaultActor_initialize();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSMapTable);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSString);
  *(_QWORD *)(v0 + 112) = @nonobjc NSMapTable.__allocating_init(keyOptions:valueOptions:)(0, 5);
  return v0;
}

uint64_t AudioCallManager.CallsCache.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t AudioCallManager.callsCache.getter()
{
  return swift_retain();
}

void AudioCallManager.foregroundRingingCall.setter()
{
  AudioCallManager.callResolver.getter();
}

uint64_t sub_1BD13CCC4(uint64_t result, uint64_t a2)
{
  char v2;
  uint64_t ObjectType;

  if (result)
  {
    ObjectType = swift_getObjectType();
    (*(void (**)(_QWORD, uint64_t, uint64_t))(a2 + 16))(v2 & 1, ObjectType, a2);
    return swift_unknownObjectRelease();
  }
  return result;
}

void AudioCallManager.foregroundRingingCall.getter()
{
  AudioCallManager.callResolver.getter();
}

uint64_t sub_1BD13CD1C(uint64_t result, uint64_t a2)
{
  uint64_t ObjectType;

  if (result)
  {
    ObjectType = swift_getObjectType();
    LOBYTE(a2) = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 8))(ObjectType, a2);
    OUTLINED_FUNCTION_10();
    return a2 & 1;
  }
  return result;
}

void AudioCallManager.foregroundRingingCall.modify(_QWORD *a1)
{
  uint64_t v1;

  *a1 = v1;
  AudioCallManager.foregroundRingingCall.getter();
}

void sub_1BD13CD68(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = a1 & 1;
  OUTLINED_FUNCTION_0();
}

void AudioCallManager.foregroundRingingCall.modify()
{
  AudioCallManager.foregroundRingingCall.setter();
}

void sub_1BD13CD9C()
{
  OUTLINED_FUNCTION_0();
}

uint64_t AudioCallManager.isICSInBackground.didset()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _QWORD *v6;
  int EnumTagSinglePayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[4];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload((uint64_t)v4, 1, 1, v5);
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = 0;
  v6[3] = 0;
  v6[4] = v1;
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5);
  swift_retain();
  if (EnumTagSinglePayload == 1)
  {
    outlined destroy of AsyncStream<Bool>?((uint64_t)v4, &demangling cache variable for type metadata for TaskPriority?);
    v8 = 0;
    v9 = 0;
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
    if (v6[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v8 = dispatch thunk of Actor.unownedExecutor.getter();
      v9 = v10;
      swift_unknownObjectRelease();
    }
    else
    {
      v8 = 0;
      v9 = 0;
    }
  }
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = &async function pointer to partial apply for closure #1 in AudioCallManager.isICSInBackground.didset;
  *(_QWORD *)(v11 + 24) = v6;
  if (v9 | v8)
  {
    v13[0] = 0;
    v13[1] = 0;
    v13[2] = v8;
    v13[3] = v9;
  }
  swift_task_create();
  return swift_release();
}

uint64_t closure #1 in AudioCallManager.isICSInBackground.didset()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = closure #1 in AudioCallManager.isICSInBackground.didset;
  return AudioCallManager.resolveAndPresent()();
}

void AudioCallManager.isICSInBackground.getter()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_32();
}

void AudioCallManager.isICSInBackground.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;

  v3 = (_BYTE *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 136));
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  AudioCallManager.isICSInBackground.didset();
  OUTLINED_FUNCTION_9_0();
}

void AudioCallManager.isICSInBackground.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void AudioCallManager.isICSInBackground.modify(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    AudioCallManager.isICSInBackground.didset();
  OUTLINED_FUNCTION_0();
}

void AudioCallManager.isWatchedAppInBackground.getter()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_32();
}

uint64_t AudioCallManager.isWatchedAppInBackground.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 144));
  result = OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  return result;
}

void AudioCallManager.isWatchedAppInBackground.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void key path setter for AudioCallManager.callCoordinator : <A>AudioCallManager<A>(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = swift_unknownObjectRetain();
  AudioCallManager.callCoordinator.setter(v2, v1);
}

void AudioCallManager.callCoordinator.getter()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_26();
}

void AudioCallManager.callCoordinator.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + *(_QWORD *)(*(_QWORD *)v2 + 152);
  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_9_0();
}

void AudioCallManager.callResolver.getter()
{
  OUTLINED_FUNCTION_26();
}

void sub_1BD13D240()
{
  OUTLINED_FUNCTION_0();
}

void AudioCallManager.callPresenter.getter()
{
  OUTLINED_FUNCTION_26();
}

void sub_1BD13D268()
{
  OUTLINED_FUNCTION_0();
}

uint64_t AudioCallManager.processUpdateTask.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 184)) = a1;
  return swift_release();
}

void AudioCallManager.__allocating_init(withCallCoordinator:andStream:resolvingCallsWith:presentingCallsWith:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  swift_allocObject();
  AudioCallManager.init(withCallCoordinator:andStream:resolvingCallsWith:presentingCallsWith:)(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_1BD13D2F4()
{
  uint64_t v0;

  return v0;
}

void AudioCallManager.init(withCallCoordinator:andStream:resolvingCallsWith:presentingCallsWith:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[8];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v17[5] = a7;
  v17[6] = a6;
  v17[3] = a1;
  v17[4] = a5;
  v23 = a4;
  v8 = (_QWORD *)*v7;
  v21 = v8[10];
  v9 = v21;
  v10 = type metadata accessor for AsyncStream();
  v11 = *(_QWORD *)(v10 - 8);
  v22 = *(_QWORD *)(v11 + 64);
  v17[2] = v11;
  MEMORY[0x1E0C80A78](v10);
  v17[7] = (char *)v17 - v12;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_77();
  v17[1] = v15 - v14;
  v16 = v8[11];
  v19 = v8[12];
  v20 = v16;
  v18 = v8[13];
  v24 = v9;
  v25 = v16;
  v26 = v19;
  v27 = v18;
  type metadata accessor for AudioCallManager.CallsCache();
}

_QWORD *sub_1BD13D3F0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void (*v9)(char *, uint64_t, uint64_t);
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v0[2] = AudioCallManager.CallsCache.__allocating_init()();
  v0[3] = 0;
  *((_BYTE *)v0 + *(_QWORD *)(*v0 + 136)) = 1;
  *((_BYTE *)v0 + *(_QWORD *)(*v0 + 144)) = 0;
  OUTLINED_FUNCTION_8_21(*(_QWORD *)(*v0 + 152));
  OUTLINED_FUNCTION_8_21(*(_QWORD *)(*v0 + 160));
  OUTLINED_FUNCTION_8_21(*(_QWORD *)(*v0 + 168));
  v7 = *(_QWORD *)(*v0 + 176);
  type metadata accessor for ProcessWatcherStream();
  swift_allocObject();
  *(_QWORD *)((char *)v0 + v7) = ProcessWatcherStream.init()();
  *(_QWORD *)((char *)v0 + *(_QWORD *)(*v0 + 184)) = 0;
  v8 = (char *)v0 + *(_QWORD *)(*v0 + 128);
  v9 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 16);
  *(_QWORD *)(v6 - 224) = v5;
  v10 = v4;
  v9(v8, v5, v4);
  v11 = (char *)v0 + *(_QWORD *)(*v0 + 152);
  OUTLINED_FUNCTION_2_0();
  *((_QWORD *)v11 + 1) = v2;
  swift_unknownObjectWeakAssign();
  *(_QWORD *)((char *)v0 + *(_QWORD *)(*v0 + 160) + 8) = *(_QWORD *)(v6 - 192);
  swift_unknownObjectWeakAssign();
  *(_QWORD *)((char *)v0 + *(_QWORD *)(*v0 + 168) + 8) = *(_QWORD *)(v6 - 184);
  swift_unknownObjectWeakAssign();
  v12 = type metadata accessor for TaskPriority();
  OUTLINED_FUNCTION_77_0(v3, v13, v14, v12);
  v15 = OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_7_4();
  v16 = *(char **)(v6 - 168);
  v17 = v5;
  v18 = v10;
  v9(v16, v17, v10);
  OUTLINED_FUNCTION_48_2();
  swift_retain();
  v19 = static MainActor.shared.getter();
  v20 = *(_QWORD *)(v6 - 208);
  v21 = (*(unsigned __int8 *)(v20 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  v22 = (*(_QWORD *)(v6 - 128) + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  v23 = (char *)swift_allocObject();
  v24 = MEMORY[0x1E0DF06E8];
  *((_QWORD *)v23 + 2) = v19;
  *((_QWORD *)v23 + 3) = v24;
  v25 = *(_QWORD *)(v6 - 144);
  *((_QWORD *)v23 + 4) = *(_QWORD *)(v6 - 136);
  *((_QWORD *)v23 + 5) = v25;
  v26 = *(_QWORD *)(v6 - 160);
  *((_QWORD *)v23 + 6) = *(_QWORD *)(v6 - 152);
  *((_QWORD *)v23 + 7) = v26;
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(&v23[v21], v16, v18);
  *(_QWORD *)&v23[v22] = v15;
  swift_release();
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
  v28 = v27;
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  (*(void (**)(_QWORD, uint64_t))(v20 + 8))(*(_QWORD *)(v6 - 224), v18);
  v0[3] = v28;
  swift_release();
  return v0;
}

void type metadata accessor for AudioCallManager.CallsCache()
{
  JUMPOUT(0x1C3B74FFCLL);
}

uint64_t type metadata accessor for ProcessWatcherStream()
{
  uint64_t result;

  result = type metadata singleton initialization cache for ProcessWatcherStream;
  if (!type metadata singleton initialization cache for ProcessWatcherStream)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t closure #1 in AudioCallManager.init(withCallCoordinator:andStream:resolvingCallsWith:presentingCallsWith:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v6[7] = a5;
  v6[8] = a6;
  v6[6] = a4;
  v7 = type metadata accessor for AsyncStream.Iterator();
  v6[9] = v7;
  v6[10] = *(_QWORD *)(v7 - 8);
  v6[11] = swift_task_alloc();
  v6[12] = type metadata accessor for MainActor();
  v6[13] = static MainActor.shared.getter();
  v6[14] = dispatch thunk of Actor.unownedExecutor.getter();
  v6[15] = v8;
  return swift_task_switch();
}

uint64_t closure #1 in AudioCallManager.init(withCallCoordinator:andStream:resolvingCallsWith:presentingCallsWith:)()
{
  uint64_t v0;
  _QWORD *v1;

  OUTLINED_FUNCTION_63_12();
  AsyncStream.makeAsyncIterator()();
  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v0 + 128) = OUTLINED_FUNCTION_48_18();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 136) = v1;
  OUTLINED_FUNCTION_46_16(v1);
  return OUTLINED_FUNCTION_15_39();
}

{
  _QWORD *v0;

  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_9_7(v0);
  OUTLINED_FUNCTION_43();
  return OUTLINED_FUNCTION_2_8();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  _QWORD *v3;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 40);
  *(_QWORD *)(v0 + 144) = v1;
  if (v1)
  {
    Strong = swift_weakLoadStrong();
    *(_QWORD *)(v0 + 152) = Strong;
    if (Strong)
    {
      v3 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 160) = v3;
      OUTLINED_FUNCTION_30_9(v3, (uint64_t)closure #1 in AudioCallManager.init(withCallCoordinator:andStream:resolvingCallsWith:presentingCallsWith:));
      return AudioCallManager.updateWithCall(_:)(v1);
    }
    else
    {
      OUTLINED_FUNCTION_10();
      *(_QWORD *)(v0 + 128) = OUTLINED_FUNCTION_48_18();
      v5 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 136) = v5;
      OUTLINED_FUNCTION_46_16(v5);
      OUTLINED_FUNCTION_6_13();
      return OUTLINED_FUNCTION_4_49();
    }
  }
  else
  {
    OUTLINED_FUNCTION_20_6(*(_QWORD *)(v0 + 80));
    OUTLINED_FUNCTION_43();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

{
  _QWORD *v0;

  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_9_7(v0);
  OUTLINED_FUNCTION_43();
  return OUTLINED_FUNCTION_2_8();
}

{
  uint64_t v0;
  _QWORD *v1;

  swift_unknownObjectRelease();
  *(_QWORD *)(v0 + 128) = OUTLINED_FUNCTION_48_18();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 136) = v1;
  OUTLINED_FUNCTION_46_16(v1);
  OUTLINED_FUNCTION_6_13();
  return OUTLINED_FUNCTION_4_49();
}

uint64_t AudioCallManager.resolveAndPresent()()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 128) = v0;
  *(_QWORD *)(v1 + 136) = *v0;
  OUTLINED_FUNCTION_2_14();
  return swift_task_switch();
}

{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 144) = AudioCallManager.callsCache.getter();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 152) = v1;
  OUTLINED_FUNCTION_30_9(v1, (uint64_t)AudioCallManager.resolveAndPresent());
  return AudioCallManager.CallsCache.calls.getter();
}

{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_45_2();
  *(_QWORD *)(v1 + 160) = v0;
  OUTLINED_FUNCTION_37_20();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_4_4();
}

{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = (_QWORD *)v0[17];
  v0[12] = v0[20];
  v2 = (_QWORD *)OUTLINED_FUNCTION_21_5();
  v3 = v1[10];
  v0[21] = v3;
  v2[2] = v3;
  v4 = v1[11];
  v0[22] = v4;
  v2[3] = v4;
  v5 = v1[12];
  v0[23] = v5;
  v2[4] = v5;
  v6 = v1[13];
  v0[24] = v6;
  v2[5] = v6;
  v7 = type metadata accessor for Array();
  v0[25] = v7;
  v0[26] = MEMORY[0x1C3B750C8](MEMORY[0x1E0DEAF60], v7);
  v0[27] = _ArrayProtocol.filter(_:)();
  v0[28] = 0;
  swift_task_dealloc();
  v0[29] = AudioCallManager.callsCache.getter();
  v8 = (_QWORD *)swift_task_alloc();
  v0[30] = v8;
  OUTLINED_FUNCTION_30_9(v8, (uint64_t)AudioCallManager.resolveAndPresent());
  return AudioCallManager.CallsCache.calls.getter();
}

{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_45_2();
  *(_QWORD *)(v1 + 248) = v0;
  OUTLINED_FUNCTION_37_20();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_4_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 224);
  *(_QWORD *)(v0 + 104) = *(_QWORD *)(v0 + 248);
  v2 = OUTLINED_FUNCTION_21_5();
  v3 = *(_OWORD *)(v0 + 184);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 168);
  *(_OWORD *)(v2 + 32) = v3;
  *(_QWORD *)(v0 + 256) = _ArrayProtocol.filter(_:)();
  *(_QWORD *)(v0 + 264) = v1;
  swift_task_dealloc();
  *(_QWORD *)(v0 + 272) = AudioCallManager.callsCache.getter();
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 280) = v4;
  OUTLINED_FUNCTION_30_9(v4, (uint64_t)AudioCallManager.resolveAndPresent());
  return AudioCallManager.CallsCache.calls.getter();
}

{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_45_2();
  *(_QWORD *)(v1 + 288) = v0;
  OUTLINED_FUNCTION_37_20();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_4_4();
}

{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  __int128 v9;

  *(_QWORD *)(v0 + 112) = *(_QWORD *)(v0 + 288);
  v1 = OUTLINED_FUNCTION_21_5();
  v9 = *(_OWORD *)(v0 + 168);
  v2 = *(_OWORD *)(v0 + 184);
  *(_OWORD *)(v1 + 16) = v9;
  *(_OWORD *)(v1 + 32) = v2;
  _ArrayProtocol.filter(_:)();
  swift_task_dealloc();
  v3 = static Array.+ infix(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = static Array.+ infix(_:_:)();
  *(_QWORD *)(v0 + 296) = v4;
  OUTLINED_FUNCTION_27();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v5 = Array.startIndex.getter();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 120) = v5;
  if (v5 != MEMORY[0x1C3B730F4](v4, v9))
  {
    OUTLINED_FUNCTION_31_29();
    OUTLINED_FUNCTION_24_28();
    if ((v3 & 1) != 0)
      OUTLINED_FUNCTION_40_20();
    else
      OUTLINED_FUNCTION_39_25();
    OUTLINED_FUNCTION_29_25();
    OUTLINED_FUNCTION_35_14();
  }
  OUTLINED_FUNCTION_50_19();
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 328) = v6;
  v7 = OUTLINED_FUNCTION_70_9(v6);
  return AudioCallManager.resolveCallDisplay()(v7);
}

{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  OUTLINED_FUNCTION_11_40(&v2);
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_4_4();
}

{
  _QWORD *v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v2 = v0[37];
  v3 = v0[21];
  swift_unknownObjectRelease();
  v4 = v0[15];
  if (v4 != MEMORY[0x1C3B730F4](v2, v3))
  {
    OUTLINED_FUNCTION_31_29();
    OUTLINED_FUNCTION_24_28();
    if ((v1 & 1) != 0)
      OUTLINED_FUNCTION_40_20();
    else
      OUTLINED_FUNCTION_39_25();
    OUTLINED_FUNCTION_29_25();
    OUTLINED_FUNCTION_35_14();
  }
  OUTLINED_FUNCTION_50_19();
  v5 = (_QWORD *)swift_task_alloc();
  v0[41] = v5;
  v6 = OUTLINED_FUNCTION_70_9(v5);
  return AudioCallManager.resolveCallDisplay()(v6);
}

{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  OUTLINED_FUNCTION_11_40(&v2);
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_4_4();
}

{
  uint64_t v0;

  AudioCallManager.presentCallsUsingPresentation(_:)(v0 + 16);
  outlined destroy of CallsPresentation(v0 + 16);
  return OUTLINED_FUNCTION_1_8(*(uint64_t (**)(void))(v0 + 8));
}

BOOL closure #2 in AudioCallManager.resolveAndPresent()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (((*(uint64_t (**)(uint64_t, uint64_t))(a3 + 112))(a2, a3) & 1) == 0)
    return 0;
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 168))(a2, a3);
  v6 = specialized Set.count.getter(v5);
  swift_bridgeObjectRelease();
  return v6 > 1;
}

uint64_t AudioCallManager.updateWithCall(_:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v2[4] = *v1;
  OUTLINED_FUNCTION_48_2();
  v2[5] = OUTLINED_FUNCTION_54_2();
  v2[6] = OUTLINED_FUNCTION_34();
  v2[7] = v3;
  return OUTLINED_FUNCTION_2_8();
}

uint64_t AudioCallManager.updateWithCall(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v1 + 88);
  *(_QWORD *)(v0 + 64) = v2;
  v3 = *(uint64_t (**)(void))(v2 + 128);
  *(_QWORD *)(v0 + 72) = *(_QWORD *)(v1 + 80);
  if ((v3() & 1) != 0)
  {
    swift_release();
    return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    *(_QWORD *)(v0 + 80) = AudioCallManager.callsCache.getter();
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 88) = v5;
    *v5 = v0;
    v5[1] = AudioCallManager.updateWithCall(_:);
    return AudioCallManager.CallsCache.addCall(_:)(*(_QWORD *)(v0 + 16));
  }
}

{
  _QWORD *v0;

  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_9_7(v0);
  OUTLINED_FUNCTION_43();
  return OUTLINED_FUNCTION_2_8();
}

{
  _QWORD *v0;
  void *v1;
  unsigned __int8 v2;
  _QWORD *v3;

  v1 = (void *)(*(uint64_t (**)(_QWORD))(v0[8] + 160))(v0[9]);
  v2 = objc_msgSend(v1, sel_isSystemProvider);

  if ((v2 & 1) == 0)
    AudioCallManager.watchProcessForCall(_:)();
  v3 = (_QWORD *)swift_task_alloc();
  v0[12] = v3;
  *v3 = v0;
  v3[1] = AudioCallManager.updateWithCall(_:);
  return AudioCallManager.resolveAndPresent()();
}

{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  OUTLINED_FUNCTION_9_7(&v2);
  return OUTLINED_FUNCTION_4_4();
}

{
  uint64_t v0;

  swift_release();
  return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v0 + 8));
}

void AudioCallManager.watchProcessForCall(_:)()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  char *v34;

  v1 = (_QWORD *)*v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_77();
  v33 = v4 - v3;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncStream<Bool>?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_77();
  v8 = v7 - v6;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncStream<Bool>);
  v32 = *(_QWORD *)(v9 - 8);
  v10 = *(_QWORD *)(v32 + 64);
  v11 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v34 = (char *)&v29 - v13;
  v15 = v1[10];
  v14 = v1[11];
  if (OUTLINED_FUNCTION_49_18() == 6 || OUTLINED_FUNCTION_49_18() == 6)
  {
    AudioCallManager.processUpdateTask.setter(0);
    return;
  }
  v16 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v14 + 160))(v15, v14);
  v17 = objc_msgSend(v16, sel_bundleIdentifier);

  if (v17)
  {
    v31 = (void (*)(char *, uint64_t, uint64_t))static String._unconditionallyBridgeFromObjectiveC(_:)();
    v19 = v18;

    swift_retain();
    swift_bridgeObjectRetain();
    ProcessWatcherStream.watchProcessForBundleIdentifier(_:)((uint64_t)v31, v19, v8);
    OUTLINED_FUNCTION_2_1();
    OUTLINED_FUNCTION_83_0(v8, 0);
    OUTLINED_FUNCTION_2_1();
    OUTLINED_FUNCTION_43();
    if (__swift_getEnumTagSinglePayload(v8, 1, v9) != 1)
    {
      v31 = *(void (**)(char *, uint64_t, uint64_t))(v32 + 32);
      v20 = v32;
      v31(v34, v8, v9);
      v21 = type metadata accessor for TaskPriority();
      OUTLINED_FUNCTION_77_0(v33, v22, v23, v21);
      v24 = OUTLINED_FUNCTION_7_0();
      OUTLINED_FUNCTION_7_4();
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v12, v34, v9);
      OUTLINED_FUNCTION_48_2();
      swift_retain();
      v30 = static MainActor.shared.getter();
      v25 = (*(unsigned __int8 *)(v20 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
      v26 = (char *)swift_allocObject();
      v27 = MEMORY[0x1E0DF06E8];
      *((_QWORD *)v26 + 2) = v30;
      *((_QWORD *)v26 + 3) = v27;
      *((_QWORD *)v26 + 4) = v15;
      *((_QWORD *)v26 + 5) = v14;
      *((_QWORD *)v26 + 6) = v1[12];
      *((_QWORD *)v26 + 7) = v1[13];
      v31(&v26[v25], (uint64_t)v12, v9);
      *(_QWORD *)&v26[(v10 + v25 + 7) & 0xFFFFFFFFFFFFFFF8] = v24;
      swift_release();
      _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
      AudioCallManager.processUpdateTask.setter(v28);
      (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v9);
      return;
    }
  }
  else
  {
    OUTLINED_FUNCTION_83_0(v8, 1);
  }
  outlined destroy of AsyncStream<Bool>?(v8, &demangling cache variable for type metadata for AsyncStream<Bool>?);
}

uint64_t closure #1 in AudioCallManager.watchProcessForCall(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5[11] = a4;
  v5[12] = a5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncStream<Bool>.Iterator);
  v5[13] = v6;
  v5[14] = *(_QWORD *)(v6 - 8);
  v5[15] = swift_task_alloc();
  v5[16] = type metadata accessor for MainActor();
  v5[17] = static MainActor.shared.getter();
  v5[18] = dispatch thunk of Actor.unownedExecutor.getter();
  v5[19] = v7;
  return swift_task_switch();
}

uint64_t closure #1 in AudioCallManager.watchProcessForCall(_:)()
{
  uint64_t v0;
  _QWORD *v1;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncStream<Bool>);
  AsyncStream.makeAsyncIterator()();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v0 + 160) = OUTLINED_FUNCTION_62_10();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 168) = v1;
  OUTLINED_FUNCTION_47_8(v1);
  OUTLINED_FUNCTION_6_13();
  return AsyncStream.Iterator.next(isolation:)();
}

{
  _QWORD *v0;

  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_9_7(v0);
  OUTLINED_FUNCTION_43();
  return OUTLINED_FUNCTION_2_8();
}

{
  uint64_t v0;
  int v1;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t *Strong;
  char v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  v1 = *(unsigned __int8 *)(v0 + 192);
  if (v1 == 2)
  {
    OUTLINED_FUNCTION_20_6(*(_QWORD *)(v0 + 112));
    OUTLINED_FUNCTION_43();
    swift_task_dealloc();
    return OUTLINED_FUNCTION_16_29(*(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    v3 = type metadata accessor for Logger();
    __swift_project_value_buffer(v3, (uint64_t)&static Logger.conversationKit);
    v4 = Logger.logObject.getter();
    v5 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = swift_slowAlloc();
      *(_DWORD *)v6 = 67109120;
      *(_DWORD *)(v6 + 4) = v1 & 1;
      _os_log_impl(&dword_1BD004000, v4, v5, "ProcessWatcherStream processUpdate %{BOOL}d", (uint8_t *)v6, 8u);
      MEMORY[0x1C3B751B8](v6, -1, -1);
    }

    Strong = (uint64_t *)swift_weakLoadStrong();
    if (Strong)
    {
      v8 = OUTLINED_FUNCTION_56_13(*Strong);
      OUTLINED_FUNCTION_43();
    }
    else
    {
      v8 = 0;
    }
    v9 = OUTLINED_FUNCTION_55_14();
    if (v9)
    {
      (*(void (**)(BOOL))(*(_QWORD *)v9 + 320))((v1 & 1) == 0);
      OUTLINED_FUNCTION_43();
    }
    if (((v1 & 1) == 0) == (v8 & 1) || (v10 = OUTLINED_FUNCTION_55_14(), (*(_QWORD *)(v0 + 176) = v10) == 0))
    {
      *(_QWORD *)(v0 + 160) = OUTLINED_FUNCTION_62_10();
      v12 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 168) = v12;
      OUTLINED_FUNCTION_47_8(v12);
      OUTLINED_FUNCTION_6_13();
      return OUTLINED_FUNCTION_15_39();
    }
    else
    {
      v11 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 184) = v11;
      OUTLINED_FUNCTION_30_9(v11, (uint64_t)closure #1 in AudioCallManager.watchProcessForCall(_:));
      return AudioCallManager.resolveAndPresent()();
    }
  }
}

{
  _QWORD *v0;

  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_9_7(v0);
  OUTLINED_FUNCTION_43();
  return OUTLINED_FUNCTION_2_8();
}

{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 160) = OUTLINED_FUNCTION_62_10();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 168) = v1;
  OUTLINED_FUNCTION_47_8(v1);
  OUTLINED_FUNCTION_6_13();
  return OUTLINED_FUNCTION_4_49();
}

uint64_t AudioCallManager.resolveCallDisplay()(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  v2[42] = a1;
  v2[43] = v1;
  v2[44] = *v1;
  OUTLINED_FUNCTION_48_2();
  v2[45] = OUTLINED_FUNCTION_54_2();
  v2[46] = OUTLINED_FUNCTION_34();
  v2[47] = v3;
  return OUTLINED_FUNCTION_2_8();
}

uint64_t AudioCallManager.resolveCallDisplay()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  void *v5;

  v1 = (*(uint64_t (**)(void))(**(_QWORD **)(v0 + 344) + 336))();
  *(_QWORD *)(v0 + 384) = v1;
  if (v1)
  {
    *(_QWORD *)(v0 + 392) = v2;
    *(_QWORD *)(v0 + 400) = AudioCallManager.callsCache.getter();
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 408) = v3;
    OUTLINED_FUNCTION_30_9(v3, (uint64_t)AudioCallManager.resolveCallDisplay());
    return AudioCallManager.CallsCache.calls.getter();
  }
  else
  {
    v5 = *(void **)(v0 + 336);
    swift_release();
    *(_QWORD *)(v0 + 208) = 0;
    *(_OWORD *)(v0 + 192) = 0u;
    *(_OWORD *)(v0 + 176) = 0u;
    *(_OWORD *)(v0 + 232) = 0u;
    *(_QWORD *)(v0 + 248) = 0;
    *(_OWORD *)(v0 + 216) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
    *(_OWORD *)(v0 + 48) = 0u;
    *(_OWORD *)(v0 + 64) = 0u;
    *(_OWORD *)(v0 + 80) = 0u;
    *(_OWORD *)(v0 + 16) = 0u;
    outlined assign with take of Participant?(v0 + 176, v0 + 16, &demangling cache variable for type metadata for CompactPresentable?);
    outlined assign with take of Participant?(v0 + 216, v0 + 56, &demangling cache variable for type metadata for FullPresentable?);
    OUTLINED_FUNCTION_69_4(v5, (const void *)(v0 + 16));
    return OUTLINED_FUNCTION_1_8(*(uint64_t (**)(void))(v0 + 8));
  }
}

{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_30();
  *(_QWORD *)(v0 + 416) = v1;
  OUTLINED_FUNCTION_37_20();
  OUTLINED_FUNCTION_43();
  return OUTLINED_FUNCTION_2_8();
}

void AudioCallManager.resolveCallDisplay()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 344);
  v2 = swift_release();
  if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 288))(v2) & 1) != 0
    && (OUTLINED_FUNCTION_56_13(**(_QWORD **)(v0 + 344)) & 1) != 0)
  {
    type metadata accessor for SpringBoardUtilities();
    static SpringBoardUtilities.checkSpringBoardState(for:)();
  }
  AudioCallManager.callResolver.getter();
}

uint64_t sub_1BD13EBF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v3;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t ObjectType;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[21];

  if (a1)
  {
    v6 = *(_QWORD *)(v2 + 384);
    v5 = *(_QWORD *)(v2 + 392);
    v7 = *(void **)(v2 + 336);
    ObjectType = swift_getObjectType();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Call & CompactPresentable & FullPresentable);
    v9 = _arrayForceCast<A, B>(_:)();
    OUTLINED_FUNCTION_2_1();
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(a2 + 32))(v14, v9, v6, v5, v3 & 1, ObjectType, a2);
    OUTLINED_FUNCTION_10();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_69_4(v7, v14);
  }
  else
  {
    v10 = *(void **)(v2 + 336);
    v11 = OUTLINED_FUNCTION_2_1();
    *(_QWORD *)(v2 + 288) = 0;
    *(_OWORD *)(v2 + 256) = 0u;
    *(_OWORD *)(v2 + 272) = 0u;
    *(_OWORD *)(v2 + 296) = 0u;
    *(_OWORD *)(v2 + 312) = 0u;
    *(_QWORD *)(v2 + 328) = 0;
    *(_OWORD *)(v2 + 96) = 0u;
    *(_OWORD *)(v2 + 112) = 0u;
    *(_OWORD *)(v2 + 128) = 0u;
    *(_OWORD *)(v2 + 144) = 0u;
    *(_OWORD *)(v2 + 160) = 0u;
    OUTLINED_FUNCTION_66_10(v11, v12, &demangling cache variable for type metadata for CompactPresentable?);
    outlined assign with take of Participant?(v2 + 296, v2 + 136, &demangling cache variable for type metadata for FullPresentable?);
    OUTLINED_FUNCTION_69_4(v10, (const void *)(v2 + 96));
    swift_unknownObjectRelease();
  }
  return (*(uint64_t (**)(void))(v2 + 8))();
}

void CallsPresentation.init(compact:full:)(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  a2[3] = 0u;
  a2[4] = 0u;
  a2[1] = 0u;
  a2[2] = 0u;
  *a2 = 0u;
  outlined assign with take of Participant?(a1, (uint64_t)a2, &demangling cache variable for type metadata for CompactPresentable?);
  OUTLINED_FUNCTION_66_10(v2, v3, &demangling cache variable for type metadata for FullPresentable?);
  OUTLINED_FUNCTION_0();
}

void AudioCallManager.presentCallsUsingPresentation(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE v4[24];
  uint64_t v5;
  _BYTE v6[24];
  uint64_t v7;
  uint64_t v8;

  outlined init with copy of FeatureEligibility?(a1, (uint64_t)v6, &demangling cache variable for type metadata for CompactPresentable?);
  v2 = v7;
  outlined destroy of AsyncStream<Bool>?((uint64_t)v6, &demangling cache variable for type metadata for CompactPresentable?);
  outlined init with copy of CallsPresentation(a1, (uint64_t)v6);
  if (v2)
  {
    outlined destroy of CallsPresentation((uint64_t)v6);
    goto LABEL_4;
  }
  outlined init with copy of FeatureEligibility?((uint64_t)&v8, (uint64_t)v4, &demangling cache variable for type metadata for FullPresentable?);
  outlined destroy of CallsPresentation((uint64_t)v6);
  v3 = v5;
  outlined destroy of AsyncStream<Bool>?((uint64_t)v4, &demangling cache variable for type metadata for FullPresentable?);
  if (v3)
LABEL_4:
    AudioCallManager.callPresenter.getter();
}

_QWORD *AudioCallManager.deinit()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  if (v0[3])
  {
    v1 = swift_retain();
    MEMORY[0x1C3B73268](v1, MEMORY[0x1E0DEE9C0] + 8, MEMORY[0x1E0DEDCE8], MEMORY[0x1E0DEDD18]);
    swift_release();
  }
  swift_release();
  OUTLINED_FUNCTION_53_2();
  v2 = OUTLINED_FUNCTION_63_12();
  OUTLINED_FUNCTION_20_6(*(_QWORD *)(v2 - 8));
  OUTLINED_FUNCTION_51_16(*(_QWORD *)(*v0 + 152));
  OUTLINED_FUNCTION_51_16(*(_QWORD *)(*v0 + 160));
  OUTLINED_FUNCTION_51_16(*(_QWORD *)(*v0 + 168));
  swift_release();
  swift_release();
  return v0;
}

uint64_t AudioCallManager.__deallocating_deinit()
{
  AudioCallManager.deinit();
  return swift_deallocClassInstance();
}

void Call.displayStyle.getter(uint64_t a1@<X1>, _BYTE *a2@<X8>)
{
  unsigned int v3;
  unint64_t v4;

  v3 = (*(uint64_t (**)(void))(a1 + 184))();
  v4 = 0x3030000010003uLL >> (8 * v3);
  if (v3 >= 7)
    LOBYTE(v4) = 3;
  *a2 = v4;
  OUTLINED_FUNCTION_0();
}

BOOL static DisplayStyle.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void DisplayStyle.hash(into:)()
{
  unsigned __int8 *v0;

  Hasher._combine(_:)(*v0);
  OUTLINED_FUNCTION_0();
}

Swift::Int DisplayStyle.hashValue.getter()
{
  unsigned __int8 *v0;
  Swift::UInt v1;

  v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void CallsPresentation.compact.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  outlined init with copy of FeatureEligibility?(v1, a1, &demangling cache variable for type metadata for CompactPresentable?);
}

void CallsPresentation.compact.setter(uint64_t a1)
{
  uint64_t v1;

  outlined assign with take of Participant?(a1, v1, &demangling cache variable for type metadata for CompactPresentable?);
}

uint64_t (*CallsPresentation.compact.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void CallsPresentation.full.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  outlined init with copy of FeatureEligibility?(v1 + 40, a1, &demangling cache variable for type metadata for FullPresentable?);
}

void CallsPresentation.full.setter(uint64_t a1)
{
  uint64_t v1;

  outlined assign with take of Participant?(a1, v1 + 40, &demangling cache variable for type metadata for FullPresentable?);
}

uint64_t (*CallsPresentation.full.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ProcessWatcherStream.watchProcessForBundleIdentifier(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD aBlock[6];

  v35 = a3;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncStream<Bool>.Continuation.BufferingPolicy);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncStream<Bool>?);
  v11 = MEMORY[0x1E0C80A78](v10);
  v34 = (uint64_t)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v33 - v14;
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v33 - v16;
  v3[3] = a1;
  v3[4] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = (uint64_t)v3
      + OBJC_IVAR____TtC15ConversationKitP33_3A0EEB366752F2F4FD7C097A5827E2E220ProcessWatcherStream_currentStream;
  swift_beginAccess();
  outlined init with copy of FeatureEligibility?(v18, (uint64_t)v17, &demangling cache variable for type metadata for AsyncStream<Bool>?);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncStream<Bool>);
  if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v19) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v35, v17, v19);
  outlined destroy of AsyncStream<Bool>?((uint64_t)v17, &demangling cache variable for type metadata for AsyncStream<Bool>?);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncStream<Bool>.Continuation?);
  v33 = swift_allocBox();
  v21 = v20;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncStream<Bool>.Continuation);
  v23 = __swift_storeEnumTagSinglePayload(v21, 1, 1, v22);
  MEMORY[0x1E0C80A78](v23);
  *(&v33 - 2) = v21;
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DF07B8], v6);
  v24 = v35;
  AsyncStream.init(_:bufferingPolicy:_:)();
  v25 = objc_msgSend((id)objc_opt_self(), sel_configurationForDefaultMainDisplayMonitor);
  objc_msgSend(v25, sel_setNeedsUserInteractivePriority_, 1);
  v26 = swift_allocObject();
  swift_weakInit();
  v27 = swift_allocObject();
  *(_QWORD *)(v27 + 16) = v33;
  *(_QWORD *)(v27 + 24) = v26;
  aBlock[4] = partial apply for closure #2 in ProcessWatcherStream.watchProcessForBundleIdentifier(_:);
  aBlock[5] = v27;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed (@guaranteed FBSDisplayLayoutMonitor, @guaranteed FBSDisplayLayout?, @guaranteed FBSDisplayLayoutTransitionContext?) -> ();
  aBlock[3] = &block_descriptor_20;
  v28 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v25, sel_setTransitionHandler_, v28);
  _Block_release(v28);
  v29 = objc_msgSend((id)objc_opt_self(), sel_monitorWithConfiguration_, v25);

  v30 = (void *)v3[2];
  v3[2] = v29;

  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v15, v24, v19);
  __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v19);
  v31 = v34;
  outlined init with take of AsyncStream<Bool>?((uint64_t)v15, v34);
  swift_beginAccess();
  outlined assign with take of Participant?(v31, v18, &demangling cache variable for type metadata for AsyncStream<Bool>?);
  swift_endAccess();
  return swift_release();
}

uint64_t closure #1 in ProcessWatcherStream.watchProcessForBundleIdentifier(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  outlined destroy of AsyncStream<Bool>?(a2, &demangling cache variable for type metadata for AsyncStream<Bool>.Continuation?);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncStream<Bool>.Continuation);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return __swift_storeEnumTagSinglePayload(a2, 0, 1, v4);
}

uint64_t closure #2 in ProcessWatcherStream.watchProcessForBundleIdentifier(_:)(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  id v17;
  id v18;
  unint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  _BYTE v24[23];
  BOOL v25;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncStream<Bool>.Continuation?);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = &v24[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v8 = &v24[-v7];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncStream<Bool>.Continuation.YieldResult);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = &v24[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v11);
  v15 = &v24[-v14];
  v16 = swift_projectBox();
  if (a2)
  {
    v17 = a2;
    v18 = objc_msgSend(v17, sel_elements);
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for FBSDisplayLayoutElement);
    v19 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    swift_retain();
    v20 = specialized Sequence.first(where:)(v19);
    swift_bridgeObjectRelease();
    if (v20)

    swift_beginAccess();
    outlined init with copy of FeatureEligibility?(v16, (uint64_t)v6, &demangling cache variable for type metadata for AsyncStream<Bool>.Continuation?);
    v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncStream<Bool>.Continuation);
    result = __swift_getEnumTagSinglePayload((uint64_t)v6, 1, v21);
    if ((_DWORD)result != 1)
    {
      v25 = v20 != 0;
      AsyncStream.Continuation.yield(_:)();

      (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v13, v9);
      return (*(uint64_t (**)(_BYTE *, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v6, v21);
    }
    __break(1u);
    goto LABEL_10;
  }
  swift_beginAccess();
  outlined init with copy of FeatureEligibility?(v16, (uint64_t)v8, &demangling cache variable for type metadata for AsyncStream<Bool>.Continuation?);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncStream<Bool>.Continuation);
  result = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v23);
  if ((_DWORD)result == 1)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  v25 = 0;
  AsyncStream.Continuation.yield(_:)();
  (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v15, v9);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v8, v23);
}

void thunk for @escaping @callee_guaranteed (@guaranteed FBSDisplayLayoutMonitor, @guaranteed FBSDisplayLayout?, @guaranteed FBSDisplayLayoutTransitionContext?) -> ()(uint64_t a1, void *a2, void *a3, void *a4)
{
  void (*v7)(id, void *, void *);
  id v8;
  id v9;
  id v10;

  v7 = *(void (**)(id, void *, void *))(a1 + 32);
  swift_retain();
  v10 = a2;
  v8 = a3;
  v9 = a4;
  v7(v10, a3, a4);
  swift_release();

}

uint64_t ProcessWatcherStream.deinit()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 16);
  if (v1)
  {
    objc_msgSend(v1, sel_invalidate);
    v2 = *(void **)(v0 + 16);
  }
  else
  {
    v2 = 0;
  }

  swift_bridgeObjectRelease();
  outlined destroy of AsyncStream<Bool>?(v0 + OBJC_IVAR____TtC15ConversationKitP33_3A0EEB366752F2F4FD7C097A5827E2E220ProcessWatcherStream_currentStream, &demangling cache variable for type metadata for AsyncStream<Bool>?);
  return v0;
}

uint64_t ProcessWatcherStream.__deallocating_deinit()
{
  ProcessWatcherStream.deinit();
  return swift_deallocClassInstance();
}

_QWORD *ProcessWatcherStream.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v0[2] = 0;
  v0[3] = 0;
  v0[4] = 0;
  v1 = (uint64_t)v0
     + OBJC_IVAR____TtC15ConversationKitP33_3A0EEB366752F2F4FD7C097A5827E2E220ProcessWatcherStream_currentStream;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncStream<Bool>);
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v2);
  return v0;
}

uint64_t sub_1BD13F910()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BD13F934()
{
  OUTLINED_FUNCTION_63_12();
  OUTLINED_FUNCTION_3_52();
  OUTLINED_FUNCTION_43_3();
  swift_release();
  return OUTLINED_FUNCTION_17_33();
}

uint64_t partial apply for closure #1 in AudioCallManager.init(withCallCoordinator:andStream:resolvingCallsWith:presentingCallsWith:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  type metadata accessor for AsyncStream();
  OUTLINED_FUNCTION_10_44();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_61_5(v0);
  v2 = OUTLINED_FUNCTION_13_43(v1);
  return closure #1 in AudioCallManager.init(withCallCoordinator:andStream:resolvingCallsWith:presentingCallsWith:)(v2, v3, v4, v5, v6, v7);
}

unint64_t lazy protocol witness table accessor for type DisplayStyle and conformance DisplayStyle()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type DisplayStyle and conformance DisplayStyle;
  if (!lazy protocol witness table cache variable for type DisplayStyle and conformance DisplayStyle)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for DisplayStyle, &type metadata for DisplayStyle);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type DisplayStyle and conformance DisplayStyle);
  }
  return result;
}

void sub_1BD13FA34()
{
  _BYTE *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))(v1 + 264))() & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD13FA5C(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_31_5(a1);
  (*(void (**)(uint64_t))(v2 + 272))(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD13FA84()
{
  _BYTE *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))(v1 + 288))() & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD13FAAC(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_31_5(a1);
  (*(void (**)(uint64_t))(v2 + 296))(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD13FAD4()
{
  _BYTE *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = OUTLINED_FUNCTION_56_13(v1) & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD13FAF8(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_31_5(a1);
  (*(void (**)(uint64_t))(v2 + 320))(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD13FB20()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))(v1 + 336))();
  v0[1] = v2;
  OUTLINED_FUNCTION_0();
}

uint64_t type metadata completion function for AudioCallManager()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for AsyncStream();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void type metadata accessor for AudioCallManager()
{
  JUMPOUT(0x1C3B74FFCLL);
}

uint64_t method lookup function for AudioCallManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AudioCallManager.foregroundRingingCall.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of AudioCallManager.foregroundRingingCall.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of AudioCallManager.foregroundRingingCall.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of AudioCallManager.isICSInBackground.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

uint64_t dispatch thunk of AudioCallManager.isICSInBackground.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t dispatch thunk of AudioCallManager.isICSInBackground.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
}

uint64_t dispatch thunk of AudioCallManager.isWatchedAppInBackground.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 312))();
}

uint64_t dispatch thunk of AudioCallManager.isWatchedAppInBackground.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 320))();
}

uint64_t dispatch thunk of AudioCallManager.isWatchedAppInBackground.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 328))();
}

uint64_t dispatch thunk of AudioCallManager.callCoordinator.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 336))();
}

uint64_t dispatch thunk of AudioCallManager.__allocating_init(withCallCoordinator:andStream:resolvingCallsWith:presentingCallsWith:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 432))();
}

uint64_t type metadata completion function for AudioCallManager.CallsCache()
{
  return swift_initClassMetadata2();
}

uint64_t dispatch thunk of CallCoordinator.activeVideoCall.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of CallCoordinator.callCount.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of CallDisplayResolver.foregroundRingingCall.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of CallDisplayResolver.foregroundRingingCall.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of CallDisplayResolver.resolveCallPresentationFromCalls(_:using:isInBackground:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 32))();
}

uint64_t dispatch thunk of CallDisplayResolver.activityTypeForPresentedCall.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t storeEnumTagSinglePayload for DisplayStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BD13FD68 + 4 * byte_1BD64B015[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BD13FD9C + 4 * byte_1BD64B010[v4]))();
}

uint64_t sub_1BD13FD9C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD13FDA4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD13FDACLL);
  return result;
}

uint64_t sub_1BD13FDB8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD13FDC0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BD13FDC4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD13FDCC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DisplayStyle()
{
  return &type metadata for DisplayStyle;
}

uint64_t dispatch thunk of AudioCallPresenter.presentInCompactDisplay(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of AudioCallPresenter.presentInFullDisplay(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t destroy for CallsPresentation(uint64_t result)
{
  uint64_t v1;

  v1 = result;
  if (*(_QWORD *)(result + 24))
    result = __swift_destroy_boxed_opaque_existential_1(result);
  if (*(_QWORD *)(v1 + 64))
    return __swift_destroy_boxed_opaque_existential_1(v1 + 40);
  return result;
}

uint64_t initializeWithCopy for CallsPresentation(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;

  v4 = *(_QWORD *)(a2 + 24);
  if (v4)
  {
    v5 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v4;
    *(_QWORD *)(a1 + 32) = v5;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
  }
  else
  {
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  }
  v7 = (_OWORD *)(a1 + 40);
  v8 = (_OWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 64);
  if (v9)
  {
    v10 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = v9;
    *(_QWORD *)(a1 + 72) = v10;
    (**(void (***)(_OWORD *, _OWORD *))(v9 - 8))(v7, v8);
  }
  else
  {
    v11 = *(_OWORD *)(a2 + 56);
    *v7 = *v8;
    *(_OWORD *)(a1 + 56) = v11;
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  }
  return a1;
}

uint64_t assignWithCopy for CallsPresentation(uint64_t a1, __int128 *a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;

  v4 = *((_QWORD *)a2 + 3);
  if (*(_QWORD *)(a1 + 24))
  {
    if (v4)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
      goto LABEL_8;
    }
    __swift_destroy_boxed_opaque_existential_1(a1);
  }
  else if (v4)
  {
    *(_QWORD *)(a1 + 24) = v4;
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    (**(void (***)(uint64_t, __int128 *))(v4 - 8))(a1, a2);
    goto LABEL_8;
  }
  v5 = *a2;
  v6 = a2[1];
  *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
  *(_OWORD *)a1 = v5;
  *(_OWORD *)(a1 + 16) = v6;
LABEL_8:
  v7 = *((_QWORD *)a2 + 8);
  if (!*(_QWORD *)(a1 + 64))
  {
    if (v7)
    {
      *(_QWORD *)(a1 + 64) = v7;
      *(_QWORD *)(a1 + 72) = *((_QWORD *)a2 + 9);
      (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 40, (uint64_t)a2 + 40);
      return a1;
    }
LABEL_14:
    v8 = *(__int128 *)((char *)a2 + 40);
    v9 = *(__int128 *)((char *)a2 + 56);
    *(_QWORD *)(a1 + 72) = *((_QWORD *)a2 + 9);
    *(_OWORD *)(a1 + 40) = v8;
    *(_OWORD *)(a1 + 56) = v9;
    return a1;
  }
  if (!v7)
  {
    __swift_destroy_boxed_opaque_existential_1(a1 + 40);
    goto LABEL_14;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 40), (uint64_t *)a2 + 5);
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

void *__swift_memcpy80_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x50uLL);
}

uint64_t assignWithTake for CallsPresentation(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;

  if (*(_QWORD *)(a1 + 24))
    __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 64))
    __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  v5 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = v5;
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for CallsPresentation(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 80))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 24);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CallsPresentation(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 80) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for CallsPresentation()
{
  return &type metadata for CallsPresentation;
}

uint64_t ObjC metadata update function for ProcessWatcherStream()
{
  return type metadata accessor for ProcessWatcherStream();
}

void type metadata completion function for ProcessWatcherStream()
{
  unint64_t v0;

  type metadata accessor for AsyncStream<Bool>?();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void type metadata accessor for AsyncStream<Bool>?()
{
  unint64_t v0;
  uint64_t v1;

  if (!lazy cache variable for type metadata for AsyncStream<Bool>?)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for AsyncStream<Bool>);
    v0 = type metadata accessor for Optional();
    if (!v1)
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for AsyncStream<Bool>?);
  }
}

uint64_t partial apply for closure #1 in ProcessWatcherStream.watchProcessForBundleIdentifier(_:)(uint64_t a1)
{
  uint64_t v1;

  return closure #1 in ProcessWatcherStream.watchProcessForBundleIdentifier(_:)(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BD14035C()
{
  swift_release();
  OUTLINED_FUNCTION_53_2();
  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in ProcessWatcherStream.watchProcessForBundleIdentifier(_:)(uint64_t a1, void *a2)
{
  return closure #2 in ProcessWatcherStream.watchProcessForBundleIdentifier(_:)(a1, a2);
}

uint64_t outlined init with take of AsyncStream<Bool>?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncStream<Bool>?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t outlined bridged method (pb) of @objc FBSDisplayLayoutElement.bundleIdentifier.getter(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_bundleIdentifier);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t partial apply for closure #1 in AudioCallManager.CallsCache.calls.getter@<X0>(uint64_t *a1@<X8>)
{
  return closure #1 in AudioCallManager.CallsCache.calls.getter(a1);
}

uint64_t partial apply for closure #1 in closure #1 in AudioCallManager.CallsCache.calls.getter@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return closure #1 in closure #1 in AudioCallManager.CallsCache.calls.getter(a1, a2);
}

unint64_t lazy protocol witness table accessor for type NSEnumerator and conformance NSEnumerator()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type NSEnumerator and conformance NSEnumerator;
  if (!lazy protocol witness table cache variable for type NSEnumerator and conformance NSEnumerator)
  {
    type metadata accessor for NSObject(255, &lazy cache variable for type metadata for NSEnumerator);
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CB1CD8], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type NSEnumerator and conformance NSEnumerator);
  }
  return result;
}

uint64_t outlined init with copy of CallsPresentation(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for CallsPresentation(a2, a1);
  return a2;
}

uint64_t outlined destroy of CallsPresentation(uint64_t a1)
{
  destroy for CallsPresentation(a1);
  return a1;
}

uint64_t sub_1BD140520()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncStream<Bool>);
  OUTLINED_FUNCTION_3_52();
  OUTLINED_FUNCTION_43_3();
  swift_release();
  return OUTLINED_FUNCTION_17_33();
}

uint64_t partial apply for closure #1 in AudioCallManager.watchProcessForCall(_:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncStream<Bool>);
  OUTLINED_FUNCTION_10_44();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_61_5(v0);
  v2 = OUTLINED_FUNCTION_13_43(v1);
  return closure #1 in AudioCallManager.watchProcessForCall(_:)(v2, v3, v4, v5, v6);
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v3 = *v0;
  v1 = *v0;
  OUTLINED_FUNCTION_11_40(&v3);
  return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t partial apply for closure #1 in AudioCallManager.resolveAndPresent()()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(v0 + 24) + 128))(*(_QWORD *)(v0 + 16)) & 1;
}

BOOL partial apply for closure #2 in AudioCallManager.resolveAndPresent()(uint64_t a1)
{
  uint64_t v1;

  return closure #2 in AudioCallManager.resolveAndPresent()(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

BOOL partial apply for closure #3 in AudioCallManager.resolveAndPresent()()
{
  return OUTLINED_FUNCTION_71_11() == 5 || OUTLINED_FUNCTION_71_11() == 6;
}

uint64_t sub_1BD1406D4()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in AudioCallManager.isICSInBackground.didset()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = swift_task_alloc();
  v2 = (_QWORD *)OUTLINED_FUNCTION_61_5(v1);
  *v2 = v0;
  v2[1] = closure #1 in AudioCallManager.isICSInBackground.didset;
  OUTLINED_FUNCTION_6_13();
  return closure #1 in AudioCallManager.isICSInBackground.didset();
}

void outlined destroy of AsyncStream<Bool>?(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_20_6(*(_QWORD *)(v2 - 8));
  OUTLINED_FUNCTION_0();
}

uint64_t sub_1BD140790()
{
  OUTLINED_FUNCTION_53_2();
  return swift_deallocObject();
}

uint64_t OUTLINED_FUNCTION_39_25()
{
  return _ArrayBuffer._getElementSlowPath(_:)();
}

uint64_t key path getter for InCallControlsTitleCell.delegate : InCallControlsTitleCell@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *a1 + OBJC_IVAR____TtC15ConversationKit23InCallControlsTitleCell_delegate;
  swift_beginAccess();
  result = MEMORY[0x1C3B752C0](v3);
  v5 = *(_QWORD *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t key path setter for InCallControlsTitleCell.delegate : InCallControlsTitleCell(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *a2 + OBJC_IVAR____TtC15ConversationKit23InCallControlsTitleCell_delegate;
  swift_beginAccess();
  *(_QWORD *)(v3 + 8) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t InCallControlsTitleCell.delegate.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit23InCallControlsTitleCell_delegate;
  OUTLINED_FUNCTION_2_0();
  return MEMORY[0x1C3B752C0](v1);
}

uint64_t InCallControlsTitleCell.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + OBJC_IVAR____TtC15ConversationKit23InCallControlsTitleCell_delegate;
  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*InCallControlsTitleCell.delegate.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC15ConversationKit23InCallControlsTitleCell_delegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  OUTLINED_FUNCTION_2_0();
  v6 = MEMORY[0x1C3B752C0](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return InCallControlsBaseCell.delegate.modify;
}

id InCallControlsTitleCell.__allocating_init(frame:)()
{
  Class v0;
  id v1;
  double v2;
  id v3;
  SEL v4;

  OUTLINED_FUNCTION_17_7();
  v1 = objc_allocWithZone(v0);
  v2 = OUTLINED_FUNCTION_15_0();
  return objc_msgSend(v3, v4, v2);
}

id InCallControlsTitleCell.init(frame:)()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  char *v4;
  double v5;
  objc_super *v6;
  SEL v7;
  id v8;

  OUTLINED_FUNCTION_17_7();
  v1 = OUTLINED_FUNCTION_15_6();
  OUTLINED_FUNCTION_18_1(OBJC_IVAR____TtC15ConversationKit23InCallControlsTitleCell_delegate);
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit23InCallControlsTitleCell_avatarHeaderViewController] = 0;
  v2 = OBJC_IVAR____TtC15ConversationKit23InCallControlsTitleCell_avatarHeaderVCWrapper;
  v3 = objc_allocWithZone((Class)CNKGroupIdentityHeaderSNaPWrapper);
  v4 = v0;
  *(_QWORD *)&v0[v2] = OUTLINED_FUNCTION_9((uint64_t)v4, sel_init);

  v5 = OUTLINED_FUNCTION_15_0();
  v8 = objc_msgSendSuper2(v6, v7, v5, v4, v1);
  objc_msgSend(v8, sel_setAutomaticallyUpdatesBackgroundConfiguration_, 0);
  return v8;
}

id InCallControlsTitleCell.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void InCallControlsTitleCell.init(coder:)()
{
  char *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_18_1(OBJC_IVAR____TtC15ConversationKit23InCallControlsTitleCell_delegate);
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit23InCallControlsTitleCell_avatarHeaderViewController] = 0;
  v1 = OBJC_IVAR____TtC15ConversationKit23InCallControlsTitleCell_avatarHeaderVCWrapper;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)CNKGroupIdentityHeaderSNaPWrapper), sel_init);

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void InCallControlsTitleCell.configure(with:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIBackgroundConfiguration?);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UIBackgroundConfiguration.listPlainCell()();
  v7 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
  UIBackgroundConfiguration.backgroundColor.setter();
  v8 = type metadata accessor for UIBackgroundConfiguration();
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v8);
  MEMORY[0x1C3B7370C](v6);
  v9 = *a1;
  v10 = a1[1];
  v12 = a1[5];
  v11 = a1[6];
  v13 = a1[4];
  v14 = objc_allocWithZone(MEMORY[0x1E0C974F0]);
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_25_2();
  outlined copy of Data?(v12, v11);
  v15 = @nonobjc CNGroupIdentity.init(groupWithName:photo:contacts:)(v9, v10, v12, v11);
  v16 = v15;
  v17 = *(void **)(v2 + OBJC_IVAR____TtC15ConversationKit23InCallControlsTitleCell_avatarHeaderViewController);
  if (!v17)
  {
    InCallControlsTitleCell.setupAvatarViewController(for:)(v15);
LABEL_12:

    return;
  }
  v18 = v17;
  objc_msgSend(v18, sel_groupIdentityDidUpdate_, v16);
  if (one-time initialization token for shared != -1)
    swift_once();
  if (((*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)static Features.shared) + 0xB8))() & 1) == 0)
    goto LABEL_16;
  if (!(v13 >> 62))
  {
    if (*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10) == 1)
    {
      OUTLINED_FUNCTION_25_2();
LABEL_8:
      specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v13 & 0xC000000000000001) == 0, v13);
      if ((v13 & 0xC000000000000001) != 0)
        v19 = (id)MEMORY[0x1C3B73D18](0, v13);
      else
        v19 = *(id *)(v13 + 32);
      v20 = v19;
      OUTLINED_FUNCTION_53();
      v21 = *(void **)(v2 + OBJC_IVAR____TtC15ConversationKit23InCallControlsTitleCell_avatarHeaderVCWrapper);
      v22 = v20;
      objc_msgSend(v21, sel_configureGroupIdentityHeaderViewController_contact_, v18, v22);

      goto LABEL_12;
    }
    goto LABEL_16;
  }
  OUTLINED_FUNCTION_25_2();
  v23 = _CocoaArrayWrapper.endIndex.getter();
  OUTLINED_FUNCTION_53();
  if (v23 != 1)
  {
LABEL_16:

    return;
  }
  OUTLINED_FUNCTION_25_2();
  if (_CocoaArrayWrapper.endIndex.getter())
    goto LABEL_8;

  OUTLINED_FUNCTION_53();
}

void InCallControlsTitleCell.setupAvatarViewController(for:)(void *a1)
{
  char *v1;
  void *v2;
  void *v3;
  char *v4;
  id v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  id v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  id v31;
  id v32;
  id v33;
  id v34;
  Class isa;
  Class v36;

  v4 = v1;
  _sSo8NSObjectCMaTm_0(0, &lazy cache variable for type metadata for CNGroupIdentityInlineActionsViewConfiguration);
  v6 = CNGroupIdentityInlineActionsViewConfiguration.__allocating_init(defaultActionItems:displaysUnavailableActionTypes:)(MEMORY[0x1E0DEE9D8], 0);
  _sSo8NSObjectCMaTm_0(0, &lazy cache variable for type metadata for CNGroupIdentityHeaderViewController);
  v7 = a1;
  v8 = v6;
  v9 = CNGroupIdentityHeaderViewController.__allocating_init(groupIdentity:actionsViewConfiguration:)(v7, v6);
  v10 = *(void **)&v4[OBJC_IVAR____TtC15ConversationKit23InCallControlsTitleCell_avatarHeaderViewController];
  *(_QWORD *)&v4[OBJC_IVAR____TtC15ConversationKit23InCallControlsTitleCell_avatarHeaderViewController] = v9;
  v36 = (Class)v9;

  v11 = -[objc_class view](v36, sel_view);
  if (v11)
  {
    v12 = v11;
    v13 = objc_msgSend(v4, sel_contentView);
    objc_msgSend(v13, sel_addSubview_, v12);

    objc_msgSend(v12, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v14 = (void *)objc_opt_self();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1BD644140;
    v16 = OUTLINED_FUNCTION_9(v15, sel_topAnchor);
    v17 = OUTLINED_FUNCTION_0_62();
    v18 = objc_msgSend(v17, sel_topAnchor);
    OUTLINED_FUNCTION_6_41();
    v19 = OUTLINED_FUNCTION_1_50();
    OUTLINED_FUNCTION_40_1();

    *(_QWORD *)(v15 + 32) = v17;
    v21 = OUTLINED_FUNCTION_9(v20, sel_bottomAnchor);
    v22 = OUTLINED_FUNCTION_0_62();
    v23 = objc_msgSend(v22, sel_bottomAnchor);
    OUTLINED_FUNCTION_6_41();
    v24 = OUTLINED_FUNCTION_1_50();
    OUTLINED_FUNCTION_40_1();

    *(_QWORD *)(v15 + 40) = v22;
    v26 = OUTLINED_FUNCTION_9(v25, sel_leadingAnchor);
    v27 = OUTLINED_FUNCTION_0_62();
    v28 = objc_msgSend(v27, sel_leadingAnchor);
    OUTLINED_FUNCTION_6_41();
    v29 = OUTLINED_FUNCTION_1_50();
    OUTLINED_FUNCTION_40_1();

    *(_QWORD *)(v15 + 48) = v27;
    v31 = OUTLINED_FUNCTION_9(v30, sel_trailingAnchor);
    v32 = OUTLINED_FUNCTION_0_62();
    v33 = objc_msgSend(v32, sel_trailingAnchor);

    v34 = objc_msgSend(v2, sel_constraintEqualToAnchor_, v33);
    *(_QWORD *)(v15 + 56) = v34;
    specialized Array._endMutation()();
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    objc_msgSend(v14, sel_activateConstraints_, isa);

    v8 = v12;
    v36 = isa;
  }

}

id CNGroupIdentityInlineActionsViewConfiguration.__allocating_init(defaultActionItems:displaysUnavailableActionTypes:)(uint64_t a1, char a2)
{
  id v3;
  Class isa;
  id v5;

  v3 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  _sSo8NSObjectCMaTm_0(0, &lazy cache variable for type metadata for CNGroupIdentityActionItem);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v3, sel_initWithDefaultActionItems_displaysUnavailableActionTypes_, isa, a2 & 1);

  return v5;
}

id CNGroupIdentityHeaderViewController.__allocating_init(groupIdentity:actionsViewConfiguration:)(void *a1, void *a2)
{
  id v4;

  v4 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithGroupIdentity_actionsViewConfiguration_, a1, a2);

  return v4;
}

UICollectionViewLayoutAttributes __swiftcall InCallControlsTitleCell.preferredLayoutAttributesFitting(_:)(UICollectionViewLayoutAttributes a1)
{
  char *v1;
  id v3;
  void *v4;
  id v5;
  id v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  objc_super v16;
  CGRect v17;

  v16.receiver = v1;
  v16.super_class = (Class)OUTLINED_FUNCTION_15_6();
  v3 = objc_msgSendSuper2(&v16, sel_preferredLayoutAttributesFittingAttributes_, a1.super.isa);
  v4 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKit23InCallControlsTitleCell_avatarHeaderViewController];
  if (v4)
  {
    v5 = v4;
    v6 = OUTLINED_FUNCTION_9((uint64_t)v5, sel_contentView);
    objc_msgSend(v6, sel_bounds);
    v8 = v7;
    v10 = v9;
    v12 = v11;
    v14 = v13;

    v17.origin.x = v8;
    v17.origin.y = v10;
    v17.size.width = v12;
    v17.size.height = v14;
    objc_msgSend(v5, sel_sizeForLayoutInContainerSize_, CGRectGetWidth(v17), 1.79769313e308);
    objc_msgSend(v3, sel_bounds);
    objc_msgSend(v3, sel_setBounds_);

  }
  return (UICollectionViewLayoutAttributes)v3;
}

id InCallControlsTitleCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)OUTLINED_FUNCTION_15_6();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for InCallControlsTitleCell()
{
  return objc_opt_self();
}

id ClarityUIKeypadView.init(didEnterNumberAction:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id result;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CGSize?);
  State.init(wrappedValue:)();
  static ClarityUIMetrics.standardSpacing.getter();
  v7 = v6;
  v8 = closure #1 in variable initialization expression of ClarityUIKeypadView.numberPadStrings();
  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DBD130]), sel_init);
  *(_QWORD *)a3 = v10;
  *(_QWORD *)(a3 + 8) = v11;
  *(_BYTE *)(a3 + 16) = v12;
  *(_QWORD *)(a3 + 24) = v13;
  *(_QWORD *)(a3 + 32) = 0x4020000000000000;
  *(_QWORD *)(a3 + 40) = v7;
  *(_QWORD *)(a3 + 48) = v8;
  *(_QWORD *)(a3 + 56) = result;
  *(_QWORD *)(a3 + 64) = a1;
  *(_QWORD *)(a3 + 72) = a2;
  return result;
}

uint64_t ClarityUIKeypadView.body.getter@<X0>(uint64_t (**a1)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  _BYTE v12[80];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<LayoutDirection>);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_2_20();
  v4 = type metadata accessor for LayoutDirection();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  OUTLINED_FUNCTION_7_54(v12);
  v8 = swift_allocObject();
  OUTLINED_FUNCTION_7_54((void *)(v8 + 16));
  KeyPath = swift_getKeyPath();
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0CD9A90], v4);
  (*(void (**)(char *, _BYTE *, uint64_t))(v5 + 16))((char *)v1 + *(int *)(v3 + 28), v7, v4);
  *v1 = KeyPath;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Grid<ForEach<[ArraySlice<TPNumberPadCharacter>], ArraySlice<TPNumberPadCharacter>, GridRow<ForEach<ArraySlice<TPNumberPadCharacter>, TPNumberPadCharacter, <<opaque return type of View.buttonStyle<A>(_:)>>.0>>>>, _ScaleEffect>, _OverlayModifier<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<CalculatedSizePreferenceKey>>>>>, _FrameLayout>, _PreferenceActionModifier<CalculatedSizePreferenceKey>>>, _EnvironmentKeyWritingModifier<LayoutDirection>>);
  outlined init with copy of VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>((uint64_t)v1, (uint64_t)a1 + *(int *)(v10 + 36), &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<LayoutDirection>);
  *a1 = partial apply for closure #1 in ClarityUIKeypadView.body.getter;
  a1[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v8;
  outlined retain of ClarityUIKeypadView((uint64_t)v12);
  swift_retain();
  OUTLINED_FUNCTION_10_45();
  (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  return swift_release();
}

uint64_t closure #1 in ClarityUIKeypadView.body.getter@<X0>(uint64_t a1@<X0>, double *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  double v15;
  double v16;
  void *v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)@<X0>(uint64_t@<X8>);
  uint64_t (*v40)@<X0>(uint64_t@<X8>);
  uint64_t v41;
  uint64_t (**v42)@<X0>(uint64_t@<X8>);
  uint64_t v43;
  _OWORD *v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (**v48)();
  _QWORD v50[2];
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  double v60;
  double v61;
  char v62;
  _OWORD __dst[5];

  v59 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Grid<ForEach<[ArraySlice<TPNumberPadCharacter>], ArraySlice<TPNumberPadCharacter>, GridRow<ForEach<ArraySlice<TPNumberPadCharacter>, TPNumberPadCharacter, <<opaque return type of View.buttonStyle<A>(_:)>>.0>>>>);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Grid<ForEach<[ArraySlice<TPNumberPadCharacter>], ArraySlice<TPNumberPadCharacter>, GridRow<ForEach<ArraySlice<TPNumberPadCharacter>, TPNumberPadCharacter, <<opaque return type of View.buttonStyle<A>(_:)>>.0>>>>, _ScaleEffect>);
  MEMORY[0x1E0C80A78](v51);
  v53 = (uint64_t)v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Grid<ForEach<[ArraySlice<TPNumberPadCharacter>], ArraySlice<TPNumberPadCharacter>, GridRow<ForEach<ArraySlice<TPNumberPadCharacter>, TPNumberPadCharacter, <<opaque return type of View.buttonStyle<A>(_:)>>.0>>>>, _ScaleEffect>, _OverlayModifier<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<CalculatedSizePreferenceKey>>>>>);
  MEMORY[0x1E0C80A78](v52);
  v55 = (uint64_t)v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Grid<ForEach<[ArraySlice<TPNumberPadCharacter>], ArraySlice<TPNumberPadCharacter>, GridRow<ForEach<ArraySlice<TPNumberPadCharacter>, TPNumberPadCharacter, <<opaque return type of View.buttonStyle<A>(_:)>>.0>>>>, _ScaleEffect>, _OverlayModifier<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<CalculatedSizePreferenceKey>>>>>, _FrameLayout>);
  MEMORY[0x1E0C80A78](v54);
  v58 = (uint64_t)v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Grid<ForEach<[ArraySlice<TPNumberPadCharacter>], ArraySlice<TPNumberPadCharacter>, GridRow<ForEach<ArraySlice<TPNumberPadCharacter>, TPNumberPadCharacter, <<opaque return type of View.buttonStyle<A>(_:)>>.0>>>>, _ScaleEffect>, _OverlayModifier<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<CalculatedSizePreferenceKey>>>>>, _FrameLayout>, _PreferenceActionModifier<CalculatedSizePreferenceKey>>);
  MEMORY[0x1E0C80A78](v56);
  v57 = (uint64_t)v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  memcpy(__dst, a2, sizeof(__dst));
  v50[1] = a1;
  ClarityUIKeypadView.horizontalSpacingBetweenButtons(_:)();
  v13 = v12;
  v14 = a2[4];
  GeometryProxy.size.getter();
  v16 = v15;
  v17 = (void *)objc_opt_self();
  objc_msgSend(v17, sel_outerCircleDiameter);
  v19 = (v16 + v18 * -4.0) / 3.0;
  if (v19 > v14)
    v14 = v19;
  objc_msgSend(v17, sel_outerCircleDiameter);
  v21 = v20 / 3.0;
  if (v21 >= v14)
    v22 = v14;
  else
    v22 = v21;
  *(_QWORD *)v7 = static Alignment.center.getter();
  *((_QWORD *)v7 + 1) = v23;
  *((_QWORD *)v7 + 2) = v13;
  v7[24] = 0;
  *((double *)v7 + 4) = v22;
  v7[40] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<GridLayout, ForEach<[ArraySlice<TPNumberPadCharacter>], ArraySlice<TPNumberPadCharacter>, GridRow<ForEach<ArraySlice<TPNumberPadCharacter>, TPNumberPadCharacter, <<opaque return type of View.buttonStyle<A>(_:)>>.0>>>>);
  *(_QWORD *)&__dst[0] = ClarityUIKeypadView.numberPadCharacters.getter();
  swift_getKeyPath();
  v24 = swift_allocObject();
  memcpy((void *)(v24 + 16), a2, 0x50uLL);
  outlined retain of ClarityUIKeypadView((uint64_t)a2);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [ArraySlice<TPNumberPadCharacter>]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GridRow<ForEach<ArraySlice<TPNumberPadCharacter>, TPNumberPadCharacter, <<opaque return type of View.buttonStyle<A>(_:)>>.0>>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type [ArraySlice<TPNumberPadCharacter>] and conformance [A], &demangling cache variable for type metadata for [ArraySlice<TPNumberPadCharacter>]);
  lazy protocol witness table accessor for type ArraySlice<TPNumberPadCharacter> and conformance <A> ArraySlice<A>();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type GridRow<ForEach<ArraySlice<TPNumberPadCharacter>, TPNumberPadCharacter, <<opaque return type of View.buttonStyle<A>(_:)>>.0>> and conformance GridRow<A>, &demangling cache variable for type metadata for GridRow<ForEach<ArraySlice<TPNumberPadCharacter>, TPNumberPadCharacter, <<opaque return type of View.buttonStyle<A>(_:)>>.0>>);
  ForEach<>.init(_:id:content:)();
  v25 = *((_OWORD *)a2 + 1);
  __dst[0] = *(_OWORD *)a2;
  __dst[1] = v25;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<CGSize?>);
  State.wrappedValue.getter();
  v26 = 1.0;
  if ((v62 & 1) == 0)
  {
    v27 = v60;
    v28 = v61;
    GeometryProxy.size.getter();
    v30 = v29 / v27;
    GeometryProxy.size.getter();
    if (v31 / v28 >= v30)
      v26 = v30;
    else
      v26 = v31 / v28;
    if (v26 >= 1.0)
      v26 = 1.0;
  }
  static UnitPoint.center.getter();
  v33 = v32;
  v35 = v34;
  v36 = v53;
  outlined init with copy of VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>((uint64_t)v7, v53, &demangling cache variable for type metadata for Grid<ForEach<[ArraySlice<TPNumberPadCharacter>], ArraySlice<TPNumberPadCharacter>, GridRow<ForEach<ArraySlice<TPNumberPadCharacter>, TPNumberPadCharacter, <<opaque return type of View.buttonStyle<A>(_:)>>.0>>>>);
  v37 = v36 + *(int *)(v51 + 36);
  *(double *)v37 = v26;
  *(double *)(v37 + 8) = v26;
  *(_QWORD *)(v37 + 16) = v33;
  *(_QWORD *)(v37 + 24) = v35;
  outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v7, &demangling cache variable for type metadata for Grid<ForEach<[ArraySlice<TPNumberPadCharacter>], ArraySlice<TPNumberPadCharacter>, GridRow<ForEach<ArraySlice<TPNumberPadCharacter>, TPNumberPadCharacter, <<opaque return type of View.buttonStyle<A>(_:)>>.0>>>>);
  v38 = static Alignment.center.getter();
  v40 = v39;
  v41 = v55;
  outlined init with copy of VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>(v36, v55, &demangling cache variable for type metadata for ModifiedContent<Grid<ForEach<[ArraySlice<TPNumberPadCharacter>], ArraySlice<TPNumberPadCharacter>, GridRow<ForEach<ArraySlice<TPNumberPadCharacter>, TPNumberPadCharacter, <<opaque return type of View.buttonStyle<A>(_:)>>.0>>>>, _ScaleEffect>);
  v42 = (uint64_t (**)@<X0>(uint64_t@<X8>))(v41 + *(int *)(v52 + 36));
  *v42 = closure #1 in closure #2 in closure #1 in ClarityUIKeypadView.body.getter;
  v42[1] = 0;
  v42[2] = (uint64_t (*)@<X0>(uint64_t@<X8>))v38;
  v42[3] = v40;
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v36, &demangling cache variable for type metadata for ModifiedContent<Grid<ForEach<[ArraySlice<TPNumberPadCharacter>], ArraySlice<TPNumberPadCharacter>, GridRow<ForEach<ArraySlice<TPNumberPadCharacter>, TPNumberPadCharacter, <<opaque return type of View.buttonStyle<A>(_:)>>.0>>>>, _ScaleEffect>);
  GeometryProxy.size.getter();
  GeometryProxy.size.getter();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  v43 = v58;
  outlined init with copy of VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>(v41, v58, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Grid<ForEach<[ArraySlice<TPNumberPadCharacter>], ArraySlice<TPNumberPadCharacter>, GridRow<ForEach<ArraySlice<TPNumberPadCharacter>, TPNumberPadCharacter, <<opaque return type of View.buttonStyle<A>(_:)>>.0>>>>, _ScaleEffect>, _OverlayModifier<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<CalculatedSizePreferenceKey>>>>>);
  v44 = (_OWORD *)(v43 + *(int *)(v54 + 36));
  v45 = __dst[1];
  *v44 = __dst[0];
  v44[1] = v45;
  v44[2] = __dst[2];
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v41, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Grid<ForEach<[ArraySlice<TPNumberPadCharacter>], ArraySlice<TPNumberPadCharacter>, GridRow<ForEach<ArraySlice<TPNumberPadCharacter>, TPNumberPadCharacter, <<opaque return type of View.buttonStyle<A>(_:)>>.0>>>>, _ScaleEffect>, _OverlayModifier<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<CalculatedSizePreferenceKey>>>>>);
  v46 = swift_allocObject();
  memcpy((void *)(v46 + 16), a2, 0x50uLL);
  v47 = v57;
  outlined init with copy of VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>(v43, v57, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Grid<ForEach<[ArraySlice<TPNumberPadCharacter>], ArraySlice<TPNumberPadCharacter>, GridRow<ForEach<ArraySlice<TPNumberPadCharacter>, TPNumberPadCharacter, <<opaque return type of View.buttonStyle<A>(_:)>>.0>>>>, _ScaleEffect>, _OverlayModifier<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<CalculatedSizePreferenceKey>>>>>, _FrameLayout>);
  v48 = (uint64_t (**)())(v47 + *(int *)(v56 + 36));
  *v48 = partial apply for closure #3 in closure #1 in ClarityUIKeypadView.body.getter;
  v48[1] = (uint64_t (*)())v46;
  outlined retain of ClarityUIKeypadView((uint64_t)a2);
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v43, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Grid<ForEach<[ArraySlice<TPNumberPadCharacter>], ArraySlice<TPNumberPadCharacter>, GridRow<ForEach<ArraySlice<TPNumberPadCharacter>, TPNumberPadCharacter, <<opaque return type of View.buttonStyle<A>(_:)>>.0>>>>, _ScaleEffect>, _OverlayModifier<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<CalculatedSizePreferenceKey>>>>>, _FrameLayout>);
  return outlined init with take of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Grid<ForEach<[ArraySlice<TPNumberPadCharacter>], ArraySlice<TPNumberPadCharacter>, GridRow<ForEach<ArraySlice<TPNumberPadCharacter>, TPNumberPadCharacter, <<opaque return type of View.buttonStyle<A>(_:)>>.0>>>>, _ScaleEffect>, _OverlayModifier<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<CalculatedSizePreferenceKey>>>>>, _FrameLayout>, _PreferenceActionModifier<CalculatedSizePreferenceKey>>(v47, v59);
}

id ClarityUIKeypadView.horizontalSpacingBetweenButtons(_:)()
{
  uint64_t v0;
  double v1;
  double v2;
  double v3;
  void *v4;
  double v5;

  v1 = *(double *)(v0 + 40);
  GeometryProxy.size.getter();
  v3 = v2;
  v4 = (void *)objc_opt_self();
  objc_msgSend(v4, sel_outerCircleDiameter);
  if ((v3 + v5 * -3.0) * 0.25 < v1)
  {
    GeometryProxy.size.getter();
    objc_msgSend(v4, sel_outerCircleDiameter);
  }
  return objc_msgSend(v4, sel_outerCircleDiameter);
}

uint64_t ClarityUIKeypadView.numberPadCharacters.getter()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  Swift::String v27;
  Swift::String v28;
  uint64_t v29;
  Swift::String v30;
  id v31;
  _BYTE v32[32];
  _QWORD v33[4];

  v1 = (void *)objc_opt_self();
  v2 = outlined bridged method (pb) of @objc static TPDialerNumberPad.dialerNumberPadFullCharacters()(v1);
  if (!v2)
  {
    __break(1u);
LABEL_15:
    outlined init with copy of Any((uint64_t)v33, (uint64_t)v32);
    _StringGuts.grow(_:)(52);
    v27._object = (void *)0x80000001BD675390;
    v27._countAndFlagsBits = 0xD000000000000032;
    String.append(_:)(v27);
    _print_unlocked<A, B>(_:_:)();
    goto LABEL_16;
  }
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v4 = v2 + 32;
    swift_bridgeObjectRetain();
    v0 = MEMORY[0x1E0DEE9D8];
    do
    {
      outlined init with copy of Any(v4, (uint64_t)v33);
      outlined init with copy of Any((uint64_t)v33, (uint64_t)v32);
      type metadata accessor for NSNumber();
      if ((swift_dynamicCast() & 1) == 0)
        goto LABEL_15;
      v5 = objc_msgSend(v31, sel_integerValue);

      __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v0 = v7;
      }
      v6 = *(_QWORD *)(v0 + 16);
      if (v6 >= *(_QWORD *)(v0 + 24) >> 1)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v0 = v8;
      }
      *(_QWORD *)(v0 + 16) = v6 + 1;
      *(_QWORD *)(v0 + 8 * v6 + 32) = v5;
      v4 += 32;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
    v0 = MEMORY[0x1E0DEE9D8];
  }
  if (*(_QWORD *)(v0 + 16) != 12)
  {
    while (1)
    {
      v33[0] = 0;
      v33[1] = 0xE000000000000000;
      _StringGuts.grow(_:)(53);
      v28._countAndFlagsBits = 0xD000000000000033;
      v28._object = (void *)0x80000001BD6753D0;
      String.append(_:)(v28);
      type metadata accessor for TPNumberPadCharacter(0);
      v30._countAndFlagsBits = MEMORY[0x1C3B7304C](v0, v29);
      String.append(_:)(v30);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_16:
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ArraySlice<TPNumberPadCharacter>>);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1BD645390;
  specialized MutableCollection.subscript.getter(0, 2, v0);
  *(_QWORD *)(v9 + 32) = v10;
  *(_QWORD *)(v9 + 40) = v11;
  *(_QWORD *)(v9 + 48) = v12;
  *(_QWORD *)(v9 + 56) = v13;
  specialized MutableCollection.subscript.getter(3uLL, 5, v0);
  *(_QWORD *)(v9 + 64) = v14;
  *(_QWORD *)(v9 + 72) = v15;
  *(_QWORD *)(v9 + 80) = v16;
  *(_QWORD *)(v9 + 88) = v17;
  specialized MutableCollection.subscript.getter(6uLL, 8, v0);
  *(_QWORD *)(v9 + 96) = v18;
  *(_QWORD *)(v9 + 104) = v19;
  *(_QWORD *)(v9 + 112) = v20;
  *(_QWORD *)(v9 + 120) = v21;
  specialized MutableCollection.subscript.getter(9uLL, 11, v0);
  *(_QWORD *)(v9 + 128) = v22;
  *(_QWORD *)(v9 + 136) = v23;
  *(_QWORD *)(v9 + 144) = v24;
  *(_QWORD *)(v9 + 152) = v25;
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t closure #1 in closure #1 in closure #1 in ClarityUIKeypadView.body.getter@<X0>(const void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;

  *(_QWORD *)a2 = 0;
  *(_BYTE *)(a2 + 8) = 1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GridRow<ForEach<ArraySlice<TPNumberPadCharacter>, TPNumberPadCharacter, <<opaque return type of View.buttonStyle<A>(_:)>>.0>>);
  swift_getKeyPath();
  v3 = swift_allocObject();
  memcpy((void *)(v3 + 16), a1, 0x50uLL);
  swift_unknownObjectRetain();
  outlined retain of ClarityUIKeypadView((uint64_t)a1);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ArraySlice<TPNumberPadCharacter>);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.buttonStyle<A>(_:)>>.0);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type ArraySlice<TPNumberPadCharacter> and conformance ArraySlice<A>, &demangling cache variable for type metadata for ArraySlice<TPNumberPadCharacter>);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type TPNumberPadCharacter and conformance TPNumberPadCharacter, type metadata accessor for TPNumberPadCharacter);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.accessibilityElement(children:)>>.0, AccessibilityAttachmentModifier>);
  lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.accessibilityElement(children:)>>.0, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>();
  lazy protocol witness table accessor for type KeypadButtonStyle and conformance KeypadButtonStyle();
  swift_getOpaqueTypeConformance2();
  return ForEach<>.init(_:id:content:)();
}

void closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in ClarityUIKeypadView.body.getter(unint64_t *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id (*v23)(char);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  id (*v35)(char);
  uint64_t v36;

  v27 = a3;
  v5 = type metadata accessor for AccessibilityChildBehavior();
  v29 = *(_QWORD *)(v5 - 8);
  v30 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<ModifiedContent<Image, _FrameLayout>>);
  v28 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.accessibilityElement(children:)>>.0);
  v25 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.accessibilityElement(children:)>>.0, AccessibilityAttachmentModifier>);
  MEMORY[0x1E0C80A78](v26);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *a1;
  v17 = swift_allocObject();
  memcpy((void *)(v17 + 16), a2, 0x50uLL);
  *(_QWORD *)(v17 + 96) = v16;
  v31 = v16;
  v32 = a2;
  outlined retain of ClarityUIKeypadView((uint64_t)a2);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Image, _FrameLayout>);
  lazy protocol witness table accessor for type ModifiedContent<Image, _FrameLayout> and conformance <> ModifiedContent<A, B>();
  Button.init(action:label:)();
  static AccessibilityChildBehavior.ignore.getter();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Button<ModifiedContent<Image, _FrameLayout>> and conformance Button<A>, &demangling cache variable for type metadata for Button<ModifiedContent<Image, _FrameLayout>>);
  v19 = v18;
  View.accessibilityElement(children:)();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v7, v30);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v10, v8);
  if ((v16 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v20 = a2[6];
    if (v16 < *(_QWORD *)(v20 + 16))
    {
      v21 = v20 + 16 * v16;
      v23 = *(id (**)(char))(v21 + 32);
      v22 = *(_QWORD *)(v21 + 40);
      v35 = v23;
      v36 = v22;
      v33 = v8;
      v34 = v19;
      swift_getOpaqueTypeConformance2();
      lazy protocol witness table accessor for type String and conformance String();
      View.accessibilityLabel<A>(_:)();
      (*(void (**)(char *, uint64_t))(v25 + 8))(v13, v11);
      v24 = swift_allocObject();
      memcpy((void *)(v24 + 16), a2, 0x50uLL);
      *(_QWORD *)(v24 + 96) = v16;
      v35 = partial apply for closure #3 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in ClarityUIKeypadView.body.getter;
      v36 = v24;
      outlined retain of ClarityUIKeypadView((uint64_t)a2);
      lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.accessibilityElement(children:)>>.0, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>();
      lazy protocol witness table accessor for type KeypadButtonStyle and conformance KeypadButtonStyle();
      View.buttonStyle<A>(_:)();
      swift_release();
      outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v15, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.accessibilityElement(children:)>>.0, AccessibilityAttachmentModifier>);
      return;
    }
  }
  __break(1u);
}

id closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in ClarityUIKeypadView.body.getter(uint64_t a1, unint64_t a2)
{
  id result;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = objc_msgSend(*(id *)(a1 + 56), sel_playSoundForDialerCharacter_, a2);
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v5 = *(_QWORD *)(a1 + 48);
    if (*(_QWORD *)(v5 + 16) > a2)
    {
      v6 = *(void (**)(uint64_t, uint64_t))(a1 + 64);
      v7 = v5 + 16 * a2;
      v8 = *(_QWORD *)(v7 + 32);
      v9 = *(_QWORD *)(v7 + 40);
      swift_bridgeObjectRetain();
      v6(v8, v9);
      return (id)swift_bridgeObjectRelease();
    }
  }
  __break(1u);
  return result;
}

id closure #2 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in ClarityUIKeypadView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  id result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  __int128 v20;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Image.TemplateRenderingMode?);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (void *)objc_opt_self();
  result = objc_msgSend(v7, sel_imageForCharacter_highlighted_whiteVersion_, a1, 0, 0);
  if (result)
  {
    Image.init(uiImage:)();
    v9 = *MEMORY[0x1E0CDF770];
    v10 = type metadata accessor for Image.TemplateRenderingMode();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v6, v9, v10);
    __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v10);
    v11 = Image.renderingMode(_:)();
    swift_release();
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v6, &demangling cache variable for type metadata for Image.TemplateRenderingMode?);
    objc_msgSend(v7, sel_outerCircleDiameter);
    objc_msgSend(v7, sel_outerCircleDiameter);
    static Alignment.center.getter();
    result = (id)_FrameLayout.init(width:height:alignment:)();
    v12 = v16;
    v13 = v17;
    v14 = v18;
    v15 = v19;
    *(_QWORD *)a2 = v11;
    *(_QWORD *)(a2 + 8) = v12;
    *(_BYTE *)(a2 + 16) = v13;
    *(_QWORD *)(a2 + 24) = v14;
    *(_BYTE *)(a2 + 32) = v15;
    *(_OWORD *)(a2 + 40) = v20;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t closure #1 in closure #2 in closure #1 in ClarityUIKeypadView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v2 = static Color.clear.getter();
  result = GeometryProxy.size.getter();
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = 0;
  return result;
}

uint64_t closure #3 in closure #1 in ClarityUIKeypadView.body.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<CGSize?>);
  return State.wrappedValue.setter();
}

void key path getter for EnvironmentValues.layoutDirection : EnvironmentValues()
{
  EnvironmentValues.layoutDirection.getter();
  OUTLINED_FUNCTION_0();
}

void key path setter for EnvironmentValues.layoutDirection : EnvironmentValues(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = type metadata accessor for LayoutDirection();
  MEMORY[0x1E0C80A78](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  EnvironmentValues.layoutDirection.setter();
  OUTLINED_FUNCTION_18();
}

uint64_t closure #1 in variable initialization expression of ClarityUIKeypadView.numberPadStrings()
{
  uint64_t inited;
  __CFString *v1;
  __CFString *v2;
  __CFString *v3;
  __CFString *v4;
  __CFString *v5;
  __CFString *v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  __CFString *v11;
  __CFString *v12;
  __CFString *v13;
  __CFString *v14;
  __CFString *v15;
  __CFString *v16;
  __CFString *v17;
  __CFString *v18;
  __CFString *v19;
  __CFString *v20;
  __CFString *v21;
  __CFString *v22;
  __CFString *v23;
  __CFString *v24;
  uint64_t v25;
  uint64_t i;
  void *v27;
  id v28;
  uint64_t v30;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<NSString?>);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BD64B2D0;
  *(_QWORD *)(inited + 32) = CFSTR("1");
  *(_QWORD *)(inited + 40) = CFSTR("2");
  *(_QWORD *)(inited + 48) = CFSTR("3");
  *(_QWORD *)(inited + 56) = CFSTR("4");
  *(_QWORD *)(inited + 64) = CFSTR("5");
  *(_QWORD *)(inited + 72) = CFSTR("6");
  *(_QWORD *)(inited + 80) = CFSTR("7");
  *(_QWORD *)(inited + 88) = CFSTR("8");
  *(_QWORD *)(inited + 96) = CFSTR("9");
  *(_QWORD *)(inited + 104) = CFSTR("*");
  *(_QWORD *)(inited + 112) = CFSTR("0");
  *(_QWORD *)(inited + 120) = CFSTR("#");
  v30 = inited;
  specialized Array._endMutation()();
  v1 = CFSTR("1");
  v2 = CFSTR("2");
  v3 = CFSTR("3");
  v4 = CFSTR("4");
  v5 = CFSTR("5");
  v6 = CFSTR("6");
  v7 = CFSTR("7");
  v8 = CFSTR("8");
  v9 = CFSTR("9");
  v10 = CFSTR("*");
  v11 = CFSTR("0");
  v12 = CFSTR("#");
  v13 = CFSTR("1");
  v14 = CFSTR("2");
  v15 = CFSTR("3");
  v16 = CFSTR("4");
  v17 = CFSTR("5");
  v18 = CFSTR("6");
  v19 = CFSTR("7");
  v20 = CFSTR("8");
  v21 = CFSTR("9");
  v22 = CFSTR("*");
  v23 = CFSTR("0");
  v24 = CFSTR("#");
  v25 = MEMORY[0x1E0DEE9D8];
  for (i = 32; i != 128; i += 8)
  {
    v27 = *(void **)(v30 + i);
    if (v27)
    {
      v28 = v27;
      static String._conditionallyBridgeFromObjectiveC(_:result:)();

    }
  }
  swift_bridgeObjectRelease();

  return v25;
}

uint64_t partial apply for closure #1 in ClarityUIKeypadView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return closure #1 in ClarityUIKeypadView.body.getter(a1, (double *)(v2 + 16), a2);
}

void sub_1BD142AA4()
{
  EnvironmentValues.layoutDirection.getter();
  OUTLINED_FUNCTION_0();
}

uint64_t outlined retain of ClarityUIKeypadView(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 56);
  swift_retain();
  swift_bridgeObjectRetain();
  v3 = v2;
  swift_retain();
  return a1;
}

uint64_t key path getter for KeypadButtonStyle.onStateChanged : KeypadButtonStyle@<X0>(uint64_t *a1@<X0>, void (**a2)(unsigned __int8 *a1)@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *a1;
  v3 = a1[1];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  *a2 = partial apply for thunk for @escaping @callee_guaranteed (@unowned Bool) -> ();
  a2[1] = (void (*)(unsigned __int8 *))v5;
  return swift_retain();
}

uint64_t key path setter for KeypadButtonStyle.onStateChanged : KeypadButtonStyle(uint64_t *a1, void (**a2)(char a1))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  swift_retain();
  result = swift_release();
  *a2 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Bool) -> (@out ());
  a2[1] = (void (*)(char))v5;
  return result;
}

uint64_t KeypadButtonStyle.onStateChanged.getter(uint64_t a1)
{
  swift_retain();
  return a1;
}

void KeypadButtonStyle.onStateChanged.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  swift_release();
  *v2 = a1;
  v2[1] = a2;
  OUTLINED_FUNCTION_18();
}

uint64_t (*KeypadButtonStyle.onStateChanged.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void KeypadButtonStyle.makeBody(configuration:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeypadButtonStyleView<Color>);
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_2_20();
  v8 = type metadata accessor for ButtonStyleConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v3, a1, v8);
  v9 = static Color.clarityUIButtonBackground.getter();
  v10 = static Color.primary.getter();
  *(_QWORD *)(v3 + *(int *)(v7 + 36)) = v9;
  *(_QWORD *)(v3 + *(int *)(v7 + 40)) = v10;
  ButtonStyleConfiguration.isPressed.getter();
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a2;
  *(_QWORD *)(v11 + 24) = a3;
  OUTLINED_FUNCTION_5_48(&lazy protocol witness table cache variable for type KeypadButtonStyleView<Color> and conformance KeypadButtonStyleView<A>);
  swift_retain();
  View.onChange<A>(of:initial:_:)();
  swift_release();
  OUTLINED_FUNCTION_10_45();
}

uint64_t KeypadButtonStyleView.init(configuration:background:foregroundColor:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;

  v12 = type metadata accessor for ButtonStyleConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a6, a1, v12);
  v14 = type metadata accessor for KeypadButtonStyleView(0, a4, a5, v13);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(a6 + *(int *)(v14 + 36), a2, a4);
  *(_QWORD *)(a6 + *(int *)(v14 + 40)) = a3;
  return result;
}

void partial apply for closure #1 in KeypadButtonStyle.makeBody(configuration:)(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v2;

  (*(void (**)(_QWORD))(v2 + 16))(*a2);
  OUTLINED_FUNCTION_0();
}

uint64_t type metadata accessor for KeypadButtonStyleView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for KeypadButtonStyleView);
}

void protocol witness for ButtonStyle.makeBody(configuration:) in conformance KeypadButtonStyle(uint64_t a1)
{
  uint64_t *v1;

  KeypadButtonStyle.makeBody(configuration:)(a1, *v1, v1[1]);
}

uint64_t KeypadButtonStyleView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[6];
  _QWORD v39[2];
  _QWORD v40[2];
  _QWORD v41[3];

  v34 = a2;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for HStack<ButtonStyleConfiguration.Label>);
  v4 = *(_QWORD *)(a1 + 24);
  v33 = *(_QWORD *)(a1 + 16);
  v32 = v4;
  v5 = type metadata accessor for _BackgroundStyleModifier();
  v6 = type metadata accessor for ModifiedContent();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _OverlayModifier<Color>);
  OUTLINED_FUNCTION_9_11();
  v7 = type metadata accessor for ModifiedContent();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Color?>);
  OUTLINED_FUNCTION_9_11();
  v8 = type metadata accessor for ModifiedContent();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type HStack<ButtonStyleConfiguration.Label> and conformance HStack<A>, &demangling cache variable for type metadata for HStack<ButtonStyleConfiguration.Label>);
  v41[0] = v9;
  v41[1] = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDC6D0], v5);
  v10 = MEMORY[0x1E0CD9C20];
  v11 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v6, v41);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _OverlayModifier<Color> and conformance _OverlayModifier<A>, &demangling cache variable for type metadata for _OverlayModifier<Color>);
  v40[0] = v11;
  v40[1] = v12;
  v13 = MEMORY[0x1C3B750C8](v10, v7, v40);
  OUTLINED_FUNCTION_5_48(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>);
  v39[0] = v13;
  v39[1] = v14;
  v15 = MEMORY[0x1C3B750C8](v10, v8, v39);
  v16 = lazy protocol witness table accessor for type Circle and conformance Circle();
  v38[2] = v8;
  v38[3] = MEMORY[0x1E0CDFAD0];
  v38[4] = v15;
  v38[5] = v16;
  v17 = type metadata accessor for PlatterShadowedContent();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v31 - v19;
  v21 = type metadata accessor for ModifiedContent();
  v31 = *(_QWORD *)(v21 - 8);
  v22 = MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v31 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v26 = (char *)&v31 - v25;
  ButtonStyleConfiguration.isPressed.getter();
  v35 = v33;
  v36 = v32;
  v37 = v2;
  PlatterShadowedContent.init(shape:isPressed:content:)();
  ButtonStyleConfiguration.isPressed.getter();
  v27 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDC080], v17);
  static UnitPoint.center.getter();
  View.scaleEffect(_:anchor:)();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  v38[0] = v27;
  v38[1] = MEMORY[0x1E0CD8DA8];
  v28 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v21, v38);
  static ViewBuilder.buildExpression<A>(_:)(v24, v21, v28);
  v29 = *(void (**)(char *, uint64_t))(v31 + 8);
  v29(v24, v21);
  static ViewBuilder.buildBlock<A>(_:)((uint64_t)v26, v21, v34);
  return ((uint64_t (*)(char *, uint64_t))v29)(v26, v21);
}

unint64_t lazy protocol witness table accessor for type Circle and conformance Circle()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Circle and conformance Circle;
  if (!lazy protocol witness table cache variable for type Circle and conformance Circle)
  {
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDFAA0], MEMORY[0x1E0CDFAD0]);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Circle and conformance Circle);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Circle and conformance Circle;
  if (!lazy protocol witness table cache variable for type Circle and conformance Circle)
  {
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDFAB0], MEMORY[0x1E0CDFAD0]);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Circle and conformance Circle);
  }
  return result;
}

uint64_t closure #1 in KeypadButtonStyleView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  _QWORD v36[2];
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD v50[2];
  _QWORD v51[2];
  _QWORD v52[3];

  v46 = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HStack<ButtonStyleConfiguration.Label>);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = type metadata accessor for _BackgroundStyleModifier();
  v10 = type metadata accessor for ModifiedContent();
  v43 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v37 = (char *)v36 - v11;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _OverlayModifier<Color>);
  v12 = type metadata accessor for ModifiedContent();
  v13 = *(_QWORD *)(v12 - 8);
  v41 = v12;
  v44 = v13;
  MEMORY[0x1E0C80A78](v12);
  v38 = (char *)v36 - v14;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Color?>);
  v15 = type metadata accessor for ModifiedContent();
  v45 = *(_QWORD *)(v15 - 8);
  v16 = MEMORY[0x1E0C80A78](v15);
  v40 = (char *)v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v42 = (char *)v36 - v18;
  *(_QWORD *)v9 = static VerticalAlignment.center.getter();
  *((_QWORD *)v9 + 1) = 0;
  v9[16] = 1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_HStackLayout, ButtonStyleConfiguration.Label>);
  ButtonStyleConfiguration.label.getter();
  v36[1] = type metadata accessor for KeypadButtonStyleView(0, a2, a3, v19);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type HStack<ButtonStyleConfiguration.Label> and conformance HStack<A>, &demangling cache variable for type metadata for HStack<ButtonStyleConfiguration.Label>);
  v21 = v20;
  default argument 1 of View.background<A>(_:ignoresSafeAreaEdges:)(v7, a2, v20, a3);
  v22 = v37;
  View.background<A>(_:ignoresSafeAreaEdges:)();
  outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v9, &demangling cache variable for type metadata for HStack<ButtonStyleConfiguration.Label>);
  v47 = a2;
  v48 = a3;
  v49 = a1;
  v23 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDC6D0], v39);
  v52[0] = v21;
  v52[1] = v23;
  v24 = MEMORY[0x1E0CD9C20];
  v25 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v10, v52);
  default argument 2 of View.frame(width:height:alignment:)(v10, MEMORY[0x1E0CDF5D0], v25, MEMORY[0x1E0CDF5B0]);
  v26 = v38;
  View.overlay<A>(alignment:content:)();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v22, v10);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _OverlayModifier<Color> and conformance _OverlayModifier<A>, &demangling cache variable for type metadata for _OverlayModifier<Color>);
  v51[0] = v25;
  v51[1] = v27;
  v28 = v41;
  v29 = MEMORY[0x1C3B750C8](v24, v41, v51);
  v30 = v40;
  View.foregroundColor(_:)();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v26, v28);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Color?>);
  v50[0] = v29;
  v50[1] = v31;
  v32 = MEMORY[0x1C3B750C8](v24, v15, v50);
  v33 = (uint64_t)v42;
  static ViewBuilder.buildExpression<A>(_:)(v30, v15, v32);
  v34 = *(void (**)(char *, uint64_t))(v45 + 8);
  v34(v30, v15);
  static ViewBuilder.buildBlock<A>(_:)(v33, v15, v46);
  return ((uint64_t (*)(uint64_t, uint64_t))v34)(v33, v15);
}

uint64_t partial apply for closure #1 in KeypadButtonStyleView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return closure #1 in KeypadButtonStyleView.body.getter(v1[4], v1[2], v1[3], a1);
}

uint64_t associated type witness table accessor for View.Body : View in ClarityUIKeypadView()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for ButtonStyle.Body : View in KeypadButtonStyle()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for View.Body : View in KeypadButtonStyleView<A>()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t closure #2 in closure #1 in KeypadButtonStyleView.body.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  if ((ButtonStyleConfiguration.isPressed.getter() & 1) != 0)
    result = static Color.clarityUIPressedButtonOverlay.getter();
  else
    result = static Color.clear.getter();
  *a1 = result;
  return result;
}

uint64_t destroy for ClarityUIKeypadView(uint64_t a1)
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for ClarityUIKeypadView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;
  __int128 v6;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v3 = *(_QWORD *)(a2 + 72);
  v6 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 56) = v6;
  *(_QWORD *)(a1 + 72) = v3;
  swift_retain();
  swift_bridgeObjectRetain();
  v4 = (id)v6;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ClarityUIKeypadView(uint64_t a1, __int128 *a2)
{
  __int128 v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;

  v4 = *a2;
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  *(_OWORD *)a1 = v4;
  *(_QWORD *)(a1 + 24) = *((_QWORD *)a2 + 3);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
  *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
  *(_QWORD *)(a1 + 48) = *((_QWORD *)a2 + 6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = (void *)*((_QWORD *)a2 + 7);
  v6 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v5;
  v7 = v5;

  v8 = *((_QWORD *)a2 + 9);
  *(_QWORD *)(a1 + 64) = *((_QWORD *)a2 + 8);
  *(_QWORD *)(a1 + 72) = v8;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for ClarityUIKeypadView(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);

  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ClarityUIKeypadView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 80))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 48);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClarityUIKeypadView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 48) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ClarityUIKeypadView()
{
  return &type metadata for ClarityUIKeypadView;
}

_QWORD *initializeBufferWithCopyOfBuffer for KeypadButtonStyle(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for KeypadButtonStyle()
{
  return swift_release();
}

_QWORD *assignWithCopy for KeypadButtonStyle(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for KeypadButtonStyle(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for KeypadButtonStyle(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for KeypadButtonStyle(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for KeypadButtonStyle()
{
  return &type metadata for KeypadButtonStyle;
}

uint64_t type metadata completion function for KeypadButtonStyleView()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for ButtonStyleConfiguration();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for KeypadButtonStyleView(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  int v15;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;

  v6 = type metadata accessor for ButtonStyleConfiguration();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = v10;
  v12 = *(_QWORD *)(v7 + 64) + v10;
  v13 = *(_QWORD *)(v9 + 64) + 7;
  v14 = v10 | *(_DWORD *)(v7 + 80) & 0xF8;
  v15 = (*(_DWORD *)(v7 + 80) | v10) & 0x100000;
  if (v14 > 7 || v15 != 0 || ((v13 + (v12 & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + (((v14 | 7) + 16) & ~(unint64_t)(v14 | 7)));
  }
  else
  {
    v19 = ~v11;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
    v20 = ((unint64_t)a2 + v12) & v19;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))(((unint64_t)a1 + v12) & v19, v20, v8);
    *(_QWORD *)((v13 + (((unint64_t)a1 + v12) & v19)) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v13 + v20) & 0xFFFFFFFFFFFFF8);
  }
  swift_retain();
  return a1;
}

uint64_t destroy for KeypadButtonStyleView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for ButtonStyleConfiguration();
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((*(_QWORD *)(v5 + 64)
                                                                                            + a1
                                                                                            + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
  return swift_release();
}

uint64_t initializeWithCopy for KeypadButtonStyleView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = type metadata accessor for ButtonStyleConfiguration();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v8 + v10;
  v12 = (v11 + a1) & ~v10;
  v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v9 + 16))(v12, v13);
  *(_QWORD *)((*(_QWORD *)(v9 + 64) + 7 + v12) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v9 + 64) + 7 + v13) & 0xFFFFFFFFFFFFF8);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for KeypadButtonStyleView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = type metadata accessor for ButtonStyleConfiguration();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v8 + v10;
  v12 = (v11 + a1) & ~v10;
  v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v9 + 24))(v12, v13);
  *(_QWORD *)((*(_QWORD *)(v9 + 64) + 7 + v12) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v9 + 64) + 7 + v13) & 0xFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for KeypadButtonStyleView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = type metadata accessor for ButtonStyleConfiguration();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v8 + v10;
  v12 = (v11 + a1) & ~v10;
  v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v9 + 32))(v12, v13);
  *(_QWORD *)((*(_QWORD *)(v9 + 64) + 7 + v12) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v9 + 64) + 7 + v13) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t assignWithTake for KeypadButtonStyleView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = type metadata accessor for ButtonStyleConfiguration();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v8 + v10;
  v12 = (v11 + a1) & ~v10;
  v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v9 + 40))(v12, v13);
  *(_QWORD *)((*(_QWORD *)(v9 + 64) + 7 + v12) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v9 + 64) + 7 + v13) & 0xFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for KeypadButtonStyleView(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v22;
  unint64_t v23;

  v6 = type metadata accessor for ButtonStyleConfiguration();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = *(_QWORD *)(a3 + 16);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int *)(v10 + 84);
  if (v11 <= v8)
    v12 = *(_DWORD *)(v7 + 84);
  else
    v12 = *(_DWORD *)(v10 + 84);
  if (v12 <= 0x7FFFFFFF)
    v12 = 0x7FFFFFFF;
  if (!a2)
    return 0;
  v13 = v6;
  v14 = *(_QWORD *)(v7 + 64);
  v15 = *(unsigned __int8 *)(v10 + 80);
  v16 = v14 + v15;
  v17 = *(_QWORD *)(v10 + 64) + 7;
  if (v12 < a2)
  {
    if (((((v17 + (v16 & ~v15)) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v18 = 2;
    else
      v18 = a2 - v12 + 1;
    if (v18 >= 0x10000)
      v19 = 4;
    else
      v19 = 2;
    if (v18 < 0x100)
      v19 = 1;
    if (v18 >= 2)
      v20 = v19;
    else
      v20 = 0;
    __asm { BR              X0 }
  }
  if ((_DWORD)v8 == v12)
  {
    v22 = a1;
    v11 = v8;
    v9 = v13;
    return __swift_getEnumTagSinglePayload(v22, v11, v9);
  }
  v22 = (v16 + a1) & ~v15;
  if ((_DWORD)v11 == v12)
    return __swift_getEnumTagSinglePayload(v22, v11, v9);
  v23 = *(_QWORD *)((v17 + v22) & 0xFFFFFFFFFFFFF8);
  if (v23 >= 0xFFFFFFFF)
    LODWORD(v23) = -1;
  return (v23 + 1);
}

void storeEnumTagSinglePayload for KeypadButtonStyleView(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  size_t v11;
  unsigned int v12;
  int v13;
  int v14;
  unsigned int v15;

  v8 = *(_QWORD *)(type metadata accessor for ButtonStyleConfiguration() - 8);
  v9 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v9 + 84) <= *(_DWORD *)(v8 + 84))
    v10 = *(_DWORD *)(v8 + 84);
  else
    v10 = *(_DWORD *)(v9 + 84);
  if (v10 <= 0x7FFFFFFF)
    v10 = 0x7FFFFFFF;
  v11 = ((*(_QWORD *)(v9 + 64)
        + 7
        + ((*(_QWORD *)(v8 + 64) + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  if (v10 >= a3)
  {
    v14 = 0u;
  }
  else
  {
    if (((*(_DWORD *)(v9 + 64)
         + 7
         + ((*(_DWORD *)(v8 + 64) + *(unsigned __int8 *)(v9 + 80)) & ~*(unsigned __int8 *)(v9 + 80))) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v12 = a3 - v10 + 1;
    else
      v12 = 2;
    if (v12 >= 0x10000)
      v13 = 4;
    else
      v13 = 2;
    if (v12 < 0x100)
      v13 = 1;
    if (v12 >= 2)
      v14 = v13;
    else
      v14 = 0;
  }
  if (a2 > v10)
  {
    if ((_DWORD)v11)
    {
      v15 = ~v10 + a2;
      bzero(a1, v11);
      *a1 = v15;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X16 }
}

void sub_1BD144194(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_BYTE *)(v8 + v10) = 0;
  if ((_DWORD)v9)
  {
    if ((_DWORD)v3 == v4)
    {
      v11 = v8;
      v12 = v9;
      a1 = v3;
      a2 = a3;
LABEL_6:
      __swift_storeEnumTagSinglePayload(v11, v12, a1, a2);
      return;
    }
    v11 = (v6 + v8) & v7;
    if ((_DWORD)a1 == v4)
    {
      v12 = v9;
      goto LABEL_6;
    }
    if ((v9 & 0x80000000) != 0)
      v13 = v9 ^ 0x80000000;
    else
      v13 = (v9 - 1);
    *(_QWORD *)((v5 + v11) & 0xFFFFFFFFFFFFFFF8) = v13;
  }
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Grid<ForEach<[ArraySlice<TPNumberPadCharacter>], ArraySlice<TPNumberPadCharacter>, GridRow<ForEach<ArraySlice<TPNumberPadCharacter>, TPNumberPadCharacter, <<opaque return type of View.buttonStyle<A>(_:)>>.0>>>>, _ScaleEffect>, _OverlayModifier<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<CalculatedSizePreferenceKey>>>>>, _FrameLayout>, _PreferenceActionModifier<CalculatedSizePreferenceKey>>>, _EnvironmentKeyWritingModifier<LayoutDirection>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Grid<ForEach<[ArraySlice<TPNumberPadCharacter>], ArraySlice<TPNumberPadCharacter>, GridRow<ForEach<ArraySlice<TPNumberPadCharacter>, TPNumberPadCharacter, <<opaque return type of View.buttonStyle<A>(_:)>>.0>>>>, _ScaleEffect>, _OverlayModifier<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<CalculatedSizePreferenceKey>>>>>, _FrameLayout>, _PreferenceActionModifier<CalculatedSizePreferenceKey>>>, _EnvironmentKeyWritingModifier<LayoutDirection>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Grid<ForEach<[ArraySlice<TPNumberPadCharacter>], ArraySlice<TPNumberPadCharacter>, GridRow<ForEach<ArraySlice<TPNumberPadCharacter>, TPNumberPadCharacter, <<opaque return type of View.buttonStyle<A>(_:)>>.0>>>>, _ScaleEffect>, _OverlayModifier<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<CalculatedSizePreferenceKey>>>>>, _FrameLayout>, _PreferenceActionModifier<CalculatedSizePreferenceKey>>>, _EnvironmentKeyWritingModifier<LayoutDirection>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Grid<ForEach<[ArraySlice<TPNumberPadCharacter>], ArraySlice<TPNumberPadCharacter>, GridRow<ForEach<ArraySlice<TPNumberPadCharacter>, TPNumberPadCharacter, <<opaque return type of View.buttonStyle<A>(_:)>>.0>>>>, _ScaleEffect>, _OverlayModifier<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<CalculatedSizePreferenceKey>>>>>, _FrameLayout>, _PreferenceActionModifier<CalculatedSizePreferenceKey>>>, _EnvironmentKeyWritingModifier<LayoutDirection>>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Grid<ForEach<[ArraySlice<TPNumberPadCharacter>], ArraySlice<TPNumberPadCharacter>, GridRow<ForEach<ArraySlice<TPNumberPadCharacter>, TPNumberPadCharacter, <<opaque return type of View.buttonStyle<A>(_:)>>.0>>>>, _ScaleEffect>, _OverlayModifier<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<CalculatedSizePreferenceKey>>>>>, _FrameLayout>, _PreferenceActionModifier<CalculatedSizePreferenceKey>>> and conformance GeometryReader<A>, &demangling cache variable for type metadata for GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Grid<ForEach<[ArraySlice<TPNumberPadCharacter>], ArraySlice<TPNumberPadCharacter>, GridRow<ForEach<ArraySlice<TPNumberPadCharacter>, TPNumberPadCharacter, <<opaque return type of View.buttonStyle<A>(_:)>>.0>>>>, _ScaleEffect>, _OverlayModifier<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<CalculatedSizePreferenceKey>>>>>, _FrameLayout>, _PreferenceActionModifier<CalculatedSizePreferenceKey>>>);
    v3 = v2;
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<LayoutDirection> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<LayoutDirection>);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v5);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Grid<ForEach<[ArraySlice<TPNumberPadCharacter>], ArraySlice<TPNumberPadCharacter>, GridRow<ForEach<ArraySlice<TPNumberPadCharacter>, TPNumberPadCharacter, <<opaque return type of View.buttonStyle<A>(_:)>>.0>>>>, _ScaleEffect>, _OverlayModifier<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<CalculatedSizePreferenceKey>>>>>, _FrameLayout>, _PreferenceActionModifier<CalculatedSizePreferenceKey>>>, _EnvironmentKeyWritingModifier<LayoutDirection>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t sub_1BD1442DC()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for KeypadButtonStyleView<Color>);
  OUTLINED_FUNCTION_5_48(&lazy protocol witness table cache variable for type KeypadButtonStyleView<Color> and conformance KeypadButtonStyleView<A>);
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1BD144350()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[6];
  _QWORD v16[2];
  _QWORD v17[2];
  _QWORD v18[2];

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for HStack<ButtonStyleConfiguration.Label>);
  v0 = type metadata accessor for _BackgroundStyleModifier();
  v1 = type metadata accessor for ModifiedContent();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _OverlayModifier<Color>);
  OUTLINED_FUNCTION_9_11();
  v2 = type metadata accessor for ModifiedContent();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Color?>);
  OUTLINED_FUNCTION_9_11();
  v3 = type metadata accessor for ModifiedContent();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type HStack<ButtonStyleConfiguration.Label> and conformance HStack<A>, &demangling cache variable for type metadata for HStack<ButtonStyleConfiguration.Label>);
  v18[0] = v4;
  v18[1] = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDC6D0], v0);
  v5 = MEMORY[0x1E0CD9C20];
  v6 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v18);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _OverlayModifier<Color> and conformance _OverlayModifier<A>, &demangling cache variable for type metadata for _OverlayModifier<Color>);
  v17[0] = v6;
  v17[1] = v7;
  v8 = MEMORY[0x1C3B750C8](v5, v2, v17);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Color?>);
  v16[0] = v8;
  v16[1] = v9;
  v10 = MEMORY[0x1C3B750C8](v5, v3, v16);
  v11 = lazy protocol witness table accessor for type Circle and conformance Circle();
  v15[2] = v3;
  v15[3] = MEMORY[0x1E0CDFAD0];
  v15[4] = v10;
  v15[5] = v11;
  v12 = type metadata accessor for PlatterShadowedContent();
  v13 = type metadata accessor for ModifiedContent();
  v15[0] = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDC080], v12);
  v15[1] = MEMORY[0x1E0CD8DA8];
  return MEMORY[0x1C3B750C8](v5, v13, v15);
}

void *type metadata accessor for CalculatedSizePreferenceKey()
{
  return &unk_1E761C5F0;
}

void *CalculatedSizePreferenceKey.defaultValue.unsafeMutableAddressor()
{
  return &static CalculatedSizePreferenceKey.defaultValue;
}

double specialized static CalculatedSizePreferenceKey.reduce(value:nextValue:)(uint64_t a1, void (*a2)(__int128 *__return_ptr))
{
  double result;
  __int128 v4;
  char v5;

  a2(&v4);
  if ((v5 & 1) == 0)
  {
    result = *(double *)&v4;
    *(_OWORD *)a1 = v4;
    *(_BYTE *)(a1 + 16) = 0;
  }
  return result;
}

__n128 protocol witness for static PreferenceKey.defaultValue.getter in conformance CalculatedSizePreferenceKey@<Q0>(__n128 *a1@<X8>)
{
  __n128 *v2;
  unsigned __int8 v3;
  __n128 result;

  v2 = (__n128 *)CalculatedSizePreferenceKey.defaultValue.unsafeMutableAddressor();
  v3 = v2[1].n128_u8[0];
  result = *v2;
  *a1 = *v2;
  a1[1].n128_u8[0] = v3;
  return result;
}

uint64_t sub_1BD1445B8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in closure #1 in KeypadButtonStyleView.body.getter@<X0>(uint64_t *a1@<X8>)
{
  return closure #2 in closure #1 in KeypadButtonStyleView.body.getter(a1);
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in ClarityUIKeypadView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return closure #1 in closure #1 in closure #1 in ClarityUIKeypadView.body.getter((const void *)(v1 + 16), a1);
}

unint64_t lazy protocol witness table accessor for type ArraySlice<TPNumberPadCharacter> and conformance <A> ArraySlice<A>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = lazy protocol witness table cache variable for type ArraySlice<TPNumberPadCharacter> and conformance <A> ArraySlice<A>;
  if (!lazy protocol witness table cache variable for type ArraySlice<TPNumberPadCharacter> and conformance <A> ArraySlice<A>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ArraySlice<TPNumberPadCharacter>);
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type TPNumberPadCharacter and conformance TPNumberPadCharacter, type metadata accessor for TPNumberPadCharacter);
    v3 = v2;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0DEBF60], v1, &v3);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ArraySlice<TPNumberPadCharacter> and conformance <A> ArraySlice<A>);
  }
  return result;
}

uint64_t partial apply for closure #3 in closure #1 in ClarityUIKeypadView.body.getter()
{
  return closure #3 in closure #1 in ClarityUIKeypadView.body.getter();
}

uint64_t outlined init with take of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Grid<ForEach<[ArraySlice<TPNumberPadCharacter>], ArraySlice<TPNumberPadCharacter>, GridRow<ForEach<ArraySlice<TPNumberPadCharacter>, TPNumberPadCharacter, <<opaque return type of View.buttonStyle<A>(_:)>>.0>>>>, _ScaleEffect>, _OverlayModifier<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<CalculatedSizePreferenceKey>>>>>, _FrameLayout>, _PreferenceActionModifier<CalculatedSizePreferenceKey>>(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Grid<ForEach<[ArraySlice<TPNumberPadCharacter>], ArraySlice<TPNumberPadCharacter>, GridRow<ForEach<ArraySlice<TPNumberPadCharacter>, TPNumberPadCharacter, <<opaque return type of View.buttonStyle<A>(_:)>>.0>>>>, _ScaleEffect>, _OverlayModifier<GeometryReader<ModifiedContent<Color, _PreferenceWritingModifier<CalculatedSizePreferenceKey>>>>>, _FrameLayout>, _PreferenceActionModifier<CalculatedSizePreferenceKey>>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void partial apply for closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in ClarityUIKeypadView.body.getter(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in ClarityUIKeypadView.body.getter(a1, (_QWORD *)(v2 + 16), a2);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.accessibilityElement(children:)>>.0, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t OpaqueTypeConformance2;
  uint64_t v5;
  _QWORD v6[4];

  result = lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.accessibilityElement(children:)>>.0, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.accessibilityElement(children:)>>.0, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.accessibilityElement(children:)>>.0, AccessibilityAttachmentModifier>);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Button<ModifiedContent<Image, _FrameLayout>>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Button<ModifiedContent<Image, _FrameLayout>> and conformance Button<A>, &demangling cache variable for type metadata for Button<ModifiedContent<Image, _FrameLayout>>);
    v6[2] = v2;
    v6[3] = v3;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type AccessibilityAttachmentModifier and conformance AccessibilityAttachmentModifier, (void (*)(uint64_t))MEMORY[0x1E0CDCFD0]);
    v6[0] = OpaqueTypeConformance2;
    v6[1] = v5;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v6);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.accessibilityElement(children:)>>.0, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

{
  unint64_t result;
  uint64_t v1;
  uint64_t OpaqueTypeConformance2;
  uint64_t v3;
  _QWORD v4[4];

  result = lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.accessibilityElement(children:)>>.0, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.accessibilityElement(children:)>>.0, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.accessibilityElement(children:)>>.0, AccessibilityAttachmentModifier>);
    v4[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(VideoReactionButtonRow, VideoReactionButtonRow)>>, _EnvironmentKeyWritingModifier<VideoReactionPickerViewModel?>>, _AppearanceActionModifier>, _PaddingLayout>, _FrameLayout>, _BackgroundModifier<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<ThoughtBubble, Material>, _InsettableBackgroundShapeModifier<Color, ThoughtBubble>>, _ShadowEffect>, _AnimationModifier<Bool>>>>>, _CoordinateSpaceModifier<String>>);
    v4[3] = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(VideoReactionButtonRow, VideoReactionButtonRow)>>, _EnvironmentKeyWritingModifier<VideoReactionPickerViewModel?>>, _AppearanceActionModifier>, _PaddingLayout>, _FrameLayout>, _BackgroundModifier<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<ThoughtBubble, Material>, _InsettableBackgroundShapeModifier<Color, ThoughtBubble>>, _ShadowEffect>, _AnimationModifier<Bool>>>>>, _CoordinateSpaceModifier<String>> and conformance <> ModifiedContent<A, B>();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type AccessibilityAttachmentModifier and conformance AccessibilityAttachmentModifier, (void (*)(uint64_t))MEMORY[0x1E0CDCFD0]);
    v4[0] = OpaqueTypeConformance2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.accessibilityElement(children:)>>.0, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

{
  unint64_t result;
  uint64_t v1;
  uint64_t OpaqueTypeConformance2;
  uint64_t v3;
  _QWORD v4[4];

  result = lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.accessibilityElement(children:)>>.0, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.accessibilityElement(children:)>>.0, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.accessibilityElement(children:)>>.0, AccessibilityAttachmentModifier>);
    v4[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ZStack<TupleView<(ModifiedContent<AnimatedSaveView, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>, _EnvironmentKeyWritingModifier<Color?>>, _FixedSizeLayout>?)>>, _OpacityEffect>, _AnimationModifier<AnimatedSaveView.SaveState>>);
    v4[3] = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ZStack<TupleView<(ModifiedContent<AnimatedSaveView, _OpacityEffect>, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>, _EnvironmentKeyWritingModifier<Color?>>, _FixedSizeLayout>?)>>, _OpacityEffect>, _AnimationModifier<AnimatedSaveView.SaveState>> and conformance <> ModifiedContent<A, B>();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type AccessibilityAttachmentModifier and conformance AccessibilityAttachmentModifier, (void (*)(uint64_t))MEMORY[0x1E0CDCFD0]);
    v4[0] = OpaqueTypeConformance2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.accessibilityElement(children:)>>.0, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

{
  unint64_t result;
  uint64_t v1;
  uint64_t OpaqueTypeConformance2;
  uint64_t v3;
  _QWORD v4[4];

  result = lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.accessibilityElement(children:)>>.0, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.accessibilityElement(children:)>>.0, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.accessibilityElement(children:)>>.0, AccessibilityAttachmentModifier>);
    v4[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ZStack<TupleView<(StrokeShapeView<Path, ForegroundStyle, EmptyView>, (<<opaque return type of View.onChange<A>(of:initial:_:)>>.0)?, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Rectangle, TintShapeStyle>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, _AnimationModifier<Bool>>, _AnimationModifier<ShutterButtonStyle.InnerStyle>>, _AnimationModifier<Bool>>)>>, _FrameLayout>);
    v4[3] = lazy protocol witness table accessor for type ModifiedContent<ZStack<TupleView<(StrokeShapeView<Path, ForegroundStyle, EmptyView>, (<<opaque return type of View.onChange<A>(of:initial:_:)>>.0)?, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Rectangle, TintShapeStyle>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, _AnimationModifier<Bool>>, _AnimationModifier<ShutterButtonStyle.InnerStyle>>, _AnimationModifier<Bool>>)>>, _FrameLayout> and conformance <> ModifiedContent<A, B>();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type AccessibilityAttachmentModifier and conformance AccessibilityAttachmentModifier, (void (*)(uint64_t))MEMORY[0x1E0CDCFD0]);
    v4[0] = OpaqueTypeConformance2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.accessibilityElement(children:)>>.0, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type KeypadButtonStyle and conformance KeypadButtonStyle()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type KeypadButtonStyle and conformance KeypadButtonStyle;
  if (!lazy protocol witness table cache variable for type KeypadButtonStyle and conformance KeypadButtonStyle)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for KeypadButtonStyle, &type metadata for KeypadButtonStyle);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type KeypadButtonStyle and conformance KeypadButtonStyle);
  }
  return result;
}

id partial apply for closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in ClarityUIKeypadView.body.getter()
{
  uint64_t v0;

  return closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in ClarityUIKeypadView.body.getter(v0 + 16, *(_QWORD *)(v0 + 96));
}

id partial apply for closure #2 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in ClarityUIKeypadView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return closure #2 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in ClarityUIKeypadView.body.getter(*(_QWORD *)(v1 + 16), a1);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<Image, _FrameLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<Image, _FrameLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<Image, _FrameLayout> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Image, _FrameLayout>);
    v2[0] = MEMORY[0x1E0CDF820];
    v2[1] = MEMORY[0x1E0CD8D70];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<Image, _FrameLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t objectdestroyTm_3()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocObject();
}

id partial apply for closure #3 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in ClarityUIKeypadView.body.getter(char a1)
{
  uint64_t v1;
  char **v2;

  v2 = &selRef_playSoundForDialerCharacter_;
  if ((a1 & 1) == 0)
    v2 = &selRef_stopSoundForDialerCharacter_;
  return objc_msgSend(*(id *)(v1 + 72), *v2, *(_QWORD *)(v1 + 96));
}

uint64_t outlined bridged method (pb) of @objc static TPDialerNumberPad.dialerNumberPadFullCharacters()(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_dialerNumberPadFullCharacters);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

unint64_t type metadata accessor for NSNumber()
{
  unint64_t result;

  result = lazy cache variable for type metadata for NSNumber;
  if (!lazy cache variable for type metadata for NSNumber)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for NSNumber);
  }
  return result;
}

id PictureInPictureWrapperView._touchInsets.getter()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PictureInPictureWrapperView();
  return objc_msgSendSuper2(&v2, sel__touchInsets);
}

void PictureInPictureWrapperView._touchInsets.setter(double a1, double a2, double a3, double a4)
{
  void *v4;
  objc_super v9;

  v9.receiver = v4;
  v9.super_class = (Class)type metadata accessor for PictureInPictureWrapperView();
  objc_msgSendSuper2(&v9, sel__setTouchInsets_, a1, a2, a3, a4);
  PictureInPictureWrapperView._touchInsets.didset();
}

void PictureInPictureWrapperView.layoutSubviews()()
{
  void *v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;

  v1 = objc_msgSend(v0, sel_subviews);
  type metadata accessor for UIView();
  v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v3)
      goto LABEL_3;
LABEL_9:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  v3 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v3)
    goto LABEL_9;
LABEL_3:
  if (v3 >= 1)
  {
    v4 = 0;
    do
    {
      if ((v2 & 0xC000000000000001) != 0)
        v5 = (id)MEMORY[0x1C3B73D18](v4, v2);
      else
        v5 = *(id *)(v2 + 8 * v4 + 32);
      v6 = v5;
      ++v4;
      objc_msgSend(v0, sel_bounds);
      objc_msgSend(v6, sel_setFrame_);

    }
    while (v3 != v4);
    goto LABEL_9;
  }
  __break(1u);
}

id PictureInPictureWrapperView.addSubview(_:)(void *a1)
{
  void *v1;
  objc_super v4;

  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for PictureInPictureWrapperView();
  objc_msgSendSuper2(&v4, sel_addSubview_, a1);
  objc_msgSend(v1, sel_bounds);
  return objc_msgSend(a1, sel_setFrame_);
}

void PictureInPictureWrapperView._touchInsets.didset()
{
  void *v0;
  id v1;
  id v2;

  v1 = objc_msgSend(v0, sel_superview);
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v0, sel__touchInsets);
    objc_msgSend(v2, sel__setTouchInsets_);
    OUTLINED_FUNCTION_3_5(v2);
  }
}

id PictureInPictureWrapperView.init(frame:)(double a1, double a2, double a3, double a4)
{
  void *v4;
  objc_super v10;

  v10.receiver = v4;
  v10.super_class = (Class)type metadata accessor for PictureInPictureWrapperView();
  return objc_msgSendSuper2(&v10, sel_initWithFrame_, a1, a2, a3, a4);
}

id PictureInPictureWrapperView.init(coder:)(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for PictureInPictureWrapperView();
  v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

id PictureInPictureWrapperView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PictureInPictureWrapperView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id PictureInPictureWrapperViewController.wrappedViewController.getter()
{
  uint64_t v0;

  return *(id *)(v0 + direct field offset for PictureInPictureWrapperViewController.wrappedViewController);
}

void key path getter for PictureInPictureWrapperViewController.touchInsets : <A>PictureInPictureWrapperViewController<A>(_QWORD **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(double *)a2 = (*(double (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x68))();
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v4;
  *(_QWORD *)(a2 + 24) = v5;
}

uint64_t key path setter for PictureInPictureWrapperViewController.touchInsets : <A>PictureInPictureWrapperViewController<A>(double *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(double, double, double, double))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x70))(*a1, a1[1], a1[2], a1[3]);
}

void PictureInPictureWrapperViewController.touchInsets.didset()
{
  char *v0;
  id v1;
  void *v2;
  double *v3;
  id v4;
  void *v5;
  double *v6;

  v1 = objc_msgSend(v0, sel_viewIfLoaded);
  if (v1)
  {
    v2 = v1;
    v3 = (double *)&v0[direct field offset for PictureInPictureWrapperViewController.touchInsets];
    swift_beginAccess();
    objc_msgSend(v2, sel__setTouchInsets_, *v3, v3[1], v3[2], v3[3]);

  }
  v4 = objc_msgSend(*(id *)&v0[direct field offset for PictureInPictureWrapperViewController.wrappedViewController], sel_viewIfLoaded);
  if (v4)
  {
    v5 = v4;
    v6 = (double *)&v0[direct field offset for PictureInPictureWrapperViewController.touchInsets];
    swift_beginAccess();
    objc_msgSend(v5, sel__setTouchInsets_, *v6, v6[1], v6[2], v6[3]);

  }
}

double PictureInPictureWrapperViewController.touchInsets.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + direct field offset for PictureInPictureWrapperViewController.touchInsets;
  OUTLINED_FUNCTION_2_0();
  return *(double *)v1;
}

void PictureInPictureWrapperViewController.touchInsets.setter(double a1, double a2, double a3, double a4)
{
  uint64_t v4;
  double *v9;

  v9 = (double *)(v4 + direct field offset for PictureInPictureWrapperViewController.touchInsets);
  OUTLINED_FUNCTION_2_0();
  *v9 = a1;
  v9[1] = a2;
  v9[2] = a3;
  v9[3] = a4;
  PictureInPictureWrapperViewController.touchInsets.didset();
}

void (*PictureInPictureWrapperViewController.touchInsets.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  return PictureInPictureWrapperViewController.touchInsets.modify;
}

void PictureInPictureWrapperViewController.touchInsets.modify(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    PictureInPictureWrapperViewController.touchInsets.didset();
}

void PictureInPictureWrapperViewController.__allocating_init(wrappedViewController:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_16_1();
  PictureInPictureWrapperViewController.init(wrappedViewController:)(v0, v1, v2, v3);
  OUTLINED_FUNCTION_0();
}

id PictureInPictureWrapperViewController.init(wrappedViewController:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  _OWORD *v6;
  __int128 v7;
  objc_super v9;

  v5 = *MEMORY[0x1E0DEEDD8] & *v4;
  v6 = (_OWORD *)((char *)v4 + direct field offset for PictureInPictureWrapperViewController.touchInsets);
  v7 = *(_OWORD *)(MEMORY[0x1E0DC49E8] + 16);
  *v6 = *MEMORY[0x1E0DC49E8];
  v6[1] = v7;
  *(_QWORD *)((char *)v4 + direct field offset for PictureInPictureWrapperViewController.wrappedViewController) = a1;
  OUTLINED_FUNCTION_0_64(a3, a4, v5);
  return objc_msgSendSuper2(&v9, sel_initWithNibName_bundle_, 0, 0);
}

uint64_t type metadata accessor for PictureInPictureWrapperViewController(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PictureInPictureWrapperViewController);
}

void PictureInPictureWrapperViewController.__allocating_init(coder:)()
{
  void *v0;

  objc_msgSend(OUTLINED_FUNCTION_16_1(), sel_initWithCoder_, v0);

  OUTLINED_FUNCTION_0();
}

void PictureInPictureWrapperViewController.init(coder:)()
{
  char *v0;
  char *v1;
  __int128 v2;

  v1 = &v0[direct field offset for PictureInPictureWrapperViewController.touchInsets];
  v2 = *(_OWORD *)(MEMORY[0x1E0DC49E8] + 16);
  *(_OWORD *)v1 = *MEMORY[0x1E0DC49E8];
  *((_OWORD *)v1 + 1) = v2;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void @objc PictureInPictureWrapperViewController.init(coder:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  PictureInPictureWrapperViewController.init(coder:)();
}

id PictureInPictureWrapperViewController.updatePreferredContentSize()()
{
  char *v0;

  objc_msgSend(*(id *)&v0[direct field offset for PictureInPictureWrapperViewController.wrappedViewController], sel_preferredContentSize);
  return objc_msgSend(v0, sel_setPreferredContentSize_);
}

Swift::Void __swiftcall PictureInPictureWrapperViewController.loadView()()
{
  id v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  id v10;

  v0 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for PictureInPictureWrapperView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  OUTLINED_FUNCTION_10_16((uint64_t)v0, sel_setView_);

  OUTLINED_FUNCTION_4_24(v1, sel_willMoveToParentViewController_);
  v2 = OUTLINED_FUNCTION_1_52();
  if (!v2)
  {
    __break(1u);
    goto LABEL_6;
  }
  v3 = v2;
  v4 = OUTLINED_FUNCTION_123((uint64_t)v2, sel_view);
  if (!v4)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v5 = v4;
  objc_msgSend(v3, sel_addSubview_, v4);

  v7 = OUTLINED_FUNCTION_10_16(v6, sel_addChildViewController_);
  v8 = OUTLINED_FUNCTION_4_24((uint64_t)v7, sel_didMoveToParentViewController_);
  v9 = OUTLINED_FUNCTION_123((uint64_t)v8, sel_view);
  if (v9)
  {
    OUTLINED_FUNCTION_8_49(v9, sel_setAutoresizingMask_);

    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t type metadata accessor for PictureInPictureWrapperView()
{
  return objc_opt_self();
}

void @objc PictureInPictureWrapperViewController.loadView()(void *a1)
{
  id v1;

  v1 = a1;
  PictureInPictureWrapperViewController.loadView()();

}

Swift::Void __swiftcall PictureInPictureWrapperViewController.viewDidLoad()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  id v4;
  void *v5;
  void (*v6)(void);
  id v7;
  void *v8;
  objc_super v9;

  v3 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  OUTLINED_FUNCTION_0_64(v0, v1, *MEMORY[0x1E0DEEDD8] & *v2);
  objc_msgSendSuper2(&v9, sel_viewDidLoad);
  PictureInPictureWrapperViewController.updatePreferredContentSize()();
  v4 = objc_msgSend(v2, sel_view);
  if (v4)
  {
    v5 = v4;
    v6 = *(void (**)(void))((*v3 & *v2) + 0x68);
    v6();
    OUTLINED_FUNCTION_12_34();

    v7 = objc_msgSend(*(id *)((char *)v2 + direct field offset for PictureInPictureWrapperViewController.wrappedViewController), sel_view);
    if (v7)
    {
      v8 = v7;
      v6();
      OUTLINED_FUNCTION_12_34();

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void @objc PictureInPictureWrapperViewController.viewDidLoad()(void *a1)
{
  id v1;

  v1 = a1;
  PictureInPictureWrapperViewController.viewDidLoad()();

}

id PictureInPictureWrapperViewController.preferredContentSizeDidChange(forChildContentContainer:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_super v7;

  OUTLINED_FUNCTION_0_64(a3, a4, *MEMORY[0x1E0DEEDD8] & *v4);
  objc_msgSendSuper2(&v7, sel_preferredContentSizeDidChangeForChildContentContainer_, a1);
  return PictureInPictureWrapperViewController.updatePreferredContentSize()();
}

void @objc PictureInPictureWrapperViewController.preferredContentSizeDidChange(forChildContentContainer:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  id v7;

  swift_unknownObjectRetain();
  v7 = a1;
  PictureInPictureWrapperViewController.preferredContentSizeDidChange(forChildContentContainer:)(a3, (uint64_t)v7, v5, v6);
  swift_unknownObjectRelease();

}

Swift::Void __swiftcall PictureInPictureWrapperViewController.handlePictureInPictureRestored()()
{
  uint64_t v0;
  id v1;
  void *v2;

  PictureInPictureWrapperViewController.updatePreferredContentSize()();
  v1 = objc_msgSend(*(id *)(v0 + direct field offset for PictureInPictureWrapperViewController.wrappedViewController), sel_view);
  if (v1)
  {
    OUTLINED_FUNCTION_8_49(v1, sel_setAutoresizingMask_);
    OUTLINED_FUNCTION_3_5(v2);
  }
  else
  {
    __break(1u);
  }
}

__C::CGRect __swiftcall PictureInPictureWrapperViewController.frameForRestoreAnimation()()
{
  id v0;
  double v1;
  double v2;
  double v3;
  double v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  double v15;
  id v16;
  SEL v17;
  __C::CGRect result;

  v0 = OUTLINED_FUNCTION_1_52();
  if (!v0)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v5 = v0;
  v6 = objc_msgSend(v0, sel_window);

  if (!v6 || (v7 = objc_msgSend(v6, sel_windowScene), v6, !v7))
  {
    v14 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
    objc_msgSend(v14, sel__referenceBounds);
    OUTLINED_FUNCTION_89();
    goto LABEL_8;
  }
  v9 = OUTLINED_FUNCTION_123(v8, sel_screen);
  v10 = objc_msgSend(v9, sel_fixedCoordinateSpace);

  v11 = OUTLINED_FUNCTION_1_52();
  if (!v11)
    goto LABEL_10;
  v12 = v11;
  objc_msgSend(v11, sel_bounds);
  OUTLINED_FUNCTION_89();

  v13 = OUTLINED_FUNCTION_1_52();
  if (!v13)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v14 = v13;
  v15 = OUTLINED_FUNCTION_66();
  objc_msgSend(v16, v17, v14, v15);
  OUTLINED_FUNCTION_89();

  swift_unknownObjectRelease();
LABEL_8:

  v1 = OUTLINED_FUNCTION_66();
LABEL_12:
  result.size.height = v4;
  result.size.width = v3;
  result.origin.y = v2;
  result.origin.x = v1;
  return result;
}

double @objc PictureInPictureWrapperViewController.frameForRestoreAnimation()(void *a1)
{
  id v1;
  double v2;

  v1 = a1;
  *(_QWORD *)&v2 = (unint64_t)PictureInPictureWrapperViewController.frameForRestoreAnimation()();

  return v2;
}

CGSize __swiftcall PictureInPictureWrapperViewController.preferredPiPContentAspectRatio()()
{
  uint64_t v0;
  double v1;
  double v2;
  CGSize result;

  objc_msgSend(*(id *)(v0 + direct field offset for PictureInPictureWrapperViewController.wrappedViewController), sel_preferredPiPContentAspectRatio);
  result.height = v2;
  result.width = v1;
  return result;
}

double @objc PictureInPictureWrapperViewController.preferredPiPContentAspectRatio()(void *a1)
{
  id v1;
  double v2;

  v1 = a1;
  *(_QWORD *)&v2 = *(_OWORD *)&PictureInPictureWrapperViewController.preferredPiPContentAspectRatio()();

  return v2;
}

void __swiftcall PictureInPictureWrapperViewController.viewControllerForPiP()(UIViewController_optional *__return_ptr retstr)
{
  uint64_t v1;
  id v2;

  v2 = *(id *)(v1 + direct field offset for PictureInPictureWrapperViewController.wrappedViewController);
  OUTLINED_FUNCTION_0();
}

id @objc PictureInPictureWrapperViewController.viewControllerForPiP()@<X0>(UIViewController_optional *a1@<X8>)
{
  id v1;

  PictureInPictureWrapperViewController.viewControllerForPiP()(a1);
  return v1;
}

Swift::Bool __swiftcall PictureInPictureWrapperViewController.restoreViewControllerHierarchyWhenExitingPiP()()
{
  return 1;
}

uint64_t @objc PictureInPictureWrapperViewController.restoreViewControllerHierarchyWhenExitingPiP()()
{
  return 1;
}

id PictureInPictureWrapperViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)MEMORY[0x1C3B72E00]();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void PictureInPictureWrapperViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void @objc PictureInPictureWrapperViewController.init(nibName:bundle:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v5;

  if (a3)
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  v5 = a4;
  PictureInPictureWrapperViewController.init(nibName:bundle:)();
}

id PictureInPictureWrapperViewController.__deallocating_deinit(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_super v6;

  OUTLINED_FUNCTION_0_64(a3, a4, *MEMORY[0x1E0DEEDD8] & *v4);
  return objc_msgSendSuper2(&v6, sel_dealloc);
}

void @objc PictureInPictureWrapperViewController.__ivar_destroyer(uint64_t a1)
{

}

void base witness table accessor for View in PictureInPictureWrapper<A>()
{
  JUMPOUT(0x1C3B750C8);
}

uint64_t protocol witness for UIViewControllerRepresentable.makeUIViewController(context:) in conformance PictureInPictureWrapper<A>(uint64_t a1)
{
  _QWORD *v1;

  return PictureInPictureWrapper.makeUIViewController(context:)(a1, *v1);
}

uint64_t protocol witness for static View._makeView(view:inputs:) in conformance PictureInPictureWrapper<A>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1C3B750C8](&protocol conformance descriptor for PictureInPictureWrapper<A>, a3);
  return static UIViewControllerRepresentable._makeView(view:inputs:)();
}

uint64_t protocol witness for static View._makeViewList(view:inputs:) in conformance PictureInPictureWrapper<A>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1C3B750C8](&protocol conformance descriptor for PictureInPictureWrapper<A>, a3);
  return static UIViewControllerRepresentable._makeViewList(view:inputs:)();
}

void protocol witness for View.body.getter in conformance PictureInPictureWrapper<A>(uint64_t a1)
{
  MEMORY[0x1C3B750C8](&protocol conformance descriptor for PictureInPictureWrapper<A>, a1);
  UIViewControllerRepresentable.body.getter();
  __break(1u);
}

uint64_t sub_1BD145AD4()
{
  return 8;
}

_QWORD *sub_1BD145AE0(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t type metadata completion function for PictureInPictureWrapperViewController()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for PictureInPictureWrapperViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PictureInPictureWrapperViewController.touchInsets.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of PictureInPictureWrapperViewController.touchInsets.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of PictureInPictureWrapperViewController.touchInsets.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of PictureInPictureWrapperViewController.__allocating_init(wrappedViewController:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of PictureInPictureWrapperViewController.handlePictureInPictureRestored()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of PictureInPictureWrapperViewController.frameForRestoreAnimation()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of PictureInPictureWrapperViewController.preferredPiPContentAspectRatio()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of PictureInPictureWrapperViewController.viewControllerForPiP()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of PictureInPictureWrapperViewController.restoreViewControllerHierarchyWhenExitingPiP()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t type metadata accessor for PictureInPictureWrapper(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PictureInPictureWrapper);
}

unint64_t type metadata accessor for UIView()
{
  unint64_t result;

  result = lazy cache variable for type metadata for UIView;
  if (!lazy cache variable for type metadata for UIView)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for UIView);
  }
  return result;
}

uint64_t specialized SyncedScreeningAlphaGradientView.AnimatedState.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void (*v6)(uint64_t, char *, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Double>);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = v0 + direct field offset for SyncedScreeningAlphaGradientView.AnimatedState._minOpacity;
  v11 = 0;
  Published.init(initialValue:)();
  v6 = *(void (**)(uint64_t, char *, uint64_t))(v2 + 32);
  v6(v5, v4, v1);
  v7 = v0 + direct field offset for SyncedScreeningAlphaGradientView.AnimatedState._maxOpacity;
  v11 = 0;
  Published.init(initialValue:)();
  v6(v7, v4, v1);
  v8 = v0 + direct field offset for SyncedScreeningAlphaGradientView.AnimatedState._unitStart;
  v11 = 0;
  Published.init(initialValue:)();
  v6(v8, v4, v1);
  return v0;
}

uint64_t specialized implicit closure #2 in implicit closure #1 in variable initialization expression of SyncedScreeningAlphaGradientView._viewState()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SyncedScreeningAlphaGradientView<UIView>.AnimatedState);
  swift_allocObject();
  return specialized SyncedScreeningAlphaGradientView.AnimatedState.init()();
}

uint64_t one-time initialization function for positionalData()
{
  uint64_t result;

  type metadata accessor for PositionalData();
  swift_allocObject();
  result = PositionalData.init()();
  static TranscriptionViewComposer.positionalData = result;
  return result;
}

uint64_t *TranscriptionViewComposer.positionalData.unsafeMutableAddressor()
{
  if (one-time initialization token for positionalData != -1)
    swift_once();
  return &static TranscriptionViewComposer.positionalData;
}

uint64_t static TranscriptionViewComposer.positionalData.getter()
{
  if (one-time initialization token for positionalData != -1)
    swift_once();
  return swift_retain();
}

void __swiftcall TranscriptionViewComposer.compose()(UIViewController *__return_ptr retstr)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int *v7;
  uint64_t v8;
  char *v9;
  void *v10;
  id v11;
  id v12;
  uint64_t (*v13)(id);
  id v14;
  char v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  Swift::String v21;
  Swift::String_optional v22;
  Swift::String v23;
  Swift::String v24;
  uint64_t *v25;
  uint64_t v26;
  id v27;
  UIFontDescriptorSymbolicTraits v28;
  Class isa;
  double v30;
  double v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  Class v39;
  double v40;
  double v41;
  void (*v42)(uint64_t);
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  char *v48;
  id v49;
  void *v50;
  id v51;
  void *v52;
  id v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  Swift::String v60;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  v59 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v58 = (char *)&v54 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AudioCallMiddleContainerView<TranscriptionView>);
  v3 = MEMORY[0x1E0C80A78](v56);
  v57 = (uint64_t)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v54 - v5;
  v7 = (int *)type metadata accessor for TranscriptionView();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for viewModel != -1)
    swift_once();
  v10 = (void *)objc_opt_self();
  OUTLINED_FUNCTION_1_28();
  v11 = objc_msgSend(v10, sel_sharedInstance);
  v12 = objc_msgSend(v11, sel_screeningCall);

  if (v12)
  {
    if (one-time initialization token for shared != -1)
      swift_once();
    v13 = *(uint64_t (**)(id))(*(_QWORD *)static CallScreeningRTTHelper.shared + 184);
    v14 = v12;
    v15 = v13(v12);

    if ((v15 & 1) != 0)
    {
      v16 = objc_msgSend((id)objc_opt_self(), sel_viewControllerForCall_, v14);

      if (v16)
      {
        OUTLINED_FUNCTION_22();
        return;
      }
    }
    else
    {

    }
  }
  v54 = v1;
  v55 = v6;
  v17 = one-time initialization token for positionalData;
  OUTLINED_FUNCTION_1_28();
  if (v17 != -1)
    swift_once();
  v18 = static TranscriptionViewComposer.positionalData;
  v19 = (void *)objc_opt_self();
  swift_retain();
  v20 = objc_msgSend(v19, sel_conversationKit);
  v60._object = (void *)0xE000000000000000;
  v21._object = (void *)0x80000001BD6755B0;
  v21._countAndFlagsBits = 0xD000000000000025;
  v22.value._countAndFlagsBits = 0x61737265766E6F43;
  v22.value._object = (void *)0xEF74694B6E6F6974;
  v23._countAndFlagsBits = 0;
  v23._object = (void *)0xE000000000000000;
  v60._countAndFlagsBits = 0;
  v24 = NSLocalizedString(_:tableName:bundle:value:comment:)(v21, v22, (NSBundle)v20, v23, v60);

  *(_DWORD *)v9 = 0x10000;
  v25 = (uint64_t *)&v9[v7[6]];
  *v25 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for TranscriptionViewModel(0);
  _s15ConversationKit22TranscriptionViewModelCAC7Combine16ObservableObjectAAWlTm_0(&lazy protocol witness table cache variable for type TranscriptionViewModel and conformance TranscriptionViewModel, (void (*)(uint64_t))type metadata accessor for TranscriptionViewModel);
  OUTLINED_FUNCTION_1_28();
  *((_QWORD *)v9 + 1) = ObservedObject.init(wrappedValue:)();
  *((_QWORD *)v9 + 2) = v26;
  *(_QWORD *)&v9[v7[7]] = v18;
  *(Swift::String *)&v9[v7[8]] = v24;
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIFont);
  swift_retain_n();
  v27 = OUTLINED_FUNCTION_0_65();
  v28 = *(_DWORD *)v9;
  isa = UIFont.withTraits(_:)(*(_DWORD *)v9).super.isa;

  -[objc_class pointSize](isa, sel_pointSize);
  v31 = v30;

  (*(void (**)(double))(*(_QWORD *)v18 + 328))(v31 + v31);
  OUTLINED_FUNCTION_22();
  swift_release_n();
  v32 = (uint64_t)v55;
  outlined init with copy of TranscriptionView((uint64_t)v9, (uint64_t)v55);
  v33 = (uint64_t *)(v32 + *(int *)(v56 + 36));
  OUTLINED_FUNCTION_1_28();
  v34 = v32;
  *v33 = ObservedObject.init(wrappedValue:)();
  v33[1] = v35;
  v36 = v57;
  outlined init with copy of AudioCallMiddleContainerView<TranscriptionView>(v32, v57);
  v37 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MaskSizingLockScreenHostingController<AudioCallMiddleContainerView<TranscriptionView>>));
  specialized MaskSizingLockScreenHostingController.init(rootView:)(v36);
  v38 = OUTLINED_FUNCTION_0_65();
  v39 = UIFont.withTraits(_:)(v28).super.isa;

  -[objc_class pointSize](v39, sel_pointSize);
  v41 = v40;

  v42 = *(void (**)(uint64_t))(*(_QWORD *)static TranscriptionViewComposer.positionalData + 248);
  v43 = swift_retain();
  v44 = v58;
  v42(v43);
  swift_release();
  lazy protocol witness table accessor for type Published<Bool>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type Published<Bool>.Publisher and conformance Published<A>.Publisher, &demangling cache variable for type metadata for Published<Bool>.Publisher);
  v45 = v54;
  v46 = Publisher.eraseToAnyPublisher()();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v44, v45);
  v47 = objc_allocWithZone((Class)type metadata accessor for BlurryMaskView());
  v48 = BlurryMaskView.init(textSize:isBottomVisiblePublisher:)(v46, v41);
  v49 = OUTLINED_FUNCTION_3_53();
  if (v49)
  {
    v50 = v49;
    objc_msgSend(v49, sel_setMaskView_, v48);

    v51 = OUTLINED_FUNCTION_3_53();
    if (v51)
    {
      v52 = v51;
      v53 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
      objc_msgSend(v52, sel_setBackgroundColor_, v53);
      OUTLINED_FUNCTION_22();

      outlined destroy of AudioCallMiddleContainerView<TranscriptionView>(v34);
      outlined destroy of TranscriptionView((uint64_t)v9);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t MaskSizingLockScreenHostingController.__allocating_init(rootView:)(uint64_t a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return MaskSizingLockScreenHostingController.init(rootView:)(a1);
}

void __swiftcall TranscriptionViewComposer.composeBackground(with:)(UIViewController *__return_ptr retstr, UIView *with)
{
  uint64_t v2;
  UIView *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;

  v2 = one-time initialization token for positionalData;
  v3 = with;
  if (v2 != -1)
    swift_once();
  type metadata accessor for PositionalData();
  _s15ConversationKit22TranscriptionViewModelCAC7Combine16ObservableObjectAAWlTm_0(&lazy protocol witness table cache variable for type PositionalData and conformance PositionalData, (void (*)(uint64_t))type metadata accessor for PositionalData);
  swift_retain();
  v4 = ObservedObject.init(wrappedValue:)();
  v6 = v5;
  v7 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LockScreenHostingController<SyncedScreeningAlphaGradientView<UIView>>));
  LOBYTE(v11) = 0;
  v8 = objc_msgSend((id)UIHostingController.init(rootView:)(), sel_view, v3, 0x3FD3333333333333, 0, 0x3FD3333333333333, 0x3FE0000000000000, 0, 0x3FF0000000000000, v4, v6, specialized implicit closure #2 in implicit closure #1 in variable initialization expression of SyncedScreeningAlphaGradientView._viewState, 0, v11);
  if (v8)
  {
    v9 = v8;
    v10 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
    objc_msgSend(v9, sel_setBackgroundColor_, v10);

  }
  else
  {
    __break(1u);
  }
}

id TranscriptionViewComposer.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id TranscriptionViewComposer.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_init);
}

id TranscriptionViewComposer.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id CNKTranscriptionViewComposerFactory.makeViewComposer()()
{
  return objc_msgSend(objc_allocWithZone((Class)type metadata accessor for TranscriptionViewComposer()), sel_init);
}

CNKTranscriptionViewComposerFactory __swiftcall CNKTranscriptionViewComposerFactory.init()()
{
  return (CNKTranscriptionViewComposerFactory)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
}

id CNKTranscriptionViewComposerFactory.init()()
{
  objc_super v1;

  v1.super_class = (Class)CNKTranscriptionViewComposerFactory;
  return objc_msgSendSuper2(&v1, sel_init);
}

void MaskSizingLockScreenHostingController.viewDidLayoutSubviews()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  objc_super v22;

  v5 = (objc_class *)type metadata accessor for MaskSizingLockScreenHostingController(0, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4)+ class metadata base offset for MaskSizingLockScreenHostingController), *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4)+ class metadata base offset for MaskSizingLockScreenHostingController+ 8), a4);
  v22.receiver = v4;
  v22.super_class = v5;
  objc_msgSendSuper2(&v22, sel_viewDidLayoutSubviews);
  v6 = objc_msgSend(v4, sel_view);
  if (!v6)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v7 = v6;
  v8 = objc_msgSend(v6, sel_maskView);

  if (!v8)
    return;
  v9 = objc_msgSend(v4, sel_view);
  if (!v9)
    goto LABEL_9;
  v10 = v9;
  v11 = objc_msgSend(v9, sel_maskView);

  if (!v11)
    return;
  v12 = objc_msgSend(v4, sel_view);
  if (!v12)
  {
LABEL_10:
    __break(1u);
    return;
  }
  v13 = v12;
  objc_msgSend(v12, sel_bounds);
  v15 = v14;
  v17 = v16;
  v19 = v18;
  v21 = v20;

  objc_msgSend(v11, sel_setFrame_, v15, v17, v19, v21);
}

void @objc MaskSizingLockScreenHostingController.viewDidLayoutSubviews()(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;

  v4 = a1;
  MaskSizingLockScreenHostingController.viewDidLayoutSubviews()((uint64_t)v4, v1, v2, v3);

}

uint64_t specialized MaskSizingLockScreenHostingController.init(rootView:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AudioCallMiddleContainerView<TranscriptionView>);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  outlined init with copy of AudioCallMiddleContainerView<TranscriptionView>(a1, (uint64_t)&v10 - v6);
  outlined init with copy of AudioCallMiddleContainerView<TranscriptionView>((uint64_t)v7, (uint64_t)v5);
  v8 = UIHostingController.init(rootView:)();
  outlined destroy of AudioCallMiddleContainerView<TranscriptionView>((uint64_t)v7);
  outlined destroy of AudioCallMiddleContainerView<TranscriptionView>(a1);
  return v8;
}

uint64_t MaskSizingLockScreenHostingController.init(rootView:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v3 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + class metadata base offset for MaskSizingLockScreenHostingController);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v6 = (char *)&v10 - v5;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v10 - v5, a1, v3);
  LockScreenHostingController.init(rootView:)((uint64_t)v6);
  v8 = v7;
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return v8;
}

void *MaskSizingLockScreenHostingController.__allocating_init(coder:rootView:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return MaskSizingLockScreenHostingController.init(coder:rootView:)(a1, a2);
}

void *MaskSizingLockScreenHostingController.init(coder:rootView:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  void *v10;
  void (*v11)(uint64_t, uint64_t);
  id v12;
  uint64_t v14;

  v5 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v2) + class metadata base offset for MaskSizingLockScreenHostingController);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](a1);
  v8 = (char *)&v14 - v7;
  (*(void (**)(char *))(v6 + 16))((char *)&v14 - v7);
  LockScreenHostingController.init(coder:rootView:)(a1, (uint64_t)v8);
  v10 = v9;
  v11 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v12 = v9;
  v11(a2, v5);
  if (v10)

  return v10;
}

id MaskSizingLockScreenHostingController.init(coder:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v6;
  id v7;
  objc_super v9;

  v6 = (objc_class *)type metadata accessor for MaskSizingLockScreenHostingController(0, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4)+ class metadata base offset for MaskSizingLockScreenHostingController), *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4)+ class metadata base offset for MaskSizingLockScreenHostingController+ 8), a4);
  v9.receiver = v4;
  v9.super_class = v6;
  v7 = objc_msgSendSuper2(&v9, sel_initWithCoder_, a1);

  return v7;
}

id @objc MaskSizingLockScreenHostingController.init(coder:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a3;
  return MaskSizingLockScreenHostingController.init(coder:)(v3, v4, v5, v6);
}

id MaskSizingLockScreenHostingController.__deallocating_deinit(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for MaskSizingLockScreenHostingController(0, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4)+ class metadata base offset for MaskSizingLockScreenHostingController), *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4)+ class metadata base offset for MaskSizingLockScreenHostingController+ 8), a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, sel_dealloc);
}

void BlurryMaskView.isBottomVisible.didset(char a1)
{
  uint64_t v1;

  if (*(_BYTE *)(v1
                + OBJC_IVAR____TtC15ConversationKitP33_C6AB3F6AF7BA5A9D493CD75E954C450614BlurryMaskView_isBottomVisible) != (a1 & 1))
    BlurryMaskView.updateBottomMaskAlpha(_:)();
}

void BlurryMaskView.isBottomVisible.setter(char a1)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1
                + OBJC_IVAR____TtC15ConversationKitP33_C6AB3F6AF7BA5A9D493CD75E954C450614BlurryMaskView_isBottomVisible);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKitP33_C6AB3F6AF7BA5A9D493CD75E954C450614BlurryMaskView_isBottomVisible) = a1;
  BlurryMaskView.isBottomVisible.didset(v2);
}

char *BlurryMaskView.init(textSize:isBottomVisiblePublisher:)(uint64_t a1, double a2)
{
  _BYTE *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  objc_class *v7;
  id v8;
  void *v9;
  char *v10;
  id v11;
  id v12;
  uint64_t inited;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  objc_super v35;

  v29 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.RemoveDuplicates<AnyPublisher<Bool, Never>>);
  v30 = *(_QWORD *)(v4 - 8);
  v31 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v2[OBJC_IVAR____TtC15ConversationKitP33_C6AB3F6AF7BA5A9D493CD75E954C450614BlurryMaskView_subscription] = 0;
  v2[OBJC_IVAR____TtC15ConversationKitP33_C6AB3F6AF7BA5A9D493CD75E954C450614BlurryMaskView_isBottomVisible] = 1;
  *(double *)&v2[OBJC_IVAR____TtC15ConversationKitP33_C6AB3F6AF7BA5A9D493CD75E954C450614BlurryMaskView_textSize] = a2;
  v7 = (objc_class *)type metadata accessor for BlurryMaskView();
  v35.receiver = v2;
  v35.super_class = v7;
  v8 = objc_msgSendSuper2(&v35, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v9 = (void *)objc_opt_self();
  v10 = (char *)v8;
  v11 = objc_msgSend(v9, sel_clearColor);
  objc_msgSend(v10, sel_setBackgroundColor_, v11);

  v12 = objc_msgSend(v10, sel_layer);
  objc_opt_self();
  v28 = (void *)swift_dynamicCastObjCClassUnconditional();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BD644140;
  *(_QWORD *)(inited + 32) = objc_msgSend(v9, sel_clearColor);
  *(_QWORD *)(inited + 40) = objc_msgSend(v9, sel_blackColor);
  *(_QWORD *)(inited + 48) = objc_msgSend(v9, sel_blackColor);
  *(_QWORD *)(inited + 56) = objc_msgSend(v9, sel_clearColor);
  *(_QWORD *)&v32 = inited;
  specialized Array._endMutation()();
  v14 = v32;
  v34 = MEMORY[0x1E0DEE9D8];
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  v15 = 0;
  v16 = v34;
  do
  {
    if ((v14 & 0xC000000000000001) != 0)
      v17 = (id)MEMORY[0x1C3B73D18](v15, v14);
    else
      v17 = *(id *)(v14 + 8 * v15 + 32);
    v18 = v17;
    v19 = objc_msgSend(v17, sel_CGColor);
    type metadata accessor for CGColorRef(0);
    v33 = v20;

    *(_QWORD *)&v32 = v19;
    v34 = v16;
    v21 = *(_QWORD *)(v16 + 16);
    if (v21 >= *(_QWORD *)(v16 + 24) >> 1)
    {
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      v16 = v34;
    }
    ++v15;
    *(_QWORD *)(v16 + 16) = v21 + 1;
    outlined init with take of Any(&v32, (_OWORD *)(v16 + 32 * v21 + 32));
  }
  while (v15 != 4);
  swift_bridgeObjectRelease();
  outlined bridged method (mbnn) of @objc CAGradientLayer.colors.setter(v16, v28);

  v22 = objc_msgSend(v10, sel_layer);
  objc_opt_self();
  v23 = (void *)swift_dynamicCastObjCClassUnconditional();
  v24 = BlurryMaskView.gradientLocations(_:)();
  outlined bridged method (mbnn) of @objc CAGradientLayer.locations.setter(v24, v23);

  *(_QWORD *)&v32 = v29;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyPublisher<Bool, Never>);
  lazy protocol witness table accessor for type Published<Bool>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type AnyPublisher<Bool, Never> and conformance AnyPublisher<A, B>, &demangling cache variable for type metadata for AnyPublisher<Bool, Never>);
  Publisher<>.removeDuplicates()();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  lazy protocol witness table accessor for type Published<Bool>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type Publishers.RemoveDuplicates<AnyPublisher<Bool, Never>> and conformance Publishers.RemoveDuplicates<A>, &demangling cache variable for type metadata for Publishers.RemoveDuplicates<AnyPublisher<Bool, Never>>);
  v25 = v31;
  v26 = Publisher<>.sink(receiveValue:)();
  swift_release();
  swift_release();

  (*(void (**)(char *, uint64_t))(v30 + 8))(v6, v25);
  *(_QWORD *)&v10[OBJC_IVAR____TtC15ConversationKitP33_C6AB3F6AF7BA5A9D493CD75E954C450614BlurryMaskView_subscription] = v26;
  swift_release();
  return v10;
}

void closure #2 in BlurryMaskView.init(textSize:isBottomVisiblePublisher:)(char *a1, uint64_t a2)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1C3B752C0](v3);
  if (v4)
  {
    v5 = (void *)v4;
    BlurryMaskView.isBottomVisible.setter(v2);

  }
}

uint64_t static BlurryMaskView.layerClass.getter()
{
  return _sSo8NSObjectCMaTm_0(0, &lazy cache variable for type metadata for CAGradientLayer);
}

void BlurryMaskView.init(coder:)()
{
  _BYTE *v0;

  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKitP33_C6AB3F6AF7BA5A9D493CD75E954C450614BlurryMaskView_subscription] = 0;
  v0[OBJC_IVAR____TtC15ConversationKitP33_C6AB3F6AF7BA5A9D493CD75E954C450614BlurryMaskView_isBottomVisible] = 1;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void BlurryMaskView.layoutSubviews()()
{
  void *v0;
  id v1;
  void *v2;
  objc_super v3;

  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for BlurryMaskView();
  objc_msgSendSuper2(&v3, sel_layoutSubviews);
  v1 = objc_msgSend(v0, sel_layer);
  objc_opt_self();
  v2 = (void *)swift_dynamicCastObjCClassUnconditional();
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v2, sel_setFrame_);

}

void BlurryMaskView.updateBottomMaskAlpha(_:)()
{
  void *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  NSArray v7;
  Class isa;
  id v9;
  void *v10;
  id v11;
  id v12;

  v1 = v0;
  v2 = (void *)objc_opt_self();
  objc_msgSend(v2, sel_begin);
  v3 = BlurryMaskView.gradientLocations(_:)();
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for CABasicAnimation);
  @nonobjc CABasicAnimation.__allocating_init(keyPath:)(0x6E6F697461636F6CLL, 0xE900000000000073);
  v12 = v4;
  objc_msgSend(v4, sel_setFillMode_, *MEMORY[0x1E0CD2B60]);
  v5 = objc_msgSend(v0, sel_layer);
  objc_opt_self();
  v6 = (void *)swift_dynamicCastObjCClassUnconditional();
  if (outlined bridged method (ob) of @objc CAGradientLayer.locations.getter(v6))
  {
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSNumber);
    v7.super.isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v7.super.isa = 0;
  }
  objc_msgSend(v12, sel_setFromValue_, v7.super.isa);
  swift_unknownObjectRelease();
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSNumber);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v12, sel_setToValue_, isa);

  objc_msgSend(v12, sel_setDuration_, 0.1);
  v9 = objc_msgSend(v1, sel_layer);
  objc_opt_self();
  v10 = (void *)swift_dynamicCastObjCClassUnconditional();
  outlined bridged method (mbnn) of @objc CAGradientLayer.locations.setter(v3, v10);

  v11 = objc_msgSend(v1, sel_layer);
  objc_opt_self();
  objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(), sel_addAnimation_forKey_, v12, 0);

  objc_msgSend(v2, sel_commit);
}

uint64_t BlurryMaskView.gradientLocations(_:)()
{
  uint64_t v1;

  BlurryMaskView.gradientStop(_:)();
  v1 = MEMORY[0x1E0DEE9D8];
  specialized ContiguousArray.reserveCapacity(_:)();
  CGFloat._bridgeToObjectiveC()();
  specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
  specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
  specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized ContiguousArray._endMutation()();
  CGFloat._bridgeToObjectiveC()();
  specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
  specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
  specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized ContiguousArray._endMutation()();
  CGFloat._bridgeToObjectiveC()();
  specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
  specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
  specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized ContiguousArray._endMutation()();
  CGFloat._bridgeToObjectiveC()();
  specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
  specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
  specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized ContiguousArray._endMutation()();
  return v1;
}

id BlurryMaskView.gradientStop(_:)()
{
  void *v0;

  objc_msgSend(v0, sel_bounds);
  return objc_msgSend(v0, sel_bounds);
}

void BlurryMaskView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id BlurryMaskView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BlurryMaskView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t outlined init with copy of TranscriptionView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TranscriptionView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined init with copy of AudioCallMiddleContainerView<TranscriptionView>(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AudioCallMiddleContainerView<TranscriptionView>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for BlurryMaskView()
{
  return objc_opt_self();
}

uint64_t outlined destroy of AudioCallMiddleContainerView<TranscriptionView>(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AudioCallMiddleContainerView<TranscriptionView>);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t outlined destroy of TranscriptionView(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TranscriptionView();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t _s15ConversationKit22TranscriptionViewModelCAC7Combine16ObservableObjectAAWlTm_0(uint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result;

  result = *a1;
  if (!result)
  {
    a2(255);
    OUTLINED_FUNCTION_52_0();
  }
  return result;
}

uint64_t type metadata accessor for TranscriptionViewComposer()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for CNKTranscriptionViewComposerFactory(uint64_t a1)
{
  return _sSo8NSObjectCMaTm_0(a1, &lazy cache variable for type metadata for CNKTranscriptionViewComposerFactory);
}

uint64_t type metadata completion function for MaskSizingLockScreenHostingController()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for MaskSizingLockScreenHostingController(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MaskSizingLockScreenHostingController);
}

void outlined bridged method (mbnn) of @objc CAGradientLayer.locations.setter(uint64_t a1, void *a2)
{
  Class isa;

  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSNumber);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(a2, sel_setLocations_, isa);

}

uint64_t outlined bridged method (ob) of @objc CAGradientLayer.locations.getter(void *a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(a1, sel_locations);

  if (!v2)
    return 0;
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSNumber);
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t sub_1BD147B24()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void partial apply for closure #2 in BlurryMaskView.init(textSize:isBottomVisiblePublisher:)(char *a1)
{
  uint64_t v1;

  closure #2 in BlurryMaskView.init(textSize:isBottomVisiblePublisher:)(a1, v1);
}

uint64_t lazy protocol witness table accessor for type Published<Bool>.Publisher and conformance Published<A>.Publisher(uint64_t *a1, uint64_t *a2)
{
  uint64_t result;

  result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    OUTLINED_FUNCTION_52_0();
  }
  return result;
}

uint64_t CNKCommand.debugDescription.getter(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = 0x746341776569762ELL;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      result = 0x666645776F68732ELL;
      break;
    case 2:
      result = 0xD000000000000012;
      break;
    case 3:
      result = 0xD000000000000011;
      break;
    case 4:
      result = 0x6D614370696C662ELL;
      break;
    case 5:
    case 6:
      result = 0xD000000000000010;
      break;
    case 7:
      result = 0xD000000000000017;
      break;
    case 8:
      result = 0x747261506464612ELL;
      break;
    case 9:
      v3 = 0x6E617078652ELL;
      goto LABEL_14;
    case 10:
      result = 0x6567617373656D2ELL;
      break;
    case 11:
      result = 0x53656C67676F742ELL;
      break;
    case 12:
      v3 = 0x726F6365722ELL;
LABEL_14:
      result = v3 & 0xFFFFFFFFFFFFLL | 0x64000000000000;
      break;
    case 13:
      result = 0x4C656C67676F742ELL;
      break;
    case 14:
      result = 0x694C65726168732ELL;
      break;
    case 15:
      result = 0x536E65657263732ELL;
      break;
    case 16:
      result = 0xD000000000000013;
      break;
    case 17:
      result = 0x4A6C65636E61632ELL;
      break;
    case 18:
      result = 0xD000000000000014;
      break;
    case 19:
      result = 0x43656C67676F742ELL;
      break;
    default:
      result = 0;
      break;
  }
  return result;
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance CNKCommand()
{
  uint64_t *v0;

  return CNKCommand.debugDescription.getter(*v0);
}

uint64_t CNKCommand.isAvailableWhileLocked.getter(unint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;

  if (a1 < 0x16)
    return (0x3F6EFCu >> a1) & 1;
  if (one-time initialization token for default != -1)
    swift_once();
  v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)&static Log.default);
  v3 = Logger.logObject.getter();
  v4 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_1BD004000, v3, v4, "Unknown enum case", v5, 2u);
    MEMORY[0x1C3B751B8](v5, -1, -1);
  }

  return 0;
}

BOOL static CallStatus.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void *CallStatus.notFound.unsafeMutableAddressor()
{
  return &static CallStatus.notFound;
}

uint64_t static CallStatus.notFound.getter()
{
  return 6;
}

void CallStatus.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
  Hasher._combine(_:)(a2);
}

Swift::Int CallStatus.hashValue.getter(unsigned __int8 a1)
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1);
  return Hasher._finalize()();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance CallStatus(char *a1, char *a2)
{
  return static CallStatus.== infix(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance CallStatus()
{
  unsigned __int8 *v0;

  return CallStatus.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance CallStatus(uint64_t a1)
{
  unsigned __int8 *v1;

  CallStatus.hash(into:)(a1, *v1);
}

uint64_t TUCallStatus.init(_:)(uint64_t result)
{
  return result;
}

uint64_t CallStatus.init(_:)(uint64_t result)
{
  if (result >= 7)
  {
    result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t AnsweringMachineCallStatus.updateSource.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void AnsweringMachineCallStatus.updateSource.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  OUTLINED_FUNCTION_18();
}

uint64_t (*AnsweringMachineCallStatus.updateSource.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t AnsweringMachineCallStatus.callUUID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

void AnsweringMachineCallStatus.callUUID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  OUTLINED_FUNCTION_18();
}

uint64_t (*AnsweringMachineCallStatus.callUUID.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t AnsweringMachineCallStatus.status.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t AnsweringMachineCallStatus.status.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 32) = result;
  return result;
}

uint64_t (*AnsweringMachineCallStatus.status.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t AnsweringMachineCallStatus.isScreening.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 33);
}

uint64_t AnsweringMachineCallStatus.isScreening.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 33) = result;
  return result;
}

uint64_t (*AnsweringMachineCallStatus.isScreening.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t AnsweringMachineCallStatus.isScreeningDueToUserInteraction.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 34);
}

uint64_t AnsweringMachineCallStatus.isScreeningDueToUserInteraction.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 34) = result;
  return result;
}

uint64_t (*AnsweringMachineCallStatus.isScreeningDueToUserInteraction.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t AnsweringMachineCallStatus.callIsEligibleForScreening.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 35);
}

uint64_t AnsweringMachineCallStatus.callIsEligibleForScreening.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 35) = result;
  return result;
}

uint64_t (*AnsweringMachineCallStatus.callIsEligibleForScreening.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t AnsweringMachineCallStatus.streamToken.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t AnsweringMachineCallStatus.streamToken.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = result;
  return result;
}

uint64_t (*AnsweringMachineCallStatus.streamToken.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t AnsweringMachineCallStatus.announcementHasFinished.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t AnsweringMachineCallStatus.announcementHasFinished.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 48) = result;
  return result;
}

uint64_t (*AnsweringMachineCallStatus.announcementHasFinished.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t static AnsweringMachineCallStatus.notFound(updateSource:callUUID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(_QWORD *)a5 = a1;
  *(_QWORD *)(a5 + 8) = a2;
  *(_QWORD *)(a5 + 16) = a3;
  *(_QWORD *)(a5 + 24) = a4;
  *(_DWORD *)(a5 + 32) = 6;
  *(_QWORD *)(a5 + 40) = 0;
  *(_BYTE *)(a5 + 48) = 0;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void __swiftcall AnsweringMachineCallStatus.init(updateSource:callUUID:status:isScreening:isScreeningDueToUserInteraction:callIsEligibleForScreening:streamToken:announcementHasFinished:)(ConversationKit::AnsweringMachineCallStatus *__return_ptr retstr, Swift::String updateSource, Swift::String callUUID, ConversationKit::CallStatus status, Swift::Bool isScreening, Swift::Bool isScreeningDueToUserInteraction, Swift::Bool callIsEligibleForScreening, Swift::Int streamToken, Swift::Bool announcementHasFinished)
{
  retstr->updateSource = updateSource;
  retstr->callUUID = callUUID;
  retstr->status = status;
  retstr->isScreening = isScreening;
  retstr->isScreeningDueToUserInteraction = isScreeningDueToUserInteraction;
  retstr->callIsEligibleForScreening = callIsEligibleForScreening;
  retstr->streamToken = streamToken;
  retstr->announcementHasFinished = announcementHasFinished;
}

uint64_t AnsweringMachineCallStatus.description.getter()
{
  _BYTE *v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  Swift::String v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  Swift::String v18;
  Swift::String v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  Swift::String v23;
  Swift::String v24;
  Swift::String v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35[8];

  _StringGuts.grow(_:)(199);
  OUTLINED_FUNCTION_0_66(0xD000000000000029, (uint64_t)"AnsweringMachineCallStatus(updateSource: ");
  v1 = swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_40_11(v1, v2, v3, v4, v5, v6, v7, v8, v30, v32, 0);
  swift_bridgeObjectRelease();
  v9._countAndFlagsBits = 0x55556C6C6163202CLL;
  v9._object = (void *)0xEC000000203A4449;
  String.append(_:)(v9);
  v10 = swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_40_11(v10, v11, v12, v13, v14, v15, v16, v17, v31, v33, v34);
  swift_bridgeObjectRelease();
  v18._countAndFlagsBits = 0x737574617473202CLL;
  v18._object = (void *)0xEA0000000000203ALL;
  String.append(_:)(v18);
  _print_unlocked<A, B>(_:_:)();
  v19._countAndFlagsBits = 0x657263537369202CLL;
  v19._object = (void *)0xEF203A676E696E65;
  String.append(_:)(v19);
  if ((v0[33] & 1) != 0)
    v20 = 1702195828;
  else
    v20 = 0x65736C6166;
  OUTLINED_FUNCTION_1_53(v20);
  OUTLINED_FUNCTION_2_1();
  OUTLINED_FUNCTION_0_66(0xD000000000000021, (uint64_t)", screeningDueToUserInteraction: ");
  if ((v0[34] & 1) != 0)
    v21 = 1702195828;
  else
    v21 = 0x65736C6166;
  OUTLINED_FUNCTION_1_53(v21);
  OUTLINED_FUNCTION_2_1();
  OUTLINED_FUNCTION_0_66(0xD00000000000001ELL, (uint64_t)", callIsEligibleForScreening: ");
  if ((v0[35] & 1) != 0)
    v22 = 1702195828;
  else
    v22 = 0x65736C6166;
  OUTLINED_FUNCTION_1_53(v22);
  OUTLINED_FUNCTION_2_1();
  v23._countAndFlagsBits = 0x6D6165727473202CLL;
  v23._object = (void *)0xEF203A6E656B6F54;
  String.append(_:)(v23);
  v24._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v24);
  OUTLINED_FUNCTION_2_1();
  v25._object = (void *)0x80000001BD6758E0;
  v25._countAndFlagsBits = 0xD00000000000001BLL;
  String.append(_:)(v25);
  if ((v0[48] & 1) != 0)
    v26 = 1702195828;
  else
    v26 = 0x65736C6166;
  if ((v0[48] & 1) != 0)
    v27 = 0xE400000000000000;
  else
    v27 = 0xE500000000000000;
  v28 = v27;
  String.append(_:)(*(Swift::String *)&v26);
  swift_bridgeObjectRelease();
  return *(_QWORD *)v35;
}

unint64_t lazy protocol witness table accessor for type CallStatus and conformance CallStatus()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type CallStatus and conformance CallStatus;
  if (!lazy protocol witness table cache variable for type CallStatus and conformance CallStatus)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for CallStatus, &type metadata for CallStatus);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CallStatus and conformance CallStatus);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CallStatus(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1BD1484E4 + 4 * byte_1BD64B7C5[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1BD148518 + 4 * byte_1BD64B7C0[v4]))();
}

uint64_t sub_1BD148518(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD148520(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD148528);
  return result;
}

uint64_t sub_1BD148534(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD14853CLL);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1BD148540(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD148548(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CallStatus()
{
  return &type metadata for CallStatus;
}

uint64_t destroy for AnsweringMachineCallStatus()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AnsweringMachineCallStatus(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AnsweringMachineCallStatus(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_BYTE *)(a1 + 34) = *(_BYTE *)(a2 + 34);
  *(_BYTE *)(a1 + 35) = *(_BYTE *)(a2 + 35);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for AnsweringMachineCallStatus(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_BYTE *)(a1 + 34) = *(_BYTE *)(a2 + 34);
  *(_BYTE *)(a1 + 35) = *(_BYTE *)(a2 + 35);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for AnsweringMachineCallStatus(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 49))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AnsweringMachineCallStatus(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 49) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AnsweringMachineCallStatus()
{
  return &type metadata for AnsweringMachineCallStatus;
}

uint64_t static AmbientState.isPresented.getter()
{
  OUTLINED_FUNCTION_2_0();
  return static AmbientState.isPresented;
}

uint64_t static AmbientState.isPresented.setter(char a1)
{
  uint64_t result;

  result = OUTLINED_FUNCTION_2_0();
  static AmbientState.isPresented = a1;
  return result;
}

uint64_t (*static AmbientState.isPresented.modify())()
{
  OUTLINED_FUNCTION_2_0();
  return CallRecordingPillViewController.cancellable.modify;
}

uint64_t AmbientState.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t AmbientState.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t AmbientState.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t AmbientState.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t type metadata accessor for AmbientState()
{
  return objc_opt_self();
}

uint64_t method lookup function for AmbientState()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AmbientState.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

void *LinkDetailHeaderView.ElementKind.unsafeMutableAddressor()
{
  return &static LinkDetailHeaderView.ElementKind;
}

unint64_t static LinkDetailHeaderView.ElementKind.getter()
{
  return 0xD00000000000001FLL;
}

uint64_t key path getter for LinkDetailHeaderView.invitedMemberHandles : LinkDetailHeaderView@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x88))();
  *a2 = result;
  return result;
}

uint64_t LinkDetailHeaderView.invitedMemberHandles.getter()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  OUTLINED_FUNCTION_29_3();
  OUTLINED_FUNCTION_11_0();
  swift_release();
  return v1;
}

void sub_1BD148990(_QWORD **a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x88))();
  OUTLINED_FUNCTION_0();
}

uint64_t LinkDetailHeaderView.invitedMemberHandles.setter()
{
  void *v0;
  id v1;

  swift_getKeyPath();
  swift_getKeyPath();
  v1 = v0;
  return static Published.subscript.setter();
}

void LinkDetailHeaderView.invitedMemberHandles.modify()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t KeyPath;

  v1 = OUTLINED_FUNCTION_45();
  *v0 = v1;
  v1[4] = swift_getKeyPath();
  KeyPath = swift_getKeyPath();
  v1[6] = OUTLINED_FUNCTION_19_4(KeyPath);
  OUTLINED_FUNCTION_18();
}

uint64_t key path setter for LinkDetailHeaderView.$invitedMemberHandles : LinkDetailHeaderView(uint64_t a1, _QWORD **a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Set<TUHandle>?>.Publisher);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  return (*(uint64_t (**)(char *))((*MEMORY[0x1E0DEEDD8] & **a2) + 0xA8))(v6);
}

uint64_t LinkDetailHeaderView.$invitedMemberHandles.getter()
{
  return LinkDetailHeaderView.$invitedMemberHandles.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit20LinkDetailHeaderView__invitedMemberHandles, &demangling cache variable for type metadata for Published<Set<TUHandle>?>);
}

uint64_t LinkDetailHeaderView.$invitedMemberHandles.setter(uint64_t a1)
{
  return LinkDetailHeaderView.$invitedMemberHandles.setter(a1, &demangling cache variable for type metadata for Published<Set<TUHandle>?>.Publisher, (uint64_t)&OBJC_IVAR____TtC15ConversationKit20LinkDetailHeaderView__invitedMemberHandles, &demangling cache variable for type metadata for Published<Set<TUHandle>?>);
}

void LinkDetailHeaderView.$invitedMemberHandles.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  void *v4;

  v2 = OUTLINED_FUNCTION_46_17();
  *v0 = v2;
  v2[3] = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Set<TUHandle>?>.Publisher);
  v4 = OUTLINED_FUNCTION_15_3(v3);
  v2[7] = OUTLINED_FUNCTION_53_1((uint64_t)v4);
  OUTLINED_FUNCTION_60_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Set<TUHandle>?>);
  Published.projectedValue.getter();
  swift_endAccess();
  OUTLINED_FUNCTION_18();
}

void LinkDetailHeaderView.$invitedMemberHandles.modify(uint64_t a1, char a2)
{
  LinkDetailHeaderView.$invitedMemberHandles.modify(a1, a2, (void (*)(void *))LinkDetailHeaderView.$invitedMemberHandles.setter);
}

uint64_t key path getter for LinkDetailHeaderView.title : LinkDetailHeaderView@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0xB8))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t key path setter for LinkDetailHeaderView.title : LinkDetailHeaderView(uint64_t *a1, _QWORD **a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0xC0);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t LinkDetailHeaderView.title.getter()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  OUTLINED_FUNCTION_29_3();
  OUTLINED_FUNCTION_11_0();
  swift_release();
  return v1;
}

void sub_1BD148CE0(_QWORD **a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  *a2 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0xB8))();
  a2[1] = v3;
  OUTLINED_FUNCTION_0();
}

uint64_t LinkDetailHeaderView.title.setter()
{
  void *v0;
  id v1;

  OUTLINED_FUNCTION_22_34();
  swift_getKeyPath();
  swift_getKeyPath();
  v1 = v0;
  return static Published.subscript.setter();
}

void LinkDetailHeaderView.title.modify()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t KeyPath;

  v1 = OUTLINED_FUNCTION_45();
  *v0 = v1;
  v1[4] = swift_getKeyPath();
  KeyPath = swift_getKeyPath();
  v1[6] = OUTLINED_FUNCTION_19_4(KeyPath);
  OUTLINED_FUNCTION_18();
}

void LinkDetailHeaderView.invitedMemberHandles.modify(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 48))(*a1, 0);
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_11_0();
  free(v1);
}

uint64_t key path setter for LinkDetailHeaderView.$title : LinkDetailHeaderView(uint64_t a1, _QWORD **a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String?>.Publisher);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  return (*(uint64_t (**)(char *))((*MEMORY[0x1E0DEEDD8] & **a2) + 0xD8))(v6);
}

uint64_t LinkDetailHeaderView.$title.getter()
{
  return LinkDetailHeaderView.$invitedMemberHandles.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit20LinkDetailHeaderView__title, (uint64_t *)&demangling cache variable for type metadata for Published<String?>);
}

uint64_t LinkDetailHeaderView.$invitedMemberHandles.getter(uint64_t a1, uint64_t *a2)
{
  OUTLINED_FUNCTION_60_0();
  __swift_instantiateConcreteTypeFromMangledName(a2);
  Published.projectedValue.getter();
  return OUTLINED_FUNCTION_25_29();
}

uint64_t LinkDetailHeaderView.$title.setter(uint64_t a1)
{
  return LinkDetailHeaderView.$invitedMemberHandles.setter(a1, &demangling cache variable for type metadata for Published<String?>.Publisher, (uint64_t)&OBJC_IVAR____TtC15ConversationKit20LinkDetailHeaderView__title, (uint64_t *)&demangling cache variable for type metadata for Published<String?>);
}

uint64_t LinkDetailHeaderView.$invitedMemberHandles.setter(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;

  v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_0_7();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v4, a1, v7);
  OUTLINED_FUNCTION_60_0();
  __swift_instantiateConcreteTypeFromMangledName(a4);
  Published.projectedValue.setter();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
}

void LinkDetailHeaderView.$title.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  void *v4;

  v2 = OUTLINED_FUNCTION_46_17();
  *v0 = v2;
  v2[3] = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String?>.Publisher);
  v4 = OUTLINED_FUNCTION_15_3(v3);
  v2[7] = OUTLINED_FUNCTION_53_1((uint64_t)v4);
  OUTLINED_FUNCTION_60_0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<String?>);
  Published.projectedValue.getter();
  swift_endAccess();
  OUTLINED_FUNCTION_18();
}

void LinkDetailHeaderView.$title.modify(uint64_t a1, char a2)
{
  LinkDetailHeaderView.$invitedMemberHandles.modify(a1, a2, (void (*)(void *))LinkDetailHeaderView.$title.setter);
}

void LinkDetailHeaderView.$invitedMemberHandles.modify(uint64_t a1, char a2, void (*a3)(void *))
{
  _QWORD *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD **)a1;
  v5 = *(void **)(*(_QWORD *)a1 + 48);
  v6 = *(void **)(*(_QWORD *)a1 + 56);
  if ((a2 & 1) != 0)
  {
    v7 = v4[4];
    v8 = v4[5];
    (*(void (**)(_QWORD, void *, uint64_t))(v8 + 16))(*(_QWORD *)(*(_QWORD *)a1 + 48), v6, v7);
    a3(v5);
    (*(void (**)(void *, uint64_t))(v8 + 8))(v6, v7);
  }
  else
  {
    a3(*(void **)(*(_QWORD *)a1 + 56));
  }
  free(v6);
  free(v5);
  free(v4);
}

uint64_t *LinkDetailHeaderView.Layout.estimatedHeight.unsafeMutableAddressor()
{
  if (one-time initialization token for estimatedHeight != -1)
    swift_once();
  return &static LinkDetailHeaderView.Layout.estimatedHeight;
}

double static LinkDetailHeaderView.Layout.estimatedHeight.getter()
{
  return static SystemApertureConstants.sensorRegionHeight.getter(&one-time initialization token for estimatedHeight, (uint64_t)&static LinkDetailHeaderView.Layout.estimatedHeight);
}

void one-time initialization function for imageDiameter()
{
  static LinkDetailHeaderView.Layout.imageDiameter = 0x4056800000000000;
}

uint64_t *LinkDetailHeaderView.Layout.imageDiameter.unsafeMutableAddressor()
{
  if (one-time initialization token for imageDiameter != -1)
    swift_once();
  return &static LinkDetailHeaderView.Layout.imageDiameter;
}

double static LinkDetailHeaderView.Layout.imageDiameter.getter()
{
  return static SystemApertureConstants.sensorRegionHeight.getter(&one-time initialization token for imageDiameter, (uint64_t)&static LinkDetailHeaderView.Layout.imageDiameter);
}

void *LinkDetailHeaderView.Layout.linkDetailImageToLinkLabelVerticalPadding.unsafeMutableAddressor()
{
  return &static LinkDetailHeaderView.Layout.linkDetailImageToLinkLabelVerticalPadding;
}

double static LinkDetailHeaderView.Layout.linkDetailImageToLinkLabelVerticalPadding.getter()
{
  return 10.0;
}

void one-time initialization function for linkLabelToCollectionViewVerticalPadding()
{
  static LinkDetailHeaderView.Layout.linkLabelToCollectionViewVerticalPadding = 0x4044000000000000;
}

uint64_t *LinkDetailHeaderView.Layout.linkLabelToCollectionViewVerticalPadding.unsafeMutableAddressor()
{
  if (one-time initialization token for linkLabelToCollectionViewVerticalPadding != -1)
    swift_once();
  return &static LinkDetailHeaderView.Layout.linkLabelToCollectionViewVerticalPadding;
}

double static LinkDetailHeaderView.Layout.linkLabelToCollectionViewVerticalPadding.getter()
{
  return static SystemApertureConstants.sensorRegionHeight.getter(&one-time initialization token for linkLabelToCollectionViewVerticalPadding, (uint64_t)&static LinkDetailHeaderView.Layout.linkLabelToCollectionViewVerticalPadding);
}

void one-time initialization function for titleEdgeInset()
{
  static LinkDetailHeaderView.Layout.titleEdgeInset = 0x4030000000000000;
}

uint64_t *LinkDetailHeaderView.Layout.titleEdgeInset.unsafeMutableAddressor()
{
  if (one-time initialization token for titleEdgeInset != -1)
    swift_once();
  return &static LinkDetailHeaderView.Layout.titleEdgeInset;
}

double static LinkDetailHeaderView.Layout.titleEdgeInset.getter()
{
  return static SystemApertureConstants.sensorRegionHeight.getter(&one-time initialization token for titleEdgeInset, (uint64_t)&static LinkDetailHeaderView.Layout.titleEdgeInset);
}

void LinkDetailHeaderView.avatarController.setter(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit20LinkDetailHeaderView_avatarController);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit20LinkDetailHeaderView_avatarController) = a1;

}

id LinkDetailHeaderView.linkLabel.getter()
{
  return LinkDetailHeaderView.linkLabel.getter(&OBJC_IVAR____TtC15ConversationKit20LinkDetailHeaderView____lazy_storage___linkLabel, (uint64_t (*)(void))closure #1 in LinkDetailHeaderView.linkLabel.getter);
}

id closure #1 in LinkDetailHeaderView.linkLabel.getter()
{
  id v0;
  id v1;
  void *v2;
  id v3;
  id v4;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  v1 = objc_msgSend((id)objc_opt_self(), sel__preferredFontForTextStyle_weight_, *MEMORY[0x1E0DC4B50], *MEMORY[0x1E0DC1420]);
  objc_msgSend(v0, sel_setFont_, v1);

  objc_msgSend(v0, sel_setTextAlignment_, 1);
  v2 = (void *)objc_opt_self();
  v3 = v0;
  v4 = objc_msgSend(v2, sel_labelColor);
  objc_msgSend(v3, sel_setTintColor_, v4);

  objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v3, sel_setNumberOfLines_, 2);
  return v3;
}

id LinkDetailHeaderView.linkDetailImage.getter()
{
  return LinkDetailHeaderView.linkLabel.getter(&OBJC_IVAR____TtC15ConversationKit20LinkDetailHeaderView____lazy_storage___linkDetailImage, (uint64_t (*)(void))closure #1 in LinkDetailHeaderView.linkDetailImage.getter);
}

id LinkDetailHeaderView.linkLabel.getter(uint64_t *a1, uint64_t (*a2)(void))
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;

  v3 = *a1;
  v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    v5 = *(id *)(v2 + *a1);
  }
  else
  {
    v6 = (void *)a2();
    v7 = *(void **)(v2 + v3);
    *(_QWORD *)(v2 + v3) = v6;
    v5 = v6;

    v4 = 0;
  }
  v8 = v4;
  return v5;
}

id closure #1 in LinkDetailHeaderView.linkDetailImage.getter()
{
  id v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  double v7;
  double v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  Class isa;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_init);
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v1 = objc_msgSend(v0, sel_layer);
  if (one-time initialization token for imageDiameter != -1)
    swift_once();
  objc_msgSend(v1, sel_setCornerRadius_, *(double *)&static LinkDetailHeaderView.Layout.imageDiameter * 0.5);

  v2 = objc_msgSend((id)objc_opt_self(), sel_effectWithStyle_, 8);
  v3 = objc_msgSend((id)objc_opt_self(), sel_effectForBlurEffect_style_, v2, 6);

  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F58]), sel_initWithEffect_, v3);
  objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v5 = objc_msgSend(v4, sel_layer);
  v6 = objc_msgSend(v0, sel_layer);
  objc_msgSend(v6, sel_cornerRadius);
  v8 = v7;

  objc_msgSend(v5, sel_setCornerRadius_, v8);
  objc_msgSend(v4, sel_setClipsToBounds_, 1);
  v9 = objc_msgSend(v4, sel_contentView);
  v10 = (void *)objc_opt_self();
  v11 = objc_msgSend(v10, sel_whiteColor);
  objc_msgSend(v9, sel_setBackgroundColor_, v11);

  objc_msgSend(v0, sel_addSubview_, v4);
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  v12 = objc_msgSend((id)objc_opt_self(), sel_configurationWithTextStyle_, *MEMORY[0x1E0DC4B50]);
  @nonobjc UIImage.__allocating_init(systemName:withConfiguration:)(1802398060, 0xE400000000000000, v12);
  v14 = v13;
  v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_initWithImage_, v13);

  objc_msgSend(v15, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v16 = objc_msgSend(v10, sel_whiteColor);
  objc_msgSend(v15, sel_setTintColor_, v16);

  objc_msgSend(v0, sel_addSubview_, v15);
  v17 = (void *)objc_opt_self();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1BD64B8D0;
  v19 = objc_msgSend(v4, sel_topAnchor);
  v20 = objc_msgSend(v0, sel_topAnchor);
  v21 = objc_msgSend(v19, sel_constraintEqualToAnchor_, v20);

  *(_QWORD *)(v18 + 32) = v21;
  v22 = objc_msgSend(v4, sel_bottomAnchor);
  v23 = objc_msgSend(v0, sel_bottomAnchor);
  v24 = objc_msgSend(v22, sel_constraintEqualToAnchor_, v23);

  *(_QWORD *)(v18 + 40) = v24;
  v25 = objc_msgSend(v4, sel_leadingAnchor);
  v26 = objc_msgSend(v0, sel_leadingAnchor);
  v27 = objc_msgSend(v25, sel_constraintEqualToAnchor_, v26);

  *(_QWORD *)(v18 + 48) = v27;
  v28 = objc_msgSend(v4, sel_trailingAnchor);
  v29 = objc_msgSend(v0, sel_trailingAnchor);
  v30 = objc_msgSend(v28, sel_constraintEqualToAnchor_, v29);

  *(_QWORD *)(v18 + 56) = v30;
  v31 = objc_msgSend(v15, sel_centerXAnchor);
  v32 = objc_msgSend(v0, sel_centerXAnchor);
  v33 = objc_msgSend(v31, sel_constraintEqualToAnchor_, v32);

  *(_QWORD *)(v18 + 64) = v33;
  v34 = objc_msgSend(v15, sel_centerYAnchor);
  v35 = objc_msgSend(v0, sel_centerYAnchor);
  v36 = objc_msgSend(v34, sel_constraintEqualToAnchor_, v35);

  *(_QWORD *)(v18 + 72) = v36;
  v37 = objc_msgSend(v0, sel_widthAnchor);
  v38 = objc_msgSend(v37, sel_constraintEqualToConstant_, *(double *)&static LinkDetailHeaderView.Layout.imageDiameter);

  *(_QWORD *)(v18 + 80) = v38;
  v39 = objc_msgSend(v0, sel_heightAnchor);
  v40 = objc_msgSend(v39, sel_constraintEqualToConstant_, *(double *)&static LinkDetailHeaderView.Layout.imageDiameter);

  *(_QWORD *)(v18 + 88) = v40;
  specialized Array._endMutation()();
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v17, sel_activateConstraints_, isa);

  return v0;
}

id LinkDetailHeaderView.__allocating_init(frame:)()
{
  Class v0;
  id v1;
  double v2;
  id v3;
  SEL v4;

  OUTLINED_FUNCTION_17_7();
  v1 = objc_allocWithZone(v0);
  v2 = OUTLINED_FUNCTION_15_0();
  return objc_msgSend(v3, v4, v2);
}

_QWORD *LinkDetailHeaderView.init(frame:)()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  objc_super *v13;
  SEL v14;
  _QWORD *v15;
  void (*v16)(void);
  _QWORD *v17;
  unint64_t v18;
  unint64_t v20;
  uint64_t v21;

  OUTLINED_FUNCTION_17_7();
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<String?>);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_4_1();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Set<TUHandle>?>);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_0_7();
  v7 = &v0[OBJC_IVAR____TtC15ConversationKit20LinkDetailHeaderView__invitedMemberHandles];
  v8 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Set<TUHandle>?);
  Published.init(initialValue:)();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v7, v2, v5);
  v9 = &v8[OBJC_IVAR____TtC15ConversationKit20LinkDetailHeaderView__title];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for String?);
  Published.init(initialValue:)();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v9, v1, v3);
  v10 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v8[OBJC_IVAR____TtC15ConversationKit20LinkDetailHeaderView_cancellables] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v8[OBJC_IVAR____TtC15ConversationKit20LinkDetailHeaderView_avatarController] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC15ConversationKit20LinkDetailHeaderView____lazy_storage___linkLabel] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC15ConversationKit20LinkDetailHeaderView____lazy_storage___linkDetailImage] = 0;
  v11 = OBJC_IVAR____TtC15ConversationKit20LinkDetailHeaderView_constraintsForAvatarViewVisible;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [NSLayoutConstraint]);
  *(_QWORD *)&v8[v11] = Dictionary.init(dictionaryLiteral:)();

  v21 = type metadata accessor for LinkDetailHeaderView();
  v12 = OUTLINED_FUNCTION_15_0();
  v15 = objc_msgSendSuper2(v13, v14, v12, v8, v21, 0, 0);
  v16 = *(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v15) + 0x160);
  v17 = v15;
  v16();
  LinkDetailHeaderView.setupDisplayProperties()();
  if ((v10 & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter())
  {
    specialized Set.init(_nonEmptyArrayLiteral:)(MEMORY[0x1E0DEE9D8]);
    v18 = v20;
  }
  else
  {
    v18 = MEMORY[0x1E0DEE9E8];
  }
  LinkDetailHeaderView.populateHeaderImage(with:)(v18);

  swift_bridgeObjectRelease();
  return v17;
}

uint64_t type metadata accessor for LinkDetailHeaderView()
{
  uint64_t result;

  result = type metadata singleton initialization cache for LinkDetailHeaderView;
  if (!type metadata singleton initialization cache for LinkDetailHeaderView)
    return swift_getSingletonMetadata();
  return result;
}

id LinkDetailHeaderView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void LinkDetailHeaderView.init(coder:)()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  _QWORD v11[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<String?>);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_4_1();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Set<TUHandle>?>);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = &v0[OBJC_IVAR____TtC15ConversationKit20LinkDetailHeaderView__invitedMemberHandles];
  v11[0] = 0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Set<TUHandle>?);
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v7, v4);
  v9 = &v0[OBJC_IVAR____TtC15ConversationKit20LinkDetailHeaderView__title];
  v11[0] = 0;
  v11[1] = 0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for String?);
  Published.init(initialValue:)();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v9, v1, v2);
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit20LinkDetailHeaderView_cancellables] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit20LinkDetailHeaderView_avatarController] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit20LinkDetailHeaderView____lazy_storage___linkLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit20LinkDetailHeaderView____lazy_storage___linkDetailImage] = 0;
  v10 = OBJC_IVAR____TtC15ConversationKit20LinkDetailHeaderView_constraintsForAvatarViewVisible;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [NSLayoutConstraint]);
  *(_QWORD *)&v0[v10] = Dictionary.init(dictionaryLiteral:)();

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Void __swiftcall LinkDetailHeaderView.setupViews()()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  __n128 *v20;
  id v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  id v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  id v33;
  id v34;
  void *v35;
  id v36;
  id v37;
  uint64_t v38;
  id v39;
  id v40;

  v1 = v0;
  v2 = LinkDetailHeaderView.linkDetailImage.getter();
  OUTLINED_FUNCTION_4_24((uint64_t)v2, sel_addSubview_);

  v3 = LinkDetailHeaderView.linkLabel.getter();
  OUTLINED_FUNCTION_4_24((uint64_t)v3, sel_addSubview_);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v4 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v4 + 16) = xmmword_1BD644B60;
  v5 = LinkDetailHeaderView.linkDetailImage.getter();
  v6 = OUTLINED_FUNCTION_49_19(v5);

  v8 = OUTLINED_FUNCTION_123(v7, sel_safeAreaLayoutGuide);
  v9 = OUTLINED_FUNCTION_49_19(v8);

  v10 = objc_msgSend(v6, sel_constraintEqualToAnchor_, v9);
  OUTLINED_FUNCTION_4_39();

  *(_QWORD *)(v4 + 32) = v8;
  v11 = objc_msgSend(LinkDetailHeaderView.linkDetailImage.getter(), sel_centerXAnchor);
  OUTLINED_FUNCTION_4_39();
  v13 = OUTLINED_FUNCTION_123(v12, sel_centerXAnchor);
  v14 = objc_msgSend(v8, sel_constraintEqualToAnchor_, v13);

  *(_QWORD *)(v4 + 40) = v14;
  v15 = LinkDetailHeaderView.linkLabel.getter();
  v16 = OUTLINED_FUNCTION_49_19(v15);
  OUTLINED_FUNCTION_4_39();
  v17 = objc_msgSend(LinkDetailHeaderView.linkDetailImage.getter(), sel_bottomAnchor);
  OUTLINED_FUNCTION_10_20();
  v18 = objc_msgSend(v8, sel_constraintEqualToAnchor_constant_, v14, 10.0);

  *(_QWORD *)(v4 + 48) = v18;
  specialized Array._endMutation()();
  OUTLINED_FUNCTION_60_0();
  specialized Dictionary._Variant.setValue(_:forKey:)();
  OUTLINED_FUNCTION_25_29();
  v19 = (void *)objc_opt_self();
  v20 = (__n128 *)OUTLINED_FUNCTION_15();
  v21 = objc_msgSend(OUTLINED_FUNCTION_51_17(v20, (__n128)xmmword_1BD644140), sel_centerXAnchor);
  OUTLINED_FUNCTION_10_20();
  v23 = OUTLINED_FUNCTION_123(v22, sel_centerXAnchor);
  v24 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v23);
  OUTLINED_FUNCTION_8_10();

  v20[2].n128_u64[0] = (unint64_t)&selRef_associatedAppBundleIdentifier;
  v25 = LinkDetailHeaderView.linkLabel.getter();
  v26 = OUTLINED_FUNCTION_38_20(v25);
  OUTLINED_FUNCTION_13_44();
  v28 = OUTLINED_FUNCTION_123(v27, sel_leadingAnchor);
  if (one-time initialization token for titleEdgeInset != -1)
    swift_once();
  v29 = objc_msgSend(v1, sel_constraintGreaterThanOrEqualToAnchor_constant_, v28, *(double *)&static LinkDetailHeaderView.Layout.titleEdgeInset);
  OUTLINED_FUNCTION_16_25();

  v20[2].n128_u64[1] = (unint64_t)&selRef_associatedAppBundleIdentifier;
  v30 = LinkDetailHeaderView.linkLabel.getter();
  v31 = OUTLINED_FUNCTION_33_19(v30);
  OUTLINED_FUNCTION_10_20();
  v33 = OUTLINED_FUNCTION_123(v32, (const char *)&selRef_setDateFormat_);
  v34 = objc_msgSend(v28, sel_constraintLessThanOrEqualToAnchor_constant_, v33, -*(double *)&static LinkDetailHeaderView.Layout.titleEdgeInset);
  OUTLINED_FUNCTION_8_10();

  v20[3].n128_u64[0] = (unint64_t)&selRef_associatedAppBundleIdentifier;
  v35 = v1;
  v36 = LinkDetailHeaderView.linkLabel.getter();
  v37 = objc_msgSend(v36, sel_bottomAnchor);
  OUTLINED_FUNCTION_13_44();
  v39 = OUTLINED_FUNCTION_123(v38, sel_bottomAnchor);
  if (one-time initialization token for linkLabelToCollectionViewVerticalPadding != -1)
    swift_once();
  v40 = objc_msgSend(v35, sel_constraintEqualToAnchor_constant_, v39, -*(double *)&static LinkDetailHeaderView.Layout.linkLabelToCollectionViewVerticalPadding);
  OUTLINED_FUNCTION_10_20();

  v20[3].n128_u64[1] = (unint64_t)v36;
  OUTLINED_FUNCTION_36_26();
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  Array._bridgeToObjectiveC()();
  OUTLINED_FUNCTION_7_15();
  objc_msgSend(v19, sel_activateConstraints_, v35);

  OUTLINED_FUNCTION_60_0();
  specialized Dictionary._Variant.setValue(_:forKey:)();
  OUTLINED_FUNCTION_25_29();
  OUTLINED_FUNCTION_8_0();
}

uint64_t LinkDetailHeaderView.setupDisplayProperties()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Set<TUHandle>?>.Publisher);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_4_1();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String?>.Publisher);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))(v6);
  OUTLINED_FUNCTION_15();
  swift_unknownObjectWeakInit();
  lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type Published<String?>.Publisher and conformance Published<A>.Publisher, &demangling cache variable for type metadata for Published<String?>.Publisher, MEMORY[0x1E0C96190]);
  Publisher<>.sink(receiveValue:)();
  OUTLINED_FUNCTION_52_14();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  OUTLINED_FUNCTION_60_0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [AnyCancellable]);
  lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(lazy protocol witness table cache variable for type [AnyCancellable] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [AnyCancellable], MEMORY[0x1E0DEAF58]);
  OUTLINED_FUNCTION_31_30();
  swift_endAccess();
  v9 = OUTLINED_FUNCTION_43();
  (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))(v9);
  OUTLINED_FUNCTION_15();
  swift_unknownObjectWeakInit();
  lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>((unint64_t *)&lazy protocol witness table cache variable for type Published<Set<TUHandle>?>.Publisher and conformance Published<A>.Publisher, &demangling cache variable for type metadata for Published<Set<TUHandle>?>.Publisher, MEMORY[0x1E0C96190]);
  Publisher<>.sink(receiveValue:)();
  OUTLINED_FUNCTION_52_14();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  OUTLINED_FUNCTION_60_0();
  OUTLINED_FUNCTION_31_30();
  swift_endAccess();
  return OUTLINED_FUNCTION_43();
}

void closure #1 in LinkDetailHeaderView.setupDisplayProperties()(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;

  v2 = *a1;
  v3 = a1[1];
  v4 = a2 + 16;
  swift_beginAccess();
  v5 = MEMORY[0x1C3B752C0](v4);
  if (v5)
  {
    v6 = (void *)v5;
    v7 = LinkDetailHeaderView.linkLabel.getter();
    if (v3)
      v8 = (void *)MEMORY[0x1C3B72E00](v2, v3);
    else
      v8 = 0;
    objc_msgSend(v7, sel_setText_, v8);

  }
}

void closure #2 in LinkDetailHeaderView.setupDisplayProperties()(unint64_t *a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1C3B752C0](v3);
  if (v4)
  {
    v5 = (void *)v4;
    if (v2)
      LinkDetailHeaderView.populateHeaderImage(with:)(v2);

  }
}

void LinkDetailHeaderView.populateHeaderImage(with:)(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  uint64_t v5;
  Class isa;
  uint64_t v7;
  Class v8;
  id v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  void *v14;
  _QWORD *v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  uint64_t v23;
  unint64_t v24;
  int64_t v25;
  id v26;
  unint64_t v27;
  int64_t v28;
  id v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  void *v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  void *v43;
  uint64_t v44;
  void *v45;
  id v46;
  void *v47;
  id v48;
  void *v49;
  id v50;
  void *v51;
  uint64_t *v52;
  uint64_t v53;
  char v54;
  void *v55;
  Class v56;
  uint64_t v57;
  Class v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  void *v62;
  id v63[6];

  v2 = v1;
  v63[5] = *(id *)MEMORY[0x1E0C80C00];
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97298]), sel_init);
  v5 = OUTLINED_FUNCTION_25_2();
  specialized _copyCollectionToContiguousArray<A>(_:)(v5);
  swift_bridgeObjectRelease();
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
  isa = Array._bridgeToObjectiveC()().super.isa;
  OUTLINED_FUNCTION_43();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v7 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v7 + 16) = xmmword_1BD6443F0;
  *(_QWORD *)(v7 + 32) = objc_msgSend((id)objc_opt_self(), sel_descriptorForRequiredKeys);
  specialized Array._endMutation()();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for CNKeyDescriptor);
  v8 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v63[0] = 0;
  v9 = objc_msgSend(v4, sel_tu_contactsForHandles_keyDescriptors_error_, isa, v8, v63);

  v10 = v63[0];
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [CNContact]);
    lazy protocol witness table accessor for type TUHandle and conformance NSObject();
    v11 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
    v12 = v10;

  }
  else
  {
    v13 = v63[0];
    v14 = (void *)_convertNSErrorToError(_:)();

    swift_willThrow();
    v11 = 0;
  }
  v59 = 0;
  v61 = MEMORY[0x1E0DEE9D8];
  v60 = v2;
  if ((a1 & 0xC000000000000001) != 0)
  {
    OUTLINED_FUNCTION_25_2();
    __CocoaSet.makeIterator()();
    lazy protocol witness table accessor for type TUHandle and conformance NSObject();
    Set.Iterator.init(_cocoa:)();
    a1 = (unint64_t)v63[0];
    v15 = v63[1];
    v16 = (uint64_t)v63[2];
    v17 = (int64_t)v63[3];
    v18 = (unint64_t)v63[4];
  }
  else
  {
    v19 = -1 << *(_BYTE *)(a1 + 32);
    v15 = (_QWORD *)(a1 + 56);
    v16 = ~v19;
    v20 = -v19;
    if (v20 < 64)
      v21 = ~(-1 << v20);
    else
      v21 = -1;
    v18 = v21 & *(_QWORD *)(a1 + 56);
    OUTLINED_FUNCTION_25_2();
    v17 = 0;
  }
  v22 = (unint64_t)(v16 + 64) >> 6;
  if ((a1 & 0x8000000000000000) != 0)
    goto LABEL_13;
LABEL_11:
  if (v18)
  {
    v23 = (v18 - 1) & v18;
    v24 = __clz(__rbit64(v18)) | (v17 << 6);
    v25 = v17;
LABEL_25:
    v26 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v24);
    if (v26)
    {
      while (1)
      {
        if (!v11 || !*(_QWORD *)(v11 + 16))
          goto LABEL_47;
        OUTLINED_FUNCTION_8_8();
        v29 = v26;
        specialized __RawDictionaryStorage.find<A>(_:)();
        if ((v31 & 1) == 0)
          break;
        v32 = *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v30);
        swift_bridgeObjectRetain();

        OUTLINED_FUNCTION_2_1();
        if ((unint64_t)v32 >> 62)
        {
          if (v32 < 0)
            v33 = (void *)v32;
          else
            v33 = (void *)(v32 & 0xFFFFFFFFFFFFFF8);
          swift_bridgeObjectRetain();
          _CocoaArrayWrapper.endIndex.getter();
          OUTLINED_FUNCTION_7_15();
          if (!v33)
            goto LABEL_46;
        }
        else
        {
          v33 = *(void **)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (!v33)
            goto LABEL_46;
        }
        if ((v32 & 0xC000000000000001) != 0)
        {
          MEMORY[0x1C3B73D18](0, v32);
        }
        else
        {
          if (!*(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_68;
          v34 = *(id *)(v32 + 32);
        }
        OUTLINED_FUNCTION_7_15();
        v35 = v33;
LABEL_48:
        v43 = v35;
        MEMORY[0x1C3B7301C](v35);
        if (*(_QWORD *)((v61 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v61 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();

        v17 = v25;
        v18 = v23;
        if ((a1 & 0x8000000000000000) == 0)
          goto LABEL_11;
LABEL_13:
        if (__CocoaSet.Iterator.next()())
        {
          swift_unknownObjectRetain();
          swift_dynamicCast();
          v26 = v62;
          swift_unknownObjectRelease();
          v25 = v17;
          v23 = v18;
          if (v62)
            continue;
        }
        goto LABEL_53;
      }

LABEL_46:
      swift_bridgeObjectRelease();
LABEL_47:
      _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for CNContact);
      v37 = outlined bridged method (pb) of @objc TUHandle.normalizedValue.getter(v26);
      v39 = v38;
      v40 = outlined bridged method (pb) of @objc TUHandle.normalizedValue.getter(v26);
      @nonobjc CNContact.init(displayName:emailOrPhoneNumber:)(v37, v39, v40, v41);
      v35 = v42;
      goto LABEL_48;
    }
    goto LABEL_53;
  }
  v25 = v17 + 1;
  if (__OFADD__(v17, 1))
  {
    __break(1u);
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
  if (v25 < v22)
  {
    v27 = v15[v25];
    if (!v27)
    {
      v28 = v17 + 2;
      if (v17 + 2 >= v22)
        goto LABEL_53;
      v27 = v15[v28];
      if (v27)
        goto LABEL_23;
      v28 = v17 + 3;
      if (v17 + 3 >= v22)
        goto LABEL_53;
      v27 = v15[v28];
      if (v27)
      {
LABEL_23:
        v25 = v28;
      }
      else
      {
        v25 = v17 + 4;
        if (v17 + 4 >= v22)
          goto LABEL_53;
        v27 = v15[v25];
        if (!v27)
        {
          v36 = v17 + 5;
          do
          {
            if (v36 >= v22)
              goto LABEL_53;
            v27 = v15[v36++];
          }
          while (!v27);
          v25 = v36 - 1;
        }
      }
    }
    v23 = (v27 - 1) & v27;
    v24 = __clz(__rbit64(v27)) + (v25 << 6);
    goto LABEL_25;
  }
LABEL_53:
  outlined consume of [String : Application].Iterator._Variant();
  OUTLINED_FUNCTION_2_1();
  if (!(v61 >> 62))
  {
    v44 = *(_QWORD *)((v61 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_55;
  }
LABEL_69:
  OUTLINED_FUNCTION_8_8();
  v44 = _CocoaArrayWrapper.endIndex.getter();
  OUTLINED_FUNCTION_2_1();
LABEL_55:
  if (v44 < 1)
  {
    v49 = *(void **)(v60 + OBJC_IVAR____TtC15ConversationKit20LinkDetailHeaderView_avatarController);
    if (v49)
    {
      v50 = objc_msgSend(v49, sel_view, 0);
      if (!v50)
        goto LABEL_73;
      v51 = v50;
      objc_msgSend(v50, sel_setHidden_, 1);

    }
    v48 = LinkDetailHeaderView.linkDetailImage.getter();
    objc_msgSend(v48, sel_setHidden_, 0, v59);
LABEL_64:

    v52 = (uint64_t *)(v60 + OBJC_IVAR____TtC15ConversationKit20LinkDetailHeaderView_constraintsForAvatarViewVisible);
    swift_beginAccess();
    specialized Dictionary.subscript.getter(v44 < 1, *v52);
    if (v53)
    {
      v54 = v44 > 0;
      v55 = (void *)objc_opt_self();
      _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
      v56 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      objc_msgSend(v55, sel_deactivateConstraints_, v56);

      specialized Dictionary.subscript.getter(v54, *v52);
      if (v57)
      {
        swift_bridgeObjectRelease();
        v58 = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        objc_msgSend(v55, sel_activateConstraints_, v58);

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  OUTLINED_FUNCTION_8_8();
  LinkDetailHeaderView.updateAvatarController(with:)();
  OUTLINED_FUNCTION_2_1();
  v45 = *(void **)(v60 + OBJC_IVAR____TtC15ConversationKit20LinkDetailHeaderView_avatarController);
  if (!v45)
  {
LABEL_59:
    v48 = LinkDetailHeaderView.linkDetailImage.getter();
    objc_msgSend(v48, sel_setHidden_, 1, v59);
    goto LABEL_64;
  }
  v46 = objc_msgSend(v45, sel_view, 0);
  if (v46)
  {
    v47 = v46;
    objc_msgSend(v46, sel_setHidden_, 0);

    goto LABEL_59;
  }
  __break(1u);
LABEL_73:
  __break(1u);
}

void LinkDetailHeaderView.updateAvatarController(with:)()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  __n128 *v20;
  id v21;
  id v22;
  unint64_t v23;
  id v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  uint64_t v40;
  id v41;
  id v42;
  id v43;
  id v44;
  unint64_t v45;
  id v46;
  id v47;
  id v48;

  v2 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit20LinkDetailHeaderView_avatarController);
  if (v2)
  {
    objc_allocWithZone(MEMORY[0x1E0C974F0]);
    v3 = v2;
    OUTLINED_FUNCTION_44_17();
    v4 = OUTLINED_FUNCTION_35_15();
    v48 = @nonobjc CNGroupIdentity.init(groupWithName:photo:contacts:)(v4, v5, v6, v7);
    objc_msgSend(v2, sel_groupIdentityDidUpdate_, v48);

    return;
  }
  v8 = objc_allocWithZone(MEMORY[0x1E0C974F0]);
  OUTLINED_FUNCTION_44_17();
  v9 = OUTLINED_FUNCTION_35_15();
  v13 = @nonobjc CNGroupIdentity.init(groupWithName:photo:contacts:)(v9, v10, v11, v12);
  v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C974E8]), sel_initWithGroup_, v13);
  v15 = objc_msgSend(v14, sel_view);
  if (!v15)
  {
    __break(1u);
    goto LABEL_14;
  }
  v16 = v15;
  objc_msgSend(v15, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  v17 = v14;
  LinkDetailHeaderView.avatarController.setter((uint64_t)v14);
  v18 = OUTLINED_FUNCTION_8_50();
  if (!v18)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v19 = v18;
  OUTLINED_FUNCTION_4_24((uint64_t)v18, sel_addSubview_);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v20 = (__n128 *)OUTLINED_FUNCTION_15();
  v21 = objc_msgSend(OUTLINED_FUNCTION_51_17(v20, (__n128)xmmword_1BD644E30), sel_topAnchor);
  OUTLINED_FUNCTION_13_44();
  v22 = OUTLINED_FUNCTION_8_50();
  if (!v22)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v23 = (unint64_t)v22;
  v24 = objc_msgSend(v22, sel_bottomAnchor);
  OUTLINED_FUNCTION_8_10();
  v25 = objc_msgSend(v19, sel_constraintEqualToAnchor_constant_, v1, 0.0);
  OUTLINED_FUNCTION_10_20();

  v20[2].n128_u64[0] = v23;
  v26 = OUTLINED_FUNCTION_8_50();
  if (!v26)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v27 = OUTLINED_FUNCTION_48_19(v26);
  OUTLINED_FUNCTION_13_44();
  v29 = OUTLINED_FUNCTION_123(v28, sel_safeAreaLayoutGuide);
  v30 = OUTLINED_FUNCTION_48_19(v29);
  OUTLINED_FUNCTION_8_10();
  v31 = objc_msgSend(v19, sel_constraintEqualToAnchor_, v1);
  OUTLINED_FUNCTION_10_20();

  v20[2].n128_u64[1] = v23;
  v32 = OUTLINED_FUNCTION_8_50();
  if (!v32)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v33 = OUTLINED_FUNCTION_38_20(v32);
  OUTLINED_FUNCTION_10_20();
  v35 = OUTLINED_FUNCTION_123(v34, sel_safeAreaLayoutGuide);
  v36 = OUTLINED_FUNCTION_38_20(v35);
  OUTLINED_FUNCTION_16_25();
  v37 = OUTLINED_FUNCTION_34_1();
  OUTLINED_FUNCTION_13_44();

  v20[3].n128_u64[0] = (unint64_t)v35;
  v38 = OUTLINED_FUNCTION_8_50();
  if (!v38)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v39 = OUTLINED_FUNCTION_33_19(v38);
  OUTLINED_FUNCTION_10_20();
  v41 = OUTLINED_FUNCTION_123(v40, sel_safeAreaLayoutGuide);
  v42 = objc_msgSend(v41, (SEL)0x1F37F0648);
  OUTLINED_FUNCTION_16_25();
  v43 = OUTLINED_FUNCTION_34_1();
  OUTLINED_FUNCTION_13_44();

  v20[3].n128_u64[1] = (unint64_t)v41;
  v44 = OUTLINED_FUNCTION_8_50();
  if (!v44)
  {
LABEL_19:
    __break(1u);
    return;
  }
  v45 = (unint64_t)v44;
  v46 = objc_msgSend(v44, sel_heightAnchor);
  OUTLINED_FUNCTION_13_44();
  if (one-time initialization token for imageDiameter != -1)
    swift_once();
  v47 = objc_msgSend(v41, sel_constraintEqualToConstant_, *(double *)&static LinkDetailHeaderView.Layout.imageDiameter);
  OUTLINED_FUNCTION_10_20();
  v20[4].n128_u64[0] = v45;
  OUTLINED_FUNCTION_36_26();
  OUTLINED_FUNCTION_60_0();
  specialized Dictionary._Variant.setValue(_:forKey:)();
  OUTLINED_FUNCTION_25_29();

  OUTLINED_FUNCTION_8_0();
}

id LinkDetailHeaderView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LinkDetailHeaderView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t specialized Dictionary._Variant.setValue(_:forKey:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  OUTLINED_FUNCTION_4_50();
  v0 = OUTLINED_FUNCTION_2_62();
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v0, v1, v2, v3, v4, v5, v6, v7, v17, v19, v21, v22);
  OUTLINED_FUNCTION_3_54(v8, v9, v10, v11, v12, v13, v14, v15, v18, v20);
  return OUTLINED_FUNCTION_1_54();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_4_50();
  OUTLINED_FUNCTION_2_62();
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)();
  OUTLINED_FUNCTION_3_54(v0, v1, v2, v3, v4, v5, v6, v7, v9, v10);
  return OUTLINED_FUNCTION_1_54();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_4_50();
  OUTLINED_FUNCTION_2_62();
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)();
  OUTLINED_FUNCTION_3_54(v0, v1, v2, v3, v4, v5, v6, v7, v9, v10);
  return OUTLINED_FUNCTION_1_54();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_6_42();
  OUTLINED_FUNCTION_20_35();
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)();
  OUTLINED_FUNCTION_3_54(v0, v1, v2, v3, v4, v5, v6, v7, v9, v10);
  return OUTLINED_FUNCTION_1_54();
}

{
  uint64_t *v0;
  uint64_t v2;

  swift_isUniquelyReferenced_nonNull_native();
  v2 = *v0;
  *v0 = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)();
  *v0 = v2;
  return swift_bridgeObjectRelease();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_4_50();
  v0 = OUTLINED_FUNCTION_2_62();
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v0, v1);
  OUTLINED_FUNCTION_3_54(v2, v3, v4, v5, v6, v7, v8, v9, v11, v12);
  return OUTLINED_FUNCTION_1_54();
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_6_42();
  v11 = *v0;
  *v0 = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)();
  OUTLINED_FUNCTION_3_54(v1, v2, v3, v4, v5, v6, v7, v8, v10, v11);
  return OUTLINED_FUNCTION_1_54();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_4_50();
  OUTLINED_FUNCTION_2_62();
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)();
  OUTLINED_FUNCTION_3_54(v0, v1, v2, v3, v4, v5, v6, v7, v9, v10);
  return OUTLINED_FUNCTION_1_54();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_4_50();
  OUTLINED_FUNCTION_2_62();
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)();
  OUTLINED_FUNCTION_3_54(v0, v1, v2, v3, v4, v5, v6, v7, v9, v10);
  return OUTLINED_FUNCTION_1_54();
}

uint64_t specialized Dictionary._Variant.setValue(_:forKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return specialized Dictionary._Variant.setValue(_:forKey:)(a1, a2, a3, a4, specialized _NativeDictionary.setValue(_:forKey:isUnique:));
}

{
  return specialized Dictionary._Variant.setValue(_:forKey:)(a1, a2, a3, a4, specialized _NativeDictionary.setValue(_:forKey:isUnique:));
}

#error "1BD14B468: call analysis failed (funcsize=28)"

#error "1BD14B510: call analysis failed (funcsize=17)"

uint64_t specialized Dictionary._Variant.setValue(_:forKey:)(uint64_t a1, uint64_t a2)
{
  return specialized Dictionary._Variant.setValue(_:forKey:)(a1, a2, specialized _NativeDictionary.setValue(_:forKey:isUnique:));
}

{
  return specialized Dictionary._Variant.setValue(_:forKey:)(a1, a2, specialized _NativeDictionary.setValue(_:forKey:isUnique:));
}

{
  return specialized Dictionary._Variant.setValue(_:forKey:)(a1, a2, specialized _NativeDictionary.setValue(_:forKey:isUnique:));
}

{
  return specialized Dictionary._Variant.setValue(_:forKey:)(a1, a2, specialized _NativeDictionary.setValue(_:forKey:isUnique:));
}

{
  return specialized Dictionary._Variant.setValue(_:forKey:)(a1, a2, specialized _NativeDictionary.setValue(_:forKey:isUnique:));
}

{
  return specialized Dictionary._Variant.setValue(_:forKey:)(a1, a2, specialized _NativeDictionary.setValue(_:forKey:isUnique:));
}

#error "1BD14B560: call analysis failed (funcsize=17)"

void sub_1BD14B5D8(_QWORD **a1)
{
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0xA0))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD14B610(_QWORD **a1)
{
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0xD0))();
  OUTLINED_FUNCTION_0();
}

uint64_t ObjC metadata update function for LinkDetailHeaderView()
{
  return type metadata accessor for LinkDetailHeaderView();
}

void type metadata completion function for LinkDetailHeaderView()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for Published<Set<TUHandle>?>(319, &lazy cache variable for type metadata for Published<Set<TUHandle>?>, (uint64_t *)&demangling cache variable for type metadata for Set<TUHandle>?);
  if (v0 <= 0x3F)
  {
    type metadata accessor for Published<Set<TUHandle>?>(319, (unint64_t *)&lazy cache variable for type metadata for Published<String?>, (uint64_t *)&demangling cache variable for type metadata for String?);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for LinkDetailHeaderView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of LinkDetailHeaderView.invitedMemberHandles.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of LinkDetailHeaderView.invitedMemberHandles.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of LinkDetailHeaderView.invitedMemberHandles.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of LinkDetailHeaderView.$invitedMemberHandles.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of LinkDetailHeaderView.$invitedMemberHandles.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of LinkDetailHeaderView.$invitedMemberHandles.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of LinkDetailHeaderView.title.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of LinkDetailHeaderView.title.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of LinkDetailHeaderView.title.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of LinkDetailHeaderView.$title.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of LinkDetailHeaderView.$title.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of LinkDetailHeaderView.$title.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of LinkDetailHeaderView.setupViews()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x160))();
}

void type metadata accessor for Published<Set<TUHandle>?>(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    v4 = type metadata accessor for Published();
    if (!v5)
      atomic_store(v4, a2);
  }
}

ValueMetadata *type metadata accessor for LinkDetailHeaderView.Layout()
{
  return &type metadata for LinkDetailHeaderView.Layout;
}

uint64_t specialized Dictionary._Variant.setValue(_:forKey:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return specialized Dictionary._Variant.setValue(_:forKey:)(a1, a2, a3, specialized _NativeDictionary.setValue(_:forKey:isUnique:));
}

{
  return specialized Dictionary._Variant.setValue(_:forKey:)(a1, a2, a3, specialized _NativeDictionary.setValue(_:forKey:isUnique:));
}

{
  return specialized Dictionary._Variant.setValue(_:forKey:)(a1, a2, a3, specialized _NativeDictionary.setValue(_:forKey:isUnique:));
}

uint64_t specialized Dictionary._Variant.setValue(_:forKey:)(uint64_t a1, double a2, double a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_6_42();
  OUTLINED_FUNCTION_20_35();
  v6 = specialized _NativeDictionary.setValue(_:forKey:isUnique:)(a1, a2, a3);
  OUTLINED_FUNCTION_3_54(v6, v7, v8, v9, v10, v11, v12, v13, v15, v16);
  return swift_bridgeObjectRelease();
}

#error "1BD14BA20: call analysis failed (funcsize=18)"

#error "1BD14BA90: call analysis failed (funcsize=22)"

#error "1BD14BAE0: call analysis failed (funcsize=17)"

#error "1BD14BB64: call analysis failed (funcsize=16)"

uint64_t sub_1BD14BB9C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void partial apply for closure #1 in LinkDetailHeaderView.setupDisplayProperties()(uint64_t *a1)
{
  uint64_t v1;

  closure #1 in LinkDetailHeaderView.setupDisplayProperties()(a1, v1);
}

void partial apply for closure #2 in LinkDetailHeaderView.setupDisplayProperties()(unint64_t *a1)
{
  uint64_t v1;

  closure #2 in LinkDetailHeaderView.setupDisplayProperties()(a1, v1);
}

uint64_t ParticipantContactDetails.init(handle:cache:)@<X0>(void *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, _QWORD *a7@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  ParticipantContactDetailsCache.contactDetails(for:nickname:)((uint64_t)a1, 0, 0, a2, a3, a4, a5, a6, v13, v15, v16, v17, v19, v21, v23, v25, v27, v28, v29,
    v30);
  v14 = v18;
  OUTLINED_FUNCTION_86();
  OUTLINED_FUNCTION_26_22();
  static ParticipantContactDetails.initialsFor(_:)(v18);
  lazy protocol witness table accessor for type String and conformance String();
  v9 = StringProtocol.localizedUppercase.getter();
  v11 = v10;
  OUTLINED_FUNCTION_25();
  OUTLINED_FUNCTION_21_0();
  OUTLINED_FUNCTION_30_4();

  swift_release();
  result = OUTLINED_FUNCTION_58_1();
  *a7 = v18;
  a7[1] = v20;
  a7[2] = v22;
  a7[3] = v24;
  a7[4] = v26;
  a7[5] = v9;
  a7[6] = v11;
  return result;
}

void ParticipantContactDetails.contact.getter()
{
  id *v0;
  id v1;

  v1 = *v0;
  OUTLINED_FUNCTION_0();
}

void ParticipantContactDetails.contact.setter(void *a1)
{
  id *v1;

  *v1 = a1;
}

uint64_t (*ParticipantContactDetails.contact.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void ParticipantContactDetails.displayName.getter()
{
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void ParticipantContactDetails.displayName.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_6_6();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = v2;
  *(_QWORD *)(v1 + 16) = v0;
  OUTLINED_FUNCTION_18();
}

uint64_t (*ParticipantContactDetails.displayName.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void ParticipantContactDetails.shortName.getter()
{
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void ParticipantContactDetails.shortName.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_6_6();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 24) = v2;
  *(_QWORD *)(v1 + 32) = v0;
  OUTLINED_FUNCTION_18();
}

uint64_t (*ParticipantContactDetails.shortName.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void ParticipantContactDetails.initials.getter()
{
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void ParticipantContactDetails.initials.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_6_6();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 40) = v2;
  *(_QWORD *)(v1 + 48) = v0;
  OUTLINED_FUNCTION_18();
}

uint64_t (*ParticipantContactDetails.initials.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

BOOL ParticipantContactDetails.usesMonogram.getter()
{
  _QWORD *v0;

  return *v0 && (unint64_t)(String.count.getter() - 1) < 2;
}

uint64_t static ParticipantContactDetails.defaultMeContactDetails.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  id v4;

  v4 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  OUTLINED_FUNCTION_0_3(17741, 0xE200000000000000);
  OUTLINED_FUNCTION_45_8();

  *a1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97200]), sel_init, 0xE000000000000000);
  a1[1] = v1;
  a1[2] = v2;
  a1[3] = v1;
  a1[4] = v2;
  a1[5] = v1;
  a1[6] = v2;
  return OUTLINED_FUNCTION_16_31();
}

uint64_t ParticipantContactDetails.init(contact:displayName:shortName:initials:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, _QWORD *a8@<X8>)
{
  *a8 = result;
  a8[1] = a2;
  a8[2] = a3;
  a8[3] = a4;
  a8[4] = a5;
  a8[5] = a6;
  a8[6] = a7;
  return result;
}

uint64_t ParticipantContactDetails.init(contact:displayName:shortName:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;

  static ParticipantContactDetails.initialsFor(_:)(a1);
  lazy protocol witness table accessor for type String and conformance String();
  v12 = StringProtocol.localizedUppercase.getter();
  v14 = v13;
  result = OUTLINED_FUNCTION_25();
  *a6 = a1;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  a6[5] = v12;
  a6[6] = v14;
  return result;
}

uint64_t static ParticipantContactDetails.initialsFor(_:)(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  Class isa;
  id v11;

  v2 = OUTLINED_FUNCTION_51_5();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_77();
  v6 = v5 - v4;
  OUTLINED_FUNCTION_46_18();
  if (a1)
  {
    v7 = objc_msgSend(a1, sel_givenName);
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    PersonNameComponents.givenName.setter();
    v8 = objc_msgSend(a1, sel_familyName);
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    OUTLINED_FUNCTION_17_34();
  }
  else
  {
    OUTLINED_FUNCTION_20_12();
  }
  OUTLINED_FUNCTION_38_21();
  PersonNameComponents.familyName.setter();
  if (one-time initialization token for initials != -1)
    swift_once();
  OUTLINED_FUNCTION_1();
  v9 = (id)static NSPersonNameComponentsFormatter.initials;
  isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
  v11 = objc_msgSend(v9, sel_stringFromPersonNameComponents_, isa);

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  OUTLINED_FUNCTION_17_34();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v6, v2);
  return OUTLINED_FUNCTION_38_21();
}

void ParticipantContactDetails.init(meCard:)(void *a1@<X0>, _QWORD *a2@<X8>)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a1;
  static ParticipantContactDetails.initialsFor(_:)(a1);
  lazy protocol witness table accessor for type String and conformance String();
  v5 = StringProtocol.localizedUppercase.getter();
  v7 = v6;
  OUTLINED_FUNCTION_133();
  OUTLINED_FUNCTION_16_31();

  *a2 = a1;
  a2[1] = v5;
  a2[2] = v7;
  a2[3] = v5;
  a2[4] = v7;
  a2[5] = v5;
  a2[6] = v7;
}

uint64_t ParticipantContactDetails.init(participant:cache:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>)
{
  id v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  ParticipantContactDetailsCache.contactDetails(for:)(a1, a2, a3, a4, a5, a6, a7, a8, v13, v14, v16, v18, v20, v22, v24, v26, v28, v29, v30,
    v31);
  v11 = v15;
  OUTLINED_FUNCTION_25_2();
  OUTLINED_FUNCTION_35_0();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_53();

  swift_release();
  result = outlined destroy of Participant(a1);
  *a9 = v15;
  a9[1] = v17;
  a9[2] = v19;
  a9[3] = v21;
  a9[4] = v23;
  a9[5] = v25;
  a9[6] = v27;
  return result;
}

void ParticipantContactDetailsCache.contactDetails(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  int *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  void *v42;
  void *v43;
  char *v44;
  void *v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  void *v53;
  id v54;
  void *v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  char *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t i;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  char v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  id v83;
  id v84;
  uint64_t v85;
  Class v86;
  char *v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  int v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  int EnumTagSinglePayload;
  int *v98;
  id v99;
  id v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  void *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  id v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  char *v131;
  uint64_t v132;
  id v133;
  uint64_t v134;
  char *v135;
  id v136;
  Class isa;
  id v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  unint64_t v142;
  char *v143;
  uint64_t v144;
  _QWORD *v145;
  unint64_t v146;
  id v147;
  uint64_t v148;
  char *v149;
  void *v150;
  void *v151;
  _QWORD *v152;
  id v153;
  id v154;
  _QWORD *v155;
  uint64_t v156;
  uint64_t v157;
  void *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  id v166;
  uint64_t v167;
  __int128 v168;
  uint64_t v169;
  id v170;
  uint64_t v171;
  int *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  void *v178;
  _QWORD *v179;
  char *v180;
  uint64_t v181;
  char *v182;
  uint64_t v183;
  char *v184;
  uint64_t v185;
  char *v186;
  int *v187;
  uint64_t v188;
  uint64_t v189;

  OUTLINED_FUNCTION_93();
  a19 = v21;
  a20 = v22;
  v23 = (uint64_t)v20;
  v25 = v24;
  v179 = v26;
  v189 = *MEMORY[0x1E0C80C00];
  v27 = OUTLINED_FUNCTION_51_5();
  v174 = *(_QWORD *)(v27 - 8);
  v175 = v27;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v28);
  OUTLINED_FUNCTION_41();
  v173 = v29;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v30);
  OUTLINED_FUNCTION_41();
  v176 = v31;
  v32 = (int *)type metadata accessor for Participant(0);
  v181 = *((_QWORD *)v32 - 1);
  OUTLINED_FUNCTION_10_1();
  v34 = MEMORY[0x1E0C80A78](v33);
  v36 = (char *)&v166 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = MEMORY[0x1E0C80A78](v34);
  v39 = (char *)&v166 - v38;
  MEMORY[0x1E0C80A78](v37);
  v41 = (char *)&v166 - v40;
  v42 = (void *)ParticipantContactDetailsCache.key(for:)(v25);
  v178 = v42;
  if (!v42)
    goto LABEL_7;
  v43 = (void *)v20[3];
  v20 = v42;
  v44 = (char *)objc_msgSend(v43, sel_objectForKey_, v20);
  if (!v44)
  {

    goto LABEL_7;
  }
  v45 = v44;
  v172 = v32;
  v177 = v23;
  v46 = *(void **)&v44[OBJC_IVAR____TtCC15ConversationKit30ParticipantContactDetailsCacheP33_84AC34FA5CB4344A8378F61D97FA6ADC12BoxedDetails_details];
  v47 = *(_QWORD *)&v44[OBJC_IVAR____TtCC15ConversationKit30ParticipantContactDetailsCacheP33_84AC34FA5CB4344A8378F61D97FA6ADC12BoxedDetails_details
                      + 8];
  v48 = *(_QWORD *)&v44[OBJC_IVAR____TtCC15ConversationKit30ParticipantContactDetailsCacheP33_84AC34FA5CB4344A8378F61D97FA6ADC12BoxedDetails_details
                      + 16];
  *(_QWORD *)&v168 = *(_QWORD *)&v44[OBJC_IVAR____TtCC15ConversationKit30ParticipantContactDetailsCacheP33_84AC34FA5CB4344A8378F61D97FA6ADC12BoxedDetails_details
                                   + 24];
  v49 = *(char **)&v44[OBJC_IVAR____TtCC15ConversationKit30ParticipantContactDetailsCacheP33_84AC34FA5CB4344A8378F61D97FA6ADC12BoxedDetails_details
                     + 32];
  v167 = *(_QWORD *)&v44[OBJC_IVAR____TtCC15ConversationKit30ParticipantContactDetailsCacheP33_84AC34FA5CB4344A8378F61D97FA6ADC12BoxedDetails_details
                       + 40];
  v50 = *(_QWORD *)&v44[OBJC_IVAR____TtCC15ConversationKit30ParticipantContactDetailsCacheP33_84AC34FA5CB4344A8378F61D97FA6ADC12BoxedDetails_details
                      + 48];
  v170 = v46;
  v166 = v46;
  OUTLINED_FUNCTION_86();
  v180 = v49;
  OUTLINED_FUNCTION_25_2();
  OUTLINED_FUNCTION_124();

  v171 = v47;
  v51 = (void *)MEMORY[0x1C3B72E00](v47, v48);
  LOBYTE(v49) = objc_msgSend(v51, sel_destinationIdIsTemporary);

  outlined init with copy of Participant(v25, (uint64_t)v41);
  if ((v49 & 1) == 0)
  {
    outlined destroy of Participant((uint64_t)v41);
    goto LABEL_56;
  }
  v52 = *(_QWORD *)&v41[v172[9] + 8];
  outlined destroy of Participant((uint64_t)v41);
  if (!v52)
  {
LABEL_56:

    v114 = v179;
    v115 = v171;
    *v179 = v170;
    v114[1] = v115;
    v116 = v168;
    v114[2] = v48;
    v114[3] = v116;
    v117 = v167;
    v114[4] = v180;
    v114[5] = v117;
    v114[6] = v50;
    goto LABEL_70;
  }
  OUTLINED_FUNCTION_13_3();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_30_4();
  OUTLINED_FUNCTION_121((uint64_t)&a11);
  v23 = v177;
  v32 = v172;
LABEL_7:
  v53 = *(void **)(v25 + v32[7]);
  if (v53)
  {
    v177 = v23;
    v170 = v53;
    v54 = objc_msgSend(v170, sel_value);
    v55 = v54;
    if (!v54)
    {
      v56 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v20 = v57;
      v55 = (void *)MEMORY[0x1C3B72E00](v56);
      v54 = (id)OUTLINED_FUNCTION_27();
    }
    LODWORD(v171) = OUTLINED_FUNCTION_123((uint64_t)v54, sel_destinationIdIsPseudonym);

    v58 = v32[11];
    v172 = (int *)v25;
    v59 = *(char **)(v25 + v58);
    v60 = v59 + 56;
    v61 = 1 << v59[32];
    v62 = -1;
    if (v61 < 64)
      v62 = ~(-1 << v61);
    v63 = v62 & *((_QWORD *)v59 + 7);
    v180 = (char *)((unint64_t)(v61 + 63) >> 6);
    OUTLINED_FUNCTION_16_31();
    v23 = 0;
    if (!v63)
      goto LABEL_14;
LABEL_13:
    v64 = __clz(__rbit64(v63));
    v63 &= v63 - 1;
    for (i = v64 | (v23 << 6); ; i = __clz(__rbit64(v67)) + (v23 << 6))
    {
      outlined init with copy of Participant(*((_QWORD *)v59 + 6) + *(_QWORD *)(v181 + 72) * i, (uint64_t)v39);
      outlined init with take of Participant((uint64_t)v39, (uint64_t)v36);
      v76 = *(void **)&v36[v32[7]];
      if (v76)
      {
        v77 = objc_msgSend(v76, sel_value);
        v78 = OUTLINED_FUNCTION_19_16();
        v20 = v32;
        v80 = v79;

        v55 = (void *)MEMORY[0x1C3B72E00](v78, v80);
        v32 = (int *)v20;
        v81 = swift_bridgeObjectRelease();
        LOBYTE(v78) = OUTLINED_FUNCTION_123(v81, sel_destinationIdIsPseudonym);

        if ((v78 & 1) == 0)
        {
          OUTLINED_FUNCTION_17_22();
          v94 = v176;
          outlined init with take of Participant((uint64_t)v36, (uint64_t)v176);
          v95 = (uint64_t)v94;
          v96 = 0;
          goto LABEL_45;
        }
      }
      outlined destroy of Participant((uint64_t)v36);
      if (v63)
        goto LABEL_13;
LABEL_14:
      v66 = v23 + 1;
      if (__OFADD__(v23, 1))
      {
        __break(1u);
        goto LABEL_75;
      }
      if (v66 >= (uint64_t)v180)
        goto LABEL_44;
      v67 = v60[v66];
      ++v23;
      if (!v67)
      {
        v23 = v66 + 1;
        OUTLINED_FUNCTION_43_22();
        if (v69 == v70)
          goto LABEL_44;
        v67 = v60[v23];
        if (!v67)
        {
          v23 = v68 + 2;
          OUTLINED_FUNCTION_43_22();
          if (v69 == v70)
            goto LABEL_44;
          v67 = v60[v23];
          if (!v67)
          {
            v23 = v71 + 3;
            OUTLINED_FUNCTION_43_22();
            if (v69 == v70)
              goto LABEL_44;
            v67 = v60[v23];
            if (!v67)
            {
              v23 = v72 + 4;
              OUTLINED_FUNCTION_43_22();
              if (v69 == v70)
                goto LABEL_44;
              v67 = v60[v23];
              if (!v67)
              {
                v74 = v73 + 5;
                if (v74 >= (uint64_t)v180)
                {
LABEL_44:
                  OUTLINED_FUNCTION_17_22();
                  v94 = v176;
                  v95 = (uint64_t)v176;
                  v96 = 1;
LABEL_45:
                  __swift_storeEnumTagSinglePayload(v95, v96, 1, (uint64_t)v32);
                  OUTLINED_FUNCTION_133();
                  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v94, 1, (uint64_t)v32);
                  v23 = v177;
                  v98 = v172;
                  if (EnumTagSinglePayload != 1)
                  {
                    v99 = *(id *)&v94[v32[7]];
                    if (v99)
                      v100 = v99;
                    outlined destroy of Participant((uint64_t)v94);
                    if ((v171 & 1) != 0)
                    {
                      if (!v99)
                        goto LABEL_57;
                      v99 = v99;
                      OUTLINED_FUNCTION_32_22((uint64_t)v99, 0, 0, v101, v102, v103, v104, v105, (uint64_t)v166, v167, v168, *((uint64_t *)&v168 + 1), v169, (uint64_t)v170, v171, (uint64_t)v172, v173, v174, v175,
                        (uint64_t)v176);
                      OUTLINED_FUNCTION_121((uint64_t)&a16);

                    }
                    else
                    {
LABEL_53:
                      OUTLINED_FUNCTION_31_31();
                      v94 = *(char **)(v106 - 256);
                      OUTLINED_FUNCTION_32_22((uint64_t)v94, v107, v108, v109, v110, v111, v112, v113, (uint64_t)v166, v167, v168, *((uint64_t *)&v168 + 1), v169, (uint64_t)v170, v171, (uint64_t)v172, v173, v174, v175,
                        (uint64_t)v176);

                    }
                    v93 = 0;
                    OUTLINED_FUNCTION_30_30();
                    goto LABEL_64;
                  }
                  outlined destroy of Participant?((uint64_t)v94);
                  if ((v171 & 1) == 0)
                  {
                    v99 = 0;
                    goto LABEL_53;
                  }
LABEL_57:
                  v118 = *(void **)((char *)v98 + v32[12]);
                  if (v118)
                  {
                    v180 = v118;
                    OUTLINED_FUNCTION_32_22((uint64_t)v180, 0, 0, v119, v120, v121, v122, v123, (uint64_t)v166, v167, v168, *((uint64_t *)&v168 + 1), v169, (uint64_t)v170, v171, (uint64_t)v172, v173, v174, v175,
                      (uint64_t)v176);
                    v124 = v183;
                    v176 = v182;
                    v125 = v184;
                    v172 = (int *)v185;
                    v126 = (uint64_t)v186;
                    v171 = v188;
                    v127 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
                    OUTLINED_FUNCTION_7_13(0x40255F454259414DLL, 0xEF4543495645445FLL);

                    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
                    v128 = OUTLINED_FUNCTION_16_9();
                    v168 = xmmword_1BD6441D0;
                    *(_OWORD *)(v128 + 16) = xmmword_1BD6441D0;
                    v129 = MEMORY[0x1E0DEA968];
                    *(_QWORD *)(v128 + 56) = MEMORY[0x1E0DEA968];
                    v130 = lazy protocol witness table accessor for type String and conformance String();
                    *(_QWORD *)(v128 + 64) = v130;
                    *(_QWORD *)(v128 + 32) = v124;
                    *(_QWORD *)(v128 + 40) = v125;
                    OUTLINED_FUNCTION_79_1();
                    v181 = String.init(format:_:)();
                    v59 = v131;
                    v132 = OUTLINED_FUNCTION_30_4();
                    v133 = OUTLINED_FUNCTION_25_1(v132, sel_conversationKit);
                    OUTLINED_FUNCTION_0_3(0x40255F454259414DLL, 0xEF4543495645445FLL);

                    v134 = OUTLINED_FUNCTION_16_9();
                    *(_OWORD *)(v134 + 16) = v168;
                    *(_QWORD *)(v134 + 56) = v129;
                    *(_QWORD *)(v134 + 64) = v130;
                    *(_QWORD *)(v134 + 32) = v172;
                    *(_QWORD *)(v134 + 40) = v126;
                    v172 = (int *)v126;
                    OUTLINED_FUNCTION_22_3();
                    v94 = (char *)String.init(format:_:)();
                    v36 = v135;
                    OUTLINED_FUNCTION_30_4();
                    OUTLINED_FUNCTION_46_18();
                    OUTLINED_FUNCTION_20_12();
                    OUTLINED_FUNCTION_50_2();
                    if (one-time initialization token for initials != -1)
                      swift_once();
                    OUTLINED_FUNCTION_1();
                    v136 = (id)static NSPersonNameComponentsFormatter.initials;
                    isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
                    v138 = objc_msgSend(v136, sel_stringFromPersonNameComponents_, isa);

                    v139 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)();
                    v141 = v140;

                    OUTLINED_FUNCTION_60_11(v174);
                    v182 = v139;
                    v183 = v141;
                    lazy protocol witness table accessor for type String and conformance String();
                    v32 = (int *)StringProtocol.localizedUppercase.getter();
                    v63 = v142;
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    OUTLINED_FUNCTION_25();
                    OUTLINED_FUNCTION_121((uint64_t)&a16);

                    OUTLINED_FUNCTION_58_1();
                    v93 = 0;
                    v60 = 0;
                    v23 = v177;
                    goto LABEL_64;
                  }
                  OUTLINED_FUNCTION_31_31();
                  v158 = *(void **)(v157 - 256);
                  OUTLINED_FUNCTION_32_22((uint64_t)v158, v159, v160, v161, v162, v163, v164, v165, (uint64_t)v166, v167, v168, *((uint64_t *)&v168 + 1), v169, (uint64_t)v170, v171, (uint64_t)v172, v173, v174, v175,
                    (uint64_t)v176);

                  OUTLINED_FUNCTION_30_30();
                  v153 = v178;
                  if (v178)
                  {
                    v93 = 0;
                    v155 = v179;
LABEL_66:

                  }
                  else
                  {
                    v93 = 0;
                    v155 = v179;
                  }
                  goto LABEL_68;
                }
                v67 = v60[v74];
                if (!v67)
                {
                  while (1)
                  {
                    v23 = v74 + 1;
                    if (__OFADD__(v74, 1))
                      break;
                    OUTLINED_FUNCTION_43_22();
                    if (v69 == v70)
                      goto LABEL_44;
                    v67 = v60[v23];
                    v74 = v75 + 1;
                    if (v67)
                      goto LABEL_36;
                  }
LABEL_75:
                  __break(1u);
LABEL_76:
                  swift_once();
LABEL_62:
                  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
                  v144 = OUTLINED_FUNCTION_16_9();
                  *(_OWORD *)(v144 + 16) = xmmword_1BD6441D0;
                  v182 = (char *)v20;
                  v145 = v20;
                  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
                  String.init<A>(reflecting:)();
                  *(_QWORD *)(v144 + 56) = MEMORY[0x1E0DEA968];
                  v146 = lazy protocol witness table accessor for type String and conformance String();
                  OUTLINED_FUNCTION_54_16(v146);
                  os_log(_:dso:log:type:_:)();
                  OUTLINED_FUNCTION_2_1();
                  v147 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
                  v148 = OUTLINED_FUNCTION_7_13(17741, 0xE200000000000000);
                  v59 = v149;

                  v60 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97200]), sel_init);
                  OUTLINED_FUNCTION_16_31();
                  swift_unknownObjectRelease();

                  v93 = 0;
                  v94 = (char *)v148;
                  v36 = v59;
                  v181 = v148;
                  v32 = (int *)v148;
                  goto LABEL_63;
                }
                v23 = v74;
              }
            }
          }
        }
      }
LABEL_36:
      v63 = (v67 - 1) & v67;
    }
  }
  v82 = *(void **)(v23 + 16);
  v32 = (int *)objc_msgSend((id)objc_opt_self(), sel_settingsWithContactStore_, v82);
  v83 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97470]), sel_initWithSettings_, v32);
  v84 = objc_msgSend(v83, sel_descriptorForRequiredKeys);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v85 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v85 + 16) = xmmword_1BD6443F0;
  *(_QWORD *)(v85 + 32) = v84;
  v182 = (char *)v85;
  specialized Array._endMutation()();
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for CNKeyDescriptor);
  v86 = Array._bridgeToObjectiveC()().super.isa;
  OUTLINED_FUNCTION_13_3();
  v182 = 0;
  v60 = objc_msgSend(v82, sel__crossPlatformUnifiedMeContactWithKeysToFetch_error_, v86, &v182);

  v87 = v182;
  if (!v60)
  {
    v143 = v182;
    v20 = (_QWORD *)_convertNSErrorToError(_:)();

    swift_willThrow();
    if (one-time initialization token for conversationKit != -1)
      goto LABEL_76;
    goto LABEL_62;
  }
  v88 = v60;
  v89 = v87;
  v182 = (char *)static ParticipantContactDetails.initialsFor(_:)(v60);
  v183 = v90;
  lazy protocol witness table accessor for type String and conformance String();
  v91 = StringProtocol.localizedUppercase.getter();
  v59 = v92;
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_16_31();
  swift_unknownObjectRelease();

  v180 = v88;
  v93 = 1;
  v94 = (char *)v91;
  v36 = v59;
  v181 = v91;
  v32 = (int *)v91;
LABEL_63:
  v63 = (unint64_t)v59;
LABEL_64:
  v150 = v178;
  if (v178)
  {
    v151 = *(void **)(v23 + 24);
    type metadata accessor for ParticipantContactDetailsCache.BoxedDetails();
    v182 = (char *)v60;
    v183 = v181;
    v184 = v59;
    v185 = (uint64_t)v94;
    v186 = v36;
    v187 = v32;
    v188 = v63;
    v152 = v60;
    OUTLINED_FUNCTION_35_0();
    OUTLINED_FUNCTION_26_22();
    OUTLINED_FUNCTION_33_1();
    v153 = v150;
    v154 = ParticipantContactDetailsCache.BoxedDetails.__allocating_init(details:)((uint64_t)&v182);
    objc_msgSend(v151, sel_setObject_forKey_, v154, v153);

    v155 = v179;
    v98 = (int *)v180;
    goto LABEL_66;
  }
  v155 = v179;
  v98 = (int *)v180;
LABEL_68:
  v156 = v181;
  *v155 = v60;
  v155[1] = v156;
  v155[2] = v59;
  v155[3] = v94;
  v155[4] = v36;
  v155[5] = v32;
  v155[6] = v63;
  if (v93)

LABEL_70:
  OUTLINED_FUNCTION_52_1();
}

void ParticipantContactDetailsCache.contactDetails(for:nickname:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  char *v34;
  void *v35;
  void *v36;
  uint64_t v37;
  unint64_t v38;
  void *v39;
  uint64_t v40;
  void *v41;
  id v42;
  void *v43;
  uint64_t v44;
  unsigned __int8 v45;
  uint64_t v46;
  void *v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  Class isa;
  id v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  id v63;
  unint64_t v64;
  id v65;
  id v66;
  Class v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  void *v87;
  void *v88;
  void *v89;
  id v90;
  void *v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  id v103;
  id v104;
  uint64_t v105;
  id v106;
  id v107;
  uint64_t v108;
  unint64_t v109;
  id v110;
  uint64_t v111;
  id v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  void *v116;
  uint64_t v117;
  id v118;
  uint64_t v119;
  void *v120;
  unint64_t v121;
  void *v122;
  _QWORD *v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  void *v128;
  uint64_t v129;
  uint64_t v130;

  OUTLINED_FUNCTION_93();
  a19 = v21;
  a20 = v22;
  v24 = v23;
  v26 = v25;
  v28 = v27;
  v123 = v29;
  v115 = *(_QWORD *)(OUTLINED_FUNCTION_51_5() - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v30);
  OUTLINED_FUNCTION_41();
  type metadata accessor for CharacterSet();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v31);
  OUTLINED_FUNCTION_41();
  v32 = (void *)ParticipantContactDetailsCache.key(for:)(v28);
  v33 = *(void **)(v20 + 24);
  v34 = (char *)objc_msgSend(v33, sel_objectForKey_, v32);
  v120 = v28;
  v122 = v32;
  v116 = v33;
  if (v34)
  {
    v35 = v34;
    v36 = *(void **)&v34[OBJC_IVAR____TtCC15ConversationKit30ParticipantContactDetailsCacheP33_84AC34FA5CB4344A8378F61D97FA6ADC12BoxedDetails_details];
    v37 = *(_QWORD *)&v34[OBJC_IVAR____TtCC15ConversationKit30ParticipantContactDetailsCacheP33_84AC34FA5CB4344A8378F61D97FA6ADC12BoxedDetails_details
                        + 8];
    v38 = *(_QWORD *)&v34[OBJC_IVAR____TtCC15ConversationKit30ParticipantContactDetailsCacheP33_84AC34FA5CB4344A8378F61D97FA6ADC12BoxedDetails_details
                        + 16];
    v113 = *(_QWORD *)&v34[OBJC_IVAR____TtCC15ConversationKit30ParticipantContactDetailsCacheP33_84AC34FA5CB4344A8378F61D97FA6ADC12BoxedDetails_details
                         + 24];
    v39 = *(void **)&v34[OBJC_IVAR____TtCC15ConversationKit30ParticipantContactDetailsCacheP33_84AC34FA5CB4344A8378F61D97FA6ADC12BoxedDetails_details
                       + 32];
    v114 = *(_QWORD *)&v34[OBJC_IVAR____TtCC15ConversationKit30ParticipantContactDetailsCacheP33_84AC34FA5CB4344A8378F61D97FA6ADC12BoxedDetails_details
                         + 40];
    v40 = *(_QWORD *)&v34[OBJC_IVAR____TtCC15ConversationKit30ParticipantContactDetailsCacheP33_84AC34FA5CB4344A8378F61D97FA6ADC12BoxedDetails_details
                        + 48];
    v112 = v36;
    OUTLINED_FUNCTION_79_1();
    v33 = v39;
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_124();

    v41 = (void *)MEMORY[0x1C3B72E00](v37, v38);
    LODWORD(v39) = objc_msgSend(v41, sel_destinationIdIsTemporary, v112);

    if (!(_DWORD)v39 || !v24)
    {

      v59 = v113;
      v60 = v37;
      v61 = v114;
      goto LABEL_53;
    }
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_58_1();
    OUTLINED_FUNCTION_30_4();
    OUTLINED_FUNCTION_121((uint64_t)&a17);
    v32 = v122;
  }
  v42 = OUTLINED_FUNCTION_2_2((uint64_t)v34, sel_value);
  v43 = v42;
  if (!v42)
  {
    v44 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v43 = (void *)MEMORY[0x1C3B72E00](v44);
    v42 = (id)OUTLINED_FUNCTION_2_1();
  }
  v45 = OUTLINED_FUNCTION_123((uint64_t)v42, sel_destinationIdIsPseudonym);

  if ((v45 & 1) == 0)
  {
    v47 = *(void **)(v20 + 16);
    v48 = OUTLINED_FUNCTION_2_2(v46, sel_value);
    if (!v48)
    {
      v49 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v48 = (id)MEMORY[0x1C3B72E00](v49);
      OUTLINED_FUNCTION_27();
    }
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    v50 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v50 + 16) = xmmword_1BD6443F0;
    *(_QWORD *)(v50 + 32) = objc_msgSend((id)objc_opt_self(), sel_descriptorForRequiredKeys);
    v124 = v50;
    specialized Array._endMutation()();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for CNKeyDescriptor);
    isa = Array._bridgeToObjectiveC()().super.isa;
    OUTLINED_FUNCTION_27();
    v52 = objc_msgSend(v47, sel_contactForDestinationId_keysToFetch_, v48, isa);

    if (!v52)
    {
      if (v24)
      {
        v70 = one-time initialization token for conversationKit;
        OUTLINED_FUNCTION_33_1();
        if (v70 != -1)
          swift_once();
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
        v71 = OUTLINED_FUNCTION_16_9();
        *(_OWORD *)(v71 + 16) = xmmword_1BD6441D0;
        v124 = (uint64_t)v120;
        OUTLINED_FUNCTION_59(v71, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
        OUTLINED_FUNCTION_44_18();
        OUTLINED_FUNCTION_21_33();
        OUTLINED_FUNCTION_45_8();
        *(_QWORD *)(v71 + 56) = MEMORY[0x1E0DEA968];
        v72 = lazy protocol witness table accessor for type String and conformance String();
        OUTLINED_FUNCTION_63_13(v72);
        OUTLINED_FUNCTION_37_21();
        OUTLINED_FUNCTION_133();
        OUTLINED_FUNCTION_33_1();
        v36 = 0;
        v33 = v24;
        v60 = v26;
        v38 = (unint64_t)v24;
        v59 = v26;
      }
      else
      {
        v90 = TUHandle.formattedPhoneNumber.getter(v53);
        if (v91)
        {
          v59 = (uint64_t)v90;
          v33 = v91;
          if (one-time initialization token for conversationKit != -1)
            swift_once();
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
          v92 = OUTLINED_FUNCTION_16_9();
          *(_OWORD *)(v92 + 16) = xmmword_1BD6441D0;
          v124 = (uint64_t)v120;
          OUTLINED_FUNCTION_59(v92, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
          OUTLINED_FUNCTION_44_18();
          OUTLINED_FUNCTION_21_33();
          OUTLINED_FUNCTION_45_8();
          *(_QWORD *)(v92 + 56) = MEMORY[0x1E0DEA968];
          v93 = lazy protocol witness table accessor for type String and conformance String();
          OUTLINED_FUNCTION_63_13(v93);
          OUTLINED_FUNCTION_37_21();
          OUTLINED_FUNCTION_133();
        }
        else
        {
          if (one-time initialization token for conversationKit != -1)
            swift_once();
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
          v98 = OUTLINED_FUNCTION_16_9();
          *(_OWORD *)(v98 + 16) = xmmword_1BD6441D0;
          v124 = (uint64_t)v120;
          OUTLINED_FUNCTION_59(v98, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
          OUTLINED_FUNCTION_44_18();
          v99 = OUTLINED_FUNCTION_21_33();
          v101 = v100;
          *(_QWORD *)(v98 + 56) = MEMORY[0x1E0DEA968];
          *(_QWORD *)(v98 + 64) = lazy protocol witness table accessor for type String and conformance String();
          *(_QWORD *)(v98 + 32) = v99;
          *(_QWORD *)(v98 + 40) = v101;
          static os_log_type_t.default.getter();
          os_log(_:dso:log:type:_:)();
          v102 = OUTLINED_FUNCTION_21_0();
          v103 = OUTLINED_FUNCTION_2_2(v102, sel_value);
          v59 = OUTLINED_FUNCTION_19_16();
          OUTLINED_FUNCTION_57_7();
        }
        OUTLINED_FUNCTION_22_3();
        v36 = 0;
        v60 = v59;
        v38 = (unint64_t)v33;
      }
      v89 = 0;
      goto LABEL_52;
    }
    v118 = v52;
    v54 = v52;
    v55 = outlined bridged method (pb) of @objc CNContact.displayName.getter(v54);
    if (v56)
    {
      v124 = v55;
      v125 = v56;
      static CharacterSet.whitespacesAndNewlines.getter();
      lazy protocol witness table accessor for type String and conformance String();
      v57 = StringProtocol.trimmingCharacters(in:)();
      v38 = v58;
      OUTLINED_FUNCTION_42_19();
      swift_bridgeObjectRelease();
    }
    else
    {
      v57 = 0;
      v38 = 0xE000000000000000;
    }
    v73 = objc_msgSend(v54, sel_givenName);
    v74 = OUTLINED_FUNCTION_19_16();
    v76 = v75;

    v124 = v74;
    v125 = v76;
    static CharacterSet.whitespacesAndNewlines.getter();
    lazy protocol witness table accessor for type String and conformance String();
    v77 = MEMORY[0x1E0DEA968];
    v78 = StringProtocol.trimmingCharacters(in:)();
    v80 = v79;
    OUTLINED_FUNCTION_42_19();
    v81 = swift_bridgeObjectRelease();
    v82 = v57;
    if ((v38 & 0x2000000000000000) != 0)
      v83 = HIBYTE(v38) & 0xF;
    else
      v83 = v57 & 0xFFFFFFFFFFFFLL;
    v84 = v78;
    v33 = (void *)v80;
    if ((v80 & 0x2000000000000000) != 0)
      v85 = HIBYTE(v80) & 0xF;
    else
      v85 = v78 & 0xFFFFFFFFFFFFLL;
    v86 = TUHandle.formattedPhoneNumber.getter(v81);
    v88 = v87;
    if (v83)
    {

      OUTLINED_FUNCTION_27();
      if (v85)
      {
        v89 = v118;
        v36 = v118;
        v59 = v84;
        v60 = v82;
LABEL_52:
        v104 = v89;
        static ParticipantContactDetails.initialsFor(_:)(v36);
        lazy protocol witness table accessor for type String and conformance String();
        v61 = StringProtocol.localizedUppercase.getter();
        v40 = v105;
        OUTLINED_FUNCTION_133();
        type metadata accessor for ParticipantContactDetailsCache.BoxedDetails();
        v124 = (uint64_t)v36;
        v125 = v60;
        v126 = v38;
        v127 = v59;
        v128 = v33;
        v129 = v61;
        v130 = v40;
        v106 = v36;
        OUTLINED_FUNCTION_79_1();
        OUTLINED_FUNCTION_22_3();
        OUTLINED_FUNCTION_124();
        v107 = ParticipantContactDetailsCache.BoxedDetails.__allocating_init(details:)((uint64_t)&v124);
        objc_msgSend(v116, sel_setObject_forKey_, v107, v122);

        goto LABEL_53;
      }
      OUTLINED_FUNCTION_58_1();
      OUTLINED_FUNCTION_79_1();
      v60 = v82;
      v59 = v82;
      v33 = (void *)v38;
    }
    else
    {
      v60 = (uint64_t)v86;
      OUTLINED_FUNCTION_25();
      if (v85)
      {

        OUTLINED_FUNCTION_27();
        OUTLINED_FUNCTION_22_3();
        v59 = v84;
        v60 = v84;
      }
      else
      {
        OUTLINED_FUNCTION_58_1();
        if (v88)
        {
          if (one-time initialization token for conversationKit != -1)
            swift_once();
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
          v94 = OUTLINED_FUNCTION_16_9();
          *(_OWORD *)(v94 + 16) = xmmword_1BD6441D0;
          v124 = (uint64_t)v54;
          OUTLINED_FUNCTION_59(v94, (unint64_t *)&lazy cache variable for type metadata for CNContact);
          v95 = OUTLINED_FUNCTION_56_14();
          v97 = v96;
          *(_QWORD *)(v94 + 56) = v77;
          *(_QWORD *)(v94 + 64) = lazy protocol witness table accessor for type String and conformance String();
          *(_QWORD *)(v94 + 32) = v95;
          *(_QWORD *)(v94 + 40) = v97;
          static os_log_type_t.default.getter();
          os_log(_:dso:log:type:_:)();
          OUTLINED_FUNCTION_133();

          OUTLINED_FUNCTION_5_0();
          v59 = v60;
          v33 = v88;
          v38 = (unint64_t)v88;
          goto LABEL_46;
        }
        if (one-time initialization token for conversationKit != -1)
          swift_once();
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
        v108 = OUTLINED_FUNCTION_16_9();
        *(_OWORD *)(v108 + 16) = xmmword_1BD6441D0;
        v124 = (uint64_t)v54;
        OUTLINED_FUNCTION_59(v108, (unint64_t *)&lazy cache variable for type metadata for CNContact);
        OUTLINED_FUNCTION_56_14();
        *(_QWORD *)(v108 + 56) = v77;
        v109 = lazy protocol witness table accessor for type String and conformance String();
        OUTLINED_FUNCTION_54_16(v109);
        os_log(_:dso:log:type:_:)();
        OUTLINED_FUNCTION_2_1();
        v110 = objc_msgSend(v120, sel_value);
        v111 = OUTLINED_FUNCTION_19_16();
        OUTLINED_FUNCTION_57_7();

        v59 = v111;
        OUTLINED_FUNCTION_22_3();
        v60 = v111;
      }
      v38 = (unint64_t)v33;
    }
LABEL_46:
    v89 = v118;
    v36 = v118;
    goto LABEL_52;
  }
  if (v24)
  {
    v33 = v24;
    v117 = v26;
    v121 = (unint64_t)v24;
  }
  else
  {
    v62 = (void *)objc_opt_self();
    v63 = objc_msgSend(v62, sel_conversationKit);
    v117 = OUTLINED_FUNCTION_0_3(0x5F4E574F4E4B4E55, 0xEE00454349564544);
    v121 = v64;

    v65 = objc_msgSend(v62, sel_conversationKit);
    v26 = OUTLINED_FUNCTION_7_13(0x5F4E574F4E4B4E55, 0xEE00454349564544);
    OUTLINED_FUNCTION_57_7();
  }
  v119 = v26;
  OUTLINED_FUNCTION_16_31();
  OUTLINED_FUNCTION_46_18();
  OUTLINED_FUNCTION_20_12();
  OUTLINED_FUNCTION_50_2();
  if (one-time initialization token for initials != -1)
    swift_once();
  OUTLINED_FUNCTION_1();
  v66 = (id)static NSPersonNameComponentsFormatter.initials;
  v67 = PersonNameComponents._bridgeToObjectiveC()().super.isa;
  v68 = objc_msgSend(v66, sel_stringFromPersonNameComponents_, v67);

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  OUTLINED_FUNCTION_60_11(v115);
  lazy protocol witness table accessor for type String and conformance String();
  v61 = StringProtocol.localizedUppercase.getter();
  v40 = v69;

  OUTLINED_FUNCTION_53();
  v36 = 0;
  v59 = v119;
  v38 = v121;
  v60 = v117;
LABEL_53:
  *v123 = v36;
  v123[1] = v60;
  v123[2] = v38;
  v123[3] = v59;
  v123[4] = v33;
  v123[5] = v61;
  v123[6] = v40;
  OUTLINED_FUNCTION_52_1();
}

uint64_t ParticipantContactDetails.init(handle:conversation:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  specialized static ParticipantContactDetailsCache.cache(for:)(a2);
  ParticipantContactDetailsCache.contactDetails(for:nickname:)(a1, 0, 0, v6, v7, v8, v9, v10, v15, v16, a1, v20, v21, v22, v24, v26, v28, v30, v32,
    v33);
  v17 = v23;
  OUTLINED_FUNCTION_86();
  OUTLINED_FUNCTION_26_22();
  static ParticipantContactDetails.initialsFor(_:)(v23);
  lazy protocol witness table accessor for type String and conformance String();
  v11 = StringProtocol.localizedUppercase.getter();
  v13 = v12;

  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_21_0();
  OUTLINED_FUNCTION_30_4();

  swift_release();
  result = OUTLINED_FUNCTION_58_1();
  *a3 = v23;
  a3[1] = v25;
  a3[2] = v27;
  a3[3] = v29;
  a3[4] = v31;
  a3[5] = v11;
  a3[6] = v13;
  return result;
}

void static ParticipantContactDetailsCache.cache(for:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = a1[3];
  v3 = __swift_project_boxed_opaque_existential_1(a1, v2);
  specialized static ParticipantContactDetailsCache.cache(for:)((uint64_t)v3, v1, v2);
}

void ParticipantContactDetails.init(handle:call:)()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  _QWORD *v4;
  _QWORD *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  OUTLINED_FUNCTION_93();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  type metadata accessor for ParticipantContactDetailsCache();
  v6 = lazy protocol witness table accessor for type TUCall and conformance TUCall();
  if (one-time initialization token for queue != -1)
    v6 = swift_once();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_55_15();
  ParticipantContactDetailsCache.contactDetails(for:nickname:)((uint64_t)v3, 0, 0, v7, v8, v9, v10, v11, v15, v19, v17, v18, v19, v21, v23, v25, v27, v29, v30,
    v31);
  v16 = v20;
  OUTLINED_FUNCTION_26_22();
  OUTLINED_FUNCTION_79_1();
  static ParticipantContactDetails.initialsFor(_:)(v20);
  lazy protocol witness table accessor for type String and conformance String();
  v12 = StringProtocol.localizedUppercase.getter();
  v14 = v13;

  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_25();
  OUTLINED_FUNCTION_21_0();

  swift_release();
  OUTLINED_FUNCTION_53();
  *v5 = v20;
  v5[1] = v22;
  v5[2] = v24;
  v5[3] = v26;
  v5[4] = v28;
  v5[5] = v12;
  v5[6] = v14;
  OUTLINED_FUNCTION_52_1();
}

void static ParticipantContactDetailsCache.cache(for:)()
{
  OUTLINED_FUNCTION_6_6();
  swift_getObjectType();
  specialized static ParticipantContactDetailsCache.cache(for:)();
}

uint64_t ParticipantContactDetails.hash(into:)()
{
  void **v0;
  void *v1;
  id v2;

  OUTLINED_FUNCTION_93();
  v1 = *v0;
  if (*v0)
  {
    Hasher._combine(_:)(1u);
    v2 = v1;
    NSObject.hash(into:)();

  }
  else
  {
    Hasher._combine(_:)(0);
  }
  OUTLINED_FUNCTION_26_22();
  String.hash(into:)();
  OUTLINED_FUNCTION_21_0();
  OUTLINED_FUNCTION_35_0();
  String.hash(into:)();
  OUTLINED_FUNCTION_133();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  return swift_bridgeObjectRelease();
}

uint64_t static ParticipantContactDetails.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  char v16;
  BOOL v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t result;
  BOOL v22;
  char v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v2 = *(void **)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v8 = *(void **)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v9 = *(_QWORD *)(a2 + 16);
  v10 = *(_QWORD *)(a2 + 24);
  v11 = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)a1)
  {
    if (v8)
    {
      v26 = *(_QWORD *)(a2 + 48);
      v27 = *(_QWORD *)(a2 + 40);
      v28 = *(_QWORD *)(a1 + 48);
      v29 = *(_QWORD *)(a1 + 40);
      v25 = *(_QWORD *)(a2 + 32);
      v12 = *(_QWORD *)(a2 + 24);
      v13 = *(_QWORD *)(a1 + 32);
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for CNContact);
      v14 = v8;
      v15 = v2;
      v16 = static NSObject.== infix(_:_:)();

      v6 = v13;
      v10 = v12;
      v11 = v25;
      if ((v16 & 1) != 0)
        goto LABEL_4;
    }
    return 0;
  }
  v26 = *(_QWORD *)(a2 + 48);
  v27 = *(_QWORD *)(a2 + 40);
  v28 = *(_QWORD *)(a1 + 48);
  v29 = *(_QWORD *)(a1 + 40);
  if (v8)
    return 0;
LABEL_4:
  v17 = v3 == v7 && v4 == v9;
  if (v17
    || (v18 = v6, v19 = _stringCompareWithSmolCheck(_:_:expecting:)(), v6 = v18, v20 = v19, result = 0, (v20 & 1) != 0))
  {
    v22 = v5 == v10 && v6 == v11;
    if (v22 || (v23 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v23 & 1) != 0))
    {
      if (v29 == v27 && v28 == v26)
        return 1;
      else
        return _stringCompareWithSmolCheck(_:_:expecting:)();
    }
  }
  return result;
}

Swift::Int ParticipantContactDetails.hashValue.getter()
{
  void **v0;
  void *v1;
  id v2;

  v1 = *v0;
  Hasher.init(_seed:)();
  if (v1)
  {
    Hasher._combine(_:)(1u);
    v2 = v1;
    NSObject.hash(into:)();

  }
  else
  {
    Hasher._combine(_:)(0);
  }
  OUTLINED_FUNCTION_86();
  String.hash(into:)();
  OUTLINED_FUNCTION_30_4();
  OUTLINED_FUNCTION_25_2();
  String.hash(into:)();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_124();
  String.hash(into:)();
  OUTLINED_FUNCTION_13_3();
  return Hasher._finalize()();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance ParticipantContactDetails()
{
  void **v0;
  void *v1;
  id v2;

  v1 = *v0;
  Hasher.init(_seed:)();
  if (v1)
  {
    Hasher._combine(_:)(1u);
    v2 = v1;
    NSObject.hash(into:)();

  }
  else
  {
    Hasher._combine(_:)(0);
  }
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

void one-time initialization function for faceTime()
{
  void *v0;
  id v1;

  type metadata accessor for ParticipantContactDetailsCache();
  v1 = (id)TUPreferredFaceTimeBundleIdentifier();
  OUTLINED_FUNCTION_19_16();
  OUTLINED_FUNCTION_45_8();

  OUTLINED_FUNCTION_38_21();
  static ParticipantContactDetailsCache.faceTime = (_UNKNOWN *)ParticipantContactDetailsCache.__allocating_init(bundleIdentifier:)();
  OUTLINED_FUNCTION_18();
}

{
  uint64_t v0;
  char v1;

  type metadata accessor for ReportSpamManager();
  v1 = 1;
  ReportSpamManager.__allocating_init(idsServiceType:)(&v1);
  static ReportSpamManager.faceTime = v0;
}

uint64_t ParticipantContactDetailsCache.__allocating_init(bundleIdentifier:)()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;

  OUTLINED_FUNCTION_6_6();
  v2 = (void *)objc_opt_self();
  v3 = (void *)MEMORY[0x1C3B72E00](v1, v0);
  OUTLINED_FUNCTION_13_3();
  v4 = objc_msgSend(v2, sel_tu_contactStoreConfigurationForBundleIdentifier_, v3);

  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97298]), sel_initWithConfiguration_, v4);
  v6 = OUTLINED_FUNCTION_15();
  ParticipantContactDetailsCache.init(contactStore:)((uint64_t)v5);
  return v6;
}

uint64_t static ParticipantContactDetailsCache.faceTime.getter()
{
  if (one-time initialization token for faceTime != -1)
    swift_once();
  return swift_retain();
}

void one-time initialization function for queue()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_93();
  v0 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_77();
  v4 = v3 - v2;
  type metadata accessor for OS_dispatch_queue.Attributes();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_77();
  type metadata accessor for DispatchQoS();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_77();
  OUTLINED_FUNCTION_59(v7, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  static DispatchQoS.unspecified.getter();
  lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v1 + 104))(v4, *MEMORY[0x1E0DEF8D0], v0);
  static ParticipantContactDetailsCache.queue = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  OUTLINED_FUNCTION_52_1();
}

uint64_t one-time initialization function for cachesByBundleIdentifiers()
{
  uint64_t result;

  type metadata accessor for ParticipantContactDetailsCache();
  result = Dictionary.init(dictionaryLiteral:)();
  static ParticipantContactDetailsCache.cachesByBundleIdentifiers = result;
  return result;
}

uint64_t closure #1 in static ParticipantContactDetailsCache.cache(for:)@<X0>(uint64_t a1@<X2>, _QWORD *a2@<X8>)
{
  uint64_t ObjectType;
  uint64_t (*v5)(uint64_t, uint64_t);
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  void *v14;
  uint64_t result;

  ObjectType = swift_getObjectType();
  v5 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 160);
  v6 = (void *)v5(ObjectType, a1);
  outlined bridged method (ob) of @objc TUCallProvider.bundleIdentifier.getter(v6);
  if (v8)
  {
    v9 = v7;
    v10 = v8;
  }
  else
  {
    v11 = (void *)v5(ObjectType, a1);
    v12 = objc_msgSend(v11, sel_identifier);

    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v10 = v13;

  }
  v14 = static ParticipantContactDetailsCache.queue_cache(forBundleIdentifier:)(v9, v10);
  result = swift_bridgeObjectRelease();
  *a2 = v14;
  return result;
}

void *static ParticipantContactDetailsCache.queue_cache(forBundleIdentifier:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v20;
  uint64_t v21;

  v4 = type metadata accessor for DispatchPredicate();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)((char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (one-time initialization token for queue != -1)
    swift_once();
  v8 = static ParticipantContactDetailsCache.queue;
  *v7 = static ParticipantContactDetailsCache.queue;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DEF740], v4);
  v9 = (id)v8;
  LOBYTE(v8) = _dispatchPreconditionTest(_:)();
  (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  v10 = (id)TUPreferredFaceTimeBundleIdentifier();
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v13 = v12;

  if (v11 == a1 && v13 == a2)
  {
    swift_bridgeObjectRelease();
LABEL_14:
    if (one-time initialization token for faceTime == -1)
    {
LABEL_15:
      v18 = static ParticipantContactDetailsCache.faceTime;
      swift_retain();
      return v18;
    }
LABEL_19:
    swift_once();
    goto LABEL_15;
  }
  v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if ((v15 & 1) != 0)
    goto LABEL_14;
  if (one-time initialization token for cachesByBundleIdentifiers != -1)
    swift_once();
  swift_beginAccess();
  v16 = static ParticipantContactDetailsCache.cachesByBundleIdentifiers;
  swift_bridgeObjectRetain();
  specialized Dictionary.subscript.getter(a1, a2, v16);
  v18 = v17;
  swift_bridgeObjectRelease();
  swift_endAccess();
  if (!v18)
  {
    swift_bridgeObjectRetain();
    v18 = (void *)ParticipantContactDetailsCache.__allocating_init(bundleIdentifier:)();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    v20 = swift_retain();
    specialized Dictionary._Variant.setValue(_:forKey:)(v20, a1, a2);
    swift_endAccess();
    swift_bridgeObjectRelease();
  }
  return v18;
}

uint64_t closure #1 in static ParticipantContactDetailsCache.cache(for:)@<X0>(_QWORD *a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t result;

  v3 = a1[3];
  v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 256))(v3, v4);
  v7 = static ParticipantContactDetailsCache.queue_cache(forBundleIdentifier:)(v5, v6);
  result = swift_bridgeObjectRelease();
  *a2 = v7;
  return result;
}

uint64_t static ParticipantContactDetailsCache.resetAll()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  NSObject *v4;
  dispatch_block_t v5;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  _QWORD v8[6];

  if (one-time initialization token for queue != -1)
    swift_once();
  v1 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v1 + 16) = v0;
  v2 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v2 + 16) = partial apply for closure #1 in static ParticipantContactDetailsCache.resetAll();
  *(_QWORD *)(v2 + 24) = v1;
  v8[4] = partial apply for thunk for @callee_guaranteed () -> ();
  v8[5] = v2;
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 1107296256;
  v8[2] = thunk for @escaping @callee_guaranteed () -> ();
  v8[3] = &block_descriptor_21;
  v3 = _Block_copy(v8);
  swift_retain();
  OUTLINED_FUNCTION_17_22();
  v4 = OUTLINED_FUNCTION_38_21();
  dispatch_sync(v4, v5);
  _Block_release(v3);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  return result;
}

uint64_t closure #1 in static ParticipantContactDetailsCache.resetAll()()
{
  uint64_t v0;
  uint64_t v1;
  int64_t v2;
  unint64_t v3;
  int64_t v4;
  unint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  int64_t v9;
  int64_t v10;
  _QWORD v12[5];

  if (one-time initialization token for faceTime == -1)
    goto LABEL_2;
LABEL_28:
  swift_once();
LABEL_2:
  objc_msgSend(*((id *)static ParticipantContactDetailsCache.faceTime + 3), sel_removeAllObjects);
  if (one-time initialization token for cachesByBundleIdentifiers != -1)
    swift_once();
  swift_beginAccess();
  specialized _NativeDictionary.makeIterator()(v12, static ParticipantContactDetailsCache.cachesByBundleIdentifiers);
  v0 = v12[0];
  v1 = v12[1];
  v2 = v12[3];
  v3 = v12[4];
  v4 = (unint64_t)(v12[2] + 64) >> 6;
  swift_bridgeObjectRetain_n();
  if (v3)
  {
LABEL_5:
    v5 = __clz(__rbit64(v3));
    v3 &= v3 - 1;
    v6 = v5 | (v2 << 6);
    goto LABEL_24;
  }
  while (1)
  {
    v7 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v7 >= v4)
      goto LABEL_26;
    v8 = *(_QWORD *)(v1 + 8 * v7);
    v9 = v2 + 1;
    if (!v8)
    {
      v9 = v2 + 2;
      if (v2 + 2 >= v4)
        goto LABEL_26;
      v8 = *(_QWORD *)(v1 + 8 * v9);
      if (!v8)
      {
        v9 = v2 + 3;
        if (v2 + 3 >= v4)
          goto LABEL_26;
        v8 = *(_QWORD *)(v1 + 8 * v9);
        if (!v8)
        {
          v9 = v2 + 4;
          if (v2 + 4 >= v4)
            goto LABEL_26;
          v8 = *(_QWORD *)(v1 + 8 * v9);
          if (!v8)
          {
            v9 = v2 + 5;
            if (v2 + 5 >= v4)
              goto LABEL_26;
            v8 = *(_QWORD *)(v1 + 8 * v9);
            if (!v8)
            {
              v9 = v2 + 6;
              if (v2 + 6 >= v4)
                goto LABEL_26;
              v8 = *(_QWORD *)(v1 + 8 * v9);
              if (!v8)
                break;
            }
          }
        }
      }
    }
LABEL_23:
    v3 = (v8 - 1) & v8;
    v6 = __clz(__rbit64(v8)) + (v9 << 6);
    v2 = v9;
LABEL_24:
    objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(v0 + 56) + 8 * v6) + 24), sel_removeAllObjects);
    if (v3)
      goto LABEL_5;
  }
  v10 = v2 + 7;
  while (v10 < v4)
  {
    v8 = *(_QWORD *)(v1 + 8 * v10++);
    if (v8)
    {
      v9 = v10 - 1;
      goto LABEL_23;
    }
  }
LABEL_26:
  swift_bridgeObjectRelease();
  return swift_release();
}

Swift::Void __swiftcall ParticipantContactDetailsCache.reset()()
{
  uint64_t v0;

  objc_msgSend(*(id *)(v0 + 24), sel_removeAllObjects);
}

id ParticipantContactDetailsCache.BoxedDetails.__allocating_init(details:)(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  char *v7;
  objc_super v9;

  v3 = (char *)objc_allocWithZone(v1);
  v5 = *(_OWORD *)(a1 + 16);
  v4 = *(_OWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 48);
  v7 = &v3[OBJC_IVAR____TtCC15ConversationKit30ParticipantContactDetailsCacheP33_84AC34FA5CB4344A8378F61D97FA6ADC12BoxedDetails_details];
  *(_OWORD *)v7 = *(_OWORD *)a1;
  *((_OWORD *)v7 + 1) = v5;
  *((_OWORD *)v7 + 2) = v4;
  *((_QWORD *)v7 + 6) = v6;
  v9.receiver = v3;
  v9.super_class = v1;
  return objc_msgSendSuper2(&v9, sel_init);
}

void ParticipantContactDetailsCache.BoxedDetails.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ParticipantContactDetailsCache.BoxedDetails.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void ParticipantContactDetailsCache.__allocating_init(contactStore:)(uint64_t a1)
{
  OUTLINED_FUNCTION_15();
  ParticipantContactDetailsCache.init(contactStore:)(a1);
  OUTLINED_FUNCTION_0();
}

void ParticipantContactDetailsCache.init(contactStore:)(uint64_t a1)
{
  uint64_t v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99D38]), sel_init);
  *(_QWORD *)(v1 + 16) = a1;
  *(_QWORD *)(v1 + 24) = v3;
  OUTLINED_FUNCTION_0();
}

uint64_t ParticipantContactDetailsCache.key(for:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Participant(0);
  v6 = *(void **)(a1 + *(int *)(v5 + 28));
  if (v6)
  {
    v7 = v6;
    v8 = ParticipantContactDetailsCache.key(for:)(v7);

  }
  else
  {
    v9 = v5;
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1BD6441D0;
    outlined init with copy of Participant(a1, (uint64_t)v4);
    __swift_storeEnumTagSinglePayload((uint64_t)v4, 0, 1, v9);
    specialized >> prefix<A>(_:)((uint64_t)v4);
    v12 = v11;
    v14 = v13;
    outlined destroy of Participant?((uint64_t)v4);
    *(_QWORD *)(v10 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v10 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v10 + 32) = v12;
    *(_QWORD *)(v10 + 40) = v14;
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    return 0;
  }
  return v8;
}

uint64_t ParticipantContactDetailsCache.key(for:)(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = objc_msgSend(a1, sel_value);
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  lazy protocol witness table accessor for type String and conformance String();
  v2 = StringProtocol.localizedLowercase.getter();
  v4 = v3;
  swift_bridgeObjectRelease();
  v5 = MEMORY[0x1C3B72E00](v2, v4);
  swift_bridgeObjectRelease();
  return v5;
}

id TUHandle.formattedPhoneNumber.getter(uint64_t a1)
{
  id result;
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;

  if (OUTLINED_FUNCTION_25_1(a1, sel_type) != (id)2)
    return (id)OUTLINED_FUNCTION_38_21();
  result = OUTLINED_FUNCTION_25_1(2, sel_value);
  if (result)
  {
    v2 = result;
    v3 = (void *)PNCopyBestGuessCountryCodeForNumber();

    if (!v3)
      return (id)OUTLINED_FUNCTION_38_21();
    result = OUTLINED_FUNCTION_25_1(v4, sel_value);
    if (result)
    {
      v5 = result;
      v6 = (void *)CFPhoneNumberCreate();

      if (v6)
      {
        if (CFPhoneNumberCreateString())
        {
          static String._unconditionallyBridgeFromObjectiveC(_:)();
          OUTLINED_FUNCTION_17_34();

          return (id)OUTLINED_FUNCTION_38_21();
        }

      }
      return (id)OUTLINED_FUNCTION_38_21();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t ParticipantContactDetailsCache.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t ParticipantContactDetailsCache.__deallocating_deinit()
{
  ParticipantContactDetailsCache.deinit();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ParticipantContactDetailsCache.BoxedDetails()
{
  return objc_opt_self();
}

uint64_t outlined destroy of Participant?(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Participant?);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t outlined bridged method (pb) of @objc CNContact.displayName.getter(void *a1)
{
  id v1;
  void *v2;

  v1 = objc_msgSend(a1, sel_displayName);
  if (v1)
  {
    v2 = v1;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

  }
  return OUTLINED_FUNCTION_50();
}

uint64_t specialized static ParticipantContactDetailsCache.cache(for:)(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v6;
  _QWORD v7[5];

  type metadata accessor for ParticipantContactDetailsCache();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
  v7[3] = v2;
  v7[4] = &protocol witness table for TUConversation;
  v7[0] = a1;
  v3 = one-time initialization token for queue;
  v4 = a1;
  if (v3 != -1)
    v4 = (id)swift_once();
  MEMORY[0x1E0C80A78](v4);
  OS_dispatch_queue.sync<A>(execute:)();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  return v6;
}

void specialized static ParticipantContactDetailsCache.cache(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v8;
  uint64_t v9[5];

  OUTLINED_FUNCTION_6_6();
  v9[3] = v5;
  v9[4] = v6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v9);
  v8 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(boxed_opaque_existential_1, v3, a3);
  if (one-time initialization token for queue != -1)
    v8 = swift_once();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_55_15();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  OUTLINED_FUNCTION_91();
}

uint64_t type metadata accessor for ParticipantContactDetailsCache()
{
  return objc_opt_self();
}

unint64_t lazy protocol witness table accessor for type TUCall and conformance TUCall()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type TUCall and conformance TUCall;
  if (!lazy protocol witness table cache variable for type TUCall and conformance TUCall)
  {
    type metadata accessor for NSObject(255, (unint64_t *)&lazy cache variable for type metadata for TUCall);
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for TUCall, v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type TUCall and conformance TUCall);
  }
  return result;
}

uint64_t partial apply for closure #1 in static ParticipantContactDetailsCache.cache(for:)@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return closure #1 in static ParticipantContactDetailsCache.cache(for:)(*(_QWORD *)(v1 + 32), a1);
}

{
  uint64_t v1;

  return closure #1 in static ParticipantContactDetailsCache.cache(for:)(*(_QWORD **)(v1 + 24), a1);
}

void specialized static ParticipantContactDetailsCache.cache(for:)()
{
  uint64_t v0;

  OUTLINED_FUNCTION_6_6();
  if (one-time initialization token for queue != -1)
    v0 = swift_once();
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_55_15();
  OUTLINED_FUNCTION_91();
}

uint64_t sub_1BD14F2C0()
{
  return OUTLINED_FUNCTION_23_4();
}

uint64_t partial apply for closure #1 in static ParticipantContactDetailsCache.resetAll()()
{
  return closure #1 in static ParticipantContactDetailsCache.resetAll()();
}

uint64_t sub_1BD14F2D4()
{
  return OUTLINED_FUNCTION_23_4();
}

unint64_t lazy protocol witness table accessor for type ParticipantContactDetails and conformance ParticipantContactDetails()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ParticipantContactDetails and conformance ParticipantContactDetails;
  if (!lazy protocol witness table cache variable for type ParticipantContactDetails and conformance ParticipantContactDetails)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ParticipantContactDetails, &type metadata for ParticipantContactDetails);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ParticipantContactDetails and conformance ParticipantContactDetails);
  }
  return result;
}

uint64_t destroy for ParticipantContactDetails(id *a1)
{

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ParticipantContactDetails(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(_QWORD *)(a2 + 24);
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v5;
  v6 = *(_QWORD *)(a2 + 40);
  a1[4] = *(_QWORD *)(a2 + 32);
  a1[5] = v6;
  a1[6] = *(_QWORD *)(a2 + 48);
  v7 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ParticipantContactDetails(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ParticipantContactDetails(uint64_t a1, _QWORD *a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v5 = a2[2];
  *(_QWORD *)(a1 + 8) = a2[1];
  *(_QWORD *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  v6 = a2[4];
  *(_QWORD *)(a1 + 24) = a2[3];
  *(_QWORD *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  v7 = a2[6];
  *(_QWORD *)(a1 + 40) = a2[5];
  *(_QWORD *)(a1 + 48) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ParticipantContactDetails(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 56))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ParticipantContactDetails(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticipantContactDetails()
{
  return &type metadata for ParticipantContactDetails;
}

uint64_t method lookup function for ParticipantContactDetailsCache()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ParticipantContactDetailsCache.__allocating_init(contactStore:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

unint64_t lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes;
  if (!lazy protocol witness table cache variable for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes)
  {
    v1 = type metadata accessor for OS_dispatch_queue.Attributes();
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0DEF828], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type [OS_dispatch_queue.Attributes] and conformance [A];
  if (!lazy protocol witness table cache variable for type [OS_dispatch_queue.Attributes] and conformance [A])
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type [OS_dispatch_queue.Attributes] and conformance [A]);
  }
  return result;
}

uint64_t closure #1 in static ParticipantContactDetailsCache.cache(for:)partial apply@<X0>(_QWORD *a1@<X8>)
{
  return partial apply for closure #1 in static ParticipantContactDetailsCache.cache(for:)(a1);
}

{
  return partial apply for closure #1 in static ParticipantContactDetailsCache.cache(for:)(a1);
}

Swift::Void __swiftcall CallControlsMenuViewController.checkForDynamicState()()
{
  char *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[8];
  BOOL v30;
  char v31;

  CallControlsViewController.menuViewController.getter(&OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController____lazy_storage___menuView, (uint64_t (*)(uint64_t))closure #1 in CallControlsMenuViewController.menuView.getter);
  v2 = v1;
  objc_msgSend(v1, sel_frame);
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;

  v11 = (void *)MEMORY[0x1C3B752C0](&v0[OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_dodgingView]);
  if (v11)
  {
    OUTLINED_FUNCTION_4_42();
    v13 = v12;
    v15 = v14;
    v17 = v16;
    v19 = v18;

  }
  else
  {
    v13 = 0;
    v15 = 0;
    v17 = 0;
    v19 = 0;
  }
  v29[0] = v4;
  v29[1] = v6;
  v29[2] = v8;
  v29[3] = v10;
  v29[4] = v13;
  v29[5] = v15;
  v29[6] = v17;
  v29[7] = v19;
  v30 = v11 == 0;
  v31 = 0;
  CallControlsMenuViewController.dodgingFrames.setter((uint64_t)v29);
  v20 = objc_msgSend(v0, sel_view);
  if (v20)
  {
    v21 = v20;
    v22 = objc_msgSend(v20, sel_window);

    if (v22)
    {
      OUTLINED_FUNCTION_4_42();
      v24 = v23;
      v26 = v25;

      v27 = v24;
      v28 = v26;
    }
    else
    {
      v27 = 0;
      v28 = 0;
    }
    CallControlsMenuViewController.windowSize.setter(v27, v28, v22 == 0);
  }
  else
  {
    __break(1u);
  }
}

void CallControlsMenuViewController.isOneToOneModeEnabled.setter(char a1)
{
  SharedContentViewController.isPipped.setter(a1, &OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_isOneToOneModeEnabled, (void (*)(uint64_t))CallControlsMenuViewController.isOneToOneModeEnabled.didset);
}

UILayoutGuide __swiftcall CallControlsMenuViewController.updateViewDependencies(containingView:topCornerView:dodgingView:)(UIView *containingView, UIView_optional *topCornerView, UIView *dodgingView)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  Class isa;
  UIView_optional *v26;
  UIView_optional *v27;
  id v28;
  id v29;
  _QWORD *v30;
  void *v31;
  void *v32;
  id v33;
  uint64_t v34;
  id v35;
  char **v36;
  char **v37;
  id v38;
  id v39;
  char ***v40;
  void *v41;
  void *v42;
  char **v45;

  v5 = v3;
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC39A0]), sel_init);
  v8 = OUTLINED_FUNCTION_9((uint64_t)-[UIView addLayoutGuide:](containingView, sel_addLayoutGuide_, v7), sel_topAnchor);
  v9 = OUTLINED_FUNCTION_39((uint64_t)v8, sel_topAnchor);
  v10 = OUTLINED_FUNCTION_29_26((uint64_t)v9, sel_constraintEqualToAnchor_constant_);
  OUTLINED_FUNCTION_10_20();

  v12 = OUTLINED_FUNCTION_9(v11, sel_bottomAnchor);
  v13 = OUTLINED_FUNCTION_39((uint64_t)v12, sel_bottomAnchor);
  v14 = OUTLINED_FUNCTION_29_26((uint64_t)v13, sel_constraintEqualToAnchor_constant_);
  OUTLINED_FUNCTION_18_14();

  v15 = (void *)objc_opt_self();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v16 = OUTLINED_FUNCTION_5_10();
  *(_OWORD *)(v16 + 16) = xmmword_1BD644140;
  *(_QWORD *)(v16 + 32) = v4;
  *(_QWORD *)(v16 + 40) = &selRef_associatedAppBundleIdentifier;
  v17 = v4;
  v45 = &selRef_associatedAppBundleIdentifier;
  v18 = OUTLINED_FUNCTION_9((uint64_t)v45, sel_leadingAnchor);
  v19 = OUTLINED_FUNCTION_39((uint64_t)v18, sel_leadingAnchor);
  v20 = OUTLINED_FUNCTION_1_21((uint64_t)v19, sel_constraintEqualToAnchor_constant_);

  *(_QWORD *)(v16 + 48) = v20;
  v22 = OUTLINED_FUNCTION_9(v21, sel_trailingAnchor);
  v23 = OUTLINED_FUNCTION_39((uint64_t)v22, sel_trailingAnchor);
  v24 = OUTLINED_FUNCTION_1_21((uint64_t)v23, sel_constraintEqualToAnchor_constant_);

  *(_QWORD *)(v16 + 56) = v24;
  OUTLINED_FUNCTION_17_4();
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v15, sel_activateConstraints_, isa);

  swift_unknownObjectWeakAssign();
  v26 = topCornerView;
  OUTLINED_FUNCTION_35_16();
  swift_unknownObjectWeakAssign();
  if (topCornerView)
  {
    v27 = topCornerView;
    v28 = OUTLINED_FUNCTION_9((uint64_t)v27, sel_topAnchor);
    v29 = -[UIView_optional bottomAnchor](v27, sel_bottomAnchor);
    v26 = (UIView_optional *)OUTLINED_FUNCTION_1_21((uint64_t)v29, sel_constraintEqualToAnchor_constant_);

  }
  v30 = (_QWORD *)(v5 + OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_topConstraints);
  v31 = *(void **)(v5 + OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_topConstraints);
  v32 = *(void **)(v5 + OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_topConstraints + 8);
  *v30 = v17;
  v30[1] = v26;
  v33 = v17;
  outlined consume of ConversationControlsRecipe.View?(v31, v32);
  v35 = OUTLINED_FUNCTION_9(v34, sel_bottomAnchor);
  OUTLINED_FUNCTION_7_56(&OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController____lazy_storage___menuView, (uint64_t (*)(uint64_t))closure #1 in CallControlsMenuViewController.menuView.getter);
  v37 = v36;
  v38 = objc_msgSend(v36, sel_topAnchor);
  OUTLINED_FUNCTION_10_20();
  v39 = objc_msgSend(v35, sel_constraintEqualToAnchor_, v32);
  OUTLINED_FUNCTION_8_20();

  v40 = (char ***)(v5 + OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_bottomConstraints);
  v41 = *(void **)(v5 + OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_bottomConstraints);
  v42 = *(void **)(v5 + OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_bottomConstraints + 8);
  *v40 = v45;
  v40[1] = v37;
  outlined consume of ConversationControlsRecipe.View?(v41, v42);
  return (UILayoutGuide)v7;
}

id CallControlsMenuViewController.__allocating_init(controlsManager:isScreenLocked:rosterViewProvider:service:sidebarStateStream:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  objc_class *v6;
  id v13;

  v13 = objc_allocWithZone(v6);
  return CallControlsMenuViewController.init(controlsManager:isScreenLocked:rosterViewProvider:service:sidebarStateStream:)(a1, a2, a3, a4, a5, a6);
}

void CallControlsMenuViewController.isHidden.setter(char a1)
{
  SharedContentViewController.isPipped.setter(a1, &OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_isHidden, (void (*)(uint64_t))CallControlsMenuViewController.isHidden.didset);
}

id CallControlsMenuViewController.init(controlsManager:isScreenLocked:rosterViewProvider:service:sidebarStateStream:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _BYTE *v6;
  objc_class *ObjectType;
  char *v13;
  _QWORD *v14;
  _QWORD *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  id v19;
  id v20;
  objc_super v22;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v6[OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_sizeUpdater + 8] = 0;
  OUTLINED_FUNCTION_54();
  v6[OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_isHidden] = 0;
  v6[OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_isOneToOneModeEnabled] = 1;
  v13 = &v6[OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_windowSize];
  *(_QWORD *)v13 = 0;
  *((_QWORD *)v13 + 1) = 0;
  v13[16] = 1;
  v14 = &v6[OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_topConstraints];
  *v14 = 0;
  v14[1] = 0;
  v15 = &v6[OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_bottomConstraints];
  *v15 = 0;
  v15[1] = 0;
  v16 = &v6[OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_dodgingFrames];
  *(_OWORD *)v16 = 0u;
  *((_OWORD *)v16 + 1) = 0u;
  *((_OWORD *)v16 + 2) = 0u;
  *((_OWORD *)v16 + 3) = 0u;
  v16[64] = 0;
  v16[65] = 1;
  v17 = &v6[OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController____lazy_storage___screenShareService];
  *(_OWORD *)v17 = 0u;
  *((_OWORD *)v17 + 1) = 0u;
  *((_QWORD *)v17 + 4) = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController____lazy_storage___menuViewModel] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController____lazy_storage___menuBlurView] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController____lazy_storage___menuShadowView] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_menuBlurTrailingConstraint] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController____lazy_storage___menuView] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_cancellables] = MEMORY[0x1E0DEE9D8];
  OUTLINED_FUNCTION_54();
  OUTLINED_FUNCTION_54();
  OUTLINED_FUNCTION_54();
  *(_QWORD *)&v6[OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_rosterViewProvider + 8] = 0;
  v18 = OUTLINED_FUNCTION_54();
  *(_QWORD *)&v6[OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_controlsManager] = a1;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_isScreenLocked] = a2;
  *(_QWORD *)(v18 + 8) = a4;
  OUTLINED_FUNCTION_35_16();
  outlined init with copy of RadarReporting(a5, (uint64_t)&v6[OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_service]);
  *(_QWORD *)&v6[OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_sidebarStateStream] = a6;
  v22.receiver = v6;
  v22.super_class = ObjectType;
  v19 = a1;
  swift_retain();
  v20 = objc_msgSendSuper2(&v22, sel_initWithNibName_bundle_, 0, 0);

  swift_release();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a5);
  return v20;
}

void CallControlsMenuViewController.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;

  objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  OUTLINED_FUNCTION_0();
}

void CallControlsMenuViewController.init(coder:)()
{
  _BYTE *v0;
  char *v1;
  _QWORD *v2;
  _QWORD *v3;
  char *v4;
  char *v5;

  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_sizeUpdater + 8] = 0;
  OUTLINED_FUNCTION_54();
  v0[OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_isHidden] = 0;
  v0[OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_isOneToOneModeEnabled] = 1;
  v1 = &v0[OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_windowSize];
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;
  v1[16] = 1;
  v2 = &v0[OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_topConstraints];
  *v2 = 0;
  v2[1] = 0;
  v3 = &v0[OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_bottomConstraints];
  *v3 = 0;
  v3[1] = 0;
  v4 = &v0[OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_dodgingFrames];
  *(_OWORD *)v4 = 0u;
  *((_OWORD *)v4 + 1) = 0u;
  *((_OWORD *)v4 + 2) = 0u;
  *((_OWORD *)v4 + 3) = 0u;
  v4[64] = 0;
  v4[65] = 1;
  v5 = &v0[OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController____lazy_storage___screenShareService];
  *(_OWORD *)v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;
  *((_QWORD *)v5 + 4) = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController____lazy_storage___menuViewModel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController____lazy_storage___menuBlurView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController____lazy_storage___menuShadowView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_menuBlurTrailingConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController____lazy_storage___menuView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_cancellables] = MEMORY[0x1E0DEE9D8];
  OUTLINED_FUNCTION_54();
  OUTLINED_FUNCTION_54();
  OUTLINED_FUNCTION_54();
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_rosterViewProvider + 8] = 0;
  OUTLINED_FUNCTION_54();

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Void __swiftcall CallControlsMenuViewController.viewDidLoad()()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  void *v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  void *v36;
  id v37;
  void *v38;
  void *v39;
  id v40;
  id v41;
  uint64_t v42;
  id v43;
  id v44;
  objc_super v45;
  _BYTE v46[56];
  double v47;

  v45.receiver = v0;
  v45.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v45, sel_viewDidLoad);
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_service + 24];
  v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_service + 32];
  __swift_project_boxed_opaque_existential_1(&v0[OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_service], v2);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 24))(v2, v3);
  CallControlsMenuViewController.blurConfiguration(conversationState:)(v4, (uint64_t)v46);
  CallControlsViewController.menuViewController.getter(&OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController____lazy_storage___menuBlurView, (uint64_t (*)(uint64_t))closure #1 in CallControlsMenuViewController.menuBlurView.getter);
  v6 = objc_msgSend(v5, sel_trailingAnchor);
  OUTLINED_FUNCTION_15_2();
  v7 = OUTLINED_FUNCTION_1_55();
  if (v7)
  {
    v8 = v7;
    v9 = objc_msgSend(v7, sel_trailingAnchor);

    v10 = objc_msgSend(v0, sel_constraintEqualToAnchor_constant_, v9, v47);
    OUTLINED_FUNCTION_14_18();

    *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_menuBlurTrailingConstraint] = v8;
    v11 = v8;
    OUTLINED_FUNCTION_14_18();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    v12 = OUTLINED_FUNCTION_5_10();
    *(_OWORD *)(v12 + 16) = xmmword_1BD644140;
    OUTLINED_FUNCTION_7_56(&OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController____lazy_storage___menuBlurView, (uint64_t (*)(uint64_t))closure #1 in CallControlsMenuViewController.menuBlurView.getter);
    v14 = OUTLINED_FUNCTION_18_42(v13);
    OUTLINED_FUNCTION_8_20();
    v15 = OUTLINED_FUNCTION_1_55();
    if (v15)
    {
      v16 = v15;
      v17 = OUTLINED_FUNCTION_18_42(v15);
      OUTLINED_FUNCTION_14();
      v18 = OUTLINED_FUNCTION_9_43();
      OUTLINED_FUNCTION_18_14();

      *(_QWORD *)(v12 + 32) = v16;
      OUTLINED_FUNCTION_7_56(&OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController____lazy_storage___menuBlurView, (uint64_t (*)(uint64_t))closure #1 in CallControlsMenuViewController.menuBlurView.getter);
      v20 = OUTLINED_FUNCTION_27_21(v19);
      OUTLINED_FUNCTION_8_20();
      v21 = OUTLINED_FUNCTION_1_55();
      if (v21)
      {
        v22 = v21;
        v23 = OUTLINED_FUNCTION_27_21(v21);
        OUTLINED_FUNCTION_14();
        v24 = OUTLINED_FUNCTION_9_43();
        OUTLINED_FUNCTION_18_14();

        *(_QWORD *)(v12 + 40) = v22;
        *(_QWORD *)(v12 + 48) = v8;
        v8;
        OUTLINED_FUNCTION_7_56(&OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController____lazy_storage___menuBlurView, (uint64_t (*)(uint64_t))closure #1 in CallControlsMenuViewController.menuBlurView.getter);
        v26 = objc_msgSend(v25, sel_bottomAnchor);
        OUTLINED_FUNCTION_8_20();
        v27 = OUTLINED_FUNCTION_1_55();
        if (v27)
        {
          v28 = v27;
          v29 = objc_msgSend(v27, sel_bottomAnchor);
          OUTLINED_FUNCTION_14();
          v30 = OUTLINED_FUNCTION_9_43();
          OUTLINED_FUNCTION_18_14();

          *(_QWORD *)(v12 + 56) = v28;
          OUTLINED_FUNCTION_17_4();
          OUTLINED_FUNCTION_22_35();
          v32 = v31;
          v33 = OUTLINED_FUNCTION_18_42(v31);

          CallControlsViewController.menuViewController.getter(&OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController____lazy_storage___menuBlurView, (uint64_t (*)(uint64_t))closure #1 in CallControlsMenuViewController.menuBlurView.getter);
          v35 = objc_msgSend(v34, (SEL)0x1F38436F4);
          OUTLINED_FUNCTION_14_18();
          v44 = objc_msgSend(v33, (SEL)0x1F37BEF4ELL, 0x1F3843000uLL);

          OUTLINED_FUNCTION_22_35();
          v37 = OUTLINED_FUNCTION_19_10(v36);
          OUTLINED_FUNCTION_14_18();
          CallControlsViewController.menuViewController.getter(&OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController____lazy_storage___menuBlurView, (uint64_t (*)(uint64_t))closure #1 in CallControlsMenuViewController.menuBlurView.getter);
          v39 = v38;
          v40 = OUTLINED_FUNCTION_19_10(v38);

          v41 = objc_msgSend((id)0x1F3843000, (SEL)0x1F37BEF4ELL, v40);
          if ((unint64_t)v12 >> 62)
          {
            if (v12 < 0)
              v42 = v12;
            else
              v42 = v12 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain();
            _CocoaArrayWrapper.endIndex.getter();
            OUTLINED_FUNCTION_16_32();
          }
          else
          {
            v42 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
          }
          if (!__OFADD__(v42, 2))
          {
            OUTLINED_FUNCTION_39_5(v42 + 2);
            OUTLINED_FUNCTION_17_4();
            v43 = v44;
            OUTLINED_FUNCTION_13_4();
          }
          __break(1u);
          JUMPOUT(0x1BD150754);
        }
LABEL_17:
        __break(1u);
        JUMPOUT(0x1BD1507DCLL);
      }
LABEL_16:
      __break(1u);
      goto LABEL_17;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  goto LABEL_16;
}

uint64_t CallControlsMenuViewController.blurConfiguration(conversationState:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  _BYTE *v5;
  double v6;
  char v7;
  uint64_t result;
  double v9;
  id v10;

  v5 = (_BYTE *)(v2 + OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_isOneToOneModeEnabled);
  swift_beginAccess();
  if ((*v5 & 1) == 0 && a1 != 1)
  {
    v6 = 5.0;
    v7 = 64;
    result = 0x4034000000000000;
    v9 = 6.0;
LABEL_6:
    *(double *)a2 = v9;
    *(_QWORD *)(a2 + 8) = result;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_BYTE *)(a2 + 48) = v7;
    *(double *)(a2 + 56) = v6;
    return result;
  }
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  v10 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  result = (uint64_t)@nonobjc UIImage.init(named:in:)(0xD000000000000016, 0x80000001BD675F70, v10);
  if (result)
  {
    v7 = 0x80;
    v6 = 90.0;
    v9 = 1.15;
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

uint64_t CallControlsMenuViewController.menuViewModel.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[5];

  v1 = OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController____lazy_storage___menuViewModel;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController____lazy_storage___menuViewModel))
  {
    v2 = *(_QWORD *)(v0
                   + OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController____lazy_storage___menuViewModel);
  }
  else
  {
    v3 = v0;
    outlined init with copy of RadarReporting(v0 + OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_service, (uint64_t)v6);
    v4 = CallControlsMenuViewController.isAppFrontMost.getter();
    type metadata accessor for CallControlsMenuViewModel();
    swift_allocObject();
    v2 = CallControlsMenuViewModel.init(service:isAppFrontMost:)(v6, v4);
    *(_QWORD *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t CallControlsMenuViewController.observeState()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.CombineLatest<AnyPublisher<SidebarState, Never>, AnyPublisher<TUConversationState, Never>>);
  v5 = *(_QWORD *)(v4 - 8);
  v22 = v4;
  v23 = v5;
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.ReceiveOn<Publishers.CombineLatest<AnyPublisher<SidebarState, Never>, AnyPublisher<TUConversationState, Never>>, NSRunLoop>);
  v9 = *(_QWORD *)(v8 - 8);
  v24 = v8;
  v25 = v9;
  MEMORY[0x1E0C80A78](v8);
  v21 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = (id)SidebarStateStream.states.getter();
  v11 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_service + 24);
  v12 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_service + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_service), v11);
  v27 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 56))(v11, v12);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyPublisher<SidebarState, Never>);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyPublisher<TUConversationState, Never>);
  v13 = MEMORY[0x1E0C95D90];
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type AnyPublisher<SidebarState, Never> and conformance AnyPublisher<A, B>, &demangling cache variable for type metadata for AnyPublisher<SidebarState, Never>, MEMORY[0x1E0C95D90]);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type AnyPublisher<TUConversationState, Never> and conformance AnyPublisher<A, B>, &demangling cache variable for type metadata for AnyPublisher<TUConversationState, Never>, v13);
  Publisher.combineLatest<A>(_:)();
  swift_release();
  swift_release();
  v26 = objc_msgSend((id)objc_opt_self(), sel_mainRunLoop);
  v14 = type metadata accessor for NSRunLoop.SchedulerOptions();
  __swift_storeEnumTagSinglePayload((uint64_t)v3, 1, 1, v14);
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSRunLoop);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type Publishers.CombineLatest<AnyPublisher<SidebarState, Never>, AnyPublisher<TUConversationState, Never>> and conformance Publishers.CombineLatest<A, B>, &demangling cache variable for type metadata for Publishers.CombineLatest<AnyPublisher<SidebarState, Never>, AnyPublisher<TUConversationState, Never>>, MEMORY[0x1E0C95698]);
  lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop();
  v15 = v21;
  v16 = v22;
  Publisher.receive<A>(on:options:)();
  outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v3, (uint64_t *)&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);

  (*(void (**)(char *, uint64_t))(v23 + 8))(v7, v16);
  v17 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = partial apply for closure #1 in CallControlsMenuViewController.observeState();
  *(_QWORD *)(v18 + 24) = v17;
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type Publishers.ReceiveOn<Publishers.CombineLatest<AnyPublisher<SidebarState, Never>, AnyPublisher<TUConversationState, Never>>, NSRunLoop> and conformance Publishers.ReceiveOn<A, B>, &demangling cache variable for type metadata for Publishers.ReceiveOn<Publishers.CombineLatest<AnyPublisher<SidebarState, Never>, AnyPublisher<TUConversationState, Never>>, NSRunLoop>, MEMORY[0x1E0C95CB8]);
  v19 = v24;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v15, v19);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [AnyCancellable]);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](lazy protocol witness table cache variable for type [AnyCancellable] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [AnyCancellable], MEMORY[0x1E0DEAF58]);
  AnyCancellable.store<A>(in:)();
  swift_endAccess();
  return swift_release();
}

void sub_1BD150D7C()
{
  void *v0;

}

uint64_t key path getter for CallControlsMenuViewController.sizeUpdater : CallControlsMenuViewController@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *a1 + OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_sizeUpdater;
  swift_beginAccess();
  result = MEMORY[0x1C3B752C0](v3);
  v5 = *(_QWORD *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t key path setter for CallControlsMenuViewController.sizeUpdater : CallControlsMenuViewController(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *a2 + OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_sizeUpdater;
  swift_beginAccess();
  *(_QWORD *)(v3 + 8) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t CallControlsMenuViewController.sizeUpdater.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_1_7();
  return MEMORY[0x1C3B752C0](v0);
}

void CallControlsMenuViewController.sizeUpdater.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_sizeUpdater;
  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_9_0();
}

void CallControlsMenuViewController.sizeUpdater.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_sizeUpdater;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  OUTLINED_FUNCTION_2_0();
  v6 = MEMORY[0x1C3B752C0](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  OUTLINED_FUNCTION_18();
}

void CallControlsMenuViewController.sizeUpdater.modify(uint64_t a1, char a2)
{
  void *v3;

  v3 = *(void **)a1;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 40) + *(_QWORD *)(*(_QWORD *)a1 + 48) + 8) = *(_QWORD *)(*(_QWORD *)a1 + 32);
  OUTLINED_FUNCTION_35_16();
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v3);
}

void CallControlsMenuViewController.isHidden.getter()
{
  OUTLINED_FUNCTION_1_7();
  OUTLINED_FUNCTION_32();
}

uint64_t key path getter for CallControlsMenuViewController.isHidden : CallControlsMenuViewController@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_isHidden);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void CallControlsMenuViewController.isHidden.didset(char a1)
{
  char *v1;
  int v2;
  char *v3;
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  char *v10;
  uint64_t v11;
  void *v12;
  char *v13;
  uint64_t aBlock;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;

  v2 = a1 & 1;
  v3 = &v1[OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_isHidden];
  swift_beginAccess();
  if (*v3 != v2)
  {
    v4 = objc_msgSend(v1, sel_view);
    if (v4)
    {
      v5 = v4;
      objc_msgSend(v4, sel_setHidden_, 0);

      CallControlsMenuViewController.updateDogingState(animated:)(0);
      v6 = (void *)objc_opt_self();
      v7 = swift_allocObject();
      *(_QWORD *)(v7 + 16) = v1;
      v18 = partial apply for closure #1 in CallControlsMenuViewController.isHidden.didset;
      v19 = v7;
      v8 = MEMORY[0x1E0C809B0];
      aBlock = MEMORY[0x1E0C809B0];
      v15 = 1107296256;
      v16 = thunk for @escaping @callee_guaranteed () -> ();
      v17 = &block_descriptor_16;
      v9 = _Block_copy(&aBlock);
      v10 = v1;
      swift_release();
      v11 = swift_allocObject();
      *(_QWORD *)(v11 + 16) = v10;
      v18 = partial apply for closure #2 in CallControlsMenuViewController.isHidden.didset;
      v19 = v11;
      aBlock = v8;
      v15 = 1107296256;
      v16 = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ();
      v17 = &block_descriptor_22;
      v12 = _Block_copy(&aBlock);
      v13 = v10;
      swift_release();
      objc_msgSend(v6, sel_animateWithDuration_animations_completion_, v9, v12, 0.2);
      _Block_release(v12);
      _Block_release(v9);
    }
    else
    {
      __break(1u);
    }
  }
}

void CallControlsMenuViewController.updateDogingState(animated:)(char a1)
{
  uint64_t v1;
  uint64_t v2;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  char v9;
  char v10;
  char v11;
  void *v12;
  void *v13;
  uint64_t v14;
  id v15;
  _OWORD v16[3];

  v2 = v1;
  v4 = SidebarStateStream.currentState.getter() & 1;
  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_service + 24);
  v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_service + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_service), *(_QWORD *)(v2 + OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_service + 24));
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 24))(v5, v6);
  CallControlsMenuViewController.updateBlur(sidebarState:conversationState:)(v4, v7);
  v8 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_isHidden);
  swift_beginAccess();
  if ((*v8 & 1) != 0)
  {
    v9 = CallControlsMenuViewController.updateTopConstraints(dodging:)(0, &OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_topConstraints);
    v10 = 0;
    if ((v9 & 1) != 0)
      goto LABEL_7;
LABEL_6:
    if ((CallControlsMenuViewController.updateTopConstraints(dodging:)(v10 & 1, &OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_bottomConstraints) & 1) == 0)return;
    goto LABEL_7;
  }
  v11 = CallControlsMenuViewController.shouldDodgeTop()();
  if ((CallControlsMenuViewController.updateTopConstraints(dodging:)(v11 & 1, &OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_topConstraints) & 1) == 0)
  {
    v10 = CallControlsMenuViewController.shouldDodgeBottom()();
    goto LABEL_6;
  }
LABEL_7:
  if ((a1 & 1) != 0)
  {
    v12 = (void *)MEMORY[0x1C3B752C0](v2 + OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_containingView);
    if (v12)
    {
      v13 = v12;
      objc_msgSend(v12, sel_setNeedsLayout);
      if (one-time initialization token for springParameters != -1)
        swift_once();
      v16[0] = static Animation.ConversationControls.springParameters;
      v16[1] = xmmword_1EF4FD820;
      v16[2] = xmmword_1EF4FD830;
      v14 = swift_allocObject();
      *(_QWORD *)(v14 + 16) = v13;
      v15 = v13;
      specialized static UIView.animate(with:delay:animations:completion:)((double *)v16, 0, 0, partial apply for closure #1 in CallControlsMenuViewController.updateDogingState(animated:), v14, 0, 0);
      swift_release();

    }
  }
}

void closure #1 in CallControlsMenuViewController.isHidden.didset(char *a1)
{
  id v2;
  void *v3;
  char *v4;
  double v5;

  v2 = objc_msgSend(a1, sel_view);
  if (v2)
  {
    v3 = v2;
    v4 = &a1[OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_isHidden];
    swift_beginAccess();
    v5 = 1.0;
    if (*v4)
      v5 = 0.0;
    objc_msgSend(v3, sel_setAlpha_, v5);

  }
  else
  {
    __break(1u);
  }
}

void closure #2 in CallControlsMenuViewController.isHidden.didset(int a1, char *a2)
{
  id v3;
  void *v4;
  unsigned __int8 *v5;

  v3 = objc_msgSend(a2, sel_view);
  if (v3)
  {
    v4 = v3;
    v5 = (unsigned __int8 *)&a2[OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_isHidden];
    swift_beginAccess();
    objc_msgSend(v4, sel_setHidden_, *v5);

  }
  else
  {
    __break(1u);
  }
}

void CallControlsMenuViewController.isHidden.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  _BYTE *v3;

  v2 = OUTLINED_FUNCTION_38_1();
  *v0 = v2;
  v2[3] = v1;
  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_isHidden);
  OUTLINED_FUNCTION_1();
  *((_BYTE *)v2 + 32) = *v3;
  OUTLINED_FUNCTION_18();
}

void CallControlsMenuViewController.isHidden.modify(uint64_t a1, uint64_t a2)
{
  SharedContentViewController.isPipped.modify(a1, a2, (void (*)(_QWORD))CallControlsMenuViewController.isHidden.setter);
}

void CallControlsMenuViewController.isOneToOneModeEnabled.getter()
{
  OUTLINED_FUNCTION_1_7();
  OUTLINED_FUNCTION_32();
}

uint64_t key path getter for CallControlsMenuViewController.isOneToOneModeEnabled : CallControlsMenuViewController@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_isOneToOneModeEnabled);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void CallControlsMenuViewController.isOneToOneModeEnabled.didset(char a1)
{
  uint64_t v1;
  int v2;
  unsigned __int8 *v3;

  v2 = a1 & 1;
  v3 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_isOneToOneModeEnabled);
  swift_beginAccess();
  if (*v3 != v2)
    CallControlsMenuViewController.updateDogingState(animated:)(0);
}

void CallControlsMenuViewController.isOneToOneModeEnabled.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  _BYTE *v3;

  v2 = OUTLINED_FUNCTION_38_1();
  *v0 = v2;
  v2[3] = v1;
  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_isOneToOneModeEnabled);
  OUTLINED_FUNCTION_1();
  *((_BYTE *)v2 + 32) = *v3;
  OUTLINED_FUNCTION_18();
}

void CallControlsMenuViewController.isOneToOneModeEnabled.modify(uint64_t a1, uint64_t a2)
{
  SharedContentViewController.isPipped.modify(a1, a2, (void (*)(_QWORD))CallControlsMenuViewController.isOneToOneModeEnabled.setter);
}

void CallControlsMenuViewController.dodgingFrames.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v4[72];

  v3 = v1 + OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_dodgingFrames;
  _sypSgWObTm_0(v1 + OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_dodgingFrames, (uint64_t)v4, &demangling cache variable for type metadata for (menuFrame: CGRect, dogingFrame: CGRect?)?);
  _sypSgWObTm_0(a1, v3, &demangling cache variable for type metadata for (menuFrame: CGRect, dogingFrame: CGRect?)?);
  CallControlsMenuViewController.dodgingFrames.didset((uint64_t)v4);
}

uint64_t CallControlsMenuViewController.windowSize.setter(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v4 = v3 + OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_windowSize;
  v5 = *(_QWORD *)(v3 + OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_windowSize);
  v6 = *(_QWORD *)(v3 + OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_windowSize + 8);
  v7 = *(_BYTE *)(v3 + OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_windowSize + 16);
  *(_QWORD *)v4 = a1;
  *(_QWORD *)(v4 + 8) = a2;
  *(_BYTE *)(v4 + 16) = a3 & 1;
  return CallControlsMenuViewController.windowSize.didset(v5, v6, v7);
}

uint64_t CallControlsMenuViewController.windowSize.didset(uint64_t result, uint64_t a2, char a3)
{
  uint64_t v3;
  double v4;
  double v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;

  if ((a3 & 1) != 0)
  {
    if ((*(_BYTE *)(v3 + OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_windowSize + 16) & 1) != 0)
      return result;
    v4 = *(double *)(v3 + OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_windowSize);
    v5 = *(double *)(v3 + OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_windowSize + 8);
    goto LABEL_11;
  }
  if ((*(_BYTE *)(v3 + OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_windowSize + 16) & 1) == 0)
  {
    v4 = *(double *)(v3 + OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_windowSize);
    v5 = *(double *)(v3 + OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_windowSize + 8);
    if (*(double *)&result != v4
      || *(double *)&a2 != *(double *)(v3
                                     + OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_windowSize
                                     + 8))
    {
LABEL_11:
      v7 = v3 + OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_sizeUpdater;
      swift_beginAccess();
      *(double *)&result = COERCE_DOUBLE(MEMORY[0x1C3B752C0](v7));
      if (*(double *)&result != 0.0)
      {
        v8 = *(_QWORD *)(v7 + 8);
        ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t, double, double))(v8 + 8))(ObjectType, v8, v4, v5);
        *(double *)&result = COERCE_DOUBLE(swift_unknownObjectRelease());
      }
    }
  }
  return result;
}

void CallControlsMenuViewController.dodgingFrames.didset(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  CGFloat v3;
  CGFloat v4;
  CGFloat v5;
  CGFloat v6;
  CGFloat v7;
  CGFloat v8;
  CGFloat v9;
  CGFloat v10;
  _QWORD v11[4];
  CGRect v12;
  char v13;
  char v14;
  CGRect v15;
  CGRect v16;

  _sypSgWObTm_0(a1, (uint64_t)v11, &demangling cache variable for type metadata for (menuFrame: CGRect, dogingFrame: CGRect?)?);
  if ((v14 & 1) == 0)
  {
    v2 = v1 + OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_dodgingFrames;
    if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_dodgingFrames + 65) & 1) == 0)
    {
      v3 = *(double *)v11;
      v4 = *(double *)&v11[1];
      v5 = *(double *)&v11[2];
      v6 = *(double *)&v11[3];
      v8 = *(double *)(v2 + 16);
      v7 = *(double *)(v2 + 24);
      v10 = *(double *)v2;
      v9 = *(double *)(v2 + 8);
      if ((v13 & 1) != 0)
      {
        if ((*(_BYTE *)(v2 + 64) & 1) == 0)
        {
LABEL_9:
          CallControlsMenuViewController.updateDogingState(animated:)(1);
          return;
        }
      }
      else if ((*(_BYTE *)(v2 + 64) & 1) != 0 || !CGRectEqualToRect(v12, *(CGRect *)(v2 + 32)))
      {
        goto LABEL_9;
      }
      v15.origin.x = v3;
      v15.origin.y = v4;
      v15.size.width = v5;
      v15.size.height = v6;
      v16.origin.x = v10;
      v16.origin.y = v9;
      v16.size.width = v8;
      v16.size.height = v7;
      if (CGRectEqualToRect(v15, v16))
        return;
      goto LABEL_9;
    }
  }
}

uint64_t CallControlsMenuViewController.screenShareService.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  _BYTE v9[40];
  __int128 v10;
  uint64_t v11;
  _UNKNOWN **v12;

  v3 = v1 + OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController____lazy_storage___screenShareService;
  swift_beginAccess();
  outlined init with copy of ScreenShareCallControlsService?(v3, (uint64_t)&v10);
  if (!v11)
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)&v10, &demangling cache variable for type metadata for ScreenShareCallControlsService?);
    v4 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_controlsManager);
    v5 = type metadata accessor for InCallScreenShareCallControlsService();
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    v11 = v5;
    v12 = &protocol witness table for InCallScreenShareCallControlsService;
    *(_QWORD *)&v10 = v6;
    outlined init with copy of RadarReporting((uint64_t)&v10, (uint64_t)v9);
    swift_beginAccess();
    v7 = v4;
    outlined assign with take of ScreenShareCallControlsService?((uint64_t)v9, v3);
    swift_endAccess();
  }
  return outlined init with take of Notice(&v10, a1);
}

uint64_t CallControlsMenuViewController.isAppFrontMost.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  _BYTE v6[16];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Just<Bool>);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = &v6[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6[15] = 1;
  Just.init(_:)();
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type Just<Bool> and conformance Just<A>, &demangling cache variable for type metadata for Just<Bool>, MEMORY[0x1E0C960B0]);
  v4 = Publisher.eraseToAnyPublisher()();
  (*(void (**)(_BYTE *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

id closure #1 in CallControlsMenuViewController.menuBlurView.getter(char *a1)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  id v7;
  id v8;
  id result;
  void *v10;
  double v11;
  uint64_t v12;
  _BYTE v13[48];

  v2 = &a1[OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_service];
  v3 = *((_QWORD *)v2 + 3);
  v4 = *((_QWORD *)v2 + 4);
  __swift_project_boxed_opaque_existential_1(v2, v3);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 24))(v3, v4);
  CallControlsMenuViewController.blurConfiguration(conversationState:)(v5, (uint64_t)&v11);
  v6 = v11;
  outlined init with take of VariableBlurMask((uint64_t)&v12, (uint64_t)v13);
  v7 = objc_allocWithZone((Class)type metadata accessor for VariableBlurUIView());
  outlined release of CallControlsMenuViewController.BlurConfiguration((uint64_t)&v11, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined copy of VariableBlurMask);
  v8 = VariableBlurUIView.init(radius:blurMask:)((uint64_t)v13, v6);
  objc_msgSend(v8, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v8, sel_setUserInteractionEnabled_, 0);
  result = objc_msgSend(a1, sel_view);
  if (result)
  {
    v10 = result;
    objc_msgSend(result, sel_addSubview_, v8);

    outlined release of CallControlsMenuViewController.BlurConfiguration((uint64_t)&v11, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined consume of VariableBlurMask);
    return v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id closure #1 in CallControlsMenuViewController.menuShadowView.getter(void *a1)
{
  id v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  id result;
  void *v8;

  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  v2 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v3 = @nonobjc UIImage.init(named:in:)(0xD000000000000016, 0x80000001BD675F70, v2);
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v3, sel_imageFlippedForRightToLeftLayoutDirection);

  }
  else
  {
    v5 = 0;
  }
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_initWithImage_, v5);
  objc_msgSend(v6, sel_setAlpha_, 0.2);
  objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v6, sel_setUserInteractionEnabled_, 0);
  objc_msgSend(v6, sel_setContentMode_, 10);
  UIView.setCHCRPriority(_:)((__C::UILayoutPriority)1132068864);
  result = objc_msgSend(a1, sel_view);
  if (result)
  {
    v8 = result;
    objc_msgSend(result, sel_addSubview_, v6);

    return v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id closure #1 in CallControlsMenuViewController.menuView.getter(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  id result;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  _BYTE v20[40];
  _BYTE v21[40];

  v2 = type metadata accessor for UIHostingControllerSizingOptions();
  MEMORY[0x1E0C80A78](v2);
  v3 = type metadata accessor for CallControlsMenuView();
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = &v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v8 = &v20[-v7];
  CallControlsMenuViewController.menuViewModel.getter();
  outlined init with copy of RadarReporting((uint64_t)&a1[OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_service], (uint64_t)v21);
  CallControlsMenuViewController.screenShareService.getter((uint64_t)v20);
  v9 = *(_QWORD *)&a1[OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_sidebarStateStream];
  v10 = *(_QWORD *)&a1[OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_isScreenLocked];
  swift_retain();
  swift_retain();
  CallControlsMenuView.init(viewModel:service:screenShareService:sidebarStateStream:isScreenLocked:)((uint64_t)v21, (uint64_t)v20, v9, v10, (uint64_t)v8);
  outlined init with copy of CallControlsMenuView((uint64_t)v8, (uint64_t)v6);
  v11 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIHostingController<CallControlsMenuView>));
  v12 = (void *)UIHostingController.init(rootView:)();
  UIHostingController.safeAreaRegions.setter();
  static UIHostingControllerSizingOptions.intrinsicContentSize.getter();
  dispatch thunk of UIHostingController.sizingOptions.setter();
  objc_msgSend(a1, sel_addChildViewController_, v12);
  result = objc_msgSend(a1, sel_view);
  if (!result)
  {
    __break(1u);
    goto LABEL_8;
  }
  v14 = result;
  result = objc_msgSend(v12, sel_view);
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v15 = result;
  objc_msgSend(v14, sel_addSubview_, result);

  objc_msgSend(v12, sel_didMoveToParentViewController_, a1);
  result = objc_msgSend(v12, sel_view);
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v16 = result;
  objc_msgSend(result, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  result = objc_msgSend(v12, sel_view);
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v17 = result;
  v18 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
  objc_msgSend(v17, sel_setBackgroundColor_, v18);

  result = objc_msgSend(v12, sel_view);
  if (result)
  {
    v19 = result;
    outlined destroy of CallControlsMenuView((uint64_t)v8);

    return v19;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t CallControlsMenuViewController.shouldDodgeTop()()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  UIView *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  unsigned __int8 v8;
  void *v9;
  double v10;
  double v11;
  CGFloat v12;
  CGFloat v13;
  CGFloat v14;
  CGFloat v15;
  __C::CGRect_optional v17;
  __C::CGRect_optional v18;
  CGFloat v19[4];
  char v20;
  _QWORD v21[4];
  char v22;

  v1 = v0;
  v2 = (_BYTE *)(v0 + OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_isOneToOneModeEnabled);
  swift_beginAccess();
  if (*v2 != 1
    || (v3 = MEMORY[0x1C3B752C0](v0 + OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_containingView)) == 0)
  {
    LOBYTE(v7) = 0;
    return v7 & 1;
  }
  v4 = (UIView *)v3;
  v5 = v0 + OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_topCornerView;
  v6 = (void *)MEMORY[0x1C3B752C0](v0 + OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_topCornerView);
  v7 = (uint64_t)v6;
  if (v6)
  {
    v8 = objc_msgSend(v6, sel_isHidden);

    if ((v8 & 1) != 0)
      goto LABEL_11;
    v9 = (void *)MEMORY[0x1C3B752C0](v5);
    v7 = (uint64_t)v9;
    if (!v9)
      goto LABEL_12;
    objc_msgSend(v9, sel_alpha);
    v11 = v10;

    if (v11 <= 0.0)
      goto LABEL_11;
    v7 = MEMORY[0x1C3B752C0](v1 + OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_dodgingView);
    if (!v7)
      goto LABEL_12;
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIView);
    UIPopoverPresentationControllerSourceItem.frame(in:)(&v17, v4);

    _sypSgWObTm_0((uint64_t)&v17, (uint64_t)v21, &demangling cache variable for type metadata for CGRect?);
    if ((v22 & 1) != 0)
    {
LABEL_11:
      LOBYTE(v7) = 0;
      goto LABEL_12;
    }
    v12 = *(double *)v21;
    v13 = *(double *)&v21[1];
    v15 = *(double *)&v21[2];
    v14 = *(double *)&v21[3];
    v7 = MEMORY[0x1C3B752C0](v5);
    if (v7)
    {
      UIPopoverPresentationControllerSourceItem.frame(in:)(&v18, v4);

      _sypSgWObTm_0((uint64_t)&v18, (uint64_t)v19, &demangling cache variable for type metadata for CGRect?);
      if ((v20 & 1) == 0)
      {
        LOBYTE(v7) = CallControlsMenuViewController.shouldDodge(top:bottom:threshold:)(v19[0], v19[1], v19[2], v19[3], v12, v13, v15, v14, 20.0);
        goto LABEL_12;
      }
      goto LABEL_11;
    }
  }
LABEL_12:

  return v7 & 1;
}

BOOL CallControlsMenuViewController.shouldDodge(top:bottom:threshold:)(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8, double a9)
{
  double MinY;
  double v27;
  double MinX;
  double MaxX;
  CGFloat rect;
  CGRect v32;
  CGRect v33;
  CGRect v34;
  CGRect v35;
  CGRect v36;
  CGRect v37;

  if (CGRectIntersectsRect(*(CGRect *)&a1, *(CGRect *)&a5))
    return 1;
  rect = a8;
  v32.origin.x = a5;
  v32.origin.y = a6;
  v32.size.width = a7;
  v32.size.height = a8;
  MinY = CGRectGetMinY(v32);
  v33.origin.x = a1;
  v33.origin.y = a2;
  v33.size.width = a3;
  v33.size.height = a4;
  v27 = MinY - CGRectGetMaxY(v33);
  if (v27 < 0.0 || v27 > a9)
    return 0;
  v34.origin.x = a1;
  v34.origin.y = a2;
  v34.size.width = a3;
  v34.size.height = a4;
  MinX = CGRectGetMinX(v34);
  v35.origin.x = a5;
  v35.origin.y = a6;
  v35.size.width = a7;
  v35.size.height = rect;
  if (MinX >= CGRectGetMaxX(v35))
    return 0;
  v36.origin.x = a1;
  v36.origin.y = a2;
  v36.size.width = a3;
  v36.size.height = a4;
  MaxX = CGRectGetMaxX(v36);
  v37.origin.x = a5;
  v37.origin.y = a6;
  v37.size.width = a7;
  v37.size.height = rect;
  return CGRectGetMinX(v37) < MaxX;
}

uint64_t CallControlsMenuViewController.shouldDodgeBottom()()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t v2;
  UIView *v3;
  uint64_t v4;
  CGFloat v5;
  CGFloat v6;
  CGFloat v7;
  CGFloat v8;
  void *v9;
  void *v10;
  __C::CGRect_optional v12;
  __C::CGRect_optional v13;
  CGFloat v14[4];
  char v15;
  _QWORD v16[4];
  char v17;

  v1 = (_BYTE *)(v0 + OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_isOneToOneModeEnabled);
  swift_beginAccess();
  if (*v1 == 1
    && (v2 = MEMORY[0x1C3B752C0](v0 + OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_containingView)) != 0)
  {
    v3 = (UIView *)v2;
    v4 = MEMORY[0x1C3B752C0](v0 + OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_dodgingView);
    if (v4)
    {
      _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIView);
      UIPopoverPresentationControllerSourceItem.frame(in:)(&v12, v3);

      _sypSgWObTm_0((uint64_t)&v12, (uint64_t)v16, &demangling cache variable for type metadata for CGRect?);
      if ((v17 & 1) != 0)
        goto LABEL_6;
      v5 = *(double *)v16;
      v6 = *(double *)&v16[1];
      v7 = *(double *)&v16[2];
      v8 = *(double *)&v16[3];
      CallControlsViewController.menuViewController.getter(&OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController____lazy_storage___menuView, (uint64_t (*)(uint64_t))closure #1 in CallControlsMenuViewController.menuView.getter);
      v10 = v9;
      UIPopoverPresentationControllerSourceItem.frame(in:)(&v13, v3);

      _sypSgWObTm_0((uint64_t)&v13, (uint64_t)v14, &demangling cache variable for type metadata for CGRect?);
      if ((v15 & 1) != 0)
LABEL_6:
        LOBYTE(v4) = 0;
      else
        LOBYTE(v4) = CallControlsMenuViewController.shouldDodge(top:bottom:threshold:)(v5, v6, v7, v8, v14[0], v14[1], v14[2], v14[3], 0.0);
    }

  }
  else
  {
    LOBYTE(v4) = 0;
  }
  return v4 & 1;
}

uint64_t CallControlsMenuViewController.updateTopConstraints(dodging:)(char a1, _QWORD *a2)
{
  uint64_t v2;
  id *v4;
  id v5;
  id v6;
  uint64_t v7;

  v4 = (id *)(v2 + *a2);
  v5 = *v4;
  if ((a1 & 1) != 0)
  {
    if (v5 && objc_msgSend(v5, sel_isActive))
    {
      if (!*v4)
        return 1;
      objc_msgSend(*v4, sel_setActive_, 0);
      if (!*v4)
        return 1;
      v6 = v4[1];
      if (!v6)
        return 1;
      goto LABEL_14;
    }
  }
  else if (v5 && (objc_msgSend(v5, sel_isActive) & 1) == 0)
  {
    v6 = *v4;
    if (!*v4)
      return 1;
    if (v4[1])
    {
      objc_msgSend(v4[1], sel_setActive_, 0);
      v6 = *v4;
      if (!*v4)
        return 1;
    }
LABEL_14:
    v7 = 1;
    objc_msgSend(v6, sel_setActive_, 1);
    return v7;
  }
  return 0;
}

double CallControlsMenuViewController.BlurConfiguration.radius.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

void CallControlsMenuViewController.BlurConfiguration.radius.setter(double a1)
{
  double *v1;

  *v1 = a1;
}

uint64_t (*CallControlsMenuViewController.BlurConfiguration.radius.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t CallControlsMenuViewController.BlurConfiguration.mask.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return outlined init with copy of VariableBlurMask(v1 + 8, a1);
}

uint64_t CallControlsMenuViewController.BlurConfiguration.mask.setter(uint64_t a1)
{
  uint64_t v1;

  return outlined assign with take of VariableBlurMask(a1, v1 + 8);
}

uint64_t (*CallControlsMenuViewController.BlurConfiguration.mask.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double CallControlsMenuViewController.BlurConfiguration.trailingPadding.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 56);
}

void CallControlsMenuViewController.BlurConfiguration.trailingPadding.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 56) = a1;
}

uint64_t (*CallControlsMenuViewController.BlurConfiguration.trailingPadding.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

__n128 CallControlsMenuViewController.BlurConfiguration.init(radius:mask:trailingPadding:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  uint64_t v7;
  char v8;
  __n128 result;
  __int128 v10;
  _OWORD v11[2];
  uint64_t v12;
  char v13;

  outlined init with take of VariableBlurMask(a1, (uint64_t)v11);
  v7 = v12;
  v8 = v13;
  result = (__n128)v11[0];
  v10 = v11[1];
  *(double *)a2 = a3;
  *(__n128 *)(a2 + 8) = result;
  *(_OWORD *)(a2 + 24) = v10;
  *(_QWORD *)(a2 + 40) = v7;
  *(_BYTE *)(a2 + 48) = v8;
  *(double *)(a2 + 56) = a4;
  return result;
}

void CallControlsMenuViewController.updateBlur(sidebarState:conversationState:)(char a1, uint64_t a2)
{
  void *v2;
  int v4;
  double v5;
  void *v6;
  uint64_t v7;
  void *v8;
  char *v9;
  char *v10;
  void *v11;
  uint64_t v12;
  char *v13;
  void *v14;
  void *v15;
  void *v16;
  double v17;
  id v18;
  _QWORD aBlock[6];
  uint64_t v20;
  _QWORD v21[7];

  CallControlsMenuViewController.blurConfiguration(conversationState:)(a2, (uint64_t)&v20);
  v4 = a1 & 1;
  if (v4)
    v5 = 0.2;
  else
    v5 = 0.0;
  v6 = (void *)objc_opt_self();
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v2;
  *(_BYTE *)(v7 + 24) = v4;
  aBlock[4] = partial apply for closure #1 in CallControlsMenuViewController.updateBlur(sidebarState:conversationState:);
  aBlock[5] = v7;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_22;
  v8 = _Block_copy(aBlock);
  v9 = v2;
  swift_release();
  objc_msgSend(v6, sel_animateWithDuration_delay_options_animations_completion_, 0, v8, 0, v5, v5);
  _Block_release(v8);
  CallControlsViewController.menuViewController.getter(&OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController____lazy_storage___menuBlurView, (uint64_t (*)(uint64_t))closure #1 in CallControlsMenuViewController.menuBlurView.getter);
  v11 = v10;
  v12 = v20;
  v13 = &v10[OBJC_IVAR____TtC15ConversationKit18VariableBlurUIView_radius];
  swift_beginAccess();
  *(_QWORD *)v13 = v12;
  VariableBlurUIView.setupLayers()();

  CallControlsViewController.menuViewController.getter(&OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController____lazy_storage___menuBlurView, (uint64_t (*)(uint64_t))closure #1 in CallControlsMenuViewController.menuBlurView.getter);
  v15 = v14;
  outlined init with take of VariableBlurMask((uint64_t)v21, (uint64_t)aBlock);
  outlined release of CallControlsMenuViewController.BlurConfiguration((uint64_t)&v20, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined copy of VariableBlurMask);
  VariableBlurUIView.blurMask.setter((uint64_t)aBlock);

  v16 = *(void **)&v9[OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController_menuBlurTrailingConstraint];
  if (v16)
  {
    v17 = *(double *)&v21[6];
    v18 = v16;
    objc_msgSend(v18, sel_setConstant_, v17);
    outlined release of CallControlsMenuViewController.BlurConfiguration((uint64_t)&v20, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined consume of VariableBlurMask);

  }
  else
  {
    outlined release of CallControlsMenuViewController.BlurConfiguration((uint64_t)&v20, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined consume of VariableBlurMask);
  }
}

void closure #1 in CallControlsMenuViewController.updateBlur(sidebarState:conversationState:)(uint64_t a1, char a2)
{
  void *v3;
  double v4;
  id v5;

  CallControlsViewController.menuViewController.getter(&OBJC_IVAR____TtC15ConversationKit30CallControlsMenuViewController____lazy_storage___menuBlurView, (uint64_t (*)(uint64_t))closure #1 in CallControlsMenuViewController.menuBlurView.getter);
  v5 = v3;
  v4 = 0.0;
  if ((a2 & 1) == 0)
    v4 = 1.0;
  objc_msgSend(v3, sel_setAlpha_, v4);

}

void closure #1 in CallControlsMenuViewController.observeState()(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v5 = a3 + 16;
  swift_beginAccess();
  v6 = MEMORY[0x1C3B752C0](v5);
  if (v6)
  {
    v7 = (void *)v6;
    CallControlsMenuViewController.updateBlur(sidebarState:conversationState:)(a1 & 1, a2);

  }
}

void CallControlsMenuViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;

  v4 = v3;
  if (a2)
  {
    MEMORY[0x1C3B72E00]();
    OUTLINED_FUNCTION_16_32();
  }
  else
  {
    v3 = 0;
  }
  objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v3, a3);
  OUTLINED_FUNCTION_14_18();

  OUTLINED_FUNCTION_18();
}

void CallControlsMenuViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id CallControlsMenuViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void outlined consume of VariableBlurMask(id a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if ((a6 & 0xC0) == 0x80)

}

uint64_t outlined init with copy of VariableBlurMask(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for VariableBlurMask(a2, a1);
  return a2;
}

uint64_t outlined assign with take of VariableBlurMask(uint64_t a1, uint64_t a2)
{
  assignWithTake for VariableBlurMask(a2, a1);
  return a2;
}

uint64_t outlined init with take of VariableBlurMask(uint64_t a1, uint64_t a2)
{
  __swift_memcpy41_8(a2, a1);
  return a2;
}

void sub_1BD152B08(char *a1)
{
  CallControlsMenuViewController.isHidden.setter(*a1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD152B2C(char *a1)
{
  CallControlsMenuViewController.isOneToOneModeEnabled.setter(*a1);
  OUTLINED_FUNCTION_0();
}

uint64_t type metadata accessor for CallControlsMenuViewController()
{
  return objc_opt_self();
}

uint64_t method lookup function for CallControlsMenuViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CallControlsMenuViewController.__allocating_init(controlsManager:isScreenLocked:rosterViewProvider:service:sidebarStateStream:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 256))();
}

id outlined copy of VariableBlurMask(id result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if ((a6 & 0xC0) == 0x80)
    return result;
  return result;
}

void destroy for CallControlsMenuViewController.BlurConfiguration(uint64_t a1)
{
  outlined consume of VariableBlurMask(*(id *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
}

uint64_t initializeWithCopy for CallControlsMenuViewController.BlurConfiguration(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v4 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_BYTE *)(a2 + 48);
  outlined copy of VariableBlurMask(v4, v5, v6, v7, v8, v9);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_BYTE *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  return a1;
}

uint64_t assignWithCopy for CallControlsMenuViewController.BlurConfiguration(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_BYTE *)(a2 + 48);
  outlined copy of VariableBlurMask(v4, v5, v6, v7, v8, v9);
  v10 = *(void **)(a1 + 8);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  v13 = *(_QWORD *)(a1 + 32);
  v14 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  v15 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v9;
  outlined consume of VariableBlurMask(v10, v11, v12, v13, v14, v15);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  return a1;
}

uint64_t assignWithTake for CallControlsMenuViewController.BlurConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 40);
  v5 = *(_BYTE *)(a2 + 48);
  v6 = *(void **)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = v4;
  v11 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v5;
  outlined consume of VariableBlurMask(v6, v7, v8, v9, v10, v11);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for CallControlsMenuViewController.BlurConfiguration(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0x7E && *(_BYTE *)(a1 + 64))
    {
      v2 = *(_DWORD *)a1 + 125;
    }
    else
    {
      v2 = ((*(unsigned __int8 *)(a1 + 48) >> 6) & 0xFFFFFF83 | (4 * ((*(unsigned __int8 *)(a1 + 48) >> 1) & 0x1F))) ^ 0x7F;
      if (v2 >= 0x7D)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for CallControlsMenuViewController.BlurConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 126;
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 64) = 0;
    if (a2)
    {
      *(_QWORD *)(result + 40) = 0;
      *(_OWORD *)(result + 24) = 0u;
      *(_OWORD *)(result + 8) = 0u;
      *(_BYTE *)(result + 48) = 2 * (((-a2 >> 2) & 0x1F) - 32 * a2);
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CallControlsMenuViewController.BlurConfiguration()
{
  return &type metadata for CallControlsMenuViewController.BlurConfiguration;
}

uint64_t sub_1BD152E00()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void partial apply for closure #1 in CallControlsMenuViewController.observeState()(char a1, uint64_t a2)
{
  uint64_t v2;

  closure #1 in CallControlsMenuViewController.observeState()(a1 & 1, a2, v2);
}

uint64_t sub_1BD152E30()
{
  swift_release();
  return swift_deallocObject();
}

void partial apply for thunk for @escaping @callee_guaranteed (@unowned SidebarState, @unowned TUConversationState) -> ()(unsigned __int8 *a1)
{
  uint64_t v1;

  (*(void (**)(_QWORD, _QWORD))(v1 + 16))(*a1, *((_QWORD *)a1 + 1));
  OUTLINED_FUNCTION_0();
}

uint64_t sub_1BD152E7C()
{
  uint64_t v0;

  return swift_deallocObject();
}

void partial apply for closure #1 in CallControlsMenuViewController.updateBlur(sidebarState:conversationState:)()
{
  uint64_t v0;

  closure #1 in CallControlsMenuViewController.updateBlur(sidebarState:conversationState:)(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

void outlined release of CallControlsMenuViewController.BlurConfiguration(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(unsigned __int8 *)(a1 + 48));
  OUTLINED_FUNCTION_0();
}

uint64_t sub_1BD152EE0()
{
  uint64_t v0;

  return swift_deallocObject();
}

void partial apply for closure #1 in CallControlsMenuViewController.isHidden.didset()
{
  uint64_t v0;

  closure #1 in CallControlsMenuViewController.isHidden.didset(*(char **)(v0 + 16));
}

void partial apply for closure #2 in CallControlsMenuViewController.isHidden.didset(int a1)
{
  uint64_t v1;

  closure #2 in CallControlsMenuViewController.isHidden.didset(a1, *(char **)(v1 + 16));
}

id partial apply for closure #1 in CallControlsMenuViewController.updateDogingState(animated:)()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_layoutIfNeeded);
}

uint64_t outlined init with copy of CallControlsMenuView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CallControlsMenuView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of CallControlsMenuView(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CallControlsMenuView();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t outlined init with copy of ScreenShareCallControlsService?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScreenShareCallControlsService?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined assign with take of ScreenShareCallControlsService?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScreenShareCallControlsService?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSaySiG_Sis5NeverOTg50104_s15ConversationKit25RecentsListViewControllerC010collectionE0_11willDisplay9forItemAtySo012UICollectionM46C_So0mE4CellC10Foundation9IndexPathVtFS2iXEfU_So0sJ0CTf1cn_n(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  id v8;
  unint64_t v9;
  uint64_t v11;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v11 = MEMORY[0x1E0DEE9D8];
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    v5 = v11;
    v6 = (uint64_t *)(a1 + 32);
    do
    {
      v7 = *v6++;
      v8 = objc_msgSend(a2, sel_numberOfItemsInSection_, v7);
      v9 = *(_QWORD *)(v11 + 16);
      if (v9 >= *(_QWORD *)(v11 + 24) >> 1)
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      *(_QWORD *)(v11 + 16) = v9 + 1;
      *(_QWORD *)(v11 + 8 * v9 + 32) = v8;
      --v3;
    }
    while (v3);

  }
  else
  {

    return MEMORY[0x1E0DEE9D8];
  }
  return v5;
}

BOOL _sSq3mapyqd_0_Sgqd_0_xqd__YKXEqd__YKs5ErrorRd__Ri_d_0_r0_lF10Foundation4UUIDV_s5NeverOytTg5141_s15ConversationKit25RecentsListViewControllerC10didConfirm015forInterventioneF0ySo25SCUIInterventionContainer_pSg_tFy10Foundation4UUIDVXEfU_0G3Kit0ijkL0CTf1cn_n(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int EnumTagSinglePayload;
  uint64_t v13;

  v4 = type metadata accessor for UUID();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of FeatureEligibility?(a1, (uint64_t)v10, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v4);
  if (EnumTagSinglePayload != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    RecentsListViewController.showVideoPlayerForMessage(withUUID:bypassSafety:)();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }

  return EnumTagSinglePayload == 1;
}

uint64_t one-time initialization function for selectActionIdentifier()
{
  uint64_t result;

  result = MEMORY[0x1C3B72E00](0x63417463656C6573, 0xEC0000006E6F6974);
  static RecentsListViewController.Constants.selectActionIdentifier = result;
  return result;
}

uint64_t key path setter for RecentsListViewController.macCatalystDelegate : RecentsListViewController(uint64_t a1, _QWORD **a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x190);
  v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

void RecentsListViewController.macCatalystDelegate.getter()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_26();
}

void sub_1BD15331C()
{
  OUTLINED_FUNCTION_32();
}

void RecentsListViewController.macCatalystDelegate.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_6_6();
  v2 = v1 + OBJC_IVAR___FTRecentsListViewController_macCatalystDelegate;
  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v2 + 8) = v0;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_9_0();
}

void RecentsListViewController.macCatalystDelegate.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR___FTRecentsListViewController_macCatalystDelegate;
  v3[5] = v1;
  v3[6] = v4;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_26();
}

void sub_1BD1533C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v3;
  OUTLINED_FUNCTION_18();
}

void RecentsListViewController.macCatalystDelegate.modify()
{
  _QWORD *v0;
  char v1;

  OUTLINED_FUNCTION_331();
  *(_QWORD *)(v0[5] + v0[6] + 8) = v0[4];
  swift_unknownObjectWeakAssign();
  if ((v1 & 1) != 0)
  {
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_248();
  }
  else
  {
    OUTLINED_FUNCTION_248();
    swift_unknownObjectRelease();
  }
  OUTLINED_FUNCTION_4_2(v0);
}

uint64_t key path setter for RecentsListViewController.recentCallProvider : RecentsListViewController(uint64_t a1, _QWORD **a2)
{
  _BYTE v4[48];

  outlined init with copy of RecentCallProviding & RecentsControllable(a1, (uint64_t)v4);
  return (*(uint64_t (**)(_BYTE *))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x1A8))(v4);
}

void RecentsListViewController.recentCallProvider.getter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_2_0();
  v0 = OUTLINED_FUNCTION_21_6();
  outlined init with copy of RecentCallProviding & RecentsControllable(v0, v1);
  OUTLINED_FUNCTION_43_1();
}

void RecentsListViewController.recentCallProvider.setter(__int128 *a1)
{
  uint64_t v1;
  _OWORD *v3;

  v3 = (_OWORD *)(v1 + OBJC_IVAR___FTRecentsListViewController_recentCallProvider);
  OUTLINED_FUNCTION_2_0();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  outlined init with take of RecentCallProviding & RecentsControllable(a1, v3);
  swift_endAccess();
  OUTLINED_FUNCTION_43_1();
}

_OWORD *outlined init with take of RecentCallProviding & RecentsControllable(__int128 *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[2];
  a2[1] = a1[1];
  a2[2] = v3;
  *a2 = v2;
  return a2;
}

void RecentsListViewController.recentCallProvider.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void RecentsListViewController.detailControllerFactory.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  outlined init with copy of FeatureEligibility?(v1 + OBJC_IVAR___FTRecentsListViewController_detailControllerFactory, a1, &demangling cache variable for type metadata for RecentCallDetailControllerFactoryProtocol?);
}

void RecentsListViewController.avatarViewControllerSettings.getter()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(v0 + OBJC_IVAR___FTRecentsListViewController_avatarViewControllerSettings);
  OUTLINED_FUNCTION_0();
}

id RecentsListViewController.conversationManager.getter()
{
  return OUTLINED_FUNCTION_7(OBJC_IVAR___FTRecentsListViewController_conversationManager);
}

uint64_t key path setter for RecentsListViewController.callCreator : RecentsListViewController()
{
  uint64_t v0;

  v0 = swift_retain();
  return RecentsListViewController.callCreator.setter(v0);
}

void RecentsListViewController.callCreator.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OBJC_IVAR___FTRecentsListViewController____lazy_storage___callCreator;
  if (!*(_QWORD *)(v0 + OBJC_IVAR___FTRecentsListViewController____lazy_storage___callCreator))
  {
    type metadata accessor for PeoplePickerCallCreator();
    *(_QWORD *)(v0 + v1) = PeoplePickerCallCreator.__allocating_init()();
    swift_retain();
    OUTLINED_FUNCTION_43();
  }
  swift_retain();
  OUTLINED_FUNCTION_18();
}

uint64_t RecentsListViewController.callCreator.setter(uint64_t a1)
{
  return OUTLINED_FUNCTION_117_1(a1);
}

uint64_t key path setter for RecentsListViewController.callItemBlockContactsDelegate : RecentsListViewController(id *a1, _QWORD **a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x208);
  v4 = *a1;
  return v3(v2);
}

void RecentsListViewController.callItemBlockContactsDelegate.getter()
{
  uint64_t v0;
  id *v1;
  id v2;

  v1 = (id *)(v0 + OBJC_IVAR___FTRecentsListViewController_callItemBlockContactsDelegate);
  OUTLINED_FUNCTION_2_0();
  v2 = *v1;
  OUTLINED_FUNCTION_32();
}

void RecentsListViewController.callItemBlockContactsDelegate.setter(void *a1)
{
  ConversationDetailsView.leadingAccessoryView.setter(a1, &OBJC_IVAR___FTRecentsListViewController_callItemBlockContactsDelegate);
}

void RecentsListViewController.callItemBlockContactsDelegate.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t RecentsListViewController.videoMessagesSink.setter(uint64_t a1)
{
  return OUTLINED_FUNCTION_117_1(a1);
}

void RecentsListViewController.linkCoordinator.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_4_3(a1, OBJC_IVAR___FTRecentsListViewController_linkCoordinator);
}

uint64_t key path setter for RecentsListViewController.faceTimeReportSpamManager : RecentsListViewController(uint64_t a1, _QWORD **a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x250);
  v3 = swift_retain();
  return v2(v3);
}

void RecentsListViewController.faceTimeReportSpamManager.getter()
{
  OUTLINED_FUNCTION_2_0();
  swift_retain();
  OUTLINED_FUNCTION_32();
}

void RecentsListViewController.faceTimeReportSpamManager.setter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR___FTRecentsListViewController_faceTimeReportSpamManager);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  swift_release();
  OUTLINED_FUNCTION_43_1();
}

void RecentsListViewController.faceTimeReportSpamManager.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for RecentsListViewController.presentScreenTimeShield : RecentsListViewController@<X0>(_QWORD **a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD *);

  result = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x278))();
  if (result)
  {
    v5 = result;
    v6 = v4;
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = v5;
    *(_QWORD *)(result + 24) = v6;
    v7 = partial apply for thunk for @escaping @callee_guaranteed (@guaranteed TUFilteredRequest) -> ();
  }
  else
  {
    v7 = 0;
  }
  *a2 = v7;
  a2[1] = result;
  return result;
}

uint64_t key path setter for RecentsListViewController.presentScreenTimeShield : RecentsListViewController(uint64_t *a1, _QWORD **a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t);
  uint64_t (*v7)(void (*)(uint64_t), uint64_t);

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed TUFilteredRequest) -> (@out ());
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *(uint64_t (**)(void (*)(uint64_t), uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x280);
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return v7(v6, v5);
}

