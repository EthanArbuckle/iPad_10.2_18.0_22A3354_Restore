void protocol witness for Hashable._rawHashValue(seed:) in conformance ConversationNoticeStyle()
{
  specialized RawRepresentable<>._rawHashValue(seed:)();
}

ConversationKit::ConversationNoticeStyle_optional protocol witness for RawRepresentable.init(rawValue:) in conformance ConversationNoticeStyle(Swift::String *a1)
{
  return ConversationNoticeStyle.init(rawValue:)(*a1);
}

void protocol witness for RawRepresentable.rawValue.getter in conformance ConversationNoticeStyle(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = ConversationNoticeStyle.rawValue.getter();
  a1[1] = v2;
  OUTLINED_FUNCTION_0();
}

ConversationKit::ConversationNoticeSubtitleStyle_optional __swiftcall ConversationNoticeSubtitleStyle.init(rawValue:)(Swift::UInt rawValue)
{
  _BYTE *v1;
  ConversationKit::ConversationNoticeSubtitleStyle_optional result;

  OUTLINED_FUNCTION_44_1(v1);
  return result;
}

uint64_t ConversationNoticeSubtitleStyle.rawValue.getter()
{
  char *v0;

  return qword_1BD657DA8[*v0];
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance ConversationNoticeSubtitleStyle(char *a1, char *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance ConversationNoticeSubtitleStyle()
{
  char *v0;

  specialized RawRepresentable<>.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance ConversationNoticeSubtitleStyle(uint64_t a1)
{
  char *v1;

  specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance ConversationNoticeSubtitleStyle(uint64_t a1)
{
  char *v1;

  specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

ConversationKit::ConversationNoticeSubtitleStyle_optional protocol witness for RawRepresentable.init(rawValue:) in conformance ConversationNoticeSubtitleStyle(Swift::UInt *a1)
{
  return ConversationNoticeSubtitleStyle.init(rawValue:)(*a1);
}

void protocol witness for RawRepresentable.rawValue.getter in conformance ConversationNoticeSubtitleStyle(uint64_t *a1@<X8>)
{
  *a1 = ConversationNoticeSubtitleStyle.rawValue.getter();
  OUTLINED_FUNCTION_0();
}

BOOL specialized Notice.isExpired.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v0 = type metadata accessor for Date();
  v20 = *(_QWORD *)(v0 - 8);
  v21 = v0;
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Calendar();
  v18 = *(_QWORD *)(v3 - 8);
  v19 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DateComponents();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Calendar.current.getter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Calendar.Component>);
  v10 = type metadata accessor for Calendar.Component();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1BD6441D0;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v11 + 104))(v13 + v12, *MEMORY[0x1E0CB1188], v10);
  specialized Set.init(_nonEmptyArrayLiteral:)();
  type metadata accessor for ReactionNotice(0);
  Date.init()();
  Calendar.dateComponents(_:from:to:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v2, v21);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v5, v19);
  v14 = DateComponents.second.getter();
  v16 = v15;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if ((v16 & 1) != 0)
    return 0;
  if (one-time initialization token for shared != -1)
    swift_once();
  return (*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 992))() < v14;
}

{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v0 = type metadata accessor for Date();
  v20 = *(_QWORD *)(v0 - 8);
  v21 = v0;
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Calendar();
  v18 = *(_QWORD *)(v3 - 8);
  v19 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DateComponents();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Calendar.current.getter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Calendar.Component>);
  v10 = type metadata accessor for Calendar.Component();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1BD6441D0;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v11 + 104))(v13 + v12, *MEMORY[0x1E0CB1188], v10);
  specialized Set.init(_nonEmptyArrayLiteral:)();
  type metadata accessor for AccountUpdateNotice(0);
  Date.init()();
  Calendar.dateComponents(_:from:to:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v2, v21);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v5, v19);
  v14 = DateComponents.second.getter();
  v16 = v15;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if ((v16 & 1) != 0)
    return 0;
  if (one-time initialization token for shared != -1)
    swift_once();
  return (*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 992))() < v14;
}

{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v0 = type metadata accessor for Date();
  v20 = *(_QWORD *)(v0 - 8);
  v21 = v0;
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Calendar();
  v18 = *(_QWORD *)(v3 - 8);
  v19 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DateComponents();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Calendar.current.getter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Calendar.Component>);
  v10 = type metadata accessor for Calendar.Component();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1BD6441D0;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v11 + 104))(v13 + v12, *MEMORY[0x1E0CB1188], v10);
  specialized Set.init(_nonEmptyArrayLiteral:)();
  type metadata accessor for SessionActionNotice(0);
  Date.init()();
  Calendar.dateComponents(_:from:to:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v2, v21);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v5, v19);
  v14 = DateComponents.second.getter();
  v16 = v15;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if ((v16 & 1) != 0)
    return 0;
  if (one-time initialization token for shared != -1)
    swift_once();
  return (*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 992))() < v14;
}

{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v0 = type metadata accessor for Date();
  v20 = *(_QWORD *)(v0 - 8);
  v21 = v0;
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Calendar();
  v18 = *(_QWORD *)(v3 - 8);
  v19 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DateComponents();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Calendar.current.getter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Calendar.Component>);
  v10 = type metadata accessor for Calendar.Component();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1BD6441D0;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v11 + 104))(v13 + v12, *MEMORY[0x1E0CB1188], v10);
  specialized Set.init(_nonEmptyArrayLiteral:)();
  type metadata accessor for AppLaunchNotice(0);
  Date.init()();
  Calendar.dateComponents(_:from:to:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v2, v21);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v5, v19);
  v14 = DateComponents.second.getter();
  v16 = v15;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if ((v16 & 1) != 0)
    return 0;
  if (one-time initialization token for shared != -1)
    swift_once();
  return (*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 992))() < v14;
}

{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v0 = type metadata accessor for Date();
  v20 = *(_QWORD *)(v0 - 8);
  v21 = v0;
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Calendar();
  v18 = *(_QWORD *)(v3 - 8);
  v19 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DateComponents();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Calendar.current.getter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Calendar.Component>);
  v10 = type metadata accessor for Calendar.Component();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1BD6441D0;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v11 + 104))(v13 + v12, *MEMORY[0x1E0CB1188], v10);
  specialized Set.init(_nonEmptyArrayLiteral:)();
  type metadata accessor for PushToTalkNotice(0);
  Date.init()();
  Calendar.dateComponents(_:from:to:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v2, v21);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v5, v19);
  v14 = DateComponents.second.getter();
  v16 = v15;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if ((v16 & 1) != 0)
    return 0;
  if (one-time initialization token for shared != -1)
    swift_once();
  return (*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 992))() < v14;
}

{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v0 = type metadata accessor for Date();
  v20 = *(_QWORD *)(v0 - 8);
  v21 = v0;
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Calendar();
  v18 = *(_QWORD *)(v3 - 8);
  v19 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DateComponents();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Calendar.current.getter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Calendar.Component>);
  v10 = type metadata accessor for Calendar.Component();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1BD6441D0;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v11 + 104))(v13 + v12, *MEMORY[0x1E0CB1188], v10);
  specialized Set.init(_nonEmptyArrayLiteral:)();
  type metadata accessor for SystemUpdateNotice(0);
  Date.init()();
  Calendar.dateComponents(_:from:to:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v2, v21);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v5, v19);
  v14 = DateComponents.second.getter();
  v16 = v15;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if ((v16 & 1) != 0)
    return 0;
  if (one-time initialization token for shared != -1)
    swift_once();
  return (*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 992))() < v14;
}

void Notice.isExpired.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t);
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  OUTLINED_FUNCTION_93();
  v26 = v2;
  v27 = v0;
  v4 = v3;
  v5 = OUTLINED_FUNCTION_33();
  v29 = *(_QWORD *)(v5 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_59_3();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v22 - v8;
  v28 = type metadata accessor for Calendar();
  v25 = *(_QWORD *)(v28 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DateComponents();
  v23 = *(_QWORD *)(v13 - 8);
  v24 = v13;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_81();
  static Calendar.current.getter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Calendar.Component>);
  v15 = type metadata accessor for Calendar.Component();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1BD6441D0;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v16 + 104))(v18 + v17, *MEMORY[0x1E0CB1188], v15);
  specialized Set.init(_nonEmptyArrayLiteral:)();
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v26, v4);
  Date.init()();
  Calendar.dateComponents(_:from:to:)();
  OUTLINED_FUNCTION_133();
  v19 = *(void (**)(uint64_t))(v29 + 8);
  v20 = OUTLINED_FUNCTION_124_0();
  v19(v20);
  ((void (*)(char *, uint64_t))v19)(v9, v5);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v12, v28);
  DateComponents.second.getter();
  LOBYTE(v19) = v21;
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v1, v24);
  if ((v19 & 1) == 0)
  {
    if (one-time initialization token for shared != -1)
      swift_once();
    (*(void (**)(void))(*(_QWORD *)static Defaults.shared + 992))();
  }
  OUTLINED_FUNCTION_52_1();
}

void Notice.dismissalDuration.getter()
{
  Notice.dismissalDuration.getter();
}

{
  if (one-time initialization token for shared != -1)
    swift_once();
  OUTLINED_FUNCTION_363_0();
  OUTLINED_FUNCTION_0();
}

uint64_t specialized Notice.dismissalDuration.getter()
{
  if (one-time initialization token for shared != -1)
    swift_once();
  return (*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 984))();
}

uint64_t Notice.style.getter()
{
  return Notice.style.getter();
}

uint64_t specialized Notice.subtitle.getter()
{
  void (*v0)(void);
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_96();
  OUTLINED_FUNCTION_311();
  type metadata accessor for AttributedString.CharacterView();
  v1 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAEF10];
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  v3 = OUTLINED_FUNCTION_177_0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_254_1();
  v0();
  AttributedString.characters.getter();
  OUTLINED_FUNCTION_29_2(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type AttributedString.CharacterView and conformance AttributedString.CharacterView, v1, MEMORY[0x1E0CAEF28]);
  return String.init<A>(_:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v1 = type metadata accessor for AttributedString.CharacterView();
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for AttributeContainer();
  MEMORY[0x1E0C80A78](v2);
  v3 = type metadata accessor for AttributedString();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SessionActionNotice(0);
  if (*(_BYTE *)(v0 + *(int *)(v7 + 32)) == 1)
    SessionActionNotice.attributionDescription.getter(v7);
  else
    SessionActionNotice.actionDescription.getter();
  AttributeContainer.init()();
  AttributedString.init(_:attributes:)();
  AttributedString.characters.getter();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type AttributedString.CharacterView and conformance AttributedString.CharacterView, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAEF10], MEMORY[0x1E0CAEF28]);
  return String.init<A>(_:)();
}

{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v0 = type metadata accessor for AttributedString.CharacterView();
  v1 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAEF10];
  MEMORY[0x1E0C80A78](v0);
  v2 = type metadata accessor for AttributeContainer();
  MEMORY[0x1E0C80A78](v2);
  v3 = type metadata accessor for AttributedString();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  AppLaunchNotice.noticeContent.getter();
  swift_bridgeObjectRelease();
  AttributeContainer.init()();
  AttributedString.init(_:attributes:)();
  AttributedString.characters.getter();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type AttributedString.CharacterView and conformance AttributedString.CharacterView, v1, MEMORY[0x1E0CAEF28]);
  return String.init<A>(_:)();
}

void Notice.subtitle.getter()
{
  uint64_t (*v0)(uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  void (*v6)(uint64_t);

  OUTLINED_FUNCTION_93();
  type metadata accessor for AttributedString.CharacterView();
  v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAEF10];
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_0_7();
  OUTLINED_FUNCTION_188_1();
  OUTLINED_FUNCTION_41_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_77_1();
  v3 = OUTLINED_FUNCTION_315_0();
  v4(v3);
  AttributedString.characters.getter();
  v5 = OUTLINED_FUNCTION_348();
  v6(v5);
  _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type AttributedString.CharacterView and conformance AttributedString.CharacterView, v0, MEMORY[0x1E0CAEF28]);
  String.init<A>(_:)();
  OUTLINED_FUNCTION_52_1();
}

void Notice.subtitleStyle.getter(_BYTE *a1@<X8>)
{
  Notice.subtitleStyle.getter(a1);
}

{
  OUTLINED_FUNCTION_44_1(a1);
}

BOOL specialized Notice.shouldReplace(notice:)(_QWORD *a1)
{
  uint64_t v1;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v3 = *(unsigned __int8 *)(v1 + *(int *)(type metadata accessor for ReactionNotice(0) + 28));
  v4 = a1[3];
  v5 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v5 + 56))(&v7, v4, v5);
  return v7 >= v3;
}

{
  uint64_t v1;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v3 = *(unsigned __int8 *)(v1 + *(int *)(type metadata accessor for SystemUpdateNotice(0) + 32));
  v4 = a1[3];
  v5 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v5 + 56))(&v7, v4, v5);
  return v7 >= v3;
}

void specialized Notice.shouldReplace(notice:)(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  OUTLINED_FUNCTION_137_6(a1, a2);
  OUTLINED_FUNCTION_210();
  OUTLINED_FUNCTION_76_15();
  OUTLINED_FUNCTION_49_0();
}

void Notice.shouldReplace(notice:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a3 + 56))(&v3, a2, a3);
  OUTLINED_FUNCTION_210();
  OUTLINED_FUNCTION_76_15();
  OUTLINED_FUNCTION_49_0();
}

uint64_t key path getter for SessionActivationRequestNotice.expirationCheck : SessionActivationRequestNotice@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *a1;
  v3 = a1[1];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  *a2 = partial apply for thunk for @escaping @callee_guaranteed () -> (@unowned Bool);
  a2[1] = v5;
  return swift_retain();
}

uint64_t key path setter for SessionActivationRequestNotice.expirationCheck : SessionActivationRequestNotice(uint64_t *a1, void (**a2)())
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  swift_retain();
  result = swift_release();
  *a2 = partial apply for thunk for @escaping @callee_guaranteed () -> (@out Bool);
  a2[1] = (void (*)())v5;
  return result;
}

void SessionActivationRequestNotice.expirationCheck.getter()
{
  swift_retain();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void SessionActivationRequestNotice.expirationCheck.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  swift_release();
  *v2 = a1;
  v2[1] = a2;
  OUTLINED_FUNCTION_18();
}

uint64_t (*SessionActivationRequestNotice.expirationCheck.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t SessionActivationRequestNotice.isExpired.getter()
{
  uint64_t (**v0)(void);

  return (*v0)() & 1;
}

double SessionActivationRequestNotice.dismissalDuration.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

void SessionActivationRequestNotice.dismissalDuration.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 16) = a1;
}

uint64_t (*SessionActivationRequestNotice.dismissalDuration.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t SessionActivationRequestNotice.uuid.getter()
{
  return SessionActivationRequestNotice.uuid.getter(type metadata accessor for SessionActivationRequestNotice);
}

uint64_t SessionActivationRequestNotice.uuid.setter(uint64_t a1)
{
  return SessionActivationRequestNotice.uuid.setter(a1, type metadata accessor for SessionActivationRequestNotice);
}

uint64_t (*SessionActivationRequestNotice.uuid.modify())(_QWORD)
{
  OUTLINED_FUNCTION_265_1();
  OUTLINED_FUNCTION_201_0();
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t SessionActivationRequestNotice.date.getter()
{
  return SessionActivationRequestNotice.date.getter(type metadata accessor for SessionActivationRequestNotice);
}

uint64_t SessionActivationRequestNotice.date.setter(uint64_t a1)
{
  return SessionActivationRequestNotice.date.setter(a1, type metadata accessor for SessionActivationRequestNotice);
}

uint64_t (*SessionActivationRequestNotice.date.modify())(_QWORD)
{
  OUTLINED_FUNCTION_265_1();
  OUTLINED_FUNCTION_216_0();
  return TPNumberPadCharacter.rawValue.getter;
}

void SessionActivationRequestNotice.priority.getter()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_189_0();
  OUTLINED_FUNCTION_116_4(*(int *)(v0 + 32));
  OUTLINED_FUNCTION_0();
}

void SessionActivationRequestNotice.priority.setter(char *a1)
{
  SessionActivationRequestNotice.priority.setter(a1, type metadata accessor for SessionActivationRequestNotice);
}

uint64_t (*SessionActivationRequestNotice.priority.modify())(_QWORD)
{
  type metadata accessor for SessionActivationRequestNotice(0);
  OUTLINED_FUNCTION_219_0();
  return TPNumberPadCharacter.rawValue.getter;
}

void SessionActivationRequestNotice.style.getter()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_189_0();
  OUTLINED_FUNCTION_116_4(*(int *)(v0 + 36));
  OUTLINED_FUNCTION_0();
}

void SessionActivationRequestNotice.style.setter(char *a1)
{
  uint64_t v1;
  char v2;

  v2 = *a1;
  *(_BYTE *)(v1 + *(int *)(type metadata accessor for SessionActivationRequestNotice(0) + 36)) = v2;
  OUTLINED_FUNCTION_0();
}

uint64_t (*SessionActivationRequestNotice.style.modify())(_QWORD)
{
  type metadata accessor for SessionActivationRequestNotice(0);
  OUTLINED_FUNCTION_208_0();
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t SessionActivationRequestNotice.shouldTransitionToHUD.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for SessionActivationRequestNotice(0);
  return protocol witness for Notice.shouldTransitionToHUD.getter in conformance PushToTalkNotice(v0);
}

void SessionActivationRequestNotice.shouldTransitionToHUD.setter(uint64_t a1)
{
  SessionActivationRequestNotice.shouldTransitionToHUD.setter(a1, type metadata accessor for SessionActivationRequestNotice);
}

uint64_t (*SessionActivationRequestNotice.shouldTransitionToHUD.modify())(_QWORD)
{
  type metadata accessor for SessionActivationRequestNotice(0);
  OUTLINED_FUNCTION_207_2();
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t SessionActivationRequestNotice.noticeAccessory.getter()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v0 = OUTLINED_FUNCTION_189_0();
  v1 = OUTLINED_FUNCTION_192_0(*(int *)(v0 + 44));
  return OUTLINED_FUNCTION_73_15(v1, v2);
}

void SessionActivationRequestNotice.noticeAccessory.setter()
{
  uint64_t v0;

  v0 = type metadata accessor for SessionActivationRequestNotice(0);
  OUTLINED_FUNCTION_165_3(*(int *)(v0 + 44));
  OUTLINED_FUNCTION_18();
}

uint64_t (*SessionActivationRequestNotice.noticeAccessory.modify())(_QWORD)
{
  type metadata accessor for SessionActivationRequestNotice(0);
  OUTLINED_FUNCTION_206_0();
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t key path getter for SessionActivationRequestNotice.actionHandler : SessionActivationRequestNotice@<X0>(uint64_t a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for SessionActivationRequestNotice(0) + 48));
  v4 = *v3;
  v5 = v3[1];
  if (*v3)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for SessionActivationRequestNotice.actionHandler : SessionActivationRequestNotice(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(a2 + *(int *)(type metadata accessor for SessionActivationRequestNotice(0) + 48));
  v8 = *v7;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  result = outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  return result;
}

void SessionActivationRequestNotice.actionHandler.getter()
{
  SessionActivationRequestNotice.actionHandler.getter(type metadata accessor for SessionActivationRequestNotice);
}

void SessionActivationRequestNotice.actionHandler.setter(uint64_t a1, uint64_t a2)
{
  SessionActivationRequestNotice.actionHandler.setter(a1, a2, type metadata accessor for SessionActivationRequestNotice);
}

uint64_t (*SessionActivationRequestNotice.actionHandler.modify())(_QWORD)
{
  OUTLINED_FUNCTION_265_1();
  OUTLINED_FUNCTION_205_1();
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t key path getter for SessionActivationRequestNotice.dismissHandler : SessionActivationRequestNotice@<X0>(uint64_t a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for SessionActivationRequestNotice(0) + 52));
  v4 = *v3;
  v5 = v3[1];
  if (*v3)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for SessionActivationRequestNotice.dismissHandler : SessionActivationRequestNotice(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(a2 + *(int *)(type metadata accessor for SessionActivationRequestNotice(0) + 52));
  v8 = *v7;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  result = outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  return result;
}

void SessionActivationRequestNotice.dismissHandler.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for SessionActivationRequestNotice(0);
  OUTLINED_FUNCTION_5_100(*(int *)(v0 + 52));
  OUTLINED_FUNCTION_0();
}

void SessionActivationRequestNotice.dismissHandler.setter()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_308_0();
  OUTLINED_FUNCTION_16_66(*(int *)(v0 + 52));
  OUTLINED_FUNCTION_18();
}

uint64_t (*SessionActivationRequestNotice.dismissHandler.modify())(_QWORD)
{
  type metadata accessor for SessionActivationRequestNotice(0);
  OUTLINED_FUNCTION_204_1();
  return TPNumberPadCharacter.rawValue.getter;
}

void SessionActivationRequestNotice.bundleIdentifier.getter()
{
  type metadata accessor for SessionActivationRequestNotice(0);
  OUTLINED_FUNCTION_52_4();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void SessionActivationRequestNotice.bundleIdentifier.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_308_0();
  OUTLINED_FUNCTION_92_11();
  *v1 = v2;
  v1[1] = v0;
  OUTLINED_FUNCTION_18();
}

uint64_t (*SessionActivationRequestNotice.bundleIdentifier.modify())(_QWORD)
{
  type metadata accessor for SessionActivationRequestNotice(0);
  OUTLINED_FUNCTION_291_2();
  return TPNumberPadCharacter.rawValue.getter;
}

void SessionActivationRequestNotice.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  Swift::String v3;

  v2 = type metadata accessor for SessionActivationRequestNotice(0);
  OUTLINED_FUNCTION_268_1((_QWORD *)(v0 + *(int *)(v2 + 60)));
  v3._countAndFlagsBits = OUTLINED_FUNCTION_36_4(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  String.append(_:)(v3);
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_45_0();
}

void SessionActivationRequestNotice.activity.getter()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_189_0();
  OUTLINED_FUNCTION_238_0(*(int *)(v0 + 60));
  OUTLINED_FUNCTION_0();
}

void SessionActivationRequestNotice.equalTo(notice:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  OUTLINED_FUNCTION_96();
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SessionActivationRequestNotice?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  v4 = OUTLINED_FUNCTION_112_8();
  v5 = type metadata accessor for SessionActivationRequestNotice(v4);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of RadarReporting(v2, (uint64_t)&v22);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Notice);
  if (OUTLINED_FUNCTION_97())
  {
    OUTLINED_FUNCTION_86_0(v0, 0);
    OUTLINED_FUNCTION_135_2(v0, v9, type metadata accessor for SessionActivationRequestNotice);
    v10 = &v8[*(int *)(v5 + 60)];
    v11 = *((_QWORD *)v10 + 4);
    OUTLINED_FUNCTION_76_11(v10);
    v12 = OUTLINED_FUNCTION_312_0(*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
    v14 = v13;
    v15 = (_QWORD *)(v0 + *(int *)(v5 + 60));
    v16 = v15[3];
    v17 = v15[4];
    __swift_project_boxed_opaque_existential_1(v15, v16);
    if (v12 != (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(v16, v17) || v14 != v18)
    {
      OUTLINED_FUNCTION_202_0();
      OUTLINED_FUNCTION_13();
    }
    OUTLINED_FUNCTION_30_4();
    v20 = OUTLINED_FUNCTION_2_1();
    OUTLINED_FUNCTION_69_15(v20, type metadata accessor for SessionActivationRequestNotice);
  }
  else
  {
    OUTLINED_FUNCTION_86_0(v0, 1);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v0, &demangling cache variable for type metadata for SessionActivationRequestNotice?);
  }
  OUTLINED_FUNCTION_65_1();
}

uint64_t (*protocol witness for Notice.uuid.modify in conformance SessionActivationRequestNotice())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void protocol witness for Notice.title.getter in conformance SessionActivationRequestNotice()
{
  SessionActivationRequestNotice.title.getter();
}

uint64_t protocol witness for Notice.subtitle.getter in conformance SessionActivationRequestNotice()
{
  return specialized Notice.subtitle.getter();
}

uint64_t (*protocol witness for Notice.actionHandler.modify in conformance SessionActivationRequestNotice())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*protocol witness for Notice.dismissHandler.modify in conformance SessionActivationRequestNotice())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t protocol witness for Notice.shouldReplace(notice:) in conformance SessionActivationRequestNotice(uint64_t a1)
{
  char v1;

  specialized Notice.shouldReplace(notice:)(a1, type metadata accessor for SessionActivationRequestNotice);
  return v1 & 1;
}

ConversationKit::AccountUpdateNotice::NoticeType_optional __swiftcall AccountUpdateNotice.NoticeType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  uint64_t countAndFlagsBits;
  char *v3;
  Swift::OpaquePointer v4;
  unint64_t v5;
  char v6;
  ConversationKit::AccountUpdateNotice::NoticeType_optional result;

  countAndFlagsBits = rawValue._countAndFlagsBits;
  v3 = v1;
  v4._rawValue = &outlined read-only object #0 of AccountUpdateNotice.NoticeType.init(rawValue:);
  v5 = OUTLINED_FUNCTION_4_89(v4, countAndFlagsBits);
  OUTLINED_FUNCTION_13_3();
  v6 = 3;
  if (v5 < 3)
    v6 = v5;
  *v3 = v6;
  OUTLINED_FUNCTION_18();
  return result;
}

uint64_t AccountUpdateNotice.NoticeType.rawValue.getter()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  char v3;

  OUTLINED_FUNCTION_315_1();
  v2 = 1952867692;
  if (!v3)
    v2 = 0x6E456172656D6163;
  if (v0)
    return v2;
  else
    return v1;
}

void protocol witness for static Equatable.== infix(_:_:) in conformance AccountUpdateNotice.NoticeType(char *a1, char *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance AccountUpdateNotice.NoticeType()
{
  specialized RawRepresentable<>.hashValue.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance AccountUpdateNotice.NoticeType()
{
  return specialized RawRepresentable<>.hash(into:)();
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance AccountUpdateNotice.NoticeType()
{
  specialized RawRepresentable<>._rawHashValue(seed:)();
}

ConversationKit::AccountUpdateNotice::NoticeType_optional protocol witness for RawRepresentable.init(rawValue:) in conformance AccountUpdateNotice.NoticeType(Swift::String *a1)
{
  return AccountUpdateNotice.NoticeType.init(rawValue:)(*a1);
}

void protocol witness for RawRepresentable.rawValue.getter in conformance AccountUpdateNotice.NoticeType(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = AccountUpdateNotice.NoticeType.rawValue.getter();
  a1[1] = v2;
  OUTLINED_FUNCTION_0();
}

void AccountUpdateNotice.type.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_44_1(a1);
}

_BYTE *AccountUpdateNotice.type.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*AccountUpdateNotice.type.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void AccountUpdateNotice.description.getter()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;

  OUTLINED_FUNCTION_315_1();
  v2 = 1952867692;
  if (!v3)
    v2 = 0x6E456172656D6163;
  if (v0)
    v4 = v2;
  else
    v4 = v1;
  OUTLINED_FUNCTION_318_0(v4);
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_36();
}

uint64_t AccountUpdateNotice.participants.getter()
{
  return swift_bridgeObjectRetain();
}

void AccountUpdateNotice.participants.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  OUTLINED_FUNCTION_0();
}

uint64_t (*AccountUpdateNotice.participants.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t AccountUpdateNotice.uuid.getter()
{
  return SessionActivationRequestNotice.uuid.getter(type metadata accessor for AccountUpdateNotice);
}

uint64_t SessionActivationRequestNotice.uuid.getter(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  OUTLINED_FUNCTION_255_0(a1);
  OUTLINED_FUNCTION_104_9();
  v1 = OUTLINED_FUNCTION_274_1();
  return OUTLINED_FUNCTION_53_5(v1, v2, v3, v4);
}

uint64_t AccountUpdateNotice.uuid.setter(uint64_t a1)
{
  return SessionActivationRequestNotice.uuid.setter(a1, type metadata accessor for AccountUpdateNotice);
}

uint64_t SessionActivationRequestNotice.uuid.setter(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  OUTLINED_FUNCTION_137_6(a1, a2);
  OUTLINED_FUNCTION_104_9();
  v2 = OUTLINED_FUNCTION_64();
  return OUTLINED_FUNCTION_53_5(v2, v3, v4, v5);
}

uint64_t (*AccountUpdateNotice.uuid.modify())(_QWORD)
{
  OUTLINED_FUNCTION_155_0();
  OUTLINED_FUNCTION_201_0();
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t AccountUpdateNotice.date.getter()
{
  return SessionActivationRequestNotice.date.getter(type metadata accessor for AccountUpdateNotice);
}

uint64_t SessionActivationRequestNotice.date.getter(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  OUTLINED_FUNCTION_161_2(a1);
  OUTLINED_FUNCTION_33();
  v1 = OUTLINED_FUNCTION_50();
  return OUTLINED_FUNCTION_31_0(v1, v2, v3, v4);
}

uint64_t AccountUpdateNotice.date.setter(uint64_t a1)
{
  return SessionActivationRequestNotice.date.setter(a1, type metadata accessor for AccountUpdateNotice);
}

uint64_t SessionActivationRequestNotice.date.setter(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  OUTLINED_FUNCTION_137_6(a1, a2);
  OUTLINED_FUNCTION_33();
  v2 = OUTLINED_FUNCTION_69_1();
  return OUTLINED_FUNCTION_31_0(v2, v3, v4, v5);
}

uint64_t (*AccountUpdateNotice.date.modify())(_QWORD)
{
  OUTLINED_FUNCTION_155_0();
  OUTLINED_FUNCTION_216_0();
  return TPNumberPadCharacter.rawValue.getter;
}

void AccountUpdateNotice.priority.getter()
{
  uint64_t updated;

  updated = type metadata accessor for AccountUpdateNotice(0);
  OUTLINED_FUNCTION_116_4(*(int *)(updated + 32));
  OUTLINED_FUNCTION_0();
}

void AccountUpdateNotice.priority.setter(char *a1)
{
  SessionActivationRequestNotice.priority.setter(a1, type metadata accessor for AccountUpdateNotice);
}

void SessionActivationRequestNotice.priority.setter(char *a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  char v3;

  v3 = *a1;
  *(_BYTE *)(v2 + *(int *)(OUTLINED_FUNCTION_137_6((uint64_t)a1, a2) + 32)) = v3;
  OUTLINED_FUNCTION_0();
}

uint64_t (*AccountUpdateNotice.priority.modify())(_QWORD)
{
  type metadata accessor for AccountUpdateNotice(0);
  OUTLINED_FUNCTION_219_0();
  return TPNumberPadCharacter.rawValue.getter;
}

void AccountUpdateNotice.bundleIdentifier.getter()
{
  type metadata accessor for AccountUpdateNotice(0);
  OUTLINED_FUNCTION_52_4();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void AccountUpdateNotice.bundleIdentifier.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_307_0();
  type metadata accessor for AccountUpdateNotice(v3);
  OUTLINED_FUNCTION_92_11();
  *v1 = v2;
  v1[1] = v0;
  OUTLINED_FUNCTION_18();
}

uint64_t (*AccountUpdateNotice.bundleIdentifier.modify())(_QWORD)
{
  type metadata accessor for AccountUpdateNotice(0);
  OUTLINED_FUNCTION_208_0();
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t AccountUpdateNotice.shouldTransitionToHUD.getter()
{
  uint64_t updated;

  updated = type metadata accessor for AccountUpdateNotice(0);
  return protocol witness for Notice.shouldTransitionToHUD.getter in conformance PushToTalkNotice(updated);
}

void AccountUpdateNotice.shouldTransitionToHUD.setter(uint64_t a1)
{
  SessionActivationRequestNotice.shouldTransitionToHUD.setter(a1, type metadata accessor for AccountUpdateNotice);
}

void SessionActivationRequestNotice.shouldTransitionToHUD.setter(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  *(_BYTE *)(v2 + *(int *)(OUTLINED_FUNCTION_137_6(a1, a2) + 40)) = a1;
  OUTLINED_FUNCTION_0();
}

uint64_t (*AccountUpdateNotice.shouldTransitionToHUD.modify())(_QWORD)
{
  type metadata accessor for AccountUpdateNotice(0);
  OUTLINED_FUNCTION_207_2();
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t key path getter for AccountUpdateNotice.actionHandler : AccountUpdateNotice@<X0>(uint64_t a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for AccountUpdateNotice(0) + 44));
  v4 = *v3;
  v5 = v3[1];
  if (*v3)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for AccountUpdateNotice.actionHandler : AccountUpdateNotice(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(a2 + *(int *)(type metadata accessor for AccountUpdateNotice(0) + 44));
  v8 = *v7;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  result = outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  return result;
}

void AccountUpdateNotice.actionHandler.getter()
{
  PushToTalkNotice.actionHandler.getter(type metadata accessor for AccountUpdateNotice);
}

void AccountUpdateNotice.actionHandler.setter(uint64_t a1, uint64_t a2)
{
  PushToTalkNotice.actionHandler.setter(a1, a2, type metadata accessor for AccountUpdateNotice);
}

uint64_t (*AccountUpdateNotice.actionHandler.modify())(_QWORD)
{
  OUTLINED_FUNCTION_155_0();
  OUTLINED_FUNCTION_206_0();
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t key path getter for AccountUpdateNotice.dismissHandler : AccountUpdateNotice@<X0>(uint64_t a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for AccountUpdateNotice(0) + 48));
  v4 = *v3;
  v5 = v3[1];
  if (*v3)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for AccountUpdateNotice.dismissHandler : AccountUpdateNotice(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(a2 + *(int *)(type metadata accessor for AccountUpdateNotice(0) + 48));
  v8 = *v7;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  result = outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  return result;
}

void AccountUpdateNotice.dismissHandler.getter()
{
  SessionActivationRequestNotice.actionHandler.getter(type metadata accessor for AccountUpdateNotice);
}

void SessionActivationRequestNotice.actionHandler.getter(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_164(a1);
  OUTLINED_FUNCTION_5_100(*(int *)(v1 + 48));
  OUTLINED_FUNCTION_0();
}

void AccountUpdateNotice.dismissHandler.setter(uint64_t a1, uint64_t a2)
{
  SessionActivationRequestNotice.actionHandler.setter(a1, a2, type metadata accessor for AccountUpdateNotice);
}

void SessionActivationRequestNotice.actionHandler.setter(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_115_8(a1, a2, a3);
  OUTLINED_FUNCTION_16_66(*(int *)(v3 + 48));
  OUTLINED_FUNCTION_18();
}

uint64_t (*AccountUpdateNotice.dismissHandler.modify())(_QWORD)
{
  OUTLINED_FUNCTION_155_0();
  OUTLINED_FUNCTION_205_1();
  return TPNumberPadCharacter.rawValue.getter;
}

void AccountUpdateNotice.coalesce(with:)()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AccountUpdateNotice?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  v4 = OUTLINED_FUNCTION_2_20();
  type metadata accessor for AccountUpdateNotice(v4);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_65_17();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Notice);
  if (OUTLINED_FUNCTION_70_17())
  {
    OUTLINED_FUNCTION_83_0(v2, 0);
    OUTLINED_FUNCTION_135_2(v2, v6, type metadata accessor for AccountUpdateNotice);
    v7 = *v0;
    specialized == infix<A>(_:_:)(*v1, *v0);
    if ((v8 & 1) != 0)
    {
      swift_bridgeObjectRetain();
      specialized Array.append<A>(contentsOf:)();
      OUTLINED_FUNCTION_69_15(v9, type metadata accessor for AccountUpdateNotice);
    }
    else
    {
      v11 = AccountUpdateNotice.hasSameParticipants(as:)((uint64_t)v0);
      v12 = v11;
      OUTLINED_FUNCTION_69_15(v11, type metadata accessor for AccountUpdateNotice);
      if ((v12 & 1) != 0)
        *v1 = v7;
    }
  }
  else
  {
    v10 = OUTLINED_FUNCTION_83_0(v2, 1);
    OUTLINED_FUNCTION_32_18(v10, &demangling cache variable for type metadata for AccountUpdateNotice?);
  }
  OUTLINED_FUNCTION_91();
}

uint64_t AccountUpdateNotice.hasSameParticipants(as:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v8;

  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_QWORD *)(a1 + 8);
  if (*(_QWORD *)(v3 + 16) != *(_QWORD *)(v4 + 16))
    return 0;
  v8 = v3;
  swift_bridgeObjectRetain();
  specialized MutableCollection<>.sort(by:)(&v8);
  v8 = v4;
  OUTLINED_FUNCTION_5_0();
  specialized MutableCollection<>.sort(by:)(&v8);
  OUTLINED_FUNCTION_50();
  specialized static Array<A>.== infix(_:_:)();
  v6 = v5;
  swift_release();
  swift_release();
  return v6 & 1;
}

uint64_t AccountUpdateNotice.noticeAccessory.getter()
{
  return AccountUpdateNotice.noticeAccessory.getter(type metadata accessor for AccountUpdateNotice);
}

void AccountUpdateNotice.noticeAccessory.setter(uint64_t a1)
{
  AccountUpdateNotice.noticeAccessory.setter(a1, type metadata accessor for AccountUpdateNotice);
}

uint64_t (*AccountUpdateNotice.noticeAccessory.modify())(_QWORD)
{
  OUTLINED_FUNCTION_155_0();
  OUTLINED_FUNCTION_204_1();
  return TPNumberPadCharacter.rawValue.getter;
}

void AccountUpdateNotice.equalTo(notice:)()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  OUTLINED_FUNCTION_96();
  v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AccountUpdateNotice?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  v6 = OUTLINED_FUNCTION_58_5();
  type metadata accessor for AccountUpdateNotice(v6);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_74_10();
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v21 - v10;
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v21 - v12;
  outlined init with copy of RadarReporting(v4, (uint64_t)&v22);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Notice);
  if (OUTLINED_FUNCTION_97())
  {
    OUTLINED_FUNCTION_83_7(v2, 0);
    _s15ConversationKit11ParticipantVWObTm_1(v2, (uint64_t)v13, type metadata accessor for AccountUpdateNotice);
    specialized == infix<A>(_:_:)(*v1, *v13);
    v15 = v14;
    v16 = OUTLINED_FUNCTION_64();
    OUTLINED_FUNCTION_294_0(v16, v17);
    OUTLINED_FUNCTION_294_0((uint64_t)v13, v0);
    if ((v15 & 1) != 0)
      AccountUpdateNotice.hasSameParticipants(as:)(v0);
    OUTLINED_FUNCTION_293_0(v0);
    OUTLINED_FUNCTION_293_0((uint64_t)v11);
    OUTLINED_FUNCTION_293_0((uint64_t)v13);
  }
  else
  {
    v18 = OUTLINED_FUNCTION_312();
    v20 = OUTLINED_FUNCTION_83_7(v18, v19);
    OUTLINED_FUNCTION_219(v20, &demangling cache variable for type metadata for AccountUpdateNotice?);
  }
  OUTLINED_FUNCTION_65_1();
}

uint64_t protocol witness for Notice.subtitle.getter in conformance AccountUpdateNotice()
{
  return specialized Notice.subtitle.getter();
}

uint64_t (*protocol witness for Notice.actionHandler.modify in conformance AccountUpdateNotice())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t protocol witness for Notice.shouldReplace(notice:) in conformance AccountUpdateNotice(uint64_t a1)
{
  char v1;

  specialized Notice.shouldReplace(notice:)(a1, type metadata accessor for AccountUpdateNotice);
  return v1 & 1;
}

void SessionActionNotice.QueueItemType.init(notice:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v2;
  id v5;
  uint64_t v6;
  char v7;
  unint64_t v8;
  char v9;

  v5 = objc_msgSend(a1, sel_queueItemType);
  if (v5 == (id)2)
  {
    OUTLINED_FUNCTION_170();
    OUTLINED_FUNCTION_10_3();
    OUTLINED_FUNCTION_412_0();
    if (v9)
      v8 = 0xE000000000000000;
    else
      v8 = v2;
    v7 = 1;
  }
  else if (v5 == (id)1)
  {
    OUTLINED_FUNCTION_170();
    OUTLINED_FUNCTION_10_3();
    OUTLINED_FUNCTION_412_0();
    v8 = 0xE000000000000000;
    if (!v9)
      v8 = v2;
  }
  else
  {

    v6 = 0;
    v8 = 0;
    v7 = 2;
  }
  *(_QWORD *)a2 = v6;
  *(_QWORD *)(a2 + 8) = v8;
  *(_BYTE *)(a2 + 16) = v7;
  OUTLINED_FUNCTION_18();
}

void static SessionActionNotice.QueueItemType.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;

  v3 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(unsigned __int8 *)(a1 + 16);
  v6 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v7 = *(unsigned __int8 *)(a2 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    if (v4 == 1)
    {
      if (v7 == 1)
      {
        if (v3 != v6 || v2 != v5)
          OUTLINED_FUNCTION_13();
        outlined copy of CallScreening.EndingAction(v6, v5, 1u);
        outlined copy of CallScreening.EndingAction(v3, v2, 1u);
        outlined consume of CallScreening.EndingAction(v3, v2, 1u);
        v13 = v6;
        v14 = v5;
        v15 = 1;
LABEL_23:
        outlined consume of CallScreening.EndingAction(v13, v14, v15);
        goto LABEL_24;
      }
    }
    else if (v7 == 2 && (v5 | v6) == 0)
    {
      v11 = OUTLINED_FUNCTION_315_0();
      outlined consume of CallScreening.EndingAction(v11, v12, 2u);
      outlined consume of CallScreening.EndingAction(0, 0, 2u);
      goto LABEL_24;
    }
  }
  else if (!*(_BYTE *)(a2 + 16))
  {
    if (v3 != v6 || v2 != v5)
      OUTLINED_FUNCTION_13();
    outlined copy of CallScreening.EndingAction(v6, v5, 0);
    outlined copy of CallScreening.EndingAction(v3, v2, 0);
    outlined consume of CallScreening.EndingAction(v3, v2, 0);
    v13 = v6;
    v14 = v5;
    v15 = 0;
    goto LABEL_23;
  }
  outlined copy of CallScreening.EndingAction(*(_QWORD *)a2, *(_QWORD *)(a2 + 8), v7);
  outlined copy of CallScreening.EndingAction(v3, v2, v4);
  outlined consume of CallScreening.EndingAction(v3, v2, v4);
  outlined consume of CallScreening.EndingAction(v6, v5, v7);
LABEL_24:
  OUTLINED_FUNCTION_91();
}

BOOL SessionActionNotice.QueueItemType.isSong.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + 16) == 0;
}

void SessionActionNotice.QueueItemType.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 8);
  if (!*(_BYTE *)(v0 + 16))
  {
    String.append(_:)(*(Swift::String *)&v1);
    v1 = OUTLINED_FUNCTION_203();
LABEL_5:
    String.append(_:)(*(Swift::String *)&v1);
    goto LABEL_6;
  }
  if (*(_BYTE *)(v0 + 16) == 1)
    goto LABEL_5;
LABEL_6:
  OUTLINED_FUNCTION_36();
}

uint64_t SessionActionNotice.type.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v2 = *v1;
  v3 = v1[1];
  v4 = v1[2];
  v5 = v1[3];
  *a1 = *v1;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return outlined copy of SessionActionNotice.NoticeType(v2, v3, v4);
}

__n128 SessionActionNotice.type.setter(__n128 *a1)
{
  __n128 *v1;
  unint64_t v2;
  unint64_t v3;
  __n128 result;
  __n128 v5;

  v5 = *a1;
  v2 = a1[1].n128_u64[0];
  v3 = a1[1].n128_u64[1];
  OUTLINED_FUNCTION_365();
  result = v5;
  *v1 = v5;
  v1[1].n128_u64[0] = v2;
  v1[1].n128_u64[1] = v3;
  return result;
}

uint64_t (*SessionActionNotice.type.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void SessionActionNotice.participant.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_139_4();
  outlined init with copy of FeatureEligibility?(v1 + *(int *)(v2 + 20), v0, &demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_0();
}

void SessionActionNotice.participant.setter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_133_4();
  OUTLINED_FUNCTION_141_1();
  outlined assign with take of Participant?(v0, v1, &demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_0();
}

uint64_t (*SessionActionNotice.participant.modify())(_QWORD)
{
  type metadata accessor for SessionActionNotice(0);
  OUTLINED_FUNCTION_141_1();
  return TPNumberPadCharacter.rawValue.getter;
}

void SessionActionNotice.conversation.getter()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_139_4();
  OUTLINED_FUNCTION_238_0(*(int *)(v0 + 24));
  OUTLINED_FUNCTION_0();
}

uint64_t SessionActionNotice.conversation.setter()
{
  uint64_t v0;
  uint64_t v1;
  __int128 *v2;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_133_4();
  __swift_destroy_boxed_opaque_existential_1(v0 + *(int *)(v1 + 24));
  v2 = (__int128 *)OUTLINED_FUNCTION_50();
  return OUTLINED_FUNCTION_249_1(v2, v3);
}

uint64_t (*SessionActionNotice.conversation.modify())(_QWORD)
{
  type metadata accessor for SessionActionNotice(0);
  OUTLINED_FUNCTION_201_0();
  return TPNumberPadCharacter.rawValue.getter;
}

void SessionActionNotice.activity.getter()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_139_4();
  OUTLINED_FUNCTION_238_0(*(int *)(v0 + 28));
  OUTLINED_FUNCTION_0();
}

uint64_t SessionActionNotice.activity.setter()
{
  uint64_t v0;
  uint64_t v1;
  __int128 *v2;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_133_4();
  __swift_destroy_boxed_opaque_existential_1(v0 + *(int *)(v1 + 28));
  v2 = (__int128 *)OUTLINED_FUNCTION_50();
  return OUTLINED_FUNCTION_249_1(v2, v3);
}

uint64_t (*SessionActionNotice.activity.modify())(_QWORD)
{
  type metadata accessor for SessionActionNotice(0);
  OUTLINED_FUNCTION_216_0();
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t SessionActionNotice.triggeredLocally.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for SessionActionNotice(0) + 32));
}

void SessionActionNotice.triggeredLocally.setter()
{
  char v0;
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_133_4() + 32)) = v0;
  OUTLINED_FUNCTION_0();
}

uint64_t (*SessionActionNotice.triggeredLocally.modify())(_QWORD)
{
  type metadata accessor for SessionActionNotice(0);
  OUTLINED_FUNCTION_219_0();
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t SessionActionNotice.deviceFamily.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for SessionActionNotice(0) + 36));
}

void SessionActionNotice.deviceFamily.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = v2 + *(int *)(type metadata accessor for SessionActionNotice(0) + 36);
  *(_QWORD *)v5 = a1;
  *(_BYTE *)(v5 + 8) = a2 & 1;
  OUTLINED_FUNCTION_18();
}

uint64_t (*SessionActionNotice.deviceFamily.modify())(_QWORD)
{
  type metadata accessor for SessionActionNotice(0);
  OUTLINED_FUNCTION_208_0();
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t SessionActionNotice.uuid.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_139_4();
  OUTLINED_FUNCTION_33_0();
  v0 = OUTLINED_FUNCTION_50();
  return OUTLINED_FUNCTION_31_0(v0, v1, v2, v3);
}

uint64_t SessionActionNotice.uuid.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_133_4();
  OUTLINED_FUNCTION_33_0();
  v0 = OUTLINED_FUNCTION_69_1();
  return OUTLINED_FUNCTION_31_0(v0, v1, v2, v3);
}

uint64_t (*SessionActionNotice.uuid.modify())(_QWORD)
{
  type metadata accessor for SessionActionNotice(0);
  OUTLINED_FUNCTION_207_2();
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t SessionActionNotice.date.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_139_4();
  OUTLINED_FUNCTION_33();
  v0 = OUTLINED_FUNCTION_50();
  return OUTLINED_FUNCTION_31_0(v0, v1, v2, v3);
}

uint64_t SessionActionNotice.date.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_133_4();
  OUTLINED_FUNCTION_33();
  v0 = OUTLINED_FUNCTION_69_1();
  return OUTLINED_FUNCTION_31_0(v0, v1, v2, v3);
}

uint64_t (*SessionActionNotice.date.modify())(_QWORD)
{
  type metadata accessor for SessionActionNotice(0);
  OUTLINED_FUNCTION_206_0();
  return TPNumberPadCharacter.rawValue.getter;
}

void SessionActionNotice.bundleIdentifier.getter()
{
  type metadata accessor for SessionActionNotice(0);
  OUTLINED_FUNCTION_52_4();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void SessionActionNotice.bundleIdentifier.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_178_1();
  OUTLINED_FUNCTION_92_11();
  *v1 = v2;
  v1[1] = v0;
  OUTLINED_FUNCTION_18();
}

uint64_t (*SessionActionNotice.bundleIdentifier.modify())(_QWORD)
{
  type metadata accessor for SessionActionNotice(0);
  OUTLINED_FUNCTION_205_1();
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t SessionActionNotice.shouldTransitionToHUD.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for SessionActionNotice(0) + 52));
}

void SessionActionNotice.shouldTransitionToHUD.setter()
{
  char v0;
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_133_4() + 52)) = v0;
  OUTLINED_FUNCTION_0();
}

uint64_t (*SessionActionNotice.shouldTransitionToHUD.modify())(_QWORD)
{
  type metadata accessor for SessionActionNotice(0);
  OUTLINED_FUNCTION_204_1();
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t key path getter for SessionActionNotice.actionHandler : SessionActionNotice@<X0>(uint64_t a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for SessionActionNotice(0) + 56));
  v4 = *v3;
  v5 = v3[1];
  if (*v3)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for SessionActionNotice.actionHandler : SessionActionNotice(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(a2 + *(int *)(type metadata accessor for SessionActionNotice(0) + 56));
  v8 = *v7;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  result = outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  return result;
}

void SessionActionNotice.actionHandler.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for SessionActionNotice(0);
  OUTLINED_FUNCTION_5_100(*(int *)(v0 + 56));
  OUTLINED_FUNCTION_0();
}

void SessionActionNotice.actionHandler.setter()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_178_1();
  OUTLINED_FUNCTION_16_66(*(int *)(v0 + 56));
  OUTLINED_FUNCTION_18();
}

uint64_t (*SessionActionNotice.actionHandler.modify())(_QWORD)
{
  type metadata accessor for SessionActionNotice(0);
  OUTLINED_FUNCTION_291_2();
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t key path getter for SessionActionNotice.dismissHandler : SessionActionNotice@<X0>(uint64_t a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for SessionActionNotice(0) + 60));
  v4 = *v3;
  v5 = v3[1];
  if (*v3)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for SessionActionNotice.dismissHandler : SessionActionNotice(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(a2 + *(int *)(type metadata accessor for SessionActionNotice(0) + 60));
  v8 = *v7;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  result = outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  return result;
}

void SessionActionNotice.dismissHandler.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for SessionActionNotice(0);
  OUTLINED_FUNCTION_5_100(*(int *)(v0 + 60));
  OUTLINED_FUNCTION_0();
}

void SessionActionNotice.dismissHandler.setter()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_178_1();
  OUTLINED_FUNCTION_16_66(*(int *)(v0 + 60));
  OUTLINED_FUNCTION_18();
}

uint64_t (*SessionActionNotice.dismissHandler.modify())(_QWORD)
{
  type metadata accessor for SessionActionNotice(0);
  return TPNumberPadCharacter.rawValue.getter;
}

void SessionActionNotice.priority.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_44_1(a1);
}

void SessionActionNotice.style.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;

  OUTLINED_FUNCTION_93();
  v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Collaboration?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  v6 = OUTLINED_FUNCTION_2_20();
  v7 = type metadata accessor for Collaboration(v6);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_16_2();
  if (static Platform.current.getter() == 1)
  {
    v10 = *v0;
    v9 = v0[1];
    v11 = v0[3];
    if ((unint64_t)v0[2] >> 62 != 3)
      goto LABEL_51;
    OUTLINED_FUNCTION_42_37();
    if (v12)
    {
      if (!(v9 | v10 | v11))
        goto LABEL_51;
    }
    if (v10 == 1 && !v9)
    {
      OUTLINED_FUNCTION_42_37();
      if (v12)
      {
        if (!v11)
          goto LABEL_51;
      }
    }
    if (v10 == 2 && !v9)
    {
      OUTLINED_FUNCTION_42_37();
      if (v12)
      {
        if (!v11)
          goto LABEL_51;
      }
    }
    if ((v10 != 3 || v9 || (OUTLINED_FUNCTION_42_37(), !v12) || v11)
      && (v10 != 4 || v9 || (OUTLINED_FUNCTION_42_37(), !v12) || v11)
      && (v10 != 5 || v9 || (OUTLINED_FUNCTION_42_37(), !v12) || v11)
      && (v10 != 6 || v9 || (OUTLINED_FUNCTION_42_37(), !v12) || v11)
      && (v10 != 7 || v9 || (OUTLINED_FUNCTION_42_37(), !v12) || v11)
      && (v10 != 8 || v9 || (OUTLINED_FUNCTION_42_37(), !v12) || v11)
      && (v10 != 9 || v9 || (OUTLINED_FUNCTION_42_37(), !v12) || v11))
    {
      OUTLINED_FUNCTION_106_7();
      v21 = *(uint64_t *)((char *)v0 + v20 + 24);
      v22 = *(uint64_t *)((char *)v0 + v20 + 32);
      OUTLINED_FUNCTION_76_11((uint64_t *)((char *)v0 + v20));
      (*(void (**)(uint64_t, uint64_t))(v22 + 112))(v21, v22);
      v23 = OUTLINED_FUNCTION_69_0(v1, 1, v7);
      if (v12)
      {
        OUTLINED_FUNCTION_32_18(v23, &demangling cache variable for type metadata for Collaboration?);
      }
      else
      {
        _s15ConversationKit11ParticipantVWObTm_1(v1, v2, type metadata accessor for Collaboration);
        v24 = *(unsigned __int8 *)(v2 + 16);
        outlined destroy of Participant(v2, type metadata accessor for Collaboration);
        if (v24 != 2)
        {
          v19 = 1;
          goto LABEL_53;
        }
      }
    }
    else
    {
LABEL_51:
      v13 = OUTLINED_FUNCTION_387();
      outlined copy of SessionActionNotice.NoticeType(v13, v14, v15);
      v16 = OUTLINED_FUNCTION_387();
      outlined consume of SessionActionNotice.NoticeType(v16, v17, v18);
      OUTLINED_FUNCTION_9_79(10);
    }
  }
  v19 = 0;
LABEL_53:
  *v4 = v19;
  OUTLINED_FUNCTION_52_1();
}

void SessionActionNotice.dismissalDuration.getter()
{
  uint64_t *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;

  v1 = v0[2];
  if (v1 >> 62 != 3)
    goto LABEL_32;
  v2 = v0[3];
  v4 = *v0;
  v3 = v0[1];
  v5 = v1 == 0xC000000000000000 && (v2 | *v0 | v3) == 0;
  if (v5)
    goto LABEL_31;
  if (!v2 && ((OUTLINED_FUNCTION_334_0(), v5) ? (v6 = v4 == 1) : (v6 = 0), v6 ? (v7 = v3 == 0) : (v7 = 0), v7)
    || !v2 && ((OUTLINED_FUNCTION_334_0(), v5) ? (v8 = v4 == 7) : (v8 = 0), v8 ? (v9 = v3 == 0) : (v9 = 0), v9))
  {
    v10 = one-time initialization token for shared;
    v11 = 122;
    goto LABEL_33;
  }
  if (!v2 && (v1 == 0xC000000000000000 ? (v12 = v4 == 10) : (v12 = 0), v12 && !v3))
  {
LABEL_31:
    v10 = one-time initialization token for shared;
    v11 = 121;
  }
  else
  {
LABEL_32:
    v10 = one-time initialization token for shared;
    v11 = 123;
  }
LABEL_33:
  if (v10 != -1)
    swift_once();
  (*(void (**)(void))(*(_QWORD *)static Defaults.shared + 8 * v11))();
  OUTLINED_FUNCTION_0();
}

void SessionActionNotice.coalesce(with:)()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(_QWORD);
  uint64_t v25;

  OUTLINED_FUNCTION_93();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SessionActionNotice?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SessionActionNotice(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_151_2();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Notice);
  if (!OUTLINED_FUNCTION_70_17())
  {
    v17 = OUTLINED_FUNCTION_83_0((uint64_t)v4, 1);
    OUTLINED_FUNCTION_32_18(v17, &demangling cache variable for type metadata for SessionActionNotice?);
    goto LABEL_27;
  }
  OUTLINED_FUNCTION_83_0((uint64_t)v4, 0);
  OUTLINED_FUNCTION_135_2((uint64_t)v4, v6, type metadata accessor for SessionActionNotice);
  v8 = *v1;
  v7 = v1[1];
  v10 = v1[2];
  v9 = v1[3];
  v12 = *v0;
  v11 = v0[1];
  v14 = v0[2];
  v13 = v0[3];
  if (v10 >> 62)
  {
    if (v10 >> 62 == 3)
    {
      if ((OUTLINED_FUNCTION_81_14(), v15) && !(v7 | v8 | v9)
        || v8 == 1 && !v7 && (OUTLINED_FUNCTION_81_14(), v15) && !v9
        || v8 == 7 && !v7 && (OUTLINED_FUNCTION_81_14(), v15) && !v9)
      {
        v16 = OUTLINED_FUNCTION_48_32();
        OUTLINED_FUNCTION_69_15(v16, type metadata accessor for SessionActionNotice);
LABEL_27:
        OUTLINED_FUNCTION_52_1();
        return;
      }
    }
    OUTLINED_FUNCTION_157_0();
    goto LABEL_25;
  }
  OUTLINED_FUNCTION_157_0();
  if (v14 >> 62)
  {
LABEL_25:
    outlined consume of SessionActionNotice.NoticeType(v8, v7, v10);
    v19 = v12;
    v20 = v11;
    v21 = v14;
    goto LABEL_26;
  }
  OUTLINED_FUNCTION_48_32();
  v25 = v10;
  v18 = outlined consume of SessionActionNotice.NoticeType(v12, v11, v14);
  if (v25 || (_BYTE)v14)
  {
    v19 = v8;
    v20 = v7;
    v21 = v10;
LABEL_26:
    outlined consume of SessionActionNotice.NoticeType(v19, v20, v21);
    v22 = OUTLINED_FUNCTION_50();
    outlined assign with take of SessionActionNotice(v22, v23, v24);
    goto LABEL_27;
  }
  OUTLINED_FUNCTION_69_15(v18, type metadata accessor for SessionActionNotice);
  if (!__OFADD__(v9, v13))
  {
    OUTLINED_FUNCTION_365();
    *v1 = v8;
    v1[1] = v7;
    v1[2] = 0;
    v1[3] = v9 + v13;
    goto LABEL_27;
  }
  __break(1u);
}

void SessionActionNotice.shouldReplace(notice:)()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  int v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  BOOL v28;
  BOOL v29;
  BOOL v30;
  BOOL v31;
  BOOL v32;
  BOOL v33;
  BOOL v34;
  BOOL v35;
  BOOL v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  BOOL v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;

  OUTLINED_FUNCTION_93();
  v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SessionActionNotice?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SessionActionNotice(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_11_2();
  outlined init with copy of RadarReporting(v3, (uint64_t)&v65);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Notice);
  if ((OUTLINED_FUNCTION_70_17() & 1) == 0)
  {
    v21 = OUTLINED_FUNCTION_83_0((uint64_t)v6, 1);
    OUTLINED_FUNCTION_32_18(v21, &demangling cache variable for type metadata for SessionActionNotice?);
    v8 = *v0;
    v9 = v0[2];
LABEL_99:
    if (v9 >> 62 == 3)
    {
      OUTLINED_FUNCTION_330_0();
      if (!v14 || v52 | v8 | v51)
      {
        if (v52 || ((OUTLINED_FUNCTION_330_0(), v14) ? (v54 = v8 == 1) : (v54 = 0), !v54 || v53))
        {
          if (!v52)
            OUTLINED_FUNCTION_330_0();
        }
      }
    }
    OUTLINED_FUNCTION_210();
    OUTLINED_FUNCTION_76_15();
    goto LABEL_117;
  }
  OUTLINED_FUNCTION_83_0((uint64_t)v6, 0);
  _s15ConversationKit11ParticipantVWObTm_1((uint64_t)v6, (uint64_t)v1, type metadata accessor for SessionActionNotice);
  v8 = *v0;
  v9 = v0[2];
  v10 = v9 >> 62;
  if (v9 >> 62 == 3)
  {
    OUTLINED_FUNCTION_364_0();
    if (v14 && !(v12 | v8 | v11))
      goto LABEL_27;
    if (!v12)
    {
      OUTLINED_FUNCTION_364_0();
      v14 = v14 && v8 == 1;
      if (v14 && !v13)
        goto LABEL_27;
    }
    if (!v12 && ((OUTLINED_FUNCTION_364_0(), v14) ? (v16 = v8 == 7) : (v16 = 0), v16 && !v15)
      || (v17 = 0, v18 = 1, !v12) && ((OUTLINED_FUNCTION_330_0(), v14) ? (v20 = v8 == 10) : (v20 = 0), v20 && !v19))
    {
LABEL_27:
      v18 = 0;
      v17 = 1;
    }
  }
  else
  {
    v17 = 0;
    v18 = 1;
  }
  v23 = *v1;
  v22 = v1[1];
  v25 = v1[2];
  v24 = v1[3];
  v26 = v25 >> 62;
  if (v25 >> 62 == 3)
  {
    if (v25 == 0xC000000000000000 && (v22 | v23 | v24) == 0)
      goto LABEL_97;
    v28 = v23 == 1 && v22 == 0;
    v29 = v28 && v25 == 0xC000000000000000;
    v30 = v29 && v24 == 0;
    if (v30
      || (v23 == 7 ? (v31 = v22 == 0) : (v31 = 0),
          v31 ? (v32 = v25 == 0xC000000000000000) : (v32 = 0),
          v32 ? (v33 = v24 == 0) : (v33 = 0),
          v33
       || (v23 == 10 ? (v34 = v22 == 0) : (v34 = 0),
           v34 ? (v35 = v25 == 0xC000000000000000) : (v35 = 0),
           v35 ? (v36 = v24 == 0) : (v36 = 0),
           v36)))
    {
LABEL_97:
      if ((v17 & 1) != 0)
        goto LABEL_66;
      goto LABEL_98;
    }
  }
  if (!v18)
  {
LABEL_98:
    outlined destroy of Participant((uint64_t)v1, type metadata accessor for SessionActionNotice);
    goto LABEL_99;
  }
LABEL_66:
  v64 = v8;
  v37 = v10;
  v38 = OUTLINED_FUNCTION_342_1();
  outlined copy of SessionActionNotice.NoticeType(v38, v39, v40);
  outlined destroy of Participant((uint64_t)v1, type metadata accessor for SessionActionNotice);
  v41 = v0[1];
  if (!(_DWORD)v26)
  {
    if (!v37)
    {
      outlined copy of CallScreening.EndingAction(v64, v41, v9);
LABEL_116:
      v58 = OUTLINED_FUNCTION_342_1();
      outlined consume of SessionActionNotice.NoticeType(v58, v59, v60);
      v61 = OUTLINED_FUNCTION_381();
      outlined consume of SessionActionNotice.NoticeType(v61, v62, v63);
      goto LABEL_117;
    }
LABEL_115:
    v55 = OUTLINED_FUNCTION_381();
    outlined copy of SessionActionNotice.NoticeType(v55, v56, v57);
    goto LABEL_116;
  }
  if ((_DWORD)v26 != 3
    || v37 < 3
    || v23 != 5
    || v22 != 0
    || v25 != 0xC000000000000000
    || v24 != 0
    || v0[3] != 0
    || v9 != 0xC000000000000000
    || v64 != 4
    || v41 != 0)
  {
    goto LABEL_115;
  }
  outlined consume of SessionActionNotice.NoticeType(5, 0, 0xC000000000000000);
  OUTLINED_FUNCTION_233();
LABEL_117:
  OUTLINED_FUNCTION_52_1();
}

void SessionActionNotice.shouldPerformActionHandlerOnNoticeTap.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v2 = *v0;
  v1 = v0[1];
  v4 = v0[2];
  v3 = v0[3];
  if (v4 >> 62 != 3
    || ((OUTLINED_FUNCTION_364_0(), v7) ? (v7 = v6 == 0) : (v7 = 0),
        v7
     || (v2 == 1 ? (v8 = v1 == 0) : (v8 = 0),
         v8 ? (v9 = v4 == v5) : (v9 = 0),
         v9 ? (v10 = v3 == 0) : (v10 = 0),
         v10
      || v2 == 2 && !v1 && v4 == v5 && !v3
      || v2 == 3 && !v1 && v4 == v5 && !v3
      || v2 == 4 && !v1 && v4 == v5 && !v3
      || v2 == 5 && !v1 && v4 == v5 && !v3
      || v2 == 6 && !v1 && v4 == v5 && !v3
      || v2 == 7 && !v1 && v4 == v5 && !v3
      || v2 == 8 && !v1 && v4 == v5 && !v3
      || v2 == 9 && !v1 && v4 == v5 && !v3)))
  {
    outlined copy of SessionActionNotice.NoticeType(v2, v1, v4);
    outlined copy of SessionActionNotice.NoticeType(v2, v1, v4);
    OUTLINED_FUNCTION_242_0();
    OUTLINED_FUNCTION_9_79(10);
    OUTLINED_FUNCTION_242_0();
  }
  else
  {
    outlined consume of SessionActionNotice.NoticeType(10, 0, 0xC000000000000000);
    outlined consume of SessionActionNotice.NoticeType(10, 0, 0xC000000000000000);
    outlined consume of SessionActionNotice.NoticeType(10, 0, 0xC000000000000000);
  }
  OUTLINED_FUNCTION_91();
}

void SessionActionNotice.isSharePlayActivitySupported.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  void *v4;
  void *v5;
  id v6;

  v1 = type metadata accessor for SessionActionNotice(0);
  OUTLINED_FUNCTION_268_1((_QWORD *)(v0 + *(int *)(v1 + 28)));
  v2 = OUTLINED_FUNCTION_65_2();
  v4 = (void *)v3(v2);
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(v4, sel_activity);

    objc_msgSend(v6, sel_isSupported);
  }
  OUTLINED_FUNCTION_18();
}

void SessionActionNotice.actionDescription.getter()
{
  __asm { BR              X10 }
}

#error "1BD2F9880: call analysis failed (funcsize=333)"

uint64_t SessionActionNotice.fullSentence(for:count:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  void *v31;
  int *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  Class isa;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  Swift::String v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  Swift::String v75;
  Swift::String v76;
  char *v77;
  uint64_t v78;
  Swift::String v79;
  unint64_t v80;
  char v81;
  uint64_t v82;
  Swift::String v83;
  char *v84;
  char *v85;
  uint64_t v86;
  Swift::String v87;
  Swift::String v88;
  void (*v89)(uint64_t, uint64_t);
  Swift::String v91;
  char *v92;
  uint64_t v93;
  Swift::String v94;
  uint64_t *v95;
  Swift::String v96;
  char *v97;
  uint64_t v98;
  Swift::String v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;
  Swift::String v103;
  Swift::String v104;
  uint64_t v105;
  void (*v106)(uint64_t, uint64_t);
  Swift::String v107;
  Swift::String v108;
  void (*v109)(uint64_t, uint64_t);
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  void (*v123)(char *, uint64_t, uint64_t);
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  Swift::String v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  id v140;
  uint64_t v141;
  uint64_t v142;

  v120 = a2;
  v134 = a3;
  v5 = type metadata accessor for String.LocalizationValue();
  MEMORY[0x1E0C80A78](v5);
  v133 = (char *)&v110 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for AttributedString.InterpolationOptions();
  v128 = *(_QWORD *)(v7 - 8);
  v129 = v7;
  MEMORY[0x1E0C80A78](v7);
  v127 = (char *)&v110 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue.StringInterpolation();
  MEMORY[0x1E0C80A78](v9);
  v131 = (char *)&v110 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = type metadata accessor for PersonNameComponents();
  v117 = *(_QWORD *)(v118 - 8);
  MEMORY[0x1E0C80A78](v118);
  v116 = (uint64_t)&v110 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v12);
  v125 = (uint64_t)&v110 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = type metadata accessor for Participant(0);
  v14 = MEMORY[0x1E0C80A78](v130);
  v119 = (uint64_t)&v110 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v124 = (uint64_t)&v110 - v16;
  v17 = type metadata accessor for AttributeContainer();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v110 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for AttributedString();
  v135 = *(_QWORD *)(v21 - 8);
  v136 = v21;
  v22 = MEMORY[0x1E0C80A78](v21);
  v126 = (char *)&v110 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x1E0C80A78](v22);
  v121 = (uint64_t)&v110 - v25;
  v26 = MEMORY[0x1E0C80A78](v24);
  v28 = (char *)&v110 - v27;
  MEMORY[0x1E0C80A78](v26);
  v30 = (char *)&v110 - v29;
  v31 = *(void **)(a1 + 8);
  v132._countAndFlagsBits = *(_QWORD *)a1;
  v132._object = v31;
  LODWORD(v137) = *(unsigned __int8 *)(a1 + 16);
  v32 = (int *)type metadata accessor for SessionActionNotice(0);
  v33 = v3;
  v34 = (_QWORD *)(v3 + v32[6]);
  v35 = v34[3];
  v36 = v34[4];
  __swift_project_boxed_opaque_existential_1(v34, v35);
  (*(void (**)(uint64_t, uint64_t))(v36 + 224))(v35, v36);
  if (one-time initialization token for subjectContainer != -1)
    swift_once();
  v37 = __swift_project_value_buffer(v17, (uint64_t)static AttributedStrings.Notices.subjectContainer);
  v38 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
  v122 = v37;
  v39 = v17;
  v123 = v38;
  ((void (*)(char *))v38)(v20);
  AttributedString.init(_:attributes:)();
  v40 = v32[8];
  v41 = v3;
  v42 = (uint64_t)v32;
  if ((*(_BYTE *)(v33 + v40) & 1) != 0)
    goto LABEL_6;
  v115 = v28;
  v43 = v33 + v32[5];
  v44 = v125;
  outlined init with copy of FeatureEligibility?(v43, v125, &demangling cache variable for type metadata for Participant?);
  v45 = v130;
  if (__swift_getEnumTagSinglePayload(v44, 1, v130) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v44, &demangling cache variable for type metadata for Participant?);
    v28 = v115;
LABEL_6:
    v47 = v135;
    v46 = v136;
    (*(void (**)(char *, char *, uint64_t))(v135 + 16))(v28, v30, v136);
    v48 = (uint64_t)v28;
    goto LABEL_17;
  }
  v49 = v124;
  _s15ConversationKit11ParticipantVWObTm_1(v44, v124, type metadata accessor for Participant);
  v50 = *(void **)(v49 + *(int *)(v45 + 28));
  v125 = v17;
  v113 = v42;
  v114 = v41;
  v112 = v20;
  if (v50)
  {
    v51 = v50;
    outlined bridged method (pb) of @objc TUHandle.siriDisplayName.getter(v51);
    if (v53)
    {
      v111 = v52;
      if ((objc_msgSend(v51, sel_shouldHideContact) & 1) != 0)
      {
        swift_bridgeObjectRetain();
        v54 = v116;
        PersonNameComponents.init()();
        PersonNameComponents.givenName.setter();
        PersonNameComponents.familyName.setter();
        if (one-time initialization token for initials != -1)
          swift_once();
        swift_beginAccess();
        v55 = (id)static NSPersonNameComponentsFormatter.initials;
        isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
        v57 = objc_msgSend(v55, sel_stringFromPersonNameComponents_, isa);

        v58 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        v60 = v59;

        (*(void (**)(uint64_t, uint64_t))(v117 + 8))(v54, v118);
        v138 = v58;
        v139 = v60;
        lazy protocol witness table accessor for type String and conformance String();
        StringProtocol.localizedUppercase.getter();

        swift_bridgeObjectRelease();
        v61 = 0;
        goto LABEL_16;
      }

      swift_bridgeObjectRelease();
    }
    else
    {

    }
  }
  v62 = v119;
  _s15ConversationKit11ParticipantVWOcTm_3(v49, v119, type metadata accessor for Participant);
  swift_retain();
  ParticipantContactDetailsCache.contactDetails(for:)(v62, v63, v64, v65, v66, v67, v68, v69, v110, v111, (uint64_t)v112, v113, v114, (uint64_t)v115, v116, v117, v118, v119, v120,
    v121);
  v61 = v140;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  outlined destroy of Participant(v62, type metadata accessor for Participant);
  v39 = v125;
LABEL_16:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  Participant.name(_:)();
  swift_bridgeObjectRelease();
  v123(v112, v122, v39);
  v48 = (uint64_t)v115;
  AttributedString.init(_:attributes:)();
  outlined destroy of Participant(v49, type metadata accessor for Participant);
  v47 = v135;
  v46 = v136;
  v41 = v114;
  v42 = v113;
LABEL_17:
  if ((_DWORD)v137)
  {
    if ((_DWORD)v137 == 1)
    {
      v70 = ((unint64_t)v132._object >> 56) & 0xF;
      if (((uint64_t)v132._object & 0x2000000000000000) == 0)
        v70 = v132._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
      if (v70)
      {
        v137 = v30;
        if (*(_BYTE *)(v41 + v40) == 1)
        {
          String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
          v71._countAndFlagsBits = 0x80E2206465646441;
          v71._object = (void *)0xA90000000000009CLL;
          String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v71);
          v72 = (_QWORD *)(v41 + *(int *)(v42 + 28));
          v73 = v72[3];
          v74 = v72[4];
          __swift_project_boxed_opaque_existential_1(v72, v73);
          v75._countAndFlagsBits = (*(uint64_t (**)(uint64_t, uint64_t))(v74 + 80))(v73, v74);
          String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v75);
          swift_bridgeObjectRelease();
          v76._countAndFlagsBits = 0x20726F66209D80E2;
          v76._object = (void *)0xA800000000000000;
          String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v76);
          v138 = MEMORY[0x1E0DEE9D8];
          _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type AttributedString.InterpolationOptions and conformance AttributedString.InterpolationOptions, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAEFF0], MEMORY[0x1E0CAF000]);
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [AttributedString.InterpolationOptions]);
          _sSay8Dispatch0A13WorkItemFlagsVGSayxGSTsWlTm_0(&lazy protocol witness table cache variable for type [AttributedString.InterpolationOptions] and conformance [A], &demangling cache variable for type metadata for [AttributedString.InterpolationOptions]);
          v77 = v127;
          v78 = v129;
          dispatch thunk of SetAlgebra.init<A>(_:)();
          v30 = v137;
          String.LocalizationValue.StringInterpolation.appendInterpolation(_:options:)();
          (*(void (**)(char *, uint64_t))(v128 + 8))(v77, v78);
          v79._countAndFlagsBits = 0;
          v79._object = (void *)0xE000000000000000;
          String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v79);
        }
        else
        {
          String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
          v96._countAndFlagsBits = 0;
          v96._object = (void *)0xE000000000000000;
          String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v96);
          v138 = MEMORY[0x1E0DEE9D8];
          _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type AttributedString.InterpolationOptions and conformance AttributedString.InterpolationOptions, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAEFF0], MEMORY[0x1E0CAF000]);
          v114 = v41;
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [AttributedString.InterpolationOptions]);
          _sSay8Dispatch0A13WorkItemFlagsVGSayxGSTsWlTm_0(&lazy protocol witness table cache variable for type [AttributedString.InterpolationOptions] and conformance [A], &demangling cache variable for type metadata for [AttributedString.InterpolationOptions]);
          v97 = v127;
          v98 = v129;
          dispatch thunk of SetAlgebra.init<A>(_:)();
          String.LocalizationValue.StringInterpolation.appendInterpolation(_:options:)();
          (*(void (**)(char *, uint64_t))(v128 + 8))(v97, v98);
          v99._countAndFlagsBits = 0xE220646564646120;
          v99._object = (void *)0xAA00000000009C80;
          String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v99);
          v100 = (_QWORD *)(v114 + *(int *)(v42 + 28));
          v101 = v100[3];
          v102 = v100[4];
          __swift_project_boxed_opaque_existential_1(v100, v101);
          v103._countAndFlagsBits = (*(uint64_t (**)(uint64_t, uint64_t))(v102 + 80))(v101, v102);
          String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v103);
          swift_bridgeObjectRelease();
          v104._countAndFlagsBits = 10322146;
          v104._object = (void *)0xA300000000000000;
          String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v104);
          v30 = v137;
        }
        String.LocalizationValue.init(stringInterpolation:)();
        v95 = &v141;
LABEL_36:
        v105 = *(v95 - 32);
        AttributedString.init(cnkLocalized:)();
        v106 = *(void (**)(uint64_t, uint64_t))(v47 + 8);
        v106(v48, v46);
        v106((uint64_t)v30, v46);
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v47 + 32))(v134, v105, v46);
      }
    }
LABEL_30:
    if (*(_BYTE *)(v41 + v40) == 1)
    {
      String.LocalizationValue.init(stringLiteral:)();
    }
    else
    {
      String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v91._countAndFlagsBits = 0;
      v91._object = (void *)0xE000000000000000;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v91);
      v138 = MEMORY[0x1E0DEE9D8];
      _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type AttributedString.InterpolationOptions and conformance AttributedString.InterpolationOptions, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAEFF0], MEMORY[0x1E0CAF000]);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [AttributedString.InterpolationOptions]);
      _sSay8Dispatch0A13WorkItemFlagsVGSayxGSTsWlTm_0(&lazy protocol witness table cache variable for type [AttributedString.InterpolationOptions] and conformance [A], &demangling cache variable for type metadata for [AttributedString.InterpolationOptions]);
      v92 = v127;
      v93 = v129;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      String.LocalizationValue.StringInterpolation.appendInterpolation(_:options:)();
      (*(void (**)(char *, uint64_t))(v128 + 8))(v92, v93);
      v94._countAndFlagsBits = 0x646564646120;
      v94._object = (void *)0xE600000000000000;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v94);
      String.LocalizationValue.init(stringInterpolation:)();
    }
    v95 = &v142;
    goto LABEL_36;
  }
  v80 = ((unint64_t)v132._object >> 56) & 0xF;
  if (((uint64_t)v132._object & 0x2000000000000000) == 0)
    v80 = v132._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  if (!v80)
    goto LABEL_30;
  v81 = *(_BYTE *)(v41 + v40);
  v82 = v120;
  if ((v81 & 1) != 0 || v120 >= 2)
  {
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v107._countAndFlagsBits = 0x206465646441;
    v107._object = (void *)0xE600000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v107);
    v138 = v82;
    String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
    v108._countAndFlagsBits = 0x73676E6F7320;
    v108._object = (void *)0xE600000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v108);
    String.LocalizationValue.init(stringInterpolation:)();
    AttributedString.init(conversationControlsLocalized:comment:)();
    v109 = *(void (**)(uint64_t, uint64_t))(v47 + 8);
    v109(v48, v46);
    return ((uint64_t (*)(char *, uint64_t))v109)(v30, v46);
  }
  else
  {
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v83._countAndFlagsBits = 0;
    v83._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v83);
    v138 = MEMORY[0x1E0DEE9D8];
    _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type AttributedString.InterpolationOptions and conformance AttributedString.InterpolationOptions, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAEFF0], MEMORY[0x1E0CAF000]);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [AttributedString.InterpolationOptions]);
    v84 = v30;
    _sSay8Dispatch0A13WorkItemFlagsVGSayxGSTsWlTm_0(&lazy protocol witness table cache variable for type [AttributedString.InterpolationOptions] and conformance [A], &demangling cache variable for type metadata for [AttributedString.InterpolationOptions]);
    v85 = v127;
    v86 = v129;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    String.LocalizationValue.StringInterpolation.appendInterpolation(_:options:)();
    (*(void (**)(char *, uint64_t))(v128 + 8))(v85, v86);
    v87._countAndFlagsBits = 0xE220646564646120;
    v87._object = (void *)0xAA00000000009C80;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v87);
    String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v132);
    v88._countAndFlagsBits = 10322146;
    v88._object = (void *)0xA300000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v88);
    String.LocalizationValue.init(stringInterpolation:)();
    AttributedString.init(cnkLocalized:)();
    v89 = *(void (**)(uint64_t, uint64_t))(v47 + 8);
    v89(v48, v46);
    return ((uint64_t (*)(char *, uint64_t))v89)(v84, v46);
  }
}

void SessionActionNotice.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v1 = OUTLINED_FUNCTION_409_0();
  v2 = *(_BYTE *)(v0 + *(int *)(v1 + 32)) == 0;
  if (*(_BYTE *)(v0 + *(int *)(v1 + 32)))
    v3 = 0x296C61636F4C28;
  else
    v3 = 0;
  if (v2)
    v4 = 0xE000000000000000;
  else
    v4 = 0xE700000000000000;
  v5 = v4;
  String.append(_:)(*(Swift::String *)&v3);
  OUTLINED_FUNCTION_53();
  __asm { BR              X10 }
}

uint64_t sub_1BD2FA6F4()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  char v9;
  uint64_t v10;
  uint64_t v12;
  Swift::String v13;
  Swift::String v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  OUTLINED_FUNCTION_147();
  _StringGuts.grow(_:)(34);
  OUTLINED_FUNCTION_240();
  OUTLINED_FUNCTION_395();
  if (v9)
  {
    OUTLINED_FUNCTION_125_5(v0, v1, v2, v3, v4, v5, v6, v7, v16, v17);
    v10 = OUTLINED_FUNCTION_203();
  }
  else
  {
    if (v8 != 1)
    {
      v12 = OUTLINED_FUNCTION_281_1();
      goto LABEL_7;
    }
    v10 = OUTLINED_FUNCTION_126_2();
  }
  String.append(_:)(*(Swift::String *)&v10);
  v12 = v16;
LABEL_7:
  OUTLINED_FUNCTION_318_0(v12);
  OUTLINED_FUNCTION_13_3();
  v13._countAndFlagsBits = 0x3A746E756F63202CLL;
  v13._object = (void *)0xE800000000000000;
  String.append(_:)(v13);
  v14._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v14);
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_302();
  OUTLINED_FUNCTION_318_0(v18);
  OUTLINED_FUNCTION_13_3();
  return v19;
}

void SessionActionNotice.noticeAccessory.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(_QWORD);
  uint64_t v26;
  objc_class *v27;
  NSBundle v28;
  uint64_t v29;

  OUTLINED_FUNCTION_93();
  v3 = (unint64_t)v0;
  v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Collaboration?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  v7 = OUTLINED_FUNCTION_58_5();
  v8 = type metadata accessor for Collaboration(v7);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_16_2();
  v11 = *v0;
  v10 = v0[1];
  v12 = *(_QWORD *)(v3 + 24);
  if (*(_QWORD *)(v3 + 16) >> 62 != 3)
    goto LABEL_50;
  OUTLINED_FUNCTION_42_37();
  if (v13)
  {
    if (!(v10 | v11 | v12))
      goto LABEL_50;
  }
  if (v11 == 1 && !v10)
  {
    OUTLINED_FUNCTION_42_37();
    if (v13)
    {
      if (!v12)
        goto LABEL_50;
    }
  }
  if (v11 == 2 && !v10)
  {
    OUTLINED_FUNCTION_42_37();
    if (v13)
    {
      if (!v12)
        goto LABEL_50;
    }
  }
  if ((v11 != 3 || v10 || (OUTLINED_FUNCTION_42_37(), !v13) || v12)
    && (v11 != 4 || v10 || (OUTLINED_FUNCTION_42_37(), !v13) || v12)
    && (v11 != 5 || v10 || (OUTLINED_FUNCTION_42_37(), !v13) || v12)
    && (v11 != 6 || v10 || (OUTLINED_FUNCTION_42_37(), !v13) || v12)
    && (v11 != 7 || v10 || (OUTLINED_FUNCTION_42_37(), !v13) || v12)
    && (v11 != 8 || v10 || (OUTLINED_FUNCTION_42_37(), !v13) || v12)
    && (v11 != 9 || v10 || (OUTLINED_FUNCTION_42_37(), !v13) || v12))
  {
    OUTLINED_FUNCTION_106_7();
    v20 = OUTLINED_FUNCTION_372_0((_QWORD *)(v3 + v21));
    (*(void (**)(uint64_t, uint64_t))(v12 + 112))(v11, v12);
    v22 = OUTLINED_FUNCTION_69_0(v2, 1, v8);
    if (v13)
    {
      OUTLINED_FUNCTION_219(v22, &demangling cache variable for type metadata for Collaboration?);
    }
    else
    {
      v23 = OUTLINED_FUNCTION_49_16();
      _s15ConversationKit11ParticipantVWObTm_1(v23, v24, v25);
      if (*(_BYTE *)(v1 + 16) != 2 && (*(_BYTE *)(v1 + *(int *)(v8 + 48)) & 1) == 0)
      {
        v27 = (objc_class *)objc_msgSend((id)objc_opt_self(), sel_conversationKit);
        OUTLINED_FUNCTION_18_3();
        v28.super.isa = v27;
        OUTLINED_FUNCTION_49_2(1852141647, 0xE400000000000000, 0x61737265766E6F43, 0xEF74694B6E6F6974, v28);
        OUTLINED_FUNCTION_45_21();

        OUTLINED_FUNCTION_419_0(v29, type metadata accessor for Collaboration);
        goto LABEL_52;
      }
      OUTLINED_FUNCTION_419_0(v26, type metadata accessor for Collaboration);
    }
  }
  else
  {
LABEL_50:
    v14 = OUTLINED_FUNCTION_385();
    outlined copy of SessionActionNotice.NoticeType(v14, v15, v16);
    v17 = OUTLINED_FUNCTION_385();
    outlined consume of SessionActionNotice.NoticeType(v17, v18, v19);
    OUTLINED_FUNCTION_9_79(10);
  }
  v20 = 0;
  v3 = *(_QWORD *)(v3 + *(int *)(OUTLINED_FUNCTION_409_0() + 56)) != 0;
LABEL_52:
  *v5 = v20;
  v5[1] = v3;
  OUTLINED_FUNCTION_52_1();
}

void SessionActionNotice.equalTo(notice:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(_QWORD);
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SessionActionNotice?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  v6 = OUTLINED_FUNCTION_76_2();
  type metadata accessor for SessionActionNotice(v6);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_4_1();
  outlined init with copy of RadarReporting(a1, (uint64_t)&v20);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Notice);
  if (OUTLINED_FUNCTION_97())
  {
    OUTLINED_FUNCTION_83_0(v1, 0);
    v8 = OUTLINED_FUNCTION_65_2();
    OUTLINED_FUNCTION_344_1(v8, v9);
    static SessionActionNotice.NoticeType.== infix(_:_:)((uint64_t)&v20, (uint64_t)&v19, v10, v11, v12, v13, v14, v15, *v3, v3[1], v3[2], v3[3], *v2, v2[1], v2[2], v2[3], v21, v22);
    v16 = OUTLINED_FUNCTION_38_21();
    outlined destroy of Participant(v16, v17);
  }
  else
  {
    v18 = OUTLINED_FUNCTION_83_0(v1, 1);
    OUTLINED_FUNCTION_96_3(v18, &demangling cache variable for type metadata for SessionActionNotice?);
  }
  OUTLINED_FUNCTION_91();
}

uint64_t (*protocol witness for Notice.uuid.modify in conformance SessionActionNotice())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*protocol witness for Notice.actionHandler.modify in conformance SessionActionNotice())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*protocol witness for Notice.dismissHandler.modify in conformance SessionActionNotice())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*AppLaunchNotice.uuid.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t AppLaunchNotice.date.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_138_3();
  OUTLINED_FUNCTION_33();
  v0 = OUTLINED_FUNCTION_50();
  return OUTLINED_FUNCTION_31_0(v0, v1, v2, v3);
}

uint64_t AppLaunchNotice.date.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  type metadata accessor for AppLaunchNotice(0);
  OUTLINED_FUNCTION_33();
  v0 = OUTLINED_FUNCTION_69_1();
  return OUTLINED_FUNCTION_31_0(v0, v1, v2, v3);
}

uint64_t (*AppLaunchNotice.date.modify())(_QWORD)
{
  type metadata accessor for AppLaunchNotice(0);
  OUTLINED_FUNCTION_141_1();
  return TPNumberPadCharacter.rawValue.getter;
}

void AppLaunchNotice.priority.getter()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_138_3();
  OUTLINED_FUNCTION_116_4(*(int *)(v0 + 24));
  OUTLINED_FUNCTION_0();
}

void AppLaunchNotice.priority.setter()
{
  char v0;
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_237_1() + 24)) = v0;
  OUTLINED_FUNCTION_0();
}

uint64_t (*AppLaunchNotice.priority.modify())(_QWORD)
{
  type metadata accessor for AppLaunchNotice(0);
  OUTLINED_FUNCTION_201_0();
  return TPNumberPadCharacter.rawValue.getter;
}

id AppLaunchNotice.app.getter()
{
  uint64_t v0;

  return *(id *)(v0 + *(int *)(type metadata accessor for AppLaunchNotice(0) + 28));
}

void AppLaunchNotice.app.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(OUTLINED_FUNCTION_187_0() + 28);

  *(_QWORD *)(v1 + v3) = a1;
  OUTLINED_FUNCTION_18();
}

uint64_t (*AppLaunchNotice.app.modify())(_QWORD)
{
  type metadata accessor for AppLaunchNotice(0);
  OUTLINED_FUNCTION_216_0();
  return TPNumberPadCharacter.rawValue.getter;
}

id AppLaunchNotice.conversation.getter()
{
  uint64_t v0;

  return *(id *)(v0 + *(int *)(type metadata accessor for AppLaunchNotice(0) + 32));
}

void AppLaunchNotice.conversation.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(OUTLINED_FUNCTION_187_0() + 32);

  *(_QWORD *)(v1 + v3) = a1;
  OUTLINED_FUNCTION_18();
}

uint64_t (*AppLaunchNotice.conversation.modify())(_QWORD)
{
  type metadata accessor for AppLaunchNotice(0);
  OUTLINED_FUNCTION_219_0();
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t AppLaunchNotice.supportsCollaboration.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for AppLaunchNotice(0) + 36));
}

void AppLaunchNotice.supportsCollaboration.setter()
{
  char v0;
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_356() + 36)) = v0;
  OUTLINED_FUNCTION_0();
}

uint64_t (*AppLaunchNotice.supportsCollaboration.modify())(_QWORD)
{
  type metadata accessor for AppLaunchNotice(0);
  OUTLINED_FUNCTION_208_0();
  return TPNumberPadCharacter.rawValue.getter;
}

double AppLaunchNotice.dismissalDuration.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for AppLaunchNotice(0) + 40));
}

void AppLaunchNotice.dismissalDuration.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + *(int *)(type metadata accessor for AppLaunchNotice(0) + 40)) = a1;
  OUTLINED_FUNCTION_360();
}

uint64_t (*AppLaunchNotice.dismissalDuration.modify())(_QWORD)
{
  type metadata accessor for AppLaunchNotice(0);
  OUTLINED_FUNCTION_207_2();
  return TPNumberPadCharacter.rawValue.getter;
}

void AppLaunchNotice.description.getter()
{
  uint64_t v0;
  _QWORD *v1;
  Swift::String v2;
  Swift::String v3;
  Swift::String v4;

  OUTLINED_FUNCTION_332_0();
  v1 = *(_QWORD **)(v0 + *(int *)(type metadata accessor for AppLaunchNotice(0) + 28));
  v2._countAndFlagsBits = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x68))();
  String.append(_:)(v2);
  OUTLINED_FUNCTION_2_1();
  v3._countAndFlagsBits = 2108704;
  v3._object = (void *)0xE300000000000000;
  String.append(_:)(v3);
  v4._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  OUTLINED_FUNCTION_180(v4);
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_302();
  OUTLINED_FUNCTION_9_0();
}

void AppLaunchNotice.style.getter()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_138_3();
  OUTLINED_FUNCTION_116_4(*(int *)(v0 + 44));
  OUTLINED_FUNCTION_0();
}

void AppLaunchNotice.style.setter()
{
  char v0;
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_237_1() + 44)) = v0;
  OUTLINED_FUNCTION_0();
}

uint64_t (*AppLaunchNotice.style.modify())(_QWORD)
{
  type metadata accessor for AppLaunchNotice(0);
  OUTLINED_FUNCTION_206_0();
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t AppLaunchNotice.shouldTransitionToHUD.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for AppLaunchNotice(0) + 48));
}

void AppLaunchNotice.shouldTransitionToHUD.setter()
{
  char v0;
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_356() + 48)) = v0;
  OUTLINED_FUNCTION_0();
}

uint64_t (*AppLaunchNotice.shouldTransitionToHUD.modify())(_QWORD)
{
  type metadata accessor for AppLaunchNotice(0);
  OUTLINED_FUNCTION_205_1();
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t key path getter for AppLaunchNotice.actionHandler : AppLaunchNotice@<X0>(uint64_t a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for AppLaunchNotice(0) + 52));
  v4 = *v3;
  v5 = v3[1];
  if (*v3)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for AppLaunchNotice.actionHandler : AppLaunchNotice(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(a2 + *(int *)(type metadata accessor for AppLaunchNotice(0) + 52));
  v8 = *v7;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  result = outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  return result;
}

void AppLaunchNotice.actionHandler.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for AppLaunchNotice(0);
  OUTLINED_FUNCTION_5_100(*(int *)(v0 + 52));
  OUTLINED_FUNCTION_0();
}

void AppLaunchNotice.actionHandler.setter()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_309_1();
  OUTLINED_FUNCTION_16_66(*(int *)(v0 + 52));
  OUTLINED_FUNCTION_18();
}

uint64_t (*AppLaunchNotice.actionHandler.modify())(_QWORD)
{
  type metadata accessor for AppLaunchNotice(0);
  OUTLINED_FUNCTION_204_1();
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t key path getter for AppLaunchNotice.dismissHandler : AppLaunchNotice@<X0>(uint64_t a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for AppLaunchNotice(0) + 56));
  v4 = *v3;
  v5 = v3[1];
  if (*v3)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for AppLaunchNotice.dismissHandler : AppLaunchNotice(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(a2 + *(int *)(type metadata accessor for AppLaunchNotice(0) + 56));
  v8 = *v7;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  result = outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  return result;
}

void AppLaunchNotice.dismissHandler.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for AppLaunchNotice(0);
  OUTLINED_FUNCTION_5_100(*(int *)(v0 + 56));
  OUTLINED_FUNCTION_0();
}

void AppLaunchNotice.dismissHandler.setter()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_309_1();
  OUTLINED_FUNCTION_16_66(*(int *)(v0 + 56));
  OUTLINED_FUNCTION_18();
}

uint64_t (*AppLaunchNotice.dismissHandler.modify())(_QWORD)
{
  type metadata accessor for AppLaunchNotice(0);
  OUTLINED_FUNCTION_291_2();
  return TPNumberPadCharacter.rawValue.getter;
}

void AppLaunchNotice.shouldReplace(notice:)()
{
  uint64_t v0;
  int v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_96();
  v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AppLaunchNotice?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  v5 = OUTLINED_FUNCTION_101_0();
  type metadata accessor for AppLaunchNotice(v5);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_150_2();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Notice);
  if ((OUTLINED_FUNCTION_97() & 1) != 0)
  {
    OUTLINED_FUNCTION_19_3(v0, 0);
    OUTLINED_FUNCTION_329_0();
    OUTLINED_FUNCTION_232_0();
    if ((_DWORD)v0 == v1)
      goto LABEL_6;
  }
  else
  {
    v7 = OUTLINED_FUNCTION_19_3(v0, 1);
    OUTLINED_FUNCTION_30_7(v7, &demangling cache variable for type metadata for AppLaunchNotice?);
  }
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  OUTLINED_FUNCTION_76_15();
LABEL_6:
  OUTLINED_FUNCTION_65_1();
}

uint64_t one-time initialization function for bundleIDToItemType()
{
  uint64_t result;

  result = Dictionary.init(dictionaryLiteral:)();
  static AppLaunchNotice.bundleIDToItemType = result;
  return result;
}

uint64_t static AppLaunchNotice.bundleIDToItemType.getter()
{
  if (one-time initialization token for bundleIDToItemType != -1)
    swift_once();
  OUTLINED_FUNCTION_1();
  return swift_bridgeObjectRetain();
}

uint64_t static AppLaunchNotice.bundleIDToItemType.setter(uint64_t a1)
{
  if (one-time initialization token for bundleIDToItemType != -1)
    swift_once();
  OUTLINED_FUNCTION_2_0();
  static AppLaunchNotice.bundleIDToItemType = a1;
  return swift_bridgeObjectRelease();
}

void static AppLaunchNotice.bundleIDToItemType.modify()
{
  if (one-time initialization token for bundleIDToItemType != -1)
    swift_once();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void AppLaunchNotice.appItemTypeString.getter()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  type metadata accessor for AppLaunchNotice(0);
  if (one-time initialization token for bundleIDToItemType != -1)
    swift_once();
  OUTLINED_FUNCTION_2_0();
  if (!*(_QWORD *)(static AppLaunchNotice.bundleIDToItemType + 16))
    goto LABEL_7;
  OUTLINED_FUNCTION_124();
  v0 = OUTLINED_FUNCTION_124_0();
  specialized __RawDictionaryStorage.find<A>(_:)(v0, v1);
  if ((v2 & 1) == 0)
  {
    OUTLINED_FUNCTION_13_3();
LABEL_7:
    swift_endAccess();
    goto LABEL_8;
  }
  swift_endAccess();
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_13_3();
LABEL_8:
  OUTLINED_FUNCTION_9_0();
}

uint64_t AppLaunchNotice.noticeContent.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  objc_class *v9;
  uint64_t v10;
  uint64_t v11;
  NSBundle v12;
  objc_class *v13;
  NSBundle v14;
  objc_class *v15;
  NSBundle v16;
  uint64_t v17;
  uint64_t v18;
  Swift::String v20;

  v1 = v0;
  v2 = OUTLINED_FUNCTION_187_0();
  v3 = *(_QWORD **)(v0 + *(int *)(v2 + 28));
  v4 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v20._countAndFlagsBits = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v3) + 0x68))();
  OUTLINED_FUNCTION_180(v20);
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_389(10322146);
  v5 = *((unsigned __int8 *)v3 + OBJC_IVAR____TtC15ConversationKit13ForegroundApp_type);
  v6 = (*(uint64_t (**)(void))((*v4 & *v3) + 0x70))();
  v7 = *(unsigned __int8 *)(v1 + *(int *)(v2 + 36));
  v8 = static Platform.current.getter();
  if (!v5)
  {
    if (v8 == 2)
    {
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      v9 = (objc_class *)OUTLINED_FUNCTION_353_0((id *)&static LocalizationSource.conversationKit);
      OUTLINED_FUNCTION_35_0();
      OUTLINED_FUNCTION_16_15();
      OUTLINED_FUNCTION_61();
      v10 = 0xD000000000000025;
      goto LABEL_11;
    }
    OUTLINED_FUNCTION_13_3();
    if ((v6 & 1) != 0)
    {
      if (one-time initialization token for conversationKit != -1)
        swift_once();
    }
    else if (one-time initialization token for conversationKit != -1)
    {
      swift_once();
    }
LABEL_30:
    v15 = (objc_class *)OUTLINED_FUNCTION_8_62((id *)&static LocalizationSource.conversationKit);
    OUTLINED_FUNCTION_5_0();
    OUTLINED_FUNCTION_352_0();
    OUTLINED_FUNCTION_61();
    v16.super.isa = v15;
    OUTLINED_FUNCTION_49_2(v17, v18, 0xA300000000000000, v6, v16);
    OUTLINED_FUNCTION_27();

    OUTLINED_FUNCTION_269_1();
    String.splitForTitleAndSubtitle()();
    OUTLINED_FUNCTION_53();
    return OUTLINED_FUNCTION_124_0();
  }
  if (v5 == 1)
  {
    if (v8 == 2)
    {
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      v9 = (objc_class *)OUTLINED_FUNCTION_353_0((id *)&static LocalizationSource.conversationKit);
      OUTLINED_FUNCTION_35_0();
      OUTLINED_FUNCTION_16_15();
      OUTLINED_FUNCTION_61();
LABEL_11:
      v12.super.isa = v9;
      OUTLINED_FUNCTION_49_2(v10, v11, v6, v7, v12);
      OUTLINED_FUNCTION_257_1();
      OUTLINED_FUNCTION_133();

      return OUTLINED_FUNCTION_124_0();
    }
    OUTLINED_FUNCTION_13_3();
    if ((v6 & 1) != 0)
    {
      if (one-time initialization token for conversationKit != -1)
        swift_once();
    }
    else if (one-time initialization token for conversationKit != -1)
    {
      swift_once();
    }
    goto LABEL_30;
  }
  if ((_DWORD)v7)
  {
    if (v8 == 2)
    {
      AppLaunchNotice.collaborationTitle(withLineBreak:)(0);
      OUTLINED_FUNCTION_257_1();
    }
    else
    {
      OUTLINED_FUNCTION_13_3();
      AppLaunchNotice.collaborationTitle(withLineBreak:)(1);
      String.splitForTitleAndSubtitle()();
      OUTLINED_FUNCTION_133();
    }
  }
  else
  {
    v13 = (objc_class *)objc_msgSend((id)objc_opt_self(), sel_conversationKit);
    OUTLINED_FUNCTION_16_15();
    v14.super.isa = v13;
    OUTLINED_FUNCTION_49_2(0x55534E555F505041, 0xEF444554524F5050, 0x61737265766E6F43, 0xEF74694B6E6F6974, v14);
    OUTLINED_FUNCTION_257_1();

  }
  return OUTLINED_FUNCTION_124_0();
}

uint64_t AppLaunchNotice.attributedCollaborationTitle()()
{
  uint64_t v0;
  Swift::String v1;
  Swift::String v2;
  uint64_t v3;
  void *v4;
  id v5;
  Swift::String v6;
  Swift::String_optional v7;
  Swift::String v8;
  Swift::String v10;

  v0 = type metadata accessor for AttributeContainer();
  MEMORY[0x1E0C80A78](v0);
  _StringGuts.grow(_:)(30);
  swift_bridgeObjectRelease();
  AppLaunchNotice.appItemTypeString.getter();
  String.append(_:)(v1);
  swift_bridgeObjectRelease();
  v2._object = (void *)0x80000001BD684BA0;
  v2._countAndFlagsBits = 0xD000000000000015;
  String.append(_:)(v2);
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v3 = unk_1EF4FCB30;
  v4 = (void *)qword_1EF4FCB38;
  v5 = (id)static LocalizationSource.conversationKit;
  swift_bridgeObjectRetain();
  v10._object = (void *)0xE000000000000000;
  v6._countAndFlagsBits = 0x5F45534F4F4843;
  v6._object = (void *)0xE700000000000000;
  v7.value._countAndFlagsBits = v3;
  v7.value._object = v4;
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  v10._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v6, v7, (NSBundle)v5, v8, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  AttributeContainer.init()();
  return AttributedString.init(_:attributes:)();
}

uint64_t AppLaunchNotice.collaborationTitle(withLineBreak:)(char a1)
{
  Swift::String v1;
  unint64_t v2;
  unint64_t v3;
  Swift::String v4;
  uint64_t v5;
  void *v6;
  id v7;
  Swift::String v8;
  Swift::String_optional v9;
  Swift::String v10;
  uint64_t countAndFlagsBits;
  Swift::String v13;

  if ((a1 & 1) != 0)
  {
    _StringGuts.grow(_:)(40);
    swift_bridgeObjectRelease();
    AppLaunchNotice.appItemTypeString.getter();
    String.append(_:)(v1);
    swift_bridgeObjectRelease();
    v2 = 0xD00000000000001FLL;
    v3 = 0x80000001BD684BC0;
  }
  else
  {
    _StringGuts.grow(_:)(30);
    swift_bridgeObjectRelease();
    AppLaunchNotice.appItemTypeString.getter();
    String.append(_:)(v4);
    swift_bridgeObjectRelease();
    v3 = 0x80000001BD684BA0;
    v2 = 0xD000000000000015;
  }
  String.append(_:)(*(Swift::String *)&v2);
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v5 = unk_1EF4FCB30;
  v6 = (void *)qword_1EF4FCB38;
  v7 = (id)static LocalizationSource.conversationKit;
  swift_bridgeObjectRetain();
  v13._object = (void *)0xE000000000000000;
  v8._countAndFlagsBits = 0x5F45534F4F4843;
  v8._object = (void *)0xE700000000000000;
  v9.value._countAndFlagsBits = v5;
  v9.value._object = v6;
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  v13._countAndFlagsBits = 0;
  countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, v9, (NSBundle)v7, v10, v13)._countAndFlagsBits;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return countAndFlagsBits;
}

void AppLaunchNotice.subtitleStyle.getter()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_138_3();
  OUTLINED_FUNCTION_116_4(*(int *)(v0 + 60));
  OUTLINED_FUNCTION_0();
}

void AppLaunchNotice.subtitleStyle.setter()
{
  char v0;
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_237_1() + 60)) = v0;
  OUTLINED_FUNCTION_0();
}

uint64_t (*AppLaunchNotice.subtitleStyle.modify())(_QWORD)
{
  type metadata accessor for AppLaunchNotice(0);
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t AppLaunchNotice.noticeAccessory.getter()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v0 = OUTLINED_FUNCTION_138_3();
  v1 = OUTLINED_FUNCTION_192_0(*(int *)(v0 + 64));
  return OUTLINED_FUNCTION_73_15(v1, v2);
}

void AppLaunchNotice.noticeAccessory.setter()
{
  uint64_t v0;

  v0 = type metadata accessor for AppLaunchNotice(0);
  OUTLINED_FUNCTION_165_3(*(int *)(v0 + 64));
  OUTLINED_FUNCTION_18();
}

uint64_t (*AppLaunchNotice.noticeAccessory.modify())(_QWORD)
{
  type metadata accessor for AppLaunchNotice(0);
  return TPNumberPadCharacter.rawValue.getter;
}

void AppLaunchNotice.equalTo(notice:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AppLaunchNotice?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  v4 = OUTLINED_FUNCTION_2_20();
  v5 = type metadata accessor for AppLaunchNotice(v4);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_65_17();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Notice);
  if (OUTLINED_FUNCTION_70_17())
  {
    OUTLINED_FUNCTION_83_0(v2, 0);
    OUTLINED_FUNCTION_135_2(v2, v7, type metadata accessor for AppLaunchNotice);
    v8 = *(int *)(v5 + 28);
    v9 = (uint64_t *)(*(_QWORD *)(v1 + v8) + OBJC_IVAR____TtC15ConversationKit13ForegroundApp_bundleIdentifier);
    v10 = *v9;
    v11 = (_QWORD *)(*(_QWORD *)(v0 + v8) + OBJC_IVAR____TtC15ConversationKit13ForegroundApp_bundleIdentifier);
    if (*v9 != *v11 || v9[1] != v11[1])
      v10 = OUTLINED_FUNCTION_13();
    OUTLINED_FUNCTION_69_15(v10, type metadata accessor for AppLaunchNotice);
  }
  else
  {
    v13 = OUTLINED_FUNCTION_83_0(v2, 1);
    OUTLINED_FUNCTION_32_18(v13, &demangling cache variable for type metadata for AppLaunchNotice?);
  }
  OUTLINED_FUNCTION_91();
}

uint64_t protocol witness for Notice.date.getter in conformance AppLaunchNotice@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 20);
  v5 = type metadata accessor for Date();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

double protocol witness for Notice.dismissalDuration.getter in conformance AppLaunchNotice(uint64_t a1)
{
  uint64_t v1;

  return *(double *)(v1 + *(int *)(a1 + 40));
}

void protocol witness for Notice.priority.getter in conformance AppLaunchNotice(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_44_1(a1);
}

uint64_t protocol witness for Notice.style.getter in conformance AppLaunchNotice@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  *a2 = *(_BYTE *)(v2 + *(int *)(result + 44));
  return result;
}

uint64_t protocol witness for Notice.subtitleStyle.getter in conformance AppLaunchNotice@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  *a2 = *(_BYTE *)(v2 + *(int *)(result + 60));
  return result;
}

uint64_t protocol witness for Notice.noticeAccessory.getter in conformance AppLaunchNotice@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;

  v3 = (uint64_t *)(v2 + *(int *)(a1 + 64));
  v4 = *v3;
  v5 = v3[1];
  *a2 = *v3;
  a2[1] = v5;
  return outlined copy of NoticeAccessory(v4, v5);
}

uint64_t protocol witness for Notice.shouldTransitionToHUD.getter in conformance AppLaunchNotice(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 48));
}

uint64_t protocol witness for Notice.actionHandler.getter in conformance AppLaunchNotice(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 52));
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v2);
  return v2;
}

uint64_t protocol witness for Notice.actionHandler.setter in conformance AppLaunchNotice(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t *v6;
  uint64_t result;

  v6 = (uint64_t *)(v3 + *(int *)(a3 + 52));
  result = outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(*v6);
  *v6 = a1;
  v6[1] = a2;
  return result;
}

uint64_t protocol witness for Notice.dismissHandler.getter in conformance AppLaunchNotice(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 56));
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v2);
  return v2;
}

uint64_t protocol witness for Notice.dismissHandler.setter in conformance AppLaunchNotice(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t *v6;
  uint64_t result;

  v6 = (uint64_t *)(v3 + *(int *)(a3 + 56));
  result = outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(*v6);
  *v6 = a1;
  v6[1] = a2;
  return result;
}

void static PushToTalkNotice.NoticeType.== infix(_:_:)()
{
  uint64_t v0;
  unsigned __int8 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  BOOL v54;
  char v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  void (*v67)(uint64_t);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  void (*v78)(uint64_t, uint64_t);
  uint64_t v79;
  char v80;
  void (*v81)(uint64_t);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;

  OUTLINED_FUNCTION_93();
  v91 = (char *)v3;
  v92 = (char *)v4;
  v87 = type metadata accessor for URL();
  v84 = *(_QWORD *)(v87 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_41();
  v83 = v6;
  v86 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (URL?, URL?));
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_5_27();
  v90 = v8;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_62();
  v85 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_5_27();
  v89 = v12;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_18_0();
  v88 = v14;
  OUTLINED_FUNCTION_8_4();
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v83 - v17;
  v19 = MEMORY[0x1E0C80A78](v16);
  v21 = (char *)&v83 - v20;
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_112();
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v83 - v23;
  type metadata accessor for PushToTalkNotice.NoticeType(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v25);
  OUTLINED_FUNCTION_51_0();
  MEMORY[0x1E0C80A78](v26);
  v28 = (uint64_t *)((char *)&v83 - v27);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (PushToTalkNotice.NoticeType, PushToTalkNotice.NoticeType));
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v29);
  OUTLINED_FUNCTION_81();
  v31 = (uint64_t *)(v2 + *(int *)(v30 + 48));
  OUTLINED_FUNCTION_225_1((uint64_t)v91, v2);
  OUTLINED_FUNCTION_225_1((uint64_t)v92, (uint64_t)v31);
  if (OUTLINED_FUNCTION_212() != 1)
  {
    v91 = v21;
    v92 = (char *)v0;
    v44 = (uint64_t)v24;
    _s15ConversationKit11ParticipantVWOcTm_3(v2, (uint64_t)v28, type metadata accessor for PushToTalkNotice.NoticeType);
    v45 = *v28;
    v46 = v28[1];
    v47 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (speaker: String, image: URL?))
                 + 48);
    v48 = (uint64_t)v28 + v47;
    if (OUTLINED_FUNCTION_212() == 1)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v28 + v47, &demangling cache variable for type metadata for URL?);
      OUTLINED_FUNCTION_27();
      goto LABEL_8;
    }
    v50 = *v31;
    v49 = v31[1];
    v51 = (uint64_t)v31 + v47;
    v52 = v44;
    outlined init with take of Any?(v48, v44, &demangling cache variable for type metadata for URL?);
    v53 = (uint64_t)v92;
    outlined init with take of Any?(v51, (uint64_t)v92, &demangling cache variable for type metadata for URL?);
    v54 = v45 == v50 && v46 == v49;
    if (v54)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      OUTLINED_FUNCTION_50();
      v55 = OUTLINED_FUNCTION_13();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_27();
      if ((v55 & 1) == 0)
      {
        OUTLINED_FUNCTION_9_42(v53);
        v56 = v52;
        v57 = &demangling cache variable for type metadata for URL?;
LABEL_30:
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v56, v57);
LABEL_31:
        v68 = v2;
LABEL_38:
        outlined destroy of Participant(v68, type metadata accessor for PushToTalkNotice.NoticeType);
        goto LABEL_39;
      }
    }
    v62 = v85;
    v63 = v85 + *(int *)(v86 + 48);
    OUTLINED_FUNCTION_63_4(v52, v85);
    OUTLINED_FUNCTION_63_4(v53, v63);
    v64 = v87;
    OUTLINED_FUNCTION_69_0(v62, 1, v87);
    if (v54)
    {
      OUTLINED_FUNCTION_90_1(v53);
      OUTLINED_FUNCTION_90_1(v52);
      OUTLINED_FUNCTION_69_0(v63, 1, v64);
      if (v54)
      {
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v62, &demangling cache variable for type metadata for URL?);
        goto LABEL_41;
      }
    }
    else
    {
      outlined init with copy of FeatureEligibility?(v62, (uint64_t)v91, &demangling cache variable for type metadata for URL?);
      OUTLINED_FUNCTION_69_0(v63, 1, v64);
      if (!v65)
      {
        v74 = v84;
        v75 = v53;
        v76 = v83;
        OUTLINED_FUNCTION_291(v83, v63, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v84 + 32));
        _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type URL and conformance URL, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0028]);
        v77 = dispatch thunk of static Equatable.== infix(_:_:)();
        v78 = *(void (**)(uint64_t, uint64_t))(v74 + 8);
        v78(v76, v64);
        OUTLINED_FUNCTION_90_1(v75);
        OUTLINED_FUNCTION_90_1(v52);
        v79 = OUTLINED_FUNCTION_350_0();
        ((void (*)(uint64_t))v78)(v79);
        OUTLINED_FUNCTION_90_1(v62);
        if ((v77 & 1) == 0)
          goto LABEL_31;
LABEL_41:
        v68 = v2;
        goto LABEL_38;
      }
      OUTLINED_FUNCTION_9_42(v53);
      OUTLINED_FUNCTION_9_42(v52);
      v66 = OUTLINED_FUNCTION_350_0();
      v67(v66);
    }
    v57 = (uint64_t *)&demangling cache variable for type metadata for (URL?, URL?);
    v56 = v62;
    goto LABEL_30;
  }
  v92 = v18;
  v33 = v89;
  v32 = v90;
  v34 = v2;
  _s15ConversationKit11ParticipantVWOcTm_3(v2, (uint64_t)v1, type metadata accessor for PushToTalkNotice.NoticeType);
  v35 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (enabled: Bool, image: URL?))
               + 48);
  v36 = (uint64_t)&v1[v35];
  if (OUTLINED_FUNCTION_212() == 1)
  {
    v37 = *v1;
    v38 = *(unsigned __int8 *)v31;
    v39 = (uint64_t)v92;
    outlined init with take of Any?(v36, (uint64_t)v92, &demangling cache variable for type metadata for URL?);
    v40 = (uint64_t)v31 + v35;
    v41 = v88;
    outlined init with take of Any?(v40, v88, &demangling cache variable for type metadata for URL?);
    if (v37 != v38)
    {
      OUTLINED_FUNCTION_9_42(v41);
      v42 = v39;
      v43 = &demangling cache variable for type metadata for URL?;
LABEL_36:
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v42, v43);
LABEL_37:
      v68 = v34;
      goto LABEL_38;
    }
    v58 = v32 + *(int *)(v86 + 48);
    OUTLINED_FUNCTION_63_4(v39, v32);
    OUTLINED_FUNCTION_63_4(v41, v58);
    v59 = OUTLINED_FUNCTION_312();
    v60 = v87;
    OUTLINED_FUNCTION_69_0(v59, v61, v87);
    if (v54)
    {
      OUTLINED_FUNCTION_90_1(v41);
      OUTLINED_FUNCTION_90_1(v39);
      OUTLINED_FUNCTION_69_0(v58, 1, v60);
      if (v54)
      {
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v32, &demangling cache variable for type metadata for URL?);
        goto LABEL_43;
      }
    }
    else
    {
      v69 = OUTLINED_FUNCTION_263();
      outlined init with copy of FeatureEligibility?(v69, v70, v71);
      OUTLINED_FUNCTION_69_0(v58, 1, v60);
      v73 = v84;
      if (!v72)
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v84 + 32))(v83, v58, v60);
        _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type URL and conformance URL, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0028]);
        v80 = dispatch thunk of static Equatable.== infix(_:_:)();
        v81 = *(void (**)(uint64_t))(v73 + 8);
        v82 = OUTLINED_FUNCTION_202_0();
        v81(v82);
        OUTLINED_FUNCTION_90_1(v88);
        OUTLINED_FUNCTION_90_1((uint64_t)v92);
        ((void (*)(uint64_t, uint64_t))v81)(v33, v60);
        OUTLINED_FUNCTION_90_1(v32);
        if ((v80 & 1) == 0)
          goto LABEL_37;
LABEL_43:
        v68 = v34;
        goto LABEL_38;
      }
      OUTLINED_FUNCTION_9_42(v88);
      OUTLINED_FUNCTION_9_42((uint64_t)v92);
      (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v33, v60);
    }
    v43 = (uint64_t *)&demangling cache variable for type metadata for (URL?, URL?);
    v42 = v32;
    goto LABEL_36;
  }
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v1[v35], &demangling cache variable for type metadata for URL?);
LABEL_8:
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v2, &demangling cache variable for type metadata for (PushToTalkNotice.NoticeType, PushToTalkNotice.NoticeType));
LABEL_39:
  OUTLINED_FUNCTION_52_1();
}

uint64_t AppLaunchNotice.uuid.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_33_0();
  v0 = OUTLINED_FUNCTION_50();
  return OUTLINED_FUNCTION_31_0(v0, v1, v2, v3);
}

uint64_t AppLaunchNotice.uuid.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_33_0();
  v0 = OUTLINED_FUNCTION_69_1();
  return OUTLINED_FUNCTION_31_0(v0, v1, v2, v3);
}

uint64_t (*PushToTalkNotice.uuid.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void PushToTalkNotice.type.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_266_1();
  _s15ConversationKit11ParticipantVWOcTm_3(v1 + *(int *)(v2 + 20), v0, type metadata accessor for PushToTalkNotice.NoticeType);
  OUTLINED_FUNCTION_0();
}

void PushToTalkNotice.type.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_311();
  type metadata accessor for PushToTalkNotice(v1);
  OUTLINED_FUNCTION_141_1();
  outlined assign with take of SessionActionNotice(v0, v2, type metadata accessor for PushToTalkNotice.NoticeType);
  OUTLINED_FUNCTION_0();
}

uint64_t (*PushToTalkNotice.type.modify())(_QWORD)
{
  type metadata accessor for PushToTalkNotice(0);
  OUTLINED_FUNCTION_141_1();
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t PushToTalkNotice.date.getter()
{
  return SessionActivationRequestNotice.uuid.getter(type metadata accessor for PushToTalkNotice);
}

uint64_t PushToTalkNotice.date.setter(uint64_t a1)
{
  return SessionActivationRequestNotice.uuid.setter(a1, type metadata accessor for PushToTalkNotice);
}

uint64_t (*PushToTalkNotice.date.modify())(_QWORD)
{
  OUTLINED_FUNCTION_186_1();
  OUTLINED_FUNCTION_201_0();
  return TPNumberPadCharacter.rawValue.getter;
}

void PushToTalkNotice.priority.getter()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_266_1();
  OUTLINED_FUNCTION_116_4(*(int *)(v0 + 28));
  OUTLINED_FUNCTION_0();
}

void PushToTalkNotice.priority.setter()
{
  char v0;
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_371_0() + 28)) = v0;
  OUTLINED_FUNCTION_0();
}

uint64_t (*PushToTalkNotice.priority.modify())(_QWORD)
{
  type metadata accessor for PushToTalkNotice(0);
  OUTLINED_FUNCTION_216_0();
  return TPNumberPadCharacter.rawValue.getter;
}

void PushToTalkNotice.bundleIdentifier.getter()
{
  type metadata accessor for PushToTalkNotice(0);
  OUTLINED_FUNCTION_52_4();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void PushToTalkNotice.bundleIdentifier.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_307_0();
  type metadata accessor for PushToTalkNotice(v3);
  OUTLINED_FUNCTION_92_11();
  *v1 = v2;
  v1[1] = v0;
  OUTLINED_FUNCTION_18();
}

uint64_t (*PushToTalkNotice.bundleIdentifier.modify())(_QWORD)
{
  type metadata accessor for PushToTalkNotice(0);
  OUTLINED_FUNCTION_219_0();
  return TPNumberPadCharacter.rawValue.getter;
}

void PushToTalkNotice.description.getter()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  v0 = type metadata accessor for PushToTalkNotice.NoticeType(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_98_7();
  if (OUTLINED_FUNCTION_212() == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (enabled: Bool, image: URL?));
    OUTLINED_FUNCTION_368_0();
    _StringGuts.grow(_:)(24);
  }
  else
  {
    OUTLINED_FUNCTION_93_2();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (speaker: String, image: URL?));
    OUTLINED_FUNCTION_368_0();
    _StringGuts.grow(_:)(23);
  }
  swift_bridgeObjectRelease();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v3[v0], &demangling cache variable for type metadata for URL?);
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_91();
}

double PushToTalkNotice.dismissalDuration.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for PushToTalkNotice(0) + 36));
}

void PushToTalkNotice.dismissalDuration.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + *(int *)(type metadata accessor for PushToTalkNotice(0) + 36)) = a1;
  OUTLINED_FUNCTION_360();
}

uint64_t (*PushToTalkNotice.dismissalDuration.modify())(_QWORD)
{
  type metadata accessor for PushToTalkNotice(0);
  OUTLINED_FUNCTION_208_0();
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t PushToTalkNotice.shouldTransitionToHUD.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for PushToTalkNotice(0);
  return protocol witness for Notice.shouldTransitionToHUD.getter in conformance PushToTalkNotice(v0);
}

void PushToTalkNotice.shouldTransitionToHUD.setter(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(type metadata accessor for PushToTalkNotice(0) + 40)) = a1;
  OUTLINED_FUNCTION_0();
}

uint64_t (*PushToTalkNotice.shouldTransitionToHUD.modify())(_QWORD)
{
  type metadata accessor for PushToTalkNotice(0);
  OUTLINED_FUNCTION_207_2();
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t key path getter for PushToTalkNotice.actionHandler : PushToTalkNotice@<X0>(uint64_t a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for PushToTalkNotice(0) + 44));
  v4 = *v3;
  v5 = v3[1];
  if (*v3)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for PushToTalkNotice.actionHandler : PushToTalkNotice(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(a2 + *(int *)(type metadata accessor for PushToTalkNotice(0) + 44));
  v8 = *v7;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  result = outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  return result;
}

void PushToTalkNotice.actionHandler.getter()
{
  PushToTalkNotice.actionHandler.getter(type metadata accessor for PushToTalkNotice);
}

void PushToTalkNotice.actionHandler.setter(uint64_t a1, uint64_t a2)
{
  PushToTalkNotice.actionHandler.setter(a1, a2, type metadata accessor for PushToTalkNotice);
}

uint64_t (*PushToTalkNotice.actionHandler.modify())(_QWORD)
{
  OUTLINED_FUNCTION_186_1();
  OUTLINED_FUNCTION_206_0();
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t key path getter for PushToTalkNotice.dismissHandler : PushToTalkNotice@<X0>(uint64_t a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for PushToTalkNotice(0) + 48));
  v4 = *v3;
  v5 = v3[1];
  if (*v3)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for PushToTalkNotice.dismissHandler : PushToTalkNotice(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(a2 + *(int *)(type metadata accessor for PushToTalkNotice(0) + 48));
  v8 = *v7;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  result = outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  return result;
}

void PushToTalkNotice.dismissHandler.getter()
{
  SessionActivationRequestNotice.actionHandler.getter(type metadata accessor for PushToTalkNotice);
}

void PushToTalkNotice.dismissHandler.setter(uint64_t a1, uint64_t a2)
{
  SessionActivationRequestNotice.actionHandler.setter(a1, a2, type metadata accessor for PushToTalkNotice);
}

uint64_t (*PushToTalkNotice.dismissHandler.modify())(_QWORD)
{
  OUTLINED_FUNCTION_186_1();
  OUTLINED_FUNCTION_205_1();
  return TPNumberPadCharacter.rawValue.getter;
}

void PushToTalkNotice.image.getter(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  type metadata accessor for PushToTalkNotice.NoticeType(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_98_7();
  if (OUTLINED_FUNCTION_212() == 1)
  {
    v5 = &demangling cache variable for type metadata for (enabled: Bool, image: URL?);
  }
  else
  {
    OUTLINED_FUNCTION_93_2();
    v5 = &demangling cache variable for type metadata for (speaker: String, image: URL?);
  }
  v6 = __swift_instantiateConcreteTypeFromMangledName(v5);
  outlined init with take of Any?((uint64_t)&v4[*(int *)(v6 + 48)], a1, &demangling cache variable for type metadata for URL?);
  OUTLINED_FUNCTION_91();
}

void PushToTalkNotice.subtitleStyle.getter()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_266_1();
  OUTLINED_FUNCTION_116_4(*(int *)(v0 + 52));
  OUTLINED_FUNCTION_0();
}

void PushToTalkNotice.subtitleStyle.setter()
{
  char v0;
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_371_0() + 52)) = v0;
  OUTLINED_FUNCTION_0();
}

uint64_t (*PushToTalkNotice.subtitleStyle.modify())(_QWORD)
{
  type metadata accessor for PushToTalkNotice(0);
  OUTLINED_FUNCTION_204_1();
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t PushToTalkNotice.noticeAccessory.getter()
{
  return PushToTalkNotice.noticeAccessory.getter(type metadata accessor for PushToTalkNotice);
}

void PushToTalkNotice.noticeAccessory.setter(uint64_t a1)
{
  PushToTalkNotice.noticeAccessory.setter(a1, type metadata accessor for PushToTalkNotice);
}

uint64_t (*PushToTalkNotice.noticeAccessory.modify())(_QWORD)
{
  OUTLINED_FUNCTION_186_1();
  OUTLINED_FUNCTION_291_2();
  return TPNumberPadCharacter.rawValue.getter;
}

void PushToTalkNotice.shouldReplace(notice:)()
{
  uint64_t v0;
  int v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_96();
  v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PushToTalkNotice?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  v5 = OUTLINED_FUNCTION_101_0();
  type metadata accessor for PushToTalkNotice(v5);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_150_2();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Notice);
  if ((OUTLINED_FUNCTION_97() & 1) != 0)
  {
    OUTLINED_FUNCTION_19_3(v0, 0);
    OUTLINED_FUNCTION_329_0();
    OUTLINED_FUNCTION_232_0();
    if ((_DWORD)v0 == v1)
      goto LABEL_6;
  }
  else
  {
    v7 = OUTLINED_FUNCTION_19_3(v0, 1);
    OUTLINED_FUNCTION_30_7(v7, &demangling cache variable for type metadata for PushToTalkNotice?);
  }
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  OUTLINED_FUNCTION_76_15();
LABEL_6:
  OUTLINED_FUNCTION_65_1();
}

void PushToTalkNotice.equalTo(notice:)()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PushToTalkNotice?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_186_1();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_65_17();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Notice);
  if (OUTLINED_FUNCTION_70_17())
  {
    OUTLINED_FUNCTION_83_0((uint64_t)v2, 0);
    OUTLINED_FUNCTION_135_2((uint64_t)v2, v4, type metadata accessor for PushToTalkNotice);
    static PushToTalkNotice.NoticeType.== infix(_:_:)();
    if ((v5 & 1) != 0)
    {
      PushToTalkNotice.title.getter();
      v7 = v6;
      v9 = v8;
      PushToTalkNotice.title.getter();
      if (v7 != v11 || v9 != v10)
        OUTLINED_FUNCTION_13();
      OUTLINED_FUNCTION_2_1();
      v14 = OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_69_15(v14, type metadata accessor for PushToTalkNotice);
    }
    else
    {
      OUTLINED_FUNCTION_69_15(v5, type metadata accessor for PushToTalkNotice);
    }
  }
  else
  {
    v13 = OUTLINED_FUNCTION_83_0((uint64_t)v2, 1);
    OUTLINED_FUNCTION_32_18(v13, &demangling cache variable for type metadata for PushToTalkNotice?);
  }
  OUTLINED_FUNCTION_91();
}

uint64_t protocol witness for Notice.date.getter in conformance PushToTalkNotice(uint64_t a1, uint64_t a2)
{
  return protocol witness for Notice.date.getter in conformance PushToTalkNotice(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0870]);
}

double protocol witness for Notice.dismissalDuration.getter in conformance PushToTalkNotice(uint64_t a1)
{
  uint64_t v1;

  return *(double *)(v1 + *(int *)(a1 + 36));
}

void protocol witness for Notice.priority.getter in conformance PushToTalkNotice(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_44_1(a1);
}

uint64_t protocol witness for Notice.subtitle.getter in conformance PushToTalkNotice()
{
  return specialized Notice.subtitle.getter();
}

uint64_t protocol witness for Notice.subtitleStyle.getter in conformance PushToTalkNotice@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  *a2 = *(_BYTE *)(v2 + *(int *)(result + 52));
  return result;
}

uint64_t protocol witness for Notice.shouldTransitionToHUD.getter in conformance PushToTalkNotice(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 40));
}

void static SystemUpdateNotice.NoticeType.== infix(_:_:)()
{
  unsigned __int8 v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  char v16;

  OUTLINED_FUNCTION_96();
  v6 = v5;
  if (!v2 || !v5)
    goto LABEL_33;
  v7 = v4;
  v8 = v2;
  v9 = v1;
  v10 = 1852403562;
  v11 = v0;
  if (v0)
  {
    if (v0 == 1)
      v12 = 1702260589;
    else
      v12 = 0x50646E416E696F6ALL;
    if (v11 == 1)
      v13 = 0xE400000000000000;
    else
      v13 = 0xEB0000000079616CLL;
  }
  else
  {
    v13 = 0xE400000000000000;
    v12 = 1852403562;
  }
  if (v3)
  {
    if (v3 == 1)
      v10 = 1702260589;
    else
      v10 = 0x50646E416E696F6ALL;
    if (v3 == 1)
      v14 = 0xE400000000000000;
    else
      v14 = 0xEB0000000079616CLL;
  }
  else
  {
    v14 = 0xE400000000000000;
  }
  if (v12 == v10 && v13 == v14)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v16 = OUTLINED_FUNCTION_13();
    OUTLINED_FUNCTION_133();
    OUTLINED_FUNCTION_30_4();
    if ((v16 & 1) == 0)
      goto LABEL_33;
  }
  if (v9 != v7 || v8 != v6)
  {
    _stringCompareWithSmolCheck(_:_:expecting:)();
    return;
  }
LABEL_33:
  OUTLINED_FUNCTION_65_1();
}

void protocol witness for static Equatable.== infix(_:_:) in conformance SystemUpdateNotice.NoticeType()
{
  static SystemUpdateNotice.NoticeType.== infix(_:_:)();
}

ConversationKit::SystemUpdateNotice::HandoffType_optional __swiftcall SystemUpdateNotice.HandoffType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t countAndFlagsBits;
  Swift::OpaquePointer v2;
  unint64_t v3;

  countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._rawValue = &outlined read-only object #0 of SystemUpdateNotice.HandoffType.init(rawValue:);
  v3 = OUTLINED_FUNCTION_4_89(v2, countAndFlagsBits);
  OUTLINED_FUNCTION_13_3();
  if (v3 >= 3)
    return (ConversationKit::SystemUpdateNotice::HandoffType_optional)3;
  else
    return (ConversationKit::SystemUpdateNotice::HandoffType_optional)v3;
}

uint64_t SystemUpdateNotice.HandoffType.rawValue.getter(char a1)
{
  if (!a1)
    return 1852403562;
  if (a1 == 1)
    return 1702260589;
  return 0x50646E416E696F6ALL;
}

void protocol witness for static Equatable.== infix(_:_:) in conformance SystemUpdateNotice.HandoffType(char *a1, char *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance SystemUpdateNotice.HandoffType()
{
  specialized RawRepresentable<>.hashValue.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance SystemUpdateNotice.HandoffType()
{
  return specialized RawRepresentable<>.hash(into:)();
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance SystemUpdateNotice.HandoffType()
{
  specialized RawRepresentable<>._rawHashValue(seed:)();
}

ConversationKit::SystemUpdateNotice::HandoffType_optional protocol witness for RawRepresentable.init(rawValue:) in conformance SystemUpdateNotice.HandoffType@<W0>(Swift::String *a1@<X0>, ConversationKit::SystemUpdateNotice::HandoffType_optional *a2@<X8>)
{
  ConversationKit::SystemUpdateNotice::HandoffType_optional result;

  result.value = SystemUpdateNotice.HandoffType.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance SystemUpdateNotice.HandoffType(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t v3;

  *a1 = SystemUpdateNotice.HandoffType.rawValue.getter(*v1);
  a1[1] = v3;
  OUTLINED_FUNCTION_0();
}

uint64_t SystemUpdateNotice.type.getter()
{
  OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_65_2();
}

void SystemUpdateNotice.type.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  swift_bridgeObjectRelease();
  *v3 = a1;
  v3[1] = a2;
  v3[2] = a3;
  OUTLINED_FUNCTION_18();
}

uint64_t (*SystemUpdateNotice.type.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void SystemUpdateNotice.activity.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  outlined init with copy of FeatureEligibility?(v1 + 24, a1, &demangling cache variable for type metadata for Activity?);
}

void SystemUpdateNotice.activity.setter(uint64_t a1)
{
  uint64_t v1;

  outlined assign with take of Participant?(a1, v1 + 24, &demangling cache variable for type metadata for Activity?);
}

uint64_t (*SystemUpdateNotice.activity.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void SystemUpdateNotice.description.getter()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  Swift::String v4;

  if (*((_QWORD *)v0 + 2))
  {
    v1 = *v0;
    _StringGuts.grow(_:)(23);
    swift_bridgeObjectRelease();
    v2 = 1702260589;
    if (v1 != 1)
      v2 = 0x50646E416E696F6ALL;
    if (v1)
      v3 = v2;
    else
      v3 = 1852403562;
    OUTLINED_FUNCTION_318_0(v3);
    OUTLINED_FUNCTION_13_3();
    v4._countAndFlagsBits = OUTLINED_FUNCTION_203();
    String.append(_:)(v4);
  }
  else
  {
    OUTLINED_FUNCTION_61();
  }
  OUTLINED_FUNCTION_45_0();
}

uint64_t SystemUpdateNotice.uuid.getter()
{
  return SessionActivationRequestNotice.uuid.getter(type metadata accessor for SystemUpdateNotice);
}

uint64_t SystemUpdateNotice.uuid.setter(uint64_t a1)
{
  return SessionActivationRequestNotice.uuid.setter(a1, type metadata accessor for SystemUpdateNotice);
}

uint64_t (*SystemUpdateNotice.uuid.modify())(_QWORD)
{
  OUTLINED_FUNCTION_224_1();
  OUTLINED_FUNCTION_201_0();
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t SystemUpdateNotice.date.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_267_1();
  OUTLINED_FUNCTION_33();
  v0 = OUTLINED_FUNCTION_50();
  return OUTLINED_FUNCTION_31_0(v0, v1, v2, v3);
}

uint64_t SystemUpdateNotice.date.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v0 = OUTLINED_FUNCTION_311();
  type metadata accessor for SystemUpdateNotice(v0);
  OUTLINED_FUNCTION_33();
  v1 = OUTLINED_FUNCTION_69_1();
  return OUTLINED_FUNCTION_31_0(v1, v2, v3, v4);
}

uint64_t (*SystemUpdateNotice.date.modify())(_QWORD)
{
  type metadata accessor for SystemUpdateNotice(0);
  OUTLINED_FUNCTION_216_0();
  return TPNumberPadCharacter.rawValue.getter;
}

void SystemUpdateNotice.priority.getter()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_267_1();
  OUTLINED_FUNCTION_116_4(*(int *)(v0 + 32));
  OUTLINED_FUNCTION_0();
}

void SystemUpdateNotice.priority.setter()
{
  char v0;
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_370_0() + 32)) = v0;
  OUTLINED_FUNCTION_0();
}

uint64_t (*SystemUpdateNotice.priority.modify())(_QWORD)
{
  type metadata accessor for SystemUpdateNotice(0);
  OUTLINED_FUNCTION_219_0();
  return TPNumberPadCharacter.rawValue.getter;
}

void SystemUpdateNotice.dismissalDuration.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  if (one-time initialization token for shared != -1)
    swift_once();
  v2 = 936;
  if (!v1)
    v2 = 984;
  (*(void (**)(void))(*(_QWORD *)static Defaults.shared + v2))();
  OUTLINED_FUNCTION_0();
}

void SystemUpdateNotice.style.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_44_1(a1);
}

void SystemUpdateNotice.bundleIdentifier.getter()
{
  type metadata accessor for SystemUpdateNotice(0);
  OUTLINED_FUNCTION_52_4();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void SystemUpdateNotice.bundleIdentifier.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_307_0();
  type metadata accessor for SystemUpdateNotice(v3);
  OUTLINED_FUNCTION_92_11();
  *v1 = v2;
  v1[1] = v0;
  OUTLINED_FUNCTION_18();
}

uint64_t (*SystemUpdateNotice.bundleIdentifier.modify())(_QWORD)
{
  type metadata accessor for SystemUpdateNotice(0);
  OUTLINED_FUNCTION_208_0();
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t SystemUpdateNotice.shouldTransitionToHUD.getter()
{
  uint64_t updated;

  updated = type metadata accessor for SystemUpdateNotice(0);
  return protocol witness for Notice.shouldTransitionToHUD.getter in conformance PushToTalkNotice(updated);
}

void SystemUpdateNotice.shouldTransitionToHUD.setter(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(type metadata accessor for SystemUpdateNotice(0) + 40)) = a1;
  OUTLINED_FUNCTION_0();
}

uint64_t (*SystemUpdateNotice.shouldTransitionToHUD.modify())(_QWORD)
{
  type metadata accessor for SystemUpdateNotice(0);
  OUTLINED_FUNCTION_207_2();
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t key path getter for SystemUpdateNotice.actionHandler : SystemUpdateNotice@<X0>(uint64_t a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for SystemUpdateNotice(0) + 44));
  v4 = *v3;
  v5 = v3[1];
  if (*v3)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for SystemUpdateNotice.actionHandler : SystemUpdateNotice(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(a2 + *(int *)(type metadata accessor for SystemUpdateNotice(0) + 44));
  v8 = *v7;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  result = outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  return result;
}

void SystemUpdateNotice.actionHandler.getter()
{
  PushToTalkNotice.actionHandler.getter(type metadata accessor for SystemUpdateNotice);
}

void PushToTalkNotice.actionHandler.getter(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_164(a1);
  OUTLINED_FUNCTION_5_100(*(int *)(v1 + 44));
  OUTLINED_FUNCTION_0();
}

void SystemUpdateNotice.actionHandler.setter(uint64_t a1, uint64_t a2)
{
  PushToTalkNotice.actionHandler.setter(a1, a2, type metadata accessor for SystemUpdateNotice);
}

void PushToTalkNotice.actionHandler.setter(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_115_8(a1, a2, a3);
  OUTLINED_FUNCTION_16_66(*(int *)(v3 + 44));
  OUTLINED_FUNCTION_18();
}

uint64_t (*SystemUpdateNotice.actionHandler.modify())(_QWORD)
{
  OUTLINED_FUNCTION_224_1();
  OUTLINED_FUNCTION_206_0();
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t key path getter for SystemUpdateNotice.dismissHandler : SystemUpdateNotice@<X0>(uint64_t a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for SystemUpdateNotice(0) + 48));
  v4 = *v3;
  v5 = v3[1];
  if (*v3)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for SystemUpdateNotice.dismissHandler : SystemUpdateNotice(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(a2 + *(int *)(type metadata accessor for SystemUpdateNotice(0) + 48));
  v8 = *v7;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  result = outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  return result;
}

void SystemUpdateNotice.dismissHandler.getter()
{
  SessionActivationRequestNotice.actionHandler.getter(type metadata accessor for SystemUpdateNotice);
}

void SystemUpdateNotice.dismissHandler.setter(uint64_t a1, uint64_t a2)
{
  SessionActivationRequestNotice.actionHandler.setter(a1, a2, type metadata accessor for SystemUpdateNotice);
}

uint64_t (*SystemUpdateNotice.dismissHandler.modify())(_QWORD)
{
  OUTLINED_FUNCTION_224_1();
  OUTLINED_FUNCTION_205_1();
  return TPNumberPadCharacter.rawValue.getter;
}

void SystemUpdateNotice.subtitleStyle.getter()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_267_1();
  OUTLINED_FUNCTION_116_4(*(int *)(v0 + 52));
  OUTLINED_FUNCTION_0();
}

void SystemUpdateNotice.subtitleStyle.setter()
{
  char v0;
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_370_0() + 52)) = v0;
  OUTLINED_FUNCTION_0();
}

uint64_t (*SystemUpdateNotice.subtitleStyle.modify())(_QWORD)
{
  type metadata accessor for SystemUpdateNotice(0);
  OUTLINED_FUNCTION_204_1();
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t SystemUpdateNotice.noticeAccessory.getter()
{
  return PushToTalkNotice.noticeAccessory.getter(type metadata accessor for SystemUpdateNotice);
}

uint64_t PushToTalkNotice.noticeAccessory.getter(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = OUTLINED_FUNCTION_161_2(a1);
  v2 = OUTLINED_FUNCTION_192_0(*(int *)(v1 + 56));
  return OUTLINED_FUNCTION_73_15(v2, v3);
}

void SystemUpdateNotice.noticeAccessory.setter(uint64_t a1)
{
  PushToTalkNotice.noticeAccessory.setter(a1, type metadata accessor for SystemUpdateNotice);
}

void PushToTalkNotice.noticeAccessory.setter(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_137_6(a1, a2);
  OUTLINED_FUNCTION_165_3(*(int *)(v2 + 56));
  OUTLINED_FUNCTION_18();
}

uint64_t (*SystemUpdateNotice.noticeAccessory.modify())(_QWORD)
{
  OUTLINED_FUNCTION_224_1();
  OUTLINED_FUNCTION_291_2();
  return TPNumberPadCharacter.rawValue.getter;
}

void SystemUpdateNotice.equalTo(notice:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t updated;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_93();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for SystemUpdateNotice?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  v4 = OUTLINED_FUNCTION_101_0();
  updated = type metadata accessor for SystemUpdateNotice(v4);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_151_2();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Notice);
  if (OUTLINED_FUNCTION_97())
  {
    OUTLINED_FUNCTION_19_3(v2, 0);
    OUTLINED_FUNCTION_135_2(v2, v7, type metadata accessor for SystemUpdateNotice);
    swift_bridgeObjectRetain();
    static SystemUpdateNotice.NoticeType.== infix(_:_:)();
    v9 = v8;
    v10 = swift_bridgeObjectRelease();
    if ((v9 & 1) == 0)
    {
LABEL_11:
      OUTLINED_FUNCTION_69_15(v10, type metadata accessor for SystemUpdateNotice);
      goto LABEL_12;
    }
    v11 = *(int *)(updated + 36);
    v12 = (uint64_t *)(v1 + v11);
    v13 = *(_QWORD *)(v1 + v11 + 8);
    v14 = (_QWORD *)(v0 + v11);
    v15 = v14[1];
    if (v13)
    {
      if (v15)
      {
        v10 = *v12;
        if (*v12 != *v14 || v13 != v15)
          v10 = OUTLINED_FUNCTION_13();
      }
      goto LABEL_11;
    }
    v18 = OUTLINED_FUNCTION_5_0();
    OUTLINED_FUNCTION_69_15(v18, type metadata accessor for SystemUpdateNotice);
    if (v15)
      OUTLINED_FUNCTION_27();
  }
  else
  {
    v17 = OUTLINED_FUNCTION_19_3(v2, 1);
    OUTLINED_FUNCTION_30_7(v17, (uint64_t *)&demangling cache variable for type metadata for SystemUpdateNotice?);
  }
LABEL_12:
  OUTLINED_FUNCTION_52_1();
}

uint64_t protocol witness for Notice.uuid.getter in conformance SystemUpdateNotice(uint64_t a1, uint64_t a2)
{
  return protocol witness for Notice.date.getter in conformance PushToTalkNotice(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0998]);
}

uint64_t protocol witness for Notice.date.getter in conformance PushToTalkNotice(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  OUTLINED_FUNCTION_153_3(a1, a2, a3);
  v3 = OUTLINED_FUNCTION_50();
  return OUTLINED_FUNCTION_31_0(v3, v4, v5, v6);
}

uint64_t protocol witness for Notice.uuid.setter in conformance SystemUpdateNotice(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 24);
  v5 = type metadata accessor for UUID();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t protocol witness for Notice.date.getter in conformance SystemUpdateNotice@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 28);
  v5 = type metadata accessor for Date();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

void protocol witness for Notice.priority.getter in conformance SystemUpdateNotice(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_44_1(a1);
}

uint64_t protocol witness for Notice.bundleIdentifier.getter in conformance SystemUpdateNotice(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 36));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t protocol witness for Notice.subtitle.getter in conformance SystemUpdateNotice()
{
  return specialized Notice.subtitle.getter();
}

uint64_t protocol witness for Notice.noticeAccessory.getter in conformance PushToTalkNotice@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;

  v3 = (uint64_t *)(v2 + *(int *)(a1 + 56));
  v4 = *v3;
  v5 = v3[1];
  *a2 = *v3;
  a2[1] = v5;
  return outlined copy of NoticeAccessory(v4, v5);
}

void protocol witness for Notice.actionHandler.getter in conformance PushToTalkNotice(uint64_t a1)
{
  OUTLINED_FUNCTION_5_100(*(int *)(a1 + 44));
  OUTLINED_FUNCTION_0();
}

void protocol witness for Notice.actionHandler.setter in conformance PushToTalkNotice(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_16_66(*(int *)(a3 + 44));
  OUTLINED_FUNCTION_18();
}

void protocol witness for Notice.dismissHandler.getter in conformance PushToTalkNotice(uint64_t a1)
{
  OUTLINED_FUNCTION_5_100(*(int *)(a1 + 48));
  OUTLINED_FUNCTION_0();
}

void protocol witness for Notice.dismissHandler.setter in conformance PushToTalkNotice(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_16_66(*(int *)(a3 + 48));
  OUTLINED_FUNCTION_18();
}

uint64_t ReactionNotice.description.getter()
{
  Swift::String v1;

  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [ParticipantReaction]);
  v1._countAndFlagsBits = String.init<A>(reflecting:)();
  OUTLINED_FUNCTION_180(v1);
  OUTLINED_FUNCTION_13_3();
  return 0x6E6F697463616552;
}

uint64_t ReactionNotice.reactions.getter()
{
  return swift_bridgeObjectRetain();
}

void ReactionNotice.reactions.setter(uint64_t a1)
{
  _QWORD *v1;

  swift_bridgeObjectRelease();
  *v1 = a1;
  OUTLINED_FUNCTION_0();
}

uint64_t (*ReactionNotice.reactions.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ReactionNotice.uuid.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_410_0();
  OUTLINED_FUNCTION_33_0();
  v0 = OUTLINED_FUNCTION_50();
  return OUTLINED_FUNCTION_31_0(v0, v1, v2, v3);
}

uint64_t ReactionNotice.uuid.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v0 = OUTLINED_FUNCTION_311();
  type metadata accessor for ReactionNotice(v0);
  OUTLINED_FUNCTION_33_0();
  v1 = OUTLINED_FUNCTION_69_1();
  return OUTLINED_FUNCTION_31_0(v1, v2, v3, v4);
}

uint64_t (*ReactionNotice.uuid.modify())(_QWORD)
{
  type metadata accessor for ReactionNotice(0);
  OUTLINED_FUNCTION_141_1();
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ReactionNotice.date.getter()
{
  return SessionActivationRequestNotice.uuid.getter(type metadata accessor for ReactionNotice);
}

uint64_t ReactionNotice.date.setter(uint64_t a1)
{
  return SessionActivationRequestNotice.uuid.setter(a1, type metadata accessor for ReactionNotice);
}

uint64_t (*ReactionNotice.date.modify())(_QWORD)
{
  OUTLINED_FUNCTION_323();
  OUTLINED_FUNCTION_201_0();
  return TPNumberPadCharacter.rawValue.getter;
}

void ReactionNotice.priority.getter()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_410_0();
  OUTLINED_FUNCTION_116_4(*(int *)(v0 + 28));
  OUTLINED_FUNCTION_0();
}

void ReactionNotice.priority.setter(char *a1)
{
  uint64_t v1;
  char v2;

  v2 = *a1;
  *(_BYTE *)(v1 + *(int *)(type metadata accessor for ReactionNotice(0) + 28)) = v2;
  OUTLINED_FUNCTION_0();
}

uint64_t (*ReactionNotice.priority.modify())(_QWORD)
{
  type metadata accessor for ReactionNotice(0);
  OUTLINED_FUNCTION_216_0();
  return TPNumberPadCharacter.rawValue.getter;
}

void ReactionNotice.bundleIdentifier.getter()
{
  type metadata accessor for ReactionNotice(0);
  OUTLINED_FUNCTION_52_4();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void ReactionNotice.bundleIdentifier.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_310_1();
  OUTLINED_FUNCTION_92_11();
  *v1 = v2;
  v1[1] = v0;
  OUTLINED_FUNCTION_18();
}

uint64_t (*ReactionNotice.bundleIdentifier.modify())(_QWORD)
{
  type metadata accessor for ReactionNotice(0);
  OUTLINED_FUNCTION_219_0();
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ReactionNotice.shouldTransitionToHUD.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ReactionNotice(0) + 36));
}

void ReactionNotice.shouldTransitionToHUD.setter(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(type metadata accessor for ReactionNotice(0) + 36)) = a1;
  OUTLINED_FUNCTION_0();
}

uint64_t (*ReactionNotice.shouldTransitionToHUD.modify())(_QWORD)
{
  type metadata accessor for ReactionNotice(0);
  OUTLINED_FUNCTION_208_0();
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t key path getter for ReactionNotice.actionHandler : ReactionNotice@<X0>(uint64_t a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for ReactionNotice(0) + 40));
  v4 = *v3;
  v5 = v3[1];
  if (*v3)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ReactionNotice.actionHandler : ReactionNotice(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(a2 + *(int *)(type metadata accessor for ReactionNotice(0) + 40));
  v8 = *v7;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  result = outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  return result;
}

void ReactionNotice.actionHandler.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for ReactionNotice(0);
  OUTLINED_FUNCTION_5_100(*(int *)(v0 + 40));
  OUTLINED_FUNCTION_0();
}

void ReactionNotice.actionHandler.setter()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_310_1();
  OUTLINED_FUNCTION_16_66(*(int *)(v0 + 40));
  OUTLINED_FUNCTION_18();
}

uint64_t (*ReactionNotice.actionHandler.modify())(_QWORD)
{
  type metadata accessor for ReactionNotice(0);
  OUTLINED_FUNCTION_207_2();
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t key path getter for ReactionNotice.dismissHandler : ReactionNotice@<X0>(uint64_t a1@<X0>, void (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)();

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for ReactionNotice(0) + 44));
  v4 = *v3;
  v5 = v3[1];
  if (*v3)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = partial apply for thunk for @callee_guaranteed () -> ();
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (void (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ReactionNotice.dismissHandler : ReactionNotice(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)();
  uint64_t *v7;
  uint64_t v8;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = partial apply for thunk for @callee_guaranteed () -> ();
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(a2 + *(int *)(type metadata accessor for ReactionNotice(0) + 44));
  v8 = *v7;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  result = outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  return result;
}

void ReactionNotice.dismissHandler.getter()
{
  PushToTalkNotice.actionHandler.getter(type metadata accessor for ReactionNotice);
}

void ReactionNotice.dismissHandler.setter(uint64_t a1, uint64_t a2)
{
  PushToTalkNotice.actionHandler.setter(a1, a2, type metadata accessor for ReactionNotice);
}

uint64_t (*ReactionNotice.dismissHandler.modify())(_QWORD)
{
  OUTLINED_FUNCTION_323();
  OUTLINED_FUNCTION_206_0();
  return TPNumberPadCharacter.rawValue.getter;
}

double ReactionNotice.dismissalDuration.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for ReactionNotice(0) + 48));
}

void ReactionNotice.dismissalDuration.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + *(int *)(type metadata accessor for ReactionNotice(0) + 48)) = a1;
  OUTLINED_FUNCTION_360();
}

uint64_t (*ReactionNotice.dismissalDuration.modify())(_QWORD)
{
  type metadata accessor for ReactionNotice(0);
  OUTLINED_FUNCTION_205_1();
  return TPNumberPadCharacter.rawValue.getter;
}

void ReactionNotice.coalesce(with:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(_QWORD);
  uint64_t v19;
  void (*v20)(uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int isUniquelyReferenced_nonNull_native;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(_QWORD);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  BOOL v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53[8];
  uint64_t v54;
  uint64_t v55;
  uint64_t v56[2];
  int v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;

  OUTLINED_FUNCTION_93();
  v4 = v3;
  v69 = OUTLINED_FUNCTION_321();
  v5 = *(_QWORD *)(v69 - 8);
  MEMORY[0x1E0C80A78](v69);
  OUTLINED_FUNCTION_5_27();
  v62 = v6;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v56 - v8;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ParticipantReaction?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_253_1(v11, v56[0]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ReactionNotice?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v12);
  v13 = OUTLINED_FUNCTION_111_7();
  type metadata accessor for ReactionNotice(v13);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_0_7();
  outlined init with copy of RadarReporting(v4, (uint64_t)&v72);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Notice);
  v15 = OUTLINED_FUNCTION_97();
  if (!v15)
  {
    OUTLINED_FUNCTION_38_33(v2, 1);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v2, (uint64_t *)&demangling cache variable for type metadata for ReactionNotice?);
LABEL_45:
    OUTLINED_FUNCTION_52_1();
    return;
  }
  OUTLINED_FUNCTION_38_33(v2, 0);
  v16 = OUTLINED_FUNCTION_202_0();
  _s15ConversationKit11ParticipantVWObTm_1(v16, v17, v18);
  OUTLINED_FUNCTION_65_2();
  v68 = static Date.> infix(_:_:)();
  if ((v68 & 1) != 0)
  {
    OUTLINED_FUNCTION_33();
    v19 = OUTLINED_FUNCTION_124_0();
    v20(v19);
  }
  v21 = *(_QWORD *)v1;
  v22 = v62;
  v67 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  if (!v67)
  {
LABEL_44:
    outlined destroy of Participant(v1, type metadata accessor for ReactionNotice);
    goto LABEL_45;
  }
  v57 = v15;
  v58 = v1;
  v70 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v66 = v21 + v70;
  v23 = *(_QWORD *)(v5 + 72);
  v56[1] = v21;
  v24 = swift_bridgeObjectRetain();
  v25 = 0;
  v65 = 0;
  v59 = v0;
  while (1)
  {
    v26 = v66 + v23 * v25;
    v71 = v26;
    if ((v68 & 1) == 0)
    {
      v41 = *(_QWORD *)(*v0 + 16);
      if (v41)
      {
        v42 = *v0 + v70;
        OUTLINED_FUNCTION_14_2();
        OUTLINED_FUNCTION_26_22();
        while (1)
        {
          OUTLINED_FUNCTION_345_0(v42, (uint64_t)v9);
          if ((static UUID.== infix(_:_:)() & 1) != 0)
            break;
          v43 = OUTLINED_FUNCTION_49_16();
          outlined destroy of Participant(v43, v44);
          v42 += v23;
          if (!--v41)
          {
            v45 = 1;
            goto LABEL_28;
          }
        }
        OUTLINED_FUNCTION_344_1((uint64_t)v9, v61);
        v45 = 0;
LABEL_28:
        v22 = v62;
      }
      else
      {
        OUTLINED_FUNCTION_26_22();
        v45 = 1;
      }
      v46 = v61;
      v47 = v69;
      __swift_storeEnumTagSinglePayload(v61, v45, 1, v69);
      OUTLINED_FUNCTION_21_0();
      LODWORD(v47) = __swift_getEnumTagSinglePayload(v46, 1, v47);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v46, (uint64_t *)&demangling cache variable for type metadata for ParticipantReaction?);
      if ((_DWORD)v47 != 1)
        goto LABEL_41;
      goto LABEL_36;
    }
    v64 = v25;
    v63 = v56;
    MEMORY[0x1E0C80A78](v24);
    v55 = v26;
    v27 = v65;
    specialized MutableCollection._halfStablePartition(isSuffixElement:)((uint64_t)partial apply for closure #1 in ParticipantGridViewController.updateProminenceEMA(withParticipant:ema:audioPriority:videoPriority:), (uint64_t)v53, type metadata accessor for ParticipantReaction, (uint64_t (*)(uint64_t))specialized _ArrayBuffer._consumeAndCreateNew());
    v29 = *v0;
    v30 = *(_QWORD *)(*v0 + 16);
    if (v30 < v28)
      break;
    v31 = v28;
    if (v28 < 0)
      goto LABEL_47;
    v32 = v28 - v30;
    v33 = v28;
    if (__OFADD__(v30, v28 - v30))
      goto LABEL_48;
    v65 = v27;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v60 = v32;
    if (!isUniquelyReferenced_nonNull_native || v33 > *(_QWORD *)(v29 + 24) >> 1)
      v29 = OUTLINED_FUNCTION_260_1();
    v35 = v29 + v70;
    v36 = v31 * v23;
    v37 = v29 + v70 + v31 * v23;
    OUTLINED_FUNCTION_269_1();
    swift_arrayDestroy();
    v25 = v64;
    if (v30 != v31)
    {
      v38 = *(_QWORD *)(v29 + 16) - v30;
      if (v38 < 0)
        goto LABEL_50;
      if (v36 < v30 * v23 || v37 >= v35 + v30 * v23 + v38 * v23)
      {
        swift_arrayInitWithTakeFrontToBack();
        v40 = v60;
      }
      else
      {
        v40 = v60;
        if (v36 != v30 * v23)
          swift_arrayInitWithTakeBackToFront();
      }
      v48 = *(_QWORD *)(v29 + 16);
      v49 = __OFADD__(v48, v40);
      v50 = v48 + v40;
      if (v49)
        goto LABEL_49;
      *(_QWORD *)(v29 + 16) = v50;
    }
    v22 = v62;
    v0 = v59;
    *v59 = v29;
LABEL_36:
    OUTLINED_FUNCTION_345_0(v71, v22);
    v51 = *v0;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v51 = OUTLINED_FUNCTION_260_1();
    v52 = *(_QWORD *)(v51 + 16);
    if (v52 >= *(_QWORD *)(v51 + 24) >> 1)
      v51 = OUTLINED_FUNCTION_260_1();
    *(_QWORD *)(v51 + 16) = v52 + 1;
    OUTLINED_FUNCTION_344_1(v22, v51 + v70 + v52 * v23);
    *v0 = v51;
LABEL_41:
    if (++v25 == v67)
    {
      swift_bridgeObjectRelease();
      v1 = v58;
      goto LABEL_44;
    }
  }
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  LODWORD(v55) = 0;
  v54 = 1046;
  v53[0] = 2;
  _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
}

id ReactionNotice.reactionSymbols.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t KeyPath;
  NSString *v21;
  id result;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v2 = type metadata accessor for AttributedString.AttributeMergePolicy();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AttributeContainer.Builder<AttributeScopes.UIKitAttributes.AttachmentAttribute>);
  v36 = *(_QWORD *)(v6 - 8);
  v37 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = type metadata accessor for AttributeContainer();
  v39 = *(_QWORD *)(v41 - 8);
  v9 = MEMORY[0x1E0C80A78](v41);
  v38 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v35 = (char *)&v27 - v11;
  v12 = type metadata accessor for AttributedString();
  v33 = *(_QWORD *)(v12 - 8);
  v34 = v12;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = a1;
  AttributedString.init()();
  v15 = ReactionNotice.uniqueReactions.getter();
  v32 = *(_QWORD *)(v15 + 16);
  if (v32)
  {
    v28 = v5;
    v29 = v3;
    v30 = v2;
    v31 = type metadata accessor for UIImage();
    v16 = 0;
    while (1)
    {
      v17 = v15;
      v18 = *(char *)(v15 + v16 + 32);
      v42 = 12369903;
      MEMORY[0x1C3B72EB4](&v42, 3);
      v19 = v38;
      AttributeContainer.init()();
      KeyPath = swift_getKeyPath();
      *(&v27 - 2) = MEMORY[0x1E0C80A78](KeyPath);
      swift_getKeyPath();
      lazy protocol witness table accessor for type AttributeScopes.UIKitAttributes.AttachmentAttribute and conformance AttributeScopes.UIKitAttributes.AttachmentAttribute();
      AttributeContainer.subscript.getter();
      swift_release();
      (*(void (**)(char *, uint64_t))(v39 + 8))(v19, v41);
      v21 = objc_retainAutoreleasedReturnValue(AVCaptureReactionSystemImageNameForType(**((AVCaptureReactionType **)&unk_1E762D1B8
                                                                                        + v18)));
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      result = @nonobjc UIImage.__allocating_init(systemName:)();
      v23 = result;
      if (!result)
        break;
      ++v16;
      v24 = objc_msgSend((id)objc_opt_self(), sel_textAttachmentWithImage_, result);

      v42 = (uint64_t)v24;
      v25 = v37;
      AttributeContainer.Builder.callAsFunction(_:)();

      (*(void (**)(char *, uint64_t))(v36 + 8))(v8, v25);
      AttributedString.init(_:attributes:)();
      _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type AttributedString and conformance AttributedString, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF240], MEMORY[0x1E0CAF230]);
      v26 = v34;
      AttributedString.append<A>(_:)();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v26);
      v15 = v17;
      if (v32 == v16)
      {
        swift_bridgeObjectRelease();
        v3 = v29;
        v2 = v30;
        v5 = v28;
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_7:
    if (one-time initialization token for subjectContainer != -1)
      swift_once();
    __swift_project_value_buffer(v41, (uint64_t)static AttributedStrings.Notices.subjectContainer);
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0CAEFD8], v2);
    AttributedString.mergeAttributes(_:mergePolicy:)();
    return (id)(*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return result;
}

uint64_t ReactionNotice.noticeAccessory.getter()
{
  return AccountUpdateNotice.noticeAccessory.getter(type metadata accessor for ReactionNotice);
}

uint64_t AccountUpdateNotice.noticeAccessory.getter(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = OUTLINED_FUNCTION_161_2(a1);
  v2 = OUTLINED_FUNCTION_192_0(*(int *)(v1 + 52));
  return OUTLINED_FUNCTION_73_15(v2, v3);
}

void ReactionNotice.noticeAccessory.setter(uint64_t a1)
{
  AccountUpdateNotice.noticeAccessory.setter(a1, type metadata accessor for ReactionNotice);
}

void AccountUpdateNotice.noticeAccessory.setter(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_137_6(a1, a2);
  OUTLINED_FUNCTION_165_3(*(int *)(v2 + 52));
  OUTLINED_FUNCTION_18();
}

uint64_t (*ReactionNotice.noticeAccessory.modify())(_QWORD)
{
  OUTLINED_FUNCTION_323();
  OUTLINED_FUNCTION_204_1();
  return TPNumberPadCharacter.rawValue.getter;
}

void ReactionNotice.equalTo(notice:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(_QWORD);
  uint64_t v11;
  _BYTE v12[40];

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ReactionNotice?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  v6 = OUTLINED_FUNCTION_76_2();
  type metadata accessor for ReactionNotice(v6);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_4_1();
  outlined init with copy of RadarReporting(a1, (uint64_t)v12);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Notice);
  if (OUTLINED_FUNCTION_97())
  {
    OUTLINED_FUNCTION_83_0(v1, 0);
    v8 = OUTLINED_FUNCTION_65_2();
    _s15ConversationKit11ParticipantVWObTm_1(v8, v9, v10);
    if (*(_QWORD *)(*(_QWORD *)v2 + 16) == *(_QWORD *)(*(_QWORD *)v3 + 16))
      specialized static Array<A>.== infix(_:_:)();
    outlined destroy of Participant(v3, type metadata accessor for ReactionNotice);
  }
  else
  {
    v11 = OUTLINED_FUNCTION_83_0(v1, 1);
    OUTLINED_FUNCTION_96_3(v11, (uint64_t *)&demangling cache variable for type metadata for ReactionNotice?);
  }
  OUTLINED_FUNCTION_91();
}

uint64_t ReactionNotice.uniqueReactions.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  uint64_t v15;

  v15 = MEMORY[0x1E0DEE9E8];
  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 16);
  if (v2)
  {
    v3 = type metadata accessor for ParticipantReaction(0);
    v4 = *(_QWORD *)(v3 - 8);
    v5 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v6 = *(_QWORD *)(v4 + 72);
    swift_bridgeObjectRetain();
    v7 = MEMORY[0x1E0DEE9D8];
    do
    {
      v8 = *(_BYTE *)(v5 + *(int *)(v3 + 20));
      if ((specialized Set._Variant.insert(_:)(&v14, v8) & 1) != 0)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(v7 + 16) + 1, 1, v7);
          v7 = v11;
        }
        v10 = *(_QWORD *)(v7 + 16);
        v9 = *(_QWORD *)(v7 + 24);
        if (v10 >= v9 >> 1)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v9 > 1, v10 + 1, 1, v7);
          v7 = v12;
        }
        *(_QWORD *)(v7 + 16) = v10 + 1;
        *(_BYTE *)(v7 + v10 + 32) = v8;
      }
      v5 += v6;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t key path index equality operator for (KeyPath<AttributeScopes.UIKitAttributes, AttributeScopes.UIKitAttributes.AttachmentAttribute>)()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyPath<AttributeScopes.UIKitAttributes, AttributeScopes.UIKitAttributes.AttachmentAttribute>);
  return dispatch thunk of static Equatable.== infix(_:_:)() & 1;
}

uint64_t key path index hash operator for (KeyPath<AttributeScopes.UIKitAttributes, AttributeScopes.UIKitAttributes.AttachmentAttribute>)()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyPath<AttributeScopes.UIKitAttributes, AttributeScopes.UIKitAttributes.AttachmentAttribute>);
  return dispatch thunk of Hashable.hashValue.getter();
}

void key path getter for AttributeDynamicLookup.subscript<A>(dynamicMember:) : AttributeDynamicLookupAttributeScopes.UIKitAttributes.AttachmentAttribute()
{
  lazy protocol witness table accessor for type AttributeScopes.UIKitAttributes.AttachmentAttribute and conformance AttributeScopes.UIKitAttributes.AttachmentAttribute();
  AttributeDynamicLookup.subscript.getter();
  __break(1u);
}

uint64_t (*protocol witness for Notice.uuid.modify in conformance ReactionNotice())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t protocol witness for Notice.subtitle.getter in conformance ReactionNotice()
{
  return specialized Notice.subtitle.getter();
}

void ParticipantReaction.participant.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  _s15ConversationKit11ParticipantVWOcTm_3(v1, a1, type metadata accessor for Participant);
}

uint64_t ParticipantReaction.reaction.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ParticipantReaction(0) + 20));
}

void ParticipantReaction.init(participant:videoReaction:)(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  _s15ConversationKit11ParticipantVWObTm_1(a1, a3, type metadata accessor for Participant);
  *(_BYTE *)(a3 + *(int *)(type metadata accessor for ParticipantReaction(0) + 20)) = a2;
  OUTLINED_FUNCTION_0();
}

uint64_t ParticipantReaction.description.getter()
{
  uint64_t v0;
  void *v1;
  void *v2;
  Swift::String v3;
  Swift::String v4;
  void *v6;

  Participant.contactDetails.getter();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_53();

  OUTLINED_FUNCTION_64();
  v0 = OUTLINED_FUNCTION_229_2();
  v2 = v1;
  OUTLINED_FUNCTION_2_1();
  v3._countAndFlagsBits = v0;
  v3._object = v2;
  String.append(_:)(v3);
  OUTLINED_FUNCTION_133();
  v4._countAndFlagsBits = 8250;
  v4._object = (void *)0xE200000000000000;
  String.append(_:)(v4);
  type metadata accessor for ParticipantReaction(0);
  _print_unlocked<A, B>(_:_:)();
  return 0;
}

void static ParticipantReaction.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char v30;
  uint64_t v31;
  uint64_t (*v32)(_QWORD);

  OUTLINED_FUNCTION_96();
  a17 = v19;
  a18 = v20;
  v22 = v21;
  v24 = v23;
  v25 = OUTLINED_FUNCTION_321();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v26);
  OUTLINED_FUNCTION_74_10();
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)&a9 - v28;
  OUTLINED_FUNCTION_14_2();
  v30 = static UUID.== infix(_:_:)();
  OUTLINED_FUNCTION_294_0(v24, (uint64_t)v29);
  OUTLINED_FUNCTION_294_0(v22, v18);
  if ((v30 & 1) != 0)
    specialized == infix<A>(_:_:)(v29[*(int *)(v25 + 20)], *(unsigned __int8 *)(v18 + *(int *)(v25 + 20)));
  v31 = OUTLINED_FUNCTION_269_1();
  outlined destroy of Participant(v31, v32);
  outlined destroy of Participant((uint64_t)v29, type metadata accessor for ParticipantReaction);
  OUTLINED_FUNCTION_65_1();
}

void specialized MutableCollection._halfStablePartition(isSuffixElement:)(uint64_t a1, uint64_t a2)
{
  specialized MutableCollection._halfStablePartition(isSuffixElement:)(a1, a2, type metadata accessor for Participant, (uint64_t (*)(uint64_t))specialized _ArrayBuffer._consumeAndCreateNew());
}

void specialized MutableCollection._halfStablePartition(isSuffixElement:)(uint64_t (*a1)(uint64_t))
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v6;
  uint64_t v7;
  char v8;
  unint64_t v9;
  unint64_t i;
  char v11;
  uint64_t v12;
  unint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v16;
  uint64_t v17;
  _BYTE v18[16];
  _BYTE v19[16];

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  if (v4)
  {
    OUTLINED_FUNCTION_26_22();
    v6 = 0;
    v7 = 48;
    while (1)
    {
      v8 = a1(v3 + v7 - 16);
      if (v2)
      {
LABEL_6:
        OUTLINED_FUNCTION_21_0();
        return;
      }
      if ((v8 & 1) != 0)
        break;
      ++v6;
      v7 += 16;
      if (v4 == v6)
        goto LABEL_6;
    }
    OUTLINED_FUNCTION_21_0();
    if (!__OFADD__(v6, 1))
    {
      v9 = *(_QWORD *)(v3 + 16);
      if (v6 + 1 == v9)
        return;
      for (i = v6 + 1; i < v9; ++i)
      {
        outlined init with copy of WeakPlatformDisplayLinkObserver(v3 + v7, (uint64_t)v19);
        v11 = a1((uint64_t)v19);
        outlined destroy of WeakPlatformDisplayLinkObserver((uint64_t)v19);
        if ((v11 & 1) == 0)
        {
          if (i != v6)
          {
            if ((v6 & 0x8000000000000000) != 0)
              goto LABEL_30;
            v12 = *v1;
            v13 = *(_QWORD *)(*v1 + 16);
            if (v6 >= v13)
              goto LABEL_31;
            outlined init with copy of WeakPlatformDisplayLinkObserver(v12 + 16 * v6 + 32, (uint64_t)v19);
            if (i >= v13)
              goto LABEL_32;
            outlined init with copy of WeakPlatformDisplayLinkObserver(v12 + v7, (uint64_t)v18);
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            *v1 = v12;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              specialized _ArrayBuffer._consumeAndCreateNew()();
              v12 = v17;
              *v1 = v17;
            }
            if (v6 >= *(_QWORD *)(v12 + 16))
              goto LABEL_33;
            outlined assign with take of WeakPlatformDisplayLinkObserver((uint64_t)v18, v12 + 16 * v6 + 32);
            if (i >= *(_QWORD *)(*v1 + 16))
              goto LABEL_34;
            outlined assign with take of WeakPlatformDisplayLinkObserver((uint64_t)v19, *v1 + v7);
          }
          if (__OFADD__(v6++, 1))
            goto LABEL_29;
        }
        v16 = i + 1;
        if (__OFADD__(i, 1))
          goto LABEL_28;
        v3 = *v1;
        v9 = *(_QWORD *)(*v1 + 16);
        v7 += 16;
        if (v16 == v9)
          return;
      }
      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
    }
    __break(1u);
  }
}

void specialized MutableCollection._halfStablePartition(isSuffixElement:)(uint64_t (*a1)(unint64_t))
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);
  BOOL v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t (*v29)(unint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  unint64_t v34;
  uint64_t v35;

  v4 = type metadata accessor for UUID();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_5_27();
  v31 = v6;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_18_0();
  v30 = v8;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_62();
  v33 = v1;
  v11 = *v1;
  v12 = *(_QWORD *)(*v1 + 16);
  if (!v12)
    goto LABEL_11;
  v32 = v10;
  v13 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v35 = *(_QWORD *)(v5 + 72);
  OUTLINED_FUNCTION_26_22();
  v14 = 0;
  v28 = v13;
  while (1)
  {
    v15 = a1(v11 + v13);
    if (v2)
    {
LABEL_6:
      OUTLINED_FUNCTION_21_0();
      goto LABEL_11;
    }
    if ((v15 & 1) != 0)
      break;
    ++v14;
    v13 += v35;
    if (v12 == v14)
      goto LABEL_6;
  }
  OUTLINED_FUNCTION_21_0();
  if (!__OFADD__(v14, 1))
  {
    v16 = *(_QWORD *)(v11 + 16);
    if (v14 + 1 == v16)
    {
LABEL_11:
      OUTLINED_FUNCTION_1_29();
      return;
    }
    v17 = v35 + v13;
    v18 = v14 + 1;
    v29 = a1;
    while (v18 < v16)
    {
      v34 = v18;
      OUTLINED_FUNCTION_343_0(v32, v11 + v17);
      v19 = a1(v32);
      OUTLINED_FUNCTION_290_0();
      if ((v19 & 1) != 0)
      {
        a1 = v29;
        v20 = v34;
      }
      else
      {
        v20 = v34;
        if (v34 != v14)
        {
          if ((v14 & 0x8000000000000000) != 0)
            goto LABEL_32;
          v21 = *v33;
          v22 = *(_QWORD *)(*v33 + 16);
          if (v14 >= v22)
            goto LABEL_33;
          OUTLINED_FUNCTION_343_0(v30, v21 + v28 + v14 * v35);
          if (v34 >= v22)
            goto LABEL_34;
          OUTLINED_FUNCTION_343_0(v31, v21 + v17);
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *v33 = v21;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            v21 = specialized _ArrayBuffer._consumeAndCreateNew()();
            *v33 = v21;
          }
          if (v14 >= *(_QWORD *)(v21 + 16))
            goto LABEL_35;
          v24 = v21 + v28 + v14 * v35;
          v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 40);
          v25(v24, v31, v4);
          if (v34 >= *(_QWORD *)(*v33 + 16))
            goto LABEL_36;
          v25(*v33 + v17, v30, v4);
          v20 = v34;
        }
        v26 = __OFADD__(v14++, 1);
        a1 = v29;
        if (v26)
          goto LABEL_31;
      }
      v27 = v20 + 1;
      if (__OFADD__(v20, 1))
        goto LABEL_30;
      v11 = *v33;
      v16 = *(_QWORD *)(*v33 + 16);
      v18 = v20 + 1;
      v17 += v35;
      if (v27 == v16)
        goto LABEL_11;
    }
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
  }
  __break(1u);
}

void specialized MutableCollection._halfStablePartition(isSuffixElement:)(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t (*a4)(uint64_t))
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t (*v27)(_QWORD);
  char v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t (*v31)(_QWORD);
  char isUniquelyReferenced_nonNull_native;
  unint64_t v34;
  uint64_t *v35;
  uint64_t (*v36)(uint64_t);
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(_QWORD);
  uint64_t v42;
  uint64_t v43;

  v7 = v4;
  v43 = a1;
  v41 = a3;
  v8 = a3(0);
  MEMORY[0x1E0C80A78](v8);
  v39 = (uint64_t)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v10);
  v38 = (uint64_t)&v35 - v11;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v12);
  v40 = (uint64_t)&v35 - v14;
  v15 = *v4;
  v16 = *(_QWORD *)(*v4 + 16);
  if (!v16)
    goto LABEL_11;
  v36 = a4;
  v17 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v18 = *(_QWORD *)(v13 + 72);
  OUTLINED_FUNCTION_79_1();
  v19 = 0;
  v37 = v17;
  while (1)
  {
    v20 = OUTLINED_FUNCTION_377();
    if (v5)
    {
LABEL_6:
      OUTLINED_FUNCTION_25();
      goto LABEL_11;
    }
    if ((v20 & 1) != 0)
      break;
    ++v19;
    v17 += v18;
    if (v16 == v19)
      goto LABEL_6;
  }
  OUTLINED_FUNCTION_25();
  if (!__OFADD__(v19, 1))
  {
    v21 = *(_QWORD *)(v15 + 16);
    if (v19 + 1 == v21)
    {
LABEL_11:
      OUTLINED_FUNCTION_1_29();
      return;
    }
    v22 = v18 + v17;
    v23 = v19 + 1;
    v35 = v4;
    while (v23 < v21)
    {
      v24 = v18;
      v25 = v7;
      v42 = v22;
      v26 = v40;
      v27 = v41;
      _s15ConversationKit11ParticipantVWOcTm_3(v15 + v22, v40, v41);
      v28 = OUTLINED_FUNCTION_377();
      outlined destroy of Participant(v26, v27);
      if ((v28 & 1) != 0)
      {
        v7 = v25;
        v18 = v24;
      }
      else
      {
        v7 = v25;
        v18 = v24;
        if (v23 != v19)
        {
          if ((v19 & 0x8000000000000000) != 0)
            goto LABEL_32;
          v29 = *v25;
          v30 = *(_QWORD *)(*v25 + 16);
          if (v19 >= v30)
            goto LABEL_33;
          v31 = v41;
          _s15ConversationKit11ParticipantVWOcTm_3(v29 + v37 + v19 * v24, v38, v41);
          if (v23 >= v30)
            goto LABEL_34;
          _s15ConversationKit11ParticipantVWOcTm_3(v29 + v42, v39, v31);
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v7 = v35;
          *v35 = v29;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            v29 = v36(v29);
            *v7 = v29;
          }
          if (v19 >= *(_QWORD *)(v29 + 16))
            goto LABEL_35;
          outlined assign with take of SessionActionNotice(v39, v29 + v37 + v19 * v24, v31);
          if (v23 >= *(_QWORD *)(*v7 + 16))
            goto LABEL_36;
          outlined assign with take of SessionActionNotice(v38, *v7 + v42, v31);
        }
        if (__OFADD__(v19++, 1))
          goto LABEL_31;
      }
      v34 = v23 + 1;
      if (__OFADD__(v23, 1))
        goto LABEL_30;
      v15 = *v7;
      v21 = *(_QWORD *)(*v7 + 16);
      ++v23;
      v22 = v42 + v18;
      if (v34 == v21)
        goto LABEL_11;
    }
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
  }
  __break(1u);
}

uint64_t type metadata accessor for ParticipantReaction(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for ParticipantReaction);
}

void sub_1BD301634(_QWORD *a1@<X8>)
{
  AttributeScopes.conversationKit.getter();
  *a1 = &type metadata for AttributeScopes.ConversationKitAttributes;
  OUTLINED_FUNCTION_0();
}

void _s15ConversationKit11ParticipantVWOcTm_3(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_153_3(a1, a2, a3);
  OUTLINED_FUNCTION_38(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  OUTLINED_FUNCTION_0();
}

void outlined destroy of Participant(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_137_6(a1, a2);
  OUTLINED_FUNCTION_17_1(v2);
  OUTLINED_FUNCTION_0();
}

uint64_t type metadata accessor for SessionActionNotice(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for SessionActionNotice);
}

uint64_t type metadata accessor for AppLaunchNotice(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for AppLaunchNotice);
}

uint64_t type metadata accessor for PushToTalkNotice.NoticeType(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for PushToTalkNotice.NoticeType);
}

uint64_t type metadata accessor for PushToTalkNotice(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for PushToTalkNotice);
}

uint64_t type metadata accessor for AccountUpdateNotice(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for AccountUpdateNotice);
}

uint64_t type metadata accessor for ReactionNotice(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for ReactionNotice);
}

uint64_t outlined bridged method (pb) of @objc TUConversationNotice.item.getter(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_item);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

void _s15ConversationKit11ParticipantVWObTm_1(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_153_3(a1, a2, a3);
  OUTLINED_FUNCTION_38(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  OUTLINED_FUNCTION_0();
}

uint64_t type metadata accessor for SystemUpdateNotice(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for SystemUpdateNotice);
}

uint64_t outlined copy of NoticeAccessory(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 2)
    return swift_bridgeObjectRetain();
  return result;
}

void outlined assign with take of SessionActionNotice(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_153_3(a1, a2, a3);
  OUTLINED_FUNCTION_38(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40));
  OUTLINED_FUNCTION_0();
}

unint64_t lazy protocol witness table accessor for type NoticePriority and conformance NoticePriority()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type NoticePriority and conformance NoticePriority;
  if (!lazy protocol witness table cache variable for type NoticePriority and conformance NoticePriority)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for NoticePriority, &type metadata for NoticePriority);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type NoticePriority and conformance NoticePriority);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type NoticePriority and conformance NoticePriority;
  if (!lazy protocol witness table cache variable for type NoticePriority and conformance NoticePriority)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for NoticePriority, &type metadata for NoticePriority);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type NoticePriority and conformance NoticePriority);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ConversationNoticeStyle and conformance ConversationNoticeStyle()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ConversationNoticeStyle and conformance ConversationNoticeStyle;
  if (!lazy protocol witness table cache variable for type ConversationNoticeStyle and conformance ConversationNoticeStyle)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ConversationNoticeStyle, &type metadata for ConversationNoticeStyle);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ConversationNoticeStyle and conformance ConversationNoticeStyle);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ConversationNoticeSubtitleStyle and conformance ConversationNoticeSubtitleStyle()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ConversationNoticeSubtitleStyle and conformance ConversationNoticeSubtitleStyle;
  if (!lazy protocol witness table cache variable for type ConversationNoticeSubtitleStyle and conformance ConversationNoticeSubtitleStyle)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ConversationNoticeSubtitleStyle, &type metadata for ConversationNoticeSubtitleStyle);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ConversationNoticeSubtitleStyle and conformance ConversationNoticeSubtitleStyle);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type AccountUpdateNotice.NoticeType and conformance AccountUpdateNotice.NoticeType()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type AccountUpdateNotice.NoticeType and conformance AccountUpdateNotice.NoticeType;
  if (!lazy protocol witness table cache variable for type AccountUpdateNotice.NoticeType and conformance AccountUpdateNotice.NoticeType)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for AccountUpdateNotice.NoticeType, &type metadata for AccountUpdateNotice.NoticeType);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AccountUpdateNotice.NoticeType and conformance AccountUpdateNotice.NoticeType);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type SystemUpdateNotice.HandoffType and conformance SystemUpdateNotice.HandoffType()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SystemUpdateNotice.HandoffType and conformance SystemUpdateNotice.HandoffType;
  if (!lazy protocol witness table cache variable for type SystemUpdateNotice.HandoffType and conformance SystemUpdateNotice.HandoffType)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for SystemUpdateNotice.HandoffType, &type metadata for SystemUpdateNotice.HandoffType);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SystemUpdateNotice.HandoffType and conformance SystemUpdateNotice.HandoffType);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for NoticePriority(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFB)
  {
    if (a2 + 5 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 5) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 6;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v5 = v6 - 6;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for NoticePriority(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1BD301AA8 + 4 * byte_1BD6572A0[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1BD301ADC + 4 * byte_1BD65729B[v4]))();
}

uint64_t sub_1BD301ADC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD301AE4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD301AECLL);
  return result;
}

uint64_t sub_1BD301AF8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD301B00);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1BD301B04(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD301B0C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for NoticePriority()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t storeEnumTagSinglePayload for ConversationNoticeStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BD301B70 + 4 * byte_1BD6572AA[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BD301BA4 + 4 * byte_1BD6572A5[v4]))();
}

uint64_t sub_1BD301BA4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD301BAC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD301BB4);
  return result;
}

uint64_t sub_1BD301BC0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD301BC8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BD301BCC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD301BD4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for ConversationNoticeStyle()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for ConversationNoticeSubtitleStyle()
{
  OUTLINED_FUNCTION_34_0();
}

unint64_t destroy for NoticeAccessory(uint64_t a1)
{
  unint64_t result;

  result = *(_QWORD *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
    return swift_bridgeObjectRelease();
  return result;
}

void initializeBufferWithCopyOfBuffer for NoticeAccessory(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  OUTLINED_FUNCTION_0();
}

_QWORD *assignWithCopy for NoticeAccessory(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;

  v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for NoticeAccessory(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for NoticeAccessory(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 >= 3)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for NoticeAccessory(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 1;
  }
  return result;
}

void type metadata accessor for NoticeAccessory()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t dispatch thunk of Notice.uuid.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of Notice.uuid.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of Notice.uuid.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of Notice.date.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of Notice.isExpired.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of Notice.dismissalDuration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of Notice.priority.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of Notice.style.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of Notice.bundleIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of Notice.title.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of Notice.subtitle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of Notice.attributedSubtitle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of Notice.subtitleStyle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of Notice.fullSentence.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of Notice.description.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

uint64_t dispatch thunk of Notice.noticeAccessory.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 128))();
}

uint64_t dispatch thunk of Notice.shouldTransitionToHUD.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 136))();
}

uint64_t dispatch thunk of Notice.isSticky.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 144))();
}

uint64_t dispatch thunk of Notice.shouldPerformActionHandlerOnNoticeTap.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 152))();
}

uint64_t dispatch thunk of Notice.actionHandler.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 160))();
}

uint64_t dispatch thunk of Notice.actionHandler.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 168))();
}

uint64_t dispatch thunk of Notice.actionHandler.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 176))();
}

uint64_t dispatch thunk of Notice.dismissHandler.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 184))();
}

uint64_t dispatch thunk of Notice.dismissHandler.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 192))();
}

uint64_t dispatch thunk of Notice.dismissHandler.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 200))();
}

uint64_t dispatch thunk of Notice.coalesce(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 208))();
}

uint64_t dispatch thunk of Notice.shouldReplace(notice:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 216))();
}

uint64_t dispatch thunk of Notice.equalTo(notice:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 224))();
}

_QWORD *initializeBufferWithCopyOfBuffer for SessionActivationRequestNotice(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  __int128 v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *a1 = v5;
    a1 = (_QWORD *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v9 = a2[1];
    v8 = a2[2];
    *a1 = v5;
    a1[1] = v9;
    a1[2] = v8;
    v10 = a3[6];
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = type metadata accessor for UUID();
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_retain();
    v14(v11, v12, v13);
    v15 = a3[7];
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    v18 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
    v19 = a3[9];
    *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    *((_BYTE *)a1 + v19) = *((_BYTE *)a2 + v19);
    v20 = a3[11];
    *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
    v21 = (_QWORD *)((char *)a1 + v20);
    v22 = (_QWORD *)((char *)a2 + v20);
    v23 = v22[1];
    if (v23 >= 2)
    {
      *v21 = *v22;
      v21[1] = v23;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)v21 = *(_OWORD *)v22;
    }
    v24 = a3[12];
    v25 = (_QWORD *)((char *)a1 + v24);
    v26 = (_QWORD *)((char *)a2 + v24);
    if (*v26)
    {
      v27 = v26[1];
      *v25 = *v26;
      v25[1] = v27;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v25 = *(_OWORD *)v26;
    }
    v28 = a3[13];
    v29 = (_QWORD *)((char *)a1 + v28);
    v30 = (_QWORD *)((char *)a2 + v28);
    if (*v30)
    {
      v31 = v30[1];
      *v29 = *v30;
      v29[1] = v31;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v29 = *(_OWORD *)v30;
    }
    v32 = a3[14];
    v33 = a3[15];
    v34 = (_QWORD *)((char *)a1 + v32);
    v35 = (_QWORD *)((char *)a2 + v32);
    v36 = v35[1];
    *v34 = *v35;
    v34[1] = v36;
    v37 = (char *)a1 + v33;
    v38 = (char *)a2 + v33;
    v39 = *(_OWORD *)(v38 + 24);
    *(_OWORD *)((char *)a1 + v33 + 24) = v39;
    v40 = v39;
    v41 = **(void (***)(char *, char *, uint64_t))(v39 - 8);
    swift_bridgeObjectRetain();
    v41(v37, v38, v40);
  }
  return a1;
}

uint64_t destroy for SessionActivationRequestNotice(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_release();
  v4 = a1 + a2[6];
  v5 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + a2[7];
  v7 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  if (*(_QWORD *)(a1 + a2[11] + 8) >= 2uLL)
    swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[12]))
    swift_release();
  if (*(_QWORD *)(a1 + a2[13]))
    swift_release();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1(a1 + a2[15]);
}

_QWORD *initializeWithCopy for SessionActivationRequestNotice(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  __int128 v36;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  v7 = a3[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for UUID();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_retain();
  v11(v8, v9, v10);
  v12 = a3[7];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  v16 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *((_BYTE *)a1 + v16) = *((_BYTE *)a2 + v16);
  v17 = a3[11];
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  v20 = v19[1];
  if (v20 >= 2)
  {
    *v18 = *v19;
    v18[1] = v20;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v18 = *(_OWORD *)v19;
  }
  v21 = a3[12];
  v22 = (_QWORD *)((char *)a1 + v21);
  v23 = (_QWORD *)((char *)a2 + v21);
  if (*v23)
  {
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v22 = *(_OWORD *)v23;
  }
  v25 = a3[13];
  v26 = (_QWORD *)((char *)a1 + v25);
  v27 = (_QWORD *)((char *)a2 + v25);
  if (*v27)
  {
    v28 = v27[1];
    *v26 = *v27;
    v26[1] = v28;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v26 = *(_OWORD *)v27;
  }
  v29 = a3[14];
  v30 = a3[15];
  v31 = (_QWORD *)((char *)a1 + v29);
  v32 = (_QWORD *)((char *)a2 + v29);
  v33 = v32[1];
  *v31 = *v32;
  v31[1] = v33;
  v34 = (char *)a1 + v30;
  v35 = (char *)a2 + v30;
  v36 = *(_OWORD *)(v35 + 24);
  *(_OWORD *)((char *)a1 + v30 + 24) = v36;
  v37 = v36;
  v38 = **(void (***)(char *, char *, uint64_t))(v36 - 8);
  swift_bridgeObjectRetain();
  v38(v34, v35, v37);
  return a1;
}

_QWORD *assignWithCopy for SessionActivationRequestNotice(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  v7 = a3[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[7];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  v15 = a3[11];
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  v18 = *(_QWORD *)((char *)a1 + v15 + 8);
  v19 = *(_QWORD *)((char *)a2 + v15 + 8);
  if (v18 < 2)
  {
    if (v19 >= 2)
    {
      *v16 = *v17;
      v16[1] = v17[1];
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v19 < 2)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v16, &demangling cache variable for type metadata for (title: String));
LABEL_6:
    *(_OWORD *)v16 = *(_OWORD *)v17;
    goto LABEL_8;
  }
  *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_8:
  v20 = a3[12];
  v21 = (_QWORD *)((char *)a1 + v20);
  v22 = (char *)a2 + v20;
  v23 = *(_QWORD *)((char *)a1 + v20);
  v24 = *(_QWORD *)((char *)a2 + v20);
  if (v23)
  {
    if (v24)
    {
      v25 = *((_QWORD *)v22 + 1);
      *v21 = v24;
      v21[1] = v25;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v24)
  {
    v26 = *((_QWORD *)v22 + 1);
    *v21 = v24;
    v21[1] = v26;
    swift_retain();
    goto LABEL_15;
  }
  *(_OWORD *)v21 = *(_OWORD *)v22;
LABEL_15:
  v27 = a3[13];
  v28 = (_QWORD *)((char *)a1 + v27);
  v29 = (char *)a2 + v27;
  v30 = *(_QWORD *)((char *)a1 + v27);
  v31 = *(_QWORD *)((char *)a2 + v27);
  if (!v30)
  {
    if (v31)
    {
      v33 = *((_QWORD *)v29 + 1);
      *v28 = v31;
      v28[1] = v33;
      swift_retain();
      goto LABEL_22;
    }
LABEL_21:
    *(_OWORD *)v28 = *(_OWORD *)v29;
    goto LABEL_22;
  }
  if (!v31)
  {
    swift_release();
    goto LABEL_21;
  }
  v32 = *((_QWORD *)v29 + 1);
  *v28 = v31;
  v28[1] = v32;
  swift_retain();
  swift_release();
LABEL_22:
  v34 = a3[14];
  v35 = (_QWORD *)((char *)a1 + v34);
  v36 = (_QWORD *)((char *)a2 + v34);
  *v35 = *v36;
  v35[1] = v36[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1((_QWORD *)((char *)a1 + a3[15]), (_QWORD *)((char *)a2 + a3[15]));
  return a1;
}

uint64_t initializeWithTake for SessionActivationRequestNotice(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = a3[6];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  v14 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_BYTE *)(a1 + v14) = *(_BYTE *)(a2 + v14);
  v15 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_OWORD *)(a1 + v15) = *(_OWORD *)(a2 + v15);
  v16 = a3[12];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (uint64_t *)(a2 + v16);
  v19 = *v18;
  if (*v18)
  {
    v20 = v18[1];
    *v17 = v19;
    v17[1] = v20;
  }
  else
  {
    *(_OWORD *)v17 = *(_OWORD *)v18;
  }
  v21 = a3[13];
  v22 = (_QWORD *)(a1 + v21);
  v23 = (uint64_t *)(a2 + v21);
  v24 = *v23;
  if (*v23)
  {
    v25 = v23[1];
    *v22 = v24;
    v22[1] = v25;
  }
  else
  {
    *(_OWORD *)v22 = *(_OWORD *)v23;
  }
  v26 = a3[15];
  *(_OWORD *)(a1 + a3[14]) = *(_OWORD *)(a2 + a3[14]);
  v27 = a1 + v26;
  v28 = a2 + v26;
  v29 = *(_OWORD *)(v28 + 16);
  *(_OWORD *)v27 = *(_OWORD *)v28;
  *(_OWORD *)(v27 + 16) = v29;
  *(_QWORD *)(v27 + 32) = *(_QWORD *)(v28 + 32);
  return a1;
}

uint64_t assignWithTake for SessionActivationRequestNotice(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = a3[6];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[7];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  v14 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_BYTE *)(a1 + v14) = *(_BYTE *)(a2 + v14);
  v15 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v16 = a1 + v15;
  v17 = a2 + v15;
  if (*(_QWORD *)(a1 + v15 + 8) < 2uLL)
    goto LABEL_4;
  v18 = *(_QWORD *)(v17 + 8);
  if (v18 < 2)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(a1 + v15, &demangling cache variable for type metadata for (title: String));
LABEL_4:
    *(_OWORD *)v16 = *(_OWORD *)v17;
    goto LABEL_6;
  }
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *(_QWORD *)(v16 + 8) = v18;
  swift_bridgeObjectRelease();
LABEL_6:
  v19 = a3[12];
  v20 = (_QWORD *)(a1 + v19);
  v21 = a2 + v19;
  v22 = *(_QWORD *)(a1 + v19);
  v23 = *(_QWORD *)(a2 + v19);
  if (v22)
  {
    if (v23)
    {
      v24 = *(_QWORD *)(v21 + 8);
      *v20 = v23;
      v20[1] = v24;
      swift_release();
      goto LABEL_13;
    }
    swift_release();
  }
  else if (v23)
  {
    v25 = *(_QWORD *)(v21 + 8);
    *v20 = v23;
    v20[1] = v25;
    goto LABEL_13;
  }
  *(_OWORD *)v20 = *(_OWORD *)v21;
LABEL_13:
  v26 = a3[13];
  v27 = (_QWORD *)(a1 + v26);
  v28 = a2 + v26;
  v29 = *(_QWORD *)(a1 + v26);
  v30 = *(_QWORD *)(a2 + v26);
  if (!v29)
  {
    if (v30)
    {
      v32 = *(_QWORD *)(v28 + 8);
      *v27 = v30;
      v27[1] = v32;
      goto LABEL_20;
    }
LABEL_19:
    *(_OWORD *)v27 = *(_OWORD *)v28;
    goto LABEL_20;
  }
  if (!v30)
  {
    swift_release();
    goto LABEL_19;
  }
  v31 = *(_QWORD *)(v28 + 8);
  *v27 = v30;
  v27[1] = v31;
  swift_release();
LABEL_20:
  v33 = a3[14];
  v34 = (_QWORD *)(a1 + v33);
  v35 = (uint64_t *)(a2 + v33);
  v37 = *v35;
  v36 = v35[1];
  *v34 = v37;
  v34[1] = v36;
  swift_bridgeObjectRelease();
  v38 = a3[15];
  v39 = a1 + v38;
  v40 = a2 + v38;
  __swift_destroy_boxed_opaque_existential_1(a1 + v38);
  v41 = *(_OWORD *)(v40 + 16);
  *(_OWORD *)v39 = *(_OWORD *)v40;
  *(_OWORD *)(v39 + 16) = v41;
  *(_QWORD *)(v39 + 32) = *(_QWORD *)(v40 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionActivationRequestNotice()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1BD3028AC()
{
  unint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_220();
  if (v3)
  {
    OUTLINED_FUNCTION_93_0(*v0);
    OUTLINED_FUNCTION_18();
  }
  else
  {
    v2 = v1;
    OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_44_6();
    if (v3)
    {
      OUTLINED_FUNCTION_276();
    }
    else
    {
      OUTLINED_FUNCTION_33();
      v4 = *(int *)(v2 + 28);
    }
    v5 = OUTLINED_FUNCTION_295(v4);
    OUTLINED_FUNCTION_1_16(v5, v6, v7);
  }
}

uint64_t storeEnumTagSinglePayload for SessionActivationRequestNotice()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BD302914()
{
  int v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_15_13();
  if (v4)
  {
    *v1 = (v0 - 1);
    OUTLINED_FUNCTION_18();
  }
  else
  {
    v3 = v2;
    OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_45_7();
    if (v4)
    {
      OUTLINED_FUNCTION_316_0();
    }
    else
    {
      OUTLINED_FUNCTION_33();
      v5 = *(int *)(v3 + 28);
    }
    v6 = OUTLINED_FUNCTION_146_0(v5);
    OUTLINED_FUNCTION_0_29(v6, v7, v8, v9);
  }
}

uint64_t type metadata completion function for SessionActivationRequestNotice()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for Date();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for AccountUpdateNotice(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  _QWORD *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  unint64_t v36;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v28 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    a1[1] = a2[1];
    v7 = a3[6];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for UUID();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
    v12 = a3[7];
    v13 = (char *)v4 + v12;
    v14 = (char *)a2 + v12;
    v15 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[9];
    *((_BYTE *)v4 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    v17 = (_QWORD *)((char *)v4 + v16);
    v18 = (_QWORD *)((char *)a2 + v16);
    v20 = *v18;
    v19 = v18[1];
    v21 = a3[10];
    v22 = a3[11];
    v23 = *((_BYTE *)a2 + v21);
    *v17 = v20;
    v17[1] = v19;
    *((_BYTE *)v4 + v21) = v23;
    v24 = (_QWORD *)((char *)v4 + v22);
    v25 = (char *)a2 + v22;
    v26 = *(_QWORD *)((char *)a2 + v22);
    swift_bridgeObjectRetain();
    if (v26)
    {
      v27 = *((_QWORD *)v25 + 1);
      *v24 = v26;
      v24[1] = v27;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v24 = *(_OWORD *)v25;
    }
    v29 = a3[12];
    v30 = (_QWORD *)((char *)v4 + v29);
    v31 = (_QWORD *)((char *)a2 + v29);
    if (*v31)
    {
      v32 = v31[1];
      *v30 = *v31;
      v30[1] = v32;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v30 = *(_OWORD *)v31;
    }
    v33 = a3[13];
    v34 = (_QWORD *)((char *)v4 + v33);
    v35 = (_QWORD *)((char *)a2 + v33);
    v36 = v35[1];
    if (v36 >= 2)
    {
      *v34 = *v35;
      v34[1] = v36;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)v34 = *(_OWORD *)v35;
    }
  }
  return v4;
}

unint64_t destroy for AccountUpdateNotice(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[6];
  v5 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + a2[7];
  v7 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[11]))
    swift_release();
  if (*(_QWORD *)(a1 + a2[12]))
    swift_release();
  result = *(_QWORD *)(a1 + a2[13] + 8);
  if (result >= 2)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t initializeWithCopy for AccountUpdateNotice(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  unint64_t v34;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v6 = a3[6];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = type metadata accessor for UUID();
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  v11 = a3[7];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v16 = (_QWORD *)(a1 + v15);
  v17 = (uint64_t *)(a2 + v15);
  v19 = *v17;
  v18 = v17[1];
  v20 = a3[10];
  v21 = a3[11];
  v22 = *(_BYTE *)(a2 + v20);
  *v16 = v19;
  v16[1] = v18;
  *(_BYTE *)(a1 + v20) = v22;
  v23 = (_QWORD *)(a1 + v21);
  v24 = a2 + v21;
  v25 = *(_QWORD *)(a2 + v21);
  swift_bridgeObjectRetain();
  if (v25)
  {
    v26 = *(_QWORD *)(v24 + 8);
    *v23 = v25;
    v23[1] = v26;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v23 = *(_OWORD *)v24;
  }
  v27 = a3[12];
  v28 = (_QWORD *)(a1 + v27);
  v29 = (_QWORD *)(a2 + v27);
  if (*v29)
  {
    v30 = v29[1];
    *v28 = *v29;
    v28[1] = v30;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v28 = *(_OWORD *)v29;
  }
  v31 = a3[13];
  v32 = (_QWORD *)(a1 + v31);
  v33 = (_QWORD *)(a2 + v31);
  v34 = v33[1];
  if (v34 >= 2)
  {
    *v32 = *v33;
    v32[1] = v34;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v32 = *(_OWORD *)v33;
  }
  return a1;
}

uint64_t assignWithCopy for AccountUpdateNotice(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  unint64_t v34;
  unint64_t v35;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[6];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[7];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v14 = a3[9];
  v15 = (_QWORD *)(a1 + v14);
  v16 = (_QWORD *)(a2 + v14);
  *v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v17 = a3[11];
  v18 = (_QWORD *)(a1 + v17);
  v19 = a2 + v17;
  v20 = *(_QWORD *)(a1 + v17);
  v21 = *(_QWORD *)(a2 + v17);
  if (v20)
  {
    if (v21)
    {
      v22 = *(_QWORD *)(v19 + 8);
      *v18 = v21;
      v18[1] = v22;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v21)
  {
    v23 = *(_QWORD *)(v19 + 8);
    *v18 = v21;
    v18[1] = v23;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)v18 = *(_OWORD *)v19;
LABEL_8:
  v24 = a3[12];
  v25 = (_QWORD *)(a1 + v24);
  v26 = a2 + v24;
  v27 = *(_QWORD *)(a1 + v24);
  v28 = *(_QWORD *)(a2 + v24);
  if (v27)
  {
    if (v28)
    {
      v29 = *(_QWORD *)(v26 + 8);
      *v25 = v28;
      v25[1] = v29;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v28)
  {
    v30 = *(_QWORD *)(v26 + 8);
    *v25 = v28;
    v25[1] = v30;
    swift_retain();
    goto LABEL_15;
  }
  *(_OWORD *)v25 = *(_OWORD *)v26;
LABEL_15:
  v31 = a3[13];
  v32 = (_QWORD *)(a1 + v31);
  v33 = (_QWORD *)(a2 + v31);
  v34 = *(_QWORD *)(a1 + v31 + 8);
  v35 = v33[1];
  if (v34 >= 2)
  {
    if (v35 >= 2)
    {
      *v32 = *v33;
      v32[1] = v33[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v32, &demangling cache variable for type metadata for (title: String));
    goto LABEL_20;
  }
  if (v35 < 2)
  {
LABEL_20:
    *(_OWORD *)v32 = *(_OWORD *)v33;
    return a1;
  }
  *v32 = *v33;
  v32[1] = v33[1];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t initializeWithTake for AccountUpdateNotice(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v6 = a3[6];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  v14 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_OWORD *)(a1 + v14) = *(_OWORD *)(a2 + v14);
  v15 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v16 = (_QWORD *)(a1 + v15);
  v17 = (uint64_t *)(a2 + v15);
  v18 = *v17;
  if (*v17)
  {
    v19 = v17[1];
    *v16 = v18;
    v16[1] = v19;
  }
  else
  {
    *(_OWORD *)v16 = *(_OWORD *)v17;
  }
  v20 = a3[12];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (uint64_t *)(a2 + v20);
  v23 = *v22;
  if (*v22)
  {
    v24 = v22[1];
    *v21 = v23;
    v21[1] = v24;
  }
  else
  {
    *(_OWORD *)v21 = *(_OWORD *)v22;
  }
  *(_OWORD *)(a1 + a3[13]) = *(_OWORD *)(a2 + a3[13]);
  return a1;
}

uint64_t assignWithTake for AccountUpdateNotice(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  unint64_t v35;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  v6 = a3[6];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[7];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  v14 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v15 = (_QWORD *)(a1 + v14);
  v16 = (uint64_t *)(a2 + v14);
  v18 = *v16;
  v17 = v16[1];
  *v15 = v18;
  v15[1] = v17;
  swift_bridgeObjectRelease();
  v19 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v20 = (_QWORD *)(a1 + v19);
  v21 = a2 + v19;
  v22 = *(_QWORD *)(a2 + v19);
  if (*(_QWORD *)(a1 + v19))
  {
    if (v22)
    {
      v23 = *(_QWORD *)(v21 + 8);
      *v20 = v22;
      v20[1] = v23;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v22)
  {
    v24 = *(_QWORD *)(v21 + 8);
    *v20 = v22;
    v20[1] = v24;
    goto LABEL_8;
  }
  *(_OWORD *)v20 = *(_OWORD *)v21;
LABEL_8:
  v25 = a3[12];
  v26 = (_QWORD *)(a1 + v25);
  v27 = a2 + v25;
  v28 = *(_QWORD *)(a1 + v25);
  v29 = *(_QWORD *)(a2 + v25);
  if (v28)
  {
    if (v29)
    {
      v30 = *(_QWORD *)(v27 + 8);
      *v26 = v29;
      v26[1] = v30;
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v29)
  {
    v31 = *(_QWORD *)(v27 + 8);
    *v26 = v29;
    v26[1] = v31;
    goto LABEL_15;
  }
  *(_OWORD *)v26 = *(_OWORD *)v27;
LABEL_15:
  v32 = a3[13];
  v33 = (_QWORD *)(a1 + v32);
  v34 = (_QWORD *)(a2 + v32);
  if (*(_QWORD *)(a1 + v32 + 8) >= 2uLL)
  {
    v35 = v34[1];
    if (v35 >= 2)
    {
      *v33 = *v34;
      v33[1] = v35;
      swift_bridgeObjectRelease();
      return a1;
    }
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v33, &demangling cache variable for type metadata for (title: String));
  }
  *(_OWORD *)v33 = *(_OWORD *)v34;
  return a1;
}

uint64_t getEnumTagSinglePayload for AccountUpdateNotice()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1BD303324()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_220();
  if (v3)
  {
    OUTLINED_FUNCTION_93_0(*(_QWORD *)(v0 + 8));
    OUTLINED_FUNCTION_18();
  }
  else
  {
    v2 = v1;
    OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_44_6();
    if (v3)
    {
      OUTLINED_FUNCTION_276();
    }
    else
    {
      OUTLINED_FUNCTION_33();
      v4 = *(int *)(v2 + 28);
    }
    v5 = OUTLINED_FUNCTION_295(v4);
    OUTLINED_FUNCTION_1_16(v5, v6, v7);
  }
}

uint64_t storeEnumTagSinglePayload for AccountUpdateNotice()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BD30338C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_15_13();
  if (v4)
  {
    *(_QWORD *)(v1 + 8) = (v0 - 1);
    OUTLINED_FUNCTION_18();
  }
  else
  {
    v3 = v2;
    OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_45_7();
    if (v4)
    {
      OUTLINED_FUNCTION_316_0();
    }
    else
    {
      OUTLINED_FUNCTION_33();
      v5 = *(int *)(v3 + 28);
    }
    v6 = OUTLINED_FUNCTION_146_0(v5);
    OUTLINED_FUNCTION_0_29(v6, v7, v8, v9);
  }
}

uint64_t type metadata completion function for AccountUpdateNotice()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for Date();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void type metadata accessor for AccountUpdateNotice.NoticeType()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t *initializeBufferWithCopyOfBuffer for SessionActionNotice(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  const void *v27;
  size_t v28;
  __int128 v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  __int128 v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  uint64_t v76;
  __int128 v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = *a2;
    v8 = a2[1];
    v9 = a2[2];
    v10 = a2[3];
    outlined copy of SessionActionNotice.NoticeType(*a2, v8, v9);
    *a1 = v7;
    a1[1] = v8;
    a1[2] = v9;
    a1[3] = v10;
    v11 = a3[5];
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = (int *)type metadata accessor for Participant(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, (uint64_t)v14))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      v17 = type metadata accessor for Participant.State(0);
      v106 = (uint64_t)v12;
      v107 = (uint64_t)v14;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 2u:
        case 3u:
        case 5u:
          v18 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v12, v13, v18);
          goto LABEL_21;
        case 4u:
          v19 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v12, v13, v19);
          v105 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
          v20 = *(int *)(v105 + 48);
          v21 = &v12[v20];
          v22 = &v13[v20];
          *(_OWORD *)v21 = *(_OWORD *)&v13[v20];
          v23 = *(_QWORD *)&v13[v20 + 16];
          v24 = *(_QWORD *)&v13[v20 + 24];
          *((_QWORD *)v21 + 2) = v23;
          *((_QWORD *)v21 + 3) = v24;
          *((_WORD *)v21 + 16) = *((_WORD *)v22 + 16);
          *((_QWORD *)v21 + 5) = *((_QWORD *)v22 + 5);
          v21[48] = v22[48];
          *(_OWORD *)(v21 + 56) = *(_OWORD *)(v22 + 56);
          *(_OWORD *)(v21 + 72) = *(_OWORD *)(v22 + 72);
          v21[88] = v22[88];
          v21[89] = v22[89];
          v25 = *((_QWORD *)v22 + 15);
          swift_bridgeObjectRetain();
          if (v25)
          {
            if (v25 == 1)
            {
              v26 = v21 + 96;
              v27 = v22 + 96;
              v28 = 209;
              goto LABEL_14;
            }
            v30 = *((_QWORD *)v22 + 16);
            *((_QWORD *)v21 + 15) = v25;
            *((_QWORD *)v21 + 16) = v30;
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v25 - 8))((uint64_t)(v21 + 96), (uint64_t)(v22 + 96), v25);
          }
          else
          {
            v29 = *((_OWORD *)v22 + 7);
            *((_OWORD *)v21 + 6) = *((_OWORD *)v22 + 6);
            *((_OWORD *)v21 + 7) = v29;
            *((_QWORD *)v21 + 16) = *((_QWORD *)v22 + 16);
          }
          *((_DWORD *)v21 + 34) = *((_DWORD *)v22 + 34);
          v31 = *((_OWORD *)v22 + 10);
          *((_OWORD *)v21 + 9) = *((_OWORD *)v22 + 9);
          *((_OWORD *)v21 + 10) = v31;
          *((_OWORD *)v21 + 11) = *((_OWORD *)v22 + 11);
          v21[192] = v22[192];
          v26 = v21 + 208;
          v27 = v22 + 208;
          *((_QWORD *)v21 + 25) = *((_QWORD *)v22 + 25);
          v28 = 97;
LABEL_14:
          memcpy(v26, v27, v28);
          v32 = *((_QWORD *)v22 + 39);
          if (v32)
          {
            v33 = *((_QWORD *)v22 + 40);
            v34 = *((_QWORD *)v22 + 41);
            *((_QWORD *)v21 + 39) = v32;
            *((_QWORD *)v21 + 40) = v33;
            *((_QWORD *)v21 + 41) = v34;
            swift_unknownObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v21 + 312) = *(_OWORD *)(v22 + 312);
            *((_QWORD *)v21 + 41) = *((_QWORD *)v22 + 41);
          }
          v12 = (char *)v106;
          v35 = *(int *)(v105 + 64);
          v36 = v106 + v35;
          v37 = &v13[v35];
          v38 = *((_QWORD *)v37 + 1);
          if (v38)
          {
            *(_QWORD *)v36 = *(_QWORD *)v37;
            *(_QWORD *)(v36 + 8) = v38;
            v39 = *((_QWORD *)v37 + 3);
            *(_QWORD *)(v36 + 16) = *((_QWORD *)v37 + 2);
            *(_QWORD *)(v36 + 24) = v39;
            *(_BYTE *)(v36 + 32) = v37[32];
            *(_OWORD *)(v36 + 40) = *(_OWORD *)(v37 + 40);
            *(_QWORD *)(v36 + 56) = *((_QWORD *)v37 + 7);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            v40 = *((_OWORD *)v37 + 1);
            *(_OWORD *)v36 = *(_OWORD *)v37;
            *(_OWORD *)(v36 + 16) = v40;
            v41 = *((_OWORD *)v37 + 3);
            *(_OWORD *)(v36 + 32) = *((_OWORD *)v37 + 2);
            *(_OWORD *)(v36 + 48) = v41;
          }
          v14 = (int *)v107;
LABEL_21:
          swift_storeEnumTagMultiPayload();
LABEL_22:
          v42 = v14[5];
          v43 = &v12[v42];
          v44 = &v13[v42];
          v45 = type metadata accessor for UUID();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v43, v44, v45);
          v46 = v14[6];
          v47 = &v12[v46];
          v48 = &v13[v46];
          v47[4] = v48[4];
          *(_DWORD *)v47 = *(_DWORD *)v48;
          v49 = v14[7];
          v50 = &v12[v49];
          v51 = &v13[v49];
          v52 = *(void **)v51;
          if (*(_QWORD *)v51)
          {
            v53 = *((_QWORD *)v51 + 1);
            *(_QWORD *)v50 = v52;
            *((_QWORD *)v50 + 1) = v53;
            v50[16] = v51[16];
            v54 = *((_QWORD *)v51 + 4);
            *((_QWORD *)v50 + 3) = *((_QWORD *)v51 + 3);
            *((_QWORD *)v50 + 4) = v54;
            v55 = v52;
            swift_bridgeObjectRetain();
          }
          else
          {
            v56 = *((_OWORD *)v51 + 1);
            *(_OWORD *)v50 = *(_OWORD *)v51;
            *((_OWORD *)v50 + 1) = v56;
            *((_QWORD *)v50 + 4) = *((_QWORD *)v51 + 4);
          }
          *(_QWORD *)&v12[v14[8]] = *(_QWORD *)&v13[v14[8]];
          v57 = v14[9];
          v58 = &v12[v57];
          v59 = &v13[v57];
          v60 = *((_QWORD *)v59 + 1);
          *(_QWORD *)v58 = *(_QWORD *)v59;
          *((_QWORD *)v58 + 1) = v60;
          v12[v14[10]] = v13[v14[10]];
          *(_QWORD *)&v12[v14[11]] = *(_QWORD *)&v13[v14[11]];
          v61 = v14[12];
          v62 = *(void **)&v13[v61];
          *(_QWORD *)&v12[v61] = v62;
          v12[v14[13]] = v13[v14[13]];
          v63 = v14[14];
          v64 = &v12[v63];
          v104 = v13;
          v65 = &v13[v63];
          v66 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v67 = v62;
          if (__swift_getEnumTagSinglePayload((uint64_t)v65, 1, v66))
          {
            v68 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
            memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 16))(v64, v65, v66);
            __swift_storeEnumTagSinglePayload((uint64_t)v64, 0, 1, v66);
          }
          v69 = type metadata accessor for Participant.CountdownInfo(0);
          v70 = *(int *)(v69 + 20);
          v71 = &v64[v70];
          v72 = &v65[v70];
          if (__swift_getEnumTagSinglePayload((uint64_t)&v65[v70], 1, v66))
          {
            v73 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
            memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 16))(v71, v72, v66);
            __swift_storeEnumTagSinglePayload((uint64_t)v71, 0, 1, v66);
          }
          v64[*(int *)(v69 + 24)] = v65[*(int *)(v69 + 24)];
          *(_BYTE *)(v106 + *(int *)(v107 + 60)) = v104[*(int *)(v107 + 60)];
          *(_QWORD *)(v106 + *(int *)(v107 + 64)) = *(_QWORD *)&v104[*(int *)(v107 + 64)];
          swift_retain();
          __swift_storeEnumTagSinglePayload(v106, 0, 1, v107);
          break;
        default:
          memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
          goto LABEL_22;
      }
    }
    v74 = a3[6];
    v75 = *(_OWORD *)((char *)a2 + v74 + 24);
    *(_OWORD *)((char *)a1 + v74 + 24) = v75;
    (**(void (***)(void))(v75 - 8))();
    v76 = a3[7];
    v77 = *(_OWORD *)((char *)a2 + v76 + 24);
    *(_OWORD *)((char *)a1 + v76 + 24) = v77;
    (**(void (***)(void))(v77 - 8))();
    v78 = a3[9];
    *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    v79 = (char *)a1 + v78;
    v80 = (char *)a2 + v78;
    *(_QWORD *)v79 = *(_QWORD *)v80;
    v79[8] = v80[8];
    v81 = a3[10];
    v82 = (char *)a1 + v81;
    v83 = (char *)a2 + v81;
    v84 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v84 - 8) + 16))(v82, v83, v84);
    v85 = a3[11];
    v86 = (char *)a1 + v85;
    v87 = (char *)a2 + v85;
    v88 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v88 - 8) + 16))(v86, v87, v88);
    v89 = a3[12];
    v90 = a3[13];
    v91 = (uint64_t *)((char *)a1 + v89);
    v92 = (uint64_t *)((char *)a2 + v89);
    v93 = v92[1];
    *v91 = *v92;
    v91[1] = v93;
    *((_BYTE *)a1 + v90) = *((_BYTE *)a2 + v90);
    v94 = a3[14];
    v95 = (uint64_t *)((char *)a1 + v94);
    v96 = (char *)a2 + v94;
    v97 = *(uint64_t *)((char *)a2 + v94);
    swift_bridgeObjectRetain();
    if (v97)
    {
      v98 = *((_QWORD *)v96 + 1);
      *v95 = v97;
      v95[1] = v98;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v95 = *(_OWORD *)v96;
    }
    v99 = a3[15];
    v100 = (char *)a1 + v99;
    v101 = (char *)a2 + v99;
    if (!*(_QWORD *)v101)
    {
      *(_OWORD *)v100 = *(_OWORD *)v101;
      return a1;
    }
    v102 = *((_QWORD *)v101 + 1);
    *(_QWORD *)v100 = *(_QWORD *)v101;
    *((_QWORD *)v100 + 1) = v102;
  }
  swift_retain();
  return a1;
}

uint64_t destroy for SessionActionNotice(uint64_t a1, int *a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  outlined consume of SessionActionNotice.NoticeType(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16));
  v4 = a1 + a2[5];
  v5 = (int *)type metadata accessor for Participant(0);
  if (!__swift_getEnumTagSinglePayload(v4, 1, (uint64_t)v5))
  {
    type metadata accessor for Participant.State(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        v6 = type metadata accessor for Date();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
        break;
      case 4u:
        v18 = type metadata accessor for Date();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v4, v18);
        v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        v20 = v4 + *(int *)(v19 + 48);
        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v20 + 120) >= 2uLL)
          __swift_destroy_boxed_opaque_existential_1(v20 + 96);
        if (*(_QWORD *)(v20 + 312))
        {
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
        }
        if (*(_QWORD *)(v4 + *(int *)(v19 + 64) + 8))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        break;
      default:
        break;
    }
    v7 = v4 + v5[5];
    v8 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
    v9 = (id *)(v4 + v5[7]);
    if (*v9)
    {

      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v10 = v4 + v5[14];
    v11 = type metadata accessor for Date();
    if (!__swift_getEnumTagSinglePayload(v10, 1, v11))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
    v12 = v10 + *(int *)(type metadata accessor for Participant.CountdownInfo(0) + 20);
    if (!__swift_getEnumTagSinglePayload(v12, 1, v11))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v12, v11);
    swift_release();
  }
  __swift_destroy_boxed_opaque_existential_1(a1 + a2[6]);
  __swift_destroy_boxed_opaque_existential_1(a1 + a2[7]);
  v13 = a1 + a2[10];
  v14 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[11];
  v16 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  result = swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[14]))
    result = swift_release();
  if (*(_QWORD *)(a1 + a2[15]))
    return swift_release();
  return result;
}

uint64_t *initializeWithCopy for SessionActionNotice(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  const void *v25;
  size_t v26;
  __int128 v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  __int128 v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  __int128 v73;
  uint64_t v74;
  __int128 v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  _QWORD *v99;
  uint64_t v100;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;

  v6 = *a2;
  v7 = a2[1];
  v8 = a2[2];
  v9 = a2[3];
  outlined copy of SessionActionNotice.NoticeType(*a2, v7, v8);
  *a1 = v6;
  a1[1] = v7;
  a1[2] = v8;
  a1[3] = v9;
  v10 = a3[5];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = (int *)type metadata accessor for Participant(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, (uint64_t)v13))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    v15 = type metadata accessor for Participant.State(0);
    v104 = (uint64_t)v11;
    v105 = (uint64_t)v13;
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        v16 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v11, v12, v16);
        goto LABEL_19;
      case 4u:
        v17 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v11, v12, v17);
        v103 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        v18 = *(int *)(v103 + 48);
        v19 = &v11[v18];
        v20 = &v12[v18];
        *(_OWORD *)v19 = *(_OWORD *)&v12[v18];
        v21 = *(_QWORD *)&v12[v18 + 16];
        v22 = *(_QWORD *)&v12[v18 + 24];
        *((_QWORD *)v19 + 2) = v21;
        *((_QWORD *)v19 + 3) = v22;
        *((_WORD *)v19 + 16) = *((_WORD *)v20 + 16);
        *((_QWORD *)v19 + 5) = *((_QWORD *)v20 + 5);
        v19[48] = v20[48];
        *(_OWORD *)(v19 + 56) = *(_OWORD *)(v20 + 56);
        *(_OWORD *)(v19 + 72) = *(_OWORD *)(v20 + 72);
        v19[88] = v20[88];
        v19[89] = v20[89];
        v23 = *((_QWORD *)v20 + 15);
        swift_bridgeObjectRetain();
        if (v23)
        {
          if (v23 == 1)
          {
            v24 = v19 + 96;
            v25 = v20 + 96;
            v26 = 209;
            goto LABEL_12;
          }
          v28 = *((_QWORD *)v20 + 16);
          *((_QWORD *)v19 + 15) = v23;
          *((_QWORD *)v19 + 16) = v28;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v23 - 8))((uint64_t)(v19 + 96), (uint64_t)(v20 + 96), v23);
        }
        else
        {
          v27 = *((_OWORD *)v20 + 7);
          *((_OWORD *)v19 + 6) = *((_OWORD *)v20 + 6);
          *((_OWORD *)v19 + 7) = v27;
          *((_QWORD *)v19 + 16) = *((_QWORD *)v20 + 16);
        }
        *((_DWORD *)v19 + 34) = *((_DWORD *)v20 + 34);
        v29 = *((_OWORD *)v20 + 10);
        *((_OWORD *)v19 + 9) = *((_OWORD *)v20 + 9);
        *((_OWORD *)v19 + 10) = v29;
        *((_OWORD *)v19 + 11) = *((_OWORD *)v20 + 11);
        v19[192] = v20[192];
        v24 = v19 + 208;
        v25 = v20 + 208;
        *((_QWORD *)v19 + 25) = *((_QWORD *)v20 + 25);
        v26 = 97;
LABEL_12:
        memcpy(v24, v25, v26);
        v30 = *((_QWORD *)v20 + 39);
        if (v30)
        {
          v31 = *((_QWORD *)v20 + 40);
          v32 = *((_QWORD *)v20 + 41);
          *((_QWORD *)v19 + 39) = v30;
          *((_QWORD *)v19 + 40) = v31;
          *((_QWORD *)v19 + 41) = v32;
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v19 + 312) = *(_OWORD *)(v20 + 312);
          *((_QWORD *)v19 + 41) = *((_QWORD *)v20 + 41);
        }
        v11 = (char *)v104;
        v33 = *(int *)(v103 + 64);
        v34 = v104 + v33;
        v35 = &v12[v33];
        v36 = *((_QWORD *)v35 + 1);
        if (v36)
        {
          *(_QWORD *)v34 = *(_QWORD *)v35;
          *(_QWORD *)(v34 + 8) = v36;
          v37 = *((_QWORD *)v35 + 3);
          *(_QWORD *)(v34 + 16) = *((_QWORD *)v35 + 2);
          *(_QWORD *)(v34 + 24) = v37;
          *(_BYTE *)(v34 + 32) = v35[32];
          *(_OWORD *)(v34 + 40) = *(_OWORD *)(v35 + 40);
          *(_QWORD *)(v34 + 56) = *((_QWORD *)v35 + 7);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v38 = *((_OWORD *)v35 + 1);
          *(_OWORD *)v34 = *(_OWORD *)v35;
          *(_OWORD *)(v34 + 16) = v38;
          v39 = *((_OWORD *)v35 + 3);
          *(_OWORD *)(v34 + 32) = *((_OWORD *)v35 + 2);
          *(_OWORD *)(v34 + 48) = v39;
        }
        v13 = (int *)v105;
LABEL_19:
        swift_storeEnumTagMultiPayload();
LABEL_20:
        v40 = v13[5];
        v41 = &v11[v40];
        v42 = &v12[v40];
        v43 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
        v44 = v13[6];
        v45 = &v11[v44];
        v46 = &v12[v44];
        v45[4] = v46[4];
        *(_DWORD *)v45 = *(_DWORD *)v46;
        v47 = v13[7];
        v48 = &v11[v47];
        v49 = &v12[v47];
        v50 = *(void **)v49;
        if (*(_QWORD *)v49)
        {
          v51 = *((_QWORD *)v49 + 1);
          *(_QWORD *)v48 = v50;
          *((_QWORD *)v48 + 1) = v51;
          v48[16] = v49[16];
          v52 = *((_QWORD *)v49 + 4);
          *((_QWORD *)v48 + 3) = *((_QWORD *)v49 + 3);
          *((_QWORD *)v48 + 4) = v52;
          v53 = v50;
          swift_bridgeObjectRetain();
        }
        else
        {
          v54 = *((_OWORD *)v49 + 1);
          *(_OWORD *)v48 = *(_OWORD *)v49;
          *((_OWORD *)v48 + 1) = v54;
          *((_QWORD *)v48 + 4) = *((_QWORD *)v49 + 4);
        }
        *(_QWORD *)&v11[v13[8]] = *(_QWORD *)&v12[v13[8]];
        v55 = v13[9];
        v56 = &v11[v55];
        v57 = &v12[v55];
        v58 = *((_QWORD *)v57 + 1);
        *(_QWORD *)v56 = *(_QWORD *)v57;
        *((_QWORD *)v56 + 1) = v58;
        v11[v13[10]] = v12[v13[10]];
        *(_QWORD *)&v11[v13[11]] = *(_QWORD *)&v12[v13[11]];
        v59 = v13[12];
        v60 = *(void **)&v12[v59];
        *(_QWORD *)&v11[v59] = v60;
        v11[v13[13]] = v12[v13[13]];
        v61 = v13[14];
        v62 = &v11[v61];
        v102 = v12;
        v63 = &v12[v61];
        v64 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v65 = v60;
        if (__swift_getEnumTagSinglePayload((uint64_t)v63, 1, v64))
        {
          v66 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
          memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 16))(v62, v63, v64);
          __swift_storeEnumTagSinglePayload((uint64_t)v62, 0, 1, v64);
        }
        v67 = type metadata accessor for Participant.CountdownInfo(0);
        v68 = *(int *)(v67 + 20);
        v69 = &v62[v68];
        v70 = &v63[v68];
        if (__swift_getEnumTagSinglePayload((uint64_t)&v63[v68], 1, v64))
        {
          v71 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
          memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 16))(v69, v70, v64);
          __swift_storeEnumTagSinglePayload((uint64_t)v69, 0, 1, v64);
        }
        v62[*(int *)(v67 + 24)] = v63[*(int *)(v67 + 24)];
        *(_BYTE *)(v104 + *(int *)(v105 + 60)) = v102[*(int *)(v105 + 60)];
        *(_QWORD *)(v104 + *(int *)(v105 + 64)) = *(_QWORD *)&v102[*(int *)(v105 + 64)];
        swift_retain();
        __swift_storeEnumTagSinglePayload(v104, 0, 1, v105);
        break;
      default:
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
        goto LABEL_20;
    }
  }
  v72 = a3[6];
  v73 = *(_OWORD *)((char *)a2 + v72 + 24);
  *(_OWORD *)((char *)a1 + v72 + 24) = v73;
  (**(void (***)(void))(v73 - 8))();
  v74 = a3[7];
  v75 = *(_OWORD *)((char *)a2 + v74 + 24);
  *(_OWORD *)((char *)a1 + v74 + 24) = v75;
  (**(void (***)(void))(v75 - 8))();
  v76 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  v77 = (char *)a1 + v76;
  v78 = (char *)a2 + v76;
  *(_QWORD *)v77 = *(_QWORD *)v78;
  v77[8] = v78[8];
  v79 = a3[10];
  v80 = (char *)a1 + v79;
  v81 = (char *)a2 + v79;
  v82 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v82 - 8) + 16))(v80, v81, v82);
  v83 = a3[11];
  v84 = (char *)a1 + v83;
  v85 = (char *)a2 + v83;
  v86 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v86 - 8) + 16))(v84, v85, v86);
  v87 = a3[12];
  v88 = a3[13];
  v89 = (uint64_t *)((char *)a1 + v87);
  v90 = (uint64_t *)((char *)a2 + v87);
  v91 = v90[1];
  *v89 = *v90;
  v89[1] = v91;
  *((_BYTE *)a1 + v88) = *((_BYTE *)a2 + v88);
  v92 = a3[14];
  v93 = (uint64_t *)((char *)a1 + v92);
  v94 = (char *)a2 + v92;
  v95 = *(uint64_t *)((char *)a2 + v92);
  swift_bridgeObjectRetain();
  if (v95)
  {
    v96 = *((_QWORD *)v94 + 1);
    *v93 = v95;
    v93[1] = v96;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v93 = *(_OWORD *)v94;
  }
  v97 = a3[15];
  v98 = (uint64_t *)((char *)a1 + v97);
  v99 = (uint64_t *)((char *)a2 + v97);
  if (*v99)
  {
    v100 = v99[1];
    *v98 = *v99;
    v98[1] = v100;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v98 = *(_OWORD *)v99;
  }
  return a1;
}

uint64_t *assignWithCopy for SessionActionNotice(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  int *v16;
  int EnumTagSinglePayload;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  void *v31;
  const void *v32;
  size_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  void *v42;
  const void *v43;
  size_t v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  char *v53;
  char *v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  int v65;
  uint64_t v66;
  char *v67;
  char *v68;
  void *v69;
  uint64_t v70;
  id v71;
  __int128 v72;
  __int128 v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  char *v78;
  void *v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  uint64_t v95;
  uint64_t v96;
  __int128 v97;
  uint64_t v98;
  char *v99;
  char *v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  char *v112;
  char *v113;
  void *v114;
  void *v115;
  id v116;
  uint64_t v117;
  uint64_t v118;
  id v119;
  uint64_t v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  void *v128;
  void *v129;
  id v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  int v135;
  char *v136;
  _BYTE *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  _BYTE *v143;
  int v144;
  int v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  char *v150;
  char v151;
  uint64_t v152;
  char *v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  _QWORD *v161;
  _QWORD *v162;
  uint64_t v163;
  _QWORD *v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  _QWORD *v171;
  uint64_t *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  char *v178;
  int *__src;
  int *__srca;
  char *__srcb;
  _BYTE *__srcc;
  char *v183;
  char *v184;
  uint64_t v185;
  int *v186;

  v6 = *a2;
  v7 = a2[1];
  v8 = a2[2];
  v9 = a2[3];
  outlined copy of SessionActionNotice.NoticeType(*a2, v7, v8);
  v10 = *a1;
  v11 = a1[1];
  v12 = a1[2];
  *a1 = v6;
  a1[1] = v7;
  a1[2] = v8;
  a1[3] = v9;
  outlined consume of SessionActionNotice.NoticeType(v10, v11, v12);
  v13 = a3[5];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = (int *)type metadata accessor for Participant(0);
  LODWORD(v7) = __swift_getEnumTagSinglePayload((uint64_t)v14, 1, (uint64_t)v16);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v15, 1, (uint64_t)v16);
  if (!(_DWORD)v7)
  {
    if (EnumTagSinglePayload)
    {
      outlined destroy of Participant((uint64_t)v14, type metadata accessor for Participant);
      goto LABEL_7;
    }
    v186 = v16;
    if (a1 != a2)
    {
      outlined destroy of Participant((uint64_t)v14, type metadata accessor for Participant.State);
      v21 = type metadata accessor for Participant.State(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 2u:
        case 3u:
        case 5u:
          v22 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v14, v15, v22);
          goto LABEL_48;
        case 4u:
          v34 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v14, v15, v34);
          __srca = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
          v184 = v15;
          v35 = __srca[12];
          v36 = &v14[v35];
          v37 = &v15[v35];
          *(_OWORD *)v36 = *(_OWORD *)v37;
          *((_QWORD *)v36 + 2) = *((_QWORD *)v37 + 2);
          v38 = *((_QWORD *)v37 + 3);
          *((_WORD *)v36 + 16) = *((_WORD *)v37 + 16);
          *((_QWORD *)v36 + 3) = v38;
          *((_QWORD *)v36 + 5) = *((_QWORD *)v37 + 5);
          v36[48] = v37[48];
          v39 = *(_OWORD *)(v37 + 72);
          v40 = *(_OWORD *)(v37 + 56);
          v36[88] = v37[88];
          *(_OWORD *)(v36 + 56) = v40;
          *(_OWORD *)(v36 + 72) = v39;
          v36[89] = v37[89];
          v41 = *((_QWORD *)v37 + 15);
          swift_bridgeObjectRetain();
          if (v41)
          {
            if (v41 == 1)
            {
              v42 = v36 + 96;
              v43 = v37 + 96;
              v44 = 209;
              goto LABEL_42;
            }
            *((_QWORD *)v36 + 15) = v41;
            *((_QWORD *)v36 + 16) = *((_QWORD *)v37 + 16);
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v41 - 8))((uint64_t)(v36 + 96), (uint64_t)(v37 + 96), v41);
          }
          else
          {
            v91 = *((_OWORD *)v37 + 6);
            v92 = *((_OWORD *)v37 + 7);
            *((_QWORD *)v36 + 16) = *((_QWORD *)v37 + 16);
            *((_OWORD *)v36 + 6) = v91;
            *((_OWORD *)v36 + 7) = v92;
          }
          *((_DWORD *)v36 + 34) = *((_DWORD *)v37 + 34);
          *((_QWORD *)v36 + 18) = *((_QWORD *)v37 + 18);
          *((_QWORD *)v36 + 19) = *((_QWORD *)v37 + 19);
          v93 = *((_OWORD *)v37 + 10);
          v94 = *((_OWORD *)v37 + 11);
          v36[192] = v37[192];
          *((_OWORD *)v36 + 10) = v93;
          *((_OWORD *)v36 + 11) = v94;
          *((_QWORD *)v36 + 25) = *((_QWORD *)v37 + 25);
          v42 = v36 + 208;
          v43 = v37 + 208;
          v44 = 97;
LABEL_42:
          memcpy(v42, v43, v44);
          v95 = *((_QWORD *)v37 + 39);
          if (v95)
          {
            v96 = *((_QWORD *)v37 + 40);
            *((_QWORD *)v36 + 39) = v95;
            *((_QWORD *)v36 + 40) = v96;
            *((_QWORD *)v36 + 41) = *((_QWORD *)v37 + 41);
            swift_unknownObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            v97 = *(_OWORD *)(v37 + 312);
            *((_QWORD *)v36 + 41) = *((_QWORD *)v37 + 41);
            *(_OWORD *)(v36 + 312) = v97;
          }
          v15 = v184;
          v98 = __srca[16];
          v99 = &v14[v98];
          v100 = &v184[v98];
          if (*((_QWORD *)v100 + 1))
          {
            *(_QWORD *)v99 = *(_QWORD *)v100;
            *((_QWORD *)v99 + 1) = *((_QWORD *)v100 + 1);
            *((_QWORD *)v99 + 2) = *((_QWORD *)v100 + 2);
            *((_QWORD *)v99 + 3) = *((_QWORD *)v100 + 3);
            v99[32] = v100[32];
            *((_QWORD *)v99 + 5) = *((_QWORD *)v100 + 5);
            *((_QWORD *)v99 + 6) = *((_QWORD *)v100 + 6);
            *((_QWORD *)v99 + 7) = *((_QWORD *)v100 + 7);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            v101 = *(_OWORD *)v100;
            v102 = *((_OWORD *)v100 + 1);
            v103 = *((_OWORD *)v100 + 3);
            *((_OWORD *)v99 + 2) = *((_OWORD *)v100 + 2);
            *((_OWORD *)v99 + 3) = v103;
            *(_OWORD *)v99 = v101;
            *((_OWORD *)v99 + 1) = v102;
          }
LABEL_48:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
          break;
      }
    }
    v104 = v16[5];
    v105 = &v14[v104];
    v106 = &v15[v104];
    v107 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v107 - 8) + 24))(v105, v106, v107);
    v108 = v16[6];
    v109 = &v14[v108];
    v110 = &v15[v108];
    *v109 = *v110;
    v109[1] = v110[1];
    v109[2] = v110[2];
    v109[3] = v110[3];
    v109[4] = v110[4];
    v111 = v16[7];
    v112 = &v14[v111];
    v113 = &v15[v111];
    v114 = *(void **)&v14[v111];
    v115 = *(void **)&v15[v111];
    if (v114)
    {
      if (v115)
      {
        *(_QWORD *)v112 = v115;
        v116 = v115;

        v117 = *((_QWORD *)v113 + 1);
        v112[16] = v113[16];
        *((_QWORD *)v112 + 1) = v117;
        *((_QWORD *)v112 + 3) = *((_QWORD *)v113 + 3);
        *((_QWORD *)v112 + 4) = *((_QWORD *)v113 + 4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
      }
      else
      {
        outlined destroy of Participant.RemoteIdentifiers((id *)v112);
        v120 = *((_QWORD *)v113 + 4);
        v121 = *((_OWORD *)v113 + 1);
        *(_OWORD *)v112 = *(_OWORD *)v113;
        *((_OWORD *)v112 + 1) = v121;
        *((_QWORD *)v112 + 4) = v120;
      }
    }
    else if (v115)
    {
      *(_QWORD *)v112 = v115;
      v118 = *((_QWORD *)v113 + 1);
      v112[16] = v113[16];
      *((_QWORD *)v112 + 1) = v118;
      *((_QWORD *)v112 + 3) = *((_QWORD *)v113 + 3);
      *((_QWORD *)v112 + 4) = *((_QWORD *)v113 + 4);
      v119 = v115;
      swift_bridgeObjectRetain();
    }
    else
    {
      v122 = *(_OWORD *)v113;
      v123 = *((_OWORD *)v113 + 1);
      *((_QWORD *)v112 + 4) = *((_QWORD *)v113 + 4);
      *(_OWORD *)v112 = v122;
      *((_OWORD *)v112 + 1) = v123;
    }
    *(_QWORD *)&v14[v16[8]] = *(_QWORD *)&v15[v16[8]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v124 = v16[9];
    v125 = &v14[v124];
    v126 = &v15[v124];
    *(_QWORD *)v125 = *(_QWORD *)v126;
    *((_QWORD *)v125 + 1) = *((_QWORD *)v126 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v14[v16[10]] = v15[v16[10]];
    *(_QWORD *)&v14[v16[11]] = *(_QWORD *)&v15[v16[11]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v127 = v16[12];
    v128 = *(void **)&v14[v127];
    v129 = *(void **)&v15[v127];
    *(_QWORD *)&v14[v127] = v129;
    v130 = v129;

    v14[v16[13]] = v15[v16[13]];
    v131 = v16[14];
    v132 = &v14[v131];
    v133 = (uint64_t)&v15[v131];
    v134 = type metadata accessor for Date();
    LODWORD(v128) = __swift_getEnumTagSinglePayload((uint64_t)v132, 1, v134);
    __srcc = (_BYTE *)v133;
    v135 = __swift_getEnumTagSinglePayload(v133, 1, v134);
    if ((_DWORD)v128)
    {
      v136 = v15;
      if (!v135)
      {
        v137 = __srcc;
        (*(void (**)(char *, _BYTE *, uint64_t))(*(_QWORD *)(v134 - 8) + 16))(v132, __srcc, v134);
        __swift_storeEnumTagSinglePayload((uint64_t)v132, 0, 1, v134);
        goto LABEL_62;
      }
    }
    else
    {
      v138 = *(_QWORD *)(v134 - 8);
      v136 = v15;
      if (!v135)
      {
        v137 = __srcc;
        (*(void (**)(char *, _BYTE *, uint64_t))(v138 + 24))(v132, __srcc, v134);
LABEL_62:
        v140 = type metadata accessor for Participant.CountdownInfo(0);
        v141 = *(int *)(v140 + 20);
        v178 = v132;
        v142 = &v132[v141];
        v143 = &v137[v141];
        v144 = __swift_getEnumTagSinglePayload((uint64_t)v142, 1, v134);
        v145 = __swift_getEnumTagSinglePayload((uint64_t)v143, 1, v134);
        if (v144)
        {
          if (!v145)
          {
            (*(void (**)(char *, _BYTE *, uint64_t))(*(_QWORD *)(v134 - 8) + 16))(v142, v143, v134);
            __swift_storeEnumTagSinglePayload((uint64_t)v142, 0, 1, v134);
LABEL_68:
            v178[*(int *)(v140 + 24)] = __srcc[*(int *)(v140 + 24)];
            v14[v186[15]] = v136[v186[15]];
            *(_QWORD *)&v14[v186[16]] = *(_QWORD *)&v136[v186[16]];
            swift_retain();
            swift_release();
            goto LABEL_69;
          }
        }
        else
        {
          v146 = *(_QWORD *)(v134 - 8);
          if (!v145)
          {
            (*(void (**)(char *, _BYTE *, uint64_t))(v146 + 24))(v142, v143, v134);
            goto LABEL_68;
          }
          (*(void (**)(char *, uint64_t))(v146 + 8))(v142, v134);
        }
        v147 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
        memcpy(v142, v143, *(_QWORD *)(*(_QWORD *)(v147 - 8) + 64));
        goto LABEL_68;
      }
      (*(void (**)(char *, uint64_t))(v138 + 8))(v132, v134);
    }
    v139 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    v137 = __srcc;
    memcpy(v132, __srcc, *(_QWORD *)(*(_QWORD *)(v139 - 8) + 64));
    goto LABEL_62;
  }
  if (EnumTagSinglePayload)
  {
LABEL_7:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_69;
  }
  v18 = type metadata accessor for Participant.State(0);
  v183 = v15;
  v185 = (uint64_t)v16;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 5u:
      v19 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v14, v15, v19);
      goto LABEL_28;
    case 4u:
      v23 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v14, v15, v23);
      __src = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      v24 = __src[12];
      v25 = &v14[v24];
      v26 = &v15[v24];
      *(_OWORD *)v25 = *(_OWORD *)v26;
      *((_QWORD *)v25 + 2) = *((_QWORD *)v26 + 2);
      v27 = *((_QWORD *)v26 + 3);
      *((_WORD *)v25 + 16) = *((_WORD *)v26 + 16);
      *((_QWORD *)v25 + 3) = v27;
      *((_QWORD *)v25 + 5) = *((_QWORD *)v26 + 5);
      v25[48] = v26[48];
      v28 = *(_OWORD *)(v26 + 72);
      v29 = *(_OWORD *)(v26 + 56);
      v25[88] = v26[88];
      *(_OWORD *)(v25 + 56) = v29;
      *(_OWORD *)(v25 + 72) = v28;
      v25[89] = v26[89];
      v30 = *((_QWORD *)v26 + 15);
      swift_bridgeObjectRetain();
      if (v30)
      {
        if (v30 == 1)
        {
          v31 = v25 + 96;
          v32 = v26 + 96;
          v33 = 209;
          goto LABEL_22;
        }
        *((_QWORD *)v25 + 15) = v30;
        *((_QWORD *)v25 + 16) = *((_QWORD *)v26 + 16);
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v30 - 8))((uint64_t)(v25 + 96), (uint64_t)(v26 + 96), v30);
      }
      else
      {
        v45 = *((_OWORD *)v26 + 6);
        v46 = *((_OWORD *)v26 + 7);
        *((_QWORD *)v25 + 16) = *((_QWORD *)v26 + 16);
        *((_OWORD *)v25 + 6) = v45;
        *((_OWORD *)v25 + 7) = v46;
      }
      *((_DWORD *)v25 + 34) = *((_DWORD *)v26 + 34);
      *((_QWORD *)v25 + 18) = *((_QWORD *)v26 + 18);
      *((_QWORD *)v25 + 19) = *((_QWORD *)v26 + 19);
      v47 = *((_OWORD *)v26 + 10);
      v48 = *((_OWORD *)v26 + 11);
      v25[192] = v26[192];
      *((_OWORD *)v25 + 10) = v47;
      *((_OWORD *)v25 + 11) = v48;
      *((_QWORD *)v25 + 25) = *((_QWORD *)v26 + 25);
      v31 = v25 + 208;
      v32 = v26 + 208;
      v33 = 97;
LABEL_22:
      memcpy(v31, v32, v33);
      v49 = *((_QWORD *)v26 + 39);
      if (v49)
      {
        v50 = *((_QWORD *)v26 + 40);
        *((_QWORD *)v25 + 39) = v49;
        *((_QWORD *)v25 + 40) = v50;
        *((_QWORD *)v25 + 41) = *((_QWORD *)v26 + 41);
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v51 = *(_OWORD *)(v26 + 312);
        *((_QWORD *)v25 + 41) = *((_QWORD *)v26 + 41);
        *(_OWORD *)(v25 + 312) = v51;
      }
      v52 = __src[16];
      v53 = &v14[v52];
      v15 = v183;
      v54 = &v183[v52];
      if (*((_QWORD *)v54 + 1))
      {
        *(_QWORD *)v53 = *(_QWORD *)v54;
        *((_QWORD *)v53 + 1) = *((_QWORD *)v54 + 1);
        *((_QWORD *)v53 + 2) = *((_QWORD *)v54 + 2);
        *((_QWORD *)v53 + 3) = *((_QWORD *)v54 + 3);
        v53[32] = v54[32];
        *((_QWORD *)v53 + 5) = *((_QWORD *)v54 + 5);
        *((_QWORD *)v53 + 6) = *((_QWORD *)v54 + 6);
        *((_QWORD *)v53 + 7) = *((_QWORD *)v54 + 7);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v55 = *(_OWORD *)v54;
        v56 = *((_OWORD *)v54 + 1);
        v57 = *((_OWORD *)v54 + 3);
        *((_OWORD *)v53 + 2) = *((_OWORD *)v54 + 2);
        *((_OWORD *)v53 + 3) = v57;
        *(_OWORD *)v53 = v55;
        *((_OWORD *)v53 + 1) = v56;
      }
LABEL_28:
      swift_storeEnumTagMultiPayload();
LABEL_29:
      v58 = v16[5];
      v59 = &v14[v58];
      v60 = &v15[v58];
      v61 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 16))(v59, v60, v61);
      v62 = v16[6];
      v63 = &v14[v62];
      v64 = &v15[v62];
      v65 = *(_DWORD *)v64;
      v63[4] = v64[4];
      *(_DWORD *)v63 = v65;
      v66 = v16[7];
      v67 = &v14[v66];
      v68 = &v15[v66];
      v69 = *(void **)v68;
      if (*(_QWORD *)v68)
      {
        *(_QWORD *)v67 = v69;
        v70 = *((_QWORD *)v68 + 1);
        v67[16] = v68[16];
        *((_QWORD *)v67 + 1) = v70;
        *((_QWORD *)v67 + 3) = *((_QWORD *)v68 + 3);
        *((_QWORD *)v67 + 4) = *((_QWORD *)v68 + 4);
        v71 = v69;
        swift_bridgeObjectRetain();
      }
      else
      {
        v72 = *(_OWORD *)v68;
        v73 = *((_OWORD *)v68 + 1);
        *((_QWORD *)v67 + 4) = *((_QWORD *)v68 + 4);
        *(_OWORD *)v67 = v72;
        *((_OWORD *)v67 + 1) = v73;
      }
      *(_QWORD *)&v14[v16[8]] = *(_QWORD *)&v15[v16[8]];
      v74 = v16[9];
      v75 = &v14[v74];
      v76 = &v15[v74];
      *(_QWORD *)v75 = *(_QWORD *)v76;
      *((_QWORD *)v75 + 1) = *((_QWORD *)v76 + 1);
      v14[v16[10]] = v15[v16[10]];
      *(_QWORD *)&v14[v16[11]] = *(_QWORD *)&v15[v16[11]];
      v77 = v16[12];
      v78 = v14;
      v79 = *(void **)&v15[v77];
      *(_QWORD *)&v78[v77] = v79;
      v78[v16[13]] = v15[v16[13]];
      v80 = v16[14];
      __srcb = v78;
      v81 = &v78[v80];
      v82 = &v15[v80];
      v83 = type metadata accessor for Date();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v84 = v79;
      if (__swift_getEnumTagSinglePayload((uint64_t)v82, 1, v83))
      {
        v85 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
        memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v83 - 8) + 16))(v81, v82, v83);
        __swift_storeEnumTagSinglePayload((uint64_t)v81, 0, 1, v83);
      }
      v86 = type metadata accessor for Participant.CountdownInfo(0);
      v87 = *(int *)(v86 + 20);
      v88 = &v81[v87];
      v89 = &v82[v87];
      if (__swift_getEnumTagSinglePayload((uint64_t)&v82[v87], 1, v83))
      {
        v90 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
        memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v83 - 8) + 16))(v88, v89, v83);
        __swift_storeEnumTagSinglePayload((uint64_t)v88, 0, 1, v83);
      }
      v81[*(int *)(v86 + 24)] = v82[*(int *)(v86 + 24)];
      __srcb[*(int *)(v185 + 60)] = v183[*(int *)(v185 + 60)];
      *(_QWORD *)&__srcb[*(int *)(v185 + 64)] = *(_QWORD *)&v183[*(int *)(v185 + 64)];
      swift_retain();
      __swift_storeEnumTagSinglePayload((uint64_t)__srcb, 0, 1, v185);
      break;
    default:
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      goto LABEL_29;
  }
LABEL_69:
  __swift_assign_boxed_opaque_existential_1((uint64_t *)((char *)a1 + a3[6]), (uint64_t *)((char *)a2 + a3[6]));
  __swift_assign_boxed_opaque_existential_1((uint64_t *)((char *)a1 + a3[7]), (uint64_t *)((char *)a2 + a3[7]));
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  v148 = a3[9];
  v149 = (char *)a1 + v148;
  v150 = (char *)a2 + v148;
  v151 = v150[8];
  *(_QWORD *)v149 = *(_QWORD *)v150;
  v149[8] = v151;
  v152 = a3[10];
  v153 = (char *)a1 + v152;
  v154 = (char *)a2 + v152;
  v155 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v155 - 8) + 24))(v153, v154, v155);
  v156 = a3[11];
  v157 = (char *)a1 + v156;
  v158 = (char *)a2 + v156;
  v159 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v159 - 8) + 24))(v157, v158, v159);
  v160 = a3[12];
  v161 = (uint64_t *)((char *)a1 + v160);
  v162 = (uint64_t *)((char *)a2 + v160);
  *v161 = *v162;
  v161[1] = v162[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[13]) = *((_BYTE *)a2 + a3[13]);
  v163 = a3[14];
  v164 = (uint64_t *)((char *)a1 + v163);
  v165 = (char *)a2 + v163;
  v166 = *(uint64_t *)((char *)a1 + v163);
  v167 = *(uint64_t *)((char *)a2 + v163);
  if (v166)
  {
    if (v167)
    {
      v168 = *((_QWORD *)v165 + 1);
      *v164 = v167;
      v164[1] = v168;
      swift_retain();
      swift_release();
      goto LABEL_76;
    }
    swift_release();
  }
  else if (v167)
  {
    v169 = *((_QWORD *)v165 + 1);
    *v164 = v167;
    v164[1] = v169;
    swift_retain();
    goto LABEL_76;
  }
  *(_OWORD *)v164 = *(_OWORD *)v165;
LABEL_76:
  v170 = a3[15];
  v171 = (uint64_t *)((char *)a1 + v170);
  v172 = (uint64_t *)((char *)a2 + v170);
  v173 = *(uint64_t *)((char *)a1 + v170);
  v174 = *v172;
  if (!v173)
  {
    if (v174)
    {
      v176 = v172[1];
      *v171 = v174;
      v171[1] = v176;
      swift_retain();
      return a1;
    }
LABEL_82:
    *(_OWORD *)v171 = *(_OWORD *)v172;
    return a1;
  }
  if (!v174)
  {
    swift_release();
    goto LABEL_82;
  }
  v175 = v172[1];
  *v171 = v174;
  v171[1] = v175;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *initializeWithTake for SessionActionNotice(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  __int128 v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  __int128 v46;
  char *v47;
  char *v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  char *v75;
  char *v76;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = (int *)type metadata accessor for Participant(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, (uint64_t)v10))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v12 = type metadata accessor for Participant.State(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        v20 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v8, v9, v20);
        goto LABEL_7;
      case 4u:
        v13 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v8, v9, v13);
        v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        memcpy(&v8[*(int *)(v14 + 48)], &v9[*(int *)(v14 + 48)], 0x150uLL);
        v15 = *(int *)(v14 + 64);
        v16 = &v8[v15];
        v17 = &v9[v15];
        v18 = *((_OWORD *)v17 + 1);
        *(_OWORD *)v16 = *(_OWORD *)v17;
        *((_OWORD *)v16 + 1) = v18;
        v19 = *((_OWORD *)v17 + 3);
        *((_OWORD *)v16 + 2) = *((_OWORD *)v17 + 2);
        *((_OWORD *)v16 + 3) = v19;
LABEL_7:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        break;
    }
    v21 = v10[5];
    v22 = &v8[v21];
    v23 = &v9[v21];
    v24 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
    v25 = v10[6];
    v26 = &v8[v25];
    v27 = &v9[v25];
    *(_DWORD *)v26 = *(_DWORD *)v27;
    v26[4] = v27[4];
    v28 = v10[7];
    v29 = &v8[v28];
    v30 = &v9[v28];
    v31 = *((_OWORD *)v30 + 1);
    *(_OWORD *)v29 = *(_OWORD *)v30;
    *((_OWORD *)v29 + 1) = v31;
    *((_QWORD *)v29 + 4) = *((_QWORD *)v30 + 4);
    *(_QWORD *)&v8[v10[8]] = *(_QWORD *)&v9[v10[8]];
    *(_OWORD *)&v8[v10[9]] = *(_OWORD *)&v9[v10[9]];
    v8[v10[10]] = v9[v10[10]];
    *(_QWORD *)&v8[v10[11]] = *(_QWORD *)&v9[v10[11]];
    *(_QWORD *)&v8[v10[12]] = *(_QWORD *)&v9[v10[12]];
    v8[v10[13]] = v9[v10[13]];
    v32 = v10[14];
    v33 = &v8[v32];
    v34 = &v9[v32];
    v35 = type metadata accessor for Date();
    if (__swift_getEnumTagSinglePayload((uint64_t)v34, 1, v35))
    {
      v36 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
      memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v33, v34, v35);
      __swift_storeEnumTagSinglePayload((uint64_t)v33, 0, 1, v35);
    }
    v37 = type metadata accessor for Participant.CountdownInfo(0);
    v38 = *(int *)(v37 + 20);
    v75 = v34;
    v76 = v33;
    v39 = &v33[v38];
    v40 = &v34[v38];
    if (__swift_getEnumTagSinglePayload((uint64_t)v40, 1, v35))
    {
      v41 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
      memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v39, v40, v35);
      __swift_storeEnumTagSinglePayload((uint64_t)v39, 0, 1, v35);
    }
    v76[*(int *)(v37 + 24)] = v75[*(int *)(v37 + 24)];
    v8[v10[15]] = v9[v10[15]];
    *(_QWORD *)&v8[v10[16]] = *(_QWORD *)&v9[v10[16]];
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, (uint64_t)v10);
  }
  v42 = a3[6];
  v43 = a3[7];
  v44 = (char *)a1 + v42;
  v45 = (char *)a2 + v42;
  v46 = *((_OWORD *)v45 + 1);
  *(_OWORD *)v44 = *(_OWORD *)v45;
  *((_OWORD *)v44 + 1) = v46;
  *((_QWORD *)v44 + 4) = *((_QWORD *)v45 + 4);
  v47 = (char *)a1 + v43;
  v48 = (char *)a2 + v43;
  *((_QWORD *)v47 + 4) = *((_QWORD *)v48 + 4);
  v50 = *(_OWORD *)v48;
  v49 = *((_OWORD *)v48 + 1);
  v51 = a3[8];
  v52 = a3[9];
  v53 = *((_BYTE *)a2 + v51);
  *(_OWORD *)v47 = v50;
  *((_OWORD *)v47 + 1) = v49;
  *((_BYTE *)a1 + v51) = v53;
  v54 = (char *)a1 + v52;
  *(_QWORD *)v54 = *(_QWORD *)((char *)a2 + v52);
  v54[8] = *((_BYTE *)a2 + v52 + 8);
  v55 = a3[10];
  v56 = (char *)a1 + v55;
  v57 = (char *)a2 + v55;
  v58 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v56, v57, v58);
  v59 = a3[11];
  v60 = (char *)a1 + v59;
  v61 = (char *)a2 + v59;
  v62 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 32))(v60, v61, v62);
  v63 = a3[13];
  *(_OWORD *)((char *)a1 + a3[12]) = *(_OWORD *)((char *)a2 + a3[12]);
  *((_BYTE *)a1 + v63) = *((_BYTE *)a2 + v63);
  v64 = a3[14];
  v65 = (_QWORD *)((char *)a1 + v64);
  v66 = (uint64_t *)((char *)a2 + v64);
  v67 = *v66;
  if (*v66)
  {
    v68 = v66[1];
    *v65 = v67;
    v65[1] = v68;
  }
  else
  {
    *(_OWORD *)v65 = *(_OWORD *)v66;
  }
  v69 = a3[15];
  v70 = (_QWORD *)((char *)a1 + v69);
  v71 = (uint64_t *)((char *)a2 + v69);
  v72 = *v71;
  if (*v71)
  {
    v73 = v71[1];
    *v70 = v72;
    v70[1] = v73;
  }
  else
  {
    *(_OWORD *)v70 = *(_OWORD *)v71;
  }
  return a1;
}

uint64_t *assignWithTake for SessionActionNotice(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  char *v11;
  char *v12;
  int *v13;
  int EnumTagSinglePayload;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  __int128 v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  void *v66;
  uint64_t v67;
  __int128 v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  int v80;
  int v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  int v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  __int128 v96;
  uint64_t v97;
  char *v98;
  char *v99;
  __int128 v100;
  __int128 v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  char *v105;
  char *v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  _QWORD *v116;
  uint64_t *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  _QWORD *v127;
  uint64_t *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v134;
  char *__src;
  char *__srca;
  char *v137;
  char *v138;

  v6 = *a1;
  v7 = a1[1];
  v8 = a1[2];
  v9 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v9;
  outlined consume of SessionActionNotice.NoticeType(v6, v7, v8);
  v10 = a3[5];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = (int *)type metadata accessor for Participant(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, (uint64_t)v13);
  v15 = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, (uint64_t)v13);
  if (!EnumTagSinglePayload)
  {
    if (v15)
    {
      outlined destroy of Participant((uint64_t)v11, type metadata accessor for Participant);
      goto LABEL_6;
    }
    if (a1 != a2)
    {
      outlined destroy of Participant((uint64_t)v11, type metadata accessor for Participant.State);
      v18 = type metadata accessor for Participant.State(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 2u:
        case 3u:
        case 5u:
          v55 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 32))(v11, v12, v55);
          goto LABEL_23;
        case 4u:
          v48 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v11, v12, v48);
          v49 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
          memcpy(&v11[*(int *)(v49 + 48)], &v12[*(int *)(v49 + 48)], 0x150uLL);
          v50 = *(int *)(v49 + 64);
          v51 = &v11[v50];
          v52 = &v12[v50];
          v53 = *((_OWORD *)v52 + 1);
          *(_OWORD *)v51 = *(_OWORD *)v52;
          *((_OWORD *)v51 + 1) = v53;
          v54 = *((_OWORD *)v52 + 3);
          *((_OWORD *)v51 + 2) = *((_OWORD *)v52 + 2);
          *((_OWORD *)v51 + 3) = v54;
LABEL_23:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
          break;
      }
    }
    v56 = v13[5];
    v57 = &v11[v56];
    v58 = &v12[v56];
    v59 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 40))(v57, v58, v59);
    v60 = v13[6];
    v61 = &v11[v60];
    v62 = &v12[v60];
    *v61 = *v62;
    v61[1] = v62[1];
    v61[2] = v62[2];
    v61[3] = v62[3];
    v61[4] = v62[4];
    v63 = v13[7];
    v64 = &v11[v63];
    v65 = &v12[v63];
    v66 = *(void **)&v11[v63];
    if (v66)
    {
      if (*(_QWORD *)v65)
      {
        *(_QWORD *)v64 = *(_QWORD *)v65;

        *((_QWORD *)v64 + 1) = *((_QWORD *)v65 + 1);
        v64[16] = v65[16];
        v67 = *((_QWORD *)v65 + 4);
        *((_QWORD *)v64 + 3) = *((_QWORD *)v65 + 3);
        *((_QWORD *)v64 + 4) = v67;
        swift_bridgeObjectRelease();
        goto LABEL_29;
      }
      outlined destroy of Participant.RemoteIdentifiers((id *)v64);
    }
    v68 = *((_OWORD *)v65 + 1);
    *(_OWORD *)v64 = *(_OWORD *)v65;
    *((_OWORD *)v64 + 1) = v68;
    *((_QWORD *)v64 + 4) = *((_QWORD *)v65 + 4);
LABEL_29:
    *(_QWORD *)&v11[v13[8]] = *(_QWORD *)&v12[v13[8]];
    swift_bridgeObjectRelease();
    v69 = v13[9];
    v70 = &v11[v69];
    v71 = &v12[v69];
    v73 = *(_QWORD *)v71;
    v72 = *((_QWORD *)v71 + 1);
    *(_QWORD *)v70 = v73;
    *((_QWORD *)v70 + 1) = v72;
    swift_bridgeObjectRelease();
    v11[v13[10]] = v12[v13[10]];
    *(_QWORD *)&v11[v13[11]] = *(_QWORD *)&v12[v13[11]];
    swift_bridgeObjectRelease();
    v74 = v13[12];
    v75 = *(void **)&v11[v74];
    *(_QWORD *)&v11[v74] = *(_QWORD *)&v12[v74];

    v11[v13[13]] = v12[v13[13]];
    v76 = v13[14];
    v77 = &v11[v76];
    v78 = &v12[v76];
    v79 = type metadata accessor for Date();
    v80 = __swift_getEnumTagSinglePayload((uint64_t)v77, 1, v79);
    __srca = v78;
    v81 = __swift_getEnumTagSinglePayload((uint64_t)v78, 1, v79);
    v138 = v12;
    if (v80)
    {
      if (!v81)
      {
        v82 = v78;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 32))(v77, v78, v79);
        __swift_storeEnumTagSinglePayload((uint64_t)v77, 0, 1, v79);
        goto LABEL_35;
      }
    }
    else
    {
      v83 = *(_QWORD *)(v79 - 8);
      if (!v81)
      {
        v82 = v78;
        (*(void (**)(char *, char *, uint64_t))(v83 + 40))(v77, v78, v79);
LABEL_35:
        v85 = type metadata accessor for Participant.CountdownInfo(0);
        v86 = *(int *)(v85 + 20);
        v134 = v77;
        v87 = &v77[v86];
        v88 = &v82[v86];
        v89 = __swift_getEnumTagSinglePayload((uint64_t)v87, 1, v79);
        v90 = __swift_getEnumTagSinglePayload((uint64_t)v88, 1, v79);
        if (v89)
        {
          if (!v90)
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 32))(v87, v88, v79);
            __swift_storeEnumTagSinglePayload((uint64_t)v87, 0, 1, v79);
LABEL_41:
            v134[*(int *)(v85 + 24)] = __srca[*(int *)(v85 + 24)];
            v11[v13[15]] = v138[v13[15]];
            *(_QWORD *)&v11[v13[16]] = *(_QWORD *)&v138[v13[16]];
            swift_release();
            goto LABEL_42;
          }
        }
        else
        {
          v91 = *(_QWORD *)(v79 - 8);
          if (!v90)
          {
            (*(void (**)(char *, char *, uint64_t))(v91 + 40))(v87, v88, v79);
            goto LABEL_41;
          }
          (*(void (**)(char *, uint64_t))(v91 + 8))(v87, v79);
        }
        v92 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
        memcpy(v87, v88, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
        goto LABEL_41;
      }
      (*(void (**)(char *, uint64_t))(v83 + 8))(v77, v79);
    }
    v84 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    v82 = v78;
    memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
    goto LABEL_35;
  }
  if (v15)
  {
LABEL_6:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_42;
  }
  v16 = type metadata accessor for Participant.State(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 5u:
      v26 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v11, v12, v26);
      goto LABEL_12;
    case 4u:
      v19 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v11, v12, v19);
      v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      memcpy(&v11[*(int *)(v20 + 48)], &v12[*(int *)(v20 + 48)], 0x150uLL);
      v21 = *(int *)(v20 + 64);
      v22 = &v11[v21];
      v23 = &v12[v21];
      v24 = *((_OWORD *)v23 + 1);
      *(_OWORD *)v22 = *(_OWORD *)v23;
      *((_OWORD *)v22 + 1) = v24;
      v25 = *((_OWORD *)v23 + 3);
      *((_OWORD *)v22 + 2) = *((_OWORD *)v23 + 2);
      *((_OWORD *)v22 + 3) = v25;
LABEL_12:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      break;
  }
  v27 = v13[5];
  v28 = &v11[v27];
  v29 = &v12[v27];
  v30 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = v13[6];
  v32 = &v11[v31];
  v33 = &v12[v31];
  *(_DWORD *)v32 = *(_DWORD *)v33;
  v32[4] = v33[4];
  v34 = v13[7];
  v35 = &v11[v34];
  v36 = &v12[v34];
  v37 = *((_OWORD *)v36 + 1);
  *(_OWORD *)v35 = *(_OWORD *)v36;
  *((_OWORD *)v35 + 1) = v37;
  *((_QWORD *)v35 + 4) = *((_QWORD *)v36 + 4);
  *(_QWORD *)&v11[v13[8]] = *(_QWORD *)&v12[v13[8]];
  *(_OWORD *)&v11[v13[9]] = *(_OWORD *)&v12[v13[9]];
  v11[v13[10]] = v12[v13[10]];
  *(_QWORD *)&v11[v13[11]] = *(_QWORD *)&v12[v13[11]];
  *(_QWORD *)&v11[v13[12]] = *(_QWORD *)&v12[v13[12]];
  v11[v13[13]] = v12[v13[13]];
  v38 = v13[14];
  v39 = &v11[v38];
  v137 = v12;
  v40 = &v12[v38];
  v41 = type metadata accessor for Date();
  if (__swift_getEnumTagSinglePayload((uint64_t)v40, 1, v41))
  {
    v42 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v39, v40, v41);
    __swift_storeEnumTagSinglePayload((uint64_t)v39, 0, 1, v41);
  }
  v43 = type metadata accessor for Participant.CountdownInfo(0);
  v44 = *(int *)(v43 + 20);
  __src = v39;
  v45 = &v39[v44];
  v46 = &v40[v44];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v40[v44], 1, v41))
  {
    v47 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v45, v46, v41);
    __swift_storeEnumTagSinglePayload((uint64_t)v45, 0, 1, v41);
  }
  __src[*(int *)(v43 + 24)] = v40[*(int *)(v43 + 24)];
  v11[v13[15]] = v137[v13[15]];
  *(_QWORD *)&v11[v13[16]] = *(_QWORD *)&v137[v13[16]];
  __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, (uint64_t)v13);
LABEL_42:
  v93 = a3[6];
  v94 = (char *)a1 + v93;
  v95 = (char *)a2 + v93;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1 + v93);
  v96 = *((_OWORD *)v95 + 1);
  *(_OWORD *)v94 = *(_OWORD *)v95;
  *((_OWORD *)v94 + 1) = v96;
  *((_QWORD *)v94 + 4) = *((_QWORD *)v95 + 4);
  v97 = a3[7];
  v98 = (char *)a1 + v97;
  v99 = (char *)a2 + v97;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1 + v97);
  v100 = *(_OWORD *)v99;
  v101 = *((_OWORD *)v99 + 1);
  *((_QWORD *)v98 + 4) = *((_QWORD *)v99 + 4);
  v102 = a3[8];
  v103 = a3[9];
  v104 = *((_BYTE *)a2 + v102);
  *(_OWORD *)v98 = v100;
  *((_OWORD *)v98 + 1) = v101;
  *((_BYTE *)a1 + v102) = v104;
  v105 = (char *)a1 + v103;
  v106 = (char *)a2 + v103;
  *(_QWORD *)v105 = *(_QWORD *)v106;
  v105[8] = v106[8];
  v107 = a3[10];
  v108 = (char *)a1 + v107;
  v109 = (char *)a2 + v107;
  v110 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v110 - 8) + 40))(v108, v109, v110);
  v111 = a3[11];
  v112 = (char *)a1 + v111;
  v113 = (char *)a2 + v111;
  v114 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v114 - 8) + 40))(v112, v113, v114);
  v115 = a3[12];
  v116 = (uint64_t *)((char *)a1 + v115);
  v117 = (uint64_t *)((char *)a2 + v115);
  v119 = *v117;
  v118 = v117[1];
  *v116 = v119;
  v116[1] = v118;
  swift_bridgeObjectRelease();
  v120 = a3[14];
  *((_BYTE *)a1 + a3[13]) = *((_BYTE *)a2 + a3[13]);
  v121 = (uint64_t *)((char *)a1 + v120);
  v122 = (char *)a2 + v120;
  v123 = *(uint64_t *)((char *)a2 + v120);
  if (*(uint64_t *)((char *)a1 + v120))
  {
    if (v123)
    {
      v124 = *((_QWORD *)v122 + 1);
      *v121 = v123;
      v121[1] = v124;
      swift_release();
      goto LABEL_49;
    }
    swift_release();
  }
  else if (v123)
  {
    v125 = *((_QWORD *)v122 + 1);
    *v121 = v123;
    v121[1] = v125;
    goto LABEL_49;
  }
  *(_OWORD *)v121 = *(_OWORD *)v122;
LABEL_49:
  v126 = a3[15];
  v127 = (uint64_t *)((char *)a1 + v126);
  v128 = (uint64_t *)((char *)a2 + v126);
  v129 = *(uint64_t *)((char *)a1 + v126);
  v130 = *v128;
  if (!v129)
  {
    if (v130)
    {
      v132 = v128[1];
      *v127 = v130;
      v127[1] = v132;
      return a1;
    }
LABEL_55:
    *(_OWORD *)v127 = *(_OWORD *)v128;
    return a1;
  }
  if (!v130)
  {
    swift_release();
    goto LABEL_55;
  }
  v131 = v128[1];
  *v127 = v130;
  v127[1] = v131;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionActionNotice()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1BD306610()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_220();
  if (v2)
  {
    OUTLINED_FUNCTION_18();
  }
  else
  {
    v1 = v0;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
    OUTLINED_FUNCTION_44_6();
    if (v2)
    {
      OUTLINED_FUNCTION_335_0();
    }
    else
    {
      OUTLINED_FUNCTION_33_0();
      OUTLINED_FUNCTION_44_6();
      if (v4)
      {
        v3 = *(int *)(v1 + 40);
      }
      else
      {
        OUTLINED_FUNCTION_33();
        v3 = *(int *)(v1 + 44);
      }
    }
    v5 = OUTLINED_FUNCTION_295(v3);
    OUTLINED_FUNCTION_1_16(v5, v6, v7);
  }
}

uint64_t storeEnumTagSinglePayload for SessionActionNotice()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BD3066A4()
{
  int v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_15_13();
  if (v4)
  {
    *v1 = 0;
    v1[1] = 0;
    v1[2] = 4 * -v0;
    v1[3] = 0;
    OUTLINED_FUNCTION_18();
  }
  else
  {
    v3 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
    OUTLINED_FUNCTION_45_7();
    if (v4)
    {
      OUTLINED_FUNCTION_402_0();
    }
    else
    {
      OUTLINED_FUNCTION_33_0();
      OUTLINED_FUNCTION_45_7();
      if (v6)
      {
        v5 = *(int *)(v3 + 40);
      }
      else
      {
        OUTLINED_FUNCTION_33();
        v5 = *(int *)(v3 + 44);
      }
    }
    v7 = OUTLINED_FUNCTION_146_0(v5);
    OUTLINED_FUNCTION_0_29(v7, v8, v9, v10);
  }
}

void type metadata completion function for SessionActionNotice()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  type metadata accessor for UIListContentConfiguration?(319, (unint64_t *)&lazy cache variable for type metadata for Participant?, (void (*)(uint64_t))type metadata accessor for Participant);
  if (v0 <= 0x3F)
  {
    type metadata accessor for UUID();
    if (v1 <= 0x3F)
    {
      type metadata accessor for Date();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t destroy for SessionActionNotice.NoticeType(uint64_t a1)
{
  return outlined consume of SessionActionNotice.NoticeType(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16));
}

uint64_t *initializeWithCopy for SessionActionNotice.NoticeType(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  outlined copy of SessionActionNotice.NoticeType(*a2, v4, v5);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  return a1;
}

uint64_t *assignWithCopy for SessionActionNotice.NoticeType(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  outlined copy of SessionActionNotice.NoticeType(*a2, v4, v5);
  v7 = *a1;
  v8 = a1[1];
  v9 = a1[2];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  outlined consume of SessionActionNotice.NoticeType(v7, v8, v9);
  return a1;
}

uint64_t *assignWithTake for SessionActionNotice.NoticeType(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  __int128 v6;

  v3 = *a1;
  v5 = a1[1];
  v4 = a1[2];
  v6 = a2[1];
  *(_OWORD *)a1 = *a2;
  *((_OWORD *)a1 + 1) = v6;
  outlined consume of SessionActionNotice.NoticeType(v3, v5, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionActionNotice.NoticeType(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 32))
    {
      v3 = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 16) >> 2;
      if (v2 > 0x80000000)
        v3 = ~(_DWORD)v2;
      else
        v3 = -1;
    }
  }
  else
  {
    v3 = -1;
  }
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for SessionActionNotice.NoticeType(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = 4 * -a2;
      *(_QWORD *)(result + 24) = 0;
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t getEnumTag for SessionActionNotice.NoticeType(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 16) >> 62;
  if ((_DWORD)v1 == 3)
    return (*(_DWORD *)a1 + 3);
  else
    return v1;
}

uint64_t destructiveProjectEnumData for SessionActionNotice.NoticeType(uint64_t result)
{
  *(_QWORD *)(result + 16) &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t destructiveInjectEnumTag for SessionActionNotice.NoticeType(uint64_t result, uint64_t a2)
{
  if (a2 < 3)
  {
    *(_QWORD *)(result + 16) = *(_QWORD *)(result + 16) & 3 | (a2 << 62);
  }
  else
  {
    *(_QWORD *)result = (a2 - 3);
    *(_OWORD *)(result + 8) = xmmword_1BD656700;
    *(_QWORD *)(result + 24) = 0;
  }
  return result;
}

void type metadata accessor for SessionActionNotice.NoticeType()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t initializeBufferWithCopyOfBuffer for SessionActionNotice.QueueItemType(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  v6 = OUTLINED_FUNCTION_64();
  outlined copy of CallScreening.EndingAction(v6, v7, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for SessionActionNotice.QueueItemType(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  outlined copy of CallScreening.EndingAction(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  outlined consume of CallScreening.EndingAction(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for SessionActionNotice.QueueItemType(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  outlined consume of CallScreening.EndingAction(v4, v5, v6);
  return a1;
}

void type metadata accessor for SessionActionNotice.QueueItemType()
{
  OUTLINED_FUNCTION_34_0();
}

_QWORD *initializeBufferWithCopyOfBuffer for AppLaunchNotice(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  char *v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  unint64_t v33;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v25 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UUID();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[7];
    *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    v13 = *(void **)((char *)a2 + v12);
    *(_QWORD *)((char *)a1 + v12) = v13;
    v14 = a3[8];
    v15 = a3[9];
    v16 = *(void **)((char *)a2 + v14);
    *(_QWORD *)((char *)a1 + v14) = v16;
    *((_BYTE *)a1 + v15) = *((_BYTE *)a2 + v15);
    v17 = a3[11];
    *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
    *((_BYTE *)a1 + v17) = *((_BYTE *)a2 + v17);
    v18 = a3[13];
    *((_BYTE *)a1 + a3[12]) = *((_BYTE *)a2 + a3[12]);
    v19 = (_QWORD *)((char *)a1 + v18);
    v20 = (char *)a2 + v18;
    v21 = *(_QWORD *)((char *)a2 + v18);
    v22 = v13;
    v23 = v16;
    if (v21)
    {
      v24 = *((_QWORD *)v20 + 1);
      *v19 = v21;
      v19[1] = v24;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v19 = *(_OWORD *)v20;
    }
    v26 = a3[14];
    v27 = (_QWORD *)((char *)a1 + v26);
    v28 = (_QWORD *)((char *)a2 + v26);
    if (*v28)
    {
      v29 = v28[1];
      *v27 = *v28;
      v27[1] = v29;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v27 = *(_OWORD *)v28;
    }
    v30 = a3[16];
    *((_BYTE *)a1 + a3[15]) = *((_BYTE *)a2 + a3[15]);
    v31 = (_QWORD *)((char *)a1 + v30);
    v32 = (_QWORD *)((char *)a2 + v30);
    v33 = v32[1];
    if (v33 >= 2)
    {
      *v31 = *v32;
      v31[1] = v33;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)v31 = *(_OWORD *)v32;
    }
  }
  return a1;
}

unint64_t destroy for AppLaunchNotice(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;

  v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);

  if (*(_QWORD *)(a1 + a2[13]))
    swift_release();
  if (*(_QWORD *)(a1 + a2[14]))
    swift_release();
  result = *(_QWORD *)(a1 + a2[16] + 8);
  if (result >= 2)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t initializeWithCopy for AppLaunchNotice(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  unint64_t v31;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v12 = *(void **)(a2 + v11);
  *(_QWORD *)(a1 + v11) = v12;
  v13 = a3[8];
  v14 = a3[9];
  v15 = *(void **)(a2 + v13);
  *(_QWORD *)(a1 + v13) = v15;
  *(_BYTE *)(a1 + v14) = *(_BYTE *)(a2 + v14);
  v16 = a3[11];
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  *(_BYTE *)(a1 + v16) = *(_BYTE *)(a2 + v16);
  v17 = a3[13];
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  v18 = (_QWORD *)(a1 + v17);
  v19 = a2 + v17;
  v20 = *(_QWORD *)(a2 + v17);
  v21 = v12;
  v22 = v15;
  if (v20)
  {
    v23 = *(_QWORD *)(v19 + 8);
    *v18 = v20;
    v18[1] = v23;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v18 = *(_OWORD *)v19;
  }
  v24 = a3[14];
  v25 = (_QWORD *)(a1 + v24);
  v26 = (_QWORD *)(a2 + v24);
  if (*v26)
  {
    v27 = v26[1];
    *v25 = *v26;
    v25[1] = v27;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v25 = *(_OWORD *)v26;
  }
  v28 = a3[16];
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  v29 = (_QWORD *)(a1 + v28);
  v30 = (_QWORD *)(a2 + v28);
  v31 = v30[1];
  if (v31 >= 2)
  {
    *v29 = *v30;
    v29[1] = v31;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v29 = *(_OWORD *)v30;
  }
  return a1;
}

uint64_t assignWithCopy for AppLaunchNotice(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  unint64_t v36;
  unint64_t v37;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v11 = a3[7];
  v12 = *(void **)(a2 + v11);
  v13 = *(void **)(a1 + v11);
  *(_QWORD *)(a1 + v11) = v12;
  v14 = v12;

  v15 = a3[8];
  v16 = *(void **)(a2 + v15);
  v17 = *(void **)(a1 + v15);
  *(_QWORD *)(a1 + v15) = v16;
  v18 = v16;

  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  v19 = a3[13];
  v20 = (_QWORD *)(a1 + v19);
  v21 = a2 + v19;
  v22 = *(_QWORD *)(a1 + v19);
  v23 = *(_QWORD *)(a2 + v19);
  if (v22)
  {
    if (v23)
    {
      v24 = *(_QWORD *)(v21 + 8);
      *v20 = v23;
      v20[1] = v24;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v23)
  {
    v25 = *(_QWORD *)(v21 + 8);
    *v20 = v23;
    v20[1] = v25;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)v20 = *(_OWORD *)v21;
LABEL_8:
  v26 = a3[14];
  v27 = (_QWORD *)(a1 + v26);
  v28 = a2 + v26;
  v29 = *(_QWORD *)(a1 + v26);
  v30 = *(_QWORD *)(a2 + v26);
  if (v29)
  {
    if (v30)
    {
      v31 = *(_QWORD *)(v28 + 8);
      *v27 = v30;
      v27[1] = v31;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v30)
  {
    v32 = *(_QWORD *)(v28 + 8);
    *v27 = v30;
    v27[1] = v32;
    swift_retain();
    goto LABEL_15;
  }
  *(_OWORD *)v27 = *(_OWORD *)v28;
LABEL_15:
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  v33 = a3[16];
  v34 = (_QWORD *)(a1 + v33);
  v35 = (_QWORD *)(a2 + v33);
  v36 = *(_QWORD *)(a1 + v33 + 8);
  v37 = v35[1];
  if (v36 >= 2)
  {
    if (v37 >= 2)
    {
      *v34 = *v35;
      v34[1] = v35[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v34, &demangling cache variable for type metadata for (title: String));
    goto LABEL_20;
  }
  if (v37 < 2)
  {
LABEL_20:
    *(_OWORD *)v34 = *(_OWORD *)v35;
    return a1;
  }
  *v34 = *v35;
  v34[1] = v35[1];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t initializeWithTake for AppLaunchNotice(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);
  v12 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_BYTE *)(a1 + v12) = *(_BYTE *)(a2 + v12);
  v13 = a3[11];
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  *(_BYTE *)(a1 + v13) = *(_BYTE *)(a2 + v13);
  v14 = a3[13];
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  v15 = (_QWORD *)(a1 + v14);
  v16 = (uint64_t *)(a2 + v14);
  v17 = *v16;
  if (*v16)
  {
    v18 = v16[1];
    *v15 = v17;
    v15[1] = v18;
  }
  else
  {
    *(_OWORD *)v15 = *(_OWORD *)v16;
  }
  v19 = a3[14];
  v20 = (_QWORD *)(a1 + v19);
  v21 = (uint64_t *)(a2 + v19);
  v22 = *v21;
  if (*v21)
  {
    v23 = v21[1];
    *v20 = v22;
    v20[1] = v23;
  }
  else
  {
    *(_OWORD *)v20 = *(_OWORD *)v21;
  }
  v24 = a3[16];
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  *(_OWORD *)(a1 + v24) = *(_OWORD *)(a2 + v24);
  return a1;
}

uint64_t assignWithTake for AppLaunchNotice(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  unint64_t v34;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v12 = *(void **)(a1 + v11);
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);

  v13 = a3[8];
  v14 = *(void **)(a1 + v13);
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);

  v15 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v15) = *(_QWORD *)(a2 + v15);
  v16 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_BYTE *)(a1 + v16) = *(_BYTE *)(a2 + v16);
  v17 = a3[13];
  v18 = (_QWORD *)(a1 + v17);
  v19 = a2 + v17;
  v20 = *(_QWORD *)(a1 + v17);
  v21 = *(_QWORD *)(a2 + v17);
  if (v20)
  {
    if (v21)
    {
      v22 = *(_QWORD *)(v19 + 8);
      *v18 = v21;
      v18[1] = v22;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v21)
  {
    v23 = *(_QWORD *)(v19 + 8);
    *v18 = v21;
    v18[1] = v23;
    goto LABEL_8;
  }
  *(_OWORD *)v18 = *(_OWORD *)v19;
LABEL_8:
  v24 = a3[14];
  v25 = (_QWORD *)(a1 + v24);
  v26 = a2 + v24;
  v27 = *(_QWORD *)(a1 + v24);
  v28 = *(_QWORD *)(a2 + v24);
  if (v27)
  {
    if (v28)
    {
      v29 = *(_QWORD *)(v26 + 8);
      *v25 = v28;
      v25[1] = v29;
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v28)
  {
    v30 = *(_QWORD *)(v26 + 8);
    *v25 = v28;
    v25[1] = v30;
    goto LABEL_15;
  }
  *(_OWORD *)v25 = *(_OWORD *)v26;
LABEL_15:
  v31 = a3[16];
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  v32 = (_QWORD *)(a1 + v31);
  v33 = (_QWORD *)(a2 + v31);
  if (*(_QWORD *)(a1 + v31 + 8) >= 2uLL)
  {
    v34 = v33[1];
    if (v34 >= 2)
    {
      *v32 = *v33;
      v32[1] = v34;
      swift_bridgeObjectRelease();
      return a1;
    }
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(a1 + v31, &demangling cache variable for type metadata for (title: String));
  }
  *(_OWORD *)v32 = *(_OWORD *)v33;
  return a1;
}

uint64_t getEnumTagSinglePayload for AppLaunchNotice()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1BD307404(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_44_6();
  if (v9)
  {
    v7 = v6;
    v8 = a1;
  }
  else
  {
    OUTLINED_FUNCTION_33();
    OUTLINED_FUNCTION_44_6();
    if (!v9)
    {
      OUTLINED_FUNCTION_93_0(*(_QWORD *)(a1 + *(int *)(a3 + 28)));
      OUTLINED_FUNCTION_18();
      return;
    }
    OUTLINED_FUNCTION_335_0();
    v8 = a1 + v10;
  }
  OUTLINED_FUNCTION_1_16(v8, a2, v7);
}

uint64_t storeEnumTagSinglePayload for AppLaunchNotice()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BD307478(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;

  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_45_7();
  if (v10)
  {
    v8 = v7;
    v9 = a1;
  }
  else
  {
    OUTLINED_FUNCTION_33();
    OUTLINED_FUNCTION_45_7();
    if (!v10)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
      OUTLINED_FUNCTION_18();
      return;
    }
    OUTLINED_FUNCTION_402_0();
    v9 = a1 + v11;
  }
  OUTLINED_FUNCTION_0_29(v9, a2, a2, v8);
}

uint64_t type metadata completion function for AppLaunchNotice()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for Date();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for PushToTalkNotice(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  unint64_t v40;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return a1;
  }
  v7 = type metadata accessor for UUID();
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
  v8 = a3[5];
  v9 = (_QWORD *)((char *)a1 + v8);
  v10 = (_QWORD *)((char *)a2 + v8);
  type metadata accessor for PushToTalkNotice.NoticeType(0);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v17 = v10[1];
    *v9 = *v10;
    v9[1] = v17;
    swift_bridgeObjectRetain();
    v18 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (speaker: String, image: URL?))
                 + 48);
    v12 = (char *)v9 + v18;
    v13 = (char *)v10 + v18;
    v14 = type metadata accessor for URL();
    if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14))
      goto LABEL_4;
LABEL_7:
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
    goto LABEL_8;
  }
  *(_BYTE *)v9 = *(_BYTE *)v10;
  v11 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (enabled: Bool, image: URL?))
               + 48);
  v12 = (char *)v9 + v11;
  v13 = (char *)v10 + v11;
  v14 = type metadata accessor for URL();
  if (!__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14))
    goto LABEL_7;
LABEL_4:
  v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
LABEL_8:
  swift_storeEnumTagMultiPayload();
  v19 = a3[6];
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  v24 = (_QWORD *)((char *)a1 + v23);
  v25 = (_QWORD *)((char *)a2 + v23);
  v26 = v25[1];
  *v24 = *v25;
  v24[1] = v26;
  v27 = a3[10];
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  *((_BYTE *)a1 + v27) = *((_BYTE *)a2 + v27);
  v28 = a3[11];
  v29 = (_QWORD *)((char *)a1 + v28);
  v30 = (char *)a2 + v28;
  v31 = *(_QWORD *)((char *)a2 + v28);
  swift_bridgeObjectRetain();
  if (v31)
  {
    v32 = *((_QWORD *)v30 + 1);
    *v29 = v31;
    v29[1] = v32;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v29 = *(_OWORD *)v30;
  }
  v33 = a3[12];
  v34 = (_QWORD *)((char *)a1 + v33);
  v35 = (_QWORD *)((char *)a2 + v33);
  if (*v35)
  {
    v36 = v35[1];
    *v34 = *v35;
    v34[1] = v36;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v34 = *(_OWORD *)v35;
  }
  v37 = a3[14];
  *((_BYTE *)a1 + a3[13]) = *((_BYTE *)a2 + a3[13]);
  v38 = (_QWORD *)((char *)a1 + v37);
  v39 = (_QWORD *)((char *)a2 + v37);
  v40 = v39[1];
  if (v40 >= 2)
  {
    *v38 = *v39;
    v38[1] = v40;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v38 = *(_OWORD *)v39;
  }
  return a1;
}

unint64_t destroy for PushToTalkNotice(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t result;

  v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  type metadata accessor for PushToTalkNotice.NoticeType(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = &demangling cache variable for type metadata for (enabled: Bool, image: URL?);
  }
  else
  {
    swift_bridgeObjectRelease();
    v6 = &demangling cache variable for type metadata for (speaker: String, image: URL?);
  }
  v7 = v5 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(v6) + 48);
  v8 = type metadata accessor for URL();
  if (!__swift_getEnumTagSinglePayload(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[6];
  v10 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[11]))
    swift_release();
  if (*(_QWORD *)(a1 + a2[12]))
    swift_release();
  result = *(_QWORD *)(a1 + a2[14] + 8);
  if (result >= 2)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t initializeWithCopy for PushToTalkNotice(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  unint64_t v38;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  type metadata accessor for PushToTalkNotice.NoticeType(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_BYTE *)v8 = *(_BYTE *)v9;
    v10 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (enabled: Bool, image: URL?))
                 + 48);
    v11 = (void *)(v8 + v10);
    v12 = (const void *)(v9 + v10);
    v13 = type metadata accessor for URL();
    if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
    {
LABEL_3:
      v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      goto LABEL_6;
    }
  }
  else
  {
    v15 = *(_QWORD *)(v9 + 8);
    *(_QWORD *)v8 = *(_QWORD *)v9;
    *(_QWORD *)(v8 + 8) = v15;
    swift_bridgeObjectRetain();
    v16 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (speaker: String, image: URL?))
                 + 48);
    v11 = (void *)(v8 + v16);
    v12 = (const void *)(v9 + v16);
    v13 = type metadata accessor for URL();
    if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
      goto LABEL_3;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
LABEL_6:
  swift_storeEnumTagMultiPayload();
  v17 = a3[6];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  v21 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v22 = (_QWORD *)(a1 + v21);
  v23 = (_QWORD *)(a2 + v21);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  v25 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v25) = *(_BYTE *)(a2 + v25);
  v26 = a3[11];
  v27 = (_QWORD *)(a1 + v26);
  v28 = a2 + v26;
  v29 = *(_QWORD *)(a2 + v26);
  swift_bridgeObjectRetain();
  if (v29)
  {
    v30 = *(_QWORD *)(v28 + 8);
    *v27 = v29;
    v27[1] = v30;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v27 = *(_OWORD *)v28;
  }
  v31 = a3[12];
  v32 = (_QWORD *)(a1 + v31);
  v33 = (_QWORD *)(a2 + v31);
  if (*v33)
  {
    v34 = v33[1];
    *v32 = *v33;
    v32[1] = v34;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v32 = *(_OWORD *)v33;
  }
  v35 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  v36 = (_QWORD *)(a1 + v35);
  v37 = (_QWORD *)(a2 + v35);
  v38 = v37[1];
  if (v38 >= 2)
  {
    *v36 = *v37;
    v36[1] = v38;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v36 = *(_OWORD *)v37;
  }
  return a1;
}

uint64_t assignWithCopy for PushToTalkNotice(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  unint64_t v40;
  unint64_t v41;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  if (a1 != a2)
  {
    v7 = a3[5];
    v8 = a1 + v7;
    v9 = a2 + v7;
    outlined destroy of Participant(a1 + v7, type metadata accessor for PushToTalkNotice.NoticeType);
    type metadata accessor for PushToTalkNotice.NoticeType(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_BYTE *)v8 = *(_BYTE *)v9;
      v10 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (enabled: Bool, image: URL?))
                   + 48);
      v11 = (void *)(v8 + v10);
      v12 = (const void *)(v9 + v10);
      v13 = type metadata accessor for URL();
      if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
      {
LABEL_4:
        v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
LABEL_7:
        swift_storeEnumTagMultiPayload();
        goto LABEL_8;
      }
    }
    else
    {
      *(_QWORD *)v8 = *(_QWORD *)v9;
      *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
      swift_bridgeObjectRetain();
      v15 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (speaker: String, image: URL?))
                   + 48);
      v11 = (void *)(v8 + v15);
      v12 = (const void *)(v9 + v15);
      v13 = type metadata accessor for URL();
      if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
        goto LABEL_4;
    }
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
    __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
    goto LABEL_7;
  }
LABEL_8:
  v16 = a3[6];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 24))(v17, v18, v19);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v20 = a3[8];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (_QWORD *)(a2 + v20);
  *v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v23 = a3[11];
  v24 = (_QWORD *)(a1 + v23);
  v25 = a2 + v23;
  v26 = *(_QWORD *)(a1 + v23);
  v27 = *(_QWORD *)(a2 + v23);
  if (v26)
  {
    if (v27)
    {
      v28 = *(_QWORD *)(v25 + 8);
      *v24 = v27;
      v24[1] = v28;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v27)
  {
    v29 = *(_QWORD *)(v25 + 8);
    *v24 = v27;
    v24[1] = v29;
    swift_retain();
    goto LABEL_15;
  }
  *(_OWORD *)v24 = *(_OWORD *)v25;
LABEL_15:
  v30 = a3[12];
  v31 = (_QWORD *)(a1 + v30);
  v32 = a2 + v30;
  v33 = *(_QWORD *)(a1 + v30);
  v34 = *(_QWORD *)(a2 + v30);
  if (v33)
  {
    if (v34)
    {
      v35 = *(_QWORD *)(v32 + 8);
      *v31 = v34;
      v31[1] = v35;
      swift_retain();
      swift_release();
      goto LABEL_22;
    }
    swift_release();
  }
  else if (v34)
  {
    v36 = *(_QWORD *)(v32 + 8);
    *v31 = v34;
    v31[1] = v36;
    swift_retain();
    goto LABEL_22;
  }
  *(_OWORD *)v31 = *(_OWORD *)v32;
LABEL_22:
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  v37 = a3[14];
  v38 = (_QWORD *)(a1 + v37);
  v39 = (_QWORD *)(a2 + v37);
  v40 = *(_QWORD *)(a1 + v37 + 8);
  v41 = v39[1];
  if (v40 >= 2)
  {
    if (v41 >= 2)
    {
      *v38 = *v39;
      v38[1] = v39[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v38, &demangling cache variable for type metadata for (title: String));
    goto LABEL_27;
  }
  if (v41 < 2)
  {
LABEL_27:
    *(_OWORD *)v38 = *(_OWORD *)v39;
    return a1;
  }
  *v38 = *v39;
  v38[1] = v39[1];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t initializeWithTake for PushToTalkNotice(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_BYTE *)(a1 + v7);
  v9 = (_BYTE *)(a2 + v7);
  type metadata accessor for PushToTalkNotice.NoticeType(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *v8 = *v9;
    v10 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (enabled: Bool, image: URL?))
                 + 48);
    v11 = &v8[v10];
    v12 = &v9[v10];
    v13 = type metadata accessor for URL();
    if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
    {
LABEL_3:
      v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      goto LABEL_6;
    }
  }
  else
  {
    *(_OWORD *)v8 = *(_OWORD *)v9;
    v15 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (speaker: String, image: URL?))
                 + 48);
    v11 = &v8[v15];
    v12 = &v9[v15];
    v13 = type metadata accessor for URL();
    if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
      goto LABEL_3;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
LABEL_6:
  swift_storeEnumTagMultiPayload();
  v16 = a3[6];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
  v20 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v20) = *(_OWORD *)(a2 + v20);
  v21 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v21) = *(_BYTE *)(a2 + v21);
  v22 = a3[11];
  v23 = (_QWORD *)(a1 + v22);
  v24 = (uint64_t *)(a2 + v22);
  v25 = *v24;
  if (*v24)
  {
    v26 = v24[1];
    *v23 = v25;
    v23[1] = v26;
  }
  else
  {
    *(_OWORD *)v23 = *(_OWORD *)v24;
  }
  v27 = a3[12];
  v28 = (_QWORD *)(a1 + v27);
  v29 = (uint64_t *)(a2 + v27);
  v30 = *v29;
  if (*v29)
  {
    v31 = v29[1];
    *v28 = v30;
    v28[1] = v31;
  }
  else
  {
    *(_OWORD *)v28 = *(_OWORD *)v29;
  }
  v32 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  *(_OWORD *)(a1 + v32) = *(_OWORD *)(a2 + v32);
  return a1;
}

uint64_t assignWithTake for PushToTalkNotice(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  unint64_t v43;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  if (a1 != a2)
  {
    v7 = a3[5];
    v8 = (_BYTE *)(a1 + v7);
    v9 = (_BYTE *)(a2 + v7);
    outlined destroy of Participant(a1 + v7, type metadata accessor for PushToTalkNotice.NoticeType);
    type metadata accessor for PushToTalkNotice.NoticeType(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *v8 = *v9;
      v10 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (enabled: Bool, image: URL?))
                   + 48);
      v11 = &v8[v10];
      v12 = &v9[v10];
      v13 = type metadata accessor for URL();
      if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
      {
LABEL_4:
        v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
LABEL_7:
        swift_storeEnumTagMultiPayload();
        goto LABEL_8;
      }
    }
    else
    {
      *(_OWORD *)v8 = *(_OWORD *)v9;
      v15 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (speaker: String, image: URL?))
                   + 48);
      v11 = &v8[v15];
      v12 = &v9[v15];
      v13 = type metadata accessor for URL();
      if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
        goto LABEL_4;
    }
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
    __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
    goto LABEL_7;
  }
LABEL_8:
  v16 = a3[6];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 40))(v17, v18, v19);
  v20 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v21 = (_QWORD *)(a1 + v20);
  v22 = (uint64_t *)(a2 + v20);
  v24 = *v22;
  v23 = v22[1];
  *v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  v25 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v25) = *(_BYTE *)(a2 + v25);
  v26 = a3[11];
  v27 = (_QWORD *)(a1 + v26);
  v28 = a2 + v26;
  v29 = *(_QWORD *)(a1 + v26);
  v30 = *(_QWORD *)(a2 + v26);
  if (v29)
  {
    if (v30)
    {
      v31 = *(_QWORD *)(v28 + 8);
      *v27 = v30;
      v27[1] = v31;
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v30)
  {
    v32 = *(_QWORD *)(v28 + 8);
    *v27 = v30;
    v27[1] = v32;
    goto LABEL_15;
  }
  *(_OWORD *)v27 = *(_OWORD *)v28;
LABEL_15:
  v33 = a3[12];
  v34 = (_QWORD *)(a1 + v33);
  v35 = a2 + v33;
  v36 = *(_QWORD *)(a1 + v33);
  v37 = *(_QWORD *)(a2 + v33);
  if (v36)
  {
    if (v37)
    {
      v38 = *(_QWORD *)(v35 + 8);
      *v34 = v37;
      v34[1] = v38;
      swift_release();
      goto LABEL_22;
    }
    swift_release();
  }
  else if (v37)
  {
    v39 = *(_QWORD *)(v35 + 8);
    *v34 = v37;
    v34[1] = v39;
    goto LABEL_22;
  }
  *(_OWORD *)v34 = *(_OWORD *)v35;
LABEL_22:
  v40 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  v41 = (_QWORD *)(a1 + v40);
  v42 = (_QWORD *)(a2 + v40);
  if (*(_QWORD *)(a1 + v40 + 8) >= 2uLL)
  {
    v43 = v42[1];
    if (v43 >= 2)
    {
      *v41 = *v42;
      v41[1] = v43;
      swift_bridgeObjectRelease();
      return a1;
    }
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(a1 + v40, &demangling cache variable for type metadata for (title: String));
  }
  *(_OWORD *)v41 = *(_OWORD *)v42;
  return a1;
}

uint64_t getEnumTagSinglePayload for PushToTalkNotice()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1BD308630(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;

  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_44_6();
  if (v9)
  {
    v7 = v6;
    v8 = a1;
  }
  else
  {
    type metadata accessor for PushToTalkNotice.NoticeType(0);
    OUTLINED_FUNCTION_44_6();
    if (v9)
    {
      OUTLINED_FUNCTION_335_0();
    }
    else
    {
      OUTLINED_FUNCTION_33();
      OUTLINED_FUNCTION_44_6();
      if (!v11)
      {
        OUTLINED_FUNCTION_195(*(_QWORD *)(a1 + *(int *)(a3 + 32) + 8));
        OUTLINED_FUNCTION_18();
        return;
      }
      OUTLINED_FUNCTION_276();
    }
    v8 = a1 + v10;
  }
  OUTLINED_FUNCTION_1_16(v8, a2, v7);
}

uint64_t storeEnumTagSinglePayload for PushToTalkNotice()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BD3086C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;

  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_45_7();
  if (v10)
  {
    v8 = v7;
    v9 = a1;
  }
  else
  {
    type metadata accessor for PushToTalkNotice.NoticeType(0);
    OUTLINED_FUNCTION_45_7();
    if (v10)
    {
      OUTLINED_FUNCTION_402_0();
    }
    else
    {
      OUTLINED_FUNCTION_33();
      OUTLINED_FUNCTION_45_7();
      if (!v12)
      {
        *(_QWORD *)(a1 + *(int *)(a4 + 32) + 8) = a2;
        OUTLINED_FUNCTION_18();
        return;
      }
      OUTLINED_FUNCTION_316_0();
    }
    v9 = a1 + v11;
  }
  OUTLINED_FUNCTION_0_29(v9, a2, a2, v8);
}

uint64_t type metadata completion function for PushToTalkNotice()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for PushToTalkNotice.NoticeType(319);
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for Date();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for PushToTalkNotice.NoticeType(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  void *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (enabled: Bool, image: URL?))
                  + 48);
      v7 = (void *)(a1 + v6);
      v8 = (char *)a2 + v6;
      v9 = type metadata accessor for URL();
      if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
        goto LABEL_7;
    }
    else
    {
      v11 = a2[1];
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = v11;
      swift_bridgeObjectRetain();
      v12 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (speaker: String, image: URL?))
                   + 48);
      v7 = (void *)(a1 + v12);
      v8 = (char *)a2 + v12;
      v9 = type metadata accessor for URL();
      if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
      {
LABEL_7:
        v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
LABEL_9:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
    }
    (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
    goto LABEL_9;
  }
  v10 = *a2;
  *(_QWORD *)a1 = *a2;
  a1 = v10 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain();
  return a1;
}

uint64_t destroy for PushToTalkNotice.NoticeType(uint64_t a1)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v2 = &demangling cache variable for type metadata for (enabled: Bool, image: URL?);
  }
  else
  {
    swift_bridgeObjectRelease();
    v2 = &demangling cache variable for type metadata for (speaker: String, image: URL?);
  }
  v3 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(v2) + 48);
  v4 = type metadata accessor for URL();
  result = __swift_getEnumTagSinglePayload(v3, 1, v4);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return result;
}

_QWORD *initializeWithCopy for PushToTalkNotice.NoticeType(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    swift_bridgeObjectRetain();
    v10 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (speaker: String, image: URL?))
                 + 48);
    v5 = (char *)a1 + v10;
    v6 = (char *)a2 + v10;
    v7 = type metadata accessor for URL();
    if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7))
      goto LABEL_3;
LABEL_5:
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
    __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v7);
    goto LABEL_6;
  }
  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (enabled: Bool, image: URL?))
              + 48);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for URL();
  if (!__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7))
    goto LABEL_5;
LABEL_3:
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
LABEL_6:
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for PushToTalkNotice.NoticeType(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (a1 != a2)
  {
    outlined destroy of Participant(a1, type metadata accessor for PushToTalkNotice.NoticeType);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v4 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (enabled: Bool, image: URL?))
                  + 48);
      v5 = (void *)(a1 + v4);
      v6 = (const void *)(a2 + v4);
      v7 = type metadata accessor for URL();
      if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7))
      {
LABEL_4:
        v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
        memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
LABEL_7:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
    }
    else
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      swift_bridgeObjectRetain();
      v9 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (speaker: String, image: URL?))
                  + 48);
      v5 = (void *)(a1 + v9);
      v6 = (const void *)(a2 + v9);
      v7 = type metadata accessor for URL();
      if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7))
        goto LABEL_4;
    }
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
    __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v7);
    goto LABEL_7;
  }
  return a1;
}

_OWORD *initializeWithTake for PushToTalkNotice.NoticeType(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (swift_getEnumCaseMultiPayload() != 1)
  {
    *a1 = *a2;
    v9 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (speaker: String, image: URL?))
                + 48);
    v5 = (char *)a1 + v9;
    v6 = (char *)a2 + v9;
    v7 = type metadata accessor for URL();
    if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7))
      goto LABEL_3;
LABEL_5:
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
    __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v7);
    goto LABEL_6;
  }
  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (enabled: Bool, image: URL?))
              + 48);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for URL();
  if (!__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7))
    goto LABEL_5;
LABEL_3:
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
LABEL_6:
  swift_storeEnumTagMultiPayload();
  return a1;
}

_BYTE *assignWithTake for PushToTalkNotice.NoticeType(_BYTE *a1, _BYTE *a2)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (a1 != a2)
  {
    outlined destroy of Participant((uint64_t)a1, type metadata accessor for PushToTalkNotice.NoticeType);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      v4 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (enabled: Bool, image: URL?))
                  + 48);
      v5 = &a1[v4];
      v6 = &a2[v4];
      v7 = type metadata accessor for URL();
      if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7))
      {
LABEL_4:
        v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
        memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
LABEL_7:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
    }
    else
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v9 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (speaker: String, image: URL?))
                  + 48);
      v5 = &a1[v9];
      v6 = &a2[v9];
      v7 = type metadata accessor for URL();
      if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7))
        goto LABEL_4;
    }
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
    __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v7);
    goto LABEL_7;
  }
  return a1;
}

void type metadata completion function for PushToTalkNotice.NoticeType()
{
  unint64_t v0;
  uint64_t v1;
  char v2;
  char *v3;
  uint64_t *v4;

  type metadata accessor for UIListContentConfiguration?(319, (unint64_t *)&lazy cache variable for type metadata for URL?, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  if (v0 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v3 = &v2;
    swift_getTupleTypeLayout2();
    v4 = &v1;
    swift_initEnumMetadataMultiPayload();
  }
}

_BYTE *initializeBufferWithCopyOfBuffer for SystemUpdateNotice(_BYTE *a1, uint64_t *a2, int *a3)
{
  _BYTE *v4;
  int v5;
  uint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  unint64_t v40;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = (_BYTE *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(_BYTE *)a2;
    v7 = a2[2];
    *((_QWORD *)v4 + 1) = a2[1];
    *((_QWORD *)v4 + 2) = v7;
    v8 = a2 + 3;
    v9 = a2[6];
    swift_bridgeObjectRetain();
    if (v9)
    {
      v10 = a2[7];
      *((_QWORD *)v4 + 6) = v9;
      *((_QWORD *)v4 + 7) = v10;
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v9 - 8))((uint64_t)(v4 + 24), (uint64_t)(a2 + 3), v9);
    }
    else
    {
      v12 = *(_OWORD *)(a2 + 5);
      *(_OWORD *)(v4 + 24) = *v8;
      *(_OWORD *)(v4 + 40) = v12;
      *((_QWORD *)v4 + 7) = a2[7];
    }
    v13 = a3[6];
    v14 = &v4[v13];
    v15 = (uint64_t)a2 + v13;
    v16 = type metadata accessor for UUID();
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    v17 = a3[7];
    v18 = &v4[v17];
    v19 = (uint64_t)a2 + v17;
    v20 = type metadata accessor for Date();
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
    v21 = a3[9];
    v4[a3[8]] = *((_BYTE *)a2 + a3[8]);
    v22 = &v4[v21];
    v23 = (uint64_t *)((char *)a2 + v21);
    v25 = *v23;
    v24 = v23[1];
    v26 = a3[10];
    v27 = a3[11];
    v28 = *((_BYTE *)a2 + v26);
    *v22 = v25;
    v22[1] = v24;
    v4[v26] = v28;
    v29 = &v4[v27];
    v30 = (uint64_t)a2 + v27;
    v31 = *(uint64_t *)((char *)a2 + v27);
    swift_bridgeObjectRetain();
    if (v31)
    {
      v32 = *(_QWORD *)(v30 + 8);
      *v29 = v31;
      v29[1] = v32;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v29 = *(_OWORD *)v30;
    }
    v33 = a3[12];
    v34 = &v4[v33];
    v35 = (uint64_t *)((char *)a2 + v33);
    if (*v35)
    {
      v36 = v35[1];
      *v34 = *v35;
      v34[1] = v36;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v34 = *(_OWORD *)v35;
    }
    v37 = a3[14];
    v4[a3[13]] = *((_BYTE *)a2 + a3[13]);
    v38 = &v4[v37];
    v39 = (uint64_t *)((char *)a2 + v37);
    v40 = v39[1];
    if (v40 >= 2)
    {
      *v38 = *v39;
      v38[1] = v40;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)v38 = *(_OWORD *)v39;
    }
  }
  return v4;
}

unint64_t destroy for SystemUpdateNotice(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 48))
    __swift_destroy_boxed_opaque_existential_1(a1 + 24);
  v4 = a1 + a2[6];
  v5 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + a2[7];
  v7 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[11]))
    swift_release();
  if (*(_QWORD *)(a1 + a2[12]))
    swift_release();
  result = *(_QWORD *)(a1 + a2[14] + 8);
  if (result >= 2)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t initializeWithCopy for SystemUpdateNotice(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  unint64_t v38;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  v7 = a2 + 24;
  v8 = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  if (v8)
  {
    v9 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = v8;
    *(_QWORD *)(a1 + 56) = v9;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8))(a1 + 24, v7, v8);
  }
  else
  {
    v10 = *(_OWORD *)(v7 + 16);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)v7;
    *(_OWORD *)(a1 + 40) = v10;
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(v7 + 32);
  }
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v20 = (_QWORD *)(a1 + v19);
  v21 = (uint64_t *)(a2 + v19);
  v23 = *v21;
  v22 = v21[1];
  v24 = a3[10];
  v25 = a3[11];
  v26 = *(_BYTE *)(a2 + v24);
  *v20 = v23;
  v20[1] = v22;
  *(_BYTE *)(a1 + v24) = v26;
  v27 = (_QWORD *)(a1 + v25);
  v28 = a2 + v25;
  v29 = *(_QWORD *)(a2 + v25);
  swift_bridgeObjectRetain();
  if (v29)
  {
    v30 = *(_QWORD *)(v28 + 8);
    *v27 = v29;
    v27[1] = v30;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v27 = *(_OWORD *)v28;
  }
  v31 = a3[12];
  v32 = (_QWORD *)(a1 + v31);
  v33 = (_QWORD *)(a2 + v31);
  if (*v33)
  {
    v34 = v33[1];
    *v32 = *v33;
    v32[1] = v34;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v32 = *(_OWORD *)v33;
  }
  v35 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  v36 = (_QWORD *)(a1 + v35);
  v37 = (_QWORD *)(a2 + v35);
  v38 = v37[1];
  if (v38 >= 2)
  {
    *v36 = *v37;
    v36[1] = v38;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v36 = *(_OWORD *)v37;
  }
  return a1;
}

uint64_t assignWithCopy for SystemUpdateNotice(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  unint64_t v37;
  unint64_t v38;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 48);
  if (*(_QWORD *)(a1 + 48))
  {
    if (v6)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 24), (uint64_t *)(a2 + 24));
      goto LABEL_8;
    }
    __swift_destroy_boxed_opaque_existential_1(a1 + 24);
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 48) = v6;
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 24, a2 + 24);
    goto LABEL_8;
  }
  v7 = *(_OWORD *)(a2 + 24);
  v8 = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 24) = v7;
  *(_OWORD *)(a1 + 40) = v8;
LABEL_8:
  v9 = a3[6];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  v13 = a3[7];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 24))(v14, v15, v16);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v17 = a3[9];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (_QWORD *)(a2 + v17);
  *v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v20 = a3[11];
  v21 = (_QWORD *)(a1 + v20);
  v22 = a2 + v20;
  v23 = *(_QWORD *)(a1 + v20);
  v24 = *(_QWORD *)(a2 + v20);
  if (v23)
  {
    if (v24)
    {
      v25 = *(_QWORD *)(v22 + 8);
      *v21 = v24;
      v21[1] = v25;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v24)
  {
    v26 = *(_QWORD *)(v22 + 8);
    *v21 = v24;
    v21[1] = v26;
    swift_retain();
    goto LABEL_15;
  }
  *(_OWORD *)v21 = *(_OWORD *)v22;
LABEL_15:
  v27 = a3[12];
  v28 = (_QWORD *)(a1 + v27);
  v29 = a2 + v27;
  v30 = *(_QWORD *)(a1 + v27);
  v31 = *(_QWORD *)(a2 + v27);
  if (v30)
  {
    if (v31)
    {
      v32 = *(_QWORD *)(v29 + 8);
      *v28 = v31;
      v28[1] = v32;
      swift_retain();
      swift_release();
      goto LABEL_22;
    }
    swift_release();
  }
  else if (v31)
  {
    v33 = *(_QWORD *)(v29 + 8);
    *v28 = v31;
    v28[1] = v33;
    swift_retain();
    goto LABEL_22;
  }
  *(_OWORD *)v28 = *(_OWORD *)v29;
LABEL_22:
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  v34 = a3[14];
  v35 = (_QWORD *)(a1 + v34);
  v36 = (_QWORD *)(a2 + v34);
  v37 = *(_QWORD *)(a1 + v34 + 8);
  v38 = v36[1];
  if (v37 >= 2)
  {
    if (v38 >= 2)
    {
      *v35 = *v36;
      v35[1] = v36[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v35, &demangling cache variable for type metadata for (title: String));
    goto LABEL_27;
  }
  if (v38 < 2)
  {
LABEL_27:
    *(_OWORD *)v35 = *(_OWORD *)v36;
    return a1;
  }
  *v35 = *v36;
  v35[1] = v36[1];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t initializeWithTake for SystemUpdateNotice(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v6 = a3[6];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  v14 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_OWORD *)(a1 + v14) = *(_OWORD *)(a2 + v14);
  v15 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v16 = (_QWORD *)(a1 + v15);
  v17 = (uint64_t *)(a2 + v15);
  v18 = *v17;
  if (*v17)
  {
    v19 = v17[1];
    *v16 = v18;
    v16[1] = v19;
  }
  else
  {
    *(_OWORD *)v16 = *(_OWORD *)v17;
  }
  v20 = a3[12];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (uint64_t *)(a2 + v20);
  v23 = *v22;
  if (*v22)
  {
    v24 = v22[1];
    *v21 = v23;
    v21[1] = v24;
  }
  else
  {
    *(_OWORD *)v21 = *(_OWORD *)v22;
  }
  v25 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  *(_OWORD *)(a1 + v25) = *(_OWORD *)(a2 + v25);
  return a1;
}

uint64_t assignWithTake for SystemUpdateNotice(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  unint64_t v37;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 48))
    __swift_destroy_boxed_opaque_existential_1(a1 + 24);
  v7 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v8 = a3[6];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = a3[7];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  v16 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v17 = (_QWORD *)(a1 + v16);
  v18 = (uint64_t *)(a2 + v16);
  v20 = *v18;
  v19 = v18[1];
  *v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  v21 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v22 = (_QWORD *)(a1 + v21);
  v23 = a2 + v21;
  v24 = *(_QWORD *)(a2 + v21);
  if (*(_QWORD *)(a1 + v21))
  {
    if (v24)
    {
      v25 = *(_QWORD *)(v23 + 8);
      *v22 = v24;
      v22[1] = v25;
      swift_release();
      goto LABEL_10;
    }
    swift_release();
  }
  else if (v24)
  {
    v26 = *(_QWORD *)(v23 + 8);
    *v22 = v24;
    v22[1] = v26;
    goto LABEL_10;
  }
  *(_OWORD *)v22 = *(_OWORD *)v23;
LABEL_10:
  v27 = a3[12];
  v28 = (_QWORD *)(a1 + v27);
  v29 = a2 + v27;
  v30 = *(_QWORD *)(a1 + v27);
  v31 = *(_QWORD *)(a2 + v27);
  if (v30)
  {
    if (v31)
    {
      v32 = *(_QWORD *)(v29 + 8);
      *v28 = v31;
      v28[1] = v32;
      swift_release();
      goto LABEL_17;
    }
    swift_release();
  }
  else if (v31)
  {
    v33 = *(_QWORD *)(v29 + 8);
    *v28 = v31;
    v28[1] = v33;
    goto LABEL_17;
  }
  *(_OWORD *)v28 = *(_OWORD *)v29;
LABEL_17:
  v34 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  v35 = (_QWORD *)(a1 + v34);
  v36 = (_QWORD *)(a2 + v34);
  if (*(_QWORD *)(a1 + v34 + 8) >= 2uLL)
  {
    v37 = v36[1];
    if (v37 >= 2)
    {
      *v35 = *v36;
      v35[1] = v37;
      swift_bridgeObjectRelease();
      return a1;
    }
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(a1 + v34, &demangling cache variable for type metadata for (title: String));
  }
  *(_OWORD *)v35 = *(_OWORD *)v36;
  return a1;
}

uint64_t getEnumTagSinglePayload for SystemUpdateNotice()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1BD309BC8(uint64_t a1, int a2, uint64_t a3)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (a2 == 2147483646)
  {
    OUTLINED_FUNCTION_195(*(_QWORD *)(a1 + 16));
    OUTLINED_FUNCTION_18();
  }
  else
  {
    OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_44_6();
    if (v4)
    {
      OUTLINED_FUNCTION_276();
    }
    else
    {
      OUTLINED_FUNCTION_33();
      v5 = *(int *)(a3 + 28);
    }
    v6 = OUTLINED_FUNCTION_295(v5);
    OUTLINED_FUNCTION_1_16(v6, v7, v8);
  }
}

uint64_t storeEnumTagSinglePayload for SystemUpdateNotice()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BD309C38(uint64_t a1, unsigned int a2, int a3, uint64_t a4)
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (a3 == 2147483646)
  {
    *(_QWORD *)(a1 + 16) = a2;
    OUTLINED_FUNCTION_18();
  }
  else
  {
    OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_45_7();
    if (v5)
    {
      OUTLINED_FUNCTION_316_0();
    }
    else
    {
      OUTLINED_FUNCTION_33();
      v6 = *(int *)(a4 + 28);
    }
    v7 = OUTLINED_FUNCTION_146_0(v6);
    OUTLINED_FUNCTION_0_29(v7, v8, v9, v10);
  }
}

uint64_t type metadata completion function for SystemUpdateNotice()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for Date();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t assignWithCopy for SystemUpdateNotice.NoticeType(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SystemUpdateNotice.NoticeType(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SystemUpdateNotice.NoticeType(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SystemUpdateNotice.NoticeType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

uint64_t getEnumTag for SystemUpdateNotice.NoticeType(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *destructiveInjectEnumTag for SystemUpdateNotice.NoticeType(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    result[1] = 0;
    result[2] = 0;
    *result = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    result[2] = (a2 - 1);
  }
  return result;
}

void type metadata accessor for SystemUpdateNotice.NoticeType()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t storeEnumTagSinglePayload for ConversationNoticeSubtitleStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BD309F28 + 4 * byte_1BD6572EB[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BD309F5C + 4 * byte_1BD6572E6[v4]))();
}

uint64_t sub_1BD309F5C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD309F64(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD309F6CLL);
  return result;
}

uint64_t sub_1BD309F78(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD309F80);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BD309F84(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD309F8C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for SystemUpdateNotice.HandoffType()
{
  OUTLINED_FUNCTION_34_0();
}

_QWORD *initializeBufferWithCopyOfBuffer for ReactionNotice(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v3;
  uint64_t v4;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  _QWORD *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  unint64_t v36;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (_QWORD *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for UUID();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[6];
    v14 = (char *)v7 + v13;
    v15 = (char *)a2 + v13;
    v16 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    v17 = a3[8];
    *((_BYTE *)v7 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    v18 = (_QWORD *)((char *)v7 + v17);
    v19 = (_QWORD *)((char *)a2 + v17);
    v21 = *v19;
    v20 = v19[1];
    v22 = a3[9];
    v23 = a3[10];
    v24 = *((_BYTE *)a2 + v22);
    *v18 = v21;
    v18[1] = v20;
    *((_BYTE *)v7 + v22) = v24;
    v25 = (_QWORD *)((char *)v7 + v23);
    v26 = (char *)a2 + v23;
    v27 = *(_QWORD *)((char *)a2 + v23);
    swift_bridgeObjectRetain();
    if (v27)
    {
      v28 = *((_QWORD *)v26 + 1);
      *v25 = v27;
      v25[1] = v28;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v25 = *(_OWORD *)v26;
    }
    v29 = a3[11];
    v30 = (_QWORD *)((char *)v7 + v29);
    v31 = (_QWORD *)((char *)a2 + v29);
    if (*v31)
    {
      v32 = v31[1];
      *v30 = *v31;
      v30[1] = v32;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v30 = *(_OWORD *)v31;
    }
    v33 = a3[13];
    *(_QWORD *)((char *)v7 + a3[12]) = *(_QWORD *)((char *)a2 + a3[12]);
    v34 = (_QWORD *)((char *)v7 + v33);
    v35 = (_QWORD *)((char *)a2 + v33);
    v36 = v35[1];
    if (v36 >= 2)
    {
      *v34 = *v35;
      v34[1] = v36;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)v34 = *(_OWORD *)v35;
    }
  }
  return v7;
}

unint64_t destroy for ReactionNotice(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  v5 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + a2[6];
  v7 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[10]))
    swift_release();
  if (*(_QWORD *)(a1 + a2[11]))
    swift_release();
  result = *(_QWORD *)(a1 + a2[13] + 8);
  if (result >= 2)
    return swift_bridgeObjectRelease();
  return result;
}

_QWORD *initializeWithCopy for ReactionNotice(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  _QWORD *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  unint64_t v34;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UUID();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  v11 = a3[6];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  v19 = *v17;
  v18 = v17[1];
  v20 = a3[9];
  v21 = a3[10];
  v22 = *((_BYTE *)a2 + v20);
  *v16 = v19;
  v16[1] = v18;
  *((_BYTE *)a1 + v20) = v22;
  v23 = (_QWORD *)((char *)a1 + v21);
  v24 = (char *)a2 + v21;
  v25 = *(_QWORD *)((char *)a2 + v21);
  swift_bridgeObjectRetain();
  if (v25)
  {
    v26 = *((_QWORD *)v24 + 1);
    *v23 = v25;
    v23[1] = v26;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v23 = *(_OWORD *)v24;
  }
  v27 = a3[11];
  v28 = (_QWORD *)((char *)a1 + v27);
  v29 = (_QWORD *)((char *)a2 + v27);
  if (*v29)
  {
    v30 = v29[1];
    *v28 = *v29;
    v28[1] = v30;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v28 = *(_OWORD *)v29;
  }
  v31 = a3[13];
  *(_QWORD *)((char *)a1 + a3[12]) = *(_QWORD *)((char *)a2 + a3[12]);
  v32 = (_QWORD *)((char *)a1 + v31);
  v33 = (_QWORD *)((char *)a2 + v31);
  v34 = v33[1];
  if (v34 >= 2)
  {
    *v32 = *v33;
    v32[1] = v34;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v32 = *(_OWORD *)v33;
  }
  return a1;
}

_QWORD *assignWithCopy for ReactionNotice(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  unint64_t v34;
  unint64_t v35;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  v14 = a3[8];
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (_QWORD *)((char *)a2 + v14);
  *v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  v17 = a3[10];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (char *)a2 + v17;
  v20 = *(_QWORD *)((char *)a1 + v17);
  v21 = *(_QWORD *)((char *)a2 + v17);
  if (v20)
  {
    if (v21)
    {
      v22 = *((_QWORD *)v19 + 1);
      *v18 = v21;
      v18[1] = v22;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v21)
  {
    v23 = *((_QWORD *)v19 + 1);
    *v18 = v21;
    v18[1] = v23;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)v18 = *(_OWORD *)v19;
LABEL_8:
  v24 = a3[11];
  v25 = (_QWORD *)((char *)a1 + v24);
  v26 = (char *)a2 + v24;
  v27 = *(_QWORD *)((char *)a1 + v24);
  v28 = *(_QWORD *)((char *)a2 + v24);
  if (v27)
  {
    if (v28)
    {
      v29 = *((_QWORD *)v26 + 1);
      *v25 = v28;
      v25[1] = v29;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v28)
  {
    v30 = *((_QWORD *)v26 + 1);
    *v25 = v28;
    v25[1] = v30;
    swift_retain();
    goto LABEL_15;
  }
  *(_OWORD *)v25 = *(_OWORD *)v26;
LABEL_15:
  *(_QWORD *)((char *)a1 + a3[12]) = *(_QWORD *)((char *)a2 + a3[12]);
  v31 = a3[13];
  v32 = (_QWORD *)((char *)a1 + v31);
  v33 = (_QWORD *)((char *)a2 + v31);
  v34 = *(_QWORD *)((char *)a1 + v31 + 8);
  v35 = v33[1];
  if (v34 >= 2)
  {
    if (v35 >= 2)
    {
      *v32 = *v33;
      v32[1] = v33[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v32, &demangling cache variable for type metadata for (title: String));
    goto LABEL_20;
  }
  if (v35 < 2)
  {
LABEL_20:
    *(_OWORD *)v32 = *(_OWORD *)v33;
    return a1;
  }
  *v32 = *v33;
  v32[1] = v33[1];
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *initializeWithTake for ReactionNotice(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[6];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  v14 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  *(_OWORD *)((char *)a1 + v14) = *(_OWORD *)((char *)a2 + v14);
  v15 = a3[10];
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  v18 = *v17;
  if (*v17)
  {
    v19 = v17[1];
    *v16 = v18;
    v16[1] = v19;
  }
  else
  {
    *(_OWORD *)v16 = *(_OWORD *)v17;
  }
  v20 = a3[11];
  v21 = (_QWORD *)((char *)a1 + v20);
  v22 = (_QWORD *)((char *)a2 + v20);
  v23 = *v22;
  if (*v22)
  {
    v24 = v22[1];
    *v21 = v23;
    v21[1] = v24;
  }
  else
  {
    *(_OWORD *)v21 = *(_OWORD *)v22;
  }
  v25 = a3[13];
  *(_QWORD *)((char *)a1 + a3[12]) = *(_QWORD *)((char *)a2 + a3[12]);
  *(_OWORD *)((char *)a1 + v25) = *(_OWORD *)((char *)a2 + v25);
  return a1;
}

_QWORD *assignWithTake for ReactionNotice(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  unint64_t v35;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[6];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  v14 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (_QWORD *)((char *)a2 + v14);
  v18 = *v16;
  v17 = v16[1];
  *v15 = v18;
  v15[1] = v17;
  swift_bridgeObjectRelease();
  v19 = a3[10];
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  v20 = (_QWORD *)((char *)a1 + v19);
  v21 = (char *)a2 + v19;
  v22 = *(_QWORD *)((char *)a2 + v19);
  if (*(_QWORD *)((char *)a1 + v19))
  {
    if (v22)
    {
      v23 = *((_QWORD *)v21 + 1);
      *v20 = v22;
      v20[1] = v23;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v22)
  {
    v24 = *((_QWORD *)v21 + 1);
    *v20 = v22;
    v20[1] = v24;
    goto LABEL_8;
  }
  *(_OWORD *)v20 = *(_OWORD *)v21;
LABEL_8:
  v25 = a3[11];
  v26 = (_QWORD *)((char *)a1 + v25);
  v27 = (char *)a2 + v25;
  v28 = *(_QWORD *)((char *)a1 + v25);
  v29 = *(_QWORD *)((char *)a2 + v25);
  if (v28)
  {
    if (v29)
    {
      v30 = *((_QWORD *)v27 + 1);
      *v26 = v29;
      v26[1] = v30;
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v29)
  {
    v31 = *((_QWORD *)v27 + 1);
    *v26 = v29;
    v26[1] = v31;
    goto LABEL_15;
  }
  *(_OWORD *)v26 = *(_OWORD *)v27;
LABEL_15:
  v32 = a3[13];
  *(_QWORD *)((char *)a1 + a3[12]) = *(_QWORD *)((char *)a2 + a3[12]);
  v33 = (_QWORD *)((char *)a1 + v32);
  v34 = (_QWORD *)((char *)a2 + v32);
  if (*(_QWORD *)((char *)a1 + v32 + 8) >= 2uLL)
  {
    v35 = v34[1];
    if (v35 >= 2)
    {
      *v33 = *v34;
      v33[1] = v35;
      swift_bridgeObjectRelease();
      return a1;
    }
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)a1 + v32, &demangling cache variable for type metadata for (title: String));
  }
  *(_OWORD *)v33 = *(_OWORD *)v34;
  return a1;
}

uint64_t getEnumTagSinglePayload for ReactionNotice()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1BD30A880()
{
  unint64_t *v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_220();
  if (v1)
  {
    OUTLINED_FUNCTION_93_0(*v0);
    OUTLINED_FUNCTION_18();
  }
  else
  {
    OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_44_6();
    if (v1)
    {
      OUTLINED_FUNCTION_335_0();
    }
    else
    {
      OUTLINED_FUNCTION_33();
      OUTLINED_FUNCTION_276();
    }
    v3 = OUTLINED_FUNCTION_295(v2);
    OUTLINED_FUNCTION_1_16(v3, v4, v5);
  }
}

uint64_t storeEnumTagSinglePayload for ReactionNotice()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BD30A8E4()
{
  int v0;
  _QWORD *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_15_13();
  if (v2)
  {
    *v1 = (v0 - 1);
    OUTLINED_FUNCTION_18();
  }
  else
  {
    OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_45_7();
    if (v2)
    {
      OUTLINED_FUNCTION_402_0();
    }
    else
    {
      OUTLINED_FUNCTION_33();
      OUTLINED_FUNCTION_316_0();
    }
    v4 = OUTLINED_FUNCTION_146_0(v3);
    OUTLINED_FUNCTION_0_29(v4, v5, v6, v7);
  }
}

uint64_t type metadata completion function for ReactionNotice()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for Date();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for ParticipantReaction(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  size_t v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  int *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  __int128 v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v68;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = type metadata accessor for Participant.State(0);
    v68 = a3;
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        v8 = type metadata accessor for Date();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
        goto LABEL_18;
      case 4u:
        v10 = type metadata accessor for Date();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
        v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        v12 = *(int *)(v11 + 48);
        v13 = (char *)a1 + v12;
        v14 = (char *)a2 + v12;
        *(_OWORD *)v13 = *(_OWORD *)((char *)a2 + v12);
        v15 = *(_QWORD *)((char *)a2 + v12 + 16);
        v16 = *(_QWORD *)((char *)a2 + v12 + 24);
        *((_QWORD *)v13 + 2) = v15;
        *((_QWORD *)v13 + 3) = v16;
        *((_WORD *)v13 + 16) = *((_WORD *)v14 + 16);
        *((_QWORD *)v13 + 5) = *((_QWORD *)v14 + 5);
        v13[48] = v14[48];
        *(_OWORD *)(v13 + 56) = *(_OWORD *)(v14 + 56);
        *(_OWORD *)(v13 + 72) = *(_OWORD *)(v14 + 72);
        v13[88] = v14[88];
        v13[89] = v14[89];
        v17 = *((_QWORD *)v14 + 15);
        swift_bridgeObjectRetain();
        if (v17)
        {
          if (v17 == 1)
          {
            v18 = v13 + 96;
            v19 = v14 + 96;
            v20 = 209;
            goto LABEL_12;
          }
          v22 = *((_QWORD *)v14 + 16);
          *((_QWORD *)v13 + 15) = v17;
          *((_QWORD *)v13 + 16) = v22;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v17 - 8))((uint64_t)(v13 + 96), (uint64_t)(v14 + 96), v17);
        }
        else
        {
          v21 = *((_OWORD *)v14 + 7);
          *((_OWORD *)v13 + 6) = *((_OWORD *)v14 + 6);
          *((_OWORD *)v13 + 7) = v21;
          *((_QWORD *)v13 + 16) = *((_QWORD *)v14 + 16);
        }
        *((_DWORD *)v13 + 34) = *((_DWORD *)v14 + 34);
        v23 = *((_OWORD *)v14 + 10);
        *((_OWORD *)v13 + 9) = *((_OWORD *)v14 + 9);
        *((_OWORD *)v13 + 10) = v23;
        *((_OWORD *)v13 + 11) = *((_OWORD *)v14 + 11);
        v13[192] = v14[192];
        v18 = v13 + 208;
        v19 = v14 + 208;
        *((_QWORD *)v13 + 25) = *((_QWORD *)v14 + 25);
        v20 = 97;
LABEL_12:
        memcpy(v18, v19, v20);
        v24 = *((_QWORD *)v14 + 39);
        if (v24)
        {
          v25 = *((_QWORD *)v14 + 40);
          v26 = *((_QWORD *)v14 + 41);
          *((_QWORD *)v13 + 39) = v24;
          *((_QWORD *)v13 + 40) = v25;
          *((_QWORD *)v13 + 41) = v26;
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v13 + 312) = *(_OWORD *)(v14 + 312);
          *((_QWORD *)v13 + 41) = *((_QWORD *)v14 + 41);
        }
        v27 = *(int *)(v11 + 64);
        v28 = (char *)a1 + v27;
        v29 = (char *)a2 + v27;
        v30 = *((_QWORD *)v29 + 1);
        if (v30)
        {
          *(_QWORD *)v28 = *(_QWORD *)v29;
          *((_QWORD *)v28 + 1) = v30;
          v31 = *((_QWORD *)v29 + 3);
          *((_QWORD *)v28 + 2) = *((_QWORD *)v29 + 2);
          *((_QWORD *)v28 + 3) = v31;
          v28[32] = v29[32];
          *(_OWORD *)(v28 + 40) = *(_OWORD *)(v29 + 40);
          *((_QWORD *)v28 + 7) = *((_QWORD *)v29 + 7);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v32 = *((_OWORD *)v29 + 1);
          *(_OWORD *)v28 = *(_OWORD *)v29;
          *((_OWORD *)v28 + 1) = v32;
          v33 = *((_OWORD *)v29 + 3);
          *((_OWORD *)v28 + 2) = *((_OWORD *)v29 + 2);
          *((_OWORD *)v28 + 3) = v33;
        }
LABEL_18:
        swift_storeEnumTagMultiPayload();
LABEL_19:
        v34 = (int *)type metadata accessor for Participant(0);
        v35 = v34[5];
        v36 = (char *)a1 + v35;
        v37 = (char *)a2 + v35;
        v38 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
        v39 = v34[6];
        v40 = (char *)a1 + v39;
        v41 = (char *)a2 + v39;
        v40[4] = v41[4];
        *(_DWORD *)v40 = *(_DWORD *)v41;
        v42 = v34[7];
        v43 = (char *)a1 + v42;
        v44 = (char *)a2 + v42;
        v45 = *(void **)v44;
        if (*(_QWORD *)v44)
        {
          v46 = *((_QWORD *)v44 + 1);
          *(_QWORD *)v43 = v45;
          *((_QWORD *)v43 + 1) = v46;
          v43[16] = v44[16];
          v47 = *((_QWORD *)v44 + 4);
          *((_QWORD *)v43 + 3) = *((_QWORD *)v44 + 3);
          *((_QWORD *)v43 + 4) = v47;
          v48 = v45;
          swift_bridgeObjectRetain();
        }
        else
        {
          v49 = *((_OWORD *)v44 + 1);
          *(_OWORD *)v43 = *(_OWORD *)v44;
          *((_OWORD *)v43 + 1) = v49;
          *((_QWORD *)v43 + 4) = *((_QWORD *)v44 + 4);
        }
        *(_QWORD *)((char *)a1 + v34[8]) = *(_QWORD *)((char *)a2 + v34[8]);
        v50 = v34[9];
        v51 = (_QWORD *)((char *)a1 + v50);
        v52 = (_QWORD *)((char *)a2 + v50);
        v53 = v52[1];
        *v51 = *v52;
        v51[1] = v53;
        *((_BYTE *)a1 + v34[10]) = *((_BYTE *)a2 + v34[10]);
        *(_QWORD *)((char *)a1 + v34[11]) = *(_QWORD *)((char *)a2 + v34[11]);
        v54 = v34[12];
        v55 = *(void **)((char *)a2 + v54);
        *(_QWORD *)((char *)a1 + v54) = v55;
        *((_BYTE *)a1 + v34[13]) = *((_BYTE *)a2 + v34[13]);
        v56 = v34[14];
        v57 = (char *)a1 + v56;
        v58 = (char *)a2 + v56;
        v59 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v60 = v55;
        if (__swift_getEnumTagSinglePayload((uint64_t)v58, 1, v59))
        {
          v61 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
          memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v57, v58, v59);
          __swift_storeEnumTagSinglePayload((uint64_t)v57, 0, 1, v59);
        }
        v62 = type metadata accessor for Participant.CountdownInfo(0);
        v63 = *(int *)(v62 + 20);
        v64 = &v57[v63];
        v65 = &v58[v63];
        if (__swift_getEnumTagSinglePayload((uint64_t)&v58[v63], 1, v59))
        {
          v66 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
          memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v64, v65, v59);
          __swift_storeEnumTagSinglePayload((uint64_t)v64, 0, 1, v59);
        }
        v57[*(int *)(v62 + 24)] = v58[*(int *)(v62 + 24)];
        *((_BYTE *)a1 + v34[15]) = *((_BYTE *)a2 + v34[15]);
        *(_QWORD *)((char *)a1 + v34[16]) = *(_QWORD *)((char *)a2 + v34[16]);
        *((_BYTE *)a1 + *(int *)(v68 + 20)) = *((_BYTE *)a2 + *(int *)(v68 + 20));
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
        goto LABEL_19;
    }
  }
  swift_retain();
  return a1;
}

uint64_t destroy for ParticipantReaction(uint64_t a1)
{
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  id *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  type metadata accessor for Participant.State(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 5u:
      v2 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
      break;
    case 4u:
      v11 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(a1, v11);
      v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      v13 = a1 + *(int *)(v12 + 48);
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v13 + 120) >= 2uLL)
        __swift_destroy_boxed_opaque_existential_1(v13 + 96);
      if (*(_QWORD *)(v13 + 312))
      {
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (*(_QWORD *)(a1 + *(int *)(v12 + 64) + 8))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      break;
    default:
      break;
  }
  v3 = (int *)type metadata accessor for Participant(0);
  v4 = a1 + v3[5];
  v5 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = (id *)(a1 + v3[7]);
  if (*v6)
  {

    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v7 = a1 + v3[14];
  v8 = type metadata accessor for Date();
  if (!__swift_getEnumTagSinglePayload(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = v7 + *(int *)(type metadata accessor for Participant.CountdownInfo(0) + 20);
  if (!__swift_getEnumTagSinglePayload(v9, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v9, v8);
  return swift_release();
}

_BYTE *initializeWithCopy for ParticipantReaction(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  size_t v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  int *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  __int128 v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v66;

  v6 = type metadata accessor for Participant.State(0);
  v66 = a3;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 5u:
      v7 = type metadata accessor for Date();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      goto LABEL_16;
    case 4u:
      v8 = type metadata accessor for Date();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      v10 = *(int *)(v9 + 48);
      v11 = &a1[v10];
      v12 = &a2[v10];
      *(_OWORD *)v11 = *(_OWORD *)&a2[v10];
      v13 = *(_QWORD *)&a2[v10 + 16];
      v14 = *(_QWORD *)&a2[v10 + 24];
      *((_QWORD *)v11 + 2) = v13;
      *((_QWORD *)v11 + 3) = v14;
      *((_WORD *)v11 + 16) = *((_WORD *)v12 + 16);
      *((_QWORD *)v11 + 5) = *((_QWORD *)v12 + 5);
      v11[48] = v12[48];
      *(_OWORD *)(v11 + 56) = *(_OWORD *)(v12 + 56);
      *(_OWORD *)(v11 + 72) = *(_OWORD *)(v12 + 72);
      v11[88] = v12[88];
      v11[89] = v12[89];
      v15 = *((_QWORD *)v12 + 15);
      swift_bridgeObjectRetain();
      if (v15)
      {
        if (v15 == 1)
        {
          v16 = v11 + 96;
          v17 = v12 + 96;
          v18 = 209;
          goto LABEL_10;
        }
        v20 = *((_QWORD *)v12 + 16);
        *((_QWORD *)v11 + 15) = v15;
        *((_QWORD *)v11 + 16) = v20;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v15 - 8))((uint64_t)(v11 + 96), (uint64_t)(v12 + 96), v15);
      }
      else
      {
        v19 = *((_OWORD *)v12 + 7);
        *((_OWORD *)v11 + 6) = *((_OWORD *)v12 + 6);
        *((_OWORD *)v11 + 7) = v19;
        *((_QWORD *)v11 + 16) = *((_QWORD *)v12 + 16);
      }
      *((_DWORD *)v11 + 34) = *((_DWORD *)v12 + 34);
      v21 = *((_OWORD *)v12 + 10);
      *((_OWORD *)v11 + 9) = *((_OWORD *)v12 + 9);
      *((_OWORD *)v11 + 10) = v21;
      *((_OWORD *)v11 + 11) = *((_OWORD *)v12 + 11);
      v11[192] = v12[192];
      v16 = v11 + 208;
      v17 = v12 + 208;
      *((_QWORD *)v11 + 25) = *((_QWORD *)v12 + 25);
      v18 = 97;
LABEL_10:
      memcpy(v16, v17, v18);
      v22 = *((_QWORD *)v12 + 39);
      if (v22)
      {
        v23 = *((_QWORD *)v12 + 40);
        v24 = *((_QWORD *)v12 + 41);
        *((_QWORD *)v11 + 39) = v22;
        *((_QWORD *)v11 + 40) = v23;
        *((_QWORD *)v11 + 41) = v24;
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v11 + 312) = *(_OWORD *)(v12 + 312);
        *((_QWORD *)v11 + 41) = *((_QWORD *)v12 + 41);
      }
      v25 = *(int *)(v9 + 64);
      v26 = &a1[v25];
      v27 = &a2[v25];
      v28 = *((_QWORD *)v27 + 1);
      if (v28)
      {
        *(_QWORD *)v26 = *(_QWORD *)v27;
        *((_QWORD *)v26 + 1) = v28;
        v29 = *((_QWORD *)v27 + 3);
        *((_QWORD *)v26 + 2) = *((_QWORD *)v27 + 2);
        *((_QWORD *)v26 + 3) = v29;
        v26[32] = v27[32];
        *(_OWORD *)(v26 + 40) = *(_OWORD *)(v27 + 40);
        *((_QWORD *)v26 + 7) = *((_QWORD *)v27 + 7);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v30 = *((_OWORD *)v27 + 1);
        *(_OWORD *)v26 = *(_OWORD *)v27;
        *((_OWORD *)v26 + 1) = v30;
        v31 = *((_OWORD *)v27 + 3);
        *((_OWORD *)v26 + 2) = *((_OWORD *)v27 + 2);
        *((_OWORD *)v26 + 3) = v31;
      }
LABEL_16:
      swift_storeEnumTagMultiPayload();
LABEL_17:
      v32 = (int *)type metadata accessor for Participant(0);
      v33 = v32[5];
      v34 = &a1[v33];
      v35 = &a2[v33];
      v36 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v34, v35, v36);
      v37 = v32[6];
      v38 = &a1[v37];
      v39 = &a2[v37];
      v38[4] = v39[4];
      *(_DWORD *)v38 = *(_DWORD *)v39;
      v40 = v32[7];
      v41 = &a1[v40];
      v42 = &a2[v40];
      v43 = *(void **)v42;
      if (*(_QWORD *)v42)
      {
        v44 = *((_QWORD *)v42 + 1);
        *(_QWORD *)v41 = v43;
        *((_QWORD *)v41 + 1) = v44;
        v41[16] = v42[16];
        v45 = *((_QWORD *)v42 + 4);
        *((_QWORD *)v41 + 3) = *((_QWORD *)v42 + 3);
        *((_QWORD *)v41 + 4) = v45;
        v46 = v43;
        swift_bridgeObjectRetain();
      }
      else
      {
        v47 = *((_OWORD *)v42 + 1);
        *(_OWORD *)v41 = *(_OWORD *)v42;
        *((_OWORD *)v41 + 1) = v47;
        *((_QWORD *)v41 + 4) = *((_QWORD *)v42 + 4);
      }
      *(_QWORD *)&a1[v32[8]] = *(_QWORD *)&a2[v32[8]];
      v48 = v32[9];
      v49 = &a1[v48];
      v50 = &a2[v48];
      v51 = v50[1];
      *v49 = *v50;
      v49[1] = v51;
      a1[v32[10]] = a2[v32[10]];
      *(_QWORD *)&a1[v32[11]] = *(_QWORD *)&a2[v32[11]];
      v52 = v32[12];
      v53 = *(void **)&a2[v52];
      *(_QWORD *)&a1[v52] = v53;
      a1[v32[13]] = a2[v32[13]];
      v54 = v32[14];
      v55 = &a1[v54];
      v56 = &a2[v54];
      v57 = type metadata accessor for Date();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v58 = v53;
      if (__swift_getEnumTagSinglePayload((uint64_t)v56, 1, v57))
      {
        v59 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
        memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v55, v56, v57);
        __swift_storeEnumTagSinglePayload((uint64_t)v55, 0, 1, v57);
      }
      v60 = type metadata accessor for Participant.CountdownInfo(0);
      v61 = *(int *)(v60 + 20);
      v62 = &v55[v61];
      v63 = &v56[v61];
      if (__swift_getEnumTagSinglePayload((uint64_t)&v56[v61], 1, v57))
      {
        v64 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
        memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v62, v63, v57);
        __swift_storeEnumTagSinglePayload((uint64_t)v62, 0, 1, v57);
      }
      v55[*(int *)(v60 + 24)] = v56[*(int *)(v60 + 24)];
      a1[v32[15]] = a2[v32[15]];
      *(_QWORD *)&a1[v32[16]] = *(_QWORD *)&a2[v32[16]];
      a1[*(int *)(v66 + 20)] = a2[*(int *)(v66 + 20)];
      swift_retain();
      return a1;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      goto LABEL_17;
  }
}

char *assignWithCopy for ParticipantReaction(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  size_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  char *v28;
  char *v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  int *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  void *v44;
  void *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  void *v58;
  void *v59;
  id v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  int EnumTagSinglePayload;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  int v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v78;

  if (a1 != a2)
  {
    outlined destroy of Participant((uint64_t)a1, type metadata accessor for Participant.State);
    v6 = type metadata accessor for Participant.State(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        v7 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
        goto LABEL_17;
      case 4u:
        v8 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
        v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        v10 = *(int *)(v9 + 48);
        v11 = &a1[v10];
        v12 = &a2[v10];
        *(_OWORD *)v11 = *(_OWORD *)&a2[v10];
        *((_QWORD *)v11 + 2) = *(_QWORD *)&a2[v10 + 16];
        v13 = *(_QWORD *)&a2[v10 + 24];
        *((_WORD *)v11 + 16) = *((_WORD *)v12 + 16);
        *((_QWORD *)v11 + 3) = v13;
        *((_QWORD *)v11 + 5) = *((_QWORD *)v12 + 5);
        v11[48] = v12[48];
        v14 = *(_OWORD *)(v12 + 72);
        v15 = *(_OWORD *)(v12 + 56);
        v11[88] = v12[88];
        *(_OWORD *)(v11 + 56) = v15;
        *(_OWORD *)(v11 + 72) = v14;
        v11[89] = v12[89];
        v16 = *((_QWORD *)v12 + 15);
        swift_bridgeObjectRetain();
        if (v16)
        {
          if (v16 == 1)
          {
            v17 = v11 + 96;
            v18 = v12 + 96;
            v19 = 209;
            goto LABEL_11;
          }
          *((_QWORD *)v11 + 15) = v16;
          *((_QWORD *)v11 + 16) = *((_QWORD *)v12 + 16);
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v16 - 8))((uint64_t)(v11 + 96), (uint64_t)(v12 + 96), v16);
        }
        else
        {
          v20 = *((_OWORD *)v12 + 6);
          v21 = *((_OWORD *)v12 + 7);
          *((_QWORD *)v11 + 16) = *((_QWORD *)v12 + 16);
          *((_OWORD *)v11 + 6) = v20;
          *((_OWORD *)v11 + 7) = v21;
        }
        *((_DWORD *)v11 + 34) = *((_DWORD *)v12 + 34);
        *((_QWORD *)v11 + 18) = *((_QWORD *)v12 + 18);
        *((_QWORD *)v11 + 19) = *((_QWORD *)v12 + 19);
        v22 = *((_OWORD *)v12 + 10);
        v23 = *((_OWORD *)v12 + 11);
        v11[192] = v12[192];
        *((_OWORD *)v11 + 10) = v22;
        *((_OWORD *)v11 + 11) = v23;
        *((_QWORD *)v11 + 25) = *((_QWORD *)v12 + 25);
        v17 = v11 + 208;
        v18 = v12 + 208;
        v19 = 97;
LABEL_11:
        memcpy(v17, v18, v19);
        v24 = *((_QWORD *)v12 + 39);
        if (v24)
        {
          v25 = *((_QWORD *)v12 + 40);
          *((_QWORD *)v11 + 39) = v24;
          *((_QWORD *)v11 + 40) = v25;
          *((_QWORD *)v11 + 41) = *((_QWORD *)v12 + 41);
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v26 = *(_OWORD *)(v12 + 312);
          *((_QWORD *)v11 + 41) = *((_QWORD *)v12 + 41);
          *(_OWORD *)(v11 + 312) = v26;
        }
        v27 = *(int *)(v9 + 64);
        v28 = &a1[v27];
        v29 = &a2[v27];
        if (*((_QWORD *)v29 + 1))
        {
          *(_QWORD *)v28 = *(_QWORD *)v29;
          *((_QWORD *)v28 + 1) = *((_QWORD *)v29 + 1);
          *((_QWORD *)v28 + 2) = *((_QWORD *)v29 + 2);
          *((_QWORD *)v28 + 3) = *((_QWORD *)v29 + 3);
          v28[32] = v29[32];
          *((_QWORD *)v28 + 5) = *((_QWORD *)v29 + 5);
          *((_QWORD *)v28 + 6) = *((_QWORD *)v29 + 6);
          *((_QWORD *)v28 + 7) = *((_QWORD *)v29 + 7);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v30 = *(_OWORD *)v29;
          v31 = *((_OWORD *)v29 + 1);
          v32 = *((_OWORD *)v29 + 3);
          *((_OWORD *)v28 + 2) = *((_OWORD *)v29 + 2);
          *((_OWORD *)v28 + 3) = v32;
          *(_OWORD *)v28 = v30;
          *((_OWORD *)v28 + 1) = v31;
        }
LABEL_17:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        break;
    }
  }
  v33 = (int *)type metadata accessor for Participant(0);
  v34 = v33[5];
  v35 = &a1[v34];
  v36 = &a2[v34];
  v37 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 24))(v35, v36, v37);
  v38 = v33[6];
  v39 = &a1[v38];
  v40 = &a2[v38];
  *v39 = *v40;
  v39[1] = v40[1];
  v39[2] = v40[2];
  v39[3] = v40[3];
  v39[4] = v40[4];
  v41 = v33[7];
  v42 = &a1[v41];
  v43 = &a2[v41];
  v44 = *(void **)&a1[v41];
  v45 = *(void **)&a2[v41];
  if (v44)
  {
    if (v45)
    {
      *(_QWORD *)v42 = v45;
      v46 = v45;

      v47 = *((_QWORD *)v43 + 1);
      v42[16] = v43[16];
      *((_QWORD *)v42 + 1) = v47;
      *((_QWORD *)v42 + 3) = *((_QWORD *)v43 + 3);
      *((_QWORD *)v42 + 4) = *((_QWORD *)v43 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      outlined destroy of Participant.RemoteIdentifiers((id *)v42);
      v50 = *((_QWORD *)v43 + 4);
      v51 = *((_OWORD *)v43 + 1);
      *(_OWORD *)v42 = *(_OWORD *)v43;
      *((_OWORD *)v42 + 1) = v51;
      *((_QWORD *)v42 + 4) = v50;
    }
  }
  else if (v45)
  {
    *(_QWORD *)v42 = v45;
    v48 = *((_QWORD *)v43 + 1);
    v42[16] = v43[16];
    *((_QWORD *)v42 + 1) = v48;
    *((_QWORD *)v42 + 3) = *((_QWORD *)v43 + 3);
    *((_QWORD *)v42 + 4) = *((_QWORD *)v43 + 4);
    v49 = v45;
    swift_bridgeObjectRetain();
  }
  else
  {
    v52 = *(_OWORD *)v43;
    v53 = *((_OWORD *)v43 + 1);
    *((_QWORD *)v42 + 4) = *((_QWORD *)v43 + 4);
    *(_OWORD *)v42 = v52;
    *((_OWORD *)v42 + 1) = v53;
  }
  *(_QWORD *)&a1[v33[8]] = *(_QWORD *)&a2[v33[8]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v54 = v33[9];
  v55 = &a1[v54];
  v56 = &a2[v54];
  *(_QWORD *)v55 = *(_QWORD *)v56;
  *((_QWORD *)v55 + 1) = *((_QWORD *)v56 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[v33[10]] = a2[v33[10]];
  *(_QWORD *)&a1[v33[11]] = *(_QWORD *)&a2[v33[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v57 = v33[12];
  v58 = *(void **)&a1[v57];
  v59 = *(void **)&a2[v57];
  *(_QWORD *)&a1[v57] = v59;
  v60 = v59;

  a1[v33[13]] = a2[v33[13]];
  v61 = v33[14];
  v62 = &a1[v61];
  v63 = &a2[v61];
  v64 = type metadata accessor for Date();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v62, 1, v64);
  v66 = __swift_getEnumTagSinglePayload((uint64_t)v63, 1, v64);
  v78 = a3;
  if (EnumTagSinglePayload)
  {
    if (!v66)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 16))(v62, v63, v64);
      __swift_storeEnumTagSinglePayload((uint64_t)v62, 0, 1, v64);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  v67 = *(_QWORD *)(v64 - 8);
  if (v66)
  {
    (*(void (**)(char *, uint64_t))(v67 + 8))(v62, v64);
LABEL_30:
    v68 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v67 + 24))(v62, v63, v64);
LABEL_31:
  v69 = type metadata accessor for Participant.CountdownInfo(0);
  v70 = *(int *)(v69 + 20);
  v71 = &v62[v70];
  v72 = &v63[v70];
  v73 = __swift_getEnumTagSinglePayload((uint64_t)&v62[v70], 1, v64);
  v74 = __swift_getEnumTagSinglePayload((uint64_t)v72, 1, v64);
  if (!v73)
  {
    v75 = *(_QWORD *)(v64 - 8);
    if (!v74)
    {
      (*(void (**)(char *, char *, uint64_t))(v75 + 24))(v71, v72, v64);
      goto LABEL_37;
    }
    (*(void (**)(char *, uint64_t))(v75 + 8))(v71, v64);
    goto LABEL_36;
  }
  if (v74)
  {
LABEL_36:
    v76 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 16))(v71, v72, v64);
  __swift_storeEnumTagSinglePayload((uint64_t)v71, 0, 1, v64);
LABEL_37:
  v62[*(int *)(v69 + 24)] = v63[*(int *)(v69 + 24)];
  a1[v33[15]] = a2[v33[15]];
  *(_QWORD *)&a1[v33[16]] = *(_QWORD *)&a2[v33[16]];
  swift_retain();
  swift_release();
  a1[*(int *)(v78 + 20)] = a2[*(int *)(v78 + 20)];
  return a1;
}

char *initializeWithTake for ParticipantReaction(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  __int128 v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;

  v6 = type metadata accessor for Participant.State(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 5u:
      v14 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a1, a2, v14);
      goto LABEL_5;
    case 4u:
      v7 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      memcpy(&a1[*(int *)(v8 + 48)], &a2[*(int *)(v8 + 48)], 0x150uLL);
      v9 = *(int *)(v8 + 64);
      v10 = &a1[v9];
      v11 = &a2[v9];
      v12 = *((_OWORD *)v11 + 1);
      *(_OWORD *)v10 = *(_OWORD *)v11;
      *((_OWORD *)v10 + 1) = v12;
      v13 = *((_OWORD *)v11 + 3);
      *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
      *((_OWORD *)v10 + 3) = v13;
LABEL_5:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      break;
  }
  v15 = (int *)type metadata accessor for Participant(0);
  v16 = v15[5];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
  v20 = v15[6];
  v21 = &a1[v20];
  v22 = &a2[v20];
  *(_DWORD *)v21 = *(_DWORD *)v22;
  v21[4] = v22[4];
  v23 = v15[7];
  v24 = &a1[v23];
  v25 = &a2[v23];
  v26 = *((_OWORD *)v25 + 1);
  *(_OWORD *)v24 = *(_OWORD *)v25;
  *((_OWORD *)v24 + 1) = v26;
  *((_QWORD *)v24 + 4) = *((_QWORD *)v25 + 4);
  *(_QWORD *)&a1[v15[8]] = *(_QWORD *)&a2[v15[8]];
  *(_OWORD *)&a1[v15[9]] = *(_OWORD *)&a2[v15[9]];
  a1[v15[10]] = a2[v15[10]];
  *(_QWORD *)&a1[v15[11]] = *(_QWORD *)&a2[v15[11]];
  *(_QWORD *)&a1[v15[12]] = *(_QWORD *)&a2[v15[12]];
  a1[v15[13]] = a2[v15[13]];
  v27 = v15[14];
  v28 = &a1[v27];
  v29 = &a2[v27];
  v30 = type metadata accessor for Date();
  if (__swift_getEnumTagSinglePayload((uint64_t)v29, 1, v30))
  {
    v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
    __swift_storeEnumTagSinglePayload((uint64_t)v28, 0, 1, v30);
  }
  v32 = type metadata accessor for Participant.CountdownInfo(0);
  v33 = *(int *)(v32 + 20);
  v34 = &v28[v33];
  v35 = &v29[v33];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v29[v33], 1, v30))
  {
    v36 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v34, v35, v30);
    __swift_storeEnumTagSinglePayload((uint64_t)v34, 0, 1, v30);
  }
  v28[*(int *)(v32 + 24)] = v29[*(int *)(v32 + 24)];
  a1[v15[15]] = a2[v15[15]];
  *(_QWORD *)&a1[v15[16]] = *(_QWORD *)&a2[v15[16]];
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  return a1;
}

char *assignWithTake for ParticipantReaction(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  void *v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  int EnumTagSinglePayload;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  int v47;
  int v48;
  uint64_t v49;
  uint64_t v50;

  if (a1 != a2)
  {
    outlined destroy of Participant((uint64_t)a1, type metadata accessor for Participant.State);
    v5 = type metadata accessor for Participant.State(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        v13 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
        goto LABEL_5;
      case 4u:
        v6 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
        v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        memcpy(&a1[*(int *)(v7 + 48)], &a2[*(int *)(v7 + 48)], 0x150uLL);
        v8 = *(int *)(v7 + 64);
        v9 = &a1[v8];
        v10 = &a2[v8];
        v11 = *((_OWORD *)v10 + 1);
        *(_OWORD *)v9 = *(_OWORD *)v10;
        *((_OWORD *)v9 + 1) = v11;
        v12 = *((_OWORD *)v10 + 3);
        *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
        *((_OWORD *)v9 + 3) = v12;
LABEL_5:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
        break;
    }
  }
  v14 = (int *)type metadata accessor for Participant(0);
  v15 = v14[5];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = v14[6];
  v20 = &a1[v19];
  v21 = &a2[v19];
  *v20 = *v21;
  v20[1] = v21[1];
  v20[2] = v21[2];
  v20[3] = v21[3];
  v20[4] = v21[4];
  v22 = v14[7];
  v23 = &a1[v22];
  v24 = &a2[v22];
  v25 = *(void **)&a1[v22];
  if (v25)
  {
    if (*(_QWORD *)v24)
    {
      *(_QWORD *)v23 = *(_QWORD *)v24;

      *((_QWORD *)v23 + 1) = *((_QWORD *)v24 + 1);
      v23[16] = v24[16];
      v26 = *((_QWORD *)v24 + 4);
      *((_QWORD *)v23 + 3) = *((_QWORD *)v24 + 3);
      *((_QWORD *)v23 + 4) = v26;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    outlined destroy of Participant.RemoteIdentifiers((id *)v23);
  }
  v27 = *((_OWORD *)v24 + 1);
  *(_OWORD *)v23 = *(_OWORD *)v24;
  *((_OWORD *)v23 + 1) = v27;
  *((_QWORD *)v23 + 4) = *((_QWORD *)v24 + 4);
LABEL_11:
  *(_QWORD *)&a1[v14[8]] = *(_QWORD *)&a2[v14[8]];
  swift_bridgeObjectRelease();
  v28 = v14[9];
  v29 = &a1[v28];
  v30 = &a2[v28];
  v32 = *(_QWORD *)v30;
  v31 = *((_QWORD *)v30 + 1);
  *(_QWORD *)v29 = v32;
  *((_QWORD *)v29 + 1) = v31;
  swift_bridgeObjectRelease();
  a1[v14[10]] = a2[v14[10]];
  *(_QWORD *)&a1[v14[11]] = *(_QWORD *)&a2[v14[11]];
  swift_bridgeObjectRelease();
  v33 = v14[12];
  v34 = *(void **)&a1[v33];
  *(_QWORD *)&a1[v33] = *(_QWORD *)&a2[v33];

  a1[v14[13]] = a2[v14[13]];
  v35 = v14[14];
  v36 = &a1[v35];
  v37 = &a2[v35];
  v38 = type metadata accessor for Date();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v36, 1, v38);
  v40 = __swift_getEnumTagSinglePayload((uint64_t)v37, 1, v38);
  if (EnumTagSinglePayload)
  {
    if (!v40)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
      __swift_storeEnumTagSinglePayload((uint64_t)v36, 0, 1, v38);
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  v41 = *(_QWORD *)(v38 - 8);
  if (v40)
  {
    (*(void (**)(char *, uint64_t))(v41 + 8))(v36, v38);
LABEL_16:
    v42 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    goto LABEL_17;
  }
  (*(void (**)(char *, char *, uint64_t))(v41 + 40))(v36, v37, v38);
LABEL_17:
  v43 = type metadata accessor for Participant.CountdownInfo(0);
  v44 = *(int *)(v43 + 20);
  v45 = &v36[v44];
  v46 = &v37[v44];
  v47 = __swift_getEnumTagSinglePayload((uint64_t)&v36[v44], 1, v38);
  v48 = __swift_getEnumTagSinglePayload((uint64_t)v46, 1, v38);
  if (!v47)
  {
    v49 = *(_QWORD *)(v38 - 8);
    if (!v48)
    {
      (*(void (**)(char *, char *, uint64_t))(v49 + 40))(v45, v46, v38);
      goto LABEL_23;
    }
    (*(void (**)(char *, uint64_t))(v49 + 8))(v45, v38);
    goto LABEL_22;
  }
  if (v48)
  {
LABEL_22:
    v50 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    goto LABEL_23;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v45, v46, v38);
  __swift_storeEnumTagSinglePayload((uint64_t)v45, 0, 1, v38);
LABEL_23:
  v36[*(int *)(v43 + 24)] = v37[*(int *)(v43 + 24)];
  a1[v14[15]] = a2[v14[15]];
  *(_QWORD *)&a1[v14[16]] = *(_QWORD *)&a2[v14[16]];
  swift_release();
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  return a1;
}

uint64_t getEnumTagSinglePayload for ParticipantReaction()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1BD30C7AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_14_2();
  if (*(_DWORD *)(*(_QWORD *)(v4 - 8) + 84) == (_DWORD)a2)
    OUTLINED_FUNCTION_1_16(a1, a2, v4);
  else
    OUTLINED_FUNCTION_18();
}

uint64_t storeEnumTagSinglePayload for ParticipantReaction()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BD30C818(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  char v8;

  OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_45_7();
  if (v8)
  {
    OUTLINED_FUNCTION_0_29(a1, a2, a2, v7);
  }
  else
  {
    *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 7;
    OUTLINED_FUNCTION_18();
  }
}

uint64_t type metadata completion function for ParticipantReaction()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Participant(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BD30C8E0()
{
  swift_release();
  return swift_deallocObject();
}

void partial apply for thunk for @escaping @callee_guaranteed () -> (@out Bool)()
{
  uint64_t v0;

  thunk for @escaping @callee_guaranteed () -> (@out Bool)(*(void (**)(uint64_t *__return_ptr))(v0 + 16));
}

void partial apply for thunk for @escaping @callee_guaranteed () -> (@unowned Bool)(_BYTE *a1@<X8>)
{
  uint64_t v1;

  thunk for @escaping @callee_guaranteed () -> (@unowned Bool)(*(uint64_t (**)(void))(v1 + 16), a1);
}

void sub_1BD30C914()
{
  AttributeScopes.UIKitAttributes.attachment.getter();
  __break(1u);
}

unint64_t lazy protocol witness table accessor for type AttributeScopes.UIKitAttributes.AttachmentAttribute and conformance AttributeScopes.UIKitAttributes.AttachmentAttribute()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type AttributeScopes.UIKitAttributes.AttachmentAttribute and conformance AttributeScopes.UIKitAttributes.AttachmentAttribute;
  if (!lazy protocol witness table cache variable for type AttributeScopes.UIKitAttributes.AttachmentAttribute and conformance AttributeScopes.UIKitAttributes.AttachmentAttribute)
  {
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0DC1858], MEMORY[0x1E0DC1868]);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AttributeScopes.UIKitAttributes.AttachmentAttribute and conformance AttributeScopes.UIKitAttributes.AttachmentAttribute);
  }
  return result;
}

uint64_t sub_1BD30C970()
{
  return 8;
}

uint64_t sub_1BD30C97C()
{
  return swift_release();
}

uint64_t sub_1BD30C984(_QWORD *a1, _QWORD *a2)
{
  *a2 = *a1;
  return swift_retain();
}

_QWORD *sub_1BD30C998(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t OUTLINED_FUNCTION_76_15()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

uint64_t OUTLINED_FUNCTION_87_9()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(v0 + *(int *)(type metadata accessor for SessionActionNotice(0) + 28));
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 104))(v2, v3);
}

uint64_t OUTLINED_FUNCTION_89_15()
{
  return String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
}

uint64_t OUTLINED_FUNCTION_93_7()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_101_12()
{
  AttributedString.init(cnkLocalized:)();
}

uint64_t OUTLINED_FUNCTION_102_11()
{
  return String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
}

uint64_t OUTLINED_FUNCTION_104_9()
{
  uint64_t (*v0)(_QWORD);

  return v0(0);
}

uint64_t OUTLINED_FUNCTION_106_7()
{
  outlined consume of SessionActionNotice.NoticeType(10, 0, 0xC000000000000000);
  outlined consume of SessionActionNotice.NoticeType(10, 0, 0xC000000000000000);
  return type metadata accessor for SessionActionNotice(0);
}

uint64_t OUTLINED_FUNCTION_111_7()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_112_8()
{
  return 0;
}

void OUTLINED_FUNCTION_116_4(uint64_t a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;

  *v1 = *(_BYTE *)(v2 + a1);
}

void OUTLINED_FUNCTION_118_9()
{
  AttributedString.init(cnkLocalized:)();
}

uint64_t OUTLINED_FUNCTION_126_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_128_4()
{
  return String.LocalizationValue.init(stringInterpolation:)();
}

uint64_t OUTLINED_FUNCTION_129_5()
{
  return outlined consume of SessionActionNotice.NoticeType(1, 0, 0xC000000000000000);
}

void OUTLINED_FUNCTION_132_6(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v2;

  v2 = (a2 - 32) | 0x8000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&a1);
}

uint64_t OUTLINED_FUNCTION_133_4()
{
  return type metadata accessor for SessionActionNotice(0);
}

void OUTLINED_FUNCTION_134_3(Swift::String a1)
{
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(a1);
}

void OUTLINED_FUNCTION_135_2(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  _s15ConversationKit11ParticipantVWObTm_1(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_138_3()
{
  return type metadata accessor for AppLaunchNotice(0);
}

uint64_t OUTLINED_FUNCTION_139_4()
{
  return type metadata accessor for SessionActionNotice(0);
}

uint64_t OUTLINED_FUNCTION_140_5()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_150_2()
{
  uint64_t v0;
  uint64_t v1;

  outlined init with copy of RadarReporting(v0, v1 - 104);
}

void OUTLINED_FUNCTION_151_2()
{
  uint64_t v0;
  uint64_t v1;

  outlined init with copy of RadarReporting(v0, v1 - 120);
}

uint64_t OUTLINED_FUNCTION_154_2()
{
  return type metadata accessor for String.LocalizationValue.StringInterpolation();
}

uint64_t OUTLINED_FUNCTION_158_0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[3];
  v2 = v0[4];
  __swift_project_boxed_opaque_existential_1(v0, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 80))(v1, v2);
}

uint64_t OUTLINED_FUNCTION_159_2@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_161_2(uint64_t (*a1)(_QWORD))
{
  return a1(0);
}

uint64_t OUTLINED_FUNCTION_164(uint64_t (*a1)(_QWORD))
{
  return a1(0);
}

uint64_t OUTLINED_FUNCTION_165_3@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v4 = v2 + a1;
  result = outlined consume of NoticeAccessory(*(_QWORD *)v4, *(_QWORD *)(v4 + 8));
  *(_QWORD *)v4 = v1;
  *(_QWORD *)(v4 + 8) = v3;
  return result;
}

void OUTLINED_FUNCTION_167_1()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_169()
{
  return 0x2064657463616552;
}

uint64_t OUTLINED_FUNCTION_170()
{
  void *v0;

  return outlined bridged method (pb) of @objc TUConversationNotice.item.getter(v0);
}

uint64_t OUTLINED_FUNCTION_172_0()
{
  return 0x6465746361657220;
}

uint64_t OUTLINED_FUNCTION_173_1()
{
  return String.LocalizationValue.StringInterpolation.appendInterpolation(_:options:)();
}

void OUTLINED_FUNCTION_181_0(Swift::String a1)
{
  String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(a1);
}

uint64_t OUTLINED_FUNCTION_183_0@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t OUTLINED_FUNCTION_186_1()
{
  return type metadata accessor for PushToTalkNotice(0);
}

uint64_t OUTLINED_FUNCTION_187_0()
{
  return type metadata accessor for AppLaunchNotice(0);
}

uint64_t OUTLINED_FUNCTION_188_1()
{
  return type metadata accessor for AttributedString();
}

uint64_t OUTLINED_FUNCTION_192_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t result;
  uint64_t v5;

  v3 = (uint64_t *)(v2 + a1);
  result = *v3;
  v5 = v3[1];
  *v1 = *v3;
  v1[1] = v5;
  return result;
}

uint64_t OUTLINED_FUNCTION_193_0()
{
  return 0x6465747261747320;
}

uint64_t OUTLINED_FUNCTION_194_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_196(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(v2, v1, a1);
}

uint64_t OUTLINED_FUNCTION_197_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(v2, v1, a1);
}

uint64_t OUTLINED_FUNCTION_203()
{
  return 41;
}

_QWORD *OUTLINED_FUNCTION_210()
{
  _QWORD *v0;

  return __swift_project_boxed_opaque_existential_1(v0, v0[3]);
}

unint64_t OUTLINED_FUNCTION_215()
{
  return 0xD000000000000010;
}

uint64_t OUTLINED_FUNCTION_218_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_222_0()
{
  return type metadata accessor for AttributedString.AttributeMergePolicy();
}

uint64_t OUTLINED_FUNCTION_224_1()
{
  return type metadata accessor for SystemUpdateNotice(0);
}

void OUTLINED_FUNCTION_225_1(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  _s15ConversationKit11ParticipantVWOcTm_3(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_227()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  return outlined copy of SessionActionNotice.NoticeType(v1, v0, v2);
}

uint64_t OUTLINED_FUNCTION_228_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_229_2()
{
  return Participant.name(_:)();
}

void OUTLINED_FUNCTION_231_2()
{
  AttributedString.init(conversationControlsLocalized:comment:)();
}

void OUTLINED_FUNCTION_232_0()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);

  outlined destroy of Participant(v0, v1);
}

uint64_t OUTLINED_FUNCTION_233()
{
  return outlined consume of SessionActionNotice.NoticeType(4, 0, 0xC000000000000000);
}

uint64_t OUTLINED_FUNCTION_236_1()
{
  return AttributedString.init(_:attributes:)();
}

uint64_t OUTLINED_FUNCTION_237_1()
{
  return type metadata accessor for AppLaunchNotice(0);
}

void OUTLINED_FUNCTION_238_0(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  outlined init with copy of RadarReporting(v2 + a1, v1);
}

uint64_t OUTLINED_FUNCTION_240()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_241_0(uint64_t a1, uint64_t a2)
{
  return __swift_project_value_buffer(a1, a2);
}

uint64_t OUTLINED_FUNCTION_242_0()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  return outlined consume of SessionActionNotice.NoticeType(v2, v0, v1);
}

void OUTLINED_FUNCTION_245()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;

  outlined destroy of Participant(v1, v0);
}

uint64_t OUTLINED_FUNCTION_247_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v3 + 104))(*(_QWORD *)(v4 - 184), a2, v2);
}

uint64_t OUTLINED_FUNCTION_248_1()
{
  return String.LocalizationValue.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_249_1(__int128 *a1, uint64_t a2)
{
  return outlined init with take of Notice(a1, a2);
}

void OUTLINED_FUNCTION_253_1(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 224) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_255_0(uint64_t (*a1)(_QWORD))
{
  return a1(0);
}

void OUTLINED_FUNCTION_256_1(Swift::String a1)
{
  String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(a1);
}

uint64_t OUTLINED_FUNCTION_259_0(unsigned int a1)
{
  return a1 | 0x7020646500000000;
}

uint64_t OUTLINED_FUNCTION_260_1()
{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

id OUTLINED_FUNCTION_261_0@<X0>(void *a1@<X8>)
{
  return a1;
}

uint64_t OUTLINED_FUNCTION_264_0()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_265_1()
{
  return type metadata accessor for SessionActivationRequestNotice(0);
}

uint64_t OUTLINED_FUNCTION_266_1()
{
  return type metadata accessor for PushToTalkNotice(0);
}

uint64_t OUTLINED_FUNCTION_267_1()
{
  return type metadata accessor for SystemUpdateNotice(0);
}

_QWORD *OUTLINED_FUNCTION_268_1(_QWORD *a1)
{
  return __swift_project_boxed_opaque_existential_1(a1, a1[3]);
}

uint64_t OUTLINED_FUNCTION_269_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_272_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_274_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_278()
{
  return String.LocalizationValue.init(stringInterpolation:)();
}

uint64_t OUTLINED_FUNCTION_281_1()
{
  return 0x6E776F6E6B6E75;
}

uint64_t OUTLINED_FUNCTION_282_0()
{
  return String.LocalizationValue.StringInterpolation.appendInterpolation(_:options:)();
}

uint64_t OUTLINED_FUNCTION_283_0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_287_0(uint64_t a1)
{
  return type metadata accessor for SessionActionNotice(a1);
}

uint64_t OUTLINED_FUNCTION_290_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

void OUTLINED_FUNCTION_293_0(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  outlined destroy of Participant(a1, v1);
}

void OUTLINED_FUNCTION_294_0(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  _s15ConversationKit11ParticipantVWOcTm_3(a1, a2, v2);
}

void OUTLINED_FUNCTION_296_1(void *a1)
{
  outlined bridged method (pb) of @objc TUHandle.siriDisplayName.getter(a1);
}

uint64_t OUTLINED_FUNCTION_299_0()
{
  return AttributeContainer.init()();
}

void OUTLINED_FUNCTION_302()
{
  Swift::String v0;

  v0._countAndFlagsBits = 93;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
}

void OUTLINED_FUNCTION_303_0(Swift::String a1)
{
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(a1);
}

uint64_t OUTLINED_FUNCTION_307_0()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_308_0()
{
  return type metadata accessor for SessionActivationRequestNotice(0);
}

uint64_t OUTLINED_FUNCTION_309_1()
{
  return type metadata accessor for AppLaunchNotice(0);
}

uint64_t OUTLINED_FUNCTION_310_1()
{
  return type metadata accessor for ReactionNotice(0);
}

uint64_t OUTLINED_FUNCTION_312_0@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t OUTLINED_FUNCTION_314_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[8] = a1;
  v3[4] = v1;
  v3[5] = v2;
  return v4;
}

void OUTLINED_FUNCTION_317_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  ParticipantContactDetailsCache.contactDetails(for:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

void OUTLINED_FUNCTION_318_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = v1;
  String.append(_:)(*(Swift::String *)&a1);
}

uint64_t OUTLINED_FUNCTION_321()
{
  return type metadata accessor for ParticipantReaction(0);
}

uint64_t OUTLINED_FUNCTION_323()
{
  return type metadata accessor for ReactionNotice(0);
}

uint64_t OUTLINED_FUNCTION_324_1()
{
  return StringProtocol.localizedUppercase.getter();
}

uint64_t OUTLINED_FUNCTION_326_1()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_329_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD);

  _s15ConversationKit11ParticipantVWObTm_1(v0, v1, v2);
}

uint64_t OUTLINED_FUNCTION_333()
{
  return 0x20656C706F657020;
}

uint64_t OUTLINED_FUNCTION_336_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_337_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_342_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_343_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

void OUTLINED_FUNCTION_344_1(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  _s15ConversationKit11ParticipantVWObTm_1(a1, a2, v2);
}

void OUTLINED_FUNCTION_345_0(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  _s15ConversationKit11ParticipantVWOcTm_3(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_347_0()
{
  return String.LocalizationValue.init(stringInterpolation:)();
}

uint64_t OUTLINED_FUNCTION_348()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_350_0()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_351_0(__n128 *a1@<X8>, __n128 a2@<Q0>)
{
  *a1 = a2;
}

id OUTLINED_FUNCTION_353_0@<X0>(id *a1@<X8>)
{
  return *a1;
}

void OUTLINED_FUNCTION_355_0(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5 = (_QWORD *)(v4 + a1);
  *v5 = a4;
  v5[1] = a3;
}

uint64_t OUTLINED_FUNCTION_356()
{
  return type metadata accessor for AppLaunchNotice(0);
}

void OUTLINED_FUNCTION_361(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

uint64_t OUTLINED_FUNCTION_363_0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 984))();
}

uint64_t OUTLINED_FUNCTION_365()
{
  uint64_t v0;

  return outlined consume of SessionActionNotice.NoticeType(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16));
}

void OUTLINED_FUNCTION_366_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  static SessionActionNotice.QueueItemType.== infix(_:_:)((uint64_t)&a12, (uint64_t)&a9);
}

void OUTLINED_FUNCTION_368_0()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 64) = 0;
  *(_QWORD *)(v0 - 56) = 0xE000000000000000;
}

uint64_t OUTLINED_FUNCTION_370_0()
{
  return type metadata accessor for SystemUpdateNotice(0);
}

uint64_t OUTLINED_FUNCTION_371_0()
{
  return type metadata accessor for PushToTalkNotice(0);
}

_QWORD *OUTLINED_FUNCTION_372_0(_QWORD *a1)
{
  return __swift_project_boxed_opaque_existential_1(a1, a1[3]);
}

uint64_t OUTLINED_FUNCTION_373_0(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  return type metadata accessor for SessionActionNotice(0);
}

void OUTLINED_FUNCTION_374()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_375_0(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0x2064000000000000;
}

unint64_t OUTLINED_FUNCTION_376_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a1 + 56) = a2;
  return lazy protocol witness table accessor for type String and conformance String();
}

uint64_t OUTLINED_FUNCTION_377()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 - 72))();
}

uint64_t OUTLINED_FUNCTION_378_0()
{
  return AttributedString.mergeAttributes(_:mergePolicy:)();
}

uint64_t OUTLINED_FUNCTION_379(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_380_0()
{
  return static String.localizedStringWithFormat(_:_:)();
}

uint64_t OUTLINED_FUNCTION_381()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_383_0()
{
  AttributedString.init(cnkLocalized:)();
}

uint64_t OUTLINED_FUNCTION_385()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_387()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_388()
{
  return String.LocalizationValue.init(stringInterpolation:)();
}

void OUTLINED_FUNCTION_389(uint64_t a1)
{
  unint64_t v1;

  v1 = 0xA300000000000000;
  String.append(_:)(*(Swift::String *)&a1);
}

void OUTLINED_FUNCTION_390()
{
  void *v0;
  uint64_t v1;
  Swift::String v2;

  v2._countAndFlagsBits = v1;
  v2._object = v0;
  String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v2);
}

uint64_t OUTLINED_FUNCTION_391_0()
{
  return static String.localizedStringWithFormat(_:_:)();
}

unint64_t OUTLINED_FUNCTION_393()
{
  return 0xD000000000000012;
}

uint64_t OUTLINED_FUNCTION_394_0@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return String.deviceAdjustedLocalizedKey(forDeviceFamily:)(a1, a2, a3, (a4 - 32) | 0x8000000000000000);
}

id OUTLINED_FUNCTION_396_0()
{
  uint64_t v0;

  return ReactionNotice.reactionSymbols.getter(v0);
}

void OUTLINED_FUNCTION_398_0(Swift::String a1)
{
  String.append(_:)(a1);
}

uint64_t OUTLINED_FUNCTION_399_0()
{
  uint64_t v0;
  uint64_t v1;

  return *(_QWORD *)(v0 + *(int *)(v1 + 36));
}

void OUTLINED_FUNCTION_407_0()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_409_0()
{
  return type metadata accessor for SessionActionNotice(0);
}

uint64_t OUTLINED_FUNCTION_410_0()
{
  return type metadata accessor for ReactionNotice(0);
}

void OUTLINED_FUNCTION_411_0()
{
  void *v0;

}

Class OUTLINED_FUNCTION_414_0()
{
  return PersonNameComponents._bridgeToObjectiveC()().super.isa;
}

uint64_t OUTLINED_FUNCTION_416_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_417_0()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_418_0()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(v0, v2);
}

void OUTLINED_FUNCTION_419_0(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  outlined destroy of Participant(v2, a2);
}

unint64_t OUTLINED_FUNCTION_420_0()
{
  return 0xD000000000000015;
}

uint64_t dispatch thunk of InCallControlsParticipantCellDelegate.inCallControlsParticipantCell(_:didTapAction:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t CallRecordingViewModel.__allocating_init(service:)(uint64_t a1)
{
  return CallRecordingViewModel.__allocating_init(service:)(a1, (uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))specialized CallRecordingViewModel.__allocating_init(service:));
}

void CallRecordingViewModel.$presentedView.getter()
{
  OUTLINED_FUNCTION_2_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CallRecordingViewModel.PresentedView?>);
  Published.projectedValue.getter();
  swift_endAccess();
  OUTLINED_FUNCTION_32();
}

uint64_t CallRecordingViewModel.presentedView.getter()
{
  unsigned __int8 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  OUTLINED_FUNCTION_19();
  swift_release();
  return v1;
}

void CallRecordingViewModel.countdownDelegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v2 + 96) = a2;
  OUTLINED_FUNCTION_107();
  CallRecordingViewModel.countdownDelegate.didset();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_9_0();
}

void CallRecordingViewModel.service.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  OUTLINED_FUNCTION_2_0();
  outlined init with copy of IDSLookupManager(v1 + 32, a1);
  OUTLINED_FUNCTION_32();
}

void CallRecordingViewModel.service.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + 32;
  OUTLINED_FUNCTION_2_0();
  __swift_destroy_boxed_opaque_existential_1(v3);
  outlined init with take of Notice(a1, v3);
  swift_endAccess();
  OUTLINED_FUNCTION_32();
}

void CallRecordingViewModel.service.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void CallRecordingViewModel.countdownDelegate.getter()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_26();
}

void sub_1BD30D8D4()
{
  OUTLINED_FUNCTION_32();
}

void key path setter for CallRecordingViewModel.countdownDelegate : CallRecordingViewModel(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = swift_unknownObjectRetain();
  CallRecordingViewModel.countdownDelegate.setter(v2, v1);
}

uint64_t CallRecordingViewModel.countdownDelegate.didset()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t ObjectType;

  swift_beginAccess();
  result = MEMORY[0x1C3B752C0](v0 + 88);
  if (result)
  {
    v2 = *(_QWORD *)(v0 + 96);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(ObjectType, v2);
    return swift_unknownObjectRelease();
  }
  return result;
}

void CallRecordingViewModel.countdownDelegate.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = OUTLINED_FUNCTION_124_1();
  *v0 = v2;
  v2[5] = v1;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_26();
}

void sub_1BD30D9C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 96);
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v3;
  OUTLINED_FUNCTION_18();
}

void CallRecordingViewModel.countdownDelegate.modify(uint64_t a1, char a2)
{
  void *v3;

  v3 = *(void **)a1;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 40) + 96) = *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_248();
  }
  else
  {
    OUTLINED_FUNCTION_248();
    swift_unknownObjectRelease();
    CallRecordingViewModel.countdownDelegate.didset();
  }
  OUTLINED_FUNCTION_4_2(v3);
}

uint64_t key path getter for CallRecordingViewModel.recordingDelegate : CallRecordingViewModel@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v3 = *a1;
  v4 = *a1 + 104;
  swift_beginAccess();
  result = MEMORY[0x1C3B752C0](v4);
  v6 = *(_QWORD *)(v3 + 112);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t key path setter for CallRecordingViewModel.recordingDelegate : CallRecordingViewModel(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 112) = v2;
  return swift_unknownObjectWeakAssign();
}

void CallRecordingViewModel.recordingDelegate.getter()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_26();
}

void sub_1BD30DB1C()
{
  OUTLINED_FUNCTION_32();
}

void CallRecordingViewModel.recordingDelegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v2 + 112) = a2;
  OUTLINED_FUNCTION_107();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_9_0();
}

void CallRecordingViewModel.recordingDelegate.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = OUTLINED_FUNCTION_124_1();
  *v0 = v2;
  v2[5] = v1;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_26();
}

void sub_1BD30DBA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 112);
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v3;
  OUTLINED_FUNCTION_18();
}

void CallRecordingViewModel.recordingDelegate.modify(uint64_t a1, char a2)
{
  void *v3;

  v3 = *(void **)a1;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 40) + 112) = *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_248();
  }
  else
  {
    OUTLINED_FUNCTION_248();
    OUTLINED_FUNCTION_10();
  }
  OUTLINED_FUNCTION_4_2(v3);
}

unint64_t CallRecordingViewModel.recordingState.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_2_0();
  return *(unsigned int *)(v0 + 120) | ((unint64_t)*(unsigned __int8 *)(v0 + 124) << 32);
}

uint64_t key path getter for CallRecordingViewModel.recordingState : CallRecordingViewModel@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  char v5;

  v3 = *a1;
  result = swift_beginAccess();
  v5 = *(_BYTE *)(v3 + 124);
  *(_DWORD *)a2 = *(_DWORD *)(v3 + 120);
  *(_BYTE *)(a2 + 4) = v5;
  return result;
}

void key path setter for CallRecordingViewModel.recordingState : CallRecordingViewModel(unsigned int *a1)
{
  CallRecordingViewModel.recordingState.setter(*a1 | ((unint64_t)*((unsigned __int8 *)a1 + 4) << 32));
}

void CallRecordingViewModel.recordingState.setter(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_2_0();
  *(_DWORD *)(v1 + 120) = a1;
  *(_BYTE *)(v1 + 124) = BYTE4(a1) & 1;
  CallRecordingViewModel.update()();
  OUTLINED_FUNCTION_32();
}

Swift::Void __swiftcall CallRecordingViewModel.update()()
{
  uint64_t v0;
  int v1;

  OUTLINED_FUNCTION_2_0();
  if ((*(_BYTE *)(v0 + 124) & 1) != 0)
    goto LABEL_6;
  v1 = *(_DWORD *)(v0 + 120);
  if ((v1 - 1) >= 2)
  {
    if (v1 == 3)
    {
      CallRecordingViewModel.presentedView.setter();
      CallRecordingViewModel.observeAudioSpectrum()();
      CallRecordingViewModel.startStopwatch()();
      goto LABEL_7;
    }
LABEL_6:
    CallRecordingViewModel.reset()();
    goto LABEL_7;
  }
  CallRecordingViewModel.presentedView.setter();
LABEL_7:
  OUTLINED_FUNCTION_32();
}

void CallRecordingViewModel.recordingState.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void CallRecordingViewModel.recordingState.modify()
{
  char v0;

  OUTLINED_FUNCTION_551();
  if ((v0 & 1) == 0)
    CallRecordingViewModel.update()();
  OUTLINED_FUNCTION_0();
}

BOOL static CallRecordingViewModel.PresentedView.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void CallRecordingViewModel.PresentedView.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
  Hasher._combine(_:)(a2);
  OUTLINED_FUNCTION_0();
}

Swift::Int CallRecordingViewModel.PresentedView.hashValue.getter(unsigned __int8 a1)
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1);
  return Hasher._finalize()();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance CallRecordingViewModel.PresentedView(char *a1, char *a2)
{
  return static CallRecordingViewModel.PresentedView.== infix(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance CallRecordingViewModel.PresentedView()
{
  unsigned __int8 *v0;

  return CallRecordingViewModel.PresentedView.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance CallRecordingViewModel.PresentedView(uint64_t a1)
{
  unsigned __int8 *v1;

  CallRecordingViewModel.PresentedView.hash(into:)(a1, *v1);
}

uint64_t key path getter for CallRecordingViewModel.presentedView : CallRecordingViewModel@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = CallRecordingViewModel.presentedView.getter();
  *a1 = result;
  return result;
}

void key path setter for CallRecordingViewModel.presentedView : CallRecordingViewModel()
{
  CallRecordingViewModel.presentedView.setter();
}

void CallRecordingViewModel.presentedView.setter()
{
  char v0;

  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.setter();
  CallRecordingViewModel.presentedView.didset(v0);
}

void CallRecordingViewModel.presentedView.didset(char a1)
{
  id v3;
  id v4;

  if (CallRecordingViewModel.presentedView.getter() == 3 && a1 != 2)
  {
    v3 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
    v4 = v3;
    if (one-time initialization token for startCallRecordingStateCancelledNotification != -1)
    {
      swift_once();
      v3 = v4;
    }
    objc_msgSend(v3, sel_postNotificationName_object_, static NSNotificationName.startCallRecordingStateCancelledNotification, 0);

  }
}

void CallRecordingViewModel.presentedView.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = CallRecordingViewModel.presentedView.getter();
  OUTLINED_FUNCTION_0();
}

void CallRecordingViewModel.presentedView.modify()
{
  CallRecordingViewModel.presentedView.setter();
  OUTLINED_FUNCTION_0();
}

void key path setter for CallRecordingViewModel.$presentedView : CallRecordingViewModel(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CallRecordingViewModel.PresentedView?>.Publisher);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  CallRecordingViewModel.$presentedView.setter((uint64_t)v4);
}

void CallRecordingViewModel.$presentedView.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CallRecordingViewModel.PresentedView?>.Publisher);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_16_2();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, a1, v3);
  OUTLINED_FUNCTION_2_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CallRecordingViewModel.PresentedView?>);
  Published.projectedValue.setter();
  swift_endAccess();
  OUTLINED_FUNCTION_101(a1, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  OUTLINED_FUNCTION_91();
}

void CallRecordingViewModel.$presentedView.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;

  v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CallRecordingViewModel.PresentedView?>.Publisher);
  v3[4] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[5] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[6] = malloc(v6);
  v3[7] = malloc(v6);
  OUTLINED_FUNCTION_2_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CallRecordingViewModel.PresentedView?>);
  Published.projectedValue.getter();
  swift_endAccess();
  OUTLINED_FUNCTION_18();
}

void CallRecordingViewModel.$presentedView.modify(uint64_t a1, char a2)
{
  _QWORD *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 48);
  v4 = *(void **)(*(_QWORD *)a1 + 56);
  if ((a2 & 1) != 0)
  {
    v5 = v2[4];
    v6 = v2[5];
    (*(void (**)(_QWORD, void *, uint64_t))(v6 + 16))(*(_QWORD *)(*(_QWORD *)a1 + 48), v4, v5);
    CallRecordingViewModel.$presentedView.setter((uint64_t)v3);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    CallRecordingViewModel.$presentedView.setter(*(_QWORD *)(*(_QWORD *)a1 + 56));
  }
  free(v4);
  free(v3);
  free(v2);
}

uint64_t CallRecordingViewModel.stopwatchFormattedValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit22CallRecordingViewModel_stopwatchValue);
  v2 = v1 % 3600 / 60;
  v3 = v1 % 60;
  if (v1 < 3600)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v8 = swift_allocObject();
    v9 = MEMORY[0x1E0DEB418];
    *(_OWORD *)(v8 + 16) = xmmword_1BD645380;
    v10 = MEMORY[0x1E0DEB490];
    *(_QWORD *)(v8 + 56) = v9;
    *(_QWORD *)(v8 + 64) = v10;
    *(_QWORD *)(v8 + 32) = v2;
    *(_QWORD *)(v8 + 96) = v9;
    *(_QWORD *)(v8 + 104) = v10;
    *(_QWORD *)(v8 + 72) = v3;
  }
  else
  {
    v4 = v1 / 0xE10uLL;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1BD646740;
    v6 = MEMORY[0x1E0DEB418];
    v7 = MEMORY[0x1E0DEB490];
    *(_QWORD *)(v5 + 56) = MEMORY[0x1E0DEB418];
    *(_QWORD *)(v5 + 64) = v7;
    *(_QWORD *)(v5 + 32) = v4;
    *(_QWORD *)(v5 + 96) = v6;
    *(_QWORD *)(v5 + 104) = v7;
    *(_QWORD *)(v5 + 72) = v2;
    *(_QWORD *)(v5 + 136) = v6;
    *(_QWORD *)(v5 + 144) = v7;
    *(_QWORD *)(v5 + 112) = v3;
  }
  return String.init(format:_:)();
}

uint64_t CallRecordingViewModel.init(service:)(uint64_t a1)
{
  return CallRecordingViewModel.__allocating_init(service:)(a1, (uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))specialized CallRecordingViewModel.init(service:));
}

uint64_t CallRecordingViewModel.__allocating_init(service:)(uint64_t a1, uint64_t (*a2)(char *, uint64_t, uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = __swift_mutable_project_boxed_opaque_existential_1(a1, v5);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v10 + 16))(v9);
  v11 = a2(v9, v2, v5, v6);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v11;
}

Swift::Void __swiftcall CallRecordingViewModel.observeCountdownNotifications()()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  os_log_type_t v5;
  uint8_t *v6;
  id v7;

  v2 = OUTLINED_FUNCTION_30_47();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_16_2();
  if (one-time initialization token for recordingSession != -1)
    swift_once();
  v4 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v4, (uint64_t)&static Logger.recordingSession);
  OUTLINED_FUNCTION_11_17();
  v5 = OUTLINED_FUNCTION_12_0();
  if (os_log_type_enabled(v0, v5))
  {
    v6 = (uint8_t *)OUTLINED_FUNCTION_7_8();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_1BD004000, v0, v5, "Observing countdown notification", v6, 2u);
    OUTLINED_FUNCTION_60();
  }

  v7 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  if (one-time initialization token for startCallRecordingCountdownNotification != -1)
    swift_once();
  OUTLINED_FUNCTION_42_38();

  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_7_4();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type NSNotificationCenter.Publisher and conformance NSNotificationCenter.Publisher, (void (*)(uint64_t))MEMORY[0x1E0CB1F30]);
  OUTLINED_FUNCTION_35_30();
  OUTLINED_FUNCTION_18_67();
  OUTLINED_FUNCTION_101(v1, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  OUTLINED_FUNCTION_2_0();
  AnyCancellable.store(in:)();
  swift_endAccess();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_65_1();
}

Swift::Void __swiftcall CallRecordingViewModel.observeRecordingStateNotifications()()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  id v4;

  v1 = OUTLINED_FUNCTION_30_47();
  v2 = (void (*)(uint64_t))MEMORY[0x1E0CB1F30];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_16_2();
  v4 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  OUTLINED_FUNCTION_42_38();

  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_7_4();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type NSNotificationCenter.Publisher and conformance NSNotificationCenter.Publisher, v2);
  OUTLINED_FUNCTION_35_30();
  swift_release();
  OUTLINED_FUNCTION_101(v0, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  OUTLINED_FUNCTION_2_0();
  AnyCancellable.store(in:)();
  swift_endAccess();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_65_1();
}

uint64_t CallRecordingViewModel.observeAudioSpectrum()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v10;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload((uint64_t)v4, 1, 1, v5);
  type metadata accessor for MainActor();
  swift_retain();
  v6 = static MainActor.shared.getter();
  v7 = (_QWORD *)swift_allocObject();
  v8 = MEMORY[0x1E0DF06E8];
  v7[2] = v6;
  v7[3] = v8;
  v7[4] = v1;
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
  return swift_release();
}

Swift::Void __swiftcall CallRecordingViewModel.startStopwatch()()
{
  NSObject *v0;
  uint64_t v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  os_log_type_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_4_1();
  if (one-time initialization token for recordingSession != -1)
    swift_once();
  v4 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v4, (uint64_t)&static Logger.recordingSession);
  OUTLINED_FUNCTION_11_17();
  v5 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_51_3(v5))
  {
    *(_WORD *)OUTLINED_FUNCTION_7_8() = 0;
    OUTLINED_FUNCTION_2_29(&dword_1BD004000, v0, v2, "Start recording stopwatch");
    OUTLINED_FUNCTION_60();
  }

  v6 = CallRecordingViewModel.updateStopwatch()();
  OUTLINED_FUNCTION_59(v6, (unint64_t *)&lazy cache variable for type metadata for NSTimer);
  v7 = objc_msgSend((id)objc_opt_self(), sel_mainRunLoop);
  v8 = OUTLINED_FUNCTION_38_43();
  OUTLINED_FUNCTION_3_100(v8);

  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v1, (uint64_t *)&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  type metadata accessor for NSTimer.TimerPublisher();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type NSTimer.TimerPublisher and conformance NSTimer.TimerPublisher, (void (*)(uint64_t))MEMORY[0x1E0CB20A0]);
  ConnectablePublisher.autoconnect()();
  OUTLINED_FUNCTION_18_67();
  v9 = (uint64_t)&v9;
  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_7_4();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.Autoconnect<NSTimer.TimerPublisher>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>, &demangling cache variable for type metadata for Publishers.Autoconnect<NSTimer.TimerPublisher>);
  OUTLINED_FUNCTION_31_48();
  OUTLINED_FUNCTION_114_0();
  swift_release();
  OUTLINED_FUNCTION_48_33();
  OUTLINED_FUNCTION_91();
}

Swift::Void __swiftcall CallRecordingViewModel.reset()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;

  v3 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_4_1();
  CallRecordingViewModel.presentedView.setter();
  OUTLINED_FUNCTION_2_0();
  if (MEMORY[0x1C3B752C0](v0 + 88))
  {
    v5 = OUTLINED_FUNCTION_44_39();
    (*(void (**)(uint64_t))(v2 + 24))(v5);
    OUTLINED_FUNCTION_10();
  }
  CallRecordingViewModel.stopStopwatch()();
  CallRecordingViewModel.stopWaveform()();
  v6 = type metadata accessor for TaskPriority();
  OUTLINED_FUNCTION_77_0(v1, v7, v8, v6);
  type metadata accessor for MainActor();
  swift_retain();
  v9 = static MainActor.shared.getter();
  v10 = (_QWORD *)swift_allocObject();
  v11 = MEMORY[0x1E0DF06E8];
  v10[2] = v9;
  v10[3] = v11;
  v10[4] = v3;
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
  swift_release();
}

uint64_t CallRecordingViewModel.stopStopwatch()()
{
  uint64_t v0;
  uint64_t result;

  if (*(_QWORD *)(v0 + 72))
  {
    swift_retain();
    AnyCancellable.cancel()();
    return swift_release();
  }
  return result;
}

void CallRecordingViewModel.stopWaveform()()
{
  uint64_t v0;
  _QWORD **v1;
  _QWORD *v2;
  void (*v3)(uint64_t, unint64_t);
  _QWORD *v4;

  v1 = (_QWORD **)(v0 + OBJC_IVAR____TtC15ConversationKit22CallRecordingViewModel_waveformViewModel);
  swift_beginAccess();
  v2 = *v1;
  if (*v1)
  {
    v3 = *(void (**)(uint64_t, unint64_t))((*MEMORY[0x1E0DEEDD8] & *v2) + 0x238);
    v4 = v2;
    v3(0x65766157706F7473, 0xEE0029286D726F66);

    v2 = *v1;
  }
  *v1 = 0;

}

uint64_t closure #1 in CallRecordingViewModel.reset()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  type metadata accessor for MainActor();
  *(_QWORD *)(v4 + 24) = static MainActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  return swift_task_switch();
}

uint64_t closure #1 in CallRecordingViewModel.reset()()
{
  uint64_t v0;

  swift_release();
  CallRecordingViewModel.stopRecording()();
  return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v0 + 8));
}

void *CallRecordingViewModel.stopRecording()()
{
  uint64_t v0;
  void *v1;
  void *result;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[3];
  uint64_t v6;
  uint64_t v7;

  v1 = CallRecordingViewModel.activeCall.getter((SEL *)&selRef_isRecording);
  if (v1 || (result = CallRecordingViewModel.disclosingCall.getter(), (v1 = result) != 0))
  {
    swift_beginAccess();
    outlined init with copy of IDSLookupManager(v0 + 32, (uint64_t)v5);
    v3 = v6;
    v4 = v7;
    __swift_project_boxed_opaque_existential_1(v5, v6);
    (*(void (**)(void *, void (*)(uint64_t), _QWORD, uint64_t, uint64_t))(v4 + 16))(v1, closure #1 in CallRecordingViewModel.stopRecording(), 0, v3, v4);

    return (void *)__swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  }
  return result;
}

uint64_t closure #1 in CallRecordingViewModel.observeCountdownNotifications()()
{
  uint64_t result;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    if (one-time initialization token for recordingSession != -1)
      swift_once();
    v1 = type metadata accessor for Logger();
    __swift_project_value_buffer(v1, (uint64_t)&static Logger.recordingSession);
    v2 = Logger.logObject.getter();
    v3 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v2, v3))
    {
      v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v4 = 0;
      _os_log_impl(&dword_1BD004000, v2, v3, "Start pre-recording countdown", v4, 2u);
      MEMORY[0x1C3B751B8](v4, -1, -1);
    }

    CallRecordingViewModel.startCountdown()();
    return swift_release();
  }
  return result;
}

Swift::Void __swiftcall CallRecordingViewModel.startCountdown()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_4_1();
  CallRecordingViewModel.presentedView.setter();
  *(_QWORD *)(v0 + 80) = 3;
  OUTLINED_FUNCTION_2_0();
  v4 = MEMORY[0x1C3B752C0](v0 + 88);
  if (v4)
  {
    v5 = OUTLINED_FUNCTION_44_39();
    (*(void (**)(uint64_t, uint64_t))(v2 + 16))(3, v5);
    v4 = OUTLINED_FUNCTION_10();
  }
  OUTLINED_FUNCTION_59(v4, (unint64_t *)&lazy cache variable for type metadata for NSTimer);
  v6 = objc_msgSend((id)objc_opt_self(), sel_mainRunLoop);
  v7 = OUTLINED_FUNCTION_38_43();
  OUTLINED_FUNCTION_3_100(v7);

  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v1, (uint64_t *)&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  type metadata accessor for NSTimer.TimerPublisher();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type NSTimer.TimerPublisher and conformance NSTimer.TimerPublisher, (void (*)(uint64_t))MEMORY[0x1E0CB20A0]);
  ConnectablePublisher.autoconnect()();
  OUTLINED_FUNCTION_18_67();
  v8 = (uint64_t)&v8;
  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_7_4();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.Autoconnect<NSTimer.TimerPublisher>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>, &demangling cache variable for type metadata for Publishers.Autoconnect<NSTimer.TimerPublisher>);
  OUTLINED_FUNCTION_31_48();
  OUTLINED_FUNCTION_114_0();
  swift_release();
  OUTLINED_FUNCTION_48_33();
  OUTLINED_FUNCTION_91();
}

void closure #1 in CallRecordingViewModel.observeRecordingStateNotifications()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t Strong;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  NSObject *v18;
  _BOOL4 v19;
  uint8_t *v20;
  id v21;
  void *v22;
  unsigned int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint8_t *v27;
  os_log_t v28;
  uint64_t v29;
  int v30;
  int v31;
  id v32;
  void *v33;
  uint64_t v34;
  unsigned int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint8_t *v44;
  os_log_t v45;
  char *v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  char v55;
  uint64_t v56;

  v0 = type metadata accessor for Date();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v51 = (char *)&v42 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for UUID();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (int *)type metadata accessor for HUDActivityManager.BannerUpdate(0);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v42 - v11;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v14 = Strong;
    Notification.object.getter();
    if (*((_QWORD *)&v53 + 1))
    {
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUCall);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v46 = v12;
        v47 = v4;
        v15 = (void *)v56;
        if (one-time initialization token for recordingSession != -1)
          swift_once();
        v16 = type metadata accessor for Logger();
        __swift_project_value_buffer(v16, (uint64_t)&static Logger.recordingSession);
        v17 = v15;
        v18 = Logger.logObject.getter();
        LODWORD(v48) = static os_log_type_t.default.getter();
        v19 = os_log_type_enabled(v18, (os_log_type_t)v48);
        v49 = v1;
        v50 = v0;
        if (v19)
        {
          v45 = v18;
          v20 = (uint8_t *)swift_slowAlloc();
          v43 = swift_slowAlloc();
          *(_QWORD *)&v52 = v43;
          v44 = v20;
          *(_DWORD *)v20 = 136315138;
          v21 = objc_msgSend(v17, sel_recordingSession);
          if (v21)
          {
            v22 = v21;
            v23 = objc_msgSend(v21, sel_recordingState);

            LODWORD(v56) = v23;
            type metadata accessor for TUCallRecordingState(0);
            v24 = String.init<A>(reflecting:)();
            v26 = v25;
          }
          else
          {
            v26 = 0xE300000000000000;
            v24 = 7104878;
          }
          v27 = v44;
          v56 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v24, v26, (uint64_t *)&v52);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          v28 = v45;
          _os_log_impl(&dword_1BD004000, v45, (os_log_type_t)v48, "TUCallRecordingState changed to: %s.", v27, 0xCu);
          v29 = v43;
          swift_arrayDestroy();
          MEMORY[0x1C3B751B8](v29, -1, -1);
          MEMORY[0x1C3B751B8](v27, -1, -1);

        }
        else
        {

        }
        swift_beginAccess();
        v30 = *(_DWORD *)(v14 + 120);
        v31 = *(unsigned __int8 *)(v14 + 124);
        v48 = v17;
        v32 = objc_msgSend(v17, sel_recordingSession);
        v33 = v32;
        v34 = v47;
        if (v32)
        {
          v35 = objc_msgSend(v32, sel_recordingState);

        }
        else
        {
          v35 = 0;
        }
        *(_DWORD *)(v14 + 120) = v35;
        *(_BYTE *)(v14 + 124) = v33 == 0;
        CallRecordingViewModel.update()();
        if (v30 == 3)
          v36 = v31;
        else
          v36 = 1;
        v38 = v49;
        v37 = v50;
        if (v36 == 1 && ((*(_BYTE *)(v14 + 124) & 1) != 0 || *(_DWORD *)(v14 + 120) != 3))
        {
          swift_release();

        }
        else
        {
          v54 = 0;
          v52 = 0u;
          v53 = 0u;
          v55 = 6;
          UUID.init()();
          v39 = &v10[v7[11]];
          *((_QWORD *)v39 + 1) = 0;
          swift_unknownObjectWeakInit();
          *(_QWORD *)v10 = 0x4082C00000000000;
          outlined init with copy of ConversationControlsType((uint64_t)&v52, (uint64_t)(v10 + 8));
          *((_QWORD *)v10 + 7) = 0;
          v10[64] = 1;
          *((_QWORD *)v39 + 1) = 0;
          swift_unknownObjectWeakAssign();
          v10[65] = 1;
          (*(void (**)(char *, char *, uint64_t))(v34 + 16))(&v10[v7[8]], v6, v3);
          v40 = v51;
          static Date.now.getter();
          (*(void (**)(char *, uint64_t))(v34 + 8))(v6, v3);
          outlined destroy of ConversationControlsType((uint64_t)&v52);
          (*(void (**)(char *, char *, uint64_t))(v38 + 32))(&v10[v7[9]], v40, v37);
          *(_QWORD *)&v10[v7[10]] = 0;
          v41 = (uint64_t)v46;
          outlined init with take of HUDActivityManager.BannerUpdate((uint64_t)v10, (uint64_t)v46);
          if (one-time initialization token for shared != -1)
            swift_once();
          objc_release((id)(*(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)static HUDActivityManager.shared)
                                                              + 0xF0))(v41));

          swift_release();
          swift_release();
          outlined destroy of HUDActivityManager.BannerUpdate(v41);
        }
      }
      else
      {
        swift_release();
      }
    }
    else
    {
      swift_release();
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v52, &demangling cache variable for type metadata for Any?);
    }
  }
}

uint64_t closure #1 in CallRecordingViewModel.startCountdown()()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v4 = result;
    v5 = *(_QWORD *)(result + 80);
    v6 = __OFSUB__(v5, 1);
    v7 = v5 - 1;
    if (v6)
    {
      __break(1u);
    }
    else
    {
      *(_QWORD *)(result + 80) = v7;
      v8 = type metadata accessor for TaskPriority();
      __swift_storeEnumTagSinglePayload((uint64_t)v2, 1, 1, v8);
      v9 = (_QWORD *)swift_allocObject();
      v9[2] = 0;
      v9[3] = 0;
      v9[4] = v4;
      swift_retain();
      _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
      swift_release();
      return swift_release();
    }
  }
  return result;
}

uint64_t closure #1 in closure #1 in CallRecordingViewModel.startCountdown()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch();
}

uint64_t closure #1 in closure #1 in CallRecordingViewModel.startCountdown()()
{
  _QWORD *v0;

  v0[3] = *(_QWORD *)(v0[2] + 80);
  type metadata accessor for MainActor();
  v0[4] = static MainActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  return swift_task_switch();
}

{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_release();
  CallRecordingViewModel.handleCountdownValue(_:)(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void *CallRecordingViewModel.handleCountdownValue(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  void *result;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(void *, uint64_t (*)(void *), uint64_t, uint64_t, uint64_t);
  uint64_t v22[3];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = v1;
  if (*(uint64_t *)(v1 + 80) < 1)
  {
    if (one-time initialization token for recordingSession != -1)
      swift_once();
    v14 = type metadata accessor for Logger();
    __swift_project_value_buffer(v14, (uint64_t)&static Logger.recordingSession);
    v15 = Logger.logObject.getter();
    v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v17 = 0;
      _os_log_impl(&dword_1BD004000, v15, v16, "Countdown value is 0", v17, 2u);
      MEMORY[0x1C3B751B8](v17, -1, -1);
    }

    if (*(_QWORD *)(v2 + 72))
    {
      swift_retain();
      AnyCancellable.cancel()();
      swift_release();
    }
    result = CallRecordingViewModel.activeCall.getter((SEL *)&selRef_isActive);
    if (result)
    {
      v18 = result;
      swift_beginAccess();
      outlined init with copy of IDSLookupManager(v2 + 32, (uint64_t)v22);
      v19 = v23;
      v20 = v24;
      __swift_project_boxed_opaque_existential_1(v22, v23);
      v21 = *(void (**)(void *, uint64_t (*)(void *), uint64_t, uint64_t, uint64_t))(v20 + 8);
      swift_retain();
      v21(v18, partial apply for closure #1 in CallRecordingViewModel.handleCountdownValue(_:), v2, v19, v20);
      swift_release();

      return (void *)__swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    }
  }
  else
  {
    if (one-time initialization token for recordingSession != -1)
      swift_once();
    v4 = type metadata accessor for Logger();
    __swift_project_value_buffer(v4, (uint64_t)&static Logger.recordingSession);
    v5 = Logger.logObject.getter();
    v6 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      v8 = swift_slowAlloc();
      v22[0] = v8;
      *(_DWORD *)v7 = 136315138;
      v25 = a1;
      v9 = String.init<A>(reflecting:)();
      v25 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v9, v10, v22);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD004000, v5, v6, "Countdown value: %s.", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v8, -1, -1);
      MEMORY[0x1C3B751B8](v7, -1, -1);
    }

    swift_beginAccess();
    result = (void *)MEMORY[0x1C3B752C0](v2 + 88);
    if (result)
    {
      v12 = *(_QWORD *)(v2 + 96);
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(a1, ObjectType, v12);
      return (void *)swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t closure #1 in CallRecordingViewModel.handleCountdownValue(_:)(void *a1)
{
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD aBlock[6];

  v2 = type metadata accessor for DispatchWorkItemFlags();
  v3 = (void (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v17 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for DispatchQoS();
  v6 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v9 = (void *)static OS_dispatch_queue.main.getter();
  v10 = swift_allocObject();
  swift_weakInit();
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  aBlock[4] = partial apply for closure #1 in closure #1 in CallRecordingViewModel.handleCountdownValue(_:);
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed @Sendable () -> ();
  aBlock[3] = &block_descriptor_58;
  v12 = _Block_copy(aBlock);
  v13 = a1;
  swift_retain();
  static DispatchQoS.unspecified.getter();
  v18 = MEMORY[0x1E0DEE9D8];
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, v3);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  MEMORY[0x1C3B7361C](0, v8, v5, v12);
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v17 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v16);
  swift_release();
  return swift_release();
}

uint64_t closure #1 in closure #1 in CallRecordingViewModel.handleCountdownValue(_:)(uint64_t result)
{
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;

  if (result)
  {
    if (one-time initialization token for recordingSession != -1)
      swift_once();
    v1 = type metadata accessor for Logger();
    __swift_project_value_buffer(v1, (uint64_t)&static Logger.recordingSession);
    v2 = Logger.logObject.getter();
    v3 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v2, v3))
    {
      v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v4 = 0;
      _os_log_impl(&dword_1BD004000, v2, v3, "Handling error: start recording failed", v4, 2u);
      MEMORY[0x1C3B751B8](v4, -1, -1);
    }

    swift_beginAccess();
    result = swift_weakLoadStrong();
    if (result)
    {
      v5 = result;
      swift_beginAccess();
      *(_DWORD *)(v5 + 120) = 0;
      *(_BYTE *)(v5 + 124) = 1;
      CallRecordingViewModel.update()();
      return swift_release();
    }
  }
  return result;
}

uint64_t CallRecordingViewModel.timeIntervalSinceRecordingStartedDate.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  v1 = MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v28 - v4;
  v6 = type metadata accessor for Date();
  v31 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x1E0C80A78](v6);
  v30 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v29 = (char *)&v28 - v9;
  v10 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v11 = objc_msgSend(v10, sel_currentCalls);

  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUCall);
  v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v12 >> 62))
  {
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v13)
      goto LABEL_3;
LABEL_10:
    swift_bridgeObjectRelease_n();
LABEL_11:
    __swift_storeEnumTagSinglePayload((uint64_t)v5, 1, 1, v6);
    goto LABEL_12;
  }
LABEL_20:
  swift_bridgeObjectRetain();
  v13 = _CocoaArrayWrapper.endIndex.getter();
  if (!v13)
    goto LABEL_10;
LABEL_3:
  v14 = 4;
  while (1)
  {
    if ((v12 & 0xC000000000000001) != 0)
      v15 = (id)MEMORY[0x1C3B73D18](v14 - 4, v12);
    else
      v15 = *(id *)(v12 + 8 * v14);
    v16 = v15;
    v17 = v14 - 3;
    if (__OFADD__(v14 - 4, 1))
    {
      __break(1u);
      goto LABEL_20;
    }
    if (objc_msgSend(v15, sel_isRecording))
      break;

    ++v14;
    if (v17 == v13)
      goto LABEL_10;
  }
  swift_bridgeObjectRelease_n();
  v19 = objc_msgSend(v16, sel_recordingSession);

  if (!v19)
    goto LABEL_11;
  v20 = objc_msgSend(v19, sel_recordingStartedDate);

  if (v20)
  {
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    v21 = 0;
  }
  else
  {
    v21 = 1;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v3, v21, 1, v6);
  outlined init with take of Date?((uint64_t)v3, (uint64_t)v5);
  if (__swift_getEnumTagSinglePayload((uint64_t)v5, 1, v6) != 1)
  {
    v22 = v31;
    v23 = v29;
    (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v29, v5, v6);
    v24 = v30;
    static Date.now.getter();
    Date.timeIntervalSince(_:)();
    v26 = v25;
    v27 = *(void (**)(char *, uint64_t))(v22 + 8);
    v27(v24, v6);
    v27(v23, v6);
    return v26;
  }
LABEL_12:
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v5, (uint64_t *)&demangling cache variable for type metadata for Date?);
  return 0;
}

uint64_t CallRecordingViewModel.updateStopwatch()()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  *(double *)&result = COERCE_DOUBLE(CallRecordingViewModel.timeIntervalSinceRecordingStartedDate.getter());
  if ((v2 & 1) == 0)
  {
    if ((~result & 0x7FF0000000000000) != 0)
    {
      if (*(double *)&result > -9.22337204e18)
      {
        if (*(double *)&result < 9.22337204e18)
        {
          *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit22CallRecordingViewModel_stopwatchValue) = (uint64_t)*(double *)&result;
          swift_beginAccess();
          *(double *)&result = COERCE_DOUBLE(MEMORY[0x1C3B752C0](v0 + 104));
          if (*(double *)&result != 0.0)
          {
            v3 = *(_QWORD *)(v0 + 112);
            swift_getObjectType();
            v4 = CallRecordingViewModel.stopwatchFormattedValue.getter();
            (*(void (**)(uint64_t))(v3 + 8))(v4);
            swift_bridgeObjectRelease();
            *(double *)&result = COERCE_DOUBLE(swift_unknownObjectRelease());
          }
          return result;
        }
LABEL_10:
        __break(1u);
        return result;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_10;
  }
  return result;
}

uint64_t closure #1 in CallRecordingViewModel.startStopwatch()()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    CallRecordingViewModel.updateStopwatch()();
    return swift_release();
  }
  return result;
}

void CallRecordingViewModel.openNotes()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint8_t *v36;
  Swift::String v37;
  id v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  void *v48;
  id v49;
  NSURL *v50;
  void *v51;
  void *v52;
  unsigned int v53;
  id v54;
  NSURL *v55;
  void *v56;
  void *v57;
  NSObject *v58;
  os_log_type_t v59;
  uint8_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint8_t *v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69[3];

  v1 = v0;
  v2 = type metadata accessor for UUID();
  v61 = *(_QWORD *)(v2 - 8);
  v62 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v61 - v9;
  v11 = type metadata accessor for URL();
  v63 = *(uint8_t **)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for recordingSession != -1)
    swift_once();
  v14 = type metadata accessor for Logger();
  __swift_project_value_buffer(v14, (uint64_t)&static Logger.recordingSession);
  v15 = Logger.logObject.getter();
  v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v17 = 0;
    _os_log_impl(&dword_1BD004000, v15, v16, "Open notes", v17, 2u);
    MEMORY[0x1C3B751B8](v17, -1, -1);
  }

  v18 = CallRecordingViewModel.activeCall.getter((SEL *)&selRef_isRecording);
  if (v18
    && (v19 = v18,
        v20 = objc_msgSend(v18, sel_recordingSession),
        v19,
        v20))
  {
    swift_beginAccess();
    outlined init with copy of IDSLookupManager(v1 + 32, (uint64_t)&v65);
    v21 = v67;
    v22 = v68;
    __swift_project_boxed_opaque_existential_1(&v65, v67);
    (*(void (**)(id, uint64_t, uint64_t))(v22 + 24))(v20, v21, v22);
    if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11) == 1)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v10, &demangling cache variable for type metadata for URL?);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v65);
      goto LABEL_15;
    }
    v36 = v63;
    (*((void (**)(char *, char *, uint64_t))v63 + 4))(v13, v10, v11);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v65);
    v37._countAndFlagsBits = URL.absoluteString.getter();
    v65 = 0x656C69626F6DLL;
    v66 = 0xE600000000000000;
    String.append(_:)(v37);
    swift_bridgeObjectRelease();
    URL.init(string:)();
    swift_bridgeObjectRelease();
    if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v11) == 1)
    {
      (*((void (**)(char *, uint64_t))v36 + 1))(v13, v11);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v8, &demangling cache variable for type metadata for URL?);
LABEL_15:
      v38 = v20;
      v39 = Logger.logObject.getter();
      v40 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v39, v40))
      {
        v41 = (uint8_t *)swift_slowAlloc();
        v42 = swift_slowAlloc();
        v65 = v42;
        *(_DWORD *)v41 = 136315138;
        v63 = v41 + 4;
        v43 = objc_msgSend(v38, sel_UUID);
        static UUID._unconditionallyBridgeFromObjectiveC(_:)();

        lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
        v44 = v62;
        v45 = dispatch thunk of CustomStringConvertible.description.getter();
        v47 = v46;
        (*(void (**)(char *, uint64_t))(v61 + 8))(v4, v44);
        v64 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v45, v47, &v65);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BD004000, v39, v40, "Attempting to open notes. Url for recording session %s is nil.", v41, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3B751B8](v42, -1, -1);
        MEMORY[0x1C3B751B8](v41, -1, -1);

      }
      else
      {

      }
      return;
    }
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v8, &demangling cache variable for type metadata for URL?);
    v48 = (void *)objc_opt_self();
    v49 = objc_msgSend(v48, sel_sharedApplication);
    URL._bridgeToObjectiveC()(v50);
    v52 = v51;
    v53 = objc_msgSend(v49, sel_canOpenURL_, v51);

    if (v53)
    {
      v54 = objc_msgSend(v48, sel_sharedApplication);
      URL._bridgeToObjectiveC()(v55);
      v57 = v56;
      objc_msgSend(v54, sel_openURL_withCompletionHandler_, v56, 0);

    }
    else
    {
      v58 = Logger.logObject.getter();
      v59 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v58, v59))
      {
        v60 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v60 = 0;
        _os_log_impl(&dword_1BD004000, v58, v59, "Cannot open url", v60, 2u);
        MEMORY[0x1C3B751B8](v60, -1, -1);
      }

    }
    (*((void (**)(char *, uint64_t))v63 + 1))(v13, v11);
  }
  else
  {
    swift_retain_n();
    v23 = Logger.logObject.getter();
    v24 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      v26 = swift_slowAlloc();
      v69[0] = v26;
      *(_DWORD *)v25 = 136315138;
      v27 = CallRecordingViewModel.activeCall.getter((SEL *)&selRef_isRecording);
      if (v27)
      {
        v28 = v27;
        v29 = objc_msgSend(v27, sel_callUUID);

        v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        v32 = v31;

        v65 = v30;
        v66 = v32;
        v33 = String.init<A>(reflecting:)();
        v35 = v34;
      }
      else
      {
        v35 = 0xE300000000000000;
        v33 = 7104878;
      }
      v65 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v33, v35, v69);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD004000, v23, v24, "Attempting to open notes. Not recording session for recordedCall %s.", v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v26, -1, -1);
      MEMORY[0x1C3B751B8](v25, -1, -1);

    }
    else
    {

      swift_release_n();
    }
  }
}

void *CallRecordingViewModel.activeCall.getter(SEL *a1)
{
  id v2;
  id v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;

  v2 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v3 = objc_msgSend(v2, sel_currentCalls);

  OUTLINED_FUNCTION_59(v4, (unint64_t *)&lazy cache variable for type metadata for TUCall);
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v5 >> 62)
    goto LABEL_14;
  v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; v6 = _CocoaArrayWrapper.endIndex.getter())
  {
    v7 = 4;
    while (1)
    {
      v8 = (v5 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C3B73D18](v7 - 4, v5) : *(id *)(v5 + 8 * v7);
      v9 = v8;
      v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1))
        break;
      if (objc_msgSend(v8, *a1))
      {
        OUTLINED_FUNCTION_39_2();
        return v9;
      }

      ++v7;
      if (v10 == v6)
        goto LABEL_10;
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
  }
LABEL_10:
  OUTLINED_FUNCTION_39_2();
  return 0;
}

void *CallRecordingViewModel.waveformViewModel.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR____TtC15ConversationKit22CallRecordingViewModel_waveformViewModel);
  OUTLINED_FUNCTION_2_0();
  v2 = *v1;
  v3 = v2;
  return v2;
}

void CallRecordingViewModel.waveformViewModel.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;

  v3 = (void **)(v1 + OBJC_IVAR____TtC15ConversationKit22CallRecordingViewModel_waveformViewModel);
  OUTLINED_FUNCTION_2_0();
  v4 = *v3;
  *v3 = a1;

  OUTLINED_FUNCTION_32();
}

void CallRecordingViewModel.waveformViewModel.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t closure #1 in CallRecordingViewModel.observeAudioSpectrum()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[16] = a4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  v4[17] = swift_task_alloc();
  v5 = type metadata accessor for NSRunLoop.SchedulerTimeType.Stride();
  v4[18] = v5;
  v4[19] = *(_QWORD *)(v5 - 8);
  v4[20] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.Debounce<PassthroughSubject<(), Never>, NSRunLoop>);
  v4[21] = v6;
  v4[22] = *(_QWORD *)(v6 - 8);
  v4[23] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[Float]>.Publisher);
  v4[24] = v7;
  v4[25] = *(_QWORD *)(v7 - 8);
  v4[26] = swift_task_alloc();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.RemoveDuplicates<Published<[Float]>.Publisher>);
  v4[27] = v8;
  v4[28] = *(_QWORD *)(v8 - 8);
  v4[29] = swift_task_alloc();
  type metadata accessor for MainActor();
  v4[30] = static MainActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  return swift_task_switch();
}

uint64_t closure #1 in CallRecordingViewModel.observeAudioSpectrum()()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  void *v10;
  void **v11;
  void *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t (*v21)(void);
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v32)(uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  _QWORD *v42;

  swift_release();
  v1 = CallRecordingViewModel.activeCall.getter((SEL *)&selRef_isActive);
  if (v1)
  {
    v2 = v1;
    v3 = *(_QWORD *)(v0 + 128);
    v4 = (void *)objc_opt_self();
    v5 = v2;
    v6 = objc_msgSend(v4, sel_sharedInstance);
    v7 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
    v8 = objc_allocWithZone((Class)type metadata accessor for AudioPowerSpectrumViewModel());
    AudioPowerSpectrumViewModel.init(call:callCenter:notificationCenter:)();
    v10 = v9;
    v11 = (void **)(v3 + OBJC_IVAR____TtC15ConversationKit22CallRecordingViewModel_waveformViewModel);
    OUTLINED_FUNCTION_2_0();
    v12 = *v11;
    *v11 = v10;

    v13 = *v11;
    if (*v11)
    {
      v41 = v5;
      v14 = *(_QWORD *)(v0 + 232);
      v33 = *(_QWORD *)(v0 + 224);
      v16 = *(_QWORD *)(v0 + 208);
      v15 = *(_QWORD *)(v0 + 216);
      v18 = *(_QWORD *)(v0 + 192);
      v17 = *(_QWORD *)(v0 + 200);
      v36 = *(_QWORD *)(v0 + 184);
      v40 = *(_QWORD *)(v0 + 176);
      v37 = *(_QWORD *)(v0 + 152);
      v38 = *(_QWORD *)(v0 + 144);
      v39 = *(_QWORD *)(v0 + 168);
      v19 = *(_QWORD *)(v0 + 128);
      v34 = *(_QWORD *)(v0 + 160);
      v35 = *(_QWORD *)(v0 + 136);
      v20 = (_QWORD *)MEMORY[0x1E0DEEDD8];
      v21 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v13) + 0x230);
      v42 = v13;
      v22 = v21();
      (*(void (**)(uint64_t))((*v20 & *v42) + 0x108))(v22);
      lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Published<[Float]>.Publisher and conformance Published<A>.Publisher, &demangling cache variable for type metadata for Published<[Float]>.Publisher);
      lazy protocol witness table accessor for type [Float] and conformance <A> [A]();
      Publisher<>.removeDuplicates()();
      v32 = *(uint64_t (**)(uint64_t, uint64_t))(v17 + 8);
      OUTLINED_FUNCTION_101(v16, v32);
      OUTLINED_FUNCTION_7_0();
      swift_weakInit();
      lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.RemoveDuplicates<Published<[Float]>.Publisher> and conformance Publishers.RemoveDuplicates<A>, &demangling cache variable for type metadata for Publishers.RemoveDuplicates<Published<[Float]>.Publisher>);
      Publisher<>.sink(receiveValue:)();
      swift_release();
      v23 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
      v23(v14, v15);
      OUTLINED_FUNCTION_2_0();
      AnyCancellable.store(in:)();
      OUTLINED_FUNCTION_248();
      v24 = OUTLINED_FUNCTION_43();
      (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v42) + 0x138))(v24);
      Publisher<>.removeDuplicates()();
      v32(v16, v18);
      OUTLINED_FUNCTION_7_0();
      OUTLINED_FUNCTION_40_37();
      Publisher<>.sink(receiveValue:)();
      OUTLINED_FUNCTION_114_0();
      v25 = v14;
      v5 = v41;
      v23(v25, v15);
      OUTLINED_FUNCTION_2_0();
      AnyCancellable.store(in:)();
      OUTLINED_FUNCTION_248();
      OUTLINED_FUNCTION_43();
      *(_QWORD *)(v0 + 112) = *(_QWORD *)(v19 + 24);
      swift_retain();
      static NSRunLoop.SchedulerTimeType.Stride.milliseconds(_:)();
      *(_QWORD *)(v0 + 120) = objc_msgSend((id)objc_opt_self(), sel_mainRunLoop);
      v26 = OUTLINED_FUNCTION_38_43();
      OUTLINED_FUNCTION_77_0(v35, v27, v28, v26);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PassthroughSubject<(), Never>);
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSRunLoop);
      lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type PassthroughSubject<(), Never> and conformance PassthroughSubject<A, B>, &demangling cache variable for type metadata for PassthroughSubject<(), Never>);
      lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop();
      Publisher.debounce<A>(for:scheduler:options:)();
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v35, (uint64_t *)&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);

      (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v34, v38);
      swift_release();
      v29 = OUTLINED_FUNCTION_7_0();
      OUTLINED_FUNCTION_40_37();
      v30 = swift_allocObject();
      *(_QWORD *)(v30 + 16) = partial apply for closure #3 in closure #1 in CallRecordingViewModel.observeAudioSpectrum();
      *(_QWORD *)(v30 + 24) = v29;
      lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.Debounce<PassthroughSubject<(), Never>, NSRunLoop> and conformance Publishers.Debounce<A, B>, &demangling cache variable for type metadata for Publishers.Debounce<PassthroughSubject<(), Never>, NSRunLoop>);
      Publisher<>.sink(receiveValue:)();
      OUTLINED_FUNCTION_19();
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v36, v39);
      OUTLINED_FUNCTION_2_0();
      AnyCancellable.store(in:)();
      OUTLINED_FUNCTION_248();
      OUTLINED_FUNCTION_43();

    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void closure #1 in closure #1 in CallRecordingViewModel.observeAudioSpectrum()()
{
  OUTLINED_FUNCTION_2_0();
  if (swift_weakLoadStrong())
  {
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PassthroughSubject<(), Never>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(lazy protocol witness table cache variable for type PassthroughSubject<(), Never> and conformance PassthroughSubject<A, B>, &demangling cache variable for type metadata for PassthroughSubject<(), Never>);
    Subject<>.send()();
    OUTLINED_FUNCTION_19();
    OUTLINED_FUNCTION_43();
  }
  OUTLINED_FUNCTION_9_0();
}

uint64_t closure #3 in closure #1 in CallRecordingViewModel.observeAudioSpectrum()()
{
  uint64_t result;
  uint64_t v1;
  _DWORD *v2;
  _QWORD **v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t (*v6)(void);
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v10)(void);
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = result;
    v2 = (_DWORD *)(result + 120);
    swift_beginAccess();
    if ((*(_BYTE *)(v1 + 124) & 1) == 0 && *v2 == 3)
    {
      v3 = (_QWORD **)(v1 + OBJC_IVAR____TtC15ConversationKit22CallRecordingViewModel_waveformViewModel);
      swift_beginAccess();
      v4 = *v3;
      if (*v3)
      {
        v5 = (_QWORD *)MEMORY[0x1E0DEEDD8];
        v6 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v4) + 0x120);
        v7 = v4;
        v8 = v6();

        v9 = *v3;
        if (*v3)
        {
          v10 = *(uint64_t (**)(void))((*v5 & *v9) + 0xF0);
          v11 = v9;
          v12 = v10();

          swift_beginAccess();
          if (MEMORY[0x1C3B752C0](v1 + 104))
          {
            v13 = *(_QWORD *)(v1 + 112);
            ObjectType = swift_getObjectType();
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 16))(v8, v12, ObjectType, v13);
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return swift_unknownObjectRelease();
          }
          else
          {
            swift_release();
            swift_bridgeObjectRelease();
            return swift_bridgeObjectRelease();
          }
        }
        swift_bridgeObjectRelease();
      }
    }
    return swift_release();
  }
  return result;
}

void *CallRecordingViewModel.disclosingCall.getter()
{
  void *result;
  void *v1;
  id v2;
  unsigned int v3;

  result = CallRecordingViewModel.activeCall.getter((SEL *)&selRef_isActive);
  if (result)
  {
    v1 = result;
    v2 = objc_msgSend(result, sel_recordingSession);

    if (v2 && (v3 = objc_msgSend(v2, sel_recordingState), v2, v3 == 2))
      return CallRecordingViewModel.activeCall.getter((SEL *)&selRef_isActive);
    else
      return 0;
  }
  return result;
}

void closure #1 in CallRecordingViewModel.stopRecording()(uint64_t a1)
{
  uint64_t v1;
  os_log_type_t v2;
  uint8_t *v3;
  NSObject *oslog;

  if (a1)
  {
    if (one-time initialization token for recordingSession != -1)
      swift_once();
    v1 = type metadata accessor for Logger();
    __swift_project_value_buffer(v1, (uint64_t)&static Logger.recordingSession);
    oslog = Logger.logObject.getter();
    v2 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v2))
    {
      v3 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v3 = 0;
      _os_log_impl(&dword_1BD004000, oslog, v2, "Handling error: stop recording failed", v3, 2u);
      MEMORY[0x1C3B751B8](v3, -1, -1);
    }

  }
}

void CallRecordingViewModel.deinit()
{
  uint64_t v0;
  uint64_t v1;

  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_53_2();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  swift_release();
  outlined destroy of weak ConversationControlsCountdownJoinButtonDelegate?(v0 + 88);
  outlined destroy of weak ConversationControlsCountdownJoinButtonDelegate?(v0 + 104);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CallRecordingViewModel.PresentedView?>);
  OUTLINED_FUNCTION_17_1(v1);

  OUTLINED_FUNCTION_0();
}

uint64_t CallRecordingViewModel.__deallocating_deinit()
{
  CallRecordingViewModel.deinit();
  return swift_deallocClassInstance();
}

uint64_t protocol witness for CallRecordingViewModelProtocol.recordingState.getter in conformance CallRecordingViewModel()
{
  unint64_t v0;

  v0 = CallRecordingViewModel.recordingState.getter();
  return v0 | ((HIDWORD(v0) & 1) << 32);
}

void protocol witness for CallRecordingViewModelProtocol.recordingState.setter in conformance CallRecordingViewModel(unint64_t a1)
{
  CallRecordingViewModel.recordingState.setter(a1 | ((HIDWORD(a1) & 1) << 32));
}

void (*protocol witness for CallRecordingViewModelProtocol.recordingState.modify in conformance CallRecordingViewModel(uint64_t a1))()
{
  _QWORD *v1;

  *(_QWORD *)(a1 + 24) = *v1;
  swift_beginAccess();
  return CallRecordingViewModel.recordingState.modify;
}

void protocol witness for CallRecordingViewModelProtocol.startCountdown() in conformance CallRecordingViewModel()
{
  CallRecordingViewModel.startCountdown()();
}

void protocol witness for CallRecordingViewModelProtocol.startStopwatch() in conformance CallRecordingViewModel()
{
  CallRecordingViewModel.startStopwatch()();
}

void protocol witness for CallRecordingViewModelProtocol.observeCountdownNotifications() in conformance CallRecordingViewModel()
{
  CallRecordingViewModel.observeCountdownNotifications()();
}

void protocol witness for CallRecordingViewModelProtocol.observeRecordingStateNotifications() in conformance CallRecordingViewModel()
{
  CallRecordingViewModel.observeRecordingStateNotifications()();
}

Swift::Void __swiftcall CallRecordingViewModel.tapClose()()
{
  CallRecordingViewModel.tapClose()("Tapped close pre-recording", (uint64_t (*)(void))CallRecordingViewModel.reset());
}

Swift::Void __swiftcall CallRecordingViewModel.tapStopRecording()()
{
  CallRecordingViewModel.tapClose()("Tapped stop recording", (uint64_t (*)(void))CallRecordingViewModel.reset());
}

Swift::Void __swiftcall CallRecordingViewModel.tapContainer()()
{
  CallRecordingViewModel.tapClose()("Tapped recording", (uint64_t (*)(void))CallRecordingViewModel.openNotes());
}

uint64_t CallRecordingViewModel.tapClose()(const char *a1, uint64_t (*a2)(void))
{
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v5;
  os_log_type_t v6;

  if (one-time initialization token for recordingSession != -1)
    swift_once();
  v5 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v5, (uint64_t)&static Logger.recordingSession);
  OUTLINED_FUNCTION_11_17();
  v6 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_51_3(v6))
  {
    *(_WORD *)OUTLINED_FUNCTION_7_8() = 0;
    OUTLINED_FUNCTION_2_29(&dword_1BD004000, v2, v3, a1);
    OUTLINED_FUNCTION_60();
  }

  return a2();
}

uint64_t @objc CallRecordingViewModel.tapStopRecording()(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v4;

  v4 = swift_retain();
  a3(v4);
  return swift_release();
}

uint64_t specialized CallRecordingViewModel.__allocating_init(service:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v7 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, a3);
  v11 = specialized CallRecordingViewModel.init(service:)((uint64_t)v9, v10, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, a3);
  return v11;
}

void sub_1BD311A30(_BYTE *a1@<X8>)
{
  *a1 = CallRecordingViewModel.presentedView.getter();
  OUTLINED_FUNCTION_0();
}

void sub_1BD311A54()
{
  CallRecordingViewModel.presentedView.setter();
  OUTLINED_FUNCTION_0();
}

uint64_t specialized CallRecordingViewModel.init(service:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t *boxed_opaque_existential_1;
  char v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  _BYTE v19[24];
  uint64_t v20[5];

  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CallRecordingViewModel.PresentedView?>);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = &v19[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v20[3] = a3;
  v20[4] = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v20);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(boxed_opaque_existential_1, a1, a3);
  *(_QWORD *)(a2 + 16) = MEMORY[0x1E0DEE9E8];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PassthroughSubject<(), Never>);
  swift_allocObject();
  *(_QWORD *)(a2 + 24) = PassthroughSubject.init()();
  *(_OWORD *)(a2 + 72) = xmmword_1BD6441E0;
  *(_QWORD *)(a2 + 96) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(a2 + 112) = 0;
  swift_unknownObjectWeakInit();
  *(_DWORD *)(a2 + 120) = 0;
  v13 = 1;
  *(_BYTE *)(a2 + 124) = 1;
  v14 = a2 + OBJC_IVAR____TtC15ConversationKit22CallRecordingViewModel__presentedView;
  v19[0] = 3;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CallRecordingViewModel.PresentedView?);
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v9 + 32))(v14, v11, v8);
  *(_QWORD *)(a2 + OBJC_IVAR____TtC15ConversationKit22CallRecordingViewModel_stopwatchValue) = 0;
  *(_QWORD *)(a2 + OBJC_IVAR____TtC15ConversationKit22CallRecordingViewModel_waveformViewModel) = 0;
  outlined init with copy of IDSLookupManager((uint64_t)v20, a2 + 32);
  CallRecordingViewModel.observeCountdownNotifications()();
  CallRecordingViewModel.observeRecordingStateNotifications()();
  v15 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v16 = objc_msgSend(v15, sel_frontmostCall);

  if (v16)
  {
    v17 = objc_msgSend(v16, sel_recordingSession);

    if (v17)
    {
      LODWORD(v16) = objc_msgSend(v17, sel_recordingState);

      v13 = 0;
    }
    else
    {
      LODWORD(v16) = 0;
    }
  }
  swift_beginAccess();
  *(_DWORD *)(a2 + 120) = (_DWORD)v16;
  *(_BYTE *)(a2 + 124) = v13;
  CallRecordingViewModel.update()();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  return a2;
}

uint64_t sub_1BD311CB4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in CallRecordingViewModel.observeCountdownNotifications()()
{
  return closure #1 in CallRecordingViewModel.observeCountdownNotifications()();
}

void partial apply for closure #1 in CallRecordingViewModel.observeRecordingStateNotifications()()
{
  closure #1 in CallRecordingViewModel.observeRecordingStateNotifications()();
}

uint64_t partial apply for closure #1 in CallRecordingViewModel.startStopwatch()()
{
  return closure #1 in CallRecordingViewModel.startStopwatch()();
}

uint64_t partial apply for closure #1 in CallRecordingViewModel.reset()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_174();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_7_11(v1);
  return closure #1 in CallRecordingViewModel.reset()(v2, v3, v4, v5);
}

uint64_t partial apply for closure #1 in CallRecordingViewModel.startCountdown()()
{
  return closure #1 in CallRecordingViewModel.startCountdown()();
}

unint64_t lazy protocol witness table accessor for type CallRecordingViewModel.PresentedView and conformance CallRecordingViewModel.PresentedView()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type CallRecordingViewModel.PresentedView and conformance CallRecordingViewModel.PresentedView;
  if (!lazy protocol witness table cache variable for type CallRecordingViewModel.PresentedView and conformance CallRecordingViewModel.PresentedView)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for CallRecordingViewModel.PresentedView, &type metadata for CallRecordingViewModel.PresentedView);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CallRecordingViewModel.PresentedView and conformance CallRecordingViewModel.PresentedView);
  }
  return result;
}

void sub_1BD311DA4()
{
  CallRecordingViewModel.$presentedView.getter();
  OUTLINED_FUNCTION_0();
}

uint64_t ObjC metadata update function for CallRecordingViewModel()
{
  return type metadata accessor for CallRecordingViewModel();
}

uint64_t type metadata accessor for CallRecordingViewModel()
{
  uint64_t result;

  result = type metadata singleton initialization cache for CallRecordingViewModel;
  if (!type metadata singleton initialization cache for CallRecordingViewModel)
    return swift_getSingletonMetadata();
  return result;
}

void type metadata completion function for CallRecordingViewModel()
{
  unint64_t v0;

  type metadata accessor for Published<CallRecordingViewModel.PresentedView?>();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for CallRecordingViewModel()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CallRecordingViewModel.__allocating_init(service:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

void type metadata accessor for Published<CallRecordingViewModel.PresentedView?>()
{
  unint64_t v0;
  uint64_t v1;

  if (!lazy cache variable for type metadata for Published<CallRecordingViewModel.PresentedView?>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for CallRecordingViewModel.PresentedView?);
    v0 = type metadata accessor for Published();
    if (!v1)
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Published<CallRecordingViewModel.PresentedView?>);
  }
}

uint64_t storeEnumTagSinglePayload for CallRecordingViewModel.PresentedView(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BD311F84 + 4 * byte_1BD657DF5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BD311FB8 + 4 * asc_1BD657DF0[v4]))();
}

uint64_t sub_1BD311FB8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD311FC0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD311FC8);
  return result;
}

uint64_t sub_1BD311FD4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD311FDCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BD311FE0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD311FE8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CallRecordingViewModel.PresentedView()
{
  return &type metadata for CallRecordingViewModel.PresentedView;
}

uint64_t partial apply for closure #1 in closure #1 in CallRecordingViewModel.startCountdown()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_174();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_7_11(v1);
  return closure #1 in closure #1 in CallRecordingViewModel.startCountdown()(v2, v3, v4, v5);
}

uint64_t partial apply for closure #1 in CallRecordingViewModel.handleCountdownValue(_:)(void *a1)
{
  return closure #1 in CallRecordingViewModel.handleCountdownValue(_:)(a1);
}

uint64_t sub_1BD312060()
{
  uint64_t v0;

  OUTLINED_FUNCTION_53_2();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in CallRecordingViewModel.handleCountdownValue(_:)()
{
  uint64_t v0;

  return closure #1 in closure #1 in CallRecordingViewModel.handleCountdownValue(_:)(*(_QWORD *)(v0 + 16));
}

uint64_t partial apply for closure #1 in CallRecordingViewModel.observeAudioSpectrum()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_174();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_7_11(v1);
  return closure #1 in CallRecordingViewModel.observeAudioSpectrum()(v2, v3, v4, v5);
}

void partial apply for closure #1 in closure #1 in CallRecordingViewModel.observeAudioSpectrum()()
{
  closure #1 in closure #1 in CallRecordingViewModel.observeAudioSpectrum()();
}

uint64_t partial apply for closure #3 in closure #1 in CallRecordingViewModel.observeAudioSpectrum()()
{
  return closure #3 in closure #1 in CallRecordingViewModel.observeAudioSpectrum()();
}

uint64_t sub_1BD312104()
{
  OUTLINED_FUNCTION_53_2();
  return swift_deallocObject();
}

BOOL CameraEffectState.isSupported.getter()
{
  unsigned __int8 *v0;

  return *v0 != 2;
}

uint64_t CameraEffectState.isEnabled.getter()
{
  _BYTE *v0;

  return *v0 & 1;
}

void CameraEffectState.init(isSupported:isEnabled:)(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_44_1(a1);
}

void CameraEffectState.hash(into:)()
{
  _BYTE *v0;

  if (*v0 == 2)
  {
    OUTLINED_FUNCTION_0_118();
  }
  else
  {
    OUTLINED_FUNCTION_2_100();
    OUTLINED_FUNCTION_1_117();
  }
}

uint64_t static CameraEffectState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  char v3;
  int v4;

  v2 = *a1;
  v3 = v2 == 2;
  v4 = *a2;
  if (v4 != 2)
    v3 = 0;
  if (v2 != 2 && v4 != 2)
    v3 = ((v2 & 1) == 0) ^ v4;
  return v3 & 1;
}

Swift::Int CameraEffectState.hashValue.getter()
{
  unsigned __int8 *v0;
  int v1;

  v1 = *v0;
  OUTLINED_FUNCTION_5_1();
  if (v1 == 2)
  {
    OUTLINED_FUNCTION_0_118();
  }
  else
  {
    OUTLINED_FUNCTION_2_100();
    OUTLINED_FUNCTION_1_117();
  }
  return Hasher._finalize()();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance CameraEffectState()
{
  unsigned __int8 *v0;
  int v1;

  v1 = *v0;
  Hasher.init(_seed:)();
  if (v1 == 2)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Hasher._combine(_:)(1uLL);
    Hasher._combine(_:)(v1 & 1);
  }
  return Hasher._finalize()();
}

void LocalParticipantCameraEffectsState.cinematicFramingEffectState.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_44_1(a1);
}

_BYTE *LocalParticipantCameraEffectsState.cinematicFramingEffectState.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*LocalParticipantCameraEffectsState.cinematicFramingEffectState.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void LocalParticipantCameraEffectsState.cameraBlurEffectState.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_44_1(a1);
}

_BYTE *LocalParticipantCameraEffectsState.cameraBlurEffectState.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = *result;
  return result;
}

uint64_t (*LocalParticipantCameraEffectsState.cameraBlurEffectState.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void LocalParticipantCameraEffectsState.studioLightEffectState.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_44_1(a1);
}

_BYTE *LocalParticipantCameraEffectsState.studioLightEffectState.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 2) = *result;
  return result;
}

uint64_t (*LocalParticipantCameraEffectsState.studioLightEffectState.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void LocalParticipantCameraEffectsState.reactionsEffectState.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_44_1(a1);
}

_BYTE *LocalParticipantCameraEffectsState.reactionsEffectState.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 3) = *result;
  return result;
}

uint64_t (*LocalParticipantCameraEffectsState.reactionsEffectState.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void LocalParticipantCameraEffectsState.hash(into:)()
{
  _BYTE *v0;
  int v1;
  int v2;
  int v3;

  v1 = v0[1];
  v2 = v0[2];
  v3 = v0[3];
  if (*v0 == 2)
  {
    OUTLINED_FUNCTION_0_118();
  }
  else
  {
    OUTLINED_FUNCTION_2_100();
    OUTLINED_FUNCTION_1_117();
  }
  if (v1 == 2)
  {
    OUTLINED_FUNCTION_0_118();
  }
  else
  {
    OUTLINED_FUNCTION_2_100();
    OUTLINED_FUNCTION_1_117();
  }
  if (v2 == 2)
  {
    OUTLINED_FUNCTION_0_118();
  }
  else
  {
    OUTLINED_FUNCTION_2_100();
    OUTLINED_FUNCTION_1_117();
  }
  if (v3 == 2)
  {
    OUTLINED_FUNCTION_0_118();
  }
  else
  {
    OUTLINED_FUNCTION_2_100();
    OUTLINED_FUNCTION_1_117();
  }
}

uint64_t static LocalParticipantCameraEffectsState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  uint64_t result;
  _BOOL4 v11;
  _BOOL4 v12;
  _BOOL4 v13;
  _BOOL4 v14;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = *a2;
  v7 = a2[1];
  v8 = a2[2];
  v9 = a2[3];
  if (v2 == 2)
  {
    if (v6 != 2)
      return 0;
  }
  else
  {
    result = 0;
    v11 = (v2 & 1) == 0;
    if (v6 == 2 || ((v11 ^ v6) & 1) == 0)
      return result;
  }
  if (v3 == 2)
  {
    if (v7 != 2)
      return 0;
  }
  else
  {
    result = 0;
    v12 = (v3 & 1) == 0;
    if (v7 == 2 || ((v12 ^ v7) & 1) == 0)
      return result;
  }
  if (v4 == 2)
  {
    if (v8 != 2)
      return 0;
LABEL_16:
    if (v5 == 2)
    {
      if (v9 != 2)
        return 0;
    }
    else
    {
      v14 = (v5 & 1) == 0;
      if (v9 == 2 || ((v14 ^ v9) & 1) == 0)
        return 0;
    }
    return 1;
  }
  result = 0;
  v13 = (v4 & 1) == 0;
  if (v8 != 2 && ((v13 ^ v8) & 1) != 0)
    goto LABEL_16;
  return result;
}

Swift::Int LocalParticipantCameraEffectsState.hashValue.getter()
{
  unsigned __int8 *v0;
  int v1;
  int v2;
  int v3;
  int v4;

  v1 = *v0;
  v2 = v0[1];
  v3 = v0[2];
  v4 = v0[3];
  OUTLINED_FUNCTION_5_1();
  if (v1 == 2)
  {
    OUTLINED_FUNCTION_0_118();
  }
  else
  {
    OUTLINED_FUNCTION_2_100();
    OUTLINED_FUNCTION_1_117();
  }
  if (v2 == 2)
  {
    OUTLINED_FUNCTION_0_118();
  }
  else
  {
    OUTLINED_FUNCTION_2_100();
    OUTLINED_FUNCTION_1_117();
  }
  if (v3 == 2)
  {
    OUTLINED_FUNCTION_0_118();
  }
  else
  {
    OUTLINED_FUNCTION_2_100();
    OUTLINED_FUNCTION_1_117();
  }
  if (v4 == 2)
  {
    OUTLINED_FUNCTION_0_118();
  }
  else
  {
    OUTLINED_FUNCTION_2_100();
    OUTLINED_FUNCTION_1_117();
  }
  return Hasher._finalize()();
}

_BYTE *LocalParticipantCameraEffectsState.init(cinematicFramingEffectState:cameraBlurEffectState:studioLightEffectState:reactionsEffectState:)@<X0>(_BYTE *result@<X0>, char *a2@<X1>, char *a3@<X2>, char *a4@<X3>, _BYTE *a5@<X8>)
{
  char v5;
  char v6;
  char v7;

  v5 = *a2;
  v6 = *a3;
  v7 = *a4;
  *a5 = *result;
  a5[1] = v5;
  a5[2] = v6;
  a5[3] = v7;
  return result;
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance LocalParticipantCameraEffectsState()
{
  unsigned __int8 *v0;
  int v1;
  int v2;
  int v3;
  int v4;

  v1 = *v0;
  v2 = v0[1];
  v3 = v0[2];
  v4 = v0[3];
  Hasher.init(_seed:)();
  if (v1 == 2)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Hasher._combine(_:)(1uLL);
    Hasher._combine(_:)(v1 & 1);
  }
  if (v2 == 2)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Hasher._combine(_:)(1uLL);
    Hasher._combine(_:)(v2 & 1);
  }
  if (v3 == 2)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Hasher._combine(_:)(1uLL);
    Hasher._combine(_:)(v3 & 1);
  }
  if (v4 == 2)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Hasher._combine(_:)(1uLL);
    Hasher._combine(_:)(v4 & 1);
  }
  return Hasher._finalize()();
}

unint64_t lazy protocol witness table accessor for type CameraEffectState and conformance CameraEffectState()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type CameraEffectState and conformance CameraEffectState;
  if (!lazy protocol witness table cache variable for type CameraEffectState and conformance CameraEffectState)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for CameraEffectState, &type metadata for CameraEffectState);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CameraEffectState and conformance CameraEffectState);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for CameraEffectState(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  BOOL v7;
  unsigned int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
  {
    v6 = *a1;
    v7 = v6 >= 2;
    v8 = (v6 + 2147483646) & 0x7FFFFFFF;
    if (!v7)
      v8 = -1;
    if (v8 + 1 >= 2)
      return v8;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 2;
    if (a2 + 2 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1BD312790 + 4 * asc_1BD658010[v4]))();
  }
}

uint64_t storeEnumTagSinglePayload for CameraEffectState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 2;
  if (a3 + 2 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFE)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BD312848 + 4 * byte_1BD65801A[v5]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BD31287C + 4 * byte_1BD658015[v5]))();
}

uint64_t sub_1BD31287C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD312884(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD31288CLL);
  return result;
}

uint64_t sub_1BD312898(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD3128A0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BD3128A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD3128AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *destructiveInjectEnumTag for CameraEffectState(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 1;
  return result;
}

ValueMetadata *type metadata accessor for CameraEffectState()
{
  return &type metadata for CameraEffectState;
}

_DWORD *__swift_memcpy4_1(_DWORD *result, _DWORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for LocalParticipantCameraEffectsState(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFE && a1[4])
    {
      v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      v3 = *a1;
      if (v3 >= 2)
        v2 = ((v3 + 2147483646) & 0x7FFFFFFF) - 1;
      else
        v2 = -2;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LocalParticipantCameraEffectsState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_DWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 4) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 4) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for LocalParticipantCameraEffectsState()
{
  return &type metadata for LocalParticipantCameraEffectsState;
}

uint64_t key path getter for DisplayLayerVisibilityObserver.isHidingLayersFromClonedDisplay : DisplayLayerVisibilityObserver@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 96))();
  *a2 = result & 1;
  return result;
}

uint64_t key path setter for DisplayLayerVisibilityObserver.isHidingLayersFromClonedDisplay : DisplayLayerVisibilityObserver()
{
  return DisplayLayerVisibilityObserver.isHidingLayersFromClonedDisplay.setter();
}

uint64_t DisplayLayerVisibilityObserver.isHidingLayersFromClonedDisplay.getter()
{
  unsigned __int8 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

void sub_1BD312A5C(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  *a2 = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 96))() & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD312A8C()
{
  DisplayLayerVisibilityObserver.isHidingLayersFromClonedDisplay.setter();
  OUTLINED_FUNCTION_0();
}

uint64_t DisplayLayerVisibilityObserver.isHidingLayersFromClonedDisplay.setter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return static Published.subscript.setter();
}

uint64_t key path setter for DisplayLayerVisibilityObserver.$isHidingLayersFromClonedDisplay : DisplayLayerVisibilityObserver(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  return DisplayLayerVisibilityObserver.$isHidingLayersFromClonedDisplay.setter((uint64_t)v4);
}

uint64_t DisplayLayerVisibilityObserver.$isHidingLayersFromClonedDisplay.getter()
{
  OUTLINED_FUNCTION_5_32();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  Published.projectedValue.getter();
  return swift_endAccess();
}

uint64_t DisplayLayerVisibilityObserver.$isHidingLayersFromClonedDisplay.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_77();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v5 - v4, a1, v2);
  OUTLINED_FUNCTION_5_32();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  Published.projectedValue.setter();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

void DisplayLayerVisibilityObserver.__allocating_init()()
{
  swift_allocObject();
  DisplayLayerVisibilityObserver.init()();
  OUTLINED_FUNCTION_0();
}

uint64_t DisplayLayerVisibilityObserver.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_77();
  v5 = v4 - v3;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.Map<DarwinNotification, Bool>);
  v20 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_77();
  v9 = v8 - v7;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.HandleEvents<Publishers.Map<DarwinNotification, Bool>>);
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  OUTLINED_FUNCTION_77();
  v12 = v11 - v10;
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_77();
  v17 = v16 - v15;
  v18 = v1 + OBJC_IVAR____TtC15ConversationKit30DisplayLayerVisibilityObserver__isHidingLayersFromClonedDisplay;
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(v18, v17, v13);
  type metadata accessor for OS_dispatch_queue();
  static OS_dispatch_queue.main.getter();
  type metadata accessor for DarwinNotification();
  swift_allocObject();
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit30DisplayLayerVisibilityObserver_disallowedLayersChangedNotification) = DarwinNotification.init(name:queue:)();
  lazy protocol witness table accessor for type DarwinNotification and conformance DarwinNotification();
  swift_retain();
  Publisher.map<A>(_:)();
  swift_release();
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type Publishers.Map<DarwinNotification, Bool> and conformance Publishers.Map<A, B>, &demangling cache variable for type metadata for Publishers.Map<DarwinNotification, Bool>, MEMORY[0x1E0C95950]);
  Publisher.handleEvents(receiveSubscription:receiveOutput:receiveCompletion:receiveCancel:receiveRequest:)();
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v9, v6);
  OUTLINED_FUNCTION_5_32();
  Published.projectedValue.getter();
  swift_endAccess();
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type Publishers.HandleEvents<Publishers.Map<DarwinNotification, Bool>> and conformance Publishers.HandleEvents<A>, &demangling cache variable for type metadata for Publishers.HandleEvents<Publishers.Map<DarwinNotification, Bool>>, MEMORY[0x1E0C957C0]);
  Publisher<>.assign(to:)();
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v12, v21);
  DisplayLayerVisibilityObserver.$isHidingLayersFromClonedDisplay.setter(v5);
  return v1;
}

_QWORD *closure #1 in DisplayLayerVisibilityObserver.init()@<X0>(_QWORD *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result == 1;
  return result;
}

unint64_t lazy protocol witness table accessor for type DarwinNotification and conformance DarwinNotification()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type DarwinNotification and conformance DarwinNotification;
  if (!lazy protocol witness table cache variable for type DarwinNotification and conformance DarwinNotification)
  {
    v1 = type metadata accessor for DarwinNotification();
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0D14CA8], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type DarwinNotification and conformance DarwinNotification);
  }
  return result;
}

void closure #2 in DisplayLayerVisibilityObserver.init()()
{
  uint64_t v0;
  os_log_type_t v1;
  uint8_t *v2;
  NSObject *oslog;

  if (one-time initialization token for screenSharing != -1)
    swift_once();
  v0 = type metadata accessor for Logger();
  __swift_project_value_buffer(v0, (uint64_t)&static Log.screenSharing);
  oslog = Logger.logObject.getter();
  v1 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(oslog, v1))
  {
    v2 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v2 = 67109120;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl(&dword_1BD004000, oslog, v1, "Display contains layers inhibited from cloning: %{BOOL}d", v2, 8u);
    MEMORY[0x1C3B751B8](v2, -1, -1);
  }

}

void DisplayLayerVisibilityObserver.deinit()
{
  uint64_t v0;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  OUTLINED_FUNCTION_17_1(v0);
  swift_release();
  OUTLINED_FUNCTION_0();
}

uint64_t DisplayLayerVisibilityObserver.__deallocating_deinit()
{
  uint64_t v0;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  OUTLINED_FUNCTION_17_1(v0);
  swift_release();
  return swift_deallocClassInstance();
}

void sub_1BD3131C8(uint64_t a1)
{
  (*(void (**)(void))(**(_QWORD **)a1 + 120))();
  OUTLINED_FUNCTION_0();
}

uint64_t ObjC metadata update function for DisplayLayerVisibilityObserver()
{
  return type metadata accessor for DisplayLayerVisibilityObserver();
}

uint64_t type metadata accessor for DisplayLayerVisibilityObserver()
{
  uint64_t result;

  result = type metadata singleton initialization cache for DisplayLayerVisibilityObserver;
  if (!type metadata singleton initialization cache for DisplayLayerVisibilityObserver)
    return swift_getSingletonMetadata();
  return result;
}

void type metadata completion function for DisplayLayerVisibilityObserver()
{
  unint64_t v0;

  type metadata accessor for Published<Bool>();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for DisplayLayerVisibilityObserver()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DisplayLayerVisibilityObserver.isHidingLayersFromClonedDisplay.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of DisplayLayerVisibilityObserver.$isHidingLayersFromClonedDisplay.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of DisplayLayerVisibilityObserver.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

void static PeoplePickerViewControllerProvider.makePeoplePickerViewController(style:existingAddresses:currentConversation:stagedActivity:setPreventsApplicationTerminationWhenModal:)(char *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6)
{
  id v11;
  id v12;
  char v13;

  v13 = *a1;
  objc_allocWithZone((Class)type metadata accessor for PeoplePickerViewController());
  v11 = a4;
  swift_retain();
  swift_bridgeObjectRetain();
  v12 = a3;
  PeoplePickerViewController.init(style:existingAddresses:currentConversation:stagedActivity:setPreventsApplicationTerminationWhenModal:)(&v13, a2, a3, a4, a5, a6);
}

ValueMetadata *type metadata accessor for PeoplePickerViewControllerProvider()
{
  return &type metadata for PeoplePickerViewControllerProvider;
}

BOOL static CallScreeningTrackingState.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  BOOL v4;

  v4 = a1[2] == a2[2] && a1[3] == a2[3];
  return (v4 || (OUTLINED_FUNCTION_13() & 1) != 0)
      && specialized static CKStateMachineContainer.== infix(_:_:)(a1[5], a2[5]);
}

uint64_t CallScreeningTrackingState.init(prevState:callUUID:trackingService:canScreenCall:)@<X0>(uint64_t a1@<X3>, uint64_t a2@<X4>, uint64_t a3@<X5>, uint64_t a4@<X6>, uint64_t a5@<X7>, _QWORD *a6@<X8>)
{
  uint64_t v12;
  uint64_t result;

  swift_release();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CKStateMachineContainer<CallScreening.State>);
  v12 = swift_allocObject();
  result = swift_weakInit();
  *a6 = a4;
  a6[1] = a5;
  a6[2] = a1;
  a6[3] = a2;
  a6[4] = a3;
  a6[5] = v12;
  return result;
}

uint64_t CallScreeningTrackingService.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t CallScreeningTrackingService.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t CallScreeningTrackingService.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t CallScreeningTrackingService.init()()
{
  uint64_t v0;

  return v0;
}

BOOL static CallScreeningTrackingStateResult.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void CallScreeningTrackingStateResult.hash(into:)(uint64_t a1, char a2)
{
  Hasher._combine(_:)(a2 & 1);
}

Swift::Int CallScreeningTrackingStateResult.hashValue.getter(char a1)
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1 & 1);
  return Hasher._finalize()();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance CallScreeningTrackingStateResult(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static CallScreeningTrackingStateResult.== infix(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance CallScreeningTrackingStateResult()
{
  char *v0;

  return CallScreeningTrackingStateResult.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance CallScreeningTrackingStateResult(uint64_t a1)
{
  char *v1;

  CallScreeningTrackingStateResult.hash(into:)(a1, *v1);
}

uint64_t CallScreeningTrackingState.canScreenCall.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_retain();
  return v1;
}

uint64_t CallScreeningTrackingState.callUUID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CallScreeningTrackingState.stateMachineContainer.getter()
{
  return swift_retain();
}

void CallScreeningTrackingState.willExit(to:)(_QWORD *a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD v26[2];
  os_log_t v27;
  int v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36[6];
  uint64_t v37;

  v5 = type metadata accessor for Logger();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = OUTLINED_FUNCTION_12_77();
  v10 = MEMORY[0x1C3B750C8](&protocol conformance descriptor for CallScreeningTrackingState<A>, a2, v9);
  v11 = CallScreeningState.stateMachine.getter(a2, v10);
  if (v11)
  {
    v33 = v6;
    v34 = v5;
    v31 = v2[2];
    v32 = v11;
    v12 = v2[3];
    v13 = v2[4];
    (*(void (**)(_QWORD))(*(_QWORD *)(a2 + 24) + 16))(*(_QWORD *)(a2 + 16));
    swift_retain();
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_13_8();
    swift_retain();
    OUTLINED_FUNCTION_13_79();
    swift_retain();
    v35 = v12;
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_13_8();
    swift_retain();
    OUTLINED_FUNCTION_13_79();
    v14 = Logger.logObject.getter();
    v15 = static os_log_type_t.default.getter();
    v16 = v15;
    if (os_log_type_enabled(v14, v15))
    {
      v17 = OUTLINED_FUNCTION_105();
      v28 = v16;
      v18 = v17;
      v29 = OUTLINED_FUNCTION_105();
      v36[0] = v29;
      *(_DWORD *)v18 = 136446466;
      v26[1] = v18 + 4;
      v27 = v14;
      v19 = CallScreeningTrackingState.description.getter();
      v21 = v20;
      swift_release();
      v30 = v8;
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      v37 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v19, v21, v36);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      *(_WORD *)(v18 + 12) = 2082;
      outlined retain of CallScreening.State(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined copy of CallScreening.State);
      CallScreening.State.description.getter();
      v23 = v22;
      v25 = v24;
      OUTLINED_FUNCTION_6_80();
      v37 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v23, v25, v36);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_6_80();
      OUTLINED_FUNCTION_6_80();
      _os_log_impl(&dword_1BD004000, v27, (os_log_type_t)v28, "%{public}s Exiting to %{public}s", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_60();
    }
    OUTLINED_FUNCTION_23_0();
    swift_bridgeObjectRelease_n();
    OUTLINED_FUNCTION_23_0();
    OUTLINED_FUNCTION_23_0();
    OUTLINED_FUNCTION_14_82();
    OUTLINED_FUNCTION_14_82();

    (*(void (**)(char *, uint64_t))(v33 + 8))(v8, v34);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v13 + 96))(v31, v35);
    swift_unknownObjectRelease();
  }
  OUTLINED_FUNCTION_1_29();
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> CallScreeningTrackingState.enteredState()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  NSObject *v10;
  NSObject *v11;
  NSObject *v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint8_t *v16;
  unint64_t v17;
  unint64_t v18;
  __int128 v19;
  os_log_t v20[6];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD v24[3];
  uint64_t v25;

  v2 = v0;
  v23 = type metadata accessor for Logger();
  v3 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = OUTLINED_FUNCTION_12_77();
  v7 = MEMORY[0x1C3B750C8](&protocol conformance descriptor for CallScreeningTrackingState<A>, v2, v6);
  v8 = CallScreeningState.stateMachine.getter(v2, v7);
  if (v8)
  {
    v9 = *(NSObject **)(v1 + 8);
    v21 = *(_QWORD *)(v1 + 16);
    v22 = v8;
    v11 = *(NSObject **)(v1 + 24);
    v10 = *(NSObject **)(v1 + 32);
    v12 = *(NSObject **)(v1 + 40);
    (*(void (**)(_QWORD))(*(_QWORD *)(v2 + 24) + 16))(*(_QWORD *)(v2 + 16));
    v20[2] = v9;
    OUTLINED_FUNCTION_71();
    v20[5] = v11;
    swift_bridgeObjectRetain();
    v20[3] = v10;
    swift_retain();
    v20[4] = v12;
    swift_retain();
    v13 = Logger.logObject.getter();
    v14 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = OUTLINED_FUNCTION_105();
      v20[0] = v13;
      v16 = (uint8_t *)v15;
      *(_QWORD *)&v24[0] = OUTLINED_FUNCTION_105();
      v20[1] = (os_log_t)v3;
      *(_DWORD *)v16 = 136446210;
      v17 = CallScreeningTrackingState.description.getter();
      v25 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v17, v18, (uint64_t *)v24);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_release();
      OUTLINED_FUNCTION_21_62();
      OUTLINED_FUNCTION_20_62();
      swift_release();
      _os_log_impl(&dword_1BD004000, v20[0], v14, "EnteredState %{public}s", v16, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_60();
    }
    swift_release();
    OUTLINED_FUNCTION_21_62();
    OUTLINED_FUNCTION_20_62();
    swift_release();

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v23);
    v19 = *(_OWORD *)(v1 + 16);
    v24[0] = *(_OWORD *)v1;
    v24[1] = v19;
    v24[2] = *(_OWORD *)(v1 + 32);
    (*((void (**)(_OWORD *, uint64_t, char *))v10->isa + 11))(v24, v21, v5);
    swift_unknownObjectRelease();
  }
  OUTLINED_FUNCTION_1_29();
}

uint64_t CallScreeningTrackingState.update(with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[11] = a2;
  v3[12] = v2;
  v3[10] = a1;
  if (one-time initialization token for shared != -1)
    swift_once();
  v3[13] = static CKStateMachineActor.shared;
  return OUTLINED_FUNCTION_4_4();
}

uint64_t CallScreeningTrackingState.update(with:)()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  _QWORD *v21;
  uint64_t v22;
  int *v24;
  _QWORD *v25;
  uint64_t (*v26)(void);
  char *v27;
  uint64_t (*v28)(uint64_t);

  v2 = *(_QWORD *)(v0 + 88);
  v1 = *(_OWORD **)(v0 + 96);
  v4 = v1[1];
  v3 = v1[2];
  *(_OWORD *)(v0 + 16) = *v1;
  *(_OWORD *)(v0 + 32) = v4;
  *(_OWORD *)(v0 + 48) = v3;
  v5 = MEMORY[0x1C3B750C8](&protocol conformance descriptor for CallScreeningTrackingState<A>, v2);
  v6 = CallScreeningState.stateMachine.getter(v2, v5);
  *(_QWORD *)(v0 + 112) = v6;
  if (v6)
  {
    v7 = *(_QWORD *)(v0 + 88);
    v8 = *(__int128 **)(v0 + 96);
    v9 = *(_QWORD *)(v0 + 80);
    *(_QWORD *)(v0 + 120) = *(_QWORD *)v8;
    *(_QWORD *)(v0 + 128) = *((_QWORD *)v8 + 1);
    *(_OWORD *)(v0 + 64) = v8[1];
    v28 = (uint64_t (*)(uint64_t))*((_QWORD *)v8 + 4);
    v10 = swift_allocObject();
    *(_QWORD *)(v0 + 136) = v10;
    v11 = *(_QWORD *)(v7 + 16);
    *(_QWORD *)(v0 + 144) = v11;
    *(_QWORD *)(v10 + 16) = v11;
    v12 = *(_QWORD *)(v7 + 24);
    *(_QWORD *)(v0 + 152) = v12;
    *(_QWORD *)(v10 + 24) = v12;
    v13 = *v8;
    v14 = v8[2];
    *(_OWORD *)(v10 + 48) = v8[1];
    *(_OWORD *)(v10 + 64) = v14;
    *(_OWORD *)(v10 + 32) = v13;
    v15 = *(_BYTE *)(v9 + 33);
    *(_BYTE *)(v0 + 216) = v15;
    if ((v15 & 1) != 0)
    {
      *(_QWORD *)(v0 + 160) = *(_QWORD *)(v9 + 16);
      *(_QWORD *)(v0 + 168) = *(_QWORD *)(v9 + 24);
      v24 = *(int **)(v12 + 32);
      OUTLINED_FUNCTION_71();
      outlined retain of String(v0 + 64);
      v27 = (char *)v24 + *v24;
      swift_retain();
      OUTLINED_FUNCTION_13_8();
      v25 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 176) = v25;
      *v25 = v0;
      v25[1] = CallScreeningTrackingState.update(with:);
      __asm { BR              X8 }
    }
    OUTLINED_FUNCTION_71();
    outlined retain of String(v0 + 64);
    v16 = *(_QWORD *)(v9 + 16);
    v17 = *(_QWORD *)(v9 + 24);
    v18 = *(_QWORD *)(v0 + 64);
    v19 = *(_QWORD *)(v0 + 72);
    swift_retain();
    swift_retain();
    v20 = v16 == v18 && v17 == v19;
    if (v20 || (OUTLINED_FUNCTION_13() & 1) != 0)
    {
      v21 = (_QWORD *)OUTLINED_FUNCTION_8_83(*(int **)(v0 + 120));
      *(_QWORD *)(v0 + 192) = v21;
      v22 = OUTLINED_FUNCTION_9_80(v21, (uint64_t)CallScreeningTrackingState.update(with:));
      return v28(v22);
    }
    OUTLINED_FUNCTION_7_94();
    OUTLINED_FUNCTION_10();
  }
  v26 = (uint64_t (*)(void))OUTLINED_FUNCTION_20();
  return v26();
}

{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 184) = v0;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_2_8();
}

{
  uint64_t v0;
  BOOL v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v5)(void);
  uint64_t (*v6)(uint64_t);

  v1 = *(_QWORD *)(v0 + 160) == *(_QWORD *)(v0 + 64) && *(_QWORD *)(v0 + 168) == *(_QWORD *)(v0 + 72);
  if (v1 || (OUTLINED_FUNCTION_13() & 1) != 0)
  {
    v6 = (uint64_t (*)(uint64_t))(**(int **)(v0 + 120) + *(_QWORD *)(v0 + 120));
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 192) = v2;
    v3 = OUTLINED_FUNCTION_9_80(v2, (uint64_t)CallScreeningTrackingState.update(with:));
    return v6(v3);
  }
  else
  {
    OUTLINED_FUNCTION_7_94();
    OUTLINED_FUNCTION_10();
    v5 = (uint64_t (*)(void))OUTLINED_FUNCTION_20();
    return OUTLINED_FUNCTION_16(v5);
  }
}

{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(void);

  if (*(_BYTE *)(v0 + 217) != 1 && (*(_BYTE *)(v0 + 216) & 1) == 0)
  {
    v1 = (_QWORD *)OUTLINED_FUNCTION_8_83(*(int **)(*(_QWORD *)(v0 + 152) + 32));
    *(_QWORD *)(v0 + 200) = v1;
    *v1 = v0;
    v1[1] = CallScreeningTrackingState.update(with:);
    __asm { BR              X8 }
  }
  swift_release();
  OUTLINED_FUNCTION_10();
  v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_20();
  return v2();
}

{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 208) = v0;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_2_8();
}

{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_7_94();
  OUTLINED_FUNCTION_10();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_20();
  return OUTLINED_FUNCTION_16(v0);
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_18_68();
  swift_unknownObjectRelease();
  return OUTLINED_FUNCTION_6(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_18_68();
  swift_unknownObjectRelease();
  return OUTLINED_FUNCTION_6(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t CallScreeningTrackingState.update(with:)(char a1)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)v1 + 217) = a1;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_4_4();
}

void closure #1 in CallScreeningTrackingState.update(with:)(__int128 *a1)
{
  _BYTE v1[48];

  outlined init with take of CallScreening.State(a1, (uint64_t)v1);
  __asm { BR              X11 }
}

uint64_t sub_1BD314108()
{
  lazy protocol witness table accessor for type CKStateMachineError and conformance CKStateMachineError();
  swift_allocError();
  return swift_willThrow();
}

void sub_1BD314168(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;

  if (a12 != *(_QWORD *)(v13 + 16) || a13 != *(_QWORD *)(v13 + 24))
    _stringCompareWithSmolCheck(_:_:expecting:)();
  JUMPOUT(0x1BD314114);
}

uint64_t protocol witness for CallScreeningState.stateMachineContainer.getter in conformance CallScreeningTrackingState<A>()
{
  return swift_retain();
}

void protocol witness for CallScreeningState.willExit(to:) in conformance CallScreeningTrackingState<A>(_QWORD *a1, uint64_t a2)
{
  CallScreeningTrackingState.willExit(to:)(a1, a2);
}

void protocol witness for CallScreeningState.enteredState() in conformance CallScreeningTrackingState<A>()
{
  CallScreeningTrackingState.enteredState()();
}

uint64_t protocol witness for UpdatesWithCallStatus.update(with:) in conformance CallScreeningTrackingState<A>(uint64_t a1, uint64_t a2)
{
  _OWORD *v2;
  uint64_t v3;
  __int128 v6;
  _QWORD *v7;

  v6 = v2[1];
  *(_OWORD *)(v3 + 16) = *v2;
  *(_OWORD *)(v3 + 32) = v6;
  *(_OWORD *)(v3 + 48) = v2[2];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 64) = v7;
  *v7 = v3;
  v7[1] = protocol witness for UpdatesWithCallStatus.update(with:) in conformance CallScreeningEndingState<A>;
  return CallScreeningTrackingState.update(with:)(a1, a2);
}

unint64_t CallScreeningTrackingState.description.getter()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  Swift::String v3;
  Swift::String v4;

  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease();
  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(void **)(v0 + 24);
  swift_bridgeObjectRetain();
  v3._countAndFlagsBits = v2;
  v3._object = v1;
  String.append(_:)(v3);
  swift_bridgeObjectRelease();
  v4._countAndFlagsBits = 41;
  v4._object = (void *)0xE100000000000000;
  String.append(_:)(v4);
  return 0xD000000000000018;
}

uint64_t sub_1BD3142E4()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void partial apply for closure #1 in CallScreeningTrackingState.update(with:)(__int128 *a1)
{
  closure #1 in CallScreeningTrackingState.update(with:)(a1);
}

unint64_t lazy protocol witness table accessor for type CallScreeningTrackingStateResult and conformance CallScreeningTrackingStateResult()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type CallScreeningTrackingStateResult and conformance CallScreeningTrackingStateResult;
  if (!lazy protocol witness table cache variable for type CallScreeningTrackingStateResult and conformance CallScreeningTrackingStateResult)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for CallScreeningTrackingStateResult, &type metadata for CallScreeningTrackingStateResult);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CallScreeningTrackingStateResult and conformance CallScreeningTrackingStateResult);
  }
  return result;
}

uint64_t instantiation function for generic protocol witness table for CallScreeningTrackingState<A>(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for CallScreeningTrackingState<A>);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t type metadata completion function for CallScreeningTrackingService()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for CallScreeningTrackingService(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CallScreeningTrackingService);
}

uint64_t method lookup function for CallScreeningTrackingService()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CallScreeningTrackingService.startTrackingCall(requester:callUUID:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t dispatch thunk of CallScreeningTrackingService.stopTrackingCall(callUUID:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of CallScreeningTrackingService.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t storeEnumTagSinglePayload for CallScreeningTrackingStateResult(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BD314460 + 4 * byte_1BD658217[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BD314494 + 4 * byte_1BD658212[v4]))();
}

uint64_t sub_1BD314494(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD31449C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD3144A4);
  return result;
}

uint64_t sub_1BD3144B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD3144B8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BD3144BC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD3144C4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CallScreeningTrackingStateResult()
{
  return &type metadata for CallScreeningTrackingStateResult;
}

uint64_t destroy for CallScreeningTrackingState()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

_QWORD *initializeWithCopy for CallScreeningTrackingState(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for CallScreeningTrackingState(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  a1[5] = a2[5];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for CallScreeningTrackingState(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_release();
  return a1;
}

uint64_t type metadata accessor for CallScreeningTrackingState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CallScreeningTrackingState);
}

uint64_t AttributedStrings.Notices.subjectContainer.unsafeMutableAddressor()
{
  return AttributedStrings.Notices.subjectContainer.unsafeMutableAddressor(&one-time initialization token for subjectContainer, (uint64_t)static AttributedStrings.Notices.subjectContainer);
}

uint64_t AttributedStrings.Notices.foregroundContainer.unsafeMutableAddressor()
{
  return AttributedStrings.Notices.subjectContainer.unsafeMutableAddressor(&one-time initialization token for foregroundContainer, (uint64_t)static AttributedStrings.Notices.foregroundContainer);
}

uint64_t AttributedStrings.Notices.subjectContainer.unsafeMutableAddressor(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;

  if (*a1 != -1)
    swift_once();
  v3 = OUTLINED_FUNCTION_88();
  return __swift_project_value_buffer(v3, a2);
}

void one-time initialization function for foregroundContainer()
{
  uint64_t v0;
  uint64_t inited;
  void *v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  void **v7;
  void *v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;

  v0 = OUTLINED_FUNCTION_88();
  __swift_allocate_value_buffer(v0, static AttributedStrings.Notices.foregroundContainer);
  __swift_project_value_buffer(v0, (uint64_t)static AttributedStrings.Notices.foregroundContainer);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<(NSAttributedStringKey, Any)>);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BD645380;
  v2 = (void *)*MEMORY[0x1E0DC1140];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1140];
  v3 = one-time initialization token for foregroundColor;
  v4 = v2;
  if (v3 != -1)
    v4 = (id)swift_once();
  v5 = (void *)static Colors.Notices.foregroundColor;
  v6 = OUTLINED_FUNCTION_17_8((uint64_t)v4, (unint64_t *)&lazy cache variable for type metadata for UIColor);
  v7 = (void **)MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 40) = v5;
  v8 = *v7;
  *(_QWORD *)(inited + 64) = v6;
  *(_QWORD *)(inited + 72) = v8;
  v9 = (void *)objc_opt_self();
  v10 = *MEMORY[0x1E0DC4B10];
  v11 = v5;
  v12 = v8;
  v13 = objc_msgSend(v9, sel__preferredFontForTextStyle_variant_, v10, 264);
  if (v13)
  {
    v14 = OUTLINED_FUNCTION_17_8((uint64_t)v13, (unint64_t *)&lazy cache variable for type metadata for UIFont);
    OUTLINED_FUNCTION_3_101(v14);
    lazy protocol witness table accessor for type NSAttributedStringKey and conformance NSAttributedStringKey();
    OUTLINED_FUNCTION_4_106();
    AttributeContainer.init(_:)();
    OUTLINED_FUNCTION_3_92();
  }
  else
  {
    __break(1u);
  }
}

uint64_t static AttributedStrings.Notices.foregroundContainer.getter@<X0>(uint64_t a1@<X8>)
{
  return static AttributedStrings.Notices.foregroundContainer.getter(&one-time initialization token for foregroundContainer, (uint64_t)static AttributedStrings.Notices.foregroundContainer, a1);
}

void one-time initialization function for subjectContainer()
{
  uint64_t v0;
  uint64_t inited;
  void *v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  void **v7;
  void *v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;

  v0 = OUTLINED_FUNCTION_88();
  __swift_allocate_value_buffer(v0, static AttributedStrings.Notices.subjectContainer);
  __swift_project_value_buffer(v0, (uint64_t)static AttributedStrings.Notices.subjectContainer);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<(NSAttributedStringKey, Any)>);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BD645380;
  v2 = (void *)*MEMORY[0x1E0DC1140];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1140];
  v3 = one-time initialization token for subjectColor;
  v4 = v2;
  if (v3 != -1)
    v4 = (id)swift_once();
  v5 = (void *)static Colors.Notices.subjectColor;
  v6 = OUTLINED_FUNCTION_17_8((uint64_t)v4, (unint64_t *)&lazy cache variable for type metadata for UIColor);
  v7 = (void **)MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 40) = v5;
  v8 = *v7;
  *(_QWORD *)(inited + 64) = v6;
  *(_QWORD *)(inited + 72) = v8;
  v9 = (void *)objc_opt_self();
  v10 = *MEMORY[0x1E0DC4B10];
  v11 = v5;
  v12 = v8;
  v13 = objc_msgSend(v9, sel__preferredFontForTextStyle_variant_, v10, 256);
  if (v13)
  {
    v14 = OUTLINED_FUNCTION_17_8((uint64_t)v13, (unint64_t *)&lazy cache variable for type metadata for UIFont);
    OUTLINED_FUNCTION_3_101(v14);
    lazy protocol witness table accessor for type NSAttributedStringKey and conformance NSAttributedStringKey();
    OUTLINED_FUNCTION_4_106();
    AttributeContainer.init(_:)();
    OUTLINED_FUNCTION_3_92();
  }
  else
  {
    __break(1u);
  }
}

uint64_t static AttributedStrings.Notices.subjectContainer.getter@<X0>(uint64_t a1@<X8>)
{
  return static AttributedStrings.Notices.foregroundContainer.getter(&one-time initialization token for subjectContainer, (uint64_t)static AttributedStrings.Notices.subjectContainer, a1);
}

uint64_t static AttributedStrings.Notices.foregroundContainer.getter@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = OUTLINED_FUNCTION_88();
  v6 = __swift_project_value_buffer(v5, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v6, v5);
}

ValueMetadata *type metadata accessor for AttributedStrings()
{
  return &type metadata for AttributedStrings;
}

ValueMetadata *type metadata accessor for AttributedStrings.Notices()
{
  return &type metadata for AttributedStrings.Notices;
}

void ParticipantMonogramViewLayout.__allocating_init(audioVisualizer:contactView:titleView:subtitleView:glowView:ringButton:)()
{
  id v0;

  OUTLINED_FUNCTION_1_118();
  swift_allocObject();
  v0 = closure #1 in variable initialization expression of ParticipantMonogramViewLayout.bellIcon();
  OUTLINED_FUNCTION_5_101((uint64_t)v0);
  OUTLINED_FUNCTION_65_1();
}

Swift::Void __swiftcall ParticipantMonogramViewLayout.layout(in:inRoster:)(__C::CGRect in, Swift::Bool inRoster)
{
  uint64_t v2;
  uint64_t v3;
  double height;
  double width;
  double y;
  double x;
  uint64_t v9;
  double v10;
  double v11;
  char *v12;
  unsigned int v13;
  unsigned int v14;
  id v15;
  BOOL v16;
  char v17;
  char *v18;
  id v19;
  BOOL v20;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  char v31;
  double v32;
  double v33;
  double v34;
  void *v35;
  id v36;
  double v37;
  void *v38;
  id v39;
  double v40;
  double v41;
  double v42;
  double v43;
  void *v44;
  CGFloat v45;
  id v46;
  Swift::String v47;
  Swift::String_optional v48;
  Swift::String v49;
  Swift::String v50;
  void *v51;
  void *v52;
  unsigned int v53;
  id v54;
  double v55;
  double v56;
  double v57;
  double v58;
  double v59;
  double v60;
  double v61;
  double v62;
  double v63;
  double v64;
  CGFloat v65;
  _BOOL8 v66;
  double v67;
  double v68;
  double v69;
  uint64_t v70;
  double MaxY;
  double v72;
  double v73;
  double v74;
  double v75;
  double v76;
  double (*v77)(void);
  CGFloat v78;
  CGFloat v79;
  double v80;
  double v81;
  double v82;
  double v83;
  double v84;
  double v85;
  double v86;
  double v87;
  CGFloat v88;
  double v89;
  double v90;
  unsigned int v91;
  double v92;
  void *v93;
  double v94;
  void *v95;
  double v96;
  double v97;
  double v98;
  char *v99;
  double v100;
  Swift::String v101;
  CGRect v102;
  CGRect v103;
  CGRect v104;
  CGRect v105;
  CGRect v106;
  CGRect v107;
  CGRect v108;
  CGRect v109;
  CGRect v110;
  CGRect v111;

  v3 = v2;
  height = in.size.height;
  width = in.size.width;
  y = in.origin.y;
  x = in.origin.x;
  v9 = type metadata accessor for FloatingPointRoundingRule();
  MEMORY[0x1E0C80A78](v9);
  if (one-time initialization token for shortSizeBoundary != -1)
    swift_once();
  v10 = *(double *)&static Layout.ParticipantViews.shortSizeBoundary;
  if (one-time initialization token for microSizeBoundary != -1)
    swift_once();
  v11 = *(double *)&static Layout.ParticipantViews.microSizeBoundary;
  v12 = *(char **)(v2 + 56);
  v99 = v12;
  if (inRoster)
  {
    v13 = 0;
    v14 = 0;
LABEL_18:
    v22 = 0.0;
    goto LABEL_19;
  }
  v15 = *(id *)&v12[OBJC_IVAR____TtC15ConversationKit33ParticipantViewLabelContainerView_label];
  v16 = UILabel.isEmpty.getter();

  v17 = 0;
  if (!v16 && v11 <= height)
    v17 = objc_msgSend(v99, sel_isHidden) ^ 1;
  v18 = *(char **)(v3 + 64);
  v19 = *(id *)&v18[OBJC_IVAR____TtC15ConversationKit33ParticipantViewLabelContainerView_label];
  v20 = UILabel.isEmpty.getter();

  v14 = 0;
  if (!v20 && v10 <= height && v11 <= height)
    v14 = objc_msgSend(v18, sel_isHidden) ^ 1;
  v13 = objc_msgSend(*(id *)(v3 + 40), sel_isHidden) ^ 1;
  v22 = 1.0;
  v12 = v99;
  if ((v17 & 1) == 0)
    goto LABEL_18;
LABEL_19:
  objc_msgSend(v12, sel_setAlpha_, v22);
  if (v14)
    v23 = 1.0;
  else
    v23 = 0.0;
  v95 = *(void **)(v3 + 64);
  objc_msgSend(v95, sel_setAlpha_, v23);
  v91 = v13;
  if (v13)
    v24 = 1.0;
  else
    v24 = 0.0;
  v93 = *(void **)(v3 + 40);
  objc_msgSend(v93, sel_setAlpha_, v24);
  v25 = OUTLINED_FUNCTION_0_119();
  v29 = ParticipantMonogramViewLayout.totalLabelHeight(in:isInRoster:)(inRoster, v25, v26, v27, v28);
  v30 = OUTLINED_FUNCTION_0_119();
  closure #1 in ParticipantMonogramViewLayout.layout(in:inRoster:)(v31, v11 > height, v3, v30, v32, v33, v34, v29);
  v102.origin.x = OUTLINED_FUNCTION_0_119();
  CGRectGetMidX(v102);
  OUTLINED_FUNCTION_4_107();
  v35 = *(void **)(v3 + 48);
  v36 = OUTLINED_FUNCTION_10_86();
  objc_msgSend(v36, sel_displayScale);
  v98 = OUTLINED_FUNCTION_7_95(v37);

  v38 = v35;
  OUTLINED_FUNCTION_8_84();
  v103.origin.x = OUTLINED_FUNCTION_0_119();
  CGRectGetMidY(v103);
  OUTLINED_FUNCTION_4_107();
  v39 = OUTLINED_FUNCTION_10_86();
  objc_msgSend(v39, sel_displayScale);
  v97 = OUTLINED_FUNCTION_7_95(v40);

  OUTLINED_FUNCTION_8_84();
  if (one-time initialization token for ringButton != -1)
    swift_once();
  objc_msgSend((id)static Fonts.ParticipantViews.ringButton, sel_lineHeight);
  v42 = ceil(v41) + 16.0;
  v43 = width * 0.25;
  v44 = v93;
  if (width * 0.25 >= 50.0)
  {
    objc_msgSend(v93, sel_setImage_forState_, 0, 0, v43);
    v46 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
    v101._object = (void *)0xE000000000000000;
    v47._object = (void *)0x80000001BD683820;
    v47._countAndFlagsBits = 0xD000000000000015;
    v48.value._countAndFlagsBits = 0x61737265766E6F43;
    v48.value._object = (void *)0xEF74694B6E6F6974;
    v49._countAndFlagsBits = 0;
    v49._object = (void *)0xE000000000000000;
    v101._countAndFlagsBits = 0;
    v50 = NSLocalizedString(_:tableName:bundle:value:comment:)(v47, v48, (NSBundle)v46, v49, v101);

    OUTLINED_FUNCTION_9_81(v50._countAndFlagsBits, (uint64_t)v50._object);
    v45 = 50.0;
  }
  else
  {
    objc_msgSend(v93, sel_setImage_forState_, *(_QWORD *)(v3 + 32), 0, v43);
    OUTLINED_FUNCTION_9_81(0, 0xE000000000000000);
    v45 = v42;
  }
  v51 = v99;
  v52 = v95;
  v53 = v91;
  objc_msgSend(v93, sel_sizeToFit);
  v86 = v29;
  v55 = closure #2 in ParticipantMonogramViewLayout.layout(in:inRoster:)(v3, v45, v42, x, y, width);
  v94 = v56;
  v96 = v55;
  v90 = v58;
  v92 = v57;
  v59 = width + -13.0;
  if (v53)
  {
    type metadata accessor for AppUtilities();
    if (static AppUtilities.isRTL.getter())
    {
      v104.origin.y = v94;
      v104.origin.x = v96;
      v104.size.height = v90;
      v104.size.width = v92;
      v60 = CGRectGetMaxX(v104) + 13.0;
    }
    else
    {
      v105.origin.y = v94;
      v105.origin.x = v96;
      v105.size.height = v90;
      v105.size.width = v92;
      v62 = width - CGRectGetMinX(v105);
      v54 = objc_msgSend(v44, sel_alignmentRectInsets);
      v60 = v62 + v63;
    }
    v61 = v59 - v60;
  }
  else
  {
    v61 = v59 + -13.0;
  }
  v100 = v61;
  ParticipantViewLabelContainerView.intrinsicContentSize.getter((uint64_t)v54);
  v65 = v64;
  type metadata accessor for AppUtilities();
  v66 = static AppUtilities.isRTL.getter();
  v89 = v65;
  v87 = v42;
  v88 = x;
  if (v66)
  {
    v106.origin.x = 13.0;
    v106.origin.y = 0.0;
    v106.size.width = v100;
    v106.size.height = v65;
    v67 = v59 - CGRectGetWidth(v106);
    if ((v53 & 1) == 0)
    {
LABEL_38:
      v107.origin.x = OUTLINED_FUNCTION_0_119();
      v68 = CGRectGetHeight(v107);
      v69 = ceil((v68 - OUTLINED_FUNCTION_6_81(v98, v97) - v86) * 0.5);
      v108.origin.y = OUTLINED_FUNCTION_6_81(v98, v97) + v69;
      v108.origin.x = v67;
      v85 = v108.origin.y;
      v108.size.width = v100;
      v108.size.height = v89;
      MaxY = CGRectGetMaxY(v108);
      goto LABEL_41;
    }
  }
  else
  {
    v67 = 13.0;
    if (!v53)
      goto LABEL_38;
  }
  v85 = height - v86 + -13.0;
  ParticipantViewLabelContainerView.intrinsicContentSize.getter(v66);
  MaxY = height - v72 + -13.0;
LABEL_41:
  ParticipantViewLabelContainerView.intrinsicContentSize.getter(v70);
  v74 = v73;
  v75 = 13.0;
  if (static AppUtilities.isRTL.getter())
  {
    v109.origin.x = 13.0;
    v109.origin.y = MaxY;
    v109.size.width = v100;
    v109.size.height = v74;
    v75 = v59 - CGRectGetWidth(v109);
  }
  v84 = MaxY;
  if (one-time initialization token for shared != -1)
    swift_once();
  if (height >= width)
    v76 = width;
  else
    v76 = height;
  v77 = *(double (**)(void))(*(_QWORD *)static Defaults.shared + 400);
  v78 = floor(v76 * (1.0 - v77()));
  v79 = floor(v76 * (1.0 - v77()));
  v110.origin.x = v88;
  v110.origin.y = y;
  v110.size.width = width;
  v110.size.height = height;
  v111 = CGRectInset(v110, v78, v79);
  v80 = v111.origin.x;
  v81 = v111.origin.y;
  v82 = v111.size.width;
  v83 = v111.size.height;
  OUTLINED_FUNCTION_2_101(v38, sel_setFrame_);
  OUTLINED_FUNCTION_2_101(*(id *)(v3 + 24), sel_setFrame_);
  objc_msgSend(*(id *)(v3 + 16), sel_setFrame_, v80, v81, v82, v83);
  objc_msgSend(v51, sel_setFrame_, v67, v85, v100, v89);
  objc_msgSend(v52, sel_setFrame_, v75, v84, v100, v74);
  objc_msgSend(v44, sel_setFrame_, v96, v94, v92, v90);
  objc_msgSend(v44, sel__setCornerRadius_, v87 * 0.5);
}

id closure #1 in variable initialization expression of ParticipantMonogramViewLayout.bellIcon()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  type metadata accessor for UIImage();
  v0 = (void *)*MEMORY[0x1E0DC4B60];
  v7 = 0x6C69662E6C6C6562;
  v8 = 0xE90000000000006CLL;
  v9 = -1;
  v10 = v0;
  LOWORD(v11) = 0;
  v12 = 4;
  LOBYTE(v13) = 0;
  v14 = 0;
  v1 = v0;
  v2 = static UIImage.symbolImage(for:)((uint64_t)&v7);

  swift_bridgeObjectRelease();
  if (v2)
  {
    v3 = (void *)objc_opt_self();
    v4 = v2;
    v5 = objc_msgSend(v3, sel_whiteColor, v7, v8, v9, v10, v11, v12, v13, v14);
    v2 = objc_msgSend(v4, sel_imageWithTintColor_renderingMode_, v5, 1);

  }
  return v2;
}

void ParticipantMonogramViewLayout.init(audioVisualizer:contactView:titleView:subtitleView:glowView:ringButton:)()
{
  id v0;

  OUTLINED_FUNCTION_1_118();
  v0 = closure #1 in variable initialization expression of ParticipantMonogramViewLayout.bellIcon();
  OUTLINED_FUNCTION_5_101((uint64_t)v0);
  OUTLINED_FUNCTION_65_1();
}

BOOL UILabel.isEmpty.getter()
{
  void *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v1 = outlined bridged method (pb) of @objc UILabel.text.getter(v0);
  if (!v2)
    return 1;
  v3 = v1;
  v4 = v2;
  swift_bridgeObjectRelease();
  v5 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0)
    v5 = v3 & 0xFFFFFFFFFFFFLL;
  return v5 == 0;
}

double ParticipantMonogramViewLayout.totalLabelHeight(in:isInRoster:)(char a1, double a2, double a3, double a4, double a5)
{
  uint64_t v5;
  uint64_t v6;
  double v9;
  double v10;
  id v11;
  BOOL v12;
  uint64_t v13;
  double v14;
  id v15;
  BOOL v16;
  uint64_t v17;
  double v18;

  v6 = v5;
  if (one-time initialization token for shortSizeBoundary != -1)
    swift_once();
  v9 = *(double *)&static Layout.ParticipantViews.shortSizeBoundary;
  if (one-time initialization token for microSizeBoundary != -1)
    swift_once();
  v10 = 0.0;
  if ((a1 & 1) == 0 && *(double *)&static Layout.ParticipantViews.microSizeBoundary <= a5)
  {
    v11 = objc_retain(*(id *)(*(_QWORD *)(v6 + 56)
                            + OBJC_IVAR____TtC15ConversationKit33ParticipantViewLabelContainerView_label));
    v12 = UILabel.isEmpty.getter();

    if (!v12)
    {
      ParticipantViewLabelContainerView.intrinsicContentSize.getter(v13);
      v10 = v14 + 0.0;
    }
    if (v9 <= a5)
    {
      v15 = objc_retain(*(id *)(*(_QWORD *)(v6 + 64)
                              + OBJC_IVAR____TtC15ConversationKit33ParticipantViewLabelContainerView_label));
      v16 = UILabel.isEmpty.getter();

      if (!v16)
      {
        ParticipantViewLabelContainerView.intrinsicContentSize.getter(v17);
        v10 = v10 + v18;
      }
    }
  }
  return ceil(v10);
}

double closure #1 in ParticipantMonogramViewLayout.layout(in:inRoster:)(char a1, char a2, uint64_t a3, double a4, double a5, double a6, double a7, double a8)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  id v24;
  double v25;
  double v26;
  uint64_t v28;

  v14 = type metadata accessor for FloatingPointRoundingRule();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a7 >= a6)
    v18 = a6;
  else
    v18 = a7;
  if ((a1 & 1) != 0)
  {
    v19 = v18 * 0.55;
    v20 = v18 + -28.0;
  }
  else
  {
    if (a7 - (a8 + a8) >= a6)
      v21 = a6;
    else
      v21 = a7 - (a8 + a8);
    if ((a2 & 1) != 0)
    {
      v19 = v18 * 0.55;
      v22 = -20.0;
    }
    else
    {
      v19 = v18 * 0.4;
      v22 = -28.0;
    }
    v20 = v21 + v22;
  }
  if (v20 >= v19)
    v20 = v19;
  if (v20 <= 168.0)
    v23 = v20;
  else
    v23 = 168.0;
  (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v17, *MEMORY[0x1E0DED500], v14);
  v24 = objc_msgSend(*(id *)(a3 + 48), sel_traitCollection);
  objc_msgSend(v24, sel_displayScale);
  v26 = CGFloat.rounded(_:toScale:)((uint64_t)v17, v25, v23);

  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  return v26;
}

double closure #2 in ParticipantMonogramViewLayout.layout(in:inRoster:)(uint64_t a1, CGFloat a2, CGFloat a3, double a4, double a5, double a6)
{
  void *v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  double v14;
  double v15;
  double v16;
  CGRect v18;

  v9 = *(void **)(a1 + 40);
  objc_msgSend(v9, sel_frame);
  v11 = v10;
  v13 = v12;
  type metadata accessor for AppUtilities();
  v14 = 10.0;
  if (!static AppUtilities.isRTL.getter())
  {
    v18.origin.x = v11;
    v18.origin.y = v13;
    v18.size.width = a2;
    v18.size.height = a3;
    v15 = a6 + -10.0 - CGRectGetWidth(v18);
    objc_msgSend(v9, sel_alignmentRectInsets);
    v14 = v15 + v16;
  }
  objc_msgSend(v9, sel_alignmentRectInsets);
  objc_msgSend(v9, sel_alignmentRectInsets);
  return v14;
}

id *ParticipantMonogramViewLayout.deinit()
{
  id *v0;

  return v0;
}

uint64_t ParticipantMonogramViewLayout.__deallocating_deinit()
{
  ParticipantMonogramViewLayout.deinit();
  return swift_deallocClassInstance();
}

uint64_t outlined bridged method (pb) of @objc UILabel.text.getter(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_text);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t type metadata accessor for ParticipantMonogramViewLayout()
{
  return objc_opt_self();
}

uint64_t method lookup function for ParticipantMonogramViewLayout()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ParticipantMonogramViewLayout.__allocating_init(audioVisualizer:contactView:titleView:subtitleView:glowView:ringButton:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

void LetMeInCountdownViewModel.__allocating_init(service:)(__int128 *a1)
{
  swift_allocObject();
  LetMeInCountdownViewModel.init(service:)(a1);
  OUTLINED_FUNCTION_0();
}

Swift::Void __swiftcall LetMeInCountdownViewModel.resetCountdown()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;

  v1 = v0;
  if (one-time initialization token for sidebar != -1)
    swift_once();
  v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)&static Logger.sidebar);
  v3 = (void *)Logger.logObject.getter();
  v4 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_5_3(v4))
  {
    *(_WORD *)OUTLINED_FUNCTION_7_8() = 0;
    OUTLINED_FUNCTION_2_5(&dword_1BD004000, v5, v6, "Reset let me in countdown.");
    OUTLINED_FUNCTION_3_15();
  }

  v7 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit25LetMeInCountdownViewModel_shouldShowCountdown);
  OUTLINED_FUNCTION_2_0();
  *v7 = 1;
  type metadata accessor for ConversationControlsJoinCountdownActionController();
  swift_allocObject();
  ConversationControlsJoinCountdownActionController.init()();
  LetMeInCountdownViewModel.countdownController.setter(v8);
  OUTLINED_FUNCTION_9_0();
}

uint64_t LetMeInCountdownViewModel.init(service:)(__int128 *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v1 + 16) = 0;
  swift_unknownObjectWeakInit();
  v3 = OUTLINED_FUNCTION_5_102();
  OUTLINED_FUNCTION_17_50(v3, v4, v5, v3);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit25LetMeInCountdownViewModel_shouldShowCountdown) = 1;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit25LetMeInCountdownViewModel____lazy_storage___countdownController) = 0;
  outlined init with take of Notice(a1, v1 + OBJC_IVAR____TtC15ConversationKit25LetMeInCountdownViewModel_service);
  return v1;
}

uint64_t LetMeInCountdownViewModel.willShowCountdown.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_2_0();
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t (*LetMeInCountdownViewModel.controlType.getter())()
{
  swift_retain();
  return partial apply for implicit closure #2 in implicit closure #1 in LetMeInCountdownViewModel.controlType.getter;
}

uint64_t LetMeInCountdownViewModel.buildView()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;

  v1 = type metadata accessor for PlainButtonStyle();
  v2 = *(_QWORD *)(v1 - 8);
  v32 = v1;
  v33 = v2;
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<LetMeInCountdownView>);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Button<LetMeInCountdownView>, _BackgroundStyleModifier<Color>>);
  MEMORY[0x1E0C80A78](v27);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.buttonStyle<A>(_:)>>.0);
  v30 = *(_QWORD *)(v11 - 8);
  v31 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _FrameLayout>);
  MEMORY[0x1E0C80A78](v29);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  swift_weakInit();
  lazy protocol witness table accessor for type LetMeInCountdownView and conformance LetMeInCountdownView();
  v28 = v0;
  swift_retain();
  swift_retain();
  Button.init(action:label:)();
  swift_release();
  v16 = static Color.clear.getter();
  v17 = static Edge.Set.all.getter();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v10, v8, v5);
  v18 = &v10[*(int *)(v27 + 36)];
  *(_QWORD *)v18 = v16;
  v18[8] = v17;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  PlainButtonStyle.init()();
  lazy protocol witness table accessor for type ModifiedContent<Button<LetMeInCountdownView>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>();
  lazy protocol witness table accessor for type PlainButtonStyle and conformance PlainButtonStyle();
  v19 = v32;
  View.buttonStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v4, v19);
  outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v10, &demangling cache variable for type metadata for ModifiedContent<Button<LetMeInCountdownView>, _BackgroundStyleModifier<Color>>);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  v21 = v30;
  v20 = v31;
  (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v15, v13, v31);
  v22 = &v15[*(int *)(v29 + 36)];
  v23 = v35;
  *(_OWORD *)v22 = v34;
  *((_OWORD *)v22 + 1) = v23;
  *((_OWORD *)v22 + 2) = v36;
  (*(void (**)(char *, uint64_t))(v21 + 8))(v13, v20);
  lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _FrameLayout> and conformance <> ModifiedContent<A, B>();
  v24 = AnyView.init<A>(_:)();
  swift_release();
  return v24;
}

uint64_t LetMeInCountdownViewModel.enabled(for:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  unsigned __int8 *v6;
  _BYTE *v7;

  if ((BYTE4(a1) & 0xE0) == 0x60 && (BYTE4(a1) == 96 ? (v4 = a2 == 3) : (v4 = 0), v4))
  {
    if ((a3 & 1) != 0)
    {
      v6 = (unsigned __int8 *)(v3 + OBJC_IVAR____TtC15ConversationKit25LetMeInCountdownViewModel_shouldShowCountdown);
      OUTLINED_FUNCTION_2_0();
      v5 = *v6;
    }
    else
    {
      v5 = 0;
    }
    OUTLINED_FUNCTION_2_0();
    *(_BYTE *)(v3 + 16) = v5;
    v7 = (_BYTE *)(v3 + OBJC_IVAR____TtC15ConversationKit25LetMeInCountdownViewModel_shouldShowCountdown);
    OUTLINED_FUNCTION_2_0();
    *v7 = 0;
  }
  else
  {
    OUTLINED_FUNCTION_2_0();
    v5 = 0;
    *(_BYTE *)(v3 + 16) = 0;
  }
  return v5;
}

Swift::Void __swiftcall LetMeInCountdownViewModel.onDisappear()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CountdownVoucher?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_4_1();
  v3 = v0 + OBJC_IVAR____TtC15ConversationKit25LetMeInCountdownViewModel_currentVoucher;
  OUTLINED_FUNCTION_2_0();
  outlined init with copy of CountdownVoucher?(v3, v1);
  v4 = OUTLINED_FUNCTION_5_102();
  LODWORD(v3) = __swift_getEnumTagSinglePayload(v1, 1, v4);
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v1, &demangling cache variable for type metadata for CountdownVoucher?);
  if ((_DWORD)v3 != 1)
    LetMeInCountdownViewModel.cancelCountdown()();
  OUTLINED_FUNCTION_18();
}

void LetMeInCountdownViewModel.cancelCountdown()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CountdownVoucher?);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit25LetMeInCountdownViewModel_service + 24);
  v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit25LetMeInCountdownViewModel_service + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit25LetMeInCountdownViewModel_service), v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 160))(v4, v5);
  v6 = LetMeInCountdownViewModel.countdownController.getter();
  (*(void (**)(uint64_t))(*(_QWORD *)v6 + 264))(v6);
  swift_release();
  v7 = type metadata accessor for CountdownVoucher(0);
  __swift_storeEnumTagSinglePayload((uint64_t)v3, 1, 1, v7);
  LetMeInCountdownViewModel.currentVoucher.setter((uint64_t)v3);
}

Swift::Void __swiftcall LetMeInCountdownViewModel.skipCountdown()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;

  v1 = v0;
  if (one-time initialization token for sidebar != -1)
    swift_once();
  v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)&static Logger.sidebar);
  v3 = (void *)Logger.logObject.getter();
  v4 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_5_3(v4))
  {
    *(_WORD *)OUTLINED_FUNCTION_7_8() = 0;
    OUTLINED_FUNCTION_2_5(&dword_1BD004000, v5, v6, "Skip let me in countdown.");
    OUTLINED_FUNCTION_3_15();
  }

  v7 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit25LetMeInCountdownViewModel_shouldShowCountdown);
  OUTLINED_FUNCTION_2_0();
  *v7 = 0;
  OUTLINED_FUNCTION_9_0();
}

uint64_t LetMeInCountdownViewModel.countdownController.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit25LetMeInCountdownViewModel____lazy_storage___countdownController) = a1;
  return swift_release();
}

Swift::Void __swiftcall LetMeInCountdownViewModel.initializeCountdownView(with:fullValue:)(Swift::Double with, Swift::Double fullValue)
{
  OUTLINED_FUNCTION_11_79();
}

void sub_1BD316098(_QWORD *a1)
{
  double v1;
  double v2;

  if (a1)
  {
    (*(void (**)(double, double))((*MEMORY[0x1E0DEEDD8] & *a1) + 0xE0))(v2, v1);

  }
}

Swift::Void __swiftcall LetMeInCountdownViewModel.startCountdown()()
{
  OUTLINED_FUNCTION_11_79();
}

void sub_1BD316108(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  if (a1)
  {
    OUTLINED_FUNCTION_12_78((uint64_t)a1, a2, *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x1E0DEEDD8] & *a1) + 0xE8));
    OUTLINED_FUNCTION_7_1(a10);
  }
  else
  {
    OUTLINED_FUNCTION_36();
  }
}

Swift::Void __swiftcall LetMeInCountdownViewModel.tick()()
{
  OUTLINED_FUNCTION_11_79();
}

void sub_1BD316150(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  if (a1)
  {
    OUTLINED_FUNCTION_12_78((uint64_t)a1, a2, *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x1E0DEEDD8] & *a1) + 0xF0));
    OUTLINED_FUNCTION_7_1(a10);
  }
  else
  {
    OUTLINED_FUNCTION_36();
  }
}

Swift::Void __swiftcall LetMeInCountdownViewModel.countdownEnded()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CountdownVoucher?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_4_1();
  v2 = LetMeInCountdownViewModel.countdownController.getter();
  (*(void (**)(uint64_t))(*(_QWORD *)v2 + 264))(v2);
  swift_release();
  v3 = OUTLINED_FUNCTION_5_102();
  OUTLINED_FUNCTION_17_50(v3, v4, v5, v3);
  OUTLINED_FUNCTION_13_80();
  v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit25LetMeInCountdownViewModel_service + 24);
  v7 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit25LetMeInCountdownViewModel_service + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit25LetMeInCountdownViewModel_service), v6);
  (*(void (**)(uint64_t, uint64_t))(v7 + 144))(v6, v7);
  OUTLINED_FUNCTION_18();
}

uint64_t LetMeInCountdownViewModel.countdownController.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = OBJC_IVAR____TtC15ConversationKit25LetMeInCountdownViewModel____lazy_storage___countdownController;
  if (*(_QWORD *)(v0
                 + OBJC_IVAR____TtC15ConversationKit25LetMeInCountdownViewModel____lazy_storage___countdownController))
  {
    v2 = *(_QWORD *)(v0
                   + OBJC_IVAR____TtC15ConversationKit25LetMeInCountdownViewModel____lazy_storage___countdownController);
  }
  else
  {
    v3 = v0;
    type metadata accessor for ConversationControlsJoinCountdownActionController();
    swift_allocObject();
    ConversationControlsJoinCountdownActionController.init()();
    v2 = v4;
    *(_QWORD *)(v3 + v1) = v4;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

void LetMeInCountdownViewModel.currentVoucher.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  _BYTE v7[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CountdownVoucher?);
  MEMORY[0x1E0C80A78](v3);
  v5 = &v7[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = v1 + OBJC_IVAR____TtC15ConversationKit25LetMeInCountdownViewModel_currentVoucher;
  swift_beginAccess();
  outlined init with copy of CountdownVoucher?(v6, (uint64_t)v5);
  swift_beginAccess();
  outlined assign with copy of CountdownVoucher?(a1, v6);
  swift_endAccess();
  LetMeInCountdownViewModel.currentVoucher.didset((uint64_t)v5);
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(a1, &demangling cache variable for type metadata for CountdownVoucher?);
  outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v5, &demangling cache variable for type metadata for CountdownVoucher?);
}

void LetMeInCountdownViewModel.setVoucher(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CountdownVoucher?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_4_1();
  outlined init with copy of CountdownVoucher(a1, v1);
  v4 = OUTLINED_FUNCTION_5_102();
  __swift_storeEnumTagSinglePayload(v1, 0, 1, v4);
  LetMeInCountdownViewModel.currentVoucher.setter(v1);
  OUTLINED_FUNCTION_18();
}

void LetMeInCountdownViewModel.currentVoucher.didset(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CountdownVoucher?);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CountdownVoucher(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of CountdownVoucher?(a1, (uint64_t)v4);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) == 1)
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v4, &demangling cache variable for type metadata for CountdownVoucher?);
  }
  else
  {
    outlined init with take of CountdownVoucher((uint64_t)v4, (uint64_t)v7);
    v8 = LetMeInCountdownViewModel.countdownController.getter();
    (*(void (**)(char *))(*(_QWORD *)v8 + 256))(v7);
    swift_release();
    outlined destroy of CountdownVoucher((uint64_t)v7);
  }
}

void LetMeInCountdownViewModel.countdownViewCreated(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CountdownVoucher?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_4_1();
  swift_unknownObjectWeakAssign();
  v3 = LetMeInCountdownViewModel.countdownController.getter();
  (*(void (**)(uint64_t, _UNKNOWN **))(*(_QWORD *)v3 + 248))(v0, &protocol witness table for LetMeInCountdownViewModel);
  swift_release();
  v4 = OUTLINED_FUNCTION_5_102();
  __swift_storeEnumTagSinglePayload(v1, 0, 1, v4);
  OUTLINED_FUNCTION_13_80();
  OUTLINED_FUNCTION_18();
}

uint64_t LetMeInCountdownViewModel.shouldShowCountdown.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ConversationKit25LetMeInCountdownViewModel_shouldShowCountdown);
  OUTLINED_FUNCTION_2_0();
  return *v1;
}

uint64_t closure #1 in LetMeInCountdownViewModel.buildView()()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    LetMeInCountdownViewModel.cancelCountdown()();
    return swift_release();
  }
  return result;
}

uint64_t LetMeInCountdownViewModel.deinit()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy();
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v0 + OBJC_IVAR____TtC15ConversationKit25LetMeInCountdownViewModel_currentVoucher, &demangling cache variable for type metadata for CountdownVoucher?);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC15ConversationKit25LetMeInCountdownViewModel_service);
  swift_release();
  return v0;
}

uint64_t LetMeInCountdownViewModel.__deallocating_deinit()
{
  LetMeInCountdownViewModel.deinit();
  return swift_deallocClassInstance();
}

uint64_t protocol witness for CallControlsInCallButtonViewModel.enabled(for:) in conformance LetMeInCountdownViewModel(uint64_t a1, uint64_t a2, char a3)
{
  return LetMeInCountdownViewModel.enabled(for:)(a1 & 0xFFFFFFFFFFLL, a2, a3) & 1;
}

uint64_t (*protocol witness for CallControlsButtonViewModel.controlType.getter in conformance LetMeInCountdownViewModel())()
{
  LetMeInCountdownViewModel.controlType.getter();
  return partial apply for implicit closure #2 in implicit closure #1 in LetMeInCountdownViewModel.controlType.getter;
}

void protocol witness for CallControlsButtonViewModel.onDisappear() in conformance LetMeInCountdownViewModel()
{
  LetMeInCountdownViewModel.onDisappear()();
}

_QWORD *LetMeInCountdownView.makeUIView(context:)()
{
  _QWORD *v0;
  double v1;
  _QWORD *v2;
  id v3;
  _QWORD v5[50];

  type metadata accessor for ConversationControlsJoinCallCountdownView();
  v0 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  v1 = static Layout.ConversationControls.values.getter((uint64_t)v5);
  v2 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  (*(void (**)(_QWORD, _QWORD, double))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))(v5[37], 0, v1);
  v3 = objc_msgSend((id)objc_opt_self(), sel_secondarySystemFillColor);
  (*(void (**)(id))((*v2 & *v0) + 0xB8))(v3);
  LetMeInCountdownViewModel.countdownViewCreated(_:)();
  return v0;
}

uint64_t LetMeInCountdownView.sizeThatFits(_:uiView:context:)()
{
  return 0x4042000000000000;
}

_QWORD *protocol witness for UIViewRepresentable.makeUIView(context:) in conformance LetMeInCountdownView()
{
  return LetMeInCountdownView.makeUIView(context:)();
}

uint64_t protocol witness for UIViewRepresentable.updateUIView(_:context:) in conformance LetMeInCountdownView(uint64_t a1)
{
  return TPNumberPadCharacter.rawValue.getter(a1);
}

uint64_t protocol witness for UIViewRepresentable.sizeThatFits(_:uiView:context:) in conformance LetMeInCountdownView()
{
  return LetMeInCountdownView.sizeThatFits(_:uiView:context:)();
}

uint64_t protocol witness for static View._makeView(view:inputs:) in conformance LetMeInCountdownView()
{
  lazy protocol witness table accessor for type LetMeInCountdownView and conformance LetMeInCountdownView();
  return static UIViewRepresentable._makeView(view:inputs:)();
}

uint64_t protocol witness for static View._makeViewList(view:inputs:) in conformance LetMeInCountdownView()
{
  lazy protocol witness table accessor for type LetMeInCountdownView and conformance LetMeInCountdownView();
  return static UIViewRepresentable._makeViewList(view:inputs:)();
}

void protocol witness for View.body.getter in conformance LetMeInCountdownView()
{
  lazy protocol witness table accessor for type LetMeInCountdownView and conformance LetMeInCountdownView();
  UIViewRepresentable.body.getter();
  __break(1u);
}

uint64_t outlined init with copy of CountdownVoucher(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CountdownVoucher(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t ObjC metadata update function for LetMeInCountdownViewModel()
{
  return type metadata accessor for LetMeInCountdownViewModel();
}

uint64_t type metadata accessor for LetMeInCountdownViewModel()
{
  uint64_t result;

  result = type metadata singleton initialization cache for LetMeInCountdownViewModel;
  if (!type metadata singleton initialization cache for LetMeInCountdownViewModel)
    return swift_getSingletonMetadata();
  return result;
}

void type metadata completion function for LetMeInCountdownViewModel()
{
  unint64_t v0;

  type metadata accessor for CountdownVoucher?();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for LetMeInCountdownViewModel()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of LetMeInCountdownViewModel.__allocating_init(service:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t outlined assign with copy of CountdownVoucher?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CountdownVoucher?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BD316A74()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in LetMeInCountdownViewModel.buildView()()
{
  return closure #1 in LetMeInCountdownViewModel.buildView()();
}

unint64_t lazy protocol witness table accessor for type LetMeInCountdownView and conformance LetMeInCountdownView()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type LetMeInCountdownView and conformance LetMeInCountdownView;
  if (!lazy protocol witness table cache variable for type LetMeInCountdownView and conformance LetMeInCountdownView)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for LetMeInCountdownView, &unk_1E762DA18);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LetMeInCountdownView and conformance LetMeInCountdownView);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type LetMeInCountdownView and conformance LetMeInCountdownView;
  if (!lazy protocol witness table cache variable for type LetMeInCountdownView and conformance LetMeInCountdownView)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for LetMeInCountdownView, &unk_1E762DA18);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LetMeInCountdownView and conformance LetMeInCountdownView);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<Button<LetMeInCountdownView>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<Button<LetMeInCountdownView>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<Button<LetMeInCountdownView>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Button<LetMeInCountdownView>, _BackgroundStyleModifier<Color>>);
    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type Button<LetMeInCountdownView> and conformance Button<A>, &demangling cache variable for type metadata for Button<LetMeInCountdownView>, MEMORY[0x1E0CDFA58]);
    v3 = v2;
    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type _BackgroundStyleModifier<Color> and conformance _BackgroundStyleModifier<A>, &demangling cache variable for type metadata for _BackgroundStyleModifier<Color>, MEMORY[0x1E0CDC6D0]);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v5);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<Button<LetMeInCountdownView>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type PlainButtonStyle and conformance PlainButtonStyle()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type PlainButtonStyle and conformance PlainButtonStyle;
  if (!lazy protocol witness table cache variable for type PlainButtonStyle and conformance PlainButtonStyle)
  {
    v1 = type metadata accessor for PlainButtonStyle();
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9F68], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PlainButtonStyle and conformance PlainButtonStyle);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _FrameLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[6];

  result = lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _FrameLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _FrameLayout> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _FrameLayout>);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Button<LetMeInCountdownView>, _BackgroundStyleModifier<Color>>);
    v2[3] = type metadata accessor for PlainButtonStyle();
    v2[4] = lazy protocol witness table accessor for type ModifiedContent<Button<LetMeInCountdownView>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>();
    v2[5] = lazy protocol witness table accessor for type PlainButtonStyle and conformance PlainButtonStyle();
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = MEMORY[0x1E0CD8D70];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _FrameLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

void *type metadata accessor for LetMeInCountdownView()
{
  return &unk_1E762DA18;
}

id TPBadgeView.init(telephonyCall:)(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType;
  uint64_t (*v4)(uint64_t, uint64_t);
  void *v5;
  unsigned int v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;

  ObjectType = swift_getObjectType();
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 160);
  v5 = (void *)v4(ObjectType, a2);
  v6 = objc_msgSend(v5, sel_isTelephonyProvider);

  if (!v6)
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v15 = type metadata accessor for Logger();
    __swift_project_value_buffer(v15, (uint64_t)&static Logger.conversationControls);
    v16 = Logger.logObject.getter();
    v17 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      v22 = swift_slowAlloc();
      *(_DWORD *)v18 = 136446210;
      v19 = _typeName(_:qualified:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v19, v20, &v22);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD004000, v16, v17, "[%{public}s] Non-telephony call passed into telephony initalizer", v18, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_60();
    }

    goto LABEL_12;
  }
  v7 = (void *)v4(ObjectType, a2);
  v8 = objc_msgSend(v7, sel_prioritizedSenderIdentities);

  v9 = (uint64_t)objc_msgSend(v8, sel_count);
  if (v9 < 2 || (v10 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 256))(ObjectType, a2)) == 0)
  {
LABEL_12:
    swift_unknownObjectRelease();
    return 0;
  }
  v11 = v10;
  v12 = objc_msgSend(v10, sel_localizedShortName);
  if (!v12)
  {
    v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v12 = (id)MEMORY[0x1C3B72E00](v13);
    swift_bridgeObjectRelease();
  }
  v14 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithTitle_theme_, v12, 1);

  swift_unknownObjectRelease();
  return v14;
}

uint64_t destroy for CallControlsType(uint64_t a1)
{
  return outlined consume of CallControlsType(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t initializeBufferWithCopyOfBuffer for CallControlsType(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  outlined copy of CallControlsType(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for CallControlsType(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  outlined copy of CallControlsType(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  outlined consume of CallControlsType(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for CallControlsType(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  outlined consume of CallControlsType(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for CallControlsType()
{
  return &type metadata for CallControlsType;
}

uint64_t dispatch thunk of CallControlsButtonViewModel.onDisappear()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of CallControlsInCallButtonViewModel.enabled(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t))(a5 + 16))(a1 & 0xFFFFFFFFFFLL);
}

uint64_t dispatch thunk of CallControlsPreCallButtonViewModel.delegate.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of CallControlsPreCallButtonViewModel.delegate.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of CallControlsPreCallButtonViewModel.enabled(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t protocol witness for CallControlsButtonViewModel.onAppear() in conformance DialButtonViewModel(uint64_t a1)
{
  return TPNumberPadCharacter.rawValue.getter(a1);
}

void specialized _ArrayProtocol.filter(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;

  v18 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSDiffableDataSourceSnapshot<InCallControlsCollectionViewController.CollectionViewSection, UUID>);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = 0;
  v8 = *(_QWORD *)(a1 + 16);
  v17 = MEMORY[0x1E0DEE9D8];
  while (1)
  {
    if (v8 == v7)
    {
      swift_bridgeObjectRelease();
      return;
    }
    if (v7 >= *(_QWORD *)(a1 + 16))
      break;
    v9 = *(unsigned __int8 *)(a1 + v7++ + 32);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v18, v3);
    v10 = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v11 = specialized Sequence<>.contains(_:)(v9, v10);
    swift_bridgeObjectRelease();
    if ((v11 & 1) != 0)
    {
      v12 = v17;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v19 = v12;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        v12 = v19;
      }
      v14 = *(_QWORD *)(v12 + 16);
      v15 = v14 + 1;
      if (v14 >= *(_QWORD *)(v12 + 24) >> 1)
      {
        v17 = v14 + 1;
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        v15 = v17;
        v12 = v19;
      }
      *(_QWORD *)(v12 + 16) = v15;
      v17 = v12;
      *(_BYTE *)(v12 + v14 + 32) = v9;
    }
  }
  __break(1u);
}

{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, unint64_t, uint64_t);
  char v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v5 = type metadata accessor for UUID();
  v34 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for Participant(0);
  v29 = *(_QWORD *)(v26 - 8);
  v8 = MEMORY[0x1E0C80A78](v26);
  v30 = (uint64_t)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v33 = (uint64_t)&v25 - v10;
  v37 = MEMORY[0x1E0DEE9D8];
  v11 = *(_QWORD *)(a1 + 16);
  v36 = a2;
  v28 = v11;
  if (v11)
  {
    v25 = v2;
    v12 = 0;
    v35 = a2 + 56;
    v27 = a1;
    while (v12 < *(_QWORD *)(a1 + 16))
    {
      v13 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
      v31 = *(_QWORD *)(v29 + 72);
      v32 = v13;
      outlined init with copy of ConversationControlsAppLaunchButtonType(a1 + v13 + v31 * v12, v33, type metadata accessor for Participant);
      if (*(_QWORD *)(a2 + 16)
        && (_s10Foundation4UUIDVACSHAAWlTm_3((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x1E0CB09C8]), v14 = dispatch thunk of Hashable._rawHashValue(seed:)(), v15 = v36, v16 = -1 << *(_BYTE *)(v36 + 32), v17 = v14 & ~v16, ((*(_QWORD *)(v35 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) != 0))
      {
        v18 = ~v16;
        v19 = *(_QWORD *)(v34 + 72);
        v20 = *(void (**)(char *, unint64_t, uint64_t))(v34 + 16);
        while (1)
        {
          v20(v7, *(_QWORD *)(v15 + 48) + v19 * v17, v5);
          _s10Foundation4UUIDVACSHAAWlTm_3((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x1E0CB09D0]);
          v21 = dispatch thunk of static Equatable.== infix(_:_:)();
          (*(void (**)(char *, uint64_t))(v34 + 8))(v7, v5);
          if ((v21 & 1) != 0)
            break;
          v17 = (v17 + 1) & v18;
          v15 = v36;
          if (((*(_QWORD *)(v35 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) == 0)
            goto LABEL_9;
        }
        outlined destroy of RemoteControlRequest(v33, type metadata accessor for Participant);
      }
      else
      {
LABEL_9:
        outlined init with take of StagedCollaboration(v33, v30, type metadata accessor for Participant);
        v22 = v37;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(v22 + 16) + 1, 1);
          v22 = v37;
        }
        v24 = *(_QWORD *)(v22 + 16);
        v23 = *(_QWORD *)(v22 + 24);
        if (v24 >= v23 >> 1)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v23 > 1, v24 + 1, 1);
          v22 = v37;
        }
        *(_QWORD *)(v22 + 16) = v24 + 1;
        outlined init with take of StagedCollaboration(v30, v22 + v32 + v24 * v31, type metadata accessor for Participant);
      }
      a1 = v27;
      ++v12;
      a2 = v36;
      if (v12 == v28)
        goto LABEL_17;
    }
    __break(1u);
  }
  else
  {
LABEL_17:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  unint64_t v19;
  void (*v20)(char *, unint64_t, uint64_t, __n128);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  char *v39;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v30 - v8;
  v10 = type metadata accessor for UUID();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v35 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v30 - v14;
  v17 = MEMORY[0x1E0C80A78](v16);
  v39 = (char *)&v30 - v18;
  v41 = MEMORY[0x1E0DEE9D8];
  v34 = *(_QWORD *)(a1 + 16);
  if (v34)
  {
    v19 = 0;
    v32 = a1;
    v33 = a2;
    v31 = v9;
    while (v19 < *(_QWORD *)(a1 + 16))
    {
      v37 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
      v38 = *(_QWORD *)(v11 + 72);
      v20 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v11 + 16);
      v20(v9, a1 + v37 + v38 * v19, v10, v17);
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v10);
      if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10) == 1)
        goto LABEL_21;
      v40 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
      v40(v39, v9, v10);
      v21 = a2;
      v22 = *(_QWORD *)(a2 + 16);
      v36 = v19;
      if (v22)
      {
        v23 = v21 + v37;
        swift_bridgeObjectRetain();
        while (1)
        {
          ((void (*)(char *, uint64_t, uint64_t))v20)(v6, v23, v10);
          __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v10);
          if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v10) == 1)
            break;
          v40(v15, v6, v10);
          _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
          v24 = dispatch thunk of static Equatable.== infix(_:_:)();
          v25 = v11;
          v26 = *(void (**)(char *, uint64_t))(v11 + 8);
          v26(v15, v10);
          if ((v24 & 1) != 0)
          {
            a2 = v33;
            swift_bridgeObjectRelease();
            v26(v39, v10);
            v11 = v25;
            goto LABEL_19;
          }
          v23 += v38;
          --v22;
          v11 = v25;
          if (!v22)
            goto LABEL_12;
        }
      }
      else
      {
        swift_bridgeObjectRetain();
LABEL_12:
        __swift_storeEnumTagSinglePayload((uint64_t)v6, 1, 1, v10);
      }
      a2 = v33;
      swift_bridgeObjectRelease();
      v40(v35, v39, v10);
      v27 = v41;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(v27 + 16) + 1, 1);
        v27 = v41;
      }
      v29 = *(_QWORD *)(v27 + 16);
      v28 = *(_QWORD *)(v27 + 24);
      if (v29 >= v28 >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v28 > 1, v29 + 1, 1);
        v27 = v41;
      }
      *(_QWORD *)(v27 + 16) = v29 + 1;
      v40((char *)(v27 + v37 + v29 * v38), v35, v10);
      v41 = v27;
LABEL_19:
      v19 = v36 + 1;
      v9 = v31;
      a1 = v32;
      if (v36 + 1 == v34)
        goto LABEL_20;
    }
    __break(1u);
  }
  else
  {
LABEL_20:
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 1, 1, v10);
LABEL_21:
    swift_bridgeObjectRelease();
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v9, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    swift_bridgeObjectRelease();
  }
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  void (*v27)(uint64_t);
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;

  v5 = OUTLINED_FUNCTION_522_0();
  v43 = *(_QWORD *)(v5 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_6_0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = type metadata accessor for Participant(0);
  v37 = *(_QWORD *)(v32 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_5_27();
  v38 = v11;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v31 - v13;
  v44 = MEMORY[0x1E0DEE9D8];
  v36 = *(_QWORD *)(v2 + 16);
  if (v36)
  {
    v15 = 0;
    v33 = (char *)&v31 - v13;
    v34 = a2;
    v35 = v2;
    while (v15 < *(_QWORD *)(v2 + 16))
    {
      OUTLINED_FUNCTION_37_3();
      v17 = *(_QWORD *)(v16 + 72);
      v40 = v18;
      v41 = v19;
      v39 = v17;
      _s15ConversationKit11ParticipantVWOcTm_4();
      v20 = *(_QWORD *)(a2 + 16);
      if (v20)
      {
        v42 = &v14[*(int *)(v32 + 20)];
        v21 = v43;
        OUTLINED_FUNCTION_37_3();
        v23 = a2 + v22;
        swift_bridgeObjectRetain();
        v24 = *(_QWORD *)(v21 + 72);
        a2 = *(_QWORD *)(v21 + 16);
        while (1)
        {
          ((void (*)(char *, uint64_t, uint64_t))a2)(v9, v23, v5);
          OUTLINED_FUNCTION_83_7((uint64_t)v9, 0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v5) == 1)
            break;
          (*(void (**)(uint64_t, char *, uint64_t))(v43 + 32))(v3, v9, v5);
          lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type UUID and conformance UUID);
          v25 = dispatch thunk of static Equatable.== infix(_:_:)();
          v26 = OUTLINED_FUNCTION_202_0();
          v27(v26);
          if ((v25 & 1) != 0)
          {
            OUTLINED_FUNCTION_466();
            v14 = v33;
            outlined destroy of AccountUpdateNotice((uint64_t)v33, type metadata accessor for Participant);
            goto LABEL_18;
          }
          v23 += v24;
          if (!--v20)
            goto LABEL_11;
        }
      }
      else
      {
        swift_bridgeObjectRetain();
LABEL_11:
        OUTLINED_FUNCTION_83_7((uint64_t)v9, 1);
      }
      OUTLINED_FUNCTION_466();
      v14 = v33;
      outlined init with take of Participant((uint64_t)v33, v38);
      v28 = v44;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(v28 + 16) + 1, 1);
        v28 = v44;
      }
      v30 = *(_QWORD *)(v28 + 16);
      v29 = *(_QWORD *)(v28 + 24);
      if (v30 >= v29 >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v29 > 1, v30 + 1, 1);
        v28 = v44;
      }
      *(_QWORD *)(v28 + 16) = v30 + 1;
      outlined init with take of Participant(v38, v28 + v40 + v30 * v39);
LABEL_18:
      v15 = v41 + 1;
      v2 = v35;
      if (v41 + 1 == v36)
        goto LABEL_19;
    }
    __break(1u);
  }
  else
  {
LABEL_19:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_1_29();
  }
}

void specialized Collection.firstIndex(where:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  specialized Collection.firstIndex(where:)(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for Participant);
}

{
  specialized Collection.firstIndex(where:)(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for ParticipantGridView.ParticipantTileInfo);
}

{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v6 = *(_QWORD *)(a3 + 16);
  if (v6)
  {
    v7 = a3;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
    OUTLINED_FUNCTION_54_30();
    do
    {
      v8 = OUTLINED_FUNCTION_133_5();
      if (v3)
        break;
      if ((v8 & 1) != 0)
        break;
      ++v4;
      v7 += v5;
    }
    while (v6 != v4);
  }
  OUTLINED_FUNCTION_73_16();
}

void specialized Collection.firstIndex(where:)(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v7 = *(_QWORD *)(a3 + 16);
  if (v7)
  {
    v8 = a3;
    a4(0);
    OUTLINED_FUNCTION_54_30();
    do
    {
      v9 = OUTLINED_FUNCTION_133_5();
      if (v4)
        break;
      if ((v9 & 1) != 0)
        break;
      ++v5;
      v8 += v6;
    }
    while (v7 != v5);
  }
  OUTLINED_FUNCTION_73_16();
}

void InCallControlsCollectionViewController.isOnScreen.setter(char a1)
{
  uint64_t v1;
  char *v3;

  InCallControlsCollectionViewController.isOnScreen.willset(a1);
  v3 = (char *)(v1 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_isOnScreen);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  OUTLINED_FUNCTION_32();
}

void InCallControlsCollectionViewController.__allocating_init(conversation:participants:mode:gridLayoutStyle:isLegacy:shareLinkEnabled:menuHostViewController:)()
{
  objc_class *v0;

  OUTLINED_FUNCTION_93();
  objc_allocWithZone(v0);
  InCallControlsCollectionViewController.init(conversation:participants:mode:gridLayoutStyle:isLegacy:shareLinkEnabled:menuHostViewController:)();
  OUTLINED_FUNCTION_52_1();
}

void InCallControlsCollectionViewController.activity.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_activity;
  OUTLINED_FUNCTION_2_0();
  outlined assign with copy of Activity?(a1, v3);
  swift_endAccess();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PassthroughSubject<(), Never>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(lazy protocol witness table cache variable for type PassthroughSubject<(), Never> and conformance PassthroughSubject<A, B>, &demangling cache variable for type metadata for PassthroughSubject<(), Never>);
  Subject<>.send()();
  InCallControlsCollectionViewController.updateActivityHeader()();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(a1, &demangling cache variable for type metadata for Activity?);
  OUTLINED_FUNCTION_2_3();
}

Swift::Void __swiftcall InCallControlsCollectionViewController.refreshTitleCell()()
{
  InCallControlsCollectionViewController.refreshTitleCell()(&one-time initialization token for titleRowIdentifier, (uint64_t)static InCallControlsCollectionViewController.CollectionViewSection.titleRowIdentifier);
}

void InCallControlsCollectionViewController.conversation.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  id v5;

  v3 = (void **)(v1 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_conversation);
  OUTLINED_FUNCTION_2_0();
  v4 = *v3;
  *v3 = a1;
  v5 = a1;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PassthroughSubject<(), Never>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(lazy protocol witness table cache variable for type PassthroughSubject<(), Never> and conformance PassthroughSubject<A, B>, &demangling cache variable for type metadata for PassthroughSubject<(), Never>);
  OUTLINED_FUNCTION_111_8();

  OUTLINED_FUNCTION_9_0();
}

Swift::Void __swiftcall InCallControlsCollectionViewController.refreshToggleIgnoreLMIRequestsRowCell()()
{
  InCallControlsCollectionViewController.refreshTitleCell()(&one-time initialization token for toggleIgnoreLMIRequestsRowIdentifier, (uint64_t)static InCallControlsCollectionViewController.CollectionViewSection.toggleIgnoreLMIRequestsRowIdentifier);
}

void InCallControlsCollectionViewController.refreshTitleCell()(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;

  v3 = *(void **)(v2 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_dataSource);
  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UUID>);
    v6 = OUTLINED_FUNCTION_33_0();
    v7 = *(_QWORD *)(v6 - 8);
    v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1BD6441D0;
    v10 = v9 + v8;
    v11 = *a1;
    v13 = v3;
    if (v11 != -1)
      swift_once();
    OUTLINED_FUNCTION_37_37(v6, a2);
    OUTLINED_FUNCTION_139(v10, v12, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16));
    OUTLINED_FUNCTION_80_13(0, v9, v13);
    swift_setDeallocating();
    specialized _ContiguousArrayStorage.__deallocating_deinit();

  }
}

void InCallControlsCollectionViewController.mode.setter(char a1)
{
  uint64_t v1;
  char *v3;
  char v4;

  v3 = (char *)(v1 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_mode);
  OUTLINED_FUNCTION_2_0();
  v4 = *v3;
  *v3 = a1;
  InCallControlsCollectionViewController.mode.didset(v4);
  OUTLINED_FUNCTION_9_0();
}

void InCallControlsCollectionViewController.gridLayoutStyle.setter(unsigned __int8 *a1)
{
  uint64_t v1;
  unsigned __int8 v2;
  unsigned __int8 *v3;
  unsigned __int8 v4;
  unsigned __int8 v5;

  v2 = *a1;
  v3 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_gridLayoutStyle);
  OUTLINED_FUNCTION_2_0();
  v4 = *v3;
  *v3 = v2;
  v5 = v4;
  InCallControlsCollectionViewController.gridLayoutStyle.didset(&v5);
  OUTLINED_FUNCTION_9_0();
}

void InCallControlsCollectionViewController.update(participant:broadcastingState:)()
{
  char *v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  _QWORD v59[3];
  char *v60;

  OUTLINED_FUNCTION_93();
  v2 = v1;
  OUTLINED_FUNCTION_15_6();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  type metadata accessor for Participant.State(0);
  OUTLINED_FUNCTION_1_1();
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v53 - v8;
  v10 = &v0[OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_participants];
  OUTLINED_FUNCTION_1();
  v11 = *(_QWORD *)v10;
  v59[2] = v2;
  swift_bridgeObjectRetain();
  specialized Collection.firstIndex(where:)((uint64_t)partial apply for closure #1 in ParticipantGridViewController.updateProminenceEMA(withParticipant:ema:audioPriority:videoPriority:), (uint64_t)v59, v11, (void (*)(_QWORD))type metadata accessor for Participant);
  v13 = v12;
  v15 = v14;
  swift_bridgeObjectRelease();
  if ((v15 & 1) != 0)
  {
    if (one-time initialization token for conversationKit == -1)
    {
LABEL_17:
      static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v41 = OUTLINED_FUNCTION_15();
      *(_OWORD *)(v41 + 16) = xmmword_1BD645380;
      OUTLINED_FUNCTION_35_31(v41, v42, type metadata accessor for Participant);
      v43 = OUTLINED_FUNCTION_14_2();
      OUTLINED_FUNCTION_69_16(v43);
      v45 = v44;
      v47 = v46;
      OUTLINED_FUNCTION_30_7(v44, &demangling cache variable for type metadata for Participant?);
      v48 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v41 + 56) = MEMORY[0x1E0DEA968];
      v49 = lazy protocol witness table accessor for type String and conformance String();
      *(_QWORD *)(v41 + 64) = v49;
      *(_QWORD *)(v41 + 32) = v45;
      *(_QWORD *)(v41 + 40) = v47;
      v60 = v0;
      v50 = v0;
      v51 = String.init<A>(reflecting:)();
      *(_QWORD *)(v41 + 96) = v48;
      *(_QWORD *)(v41 + 104) = v49;
      *(_QWORD *)(v41 + 72) = v51;
      *(_QWORD *)(v41 + 80) = v52;
      OUTLINED_FUNCTION_91_11();
      os_log(_:dso:log:type:_:)();
      OUTLINED_FUNCTION_21_0();
      goto LABEL_18;
    }
LABEL_21:
    swift_once();
    goto LABEL_17;
  }
  if ((v13 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  v16 = *(_QWORD *)v10;
  if (v13 >= *(_QWORD *)(*(_QWORD *)v10 + 16))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v17 = *(_QWORD *)(OUTLINED_FUNCTION_14_2() - 8);
  v18 = *(unsigned __int8 *)(v17 + 80);
  v58 = (v18 + 32) & ~v18;
  v55 = *(_QWORD *)(v17 + 72);
  v56 = v18;
  v57 = v55 * v13;
  OUTLINED_FUNCTION_96_11(v16 + v58 + v55 * v13, (uint64_t)v9);
  OUTLINED_FUNCTION_96_11((uint64_t)v2, (uint64_t)v7);
  static Participant.State.== infix(_:_:)();
  v20 = v19;
  OUTLINED_FUNCTION_137_1((uint64_t)v7);
  OUTLINED_FUNCTION_137_1((uint64_t)v9);
  if ((v20 & 1) != 0)
    goto LABEL_18;
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v54 = static OS_os_log.conversationKit;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v21 = OUTLINED_FUNCTION_15();
  v53 = xmmword_1BD645380;
  *(_OWORD *)(v21 + 16) = xmmword_1BD645380;
  v60 = (char *)v13;
  v22 = String.init<A>(reflecting:)();
  v24 = v23;
  *(_QWORD *)(v21 + 56) = MEMORY[0x1E0DEA968];
  v25 = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v21 + 64) = v25;
  *(_QWORD *)(v21 + 32) = v22;
  *(_QWORD *)(v21 + 40) = v24;
  OUTLINED_FUNCTION_35_31(v25, v26, type metadata accessor for Participant);
  OUTLINED_FUNCTION_75_14();
  v28 = v27;
  v30 = v29;
  OUTLINED_FUNCTION_30_7(v27, &demangling cache variable for type metadata for Participant?);
  *(_QWORD *)(v21 + 96) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v21 + 104) = v25;
  *(_QWORD *)(v21 + 72) = v28;
  *(_QWORD *)(v21 + 80) = v30;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_2_0();
  v31 = *(_QWORD *)v10;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)v10 = v31;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v31 = specialized _ArrayBuffer._consumeAndCreateNew()();
    *(_QWORD *)v10 = v31;
  }
  if (v13 >= *(_QWORD *)(v31 + 16))
  {
    __break(1u);
LABEL_23:
    swift_once();
    goto LABEL_13;
  }
  outlined assign with copy of Participant((uint64_t)v2, v31 + v58 + v57);
  v33 = swift_endAccess();
  if (!OUTLINED_FUNCTION_25_1(v33, sel_isViewLoaded))
    goto LABEL_18;
  v34 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_dataSource];
  if (!v34)
    goto LABEL_18;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Participant>);
  v35 = v58;
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1BD6441D0;
  _s15ConversationKit11ParticipantVWOcTm_2((uint64_t)v2, v13 + v35, type metadata accessor for Participant);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UUID>);
  v31 = OUTLINED_FUNCTION_33_0();
  v10 = (char *)swift_allocObject();
  *((_OWORD *)v10 + 1) = v53;
  v36 = one-time initialization token for shareLinkRowIdentifier;
  v2 = v34;
  if (v36 != -1)
    goto LABEL_23;
LABEL_13:
  v37 = OUTLINED_FUNCTION_37_37(v31, (uint64_t)static InCallControlsCollectionViewController.CollectionViewSection.shareLinkRowIdentifier);
  OUTLINED_FUNCTION_132_7(v37, v38);
  if (one-time initialization token for toggleCaptionsRowIdentifier != -1)
    swift_once();
  v39 = OUTLINED_FUNCTION_37_37(v31, (uint64_t)static InCallControlsCollectionViewController.CollectionViewSection.toggleCaptionsRowIdentifier);
  OUTLINED_FUNCTION_132_7(v39, v40);
  OUTLINED_FUNCTION_80_13(v13, (uint64_t)v10, v2);
  swift_setDeallocating();
  specialized _ContiguousArrayStorage.__deallocating_deinit();
  OUTLINED_FUNCTION_115_9();
  specialized _ContiguousArrayStorage.__deallocating_deinit();

LABEL_18:
  OUTLINED_FUNCTION_52_1();
}

Swift::Void __swiftcall InCallControlsCollectionViewController.updateLocalViews(for:isLocalMemberAuthorizedToChangeGroupMembership:)(Swift::OpaquePointer a1, Swift::Bool isLocalMemberAuthorizedToChangeGroupMembership)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  _QWORD v47[2];
  __int128 v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  Swift::Bool v65;

  v6 = type metadata accessor for Date();
  v62 = *(_QWORD *)(v6 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v7);
  v60 = (char *)v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v9);
  v59 = (char *)v47 - v10;
  v58 = type metadata accessor for Participant.State(0);
  OUTLINED_FUNCTION_1_1();
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)v47 - v15;
  OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_300_0();
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_5_27();
  v57 = v18;
  OUTLINED_FUNCTION_8_4();
  v20 = MEMORY[0x1E0C80A78](v19);
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_18_0();
  v63 = v21;
  OUTLINED_FUNCTION_8_4();
  v23 = MEMORY[0x1E0C80A78](v22);
  v26 = (char *)v47 - v25;
  v27 = *(void **)(v2 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_dataSource);
  if (v27)
  {
    v55 = v24;
    v56 = v23;
    v51 = v6;
    v28 = one-time initialization token for conversationKit;
    v49 = v27;
    if (v28 != -1)
      swift_once();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v29 = OUTLINED_FUNCTION_15();
    v48 = xmmword_1BD6441D0;
    *(_OWORD *)(v29 + 16) = xmmword_1BD6441D0;
    v65 = isLocalMemberAuthorizedToChangeGroupMembership;
    v30 = String.init<A>(reflecting:)();
    v32 = v31;
    *(_QWORD *)(v29 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v29 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v29 + 32) = v30;
    *(_QWORD *)(v29 + 40) = v32;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    v33 = swift_bridgeObjectRelease();
    if (OUTLINED_FUNCTION_25_1(v33, sel_isViewLoaded))
    {
      v47[1] = v2;
      v64 = MEMORY[0x1E0DEE9D8];
      v34 = *((_QWORD *)a1._rawValue + 2);
      v47[0] = swift_bridgeObjectRetain();
      if (v34)
      {
        v54 = v63 + 3;
        OUTLINED_FUNCTION_37_3();
        v61 = *(_QWORD *)(v3 + 72);
        v50 = v35;
        v52 = v14;
        v53 = v16;
        _s15ConversationKit11ParticipantVWOcTm_2(v36 + v35, (uint64_t)v26, type metadata accessor for Participant);
        OUTLINED_FUNCTION_81_15((uint64_t)v26, (uint64_t)v16);
        v37 = (char *)&loc_1BD318B04 + 4 * byte_1BD658710[swift_getEnumCaseMultiPayload()];
        __asm { BR              X9 }
      }
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UUID>);
      v38 = OUTLINED_FUNCTION_33_0();
      v39 = *(_QWORD *)(v38 - 8);
      v40 = (*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
      v41 = swift_allocObject();
      *(_OWORD *)(v41 + 16) = v48;
      v42 = v41 + v40;
      if (one-time initialization token for addParticipantRowIdentifier != -1)
        swift_once();
      OUTLINED_FUNCTION_37_37(v38, (uint64_t)static InCallControlsCollectionViewController.CollectionViewSection.addParticipantRowIdentifier);
      OUTLINED_FUNCTION_139(v42, v43, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v39 + 16));
      v44 = OUTLINED_FUNCTION_65_2();
      v45 = v49;
      OUTLINED_FUNCTION_80_13(v44, v46, v49);

      OUTLINED_FUNCTION_115_9();
      specialized _ContiguousArrayStorage.__deallocating_deinit();
      swift_release();
    }
    else
    {

    }
  }
  else
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.default.getter();
    OUTLINED_FUNCTION_127_5();
    os_log(_:dso:log:type:_:)();
  }
}

void InCallControlsCollectionViewController.update(participant:isKickingAvailable:)()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[3];
  char *v40;

  OUTLINED_FUNCTION_93();
  v2 = v1;
  OUTLINED_FUNCTION_15_6();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_16_2();
  v4 = (uint64_t *)&v0[OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_participants];
  OUTLINED_FUNCTION_1();
  v5 = *v4;
  v39[2] = v2;
  swift_bridgeObjectRetain();
  specialized Collection.firstIndex(where:)((uint64_t)partial apply for closure #1 in ParticipantGridViewController.update(participant:broadcastingState:), (uint64_t)v39, v5, (void (*)(_QWORD))type metadata accessor for Participant);
  v7 = v6;
  LOBYTE(v4) = v8;
  OUTLINED_FUNCTION_21_0();
  if ((v4 & 1) != 0)
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v27 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v27 + 16) = xmmword_1BD645380;
    OUTLINED_FUNCTION_35_31(v27, v28, type metadata accessor for Participant);
    v29 = OUTLINED_FUNCTION_14_2();
    OUTLINED_FUNCTION_69_16(v29);
    v31 = v30;
    v33 = v32;
    OUTLINED_FUNCTION_30_7(v30, &demangling cache variable for type metadata for Participant?);
    v34 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v27 + 56) = MEMORY[0x1E0DEA968];
    v35 = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v27 + 64) = v35;
    *(_QWORD *)(v27 + 32) = v31;
    *(_QWORD *)(v27 + 40) = v33;
    v40 = v0;
    v36 = v0;
    v37 = String.init<A>(reflecting:)();
    *(_QWORD *)(v27 + 96) = v34;
    *(_QWORD *)(v27 + 104) = v35;
    *(_QWORD *)(v27 + 72) = v37;
    *(_QWORD *)(v27 + 80) = v38;
    OUTLINED_FUNCTION_91_11();
    os_log(_:dso:log:type:_:)();
    OUTLINED_FUNCTION_21_0();
  }
  else
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v9 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v9 + 16) = xmmword_1BD645380;
    v40 = v7;
    v10 = String.init<A>(reflecting:)();
    v12 = v11;
    v13 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v9 + 56) = MEMORY[0x1E0DEA968];
    v14 = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v9 + 64) = v14;
    *(_QWORD *)(v9 + 32) = v10;
    *(_QWORD *)(v9 + 40) = v12;
    OUTLINED_FUNCTION_35_31(v14, v15, type metadata accessor for Participant);
    v16 = OUTLINED_FUNCTION_14_2();
    OUTLINED_FUNCTION_75_14();
    v18 = v17;
    v20 = v19;
    OUTLINED_FUNCTION_30_7(v17, &demangling cache variable for type metadata for Participant?);
    *(_QWORD *)(v9 + 96) = v13;
    *(_QWORD *)(v9 + 104) = v14;
    *(_QWORD *)(v9 + 72) = v18;
    *(_QWORD *)(v9 + 80) = v20;
    static os_log_type_t.default.getter();
    OUTLINED_FUNCTION_91_11();
    os_log(_:dso:log:type:_:)();
    v21 = swift_bridgeObjectRelease();
    if (OUTLINED_FUNCTION_25_1(v21, sel_isViewLoaded))
    {
      v22 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_dataSource];
      if (v22)
      {
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Participant>);
        v23 = *(unsigned __int8 *)(*(_QWORD *)(v16 - 8) + 80);
        v24 = (v23 + 32) & ~v23;
        v25 = swift_allocObject();
        *(_OWORD *)(v25 + 16) = xmmword_1BD6441D0;
        _s15ConversationKit11ParticipantVWOcTm_2(v2, v25 + v24, type metadata accessor for Participant);
        v26 = v22;
        OUTLINED_FUNCTION_80_13(v25, 0, v26);
        OUTLINED_FUNCTION_115_9();
        specialized _ContiguousArrayStorage.__deallocating_deinit();

      }
    }
  }
  OUTLINED_FUNCTION_52_1();
}

void InCallControlsCollectionViewController.update(with:updateReason:)()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _BOOL8 v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  _BOOL8 v37;
  char v38;
  char v39;
  _BYTE *v40;
  void (*v41)(uint64_t);
  uint64_t v42;
  _QWORD v43[2];
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  OUTLINED_FUNCTION_93();
  v46 = v0;
  v49 = OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_300_0();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = OUTLINED_FUNCTION_33_0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v47 = (char *)v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v43 - v9;
  Array<A>.filterAndSortForInCallControls()();
  v45 = v11;
  v12 = *(_QWORD *)(v11 + 16);
  if (v12)
  {
    v51 = MEMORY[0x1E0DEE9D8];
    OUTLINED_FUNCTION_77_12();
    OUTLINED_FUNCTION_37_3();
    v14 = v45 + v13;
    v44 = v1;
    v15 = v1[9];
    v48 = v15;
    do
    {
      OUTLINED_FUNCTION_81_15(v14, (uint64_t)v4);
      OUTLINED_FUNCTION_101_13();
      OUTLINED_FUNCTION_139((uint64_t)v10, v16, v17);
      OUTLINED_FUNCTION_94((uint64_t)v4);
      v18 = v51;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_53_31(0, *(_QWORD *)(v18 + 16) + 1);
        v15 = v48;
        v18 = v51;
      }
      v20 = *(_QWORD *)(v18 + 16);
      v19 = *(_QWORD *)(v18 + 24);
      if (v20 >= v19 >> 1)
      {
        v22 = OUTLINED_FUNCTION_138_4(v19);
        OUTLINED_FUNCTION_53_31(v22, v20 + 1);
        v15 = v48;
        v18 = v51;
      }
      *(_QWORD *)(v18 + 16) = v20 + 1;
      OUTLINED_FUNCTION_37_3();
      OUTLINED_FUNCTION_139(v18 + v21 + *(_QWORD *)(v6 + 72) * v20, (uint64_t)v10, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 32));
      v51 = v18;
      v14 += v15;
      --v12;
    }
    while (v12);
    v1 = v44;
  }
  v23 = v46;
  v24 = (uint64_t *)(v46 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_participants);
  OUTLINED_FUNCTION_2_0();
  v25 = *v24;
  v26 = *(_QWORD *)(*v24 + 16);
  if (v26)
  {
    v44 = v24;
    v50 = MEMORY[0x1E0DEE9D8];
    v27 = v25;
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_77_12();
    OUTLINED_FUNCTION_37_3();
    v43[1] = v27;
    v29 = v27 + v28;
    v48 = v1[9];
    v30 = (uint64_t)v47;
    do
    {
      OUTLINED_FUNCTION_81_15(v29, (uint64_t)v4);
      OUTLINED_FUNCTION_101_13();
      OUTLINED_FUNCTION_139(v30, v31, v32);
      OUTLINED_FUNCTION_94((uint64_t)v4);
      v33 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_53_31(0, *(_QWORD *)(v33 + 16) + 1);
        v30 = (uint64_t)v47;
        v33 = v50;
      }
      v35 = *(_QWORD *)(v33 + 16);
      v34 = *(_QWORD *)(v33 + 24);
      if (v35 >= v34 >> 1)
      {
        v37 = OUTLINED_FUNCTION_138_4(v34);
        OUTLINED_FUNCTION_53_31(v37, v35 + 1);
        v30 = (uint64_t)v47;
        v33 = v50;
      }
      *(_QWORD *)(v33 + 16) = v35 + 1;
      OUTLINED_FUNCTION_37_3();
      OUTLINED_FUNCTION_139(v33 + v36 + *(_QWORD *)(v6 + 72) * v35, v30, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 32));
      v50 = v33;
      v29 += v48;
      --v26;
    }
    while (v26);
    swift_bridgeObjectRelease();
    v23 = v46;
    v24 = v44;
  }
  specialized static Array<A>.== infix(_:_:)();
  v39 = v38;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v24 = v45;
  swift_bridgeObjectRelease();
  InCallControlsCollectionViewController.updateDataSource(shouldRefreshParticipants:animatingDifferences:)(1, 1);
  if ((v39 & 1) == 0)
  {
    v40 = (_BYTE *)(v23 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_isOnScreen);
    OUTLINED_FUNCTION_1();
    if (*v40 == 1)
    {
      v41 = *(void (**)(uint64_t))(**(_QWORD **)(v23
                                                         + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_capabilitiesChecker)
                                           + 232);
      v42 = swift_bridgeObjectRetain();
      v41(v42);
      OUTLINED_FUNCTION_13_3();
    }
  }
  OUTLINED_FUNCTION_52_1();
}

Swift::Void __swiftcall InCallControlsCollectionViewController.captioningStateDidChange()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  id *v11;
  id v12;
  Class isa;
  id v14;
  _QWORD *v15;

  v3 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for IndexPath?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_11_2();
  v5 = type metadata accessor for IndexPath();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_16_2();
  v7 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_dataSource);
  if (!v7)
  {
    __swift_storeEnumTagSinglePayload(v2, 1, 1, v5);
LABEL_12:
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v2, (uint64_t *)&demangling cache variable for type metadata for IndexPath?);
    goto LABEL_13;
  }
  v8 = one-time initialization token for toggleCaptionsRowIdentifier;
  v9 = v7;
  if (v8 != -1)
    swift_once();
  v10 = OUTLINED_FUNCTION_33_0();
  __swift_project_value_buffer(v10, (uint64_t)static InCallControlsCollectionViewController.CollectionViewSection.toggleCaptionsRowIdentifier);
  dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)();

  if (__swift_getEnumTagSinglePayload(v2, 1, v5) == 1)
    goto LABEL_12;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v1, v2, v5);
  v11 = (id *)(v3 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_collectionView);
  OUTLINED_FUNCTION_1();
  if (*v11)
  {
    v12 = *v11;
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v14 = objc_msgSend(v12, sel_cellForItemAtIndexPath_, isa);

    if (v14)
    {
      type metadata accessor for InCallControlsToggleCaptionsCell();
      v15 = (_QWORD *)swift_dynamicCastClass();
      if (v15)
        InCallControlsCollectionViewController.configureToggleCaptionsCell(_:)(v15);

    }
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v5);
LABEL_13:
  OUTLINED_FUNCTION_65_1();
}

uint64_t *InCallControlsCollectionViewController.separatorStyle.unsafeMutableAddressor()
{
  if (one-time initialization token for separatorStyle != -1)
    swift_once();
  return &static InCallControlsCollectionViewController.separatorStyle;
}

void InCallControlsCollectionViewController.CollectionViewSection.singleRowIdentifier.getter(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BD3197C8()
{
  uint64_t v0;
  uint64_t v1;

  if (one-time initialization token for titleRowIdentifier != -1)
    swift_once();
  v1 = OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_37_37(v1, (uint64_t)static InCallControlsCollectionViewController.CollectionViewSection.titleRowIdentifier);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v1 - 8) + 16))(v0);
}

void sub_1BD319A7C()
{
  OUTLINED_FUNCTION_58_24();
  __break(1u);
}

uint64_t InCallControlsCollectionViewController.CollectionViewSection.titleRowIdentifier.unsafeMutableAddressor()
{
  return InCallControlsCollectionViewController.CollectionViewSection.titleRowIdentifier.unsafeMutableAddressor(&one-time initialization token for titleRowIdentifier, (uint64_t)static InCallControlsCollectionViewController.CollectionViewSection.titleRowIdentifier);
}

uint64_t InCallControlsCollectionViewController.CollectionViewSection.shareLinkRowIdentifier.unsafeMutableAddressor()
{
  return InCallControlsCollectionViewController.CollectionViewSection.titleRowIdentifier.unsafeMutableAddressor(&one-time initialization token for shareLinkRowIdentifier, (uint64_t)static InCallControlsCollectionViewController.CollectionViewSection.shareLinkRowIdentifier);
}

uint64_t InCallControlsCollectionViewController.CollectionViewSection.titleRowIdentifier.unsafeMutableAddressor(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;

  if (*a1 != -1)
    swift_once();
  v3 = OUTLINED_FUNCTION_33_0();
  return __swift_project_value_buffer(v3, a2);
}

uint64_t InCallControlsCollectionViewController.CollectionViewSection.toggleCaptionsRowIdentifier.unsafeMutableAddressor()
{
  return InCallControlsCollectionViewController.CollectionViewSection.titleRowIdentifier.unsafeMutableAddressor(&one-time initialization token for toggleCaptionsRowIdentifier, (uint64_t)static InCallControlsCollectionViewController.CollectionViewSection.toggleCaptionsRowIdentifier);
}

uint64_t InCallControlsCollectionViewController.CollectionViewSection.toggleIgnoreLMIRequestsRowIdentifier.unsafeMutableAddressor()
{
  return InCallControlsCollectionViewController.CollectionViewSection.titleRowIdentifier.unsafeMutableAddressor(&one-time initialization token for toggleIgnoreLMIRequestsRowIdentifier, (uint64_t)static InCallControlsCollectionViewController.CollectionViewSection.toggleIgnoreLMIRequestsRowIdentifier);
}

uint64_t InCallControlsCollectionViewController.CollectionViewSection.openMessagesRowIdentifier.unsafeMutableAddressor()
{
  return InCallControlsCollectionViewController.CollectionViewSection.titleRowIdentifier.unsafeMutableAddressor(&one-time initialization token for openMessagesRowIdentifier, (uint64_t)static InCallControlsCollectionViewController.CollectionViewSection.openMessagesRowIdentifier);
}

uint64_t InCallControlsCollectionViewController.CollectionViewSection.blockUnkownRowIdentifier.unsafeMutableAddressor()
{
  return InCallControlsCollectionViewController.CollectionViewSection.titleRowIdentifier.unsafeMutableAddressor(&one-time initialization token for blockUnkownRowIdentifier, (uint64_t)static InCallControlsCollectionViewController.CollectionViewSection.blockUnkownRowIdentifier);
}

uint64_t InCallControlsCollectionViewController.CollectionViewSection.blockAllParticipantsRowIdentifier.unsafeMutableAddressor()
{
  return InCallControlsCollectionViewController.CollectionViewSection.titleRowIdentifier.unsafeMutableAddressor(&one-time initialization token for blockAllParticipantsRowIdentifier, (uint64_t)static InCallControlsCollectionViewController.CollectionViewSection.blockAllParticipantsRowIdentifier);
}

uint64_t InCallControlsCollectionViewController.CollectionViewSection.reportUnknownRowIdentifier.unsafeMutableAddressor()
{
  return InCallControlsCollectionViewController.CollectionViewSection.titleRowIdentifier.unsafeMutableAddressor(&one-time initialization token for reportUnknownRowIdentifier, (uint64_t)static InCallControlsCollectionViewController.CollectionViewSection.reportUnknownRowIdentifier);
}

uint64_t InCallControlsCollectionViewController.CollectionViewSection.pttTitleRowIdentifier.unsafeMutableAddressor()
{
  return InCallControlsCollectionViewController.CollectionViewSection.titleRowIdentifier.unsafeMutableAddressor(&one-time initialization token for pttTitleRowIdentifier, (uint64_t)static InCallControlsCollectionViewController.CollectionViewSection.pttTitleRowIdentifier);
}

uint64_t InCallControlsCollectionViewController.CollectionViewSection.leavePTTChannelRowIdentifier.unsafeMutableAddressor()
{
  return InCallControlsCollectionViewController.CollectionViewSection.titleRowIdentifier.unsafeMutableAddressor(&one-time initialization token for leavePTTChannelRowIdentifier, (uint64_t)static InCallControlsCollectionViewController.CollectionViewSection.leavePTTChannelRowIdentifier);
}

uint64_t InCallControlsCollectionViewController.CollectionViewSection.openPTTAppRowIdentifier.unsafeMutableAddressor()
{
  return InCallControlsCollectionViewController.CollectionViewSection.titleRowIdentifier.unsafeMutableAddressor(&one-time initialization token for openPTTAppRowIdentifier, (uint64_t)static InCallControlsCollectionViewController.CollectionViewSection.openPTTAppRowIdentifier);
}

void one-time initialization function for titleRowIdentifier(uint64_t a1)
{
  one-time initialization function for titleRowIdentifier(a1, static InCallControlsCollectionViewController.CollectionViewSection.titleRowIdentifier);
}

uint64_t static InCallControlsCollectionViewController.CollectionViewSection.titleRowIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  return static InCallControlsCollectionViewController.CollectionViewSection.titleRowIdentifier.getter(&one-time initialization token for titleRowIdentifier, (uint64_t)static InCallControlsCollectionViewController.CollectionViewSection.titleRowIdentifier, a1);
}

void one-time initialization function for statusRowIdentifier(uint64_t a1)
{
  one-time initialization function for titleRowIdentifier(a1, static InCallControlsCollectionViewController.CollectionViewSection.statusRowIdentifier);
}

uint64_t InCallControlsCollectionViewController.CollectionViewSection.statusRowIdentifier.unsafeMutableAddressor()
{
  return InCallControlsCollectionViewController.CollectionViewSection.titleRowIdentifier.unsafeMutableAddressor(&one-time initialization token for statusRowIdentifier, (uint64_t)static InCallControlsCollectionViewController.CollectionViewSection.statusRowIdentifier);
}

uint64_t static InCallControlsCollectionViewController.CollectionViewSection.statusRowIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  return static InCallControlsCollectionViewController.CollectionViewSection.titleRowIdentifier.getter(&one-time initialization token for statusRowIdentifier, (uint64_t)static InCallControlsCollectionViewController.CollectionViewSection.statusRowIdentifier, a1);
}

uint64_t static InCallControlsCollectionViewController.CollectionViewSection.titleRowIdentifier.getter@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;

  if (*a1 != -1)
    swift_once();
  v5 = OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_37_37(v5, a2);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3);
}

void one-time initialization function for addParticipantRowIdentifier(uint64_t a1)
{
  one-time initialization function for titleRowIdentifier(a1, static InCallControlsCollectionViewController.CollectionViewSection.addParticipantRowIdentifier);
}

uint64_t InCallControlsCollectionViewController.CollectionViewSection.addParticipantRowIdentifier.unsafeMutableAddressor()
{
  return InCallControlsCollectionViewController.CollectionViewSection.titleRowIdentifier.unsafeMutableAddressor(&one-time initialization token for addParticipantRowIdentifier, (uint64_t)static InCallControlsCollectionViewController.CollectionViewSection.addParticipantRowIdentifier);
}

uint64_t static InCallControlsCollectionViewController.CollectionViewSection.addParticipantRowIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  return static InCallControlsCollectionViewController.CollectionViewSection.titleRowIdentifier.getter(&one-time initialization token for addParticipantRowIdentifier, (uint64_t)static InCallControlsCollectionViewController.CollectionViewSection.addParticipantRowIdentifier, a1);
}

void one-time initialization function for shareLinkRowIdentifier(uint64_t a1)
{
  one-time initialization function for titleRowIdentifier(a1, static InCallControlsCollectionViewController.CollectionViewSection.shareLinkRowIdentifier);
}

uint64_t static InCallControlsCollectionViewController.CollectionViewSection.shareLinkRowIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  return static InCallControlsCollectionViewController.CollectionViewSection.titleRowIdentifier.getter(&one-time initialization token for shareLinkRowIdentifier, (uint64_t)static InCallControlsCollectionViewController.CollectionViewSection.shareLinkRowIdentifier, a1);
}

void one-time initialization function for toggleIgnoreLMIRequestsRowIdentifier(uint64_t a1)
{
  one-time initialization function for titleRowIdentifier(a1, static InCallControlsCollectionViewController.CollectionViewSection.toggleIgnoreLMIRequestsRowIdentifier);
}

uint64_t static InCallControlsCollectionViewController.CollectionViewSection.toggleIgnoreLMIRequestsRowIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  return static InCallControlsCollectionViewController.CollectionViewSection.titleRowIdentifier.getter(&one-time initialization token for toggleIgnoreLMIRequestsRowIdentifier, (uint64_t)static InCallControlsCollectionViewController.CollectionViewSection.toggleIgnoreLMIRequestsRowIdentifier, a1);
}

void one-time initialization function for toggleCaptionsRowIdentifier(uint64_t a1)
{
  one-time initialization function for titleRowIdentifier(a1, static InCallControlsCollectionViewController.CollectionViewSection.toggleCaptionsRowIdentifier);
}

uint64_t static InCallControlsCollectionViewController.CollectionViewSection.toggleCaptionsRowIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  return static InCallControlsCollectionViewController.CollectionViewSection.titleRowIdentifier.getter(&one-time initialization token for toggleCaptionsRowIdentifier, (uint64_t)static InCallControlsCollectionViewController.CollectionViewSection.toggleCaptionsRowIdentifier, a1);
}

void one-time initialization function for openMessagesRowIdentifier(uint64_t a1)
{
  one-time initialization function for titleRowIdentifier(a1, static InCallControlsCollectionViewController.CollectionViewSection.openMessagesRowIdentifier);
}

uint64_t static InCallControlsCollectionViewController.CollectionViewSection.openMessagesRowIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  return static InCallControlsCollectionViewController.CollectionViewSection.titleRowIdentifier.getter(&one-time initialization token for openMessagesRowIdentifier, (uint64_t)static InCallControlsCollectionViewController.CollectionViewSection.openMessagesRowIdentifier, a1);
}

void one-time initialization function for blockUnkownRowIdentifier(uint64_t a1)
{
  one-time initialization function for titleRowIdentifier(a1, static InCallControlsCollectionViewController.CollectionViewSection.blockUnkownRowIdentifier);
}

uint64_t static InCallControlsCollectionViewController.CollectionViewSection.blockUnkownRowIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  return static InCallControlsCollectionViewController.CollectionViewSection.titleRowIdentifier.getter(&one-time initialization token for blockUnkownRowIdentifier, (uint64_t)static InCallControlsCollectionViewController.CollectionViewSection.blockUnkownRowIdentifier, a1);
}

void one-time initialization function for blockAllParticipantsRowIdentifier(uint64_t a1)
{
  one-time initialization function for titleRowIdentifier(a1, static InCallControlsCollectionViewController.CollectionViewSection.blockAllParticipantsRowIdentifier);
}

uint64_t static InCallControlsCollectionViewController.CollectionViewSection.blockAllParticipantsRowIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  return static InCallControlsCollectionViewController.CollectionViewSection.titleRowIdentifier.getter(&one-time initialization token for blockAllParticipantsRowIdentifier, (uint64_t)static InCallControlsCollectionViewController.CollectionViewSection.blockAllParticipantsRowIdentifier, a1);
}

void one-time initialization function for reportUnknownRowIdentifier(uint64_t a1)
{
  one-time initialization function for titleRowIdentifier(a1, static InCallControlsCollectionViewController.CollectionViewSection.reportUnknownRowIdentifier);
}

uint64_t static InCallControlsCollectionViewController.CollectionViewSection.reportUnknownRowIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  return static InCallControlsCollectionViewController.CollectionViewSection.titleRowIdentifier.getter(&one-time initialization token for reportUnknownRowIdentifier, (uint64_t)static InCallControlsCollectionViewController.CollectionViewSection.reportUnknownRowIdentifier, a1);
}

void one-time initialization function for pttTitleRowIdentifier(uint64_t a1)
{
  one-time initialization function for titleRowIdentifier(a1, static InCallControlsCollectionViewController.CollectionViewSection.pttTitleRowIdentifier);
}

uint64_t static InCallControlsCollectionViewController.CollectionViewSection.pttTitleRowIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  return static InCallControlsCollectionViewController.CollectionViewSection.titleRowIdentifier.getter(&one-time initialization token for pttTitleRowIdentifier, (uint64_t)static InCallControlsCollectionViewController.CollectionViewSection.pttTitleRowIdentifier, a1);
}

void one-time initialization function for leavePTTChannelRowIdentifier(uint64_t a1)
{
  one-time initialization function for titleRowIdentifier(a1, static InCallControlsCollectionViewController.CollectionViewSection.leavePTTChannelRowIdentifier);
}

uint64_t static InCallControlsCollectionViewController.CollectionViewSection.leavePTTChannelRowIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  return static InCallControlsCollectionViewController.CollectionViewSection.titleRowIdentifier.getter(&one-time initialization token for leavePTTChannelRowIdentifier, (uint64_t)static InCallControlsCollectionViewController.CollectionViewSection.leavePTTChannelRowIdentifier, a1);
}

void one-time initialization function for openPTTAppRowIdentifier(uint64_t a1)
{
  one-time initialization function for titleRowIdentifier(a1, static InCallControlsCollectionViewController.CollectionViewSection.openPTTAppRowIdentifier);
}

void one-time initialization function for titleRowIdentifier(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = OUTLINED_FUNCTION_33_0();
  __swift_allocate_value_buffer(v3, a2);
  v4 = OUTLINED_FUNCTION_21_6();
  __swift_project_value_buffer(v4, v5);
  UUID.init()();
  OUTLINED_FUNCTION_0();
}

uint64_t static InCallControlsCollectionViewController.CollectionViewSection.openPTTAppRowIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  return static InCallControlsCollectionViewController.CollectionViewSection.titleRowIdentifier.getter(&one-time initialization token for openPTTAppRowIdentifier, (uint64_t)static InCallControlsCollectionViewController.CollectionViewSection.openPTTAppRowIdentifier, a1);
}

ConversationKit::InCallControlsCollectionViewController::CollectionViewSection_optional __swiftcall InCallControlsCollectionViewController.CollectionViewSection.init(rawValue:)(Swift::String rawValue)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = rawValue._object;
  v2._countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of InCallControlsCollectionViewController.CollectionViewSection.init(rawValue:), v2);
  OUTLINED_FUNCTION_13_3();
  if (v3 >= 0xE)
    return (ConversationKit::InCallControlsCollectionViewController::CollectionViewSection_optional)14;
  else
    return (ConversationKit::InCallControlsCollectionViewController::CollectionViewSection_optional)v3;
}

void *static InCallControlsCollectionViewController.CollectionViewSection.allCases.getter()
{
  return &outlined read-only object #0 of static InCallControlsCollectionViewController.CollectionViewSection.allCases.getter;
}

uint64_t InCallControlsCollectionViewController.CollectionViewSection.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BD319FF0 + 4 * byte_1BD658725[a1]))(0x656C746974, 0xE500000000000000);
}

uint64_t sub_1BD319FF0()
{
  return 0x41746E6572727563;
}

uint64_t sub_1BD31A014()
{
  return 0x7069636974726170;
}

uint64_t sub_1BD31A034()
{
  return 0x6572616873;
}

uint64_t sub_1BD31A044()
{
  return 0x6143656C67676F74;
}

unint64_t sub_1BD31A068()
{
  return 0xD000000000000017;
}

uint64_t sub_1BD31A088()
{
  return 0x7373654D6E65706FLL;
}

uint64_t sub_1BD31A0A8()
{
  return 0x6B636F6C62;
}

unint64_t sub_1BD31A0B8()
{
  return 0xD000000000000014;
}

uint64_t sub_1BD31A0D4()
{
  return 0x74726F706572;
}

uint64_t sub_1BD31A0E8()
{
  return 0x646E416B636F6C62;
}

uint64_t sub_1BD31A10C()
{
  return 0x656C746954747470;
}

uint64_t sub_1BD31A124()
{
  return 0x545450657661656CLL;
}

uint64_t sub_1BD31A148()
{
  return 0x415454506E65706FLL;
}

void protocol witness for static Equatable.== infix(_:_:) in conformance InCallControlsCollectionViewController.CollectionViewSection(unsigned __int8 *a1, unsigned __int8 *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance InCallControlsCollectionViewController.CollectionViewSection()
{
  unsigned __int8 *v0;

  specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance InCallControlsCollectionViewController.CollectionViewSection(uint64_t a1)
{
  unsigned __int8 *v1;

  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance InCallControlsCollectionViewController.CollectionViewSection(uint64_t a1)
{
  unsigned __int8 *v1;

  specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

ConversationKit::InCallControlsCollectionViewController::CollectionViewSection_optional protocol witness for RawRepresentable.init(rawValue:) in conformance InCallControlsCollectionViewController.CollectionViewSection@<W0>(Swift::String *a1@<X0>, ConversationKit::InCallControlsCollectionViewController::CollectionViewSection_optional *a2@<X8>)
{
  ConversationKit::InCallControlsCollectionViewController::CollectionViewSection_optional result;

  result.value = InCallControlsCollectionViewController.CollectionViewSection.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance InCallControlsCollectionViewController.CollectionViewSection(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t v3;

  *a1 = InCallControlsCollectionViewController.CollectionViewSection.rawValue.getter(*v1);
  a1[1] = v3;
  OUTLINED_FUNCTION_0();
}

void protocol witness for static CaseIterable.allCases.getter in conformance InCallControlsCollectionViewController.CollectionViewSection(_QWORD *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static InCallControlsCollectionViewController.CollectionViewSection.allCases.getter;
}

void InCallControlsCollectionViewController.participants.getter()
{
  OUTLINED_FUNCTION_1();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_32();
}

void one-time initialization function for separatorStyle()
{
  void *v0;

  v0 = (void *)objc_opt_self();
  if (one-time initialization token for backgroundBlurEffect != -1)
    swift_once();
  static InCallControlsCollectionViewController.separatorStyle = (uint64_t)objc_msgSend(v0, sel__effectForBlurEffect_vibrancyStyle_, static Colors.InCallControls.backgroundBlurEffect, 120);
  OUTLINED_FUNCTION_0();
}

id static InCallControlsCollectionViewController.separatorStyle.getter()
{
  if (one-time initialization token for separatorStyle != -1)
    swift_once();
  return (id)static InCallControlsCollectionViewController.separatorStyle;
}

id InCallControlsCollectionViewController.featureFlags.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController____lazy_storage___featureFlags;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController____lazy_storage___featureFlags);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController____lazy_storage___featureFlags);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DBD2F0]), sel_init);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

void InCallControlsCollectionViewController.activity.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;

  OUTLINED_FUNCTION_1();
  v0 = OUTLINED_FUNCTION_21_6();
  outlined init with copy of Participant.ScreenInfo?(v0, v1, v2);
  OUTLINED_FUNCTION_32();
}

void key path getter for InCallControlsCollectionViewController.activity : InCallControlsCollectionViewController(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_activity;
  swift_beginAccess();
  outlined init with copy of Participant.ScreenInfo?(v3, a2, &demangling cache variable for type metadata for Activity?);
}

void key path setter for InCallControlsCollectionViewController.activity : InCallControlsCollectionViewController(uint64_t a1)
{
  _BYTE v1[40];

  outlined init with copy of Participant.ScreenInfo?(a1, (uint64_t)v1, &demangling cache variable for type metadata for Activity?);
  InCallControlsCollectionViewController.activity.setter((uint64_t)v1);
}

uint64_t InCallControlsCollectionViewController.updateDataSource(shouldRefreshParticipants:animatingDifferences:)(char a1, char a2)
{
  uint64_t v2;

  if ((a1 & 1) != 0)
    *(_BYTE *)(v2
             + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_updateDataSourceNeedsRefreshParticipants) = 1;
  if ((a2 & 1) != 0)
    *(_BYTE *)(v2
             + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_updateDataSourceNeedsAnimatedDifferences) = 1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PassthroughSubject<(), Never>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(lazy protocol witness table cache variable for type PassthroughSubject<(), Never> and conformance PassthroughSubject<A, B>, &demangling cache variable for type metadata for PassthroughSubject<(), Never>);
  return Subject<>.send()();
}

void InCallControlsCollectionViewController.updateActivityHeader()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  _QWORD v15[2];
  __int128 v16;
  uint64_t v17;
  _BYTE v18[40];

  v1 = v0;
  v2 = type metadata accessor for IndexPath();
  MEMORY[0x1E0C80A78](v2);
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSDiffableDataSourceSnapshot<InCallControlsCollectionViewController.CollectionViewSection, UUID>);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v0 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_activity;
  swift_beginAccess();
  outlined init with copy of Participant.ScreenInfo?(v7, (uint64_t)&v16, &demangling cache variable for type metadata for Activity?);
  if (v17)
  {
    outlined init with take of Notice(&v16, (uint64_t)v18);
    v8 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_dataSource);
    if (v8)
    {
      v9 = v8;
      dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

      v10 = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      if (*(_QWORD *)(v10 + 16))
      {
        v15[0] = "equests";
        v15[1] = "e";
        __asm { BR              X9 }
      }
      swift_bridgeObjectRelease();
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  }
  else
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v16, &demangling cache variable for type metadata for Activity?);
  }
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v11 = type metadata accessor for Logger();
  __swift_project_value_buffer(v11, (uint64_t)&static Logger.conversationControls);
  v12 = Logger.logObject.getter();
  v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v14 = 0;
    _os_log_impl(&dword_1BD004000, v12, v13, "Can't find activity header or remote participant count didn't change, skip updating activity header", v14, 2u);
    MEMORY[0x1C3B751B8](v14, -1, -1);
  }

}

void InCallControlsCollectionViewController.activity.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void InCallControlsCollectionViewController.activity.modify()
{
  char v0;

  OUTLINED_FUNCTION_551();
  if ((v0 & 1) == 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PassthroughSubject<(), Never>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(lazy protocol witness table cache variable for type PassthroughSubject<(), Never> and conformance PassthroughSubject<A, B>, &demangling cache variable for type metadata for PassthroughSubject<(), Never>);
    OUTLINED_FUNCTION_111_8();
    InCallControlsCollectionViewController.updateActivityHeader()();
  }
  OUTLINED_FUNCTION_18();
}

void InCallControlsCollectionViewController.conversation.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_64_11();
  OUTLINED_FUNCTION_32();
}

id key path getter for InCallControlsCollectionViewController.conversation : InCallControlsCollectionViewController@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  void **v3;
  void *v4;

  v3 = (void **)(*a1 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_conversation);
  swift_beginAccess();
  v4 = *v3;
  *a2 = *v3;
  return v4;
}

void key path setter for InCallControlsCollectionViewController.conversation : InCallControlsCollectionViewController(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  InCallControlsCollectionViewController.conversation.setter(v1);
}

void InCallControlsCollectionViewController.conversation.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void InCallControlsCollectionViewController.conversation.modify()
{
  char v0;

  OUTLINED_FUNCTION_551();
  if ((v0 & 1) == 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PassthroughSubject<(), Never>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(lazy protocol witness table cache variable for type PassthroughSubject<(), Never> and conformance PassthroughSubject<A, B>, &demangling cache variable for type metadata for PassthroughSubject<(), Never>);
    Subject<>.send()();
  }
  OUTLINED_FUNCTION_18();
}

void InCallControlsCollectionViewController.mode.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

uint64_t key path getter for InCallControlsCollectionViewController.mode : InCallControlsCollectionViewController@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_mode);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void InCallControlsCollectionViewController.mode.didset(char a1)
{
  swift_beginAccess();
  __asm { BR              X11 }
}

uint64_t sub_1BD31ACF0@<X0>(unsigned int a1@<W8>)
{
  uint64_t result;

  if (a1 >= 0x20)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PassthroughSubject<(), Never>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(lazy protocol witness table cache variable for type PassthroughSubject<(), Never> and conformance PassthroughSubject<A, B>, &demangling cache variable for type metadata for PassthroughSubject<(), Never>);
    return Subject<>.send()();
  }
  return result;
}

void InCallControlsCollectionViewController.mode.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  _BYTE *v3;

  v2 = OUTLINED_FUNCTION_38_1();
  *v0 = v2;
  v2[3] = v1;
  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_mode);
  OUTLINED_FUNCTION_1();
  *((_BYTE *)v2 + 32) = *v3;
  OUTLINED_FUNCTION_18();
}

void InCallControlsCollectionViewController.mode.modify(uint64_t a1)
{
  void *v1;

  v1 = *(void **)a1;
  InCallControlsCollectionViewController.mode.setter(*(_BYTE *)(*(_QWORD *)a1 + 32));
  free(v1);
}

void InCallControlsCollectionViewController.gridLayoutStyle.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;
  _BYTE *v3;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_gridLayoutStyle);
  OUTLINED_FUNCTION_1();
  *a1 = *v3;
  OUTLINED_FUNCTION_32();
}

uint64_t key path getter for InCallControlsCollectionViewController.gridLayoutStyle : InCallControlsCollectionViewController@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_gridLayoutStyle);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void key path setter for InCallControlsCollectionViewController.gridLayoutStyle : InCallControlsCollectionViewController(unsigned __int8 *a1)
{
  unsigned __int8 v1;

  v1 = *a1;
  InCallControlsCollectionViewController.gridLayoutStyle.setter(&v1);
}

uint64_t InCallControlsCollectionViewController.gridLayoutStyle.didset(unsigned __int8 *a1)
{
  uint64_t v1;
  int v2;
  unsigned __int8 *v3;
  uint64_t result;

  v2 = *a1;
  v3 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_gridLayoutStyle);
  result = swift_beginAccess();
  if (v2 != *v3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PassthroughSubject<(), Never>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(lazy protocol witness table cache variable for type PassthroughSubject<(), Never> and conformance PassthroughSubject<A, B>, &demangling cache variable for type metadata for PassthroughSubject<(), Never>);
    return Subject<>.send()();
  }
  return result;
}

void InCallControlsCollectionViewController.gridLayoutStyle.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  _BYTE *v3;

  v2 = OUTLINED_FUNCTION_38_1();
  *v0 = v2;
  v2[3] = v1;
  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_gridLayoutStyle);
  OUTLINED_FUNCTION_1();
  *((_BYTE *)v2 + 32) = *v3;
  OUTLINED_FUNCTION_18();
}

void InCallControlsCollectionViewController.gridLayoutStyle.modify(uint64_t a1, char a2)
{
  void *v2;
  unsigned __int8 *v3;
  char v4;
  char v5;

  v2 = *(void **)a1;
  if ((a2 & 1) != 0)
  {
    v4 = *(_BYTE *)(*(_QWORD *)a1 + 32);
    v3 = (unsigned __int8 *)&v4;
  }
  else
  {
    v5 = *(_BYTE *)(*(_QWORD *)a1 + 32);
    v3 = (unsigned __int8 *)&v5;
  }
  InCallControlsCollectionViewController.gridLayoutStyle.setter(v3);
  free(v2);
}

void InCallControlsCollectionViewController.isOnScreen.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

uint64_t key path getter for InCallControlsCollectionViewController.isOnScreen : InCallControlsCollectionViewController@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_isOnScreen);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void InCallControlsCollectionViewController.isOnScreen.willset(char a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  unsigned __int8 *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  void (*v14)(uint64_t);
  uint64_t v15;

  v2 = v1;
  v3 = a1 & 1;
  v4 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_isOnScreen);
  OUTLINED_FUNCTION_1();
  if (*v4 != v3)
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v5 = type metadata accessor for Logger();
    __swift_project_value_buffer(v5, (uint64_t)&static Logger.conversationControls);
    v6 = Logger.logObject.getter();
    v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v8 = 67109120;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl(&dword_1BD004000, v6, v7, "InCallControlsCollectionViewController isOnScreen %{BOOL}d", v8, 8u);
      OUTLINED_FUNCTION_60();
    }

    v9 = OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_updatedCapabilitiesWithParticipants;
    if ((*(_BYTE *)(v2
                   + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_updatedCapabilitiesWithParticipants) & 1) == 0)
    {
      v10 = Logger.logObject.getter();
      v11 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v10, v11))
      {
        v12 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v12 = 0;
        _os_log_impl(&dword_1BD004000, v10, v11, "InCallControlsCollectionViewController updating capabilities with first participant list", v12, 2u);
        OUTLINED_FUNCTION_60();
      }

      v13 = *(_QWORD *)(v2
                      + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_capabilitiesChecker);
      OUTLINED_FUNCTION_1();
      v14 = *(void (**)(uint64_t))(*(_QWORD *)v13 + 232);
      v15 = swift_bridgeObjectRetain();
      v14(v15);
      OUTLINED_FUNCTION_2_1();
      *(_BYTE *)(v2 + v9) = 1;
    }
  }
}

void InCallControlsCollectionViewController.isOnScreen.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _BYTE *v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_isOnScreen;
  v3[3] = v1;
  v3[4] = v4;
  v5 = (_BYTE *)(v1 + v4);
  OUTLINED_FUNCTION_65_2();
  OUTLINED_FUNCTION_2_0();
  *((_BYTE *)v3 + 40) = *v5;
  OUTLINED_FUNCTION_18();
}

void InCallControlsCollectionViewController.isOnScreen.modify(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v1 = *(void **)a1;
  v2 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v4 = *(_BYTE *)(*(_QWORD *)a1 + 40);
  InCallControlsCollectionViewController.isOnScreen.willset(v4);
  *(_BYTE *)(v2 + v3) = v4;
  OUTLINED_FUNCTION_4_2(v1);
}

void InCallControlsCollectionViewController.controlsManager.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_64_11();
  OUTLINED_FUNCTION_32();
}

void InCallControlsCollectionViewController.controlsManager.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;

  v3 = (void **)(v1 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_controlsManager);
  OUTLINED_FUNCTION_2_0();
  v4 = *v3;
  *v3 = a1;

  OUTLINED_FUNCTION_32();
}

void InCallControlsCollectionViewController.controlsManager.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void InCallControlsCollectionViewController.remoteAudioPaused.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

void InCallControlsCollectionViewController.remoteAudioPaused.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_remoteAudioPaused);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  OUTLINED_FUNCTION_32();
}

void InCallControlsCollectionViewController.remoteAudioPaused.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void InCallControlsCollectionViewController.participantsViewControllerDelegate.getter()
{
  ParticipantGridViewController.participantsViewControllerDelegate.getter();
}

void InCallControlsCollectionViewController.participantsViewControllerDelegate.setter(uint64_t a1, uint64_t a2)
{
  InCallControlsCollectionViewController.participantsViewControllerDelegate.setter(a1, a2, &OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_participantsViewControllerDelegate);
}

void InCallControlsCollectionViewController.participantsViewControllerDelegate.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2 = OUTLINED_FUNCTION_45();
  *v0 = v2;
  v3 = OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_participantsViewControllerDelegate;
  v2[5] = v1;
  v2[6] = v3;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_26();
}

void sub_1BD31B514(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v3;
  OUTLINED_FUNCTION_18();
}

void key path getter for InCallControlsCollectionViewController.participantsViewControllerDelegate : InCallControlsCollectionViewController()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_185_0();
}

void sub_1BD31B564(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v2 + 8);
  *v1 = a1;
  v1[1] = v3;
  OUTLINED_FUNCTION_32();
}

void key path setter for InCallControlsCollectionViewController.participantsViewControllerDelegate : InCallControlsCollectionViewController(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t v6;

  v5 = *(_QWORD *)(a1 + 8);
  v6 = *a2 + *a5;
  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v6 + 8) = v5;
  OUTLINED_FUNCTION_21_6();
  swift_unknownObjectWeakAssign();
  OUTLINED_FUNCTION_9_0();
}

void InCallControlsCollectionViewController.inCallControlsCollectionViewControllerDelegate.getter()
{
  ParticipantGridViewController.participantsViewControllerDelegate.getter();
}

void InCallControlsCollectionViewController.inCallControlsCollectionViewControllerDelegate.setter(uint64_t a1, uint64_t a2)
{
  InCallControlsCollectionViewController.participantsViewControllerDelegate.setter(a1, a2, &OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_inCallControlsCollectionViewControllerDelegate);
}

void InCallControlsCollectionViewController.participantsViewControllerDelegate.setter(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v5;

  v5 = v3 + *a3;
  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v5 + 8) = a2;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_9_0();
}

void InCallControlsCollectionViewController.inCallControlsCollectionViewControllerDelegate.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2 = OUTLINED_FUNCTION_45();
  *v0 = v2;
  v3 = OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_inCallControlsCollectionViewControllerDelegate;
  v2[5] = v1;
  v2[6] = v3;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_26();
}

void sub_1BD31B668(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v3;
  OUTLINED_FUNCTION_18();
}

void InCallControlsCollectionViewController.collectionView.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_64_11();
  OUTLINED_FUNCTION_32();
}

uint64_t InCallControlsCollectionViewController.isAddingParticipantsAllowed.getter()
{
  uint64_t v0;
  _BYTE *v1;
  id *v2;
  void *v3;
  uint64_t result;
  _BYTE *v5;
  id v6;
  unsigned __int8 v7;

  v1 = (_BYTE *)(v0 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_mode);
  OUTLINED_FUNCTION_1();
  if ((*v1 & 0xE0) == 0x20)
    return 0;
  v2 = (id *)(v0 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_conversation);
  OUTLINED_FUNCTION_1();
  if (*v2)
  {
    if (objc_msgSend(*v2, sel_state) != (id)3)
      return 0;
  }
  if ((InCallControlsCollectionViewController.isLocalMemberAuthorizedToChangeGroupMembership.getter() & 1) == 0)
    return 0;
  v3 = (void *)objc_opt_self();
  result = (uint64_t)objc_msgSend(v3, sel_supportsConversations);
  if (!(_DWORD)result)
    return result;
  v5 = (_BYTE *)(v0 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_remoteAudioPaused);
  OUTLINED_FUNCTION_1();
  if ((*v5 & 1) != 0)
    return 0;
  if (*v2)
  {
    v6 = *v2;
    if ((objc_msgSend(v6, sel_isVideo) & 1) != 0)
    {

    }
    else
    {
      v7 = objc_msgSend(v6, sel_isBackedByGroupSession);

      if ((v7 & 1) == 0)
        return 0;
    }
  }
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_isLegacy) == 1)
    return (uint64_t)objc_msgSend(v3, sel_isAddPersonEnabled);
  else
    return 1;
}

uint64_t InCallControlsCollectionViewController.isLocalMemberAuthorizedToChangeGroupMembership.getter()
{
  uint64_t v0;
  id *v1;
  id v2;
  char v3;

  v1 = (id *)(v0 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_conversation);
  swift_beginAccess();
  if (*v1)
  {
    v2 = *v1;
    v3 = specialized Conversation.isLocalMemberAuthorizedToChangeGroupMembership()();

  }
  else
  {
    v3 = 0;
  }
  return v3 & 1;
}

uint64_t InCallControlsCollectionViewController.isLinkSharingAllowed.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  id *v12;
  id v13;
  BOOL v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char *v21;
  uint64_t v22;
  _QWORD v24[2];

  v1 = v0;
  v2 = type metadata accessor for Participant.State(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Participant(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v24 - v10;
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_shareLinkEnabled) != 1)
    return 0;
  if (!objc_msgSend((id)objc_opt_self(), sel_supportsConversations))
    return 0;
  v12 = (id *)(v0 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_conversation);
  swift_beginAccess();
  if (!*v12)
    return 0;
  v13 = *v12;
  v14 = specialized Conversation.isLinkSharingSupported.getter();

  if (!v14)
    return 0;
  v15 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_participants);
  swift_beginAccess();
  v16 = *v15;
  v17 = *(_QWORD *)(*v15 + 16);
  if (!v17)
    return 1;
  v24[0] = *v15;
  v24[1] = v2;
  v18 = v16 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  v19 = *(_QWORD *)(v6 + 72);
  swift_bridgeObjectRetain();
  do
  {
    _s15ConversationKit11ParticipantVWOcTm_2(v18, (uint64_t)v11, type metadata accessor for Participant);
    v20 = v11[*(int *)(v5 + 24) + 2];
    _s15ConversationKit11ParticipantVWOcTm_2((uint64_t)v11, (uint64_t)v9, type metadata accessor for Participant);
    if ((v20 & 1) == 0)
    {
      _s15ConversationKit11ParticipantVWOcTm_2((uint64_t)v9, (uint64_t)v4, type metadata accessor for Participant.State);
      v21 = (char *)&loc_1BD31BA44 + 4 * byte_1BD658739[swift_getEnumCaseMultiPayload()];
      __asm { BR              X9 }
    }
    outlined destroy of AccountUpdateNotice((uint64_t)v9, type metadata accessor for Participant);
    outlined destroy of AccountUpdateNotice((uint64_t)v11, type metadata accessor for Participant);
    v18 += v19;
    --v17;
  }
  while (v17);
  v22 = 1;
  swift_bridgeObjectRelease();
  return v22;
}

void sub_1BD31BAC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
  v4 = v0 + *(int *)(v3 + 48);
  outlined consume of Participant.CopresenceInfo?(*(_QWORD *)(v0 + *(int *)(v3 + 64)), *(_QWORD *)(v0 + *(int *)(v3 + 64) + 8));
  outlined destroy of Participant.MediaInfo(v4);
  v5 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v0, v5);
  outlined destroy of AccountUpdateNotice(v1, type metadata accessor for Participant);
  outlined destroy of AccountUpdateNotice(v2, type metadata accessor for Participant);
  JUMPOUT(0x1BD31BA88);
}

BOOL specialized Conversation.isLinkSharingSupported.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  _BOOL8 v4;
  uint64_t v6;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  @nonobjc TUConversation.messagesGroupUUID.getter();
  v3 = type metadata accessor for UUID();
  v4 = __swift_getEnumTagSinglePayload((uint64_t)v2, 1, v3) == 1;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v2, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  return v4;
}

uint64_t specialized Conversation.isLocalMemberAuthorizedToChangeGroupMembership()()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  id v4;

  v1 = objc_msgSend(v0, sel_localMember);

  if (!v1)
    return (uint64_t)objc_msgSend(v0, sel_isOneToOneModeEnabled);
  v2 = objc_msgSend(v0, sel_link);
  if (!v2)
    return 1;
  v3 = v2;
  v4 = objc_msgSend(v2, sel_canCreateConversations);

  return (uint64_t)v4;
}

uint64_t InCallControlsCollectionViewController.isLiveCaptionsAllowed.getter()
{
  id v0;
  id v1;

  if (static Platform.current.getter() != 2)
    return 1;
  if (static Platform.current.getter() != 2)
    return 0;
  v0 = InCallControlsCollectionViewController.featureFlags.getter();
  v1 = objc_msgSend(v0, sel_lagunaLiveCaptionsEnabled);

  return (uint64_t)v1;
}

void InCallControlsCollectionViewController.init(conversation:participants:mode:gridLayoutStyle:isLegacy:shareLinkEnabled:menuHostViewController:)()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  void *v3;
  char v4;
  char v5;
  char *v6;
  char *v7;
  char v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  char *v19;
  char *v20;
  void **v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  char *v50;
  void (*v51)(char *, _UNKNOWN **);
  char *v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  unint64_t v67;
  char v68;
  char v69;
  char v70;
  char v71;
  objc_class *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  id v82;
  objc_super v83;
  _QWORD v84[12];

  OUTLINED_FUNCTION_93();
  v1 = v0;
  v73 = v2;
  v81 = v3;
  v71 = v4;
  v70 = v5;
  v7 = v6;
  v69 = v8;
  v10 = v9;
  v72 = (objc_class *)OUTLINED_FUNCTION_15_6();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_41();
  v75 = v12;
  v13 = type metadata accessor for NSRunLoop.SchedulerTimeType.Stride();
  v77 = *(_QWORD *)(v13 - 8);
  v78 = v13;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_33_18(v15);
  v79 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.Debounce<PassthroughSubject<(), Never>, NSRunLoop>);
  v80 = *(_QWORD *)(v79 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_41();
  v76 = v17;
  v68 = *v7;
  v0[OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_updatedCapabilitiesWithParticipants] = 0;
  v18 = &v0[OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_participants];
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_participants] = MEMORY[0x1E0DEE9D8];
  v19 = &v0[OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_menuHostViewController];
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_menuHostViewController + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController____lazy_storage___featureFlags] = 0;
  v20 = &v0[OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_activity];
  *(_OWORD *)v20 = 0u;
  *((_OWORD *)v20 + 1) = 0u;
  *((_QWORD *)v20 + 4) = 0;
  v21 = (void **)&v0[OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_conversation];
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_conversation] = 0;
  v0[OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_isOnScreen] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_controlsManager] = 0;
  v0[OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_remoteAudioPaused] = 0;
  OUTLINED_FUNCTION_18_1(OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_participantsViewControllerDelegate);
  OUTLINED_FUNCTION_18_1(OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_inCallControlsCollectionViewControllerDelegate);
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_collectionView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_dataSource] = 0;
  v22 = OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_shareLinkEnabled;
  v0[OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_shareLinkEnabled] = 0;
  v0[OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_updateDataSourceNeedsRefreshParticipants] = 0;
  v0[OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_updateDataSourceNeedsAnimatedDifferences] = 0;
  v23 = OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_updateDataSourceSubject;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PassthroughSubject<(), Never>);
  OUTLINED_FUNCTION_14_0();
  v24 = v0;
  *(_QWORD *)&v0[v23] = PassthroughSubject.init()();
  *(_QWORD *)&v24[OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_updateDataSourceDebouncer] = 0;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.SupplementaryRegistration<InCallControlsSectionHeaderView>);
  OUTLINED_FUNCTION_12_7(v25);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsActivityCell, UUID>);
  OUTLINED_FUNCTION_12_7(v26);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsTitleCell, UUID>);
  OUTLINED_FUNCTION_12_7(v27);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsStatusCell, UUID>);
  OUTLINED_FUNCTION_12_7(v28);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsParticipantCell, UUID>);
  OUTLINED_FUNCTION_12_7(v29);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsAddParticipantCell, UUID>);
  OUTLINED_FUNCTION_12_7(v30);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsShareLinkCell, UUID>);
  OUTLINED_FUNCTION_12_7(v31);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsIgnoreLMIRequestsCell, UUID>);
  OUTLINED_FUNCTION_12_7(v32);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsToggleCaptionsCell, UUID>);
  OUTLINED_FUNCTION_12_7(v33);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<UICollectionViewListCell, UUID>);
  OUTLINED_FUNCTION_12_7(v34);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsOpenMessagesCell, UUID>);
  OUTLINED_FUNCTION_12_7(v35);
  v36 = (uint64_t)&v24[OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_blockUnknownCallerCellRegistration];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsBlockCell, UUID>);
  OUTLINED_FUNCTION_31_43(v36, 1);
  OUTLINED_FUNCTION_31_43((uint64_t)&v24[OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_blockAllUnknownCallersCellRegistration], 1);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsReportCell, UUID>);
  OUTLINED_FUNCTION_12_7(v37);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsPTTTitleCell, UUID>);
  OUTLINED_FUNCTION_12_7(v38);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsPTTLeaveChannelCell, UUID>);
  OUTLINED_FUNCTION_12_7(v39);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.SupplementaryRegistration<InCallControlsPTTLeaveChannelFooterView>);
  OUTLINED_FUNCTION_12_7(v40);
  v41 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsPTTOpenAppCell, UUID>);
  OUTLINED_FUNCTION_12_7(v41);
  OUTLINED_FUNCTION_2_0();
  v42 = *v21;
  *v21 = v10;
  v10;

  Array<A>.filterAndSortForInCallControls()();
  v44 = v43;
  OUTLINED_FUNCTION_2_1();
  OUTLINED_FUNCTION_2_0();
  *v18 = v44;
  swift_bridgeObjectRelease();
  v24[OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_mode] = v69;
  v24[OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_gridLayoutStyle] = v68;
  v24[OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_isLegacy] = v70;
  v1[v22] = v71;
  v45 = objc_msgSend((id)objc_opt_self(), sel_sharedManager);
  type metadata accessor for IDSCapabilitiesChecker();
  v46 = (_QWORD *)OUTLINED_FUNCTION_15();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUIDSLookupManager);
  v84[3] = v47;
  v84[4] = &protocol witness table for TUIDSLookupManager;
  v84[0] = v45;
  OUTLINED_FUNCTION_33_0();
  _s10Foundation4UUIDVACSHAAWlTm_2(&lazy protocol witness table cache variable for type UUID and conformance UUID);
  v48 = MEMORY[0x1E0DEE9D8];
  v46[2] = Dictionary.init(dictionaryLiteral:)();
  v46[3] = Dictionary.init(dictionaryLiteral:)();
  v46[5] = 0;
  swift_unknownObjectWeakInit();
  v46[6] = v48;
  outlined init with copy of RadarReporting((uint64_t)v84, (uint64_t)(v46 + 7));
  v49 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  objc_msgSend(v49, sel_addObserver_selector_name_object_, v46, sel_handleLookupManagerDidChangeNotification_, *MEMORY[0x1E0DBD648], v84[0]);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v84);
  *(_QWORD *)&v24[OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_capabilitiesChecker] = v46;
  *((_QWORD *)v19 + 1) = v73;
  swift_unknownObjectWeakAssign();

  v83.receiver = v24;
  v83.super_class = v72;
  v50 = (char *)objc_msgSendSuper2(&v83, sel_initWithNibName_bundle_, 0, 0);
  v51 = *(void (**)(char *, _UNKNOWN **))(**(_QWORD **)&v50[OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_capabilitiesChecker]
                                                   + 176);
  v52 = v50;
  swift_retain();
  v51(v50, &protocol witness table for InCallControlsCollectionViewController);
  v53 = swift_release();
  v54 = OUTLINED_FUNCTION_2_2(v53, sel_defaultCenter);
  OUTLINED_FUNCTION_93_8(v54, v55, v56, (uint64_t)sel_handleContentSizeCategoryDidChange_, *MEMORY[0x1E0DC48E8]);

  v58 = OUTLINED_FUNCTION_2_2(v57, sel_defaultCenter);
  OUTLINED_FUNCTION_93_8(v58, v59, v60, (uint64_t)sel_blockStatusDidUpdate, *MEMORY[0x1E0DBD6B8]);

  InCallControlsCollectionViewController.configureCellRegistrations()();
  v84[0] = *(_QWORD *)&v52[OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_updateDataSourceSubject];
  swift_retain();
  static NSRunLoop.SchedulerTimeType.Stride.seconds(_:)();
  v82 = objc_msgSend((id)objc_opt_self(), sel_mainRunLoop);
  v61 = type metadata accessor for NSRunLoop.SchedulerOptions();
  __swift_storeEnumTagSinglePayload(v75, 1, 1, v61);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSRunLoop);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type PassthroughSubject<(), Never> and conformance PassthroughSubject<A, B>, &demangling cache variable for type metadata for PassthroughSubject<(), Never>);
  lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop(&lazy protocol witness table cache variable for type NSRunLoop and conformance NSRunLoop, (unint64_t *)&lazy cache variable for type metadata for NSRunLoop);
  Publisher.debounce<A>(for:scheduler:options:)();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v75, (uint64_t *)&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);

  (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v74, v78);
  swift_release();
  v62 = OUTLINED_FUNCTION_15();
  swift_unknownObjectWeakInit();
  v63 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v63 + 16) = partial apply for closure #1 in InCallControlsCollectionViewController.init(conversation:participants:mode:gridLayoutStyle:isLegacy:shareLinkEnabled:menuHostViewController:);
  *(_QWORD *)(v63 + 24) = v62;
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.Debounce<PassthroughSubject<(), Never>, NSRunLoop> and conformance Publishers.Debounce<A, B>, &demangling cache variable for type metadata for Publishers.Debounce<PassthroughSubject<(), Never>, NSRunLoop>);
  v64 = Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v76, v79);
  *(_QWORD *)&v52[OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_updateDataSourceDebouncer] = v64;
  swift_release();
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v65 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v65 + 16) = xmmword_1BD6441D0;
  v84[0] = v52;
  v66 = v52;
  String.init<A>(reflecting:)();
  *(_QWORD *)(v65 + 56) = MEMORY[0x1E0DEA968];
  v67 = lazy protocol witness table accessor for type String and conformance String();
  OUTLINED_FUNCTION_11_62(v67);
  os_log(_:dso:log:type:_:)();
  OUTLINED_FUNCTION_53();

  OUTLINED_FUNCTION_139_5();
  OUTLINED_FUNCTION_52_1();
}

uint64_t InCallControlsCollectionViewController.configureCellRegistrations()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v88;
  char *v89;
  char *v90;
  char *v91;
  char *v92;
  char *v93;
  char *v94;
  char *v95;
  char *v96;
  char *v97;
  char *v98;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsPTTOpenAppCell, UUID>?);
  MEMORY[0x1E0C80A78](v1);
  v98 = (char *)&v88 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.SupplementaryRegistration<InCallControlsPTTLeaveChannelFooterView>?);
  MEMORY[0x1E0C80A78](v3);
  v97 = (char *)&v88 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsPTTLeaveChannelCell, UUID>?);
  MEMORY[0x1E0C80A78](v5);
  v96 = (char *)&v88 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsPTTTitleCell, UUID>?);
  MEMORY[0x1E0C80A78](v7);
  v95 = (char *)&v88 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<UICollectionViewListCell, UUID>?);
  MEMORY[0x1E0C80A78](v9);
  v94 = (char *)&v88 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsReportCell, UUID>?);
  MEMORY[0x1E0C80A78](v11);
  v93 = (char *)&v88 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsBlockCell, UUID>?);
  MEMORY[0x1E0C80A78](v13);
  v92 = (char *)&v88 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsOpenMessagesCell, UUID>?);
  MEMORY[0x1E0C80A78](v15);
  v91 = (char *)&v88 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsToggleCaptionsCell, UUID>?);
  MEMORY[0x1E0C80A78](v17);
  v88 = (char *)&v88 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsIgnoreLMIRequestsCell, UUID>?);
  MEMORY[0x1E0C80A78](v19);
  v90 = (char *)&v88 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsShareLinkCell, UUID>?);
  MEMORY[0x1E0C80A78](v21);
  v89 = (char *)&v88 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsAddParticipantCell, UUID>?);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v88 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsStatusCell, UUID>?);
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v88 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsTitleCell, UUID>?);
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)&v88 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsParticipantCell, UUID>?);
  MEMORY[0x1E0C80A78](v32);
  v34 = (char *)&v88 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsActivityCell, UUID>?);
  MEMORY[0x1E0C80A78](v35);
  v37 = (char *)&v88 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.SupplementaryRegistration<InCallControlsSectionHeaderView>?);
  MEMORY[0x1E0C80A78](v38);
  v40 = (char *)&v88 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  InCallControlsCollectionViewController.createSectionHeaderViewRegistration()();
  v41 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.SupplementaryRegistration<InCallControlsSectionHeaderView>);
  __swift_storeEnumTagSinglePayload((uint64_t)v40, 0, 1, v41);
  v42 = v0 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_sectionHeaderViewRegistration;
  swift_beginAccess();
  outlined assign with take of UICollectionView.SupplementaryRegistration<InCallControlsSectionHeaderView>?((uint64_t)v40, v42, &demangling cache variable for type metadata for UICollectionView.SupplementaryRegistration<InCallControlsSectionHeaderView>?);
  swift_endAccess();
  InCallControlsCollectionViewController.createActivityCellRegistration()((void (*)(_QWORD))type metadata accessor for InCallControlsActivityCell);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsActivityCell, UUID>);
  __swift_storeEnumTagSinglePayload((uint64_t)v37, 0, 1, v43);
  v44 = v0 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_activityCellRegistration;
  swift_beginAccess();
  outlined assign with take of UICollectionView.SupplementaryRegistration<InCallControlsSectionHeaderView>?((uint64_t)v37, v44, &demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsActivityCell, UUID>?);
  swift_endAccess();
  InCallControlsCollectionViewController.createActivityCellRegistration()((void (*)(_QWORD))type metadata accessor for InCallControlsParticipantCell);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsParticipantCell, UUID>);
  __swift_storeEnumTagSinglePayload((uint64_t)v34, 0, 1, v45);
  v46 = v0 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_participantCellRegistration;
  swift_beginAccess();
  outlined assign with take of UICollectionView.SupplementaryRegistration<InCallControlsSectionHeaderView>?((uint64_t)v34, v46, &demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsParticipantCell, UUID>?);
  swift_endAccess();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for InCallControlsTitleCell();
  type metadata accessor for UUID();
  UICollectionView.CellRegistration.init(handler:)();
  v47 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsTitleCell, UUID>);
  __swift_storeEnumTagSinglePayload((uint64_t)v31, 0, 1, v47);
  v48 = v0 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_titleCellRegistration;
  swift_beginAccess();
  outlined assign with take of UICollectionView.SupplementaryRegistration<InCallControlsSectionHeaderView>?((uint64_t)v31, v48, &demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsTitleCell, UUID>?);
  swift_endAccess();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for InCallControlsStatusCell();
  UICollectionView.CellRegistration.init(handler:)();
  v49 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsStatusCell, UUID>);
  __swift_storeEnumTagSinglePayload((uint64_t)v28, 0, 1, v49);
  v50 = v0 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_statusCellRegistration;
  swift_beginAccess();
  outlined assign with take of UICollectionView.SupplementaryRegistration<InCallControlsSectionHeaderView>?((uint64_t)v28, v50, &demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsStatusCell, UUID>?);
  swift_endAccess();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for InCallControlsAddParticipantCell();
  UICollectionView.CellRegistration.init(handler:)();
  v51 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsAddParticipantCell, UUID>);
  __swift_storeEnumTagSinglePayload((uint64_t)v25, 0, 1, v51);
  v52 = v0 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_addParticipantCellRegistration;
  swift_beginAccess();
  outlined assign with take of UICollectionView.SupplementaryRegistration<InCallControlsSectionHeaderView>?((uint64_t)v25, v52, &demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsAddParticipantCell, UUID>?);
  swift_endAccess();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for InCallControlsShareLinkCell();
  v53 = (uint64_t)v89;
  UICollectionView.CellRegistration.init(handler:)();
  v54 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsShareLinkCell, UUID>);
  __swift_storeEnumTagSinglePayload(v53, 0, 1, v54);
  v55 = v0 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_shareLinkCellRegistration;
  swift_beginAccess();
  outlined assign with take of UICollectionView.SupplementaryRegistration<InCallControlsSectionHeaderView>?(v53, v55, &demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsShareLinkCell, UUID>?);
  swift_endAccess();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for InCallControlsIgnoreLMIRequestsCell();
  v56 = (uint64_t)v90;
  UICollectionView.CellRegistration.init(handler:)();
  v57 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsIgnoreLMIRequestsCell, UUID>);
  __swift_storeEnumTagSinglePayload(v56, 0, 1, v57);
  v58 = v0 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_ignoreLMIRequestsCellRegistration;
  swift_beginAccess();
  outlined assign with take of UICollectionView.SupplementaryRegistration<InCallControlsSectionHeaderView>?(v56, v58, &demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsIgnoreLMIRequestsCell, UUID>?);
  swift_endAccess();
  if ((InCallControlsCollectionViewController.isLiveCaptionsAllowed.getter() & 1) != 0)
  {
    swift_allocObject();
    swift_unknownObjectWeakInit();
    type metadata accessor for InCallControlsToggleCaptionsCell();
    v59 = (uint64_t)v88;
    UICollectionView.CellRegistration.init(handler:)();
    v60 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsToggleCaptionsCell, UUID>);
    __swift_storeEnumTagSinglePayload(v59, 0, 1, v60);
    v61 = v0 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_toggleCaptionsCellRegistration;
    swift_beginAccess();
    outlined assign with take of UICollectionView.SupplementaryRegistration<InCallControlsSectionHeaderView>?(v59, v61, &demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsToggleCaptionsCell, UUID>?);
    swift_endAccess();
  }
  swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for InCallControlsOpenMessagesCell();
  v62 = (uint64_t)v91;
  UICollectionView.CellRegistration.init(handler:)();
  v63 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsOpenMessagesCell, UUID>);
  __swift_storeEnumTagSinglePayload(v62, 0, 1, v63);
  v64 = v0 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_openMessagesCellRegistration;
  swift_beginAccess();
  outlined assign with take of UICollectionView.SupplementaryRegistration<InCallControlsSectionHeaderView>?(v62, v64, &demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsOpenMessagesCell, UUID>?);
  swift_endAccess();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for InCallControlsBlockCell();
  v65 = (uint64_t)v92;
  UICollectionView.CellRegistration.init(handler:)();
  v66 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsBlockCell, UUID>);
  __swift_storeEnumTagSinglePayload(v65, 0, 1, v66);
  v67 = v0
      + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_blockUnknownCallerCellRegistration;
  swift_beginAccess();
  outlined assign with take of UICollectionView.SupplementaryRegistration<InCallControlsSectionHeaderView>?(v65, v67, &demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsBlockCell, UUID>?);
  swift_endAccess();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  UICollectionView.CellRegistration.init(handler:)();
  __swift_storeEnumTagSinglePayload(v65, 0, 1, v66);
  v68 = v0
      + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_blockAllUnknownCallersCellRegistration;
  swift_beginAccess();
  outlined assign with take of UICollectionView.SupplementaryRegistration<InCallControlsSectionHeaderView>?(v65, v68, &demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsBlockCell, UUID>?);
  swift_endAccess();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for InCallControlsReportCell();
  v69 = (uint64_t)v93;
  UICollectionView.CellRegistration.init(handler:)();
  v70 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsReportCell, UUID>);
  __swift_storeEnumTagSinglePayload(v69, 0, 1, v70);
  v71 = v0
      + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_reportUnknownCallerCellRegistration;
  swift_beginAccess();
  outlined assign with take of UICollectionView.SupplementaryRegistration<InCallControlsSectionHeaderView>?(v69, v71, &demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsReportCell, UUID>?);
  swift_endAccess();
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UICollectionViewListCell);
  v72 = (uint64_t)v94;
  UICollectionView.CellRegistration.init(handler:)();
  v73 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<UICollectionViewListCell, UUID>);
  __swift_storeEnumTagSinglePayload(v72, 0, 1, v73);
  v74 = v0 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_fallbackCellRegistration;
  swift_beginAccess();
  outlined assign with take of UICollectionView.SupplementaryRegistration<InCallControlsSectionHeaderView>?(v72, v74, &demangling cache variable for type metadata for UICollectionView.CellRegistration<UICollectionViewListCell, UUID>?);
  swift_endAccess();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for InCallControlsPTTTitleCell();
  v75 = (uint64_t)v95;
  UICollectionView.CellRegistration.init(handler:)();
  v76 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsPTTTitleCell, UUID>);
  __swift_storeEnumTagSinglePayload(v75, 0, 1, v76);
  v77 = v0 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_pttTitleCellRegistration;
  swift_beginAccess();
  outlined assign with take of UICollectionView.SupplementaryRegistration<InCallControlsSectionHeaderView>?(v75, v77, &demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsPTTTitleCell, UUID>?);
  swift_endAccess();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for InCallControlsPTTLeaveChannelCell();
  v78 = (uint64_t)v96;
  UICollectionView.CellRegistration.init(handler:)();
  v79 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsPTTLeaveChannelCell, UUID>);
  __swift_storeEnumTagSinglePayload(v78, 0, 1, v79);
  v80 = v0 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_leavePTTChannelCellRegistration;
  swift_beginAccess();
  outlined assign with take of UICollectionView.SupplementaryRegistration<InCallControlsSectionHeaderView>?(v78, v80, &demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsPTTLeaveChannelCell, UUID>?);
  swift_endAccess();
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  type metadata accessor for InCallControlsPTTLeaveChannelFooterView();
  v81 = (uint64_t)v97;
  UICollectionView.SupplementaryRegistration.init(elementKind:handler:)();
  v82 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.SupplementaryRegistration<InCallControlsPTTLeaveChannelFooterView>);
  __swift_storeEnumTagSinglePayload(v81, 0, 1, v82);
  v83 = v0
      + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_leaveChannelFooterViewRegistration;
  swift_beginAccess();
  outlined assign with take of UICollectionView.SupplementaryRegistration<InCallControlsSectionHeaderView>?(v81, v83, &demangling cache variable for type metadata for UICollectionView.SupplementaryRegistration<InCallControlsPTTLeaveChannelFooterView>?);
  swift_endAccess();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for InCallControlsPTTOpenAppCell();
  v84 = (uint64_t)v98;
  UICollectionView.CellRegistration.init(handler:)();
  v85 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsPTTOpenAppCell, UUID>);
  __swift_storeEnumTagSinglePayload(v84, 0, 1, v85);
  v86 = v0 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_openPTTAppCellRegistration;
  swift_beginAccess();
  outlined assign with take of UICollectionView.SupplementaryRegistration<InCallControlsSectionHeaderView>?(v84, v86, &demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsPTTOpenAppCell, UUID>?);
  return swift_endAccess();
}

void closure #1 in InCallControlsCollectionViewController.init(conversation:participants:mode:gridLayoutStyle:isLegacy:shareLinkEnabled:menuHostViewController:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  void *v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;
  id v9;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x1C3B752C0](v1);
  if (v2)
  {
    v3 = (_BYTE *)v2;
    v4 = *(void **)(v2 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_dataSource);
    if (v4)
    {
      v5 = OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_updateDataSourceNeedsRefreshParticipants;
      v6 = *(unsigned __int8 *)(v2
                              + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_updateDataSourceNeedsRefreshParticipants);
      v7 = OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_updateDataSourceNeedsAnimatedDifferences;
      v8 = *(unsigned __int8 *)(v2
                              + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_updateDataSourceNeedsAnimatedDifferences);
      v9 = v4;
      InCallControlsCollectionViewController.reallyUpdateDataSource(_:shouldRefreshParticipants:animatingDifferences:)(v9, v6, v8);

      v3[v5] = 0;
      v3[v7] = 0;
    }

  }
}

uint64_t InCallControlsCollectionViewController.reallyUpdateDataSource(_:shouldRefreshParticipants:animatingDifferences:)(void *a1, int a2, int a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD v44[4];
  int v45;
  void *v46;
  char *v47;
  char *v48;
  char *v49;
  int v50;
  char *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  char *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  Swift::OpaquePointer v75;

  v50 = a2;
  v71 = type metadata accessor for Participant.State(0);
  v6 = MEMORY[0x1E0C80A78](v71);
  v62 = (char *)v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v54 = (char *)v44 - v8;
  v52 = type metadata accessor for Participant(0);
  v68 = *(_QWORD *)(v52 - 8);
  v9 = MEMORY[0x1E0C80A78](v52);
  v47 = (char *)v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v66 = (char *)v44 - v12;
  v13 = MEMORY[0x1E0C80A78](v11);
  v72 = (char *)v44 - v14;
  v15 = MEMORY[0x1E0C80A78](v13);
  v48 = (char *)v44 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v53 = (char *)v44 - v18;
  MEMORY[0x1E0C80A78](v17);
  v70 = (char *)v44 - v19;
  v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  MEMORY[0x1E0C80A78](v20);
  v49 = (char *)v44 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for UUID();
  v64 = *(_QWORD *)(v22 - 8);
  v23 = MEMORY[0x1E0C80A78](v22);
  v55 = (char *)v44 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x1E0C80A78](v23);
  v60 = (char *)v44 - v26;
  v27 = MEMORY[0x1E0C80A78](v25);
  v73 = (char *)v44 - v28;
  v29 = MEMORY[0x1E0C80A78](v27);
  v67 = (char *)v44 - v30;
  v31 = MEMORY[0x1E0C80A78](v29);
  v56 = (char *)v44 - v32;
  v33 = MEMORY[0x1E0C80A78](v31);
  v44[3] = (char *)v44 - v34;
  MEMORY[0x1E0C80A78](v33);
  v51 = (char *)v44 - v35;
  v36 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSDiffableDataSourceSnapshot<InCallControlsCollectionViewController.CollectionViewSection, UUID>);
  v57 = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  v38 = (char *)v44 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = InCallControlsCollectionViewController.visibleCollectionViewSections()();
  v75._rawValue = (void *)MEMORY[0x1E0DEE9D8];
  lazy protocol witness table accessor for type InCallControlsCollectionViewController.CollectionViewSection and conformance InCallControlsCollectionViewController.CollectionViewSection();
  _s10Foundation4UUIDVACSHAAWlTm_2(&lazy protocol witness table cache variable for type UUID and conformance UUID);
  NSDiffableDataSourceSnapshot.init()();
  v63 = v36;
  v65 = v38;
  NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)v39);
  if (*(_QWORD *)(v39 + 16))
  {
    v45 = a3;
    v46 = a1;
    v58 = v3;
    v74 = v39;
    swift_bridgeObjectRetain();
    v69 = "equests";
    v61 = v22;
    v59 = "e";
    __asm { BR              X9 }
  }
  swift_bridgeObjectRelease();
  v40 = v63;
  v41 = v57;
  v42 = (uint64_t)v65;
  NSDiffableDataSourceSnapshot.reconfigureItems(_:)(v75);
  swift_bridgeObjectRelease();
  InCallControlsCollectionViewController.apply(_:to:animatingDifferences:)(v42, a1, a3 & 1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v41 + 8))(v42, v40);
}

void sub_1BD32062C()
{
  swift_bridgeObjectRelease();
  JUMPOUT(0x1BD31DC0CLL);
}

void sub_1BD32063C()
{
  swift_bridgeObjectRelease();
  JUMPOUT(0x1BD31DF08);
}

void sub_1BD320658()
{
  swift_bridgeObjectRelease();
  JUMPOUT(0x1BD31E37CLL);
}

void sub_1BD320670()
{
  swift_bridgeObjectRelease();
  JUMPOUT(0x1BD31EDCCLL);
}

void sub_1BD320680()
{
  swift_bridgeObjectRelease();
  JUMPOUT(0x1BD31F0C0);
}

void sub_1BD32069C()
{
  swift_bridgeObjectRelease();
  JUMPOUT(0x1BD31F388);
}

void sub_1BD3206AC()
{
  swift_bridgeObjectRelease();
  JUMPOUT(0x1BD31F648);
}

void sub_1BD3206C4()
{
  swift_bridgeObjectRelease();
  JUMPOUT(0x1BD31F8C0);
}

void sub_1BD3206E0()
{
  swift_bridgeObjectRelease();
  JUMPOUT(0x1BD31FEFCLL);
}

void sub_1BD3206F0()
{
  swift_bridgeObjectRelease();
  JUMPOUT(0x1BD3201B8);
}

void sub_1BD32070C()
{
  swift_bridgeObjectRelease();
  JUMPOUT(0x1BD3204A0);
}

void InCallControlsCollectionViewController.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;

  objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  OUTLINED_FUNCTION_0();
}

void InCallControlsCollectionViewController.init(coder:)()
{
  char *v0;
  void *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = v0;
  v0[OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_updatedCapabilitiesWithParticipants] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_participants] = MEMORY[0x1E0DEE9D8];
  OUTLINED_FUNCTION_18_1(OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_menuHostViewController);
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController____lazy_storage___featureFlags] = 0;
  v2 = &v0[OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_activity];
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_QWORD *)v2 + 4) = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_conversation] = 0;
  v0[OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_isOnScreen] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_controlsManager] = 0;
  v0[OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_remoteAudioPaused] = 0;
  OUTLINED_FUNCTION_18_1(OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_participantsViewControllerDelegate);
  OUTLINED_FUNCTION_18_1(OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_inCallControlsCollectionViewControllerDelegate);
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_collectionView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_dataSource] = 0;
  v0[OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_shareLinkEnabled] = 0;
  v0[OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_updateDataSourceNeedsRefreshParticipants] = 0;
  v0[OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_updateDataSourceNeedsAnimatedDifferences] = 0;
  v3 = OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_updateDataSourceSubject;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PassthroughSubject<(), Never>);
  OUTLINED_FUNCTION_14_0();
  *(_QWORD *)&v0[v3] = PassthroughSubject.init()();
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_updateDataSourceDebouncer] = 0;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.SupplementaryRegistration<InCallControlsSectionHeaderView>);
  OUTLINED_FUNCTION_12_7(v4);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsActivityCell, UUID>);
  OUTLINED_FUNCTION_12_7(v5);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsTitleCell, UUID>);
  OUTLINED_FUNCTION_12_7(v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsStatusCell, UUID>);
  OUTLINED_FUNCTION_12_7(v7);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsParticipantCell, UUID>);
  OUTLINED_FUNCTION_12_7(v8);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsAddParticipantCell, UUID>);
  OUTLINED_FUNCTION_12_7(v9);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsShareLinkCell, UUID>);
  OUTLINED_FUNCTION_12_7(v10);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsIgnoreLMIRequestsCell, UUID>);
  OUTLINED_FUNCTION_12_7(v11);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsToggleCaptionsCell, UUID>);
  OUTLINED_FUNCTION_12_7(v12);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<UICollectionViewListCell, UUID>);
  OUTLINED_FUNCTION_12_7(v13);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsOpenMessagesCell, UUID>);
  OUTLINED_FUNCTION_12_7(v14);
  v15 = (uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_blockUnknownCallerCellRegistration];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsBlockCell, UUID>);
  OUTLINED_FUNCTION_8_2(v15);
  OUTLINED_FUNCTION_8_2((uint64_t)v1+ OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_blockAllUnknownCallersCellRegistration);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsReportCell, UUID>);
  OUTLINED_FUNCTION_12_7(v16);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsPTTTitleCell, UUID>);
  OUTLINED_FUNCTION_12_7(v17);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsPTTLeaveChannelCell, UUID>);
  OUTLINED_FUNCTION_12_7(v18);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.SupplementaryRegistration<InCallControlsPTTLeaveChannelFooterView>);
  OUTLINED_FUNCTION_12_7(v19);
  v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsPTTOpenAppCell, UUID>);
  OUTLINED_FUNCTION_12_7(v20);

  OUTLINED_FUNCTION_58_24();
  __break(1u);
}

Swift::Void __swiftcall InCallControlsCollectionViewController.viewDidLoad()()
{
  char *v0;
  char *v1;
  objc_class *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t);
  unint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  id v26;
  id v27;
  void *v28;
  uint64_t v29;
  id v30;
  void **v31;
  void *v32;
  id v33;
  id v34;
  void *v35;
  void *v36;
  id v37;
  uint64_t v38;
  id v39;
  void *v40;
  uint64_t v41;
  objc_super v42;

  v1 = v0;
  v2 = (objc_class *)OUTLINED_FUNCTION_15_6();
  v3 = OUTLINED_FUNCTION_135_3();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = MEMORY[0x1E0C80A78](v3);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v41 - v7;
  v42.receiver = v0;
  v42.super_class = v2;
  objc_msgSendSuper2(&v42, sel_viewDidLoad);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v8, *MEMORY[0x1E0DC2878], v3);
  v9 = OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_70_18();
  v10 = OUTLINED_FUNCTION_52_28();
  v11(v10);
  v12 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v9;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v13 + v12, (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  v14 = objc_allocWithZone(MEMORY[0x1E0DC35D0]);
  v15 = @nonobjc UICollectionViewCompositionalLayout.init(sectionProvider:)();
  v16 = OUTLINED_FUNCTION_2_2((uint64_t)v15, sel_view);
  if (!v16)
  {
    __break(1u);
    goto LABEL_8;
  }
  v17 = v16;
  objc_msgSend(v16, sel_bounds);
  v19 = v18;
  v21 = v20;
  v23 = v22;
  v25 = v24;

  v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC35B8]), sel_initWithFrame_collectionViewLayout_, v15, v19, v21, v23, v25);
  v27 = OUTLINED_FUNCTION_2_2((uint64_t)objc_msgSend(v26, sel_setAutoresizingMask_, 18), sel_view);
  if (!v27)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v28 = v27;
  objc_msgSend(v27, sel_addSubview_, v26);

  v29 = one-time initialization token for tableViewBackground;
  v30 = v26;
  if (v29 != -1)
    swift_once();
  objc_msgSend(v30, sel_setBackgroundColor_, static Colors.InCallControls.tableViewBackground);

  objc_msgSend(v30, sel_setDelegate_, v1);
  v31 = (void **)&v1[OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_collectionView];
  OUTLINED_FUNCTION_2_0();
  v32 = *v31;
  *v31 = v30;
  v33 = v30;

  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_70_18();
  objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionViewDiffableDataSource<InCallControlsCollectionViewController.CollectionViewSection, UUID>));
  v34 = v33;
  v35 = (void *)UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)();
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_70_18();
  swift_retain();
  dispatch thunk of UICollectionViewDiffableDataSource.supplementaryViewProvider.setter();
  swift_release();
  InCallControlsCollectionViewController.reallyUpdateDataSource(_:shouldRefreshParticipants:animatingDifferences:)(v35, 0, 0);
  v36 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_dataSource];
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_dataSource] = v35;
  v37 = v35;

  v39 = OUTLINED_FUNCTION_2_2(v38, sel_view);
  if (v39)
  {
    v40 = v39;
    objc_msgSend(v39, sel_setBackgroundColor_, static Colors.InCallControls.tableViewBackground);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v8, v3);
    return;
  }
LABEL_9:
  __break(1u);
}

void *closure #1 in InCallControlsCollectionViewController.viewDidLoad()(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  void *v22;
  id v23;
  id v24;
  unsigned __int8 v25;
  unsigned __int8 v26;
  uint64_t v27;
  char v29;
  unsigned int *v30;
  void *v31;
  uint64_t v32;
  char v34;
  unsigned int *v35;
  id v36;
  void (*v37)(unsigned __int8 *, _QWORD);
  uint64_t v38;
  char *v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  uint64_t v44;
  id v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unsigned __int8 v53[32];

  v51 = a2;
  v52 = a1;
  v6 = type metadata accessor for UICollectionLayoutListConfiguration.FooterMode();
  v47 = *(_QWORD *)(v6 - 8);
  v48 = v6;
  MEMORY[0x1E0C80A78](v6);
  v46 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UICollectionLayoutListConfiguration.HeaderMode();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for UICollectionLayoutListConfiguration.Appearance();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for UICollectionLayoutListConfiguration();
  v50 = *(_QWORD *)(v16 - 8);
  v17 = MEMORY[0x1E0C80A78](v16);
  v49 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v44 - v19;
  swift_beginAccess();
  v21 = (char *)MEMORY[0x1C3B752C0](a3 + 16);
  if (!v21)
    return 0;
  v22 = *(void **)&v21[OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_dataSource];
  if (!v22)
  {

    return 0;
  }
  v45 = v21;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a4, v12);
  v23 = v22;
  UICollectionLayoutListConfiguration.init(appearance:)();
  if (one-time initialization token for tableViewBackground != -1)
    swift_once();
  v24 = (id)static Colors.InCallControls.tableViewBackground;
  UICollectionLayoutListConfiguration.backgroundColor.setter();
  v25 = InCallControlsCollectionViewController.visibleCollectionViewSection(atIndex:)(v52);
  v26 = v25;
  if (v25 == 14)
  {
LABEL_12:
    v30 = (unsigned int *)MEMORY[0x1E0DC2900];
    goto LABEL_16;
  }
  if (InCallControlsCollectionViewController.CollectionViewSection.rawValue.getter(v25) != 0x41746E6572727563
    || v27 != 0xEF79746976697463)
  {
    v29 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v29 & 1) != 0)
    {
      v30 = (unsigned int *)MEMORY[0x1E0DC28E8];
      goto LABEL_16;
    }
    goto LABEL_12;
  }
  swift_bridgeObjectRelease();
  v30 = (unsigned int *)MEMORY[0x1E0DC28E8];
LABEL_16:
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *v30, v8);
  UICollectionLayoutListConfiguration.headerMode.setter();
  if (v26 != 14)
  {
    if (InCallControlsCollectionViewController.CollectionViewSection.rawValue.getter(v26) == 0x545450657661656CLL
      && v32 == 0xEF6C656E6E616843)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v34 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v34 & 1) == 0)
        goto LABEL_22;
    }
    v35 = (unsigned int *)MEMORY[0x1E0DC28C0];
    goto LABEL_25;
  }
LABEL_22:
  v35 = (unsigned int *)MEMORY[0x1E0DC28D0];
LABEL_25:
  (*(void (**)(char *, _QWORD, uint64_t))(v47 + 104))(v46, *v35, v48);
  UICollectionLayoutListConfiguration.footerMode.setter();
  v36 = objc_msgSend((id)objc_opt_self(), sel_tertiaryLabelColor);
  v37 = (void (*)(unsigned __int8 *, _QWORD))UICollectionLayoutListConfiguration.separatorConfiguration.modify();
  UIListSeparatorConfiguration.color.setter();
  v37(v53, 0);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSCollectionLayoutSection);
  v39 = v49;
  v38 = v50;
  (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v49, v20, v16);
  v31 = (void *)static NSCollectionLayoutSection.list(using:layoutEnvironment:)();
  v40 = *(void (**)(char *, uint64_t))(v38 + 8);
  v40(v39, v16);
  objc_msgSend(v31, sel_contentInsets);
  objc_msgSend(v31, sel_setContentInsets_, 0.0);
  dispatch thunk of UICollectionViewDiffableDataSource.sectionIdentifier(for:)();
  if (v53[0] != 14)
  {
    if (InCallControlsCollectionViewController.CollectionViewSection.rawValue.getter(v53[0]) == 0x656C746974
      && v41 == 0xE500000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
    }
  }
  objc_msgSend(v31, sel_contentInsets);
  objc_msgSend(v31, sel_setContentInsets_);

  v40(v20, v16);
  return v31;
}

uint64_t InCallControlsCollectionViewController.visibleCollectionViewSection(atIndex:)(unint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSDiffableDataSourceSnapshot<InCallControlsCollectionViewController.CollectionViewSection, UUID>);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_dataSource);
  if (!v7)
    return 14;
  v8 = v7;
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();
  v9 = *(_QWORD *)(NSDiffableDataSourceSnapshot.sectionIdentifiers.getter() + 16);
  swift_bridgeObjectRelease();
  if (v9 <= (uint64_t)a1)
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);

    return 14;
  }
  result = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)(result + 16) > a1)
  {
    v11 = *(unsigned __int8 *)(result + a1 + 32);

    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t closure #2 in InCallControlsCollectionViewController.viewDidLoad()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char *v40;
  _QWORD v42[17];

  v42[13] = a3;
  v42[15] = a1;
  v42[16] = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<UICollectionViewListCell, UUID>?);
  MEMORY[0x1E0C80A78](v5);
  v42[11] = (char *)v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsPTTOpenAppCell, UUID>?);
  MEMORY[0x1E0C80A78](v7);
  v42[10] = (char *)v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsPTTLeaveChannelCell, UUID>?);
  MEMORY[0x1E0C80A78](v9);
  v42[9] = (char *)v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsPTTTitleCell, UUID>?);
  MEMORY[0x1E0C80A78](v11);
  v42[8] = (char *)v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsReportCell, UUID>?);
  v14 = MEMORY[0x1E0C80A78](v13);
  v42[2] = (char *)v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v42[7] = (char *)v42 - v16;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsBlockCell, UUID>?);
  v18 = MEMORY[0x1E0C80A78](v17);
  v42[1] = (char *)v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x1E0C80A78](v18);
  v42[3] = (char *)v42 - v21;
  v22 = MEMORY[0x1E0C80A78](v20);
  v42[6] = (char *)v42 - v23;
  MEMORY[0x1E0C80A78](v22);
  v42[5] = (char *)v42 - v24;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsOpenMessagesCell, UUID>?);
  MEMORY[0x1E0C80A78](v25);
  v42[4] = (char *)v42 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsIgnoreLMIRequestsCell, UUID>?);
  MEMORY[0x1E0C80A78](v27);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsToggleCaptionsCell, UUID>?);
  MEMORY[0x1E0C80A78](v28);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsShareLinkCell, UUID>?);
  MEMORY[0x1E0C80A78](v29);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsParticipantCell, UUID>?);
  MEMORY[0x1E0C80A78](v30);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsStatusCell, UUID>?);
  MEMORY[0x1E0C80A78](v31);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsAddParticipantCell, UUID>?);
  MEMORY[0x1E0C80A78](v32);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsTitleCell, UUID>?);
  MEMORY[0x1E0C80A78](v33);
  v34 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  MEMORY[0x1E0C80A78](v34);
  v42[14] = (char *)v42 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsActivityCell, UUID>?);
  MEMORY[0x1E0C80A78](v36);
  swift_beginAccess();
  v37 = MEMORY[0x1C3B752C0](a4 + 16);
  if (v37)
  {
    v38 = v37;
    v39 = IndexPath.section.getter();
    v42[12] = v38;
    v40 = (char *)&loc_1BD321E54
        + dword_1BD322F6C[InCallControlsCollectionViewController.visibleCollectionViewSection(atIndex:)(v39)];
    __asm { BR              X10 }
  }
  return 0;
}

uint64_t closure #3 in InCallControlsCollectionViewController.viewDidLoad()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  void *v13;
  unint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[24];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.SupplementaryRegistration<InCallControlsPTTLeaveChannelFooterView>?);
  MEMORY[0x1E0C80A78](v6);
  v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.SupplementaryRegistration<InCallControlsSectionHeaderView>?);
  MEMORY[0x1E0C80A78](v9);
  v11 = &v22[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  v12 = MEMORY[0x1C3B752C0](a5 + 16);
  if (!v12)
    return 0;
  v13 = (void *)v12;
  v14 = IndexPath.section.getter();
  v15 = InCallControlsCollectionViewController.visibleCollectionViewSection(atIndex:)(v14);
  if (v15 == 14)
    goto LABEL_7;
  if (v15 == 12)
  {
    v20 = (uint64_t)v13
        + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_leaveChannelFooterViewRegistration;
    swift_beginAccess();
    outlined init with copy of Participant.ScreenInfo?(v20, (uint64_t)v8, &demangling cache variable for type metadata for UICollectionView.SupplementaryRegistration<InCallControlsPTTLeaveChannelFooterView>?);
    v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.SupplementaryRegistration<InCallControlsPTTLeaveChannelFooterView>);
    result = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v21);
    if ((_DWORD)result != 1)
    {
      type metadata accessor for InCallControlsPTTLeaveChannelFooterView();
      v19 = UICollectionView.dequeueConfiguredReusableSupplementary<A>(using:for:)();

      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v8, v21);
      return v19;
    }
    goto LABEL_13;
  }
  if (v15 != 1)
  {
LABEL_7:

    return 0;
  }
  v16 = (uint64_t)v13
      + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_sectionHeaderViewRegistration;
  swift_beginAccess();
  outlined init with copy of Participant.ScreenInfo?(v16, (uint64_t)v11, &demangling cache variable for type metadata for UICollectionView.SupplementaryRegistration<InCallControlsSectionHeaderView>?);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.SupplementaryRegistration<InCallControlsSectionHeaderView>);
  result = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v17);
  if ((_DWORD)result != 1)
  {
    type metadata accessor for InCallControlsSectionHeaderView();
    v19 = UICollectionView.dequeueConfiguredReusableSupplementary<A>(using:for:)();

    (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v11, v17);
    return v19;
  }
  __break(1u);
LABEL_13:
  __break(1u);
  return result;
}

Swift::Bool __swiftcall InCallControlsCollectionViewController._canShowWhileLocked()()
{
  return 1;
}

void InCallControlsCollectionViewController.blockStatusDidUpdate()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  char v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(unint64_t, uint64_t, uint64_t);
  uint64_t v27;
  NSObject *v28;
  int v29;
  uint8_t *v30;
  uint64_t v31;
  char v32;
  int v33;
  uint64_t v34;
  os_log_t v35;
  uint64_t v36;
  id v37;
  _BYTE v38[12];
  int v39;
  os_log_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  int v45;

  v1 = v0;
  v2 = type metadata accessor for UUID();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = &v38[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  MEMORY[0x1E0C80A78](v6);
  v8 = &v38[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for DispatchPredicate();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (uint64_t *)&v38[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v12 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E0DEF740], v9);
  v13 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9);
  if ((v13 & 1) == 0)
  {
    __break(1u);
LABEL_26:
    swift_once();
    goto LABEL_4;
  }
  v14 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_dataSource);
  if (!v14)
    return;
  v43 = v1;
  v15 = one-time initialization token for conversationKit;
  v42 = v14;
  if (v15 != -1)
    goto LABEL_26;
LABEL_4:
  v16 = type metadata accessor for Logger();
  __swift_project_value_buffer(v16, (uint64_t)&static Logger.conversationKit);
  v17 = Logger.logObject.getter();
  v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v19 = 0;
    _os_log_impl(&dword_1BD004000, v17, v18, "InCallControlsBlockCell.blockStatusDidUpdate", v19, 2u);
    MEMORY[0x1C3B751B8](v19, -1, -1);
  }

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UUID>);
  v20 = *(_QWORD *)(v3 + 72);
  v21 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1BD645380;
  v23 = v22 + v21;
  v24 = v22;
  if (one-time initialization token for blockUnkownRowIdentifier != -1)
    swift_once();
  v25 = __swift_project_value_buffer(v2, (uint64_t)static InCallControlsCollectionViewController.CollectionViewSection.blockUnkownRowIdentifier);
  v26 = *(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 16);
  v26(v23, v25, v2);
  v44 = v20;
  if (one-time initialization token for blockAllParticipantsRowIdentifier != -1)
    swift_once();
  v27 = __swift_project_value_buffer(v2, (uint64_t)static InCallControlsCollectionViewController.CollectionViewSection.blockAllParticipantsRowIdentifier);
  v26(v23 + v20, v27, v2);
  swift_bridgeObjectRetain_n();
  v28 = Logger.logObject.getter();
  v29 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v28, (os_log_type_t)v29))
  {
    v39 = v29;
    v40 = v28;
    v30 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v30 = 67109120;
    v31 = *(_QWORD *)(v24 + 16);
    v41 = v24;
    if (v31)
    {
      swift_bridgeObjectRetain();
      while (1)
      {
        v26((unint64_t)v8, v23, v2);
        __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v2);
        if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v2) == 1)
          break;
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v3 + 32))(v5, v8, v2);
        v32 = static UUID.== infix(_:_:)();
        (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
        if ((v32 & 1) != 0)
        {
          v33 = 1;
          goto LABEL_22;
        }
        v23 += v44;
        if (!--v31)
          goto LABEL_19;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
LABEL_19:
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 1, 1, v2);
    }
    v33 = 0;
LABEL_22:
    v34 = v41;
    swift_bridgeObjectRelease_n();
    v45 = v33;
    v24 = v34;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v35 = v40;
    _os_log_impl(&dword_1BD004000, v40, (os_log_type_t)v39, "InCallControlsBlockCell.blockStatusDidUpdate CollectionViewSection.blockAllParticipants.singleRowIdentifier: %{BOOL}d", v30, 8u);
    MEMORY[0x1C3B751B8](v30, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v36 = v24;
  v37 = v42;
  InCallControlsCollectionViewController.reloadItems(_:in:animatingDifferences:)(v36, (uint64_t)v42, 1, (void (*)(uint64_t, uint64_t))specialized _ArrayProtocol.filter(_:), MEMORY[0x1E0DC2418]);
  swift_setDeallocating();
  specialized _ContiguousArrayStorage.__deallocating_deinit();

}

void InCallControlsCollectionViewController.handleContentSizeCategoryDidChange(_:)()
{
  uint64_t v0;
  void *v1;
  id v2;

  type metadata accessor for InCallControlsParticipantCell();
  static InCallControlsParticipantCell.invalidateCalculatedHeights()();
  v1 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_dataSource);
  if (v1)
  {
    v2 = v1;
    InCallControlsCollectionViewController.reloadItems(_:in:animatingDifferences:)((uint64_t)&outlined read-only object #0 of InCallControlsCollectionViewController.handleContentSizeCategoryDidChange(_:), (uint64_t)v2, 0, specialized _ArrayProtocol.filter(_:), (void (*)(void))MEMORY[0x1E0DC2460]);

  }
}

void InCallControlsCollectionViewController.reloadItems(_:in:animatingDifferences:)(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t), void (*a5)(void))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSDiffableDataSourceSnapshot<InCallControlsCollectionViewController.CollectionViewSection, UUID>);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_77();
  v11 = v10 - v9;
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();
  v12 = swift_bridgeObjectRetain();
  a4(v12, v11);
  a5();
  OUTLINED_FUNCTION_2_1();
  dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v11, v7);
  OUTLINED_FUNCTION_65_1();
}

uint64_t InCallControlsCollectionViewController.configureToggleCaptionsCell(_:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  char v6;
  _QWORD *v7;
  uint64_t (*v8)(uint64_t, _UNKNOWN **);
  uint64_t v9;

  v3 = v1
     + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_inCallControlsCollectionViewControllerDelegate;
  swift_beginAccess();
  if (MEMORY[0x1C3B752C0](v3))
  {
    v4 = *(_QWORD *)(v3 + 8);
    ObjectType = swift_getObjectType();
    v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, ObjectType, v4);
    swift_unknownObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  (*(void (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & *a1) + 0xD8))(v6 & 1);
  v8 = *(uint64_t (**)(uint64_t, _UNKNOWN **))((*v7 & *a1) + 0x78);
  v9 = swift_unknownObjectRetain();
  return v8(v9, &protocol witness table for InCallControlsCollectionViewController);
}

uint64_t InCallControlsCollectionViewController.visibleCollectionViewSections()()
{
  uint64_t v0;
  uint64_t v1;
  id *v2;
  id v3;
  uint64_t v4;
  char v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD **v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t (*v22)(void);
  _QWORD *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  void (*v36)(void);
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t ObjectType;
  unint64_t v41;
  unint64_t v42;
  id v43;
  _QWORD *v44;
  id v45;
  _QWORD *v46;
  BOOL v47;
  id v48;
  BOOL v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  void (*v54)(void);
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  int64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD v87[5];

  v1 = v0;
  v2 = (id *)(v0 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_conversation);
  swift_beginAccess();
  if (*v2)
  {
    v3 = objc_msgSend(*v2, sel_remoteMembers);
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
    lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop(&lazy protocol witness table cache variable for type TUConversationMember and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
    v4 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    v5 = specialized Set.isEmpty.getter(v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = 1;
  }
  v6 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_mode);
  swift_beginAccess();
  v7 = MEMORY[0x1E0DEE9D8];
  if ((*v6 & 0xE0) != 0x40 && (v5 & 1) == 0)
  {
    specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v7 = v8;
    v10 = *(_QWORD *)(v8 + 16);
    v9 = *(_QWORD *)(v8 + 24);
    if (v10 >= v9 >> 1)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v9 > 1, v10 + 1, 1, v8);
      v7 = v70;
    }
    *(_QWORD *)(v7 + 16) = v10 + 1;
    *(_BYTE *)(v7 + v10 + 32) = 0;
    if (static Platform.current.getter() != 2)
    {
      v12 = *(_QWORD *)(v7 + 16);
      v11 = *(_QWORD *)(v7 + 24);
      if (v12 >= v11 >> 1)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v11 > 1, v12 + 1, 1, v7);
        v7 = v77;
      }
      *(_QWORD *)(v7 + 16) = v12 + 1;
      *(_BYTE *)(v7 + v12 + 32) = 6;
    }
  }
  v13 = v1 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_activity;
  swift_beginAccess();
  outlined init with copy of Participant.ScreenInfo?(v13, (uint64_t)v87, &demangling cache variable for type metadata for Activity?);
  v14 = v87[3];
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v87, &demangling cache variable for type metadata for Activity?);
  if (v14)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(v7 + 16) + 1, 1, v7);
      v7 = v68;
    }
    v16 = *(_QWORD *)(v7 + 16);
    v15 = *(_QWORD *)(v7 + 24);
    if (v16 >= v15 >> 1)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v15 > 1, v16 + 1, 1, v7);
      v7 = v69;
    }
    *(_QWORD *)(v7 + 16) = v16 + 1;
    *(_BYTE *)(v7 + v16 + 32) = 1;
  }
  if ((*v6 & 0xE0) != 0x40)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(v7 + 16) + 1, 1, v7);
      v7 = v71;
    }
    v18 = *(_QWORD *)(v7 + 16);
    v17 = *(_QWORD *)(v7 + 24);
    if (v18 >= v17 >> 1)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v17 > 1, v18 + 1, 1, v7);
      v7 = v72;
    }
    *(_QWORD *)(v7 + 16) = v18 + 1;
    *(_BYTE *)(v7 + v18 + 32) = 2;
  }
  v19 = (_QWORD **)(v1 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_controlsManager);
  swift_beginAccess();
  v20 = *v19;
  v21 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  if (!*v19
    || (v22 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v20) + 0x320),
        v23 = v20,
        LOBYTE(v22) = v22(),
        v23,
        (v22 & 1) == 0))
  {
    if (static Platform.current.getter() != 2)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(v7 + 16) + 1, 1, v7);
        v7 = v73;
      }
      v25 = *(_QWORD *)(v7 + 16);
      v24 = *(_QWORD *)(v7 + 24);
      if (v25 >= v24 >> 1)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v24 > 1, v25 + 1, 1, v7);
        v7 = v74;
      }
      *(_QWORD *)(v7 + 16) = v25 + 1;
      *(_BYTE *)(v7 + v25 + 32) = 3;
    }
    if ((InCallControlsCollectionViewController.isLiveCaptionsAllowed.getter() & 1) != 0 && *v2)
    {
      v26 = one-time initialization token for shared;
      v27 = *v2;
      if (v26 != -1)
        swift_once();
      if (((*(uint64_t (**)(void))((*v21 & *(_QWORD *)static ConversationCapabilities.shared) + 0x70))() & 1) != 0)
      {
        if (objc_msgSend(v27, sel_resolvedAudioVideoMode) != (id)1
          || (v28 = objc_msgSend(v27, sel_activeRemoteParticipants),
              type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant), lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop(&lazy protocol witness table cache variable for type TUConversationParticipant and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant), v29 = static Set._unconditionallyBridgeFromObjectiveC(_:)(), v28, v30 = specialized Set.count.getter(v29), swift_bridgeObjectRelease(), v30 >= 2))
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(v7 + 16) + 1, 1, v7);
            v7 = v83;
          }
          v32 = *(_QWORD *)(v7 + 16);
          v31 = *(_QWORD *)(v7 + 24);
          if (v32 >= v31 >> 1)
          {
            specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v31 > 1, v32 + 1, 1, v7);
            v7 = v84;
          }
          *(_QWORD *)(v7 + 16) = v32 + 1;
          *(_BYTE *)(v7 + v32 + 32) = 4;
        }
      }

    }
    if (*(_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_shareLinkEnabled) == 1
      && static Platform.current.getter() != 2)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(v7 + 16) + 1, 1, v7);
        v7 = v81;
      }
      v34 = *(_QWORD *)(v7 + 16);
      v33 = *(_QWORD *)(v7 + 24);
      if (v34 >= v33 >> 1)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v33 > 1, v34 + 1, 1, v7);
        v7 = v82;
      }
      *(_QWORD *)(v7 + 16) = v34 + 1;
      *(_BYTE *)(v7 + v34 + 32) = 5;
    }
  }
  v35 = *v19;
  if (*v19)
  {
    v36 = *(void (**)(void))((*v21 & *v35) + 0x270);
    v37 = v35;
    v36();
    v39 = v38;
    ObjectType = swift_getObjectType();
    LOBYTE(v39) = (*(uint64_t (**)(uint64_t, uint64_t))(v39 + 120))(ObjectType, v39);
    swift_unknownObjectRelease();
    if ((v39 & 1) == 0)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(v7 + 16) + 1, 1, v7);
        v7 = v75;
      }
      v42 = *(_QWORD *)(v7 + 16);
      v41 = *(_QWORD *)(v7 + 24);
      if (v42 >= v41 >> 1)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v41 > 1, v42 + 1, 1, v7);
        v7 = v76;
      }
      *(_QWORD *)(v7 + 16) = v42 + 1;
      *(_BYTE *)(v7 + v42 + 32) = 10;
    }

  }
  v43 = *v2;
  if (!*v2)
    goto LABEL_68;
  v44 = *v19;
  if (!*v19)
    return v7;
  v45 = v43;
  v46 = v44;
  v47 = specialized Conversation.hasSingleUnknownContact.getter();

  if (v47)
  {
    v48 = v45;
    v49 = specialized Conversation.hasExactlyOneRemoteParticipant.getter();

    if (v49)
    {
      (*(void (**)(void))((*v21 & *v46) + 0x270))();
      v51 = v50;
      v52 = swift_getObjectType();
      LOBYTE(v51) = (*(uint64_t (**)(uint64_t, uint64_t))(v51 + 120))(v52, v51);
      swift_unknownObjectRelease();
      if ((v51 & 1) == 0)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(v7 + 16) + 1, 1, v7);
          v7 = v85;
        }
        v67 = *(_QWORD *)(v7 + 16);
        v66 = *(_QWORD *)(v7 + 24);
        if (v67 >= v66 >> 1)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v66 > 1, v67 + 1, 1, v7);
          v7 = v86;
        }
        *(_QWORD *)(v7 + 16) = v67 + 1;
        *(_BYTE *)(v7 + v67 + 32) = 7;
        v45 = v46;
        goto LABEL_67;
      }
    }
    v45 = v48;
  }
  v48 = v46;
LABEL_67:

LABEL_68:
  v53 = *v19;
  if (*v19)
  {
    v54 = *(void (**)(void))((*v21 & *v53) + 0x270);
    v55 = v53;
    v54();
    v57 = v56;

    v58 = swift_getObjectType();
    LOBYTE(v55) = (*(uint64_t (**)(uint64_t, uint64_t))(v57 + 216))(v58, v57);
    swift_unknownObjectRelease();
    if ((v55 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, 1, 1, MEMORY[0x1E0DEE9D8]);
      v7 = v59;
      v61 = *(_QWORD *)(v59 + 16);
      v60 = *(_QWORD *)(v59 + 24);
      v62 = v60 >> 1;
      v63 = v61 + 1;
      if (v60 >> 1 <= v61)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v60 > 1, v61 + 1, 1, v59);
        v7 = v78;
        v60 = *(_QWORD *)(v78 + 24);
        v62 = v60 >> 1;
      }
      *(_QWORD *)(v7 + 16) = v63;
      *(_BYTE *)(v7 + v61 + 32) = 11;
      v64 = v61 + 2;
      if (v62 < (uint64_t)(v61 + 2))
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v60 > 1, v61 + 2, 1, v7);
        v7 = v79;
        v60 = *(_QWORD *)(v79 + 24);
        v62 = v60 >> 1;
      }
      *(_QWORD *)(v7 + 16) = v64;
      *(_BYTE *)(v7 + v63 + 32) = 12;
      if (v62 < (uint64_t)(v61 + 3))
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v60 > 1, v61 + 3, 1, v7);
        v7 = v80;
      }
      *(_QWORD *)(v7 + 16) = v61 + 3;
      *(_BYTE *)(v7 + v64 + 32) = 13;
    }
  }
  return v7;
}

uint64_t UUID.init(hash:)@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  size_t v5;
  _QWORD v6[3];

  v6[2] = *MEMORY[0x1E0C80C00];
  v6[0] = 0;
  v6[1] = 0;
  v5 = bswap64(a1);
  v5 = specialized _copyCollectionToContiguousArray<A>(_:)((size_t)&v5, (unint64_t)v6);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [UInt8]);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(lazy protocol witness table cache variable for type [UInt8] and conformance <A> [A], &demangling cache variable for type metadata for [UInt8]);
  DataProtocol.copyBytes(to:)();
  swift_release();
  UUID.init(uuid:)();
  v3 = OUTLINED_FUNCTION_33_0();
  return __swift_storeEnumTagSinglePayload(a2, 0, 1, v3);
}

BOOL specialized Conversation.hasExactlyOneRemoteParticipant.getter()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;

  v1 = objc_msgSend(v0, sel_mergedRemoteMembers);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
  lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop(&lazy protocol witness table cache variable for type TUConversationMember and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
  v2 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  v3 = specialized Set.count.getter(v2);
  swift_bridgeObjectRelease();
  if (v3 != 1)
    return 0;
  v4 = objc_msgSend(v0, sel_mergedActiveRemoteParticipants);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
  lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop(&lazy protocol witness table cache variable for type TUConversationParticipant and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
  v5 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  v6 = specialized Set.count.getter(v5);
  swift_bridgeObjectRelease();
  return v6 < 2;
}

BOOL specialized Conversation.allParticipantsAreUnknownContacts.getter()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = objc_msgSend(v0, sel_mergedRemoteMembers);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
  lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop(&lazy protocol witness table cache variable for type TUConversationMember and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
  v2 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  specialized Sequence.compactMap<A>(_:)(v2);
  v4 = v3;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(v4 + 16);
  swift_bridgeObjectRelease();
  return v5 == 0;
}

BOOL specialized Conversation.hasSingleUnknownContact.getter()
{
  void *v0;
  id v1;
  void *v2;
  void *v3;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  void *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v1 = objc_msgSend(v0, sel_mergedRemoteMembers);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
  lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop(&lazy protocol witness table cache variable for type TUConversationMember and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
  static Set._unconditionallyBridgeFromObjectiveC(_:)();

  specialized Collection.first.getter();
  v3 = v2;
  swift_bridgeObjectRelease();
  if (!v3)
    return 0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BD6443F0;
  *(_QWORD *)(inited + 32) = objc_msgSend(v3, sel_handle);
  specialized Array._endMutation()();
  specialized Set.init<A>(_:)(inited, v5, v6, v7, v8, v9, v10, v11, v23, v24, inited, v26, v27, v28, v29, v30, v31, v32, v33,
    v34);
  v13 = v12;
  if (one-time initialization token for faceTime != -1)
    swift_once();
  swift_retain();
  specialized Sequence.compactMap<A>(_:)(v13);
  v15 = v14;
  swift_bridgeObjectRelease();
  v16 = MEMORY[0x1E0DEE9D8];
  v25 = MEMORY[0x1E0DEE9D8];
  v17 = *(_QWORD *)(v15 + 16);
  if (v17)
  {
    swift_bridgeObjectRetain();
    v18 = 32;
    do
    {
      v19 = *(void **)(v15 + v18);
      if (v19)
      {
        v20 = v19;
        MEMORY[0x1C3B7301C]();
        if (*(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      v18 += 56;
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease();
    v16 = v25;
  }

  swift_bridgeObjectRelease();
  if (v16 >> 62)
  {
    swift_bridgeObjectRetain();
    v21 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    v21 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  return v21 == 0;
}

BOOL specialized Conversation.isInitiatorContact.getter()
{
  void *v0;
  id v1;
  unint64_t v2;
  uint64_t v3;

  type metadata accessor for ReportSpamManager();
  v1 = objc_msgSend(v0, sel_initiator);
  v2 = static ReportSpamManager.getContact(forHandle:)(v1);

  if (!v2)
    return 0;
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  return v3 != 0;
}

void InCallControlsCollectionViewController.apply(_:to:animatingDifferences:)(uint64_t a1, void *a2, int a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  _BYTE *v14;
  void (*v15)(_BYTE *, uint64_t, uint64_t);
  uint64_t v16;
  _BOOL4 v17;
  void (*v18)(_BYTE *, uint64_t);
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  void *v24;
  uint64_t v25;
  void *v26;
  _BYTE v27[4];
  int v28;
  void *v29;
  _QWORD aBlock[6];

  v29 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSDiffableDataSourceSnapshot<InCallControlsCollectionViewController.CollectionViewSection, UUID>);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = MEMORY[0x1E0C80A78](v5);
  v9 = &v27[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = &v27[-v11];
  MEMORY[0x1E0C80A78](v10);
  v14 = &v27[-v13];
  v15 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v6 + 16);
  v15(&v27[-v13], a1, v5);
  v28 = a3;
  if ((a3 & 1) != 0)
  {
    v16 = *(_QWORD *)(NSDiffableDataSourceSnapshot.reconfiguredItemIdentifiers.getter() + 16);
    swift_bridgeObjectRelease();
    v17 = v16 != 0;
  }
  else
  {
    v17 = 0;
  }
  v18 = *(void (**)(_BYTE *, uint64_t))(v6 + 8);
  v18(v14, v5);
  v15(v12, a1, v5);
  v15(v9, (uint64_t)v12, v5);
  v19 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v20 = v19 + v7;
  v21 = swift_allocObject();
  v22 = v29;
  *(_QWORD *)(v21 + 16) = v29;
  (*(void (**)(unint64_t, _BYTE *, uint64_t))(v6 + 32))(v21 + v19, v12, v5);
  *(_BYTE *)(v21 + v20) = v28 & 1;
  v23 = v22;
  if (v17)
  {
    v18(v9, v5);
    v24 = (void *)objc_opt_self();
    v25 = swift_allocObject();
    *(_QWORD *)(v25 + 16) = partial apply for closure #1 in InCallControlsCollectionViewController.apply(_:to:animatingDifferences:);
    *(_QWORD *)(v25 + 24) = v21;
    aBlock[4] = partial apply for thunk for @escaping @callee_guaranteed () -> (@owned String);
    aBlock[5] = v25;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
    aBlock[3] = &block_descriptor_59;
    v26 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v24, sel_animateWithDuration_delay_options_animations_completion_, 0, v26, 0, 0.3, 0.0);
    swift_release();
    _Block_release(v26);
  }
  else
  {
    dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)();
    swift_release();
    v18(v9, v5);
  }
}

uint64_t closure #1 in InCallControlsCollectionViewController.apply(_:to:animatingDifferences:)()
{
  return dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)();
}

uint64_t InCallControlsCollectionViewController.reconfigure(_:cellIdentifiers:in:animatingDifferences:)(uint64_t a1, uint64_t a2, void *a3, int a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  int v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v5 = v4;
  v32 = a4;
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSDiffableDataSourceSnapshot<InCallControlsCollectionViewController.CollectionViewSection, UUID>);
  v34 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v33 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = type metadata accessor for Participant(0);
  v11 = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for UUID();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = MEMORY[0x1E0DEE9D8];
  if (a1)
  {
    v29 = a2;
    v30 = a3;
    v31 = v9;
    v18 = *(_QWORD *)(a1 + 16);
    if (v18)
    {
      v28 = v5;
      v37 = MEMORY[0x1E0DEE9D8];
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v18, 0);
      v19 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
      v20 = *(_QWORD *)(v11 + 72);
      v35 = v20;
      do
      {
        _s15ConversationKit11ParticipantVWOcTm_2(v19, (uint64_t)v13, type metadata accessor for Participant);
        (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v17, &v13[*(int *)(v36 + 20)], v14);
        outlined destroy of AccountUpdateNotice((uint64_t)v13, type metadata accessor for Participant);
        v21 = v37;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(v21 + 16) + 1, 1);
          v20 = v35;
          v21 = v37;
        }
        v23 = *(_QWORD *)(v21 + 16);
        v22 = *(_QWORD *)(v21 + 24);
        if (v23 >= v22 >> 1)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v22 > 1, v23 + 1, 1);
          v20 = v35;
          v21 = v37;
        }
        *(_QWORD *)(v21 + 16) = v23 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(v21+ ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))+ *(_QWORD *)(v15 + 72) * v23, v17, v14);
        v37 = v21;
        v19 += v20;
        --v18;
      }
      while (v18);
    }
    specialized Array.append<A>(contentsOf:)();
    a3 = v30;
    v9 = v31;
    a2 = v29;
  }
  if (a2)
  {
    swift_bridgeObjectRetain();
    specialized Array.append<A>(contentsOf:)();
  }
  v24 = (uint64_t)v33;
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();
  v25 = NSDiffableDataSourceSnapshot.itemIdentifiers.getter();
  v26 = specialized _ArrayProtocol.filter(_:)(v38, v25);
  if (*(_QWORD *)(v26 + 16))
  {
    NSDiffableDataSourceSnapshot.reconfigureItems(_:)((Swift::OpaquePointer)v26);
    swift_bridgeObjectRelease();
    InCallControlsCollectionViewController.apply(_:to:animatingDifferences:)(v24, a3, v32 & 1);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 8))(v24, v9);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v24, v9);
    return swift_bridgeObjectRelease();
  }
}

id InCallControlsCollectionViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)MEMORY[0x1C3B72E00]();
    OUTLINED_FUNCTION_53();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void InCallControlsCollectionViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id InCallControlsCollectionViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)OUTLINED_FUNCTION_15_6();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t InCallControlsCollectionViewController.createSectionHeaderViewRegistration()()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for InCallControlsSectionHeaderView();
  return UICollectionView.SupplementaryRegistration.init(elementKind:handler:)();
}

uint64_t InCallControlsCollectionViewController.createActivityCellRegistration()(void (*a1)(_QWORD))
{
  OUTLINED_FUNCTION_15();
  swift_unknownObjectWeakInit();
  a1(0);
  OUTLINED_FUNCTION_33_0();
  return UICollectionView.CellRegistration.init(handler:)();
}

uint64_t InCallControlsCollectionViewController.configureTitleCell(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  id *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  unsigned __int8 *v12;
  id v13;
  unsigned __int8 v14;
  id v15;
  uint64_t v16;
  uint64_t v18[12];

  v2 = v1;
  v4 = (id *)(v2 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_conversation);
  swift_beginAccess();
  if (!*v4)
  {
    v6 = 0;
    goto LABEL_5;
  }
  v5 = objc_msgSend(*v4, sel_displayName);
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  if (!*v4)
  {
LABEL_5:
    v7 = 0;
    v9 = 0xF000000000000000;
    goto LABEL_6;
  }
  v7 = outlined bridged method (ob) of @objc TUConversation.messagesGroupPhotoData.getter(*v4);
  v9 = v8;
LABEL_6:
  v10 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_participants);
  swift_beginAccess();
  v11 = *v10;
  v12 = (unsigned __int8 *)(v2 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_mode);
  swift_beginAccess();
  v13 = *v4;
  v14 = *v12;
  v15 = v13;
  swift_bridgeObjectRetain();
  InCallControlsTitleCellViewModel.init(groupName:groupPhotoData:participants:mode:linksEnabled:shouldUseGroupHeader:conversation:)(v6, v7, v9, v11, v14, 1, v18, (uint64_t)v13);
  InCallControlsTitleCell.configure(with:)(v18);
  outlined release of InCallControlsTitleCellViewModel(v18);
  v16 = a1 + OBJC_IVAR____TtC15ConversationKit23InCallControlsTitleCell_delegate;
  swift_beginAccess();
  *(_QWORD *)(v16 + 8) = &protocol witness table for InCallControlsCollectionViewController;
  return swift_unknownObjectWeakAssign();
}

void InCallControlsCollectionViewController.configureStatusCell(_:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  void **v4;
  void *v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  _OWORD v12[2];
  void *v13;
  __int128 v14;
  __int128 v15;

  v2 = v1;
  v4 = (void **)(v2 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_controlsManager);
  swift_beginAccess();
  v5 = *v4;
  if (*v4)
  {
    swift_beginAccess();
    v6 = v5;
    v7 = swift_bridgeObjectRetain();
    InCallControlsStatusCellViewModel.init(participants:controlsManager:)(v7, v6, (uint64_t *)v12);
    v8 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    (*(void (**)(_OWORD *))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x160))(v12);
    v9 = v2 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_menuHostViewController;
    v10 = MEMORY[0x1C3B752C0](v9);
    (*(void (**)(uint64_t, _QWORD))((*v8 & *a1) + 0xC0))(v10, *(_QWORD *)(v9 + 8));
    v15 = v12[0];
    outlined release of String((uint64_t)&v15);
    v14 = v12[1];
    outlined release of String((uint64_t)&v14);
    v11 = v13;

  }
}

uint64_t InCallControlsCollectionViewController.configureAddParticipantCell(_:)(uint64_t a1)
{
  char v2;
  uint64_t v3;

  v2 = InCallControlsCollectionViewController.isAddingParticipantsAllowed.getter();
  InCallControlsBaseCell.isEnabled.setter(v2 & 1);
  v3 = a1 + OBJC_IVAR____TtC15ConversationKit22InCallControlsBaseCell_delegate;
  swift_beginAccess();
  *(_QWORD *)(v3 + 8) = &protocol witness table for InCallControlsCollectionViewController;
  return swift_unknownObjectWeakAssign();
}

uint64_t InCallControlsCollectionViewController.configureLinkLayoutCell(_:)(_QWORD *a1)
{
  uint64_t v1;
  char v3;
  char *v4;
  char v5;
  _BYTE v7[2];

  v3 = InCallControlsCollectionViewController.isLinkSharingAllowed.getter();
  v4 = (char *)(v1 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_gridLayoutStyle);
  swift_beginAccess();
  v5 = *v4;
  v7[0] = v3 & 1;
  v7[1] = v5;
  return (*(uint64_t (**)(_BYTE *, uint64_t, _UNKNOWN **))((*MEMORY[0x1E0DEEDD8] & *a1) + 0xC0))(v7, v1, &protocol witness table for InCallControlsCollectionViewController);
}

void InCallControlsCollectionViewController.configureIgnoreLMIRequestsCell(_:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  id *v4;
  id v5;
  id v6;
  _QWORD *v7;
  void (*v8)(uint64_t, _UNKNOWN **);
  uint64_t v9;

  v2 = v1;
  v4 = (id *)(v2 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_conversation);
  swift_beginAccess();
  if (*v4)
  {
    v5 = *v4;
    v6 = objc_msgSend(v5, sel_ignoreLMIRequests);
    v7 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    (*(void (**)(id))((*MEMORY[0x1E0DEEDD8] & *a1) + 0xD8))(v6);
    v8 = *(void (**)(uint64_t, _UNKNOWN **))((*v7 & *a1) + 0x78);
    v9 = swift_unknownObjectRetain();
    v8(v9, &protocol witness table for InCallControlsCollectionViewController);

  }
}

void closure #7 in InCallControlsCollectionViewController.configureCellRegistrations()(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void (*v8)(uint64_t, _UNKNOWN **);
  uint64_t v9;

  v5 = a4 + 16;
  swift_beginAccess();
  v6 = MEMORY[0x1C3B752C0](v5);
  if (v6)
  {
    v7 = (void *)v6;
    v8 = *(void (**)(uint64_t, _UNKNOWN **))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x70);
    v9 = swift_unknownObjectRetain();
    v8(v9, &protocol witness table for InCallControlsCollectionViewController);

  }
}

void InCallControlsCollectionViewController.configureBlockUnknownCallerCell(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void **v8;
  void *v9;
  id v10;
  NSObject *v11;
  id v12;
  unsigned int v13;
  NSObject *v14;
  BOOL v15;
  uint64_t v16;
  os_log_type_t v17;
  uint8_t *v18;
  NSObject *v19;
  BOOL v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  _BOOL8 v31;
  uint64_t v32;

  v2 = v1;
  v4 = type metadata accessor for Participant(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (void **)(v1 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_conversation);
  swift_beginAccess();
  v9 = *v8;
  if (v9)
  {
    v10 = objc_allocWithZone(MEMORY[0x1E0DBD2F0]);
    v11 = v9;
    v12 = objc_msgSend(v10, sel_init);
    v13 = objc_msgSend(v12, sel_groupFaceTimeBlockEnabled);

    if (v13
      && (v14 = v11,
          v15 = specialized Conversation.hasExactlyOneRemoteParticipant.getter(),
          v14,
          !v15))
    {
      v19 = v14;
      v20 = specialized Conversation.allParticipantsAreUnknownContacts.getter();

      v31 = v20;
    }
    else
    {
      v31 = 0;
    }
    v21 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_participants);
    swift_beginAccess();
    v22 = *v21;
    v32 = MEMORY[0x1E0DEE9D8];
    v23 = *(_QWORD *)(v22 + 16);
    if (v23)
    {
      v29 = a1;
      v30 = v11;
      v24 = v22 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
      v25 = *(_QWORD *)(v5 + 72);
      swift_bridgeObjectRetain_n();
      do
      {
        _s15ConversationKit11ParticipantVWOcTm_2(v24, (uint64_t)v7, type metadata accessor for Participant);
        v26 = *(void **)&v7[*(int *)(v4 + 28)];
        if (v26)
        {
          v27 = v26;
          outlined destroy of AccountUpdateNotice((uint64_t)v7, type metadata accessor for Participant);
          MEMORY[0x1C3B7301C]();
          if (*(_QWORD *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
        }
        else
        {
          outlined destroy of AccountUpdateNotice((uint64_t)v7, type metadata accessor for Participant);
        }
        v24 += v25;
        --v23;
      }
      while (v23);
      swift_bridgeObjectRelease();
      v28 = v32;
      v11 = v30;
    }
    else
    {
      swift_bridgeObjectRetain();
      v28 = MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();
    InCallControlsBlockCell.viewModel.setter(v31, v28);
  }
  else
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v16 = type metadata accessor for Logger();
    __swift_project_value_buffer(v16, (uint64_t)&static Logger.conversationControls);
    v11 = Logger.logObject.getter();
    v17 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v11, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v18 = 0;
      _os_log_impl(&dword_1BD004000, v11, v17, "Cannot configure block unknown caller cell because conversation is nil", v18, 2u);
      MEMORY[0x1C3B751B8](v18, -1, -1);
    }
  }

}

void closure #8 in InCallControlsCollectionViewController.configureCellRegistrations()()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_185_0();
}

void sub_1BD325BD8(void *a1)
{
  uint64_t v1;

  if (a1)
  {
    InCallControlsCollectionViewController.configureBlockUnknownCallerCell(_:)(v1);

  }
  OUTLINED_FUNCTION_32();
}

void closure #10 in InCallControlsCollectionViewController.configureCellRegistrations()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  v4 = a4 + 16;
  swift_beginAccess();

}

void InCallControlsCollectionViewController.configurePTTTitleCell(_:)()
{
  uint64_t v0;
  _QWORD **v1;
  _QWORD *v2;
  void (*v3)(void);
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11[7];

  v1 = (_QWORD **)(v0 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_controlsManager);
  swift_beginAccess();
  v2 = *v1;
  if (*v1)
  {
    v3 = *(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v2) + 0x270);
    v4 = v2;
    v3();
    v6 = v5;
    ObjectType = swift_getObjectType();
    LOBYTE(v6) = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 216))(ObjectType, v6);
    v8 = swift_unknownObjectRelease();
    if ((v6 & 1) != 0)
    {
      ((void (*)(uint64_t))v3)(v8);
      objc_opt_self();
      v9 = swift_dynamicCastObjCClass();
      if (v9)
      {
        v10 = (void *)v9;
        swift_unknownObjectRetain();
        InCallControlsPTTCallDetailsViewModel.init(pttCall:)(v10, v11);
        InCallControlsPTTTitleCell.configure(with:)(v11);
        outlined release of InCallControlsPTTCallDetailsViewModel((uint64_t)v11);
      }

      swift_unknownObjectRelease();
    }
    else
    {

    }
  }
}

void InCallControlsCollectionViewController.configureLeavePTTChannelCell(_:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD **v4;
  _QWORD *v5;
  _QWORD *v6;
  void (*v7)(void);
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17[7];

  v2 = v1;
  v4 = (_QWORD **)(v1 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_controlsManager);
  swift_beginAccess();
  v5 = *v4;
  if (*v4)
  {
    v6 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    v7 = *(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v5) + 0x270);
    v8 = v5;
    v7();
    v10 = v9;
    ObjectType = swift_getObjectType();
    LOBYTE(v10) = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 216))(ObjectType, v10);
    v12 = swift_unknownObjectRelease();
    if ((v10 & 1) != 0)
    {
      ((void (*)(uint64_t))v7)(v12);
      objc_opt_self();
      v13 = swift_dynamicCastObjCClass();
      if (v13)
      {
        v14 = (void *)v13;
        swift_unknownObjectRetain();
        InCallControlsPTTCallDetailsViewModel.init(pttCall:)(v14, v17);
        v15 = (*(uint64_t (**)(uint64_t *))((*v6 & *a1) + 0xD0))(v17);
        v16 = (void *)(*(uint64_t (**)(uint64_t))((*v6 & *a1) + 0x70))(v15);
        objc_msgSend(v16, sel_addTarget_action_forControlEvents_, v2, sel_didTapPTTLeaveChannelButton_, 64);

        outlined release of InCallControlsPTTCallDetailsViewModel((uint64_t)v17);
      }

      swift_unknownObjectRelease();
    }
    else
    {

    }
  }
}

void closure #1 in InCallControlsCollectionViewController.configureCellRegistrations()()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_5_72();
}

void sub_1BD325EE4(void *a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  if (a1)
  {
    v1(v2);

  }
  OUTLINED_FUNCTION_9_0();
}

void InCallControlsCollectionViewController.configureOpenPTTAppCell(_:)(_QWORD *a1)
{
  uint64_t v1;
  _QWORD **v3;
  _QWORD *v4;
  _QWORD *v5;
  void (*v6)(void);
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14[7];

  v3 = (_QWORD **)(v1 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_controlsManager);
  swift_beginAccess();
  v4 = *v3;
  if (*v3)
  {
    v5 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    v6 = *(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v4) + 0x270);
    v7 = v4;
    v6();
    v9 = v8;
    ObjectType = swift_getObjectType();
    LOBYTE(v9) = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 216))(ObjectType, v9);
    v11 = swift_unknownObjectRelease();
    if ((v9 & 1) != 0)
    {
      ((void (*)(uint64_t))v6)(v11);
      objc_opt_self();
      v12 = swift_dynamicCastObjCClass();
      if (v12)
      {
        v13 = (void *)v12;
        swift_unknownObjectRetain();
        InCallControlsPTTCallDetailsViewModel.init(pttCall:)(v13, v14);
        (*(void (**)(uint64_t *))((*v5 & *a1) + 0x90))(v14);
        outlined release of InCallControlsPTTCallDetailsViewModel((uint64_t)v14);
      }

      swift_unknownObjectRelease();
    }
    else
    {

    }
  }
}

void closure #1 in InCallControlsCollectionViewController.createSectionHeaderViewRegistration()(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  _BYTE v13[40];

  v6 = a5 + 16;
  swift_beginAccess();
  v7 = MEMORY[0x1C3B752C0](v6);
  if (v7)
  {
    v8 = (void *)v7;
    v9 = v7 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_activity;
    swift_beginAccess();
    outlined init with copy of Participant.ScreenInfo?(v9, (uint64_t)&v11, &demangling cache variable for type metadata for Activity?);
    if (v12)
    {
      outlined init with take of Notice(&v11, (uint64_t)v13);
      outlined init with copy of RadarReporting((uint64_t)v13, (uint64_t)&v11);
      v10 = InCallControlsActivitySectionHeaderViewModel.init(activity:)(&v11);
      (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x58))(v10);

      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
    }
    else
    {

      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v11, &demangling cache variable for type metadata for Activity?);
    }
  }
}

void closure #1 in InCallControlsCollectionViewController.createActivityCellRegistration()(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  void *v13;
  void **v14;
  void *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t (*v18)(void *, _UNKNOWN **);
  _QWORD *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  _BYTE v28[24];
  __int128 v29;
  uint64_t v30;
  _BYTE v31[40];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v6);
  v8 = &v28[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for InCallControlsActivityCellViewModel();
  MEMORY[0x1E0C80A78](v9);
  v11 = &v28[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  v12 = MEMORY[0x1C3B752C0](a4 + 16);
  if (v12)
  {
    v13 = (void *)v12;
    v14 = (void **)(v12 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_controlsManager);
    swift_beginAccess();
    v15 = *v14;
    if (*v14)
    {
      v16 = (uint64_t)v13 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_activity;
      swift_beginAccess();
      outlined init with copy of Participant.ScreenInfo?(v16, (uint64_t)&v29, &demangling cache variable for type metadata for Activity?);
      if (v30)
      {
        outlined init with take of Notice(&v29, (uint64_t)v31);
        v17 = (_QWORD *)MEMORY[0x1E0DEEDD8];
        v18 = *(uint64_t (**)(void *, _UNKNOWN **))((*MEMORY[0x1E0DEEDD8] & *a1) + 0xA0);
        v19 = v15;
        v20 = v13;
        v21 = v18(v13, &protocol witness table for InCallControlsCollectionViewController);
        v22 = (*(uint64_t (**)(uint64_t))((*v17 & *v19) + 0x270))(v21);
        v24 = v23;
        outlined init with copy of RadarReporting((uint64_t)v31, (uint64_t)&v29);
        (*(void (**)(void))((*v17 & *v19) + 0x2B8))();
        v25 = type metadata accessor for Participant(0);
        __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v25);
        v26 = (uint64_t *)&v20[OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_participants];
        swift_beginAccess();
        v27 = *v26;
        swift_bridgeObjectRetain();
        InCallControlsActivityCellViewModel.init(call:activity:localParticipant:participants:)(v22, v24, (uint64_t)&v29, (uint64_t)v8, v27, v11);
        (*(void (**)(_QWORD *))((*v17 & *a1) + 0xB0))(v11);

        outlined destroy of AccountUpdateNotice((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for InCallControlsActivityCellViewModel);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
      }
      else
      {

        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v29, &demangling cache variable for type metadata for Activity?);
      }
    }
    else
    {

    }
  }
}

void closure #1 in InCallControlsCollectionViewController.createParticipantCellRegistration()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  unsigned __int8 *v47;
  unsigned __int8 v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;

  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  MEMORY[0x1E0C80A78](v8);
  v59 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for InCallControlsParticipantCellViewModel();
  MEMORY[0x1E0C80A78](v10);
  v58 = (uint64_t)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Participant(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x1E0C80A78](v15);
  v57 = (uint64_t)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v53 - v20;
  MEMORY[0x1E0C80A78](v19);
  v23 = (char *)&v53 - v22;
  swift_beginAccess();
  v24 = MEMORY[0x1C3B752C0](a4 + 16);
  if (v24)
  {
    v25 = (char *)v24;
    v55 = a1;
    v56 = a2;
    v26 = (uint64_t *)(v24 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_participants);
    swift_beginAccess();
    v54 = v26;
    v27 = *v26;
    v28 = *(_QWORD *)(*v26 + 16);
    if (v28)
    {
      v53 = v25;
      v29 = v27 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
      v30 = *(_QWORD *)(v16 + 72);
      swift_bridgeObjectRetain();
      while (1)
      {
        _s15ConversationKit11ParticipantVWOcTm_2(v29, (uint64_t)v21, type metadata accessor for Participant);
        if ((static UUID.== infix(_:_:)() & 1) != 0)
          break;
        outlined destroy of AccountUpdateNotice((uint64_t)v21, type metadata accessor for Participant);
        v29 += v30;
        if (!--v28)
        {
          v31 = 1;
          goto LABEL_9;
        }
      }
      outlined init with take of Participant((uint64_t)v21, (uint64_t)v14);
      v31 = 0;
LABEL_9:
      v25 = v53;
    }
    else
    {
      swift_bridgeObjectRetain();
      v31 = 1;
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v14, v31, 1, v15);
    swift_bridgeObjectRelease();
    if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15) == 1)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v14, &demangling cache variable for type metadata for Participant?);
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v32 = swift_allocObject();
      *(_OWORD *)(v32 + 16) = xmmword_1BD646740;
      v33 = type metadata accessor for UUID();
      v34 = (uint64_t)v59;
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v59, a3, v33);
      __swift_storeEnumTagSinglePayload(v34, 0, 1, v33);
      specialized >> prefix<A>(_:)(v34);
      v36 = v35;
      v38 = v37;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v34, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      v39 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v32 + 56) = MEMORY[0x1E0DEA968];
      v40 = lazy protocol witness table accessor for type String and conformance String();
      *(_QWORD *)(v32 + 64) = v40;
      *(_QWORD *)(v32 + 32) = v36;
      *(_QWORD *)(v32 + 40) = v38;
      v60 = IndexPath.item.getter();
      v41 = String.init<A>(reflecting:)();
      *(_QWORD *)(v32 + 96) = v39;
      *(_QWORD *)(v32 + 104) = v40;
      *(_QWORD *)(v32 + 72) = v41;
      *(_QWORD *)(v32 + 80) = v42;
      v60 = *v54;
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [Participant]);
      v43 = String.init<A>(reflecting:)();
      *(_QWORD *)(v32 + 136) = v39;
      *(_QWORD *)(v32 + 144) = v40;
      *(_QWORD *)(v32 + 112) = v43;
      *(_QWORD *)(v32 + 120) = v44;
      os_log(_:dso:log:type:_:)();

      swift_bridgeObjectRelease();
    }
    else
    {
      outlined init with take of Participant((uint64_t)v14, (uint64_t)v23);
      v45 = v57;
      _s15ConversationKit11ParticipantVWOcTm_2((uint64_t)v23, v57, type metadata accessor for Participant);
      v46 = InCallControlsCollectionViewController.participantSupportsMultiway(_:)((uint64_t)v23);
      v47 = (unsigned __int8 *)&v25[OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_mode];
      swift_beginAccess();
      v48 = *v47;
      v49 = InCallControlsCollectionViewController.isLocalMemberAuthorizedToChangeGroupMembership.getter();
      v50 = v58;
      InCallControlsParticipantCellViewModel.init(participant:supportsMultiway:mode:isLocalMemberAuthorizedToChangeGroupMembership:)(v45, v46 & 1, v48, v49 & 1, v58);
      v51 = v55;
      InCallControlsParticipantCell.configure(with:)(v50);
      outlined destroy of AccountUpdateNotice(v50, (uint64_t (*)(_QWORD))type metadata accessor for InCallControlsParticipantCellViewModel);
      outlined destroy of AccountUpdateNotice((uint64_t)v23, type metadata accessor for Participant);
      v52 = v51 + OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell_participantCellDelegate;
      swift_beginAccess();
      *(_QWORD *)(v52 + 8) = &protocol witness table for InCallControlsCollectionViewController;
      swift_unknownObjectWeakAssign();

    }
  }
}

uint64_t InCallControlsCollectionViewController.participantSupportsMultiway(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v3 = (*(uint64_t (**)(void))(**(_QWORD **)(v1
                                          + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_capabilitiesChecker)
                            + 120))();
  v4 = OUTLINED_FUNCTION_14_2();
  specialized Dictionary.subscript.getter(a1 + *(int *)(v4 + 20), v3);
  v6 = v5;
  swift_bridgeObjectRelease();
  if (v6 == 2)
    return 0;
  if (v6 == 3)
    return 1;
  return (v6 >> 24) & 1;
}

id InCallControlsCollectionViewController.didTapPTTLeaveChannelButton(_:)(uint64_t a1)
{
  uint64_t v1;
  id *v3;
  id result;

  v3 = (id *)(v1 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_controlsManager);
  swift_beginAccess();
  result = *v3;
  if (*v3)
    return objc_msgSend(result, sel_pttLeaveButtonTappedWithButton_, a1);
  return result;
}

uint64_t InCallControlsCollectionViewController.collectionView(_:didSelectItemAt:)()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  Class isa;
  Class v28;
  id v29;
  _QWORD v31[19];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  OUTLINED_FUNCTION_93();
  v1 = v0;
  v3 = v2;
  type metadata accessor for IndexPath();
  OUTLINED_FUNCTION_300_0();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_33_18(v5);
  v32 = OUTLINED_FUNCTION_33_0();
  v31[17] = *(_QWORD *)(v32 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_33_18(v7);
  v31[18] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_5_27();
  OUTLINED_FUNCTION_5_18();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_5_18();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_5_18();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_33_18((uint64_t)v31 - v12);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_5_27();
  OUTLINED_FUNCTION_5_18();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_5_18();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_5_18();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_5_18();
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_5_18();
  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_5_18();
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_5_18();
  v21 = MEMORY[0x1E0C80A78](v20);
  v22 = MEMORY[0x1E0C80A78](v21);
  MEMORY[0x1E0C80A78](v22);
  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_5_18();
  v24 = MEMORY[0x1E0C80A78](v23);
  MEMORY[0x1E0C80A78](v24);
  v33 = type metadata accessor for InCallControlsCollectionViewController.Action(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v25);
  OUTLINED_FUNCTION_41();
  v34 = v26;
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v3, sel_deselectItemAtIndexPath_animated_, isa, 1);

  v35 = v1;
  v28 = IndexPath._bridgeToObjectiveC()().super.isa;
  v29 = objc_msgSend(v3, sel_cellForItemAtIndexPath_, v28);

  if (v29)
  {
    OUTLINED_FUNCTION_1();
    OUTLINED_FUNCTION_185_0();
  }
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  static os_log_type_t.error.getter();
  OUTLINED_FUNCTION_127_5();
  return OUTLINED_FUNCTION_30_48();
}

void sub_1BD32791C()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;

  OUTLINED_FUNCTION_93_4(*(_QWORD *)(v1 - 376), *(_QWORD *)(v1 - 224), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 16));
  *(_QWORD *)(v1 - 152) = 0;
  *(_QWORD *)(v1 - 144) = 0xE000000000000000;
  _StringGuts.grow(_:)(29);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 - 152) = 0xD00000000000001BLL;
  *(_QWORD *)(v1 - 144) = 0x80000001BD685290;
  *(_QWORD *)(v1 - 216) = IndexPath.section.getter();
  v2._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v2);
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_58_24();
  __break(1u);
  JUMPOUT(0x1BD3279D8);
}

void closure #1 in InCallControlsCollectionViewController.collectionView(_:didSelectItemAt:)()
{
  OUTLINED_FUNCTION_43_44();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;

  OUTLINED_FUNCTION_93();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  type metadata accessor for InCallControlsCollectionViewController.Action(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_77();
  v11 = v10 - v9;
  if ((v7 & 1) != 0)
  {
    ObjectType = swift_getObjectType();
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 8))(v3, v11, v1, ObjectType, v5);
    outlined destroy of AccountUpdateNotice(v11, type metadata accessor for InCallControlsCollectionViewController.Action);
    OUTLINED_FUNCTION_52_1();
  }
  else
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.debug.getter();
    OUTLINED_FUNCTION_21_6();
    OUTLINED_FUNCTION_91_11();
    OUTLINED_FUNCTION_30_48();
  }
}

void InCallControlsCollectionViewController.participantIdentifiers.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_93();
  v17 = OUTLINED_FUNCTION_14_2();
  v3 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_4_1();
  v4 = OUTLINED_FUNCTION_33_0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_11_2();
  v6 = (uint64_t *)(v0 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_participants);
  OUTLINED_FUNCTION_1();
  v7 = *v6;
  v8 = *(_QWORD *)(*v6 + 16);
  if (v8)
  {
    v18 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v8, 0);
    OUTLINED_FUNCTION_37_3();
    v10 = v7 + v9;
    v16 = *(_QWORD *)(v3 + 72);
    do
    {
      OUTLINED_FUNCTION_96_11(v10, v1);
      OUTLINED_FUNCTION_93_4(v2, v1 + *(int *)(v17 + 20), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16));
      OUTLINED_FUNCTION_137_1(v1);
      v11 = v18;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_53_31(0, *(_QWORD *)(v18 + 16) + 1);
        v11 = v18;
      }
      v13 = *(_QWORD *)(v11 + 16);
      v12 = *(_QWORD *)(v11 + 24);
      if (v13 >= v12 >> 1)
      {
        v15 = OUTLINED_FUNCTION_138_4(v12);
        OUTLINED_FUNCTION_53_31(v15, v13 + 1);
        v11 = v18;
      }
      *(_QWORD *)(v11 + 16) = v13 + 1;
      OUTLINED_FUNCTION_37_3();
      OUTLINED_FUNCTION_93_4(v11 + v14 + *(_QWORD *)(v5 + 72) * v13, v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 32));
      v18 = v11;
      v10 += v16;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_52_1();
}

void InCallControlsCollectionViewController.participantCount.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

double InCallControlsCollectionViewController.spatialPosition(for:relativeTo:)()
{
  return 0.0;
}

void protocol witness for ParticipantsViewController.participantsViewControllerDelegate.getter in conformance InCallControlsCollectionViewController()
{
  InCallControlsCollectionViewController.participantsViewControllerDelegate.getter();
}

void protocol witness for ParticipantsViewController.participantsViewControllerDelegate.setter in conformance InCallControlsCollectionViewController(uint64_t a1, uint64_t a2)
{
  InCallControlsCollectionViewController.participantsViewControllerDelegate.setter(a1, a2);
}

uint64_t (*protocol witness for ParticipantsViewController.participantsViewControllerDelegate.modify in conformance InCallControlsCollectionViewController(_QWORD *a1))()
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = *v1;
  v5 = OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_participantsViewControllerDelegate;
  v3[5] = *v1;
  v3[6] = v5;
  v6 = v4 + v5;
  swift_beginAccess();
  v7 = MEMORY[0x1C3B752C0](v6);
  v8 = *(_QWORD *)(v6 + 8);
  v3[3] = v7;
  v3[4] = v8;
  return InCallControlsCollectionViewController.participantsViewControllerDelegate.modify;
}

void protocol witness for ParticipantsViewController.participantIdentifiers.getter in conformance InCallControlsCollectionViewController()
{
  InCallControlsCollectionViewController.participantIdentifiers.getter();
}

void protocol witness for ParticipantsViewController.participantCount.getter in conformance InCallControlsCollectionViewController()
{
  InCallControlsCollectionViewController.participantCount.getter();
}

void protocol witness for ParticipantsViewController.update(participant:broadcastingState:) in conformance InCallControlsCollectionViewController()
{
  InCallControlsCollectionViewController.update(participant:broadcastingState:)();
}

void protocol witness for ParticipantsViewController.update(participant:isKickingAvailable:) in conformance InCallControlsCollectionViewController()
{
  InCallControlsCollectionViewController.update(participant:isKickingAvailable:)();
}

void protocol witness for ParticipantsViewController.update(with:updateReason:) in conformance InCallControlsCollectionViewController()
{
  InCallControlsCollectionViewController.update(with:updateReason:)();
}

void protocol witness for ParticipantsViewController.updateLocalViews(for:isLocalMemberAuthorizedToChangeGroupMembership:) in conformance InCallControlsCollectionViewController(Swift::OpaquePointer a1, Swift::Bool a2)
{
  InCallControlsCollectionViewController.updateLocalViews(for:isLocalMemberAuthorizedToChangeGroupMembership:)(a1, a2);
}

void InCallControlsCollectionViewController.inCallControlsParticipantCell(_:didTapAction:for:)()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_93();
  type metadata accessor for InCallControlsCollectionViewController.Action(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_77();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_77();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_5_72();
}

void InCallControlsCollectionViewController.inCallControlsActivityCell(_:didTap:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t);
  uint64_t v9;

  type metadata accessor for InCallControlsCollectionViewController.Action(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_4_1();
  v6 = v2
     + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_inCallControlsCollectionViewControllerDelegate;
  OUTLINED_FUNCTION_1();
  if (MEMORY[0x1C3B752C0](v6))
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.default.getter();
    OUTLINED_FUNCTION_128_5();
    swift_getObjectType();
    outlined init with copy of RadarReporting(a2, v3);
    OUTLINED_FUNCTION_38_21();
    swift_storeEnumTagMultiPayload();
    v7 = OUTLINED_FUNCTION_52_28();
    v8(v7);
    v9 = swift_unknownObjectRelease();
    OUTLINED_FUNCTION_315(v9, type metadata accessor for InCallControlsCollectionViewController.Action);
  }
  else
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.error.getter();
    OUTLINED_FUNCTION_55_0();
  }
  OUTLINED_FUNCTION_65_1();
}

void InCallControlsCollectionViewController.shareLinkCell(cell:tappedCopyLinkButton:)(void *a1, uint64_t a2)
{
  InCallControlsCollectionViewController.shareLinkCell(cell:tappedCopyLinkButton:)(a1, a2, (uint64_t)"User tapped copy link", 21, (void (*)(uint64_t, uint64_t, uint64_t, char *, void *))specialized static SpringBoardUtilities.requestPasscodeUnlock(_:));
}

void closure #1 in InCallControlsCollectionViewController.shareLinkCell(cell:tappedCopyLinkButton:)()
{
  closure #1 in InCallControlsCollectionViewController.collectionView(_:didSelectItemAt:)();
}

void InCallControlsCollectionViewController.inCallControlsTitleCell(_:didTap:from:)(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v3;
  uint64_t v4;

  type metadata accessor for InCallControlsCollectionViewController.Action(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_4_1();
  if (a2 - 2 >= 3)
  {
    if (a2)
    {
      if (one-time initialization token for conversationKit == -1)
      {
LABEL_9:
        static os_log_type_t.default.getter();
        OUTLINED_FUNCTION_129_6();
        OUTLINED_FUNCTION_38_21();
        swift_storeEnumTagMultiPayload();
        OUTLINED_FUNCTION_65_2();
        InCallControlsCollectionViewController.inCallControlsTitleCellDidTapButton(_:_:)();
        OUTLINED_FUNCTION_315(v4, type metadata accessor for InCallControlsCollectionViewController.Action);
        return;
      }
    }
    else if (one-time initialization token for conversationKit == -1)
    {
      goto LABEL_9;
    }
    swift_once();
    goto LABEL_9;
  }
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  static os_log_type_t.default.getter();
  OUTLINED_FUNCTION_127_5();
  os_log(_:dso:log:type:_:)();
}

void InCallControlsCollectionViewController.inCallControlsTitleCellDidTapButton(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);

  v1 = v0
     + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_inCallControlsCollectionViewControllerDelegate;
  OUTLINED_FUNCTION_1();
  if (MEMORY[0x1C3B752C0](v1))
  {
    swift_getObjectType();
    v2 = OUTLINED_FUNCTION_52_28();
    v3(v2);
    OUTLINED_FUNCTION_9_10();
  }
  else
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.error.getter();
    OUTLINED_FUNCTION_55_0();
  }
  OUTLINED_FUNCTION_2_3();
}

void InCallControlsCollectionViewController.inCallControlsBaseCellDidTapButton(_:)(void *a1)
{
  char *v1;
  uint64_t v3;
  unint64_t v4;
  char *v5;
  char *v6;
  id v7;

  type metadata accessor for InCallControlsAddParticipantCell();
  if (swift_dynamicCastClass())
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v3 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v3 + 16) = xmmword_1BD6441D0;
    InCallControlsCollectionViewController.isAddingParticipantsAllowed.getter();
    String.init<A>(reflecting:)();
    *(_QWORD *)(v3 + 56) = MEMORY[0x1E0DEA968];
    v4 = lazy protocol witness table accessor for type String and conformance String();
    OUTLINED_FUNCTION_11_62(v4);
    OUTLINED_FUNCTION_91_11();
    os_log(_:dso:log:type:_:)();
    OUTLINED_FUNCTION_53();
    v5 = &v1[OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_inCallControlsCollectionViewControllerDelegate];
    OUTLINED_FUNCTION_1();
    if (MEMORY[0x1C3B752C0](v5))
    {
      if ((InCallControlsCollectionViewController.isAddingParticipantsAllowed.getter() & 1) != 0)
      {
        OUTLINED_FUNCTION_134_4();
        v6 = v1;
        v7 = a1;
        specialized static SpringBoardUtilities.requestPasscodeUnlock(_:)();
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
    else
    {
      static os_log_type_t.error.getter();
      OUTLINED_FUNCTION_55_0();
    }
  }
  OUTLINED_FUNCTION_5_22();
}

void InCallControlsCollectionViewController.idsCapabilitiesChecker(_:didUpdate:)()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_dataSource);
  if (v1)
  {
    v5 = v1;
    if (OUTLINED_FUNCTION_25_1((uint64_t)v5, sel_isViewLoaded))
    {
      v2 = swift_bridgeObjectRetain();
      specialized _copyCollectionToContiguousArray<A>(_:)(v2);
      v4 = v3;
      OUTLINED_FUNCTION_13_3();
      InCallControlsCollectionViewController.reloadItems(_:in:animatingDifferences:)(v4, (uint64_t)v5, 1, (void (*)(uint64_t, uint64_t))specialized _ArrayProtocol.filter(_:), MEMORY[0x1E0DC2418]);

      swift_release();
    }
    else
    {

    }
  }
}

void InCallControlsCollectionViewController.inCallControlsDidToggleIgnoreLMIRequestsCell(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;

  type metadata accessor for InCallControlsCollectionViewController.Action(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_4_1();
  v2 = v0
     + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_inCallControlsCollectionViewControllerDelegate;
  OUTLINED_FUNCTION_1();
  if (MEMORY[0x1C3B752C0](v2))
  {
    swift_getObjectType();
    OUTLINED_FUNCTION_38_21();
    swift_storeEnumTagMultiPayload();
    v3 = OUTLINED_FUNCTION_52_28();
    v4(v3);
    v5 = OUTLINED_FUNCTION_45_34();
    OUTLINED_FUNCTION_315(v5, type metadata accessor for InCallControlsCollectionViewController.Action);
  }
  else
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.error.getter();
    OUTLINED_FUNCTION_55_0();
  }
  OUTLINED_FUNCTION_65_1();
}

void InCallControlsCollectionViewController.inCallControlsDidToggleCaptionsCell(_:)()
{
  uint64_t v0;

  OUTLINED_FUNCTION_93();
  type metadata accessor for InCallControlsCollectionViewController.Action(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_5_72();
}

void sub_1BD328928(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  id v11;
  uint64_t ObjectType;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  Swift::String v29;
  Swift::String_optional v30;
  Swift::String v31;
  Swift::String v32;
  uint64_t v33;
  id v34;
  Swift::String v35;

  if (!a1)
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.error.getter();
    OUTLINED_FUNCTION_55_0();
    goto LABEL_15;
  }
  v7 = *(_QWORD *)(v2 + 8);
  v8 = (_QWORD *)OUTLINED_FUNCTION_15();
  v8[2] = a1;
  v8[3] = v7;
  v8[4] = v1;
  v8[5] = v3;
  v9 = one-time initialization token for shared;
  v10 = v3;
  v11 = v1;
  swift_unknownObjectRetain();
  if (v9 != -1)
    swift_once();
  if (((*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 704))() & 1) != 0)
    goto LABEL_8;
  if (one-time initialization token for shared != -1)
    swift_once();
  if (((*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)static ConversationCapabilities.shared) + 0x50))() & 1) != 0)
  {
LABEL_8:
    ObjectType = swift_getObjectType();
    swift_storeEnumTagMultiPayload();
    (*(void (**)(id, uint64_t, _QWORD *, uint64_t, uint64_t))(v7 + 8))(v11, v4, v10, ObjectType, v7);
    outlined destroy of AccountUpdateNotice(v4, type metadata accessor for InCallControlsCollectionViewController.Action);
    InCallControlsCollectionViewController.configureToggleCaptionsCell(_:)(v10);
LABEL_14:
    swift_release();
    swift_unknownObjectRelease();
LABEL_15:
    OUTLINED_FUNCTION_52_1();
    return;
  }
  v13 = (void *)objc_opt_self();
  v14 = objc_msgSend(v13, sel_conversationKit);
  *(_QWORD *)(v5 - 112) = OUTLINED_FUNCTION_18_69(0xD00000000000001FLL, 0x80000001BD6856A0);
  v16 = v15;

  v17 = (void *)MEMORY[0x1C3B72E00](0xD000000000000021, 0x80000001BD6856C0);
  v18 = (id)TUStringKeyForProduct();

  if (v18)
  {
    OUTLINED_FUNCTION_59(v19, (unint64_t *)&lazy cache variable for type metadata for UIAlertController);
    v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v22 = v21;

    v23 = objc_msgSend(v13, sel_conversationKit);
    v24 = OUTLINED_FUNCTION_18_69(v20, v22);
    v26 = v25;
    swift_bridgeObjectRelease();

    v27 = @nonobjc UIAlertController.__allocating_init(title:message:preferredStyle:)(*(_QWORD *)(v5 - 112), v16, v24, v26, 1);
    OUTLINED_FUNCTION_59((uint64_t)v27, (unint64_t *)&lazy cache variable for type metadata for UIAlertAction);
    v28 = objc_msgSend(v13, sel_conversationKit);
    v29._countAndFlagsBits = 0xD000000000000020;
    v35._object = (void *)0xE000000000000000;
    v29._object = (void *)0x80000001BD6856F0;
    v30.value._countAndFlagsBits = 0x61737265766E6F43;
    v30.value._object = (void *)0xEF74694B6E6F6974;
    v31._countAndFlagsBits = 0;
    v31._object = (void *)0xE000000000000000;
    v35._countAndFlagsBits = 0;
    v32 = NSLocalizedString(_:tableName:bundle:value:comment:)(v29, v30, (NSBundle)v28, v31, v35);

    v33 = OUTLINED_FUNCTION_15();
    *(_QWORD *)(v33 + 16) = partial apply for closure #1 in InCallControlsCollectionViewController.inCallControlsDidToggleCaptionsCell(_:);
    *(_QWORD *)(v33 + 24) = v8;
    swift_retain();
    v34 = @nonobjc UIAlertAction.__allocating_init(title:style:handler:)(v32._countAndFlagsBits, (uint64_t)v32._object, 0, (uint64_t)partial apply for closure #2 in InCallControlsCollectionViewController.inCallControlsDidToggleCaptionsCell(_:));
    objc_msgSend(v27, sel_addAction_, v34);
    objc_msgSend(v11, sel_presentViewController_animated_completion_, v27, 1, 0);

    goto LABEL_14;
  }
  __break(1u);
}

uint64_t closure #1 in InCallControlsCollectionViewController.inCallControlsDidToggleCaptionsCell(_:)(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t ObjectType;
  uint64_t v12;

  v7 = type metadata accessor for InCallControlsCollectionViewController.Action(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  ObjectType = swift_getObjectType();
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, char *, _QWORD *, uint64_t, uint64_t))(a2 + 8))(a3, v9, a4, ObjectType, a2);
  outlined destroy of AccountUpdateNotice((uint64_t)v9, type metadata accessor for InCallControlsCollectionViewController.Action);
  return InCallControlsCollectionViewController.configureToggleCaptionsCell(_:)(a4);
}

uint64_t closure #2 in InCallControlsCollectionViewController.inCallControlsDidToggleCaptionsCell(_:)(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3;

  if (one-time initialization token for shared != -1)
    swift_once();
  v3 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)static Defaults.shared + 712))(1);
  return a2(v3);
}

void InCallControlsCollectionViewController.openMessages(cell:tappedOpenMessagesButton:)(void *a1, uint64_t a2)
{
  InCallControlsCollectionViewController.shareLinkCell(cell:tappedCopyLinkButton:)(a1, a2, (uint64_t)"User tapped open messages", 25, (void (*)(uint64_t, uint64_t, uint64_t, char *, void *))specialized static SpringBoardUtilities.requestPasscodeUnlock(_:));
}

void InCallControlsCollectionViewController.shareLinkCell(cell:tappedCopyLinkButton:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t, char *, void *))
{
  char *v5;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v8 = &v5[OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_inCallControlsCollectionViewControllerDelegate];
  OUTLINED_FUNCTION_1();
  v9 = MEMORY[0x1C3B752C0](v8);
  if (v9)
  {
    v10 = v9;
    v11 = *((_QWORD *)v8 + 1);
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.default.getter();
    OUTLINED_FUNCTION_128_5();
    v12 = OUTLINED_FUNCTION_134_4();
    a5(v12, v10, v11, v5, a1);
  }
  else
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.error.getter();
    OUTLINED_FUNCTION_55_0();
  }
  OUTLINED_FUNCTION_5_22();
}

void closure #1 in InCallControlsCollectionViewController.openMessages(cell:tappedOpenMessagesButton:)()
{
  closure #1 in InCallControlsCollectionViewController.collectionView(_:didSelectItemAt:)();
}

uint64_t specialized _ArrayBuffer._getElementSlowPath(_:)(unint64_t a1, unint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;
  Swift::String v8;
  Swift::String v9;
  Swift::String v10;

  OUTLINED_FUNCTION_59(a1, (unint64_t *)&lazy cache variable for type metadata for SGURL);
  if (a2 >> 62)
  {
    v4 = _CocoaArrayWrapper.subscript.getter();
    objc_opt_self();
    if (OUTLINED_FUNCTION_95())
      return v4;
LABEL_10:
    _StringGuts.grow(_:)(85);
    v6 = 0xD000000000000046;
    v5 = 0x80000001BD685D90;
    goto LABEL_11;
  }
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a1)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v4 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 8 * a1 + 0x20);
  swift_unknownObjectRetain();
  objc_opt_self();
  if (OUTLINED_FUNCTION_95())
    return v4;
  _StringGuts.grow(_:)(82);
  v5 = 0x80000001BD685CA0;
  v6 = 0xD000000000000043;
LABEL_11:
  String.append(_:)(*(Swift::String *)&v6);
  v8._countAndFlagsBits = _typeName(_:qualified:)();
  String.append(_:)(v8);
  OUTLINED_FUNCTION_2_1();
  v9._countAndFlagsBits = 0x756F662074756220;
  v9._object = (void *)0xEB0000000020646ELL;
  String.append(_:)(v9);
  swift_getObjectType();
  swift_unknownObjectRelease();
  v10._countAndFlagsBits = _typeName(_:qualified:)();
  String.append(_:)(v10);
  OUTLINED_FUNCTION_13_3();
  result = _assertionFailure(_:_:flags:)();
  __break(1u);
  return result;
}

void specialized _ContiguousArrayBuffer.init(_uninitializedCount:minimumCapacity:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<UInt8>);
    v4 = (_QWORD *)OUTLINED_FUNCTION_15();
    v5 = _swift_stdlib_malloc_size(v4);
    v4[2] = a1;
    v4[3] = 2 * v5 - 64;
  }
  OUTLINED_FUNCTION_0();
}

uint64_t sub_1BD329318()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void partial apply for closure #1 in InCallControlsCollectionViewController.init(conversation:participants:mode:gridLayoutStyle:isLegacy:shareLinkEnabled:menuHostViewController:)()
{
  uint64_t v0;

  closure #1 in InCallControlsCollectionViewController.init(conversation:participants:mode:gridLayoutStyle:isLegacy:shareLinkEnabled:menuHostViewController:)(v0);
}

uint64_t sub_1BD329344()
{
  OUTLINED_FUNCTION_135_3();
  OUTLINED_FUNCTION_62_25();
  swift_release();
  OUTLINED_FUNCTION_43_3();
  return OUTLINED_FUNCTION_6_10();
}

void *partial apply for closure #1 in InCallControlsCollectionViewController.viewDidLoad()(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_135_3() - 8) + 80);
  return closure #1 in InCallControlsCollectionViewController.viewDidLoad()(a1, a2, *(_QWORD *)(v2 + 16), v2 + ((v5 + 24) & ~v5));
}

uint64_t outlined bridged method (ob) of @objc TUConversation.messagesGroupPhotoData.getter(void *a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(a1, sel_messagesGroupPhotoData);

  if (!v2)
    return 0;
  v3 = static Data._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t partial apply for closure #2 in InCallControlsCollectionViewController.viewDidLoad()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return closure #2 in InCallControlsCollectionViewController.viewDidLoad()(a1, a2, a3, v3);
}

uint64_t partial apply for closure #3 in InCallControlsCollectionViewController.viewDidLoad()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return closure #3 in InCallControlsCollectionViewController.viewDidLoad()(a1, a2, a3, a4, v4);
}

size_t specialized _copyCollectionToContiguousArray<A>(_:)(size_t result, unint64_t a2)
{
  const void *v3;
  int64_t v4;
  _QWORD *v5;

  if (!result)
    return MEMORY[0x1E0DEE9D8];
  v3 = (const void *)result;
  v4 = a2 - result;
  if (a2 == result)
    return MEMORY[0x1E0DEE9D8];
  if (v4 < 1)
  {
    v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if (!a2)
      goto LABEL_13;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<UInt8>);
    v5 = (_QWORD *)swift_allocObject();
    result = _swift_stdlib_malloc_size(v5);
    v5[2] = v4;
    v5[3] = 2 * result - 64;
    if (!a2)
      goto LABEL_13;
  }
  if ((unint64_t)v3 < a2)
  {
    if ((v4 & 0x8000000000000000) == 0)
    {
      memmove(v5 + 4, v3, v4);
      return (size_t)v5;
    }
    __break(1u);
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for InCallControlsCollectionViewController.Action(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for InCallControlsCollectionViewController.Action);
}

void _s10Foundation4UUIDVACSHAAWlTm_2(_QWORD *a1)
{
  if (!*a1)
  {
    type metadata accessor for UUID();
    OUTLINED_FUNCTION_52_0();
  }
  OUTLINED_FUNCTION_0();
}

uint64_t sub_1BD329548()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in InCallControlsCollectionViewController.inCallControlsDidToggleCaptionsCell(_:)()
{
  uint64_t v0;

  return closure #1 in InCallControlsCollectionViewController.inCallControlsDidToggleCaptionsCell(_:)(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD **)(v0 + 40));
}

uint64_t sub_1BD329588()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in InCallControlsCollectionViewController.inCallControlsDidToggleCaptionsCell(_:)(uint64_t a1)
{
  uint64_t v1;

  return closure #2 in InCallControlsCollectionViewController.inCallControlsDidToggleCaptionsCell(_:)(a1, *(uint64_t (**)(uint64_t))(v1 + 16));
}

unint64_t lazy protocol witness table accessor for type InCallControlsCollectionViewController.CollectionViewSection and conformance InCallControlsCollectionViewController.CollectionViewSection()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type InCallControlsCollectionViewController.CollectionViewSection and conformance InCallControlsCollectionViewController.CollectionViewSection;
  if (!lazy protocol witness table cache variable for type InCallControlsCollectionViewController.CollectionViewSection and conformance InCallControlsCollectionViewController.CollectionViewSection)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for InCallControlsCollectionViewController.CollectionViewSection, &type metadata for InCallControlsCollectionViewController.CollectionViewSection);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type InCallControlsCollectionViewController.CollectionViewSection and conformance InCallControlsCollectionViewController.CollectionViewSection);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type InCallControlsCollectionViewController.CollectionViewSection and conformance InCallControlsCollectionViewController.CollectionViewSection;
  if (!lazy protocol witness table cache variable for type InCallControlsCollectionViewController.CollectionViewSection and conformance InCallControlsCollectionViewController.CollectionViewSection)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for InCallControlsCollectionViewController.CollectionViewSection, &type metadata for InCallControlsCollectionViewController.CollectionViewSection);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type InCallControlsCollectionViewController.CollectionViewSection and conformance InCallControlsCollectionViewController.CollectionViewSection);
  }
  return result;
}

void associated type witness table accessor for CaseIterable.AllCases : Collection in InCallControlsCollectionViewController.CollectionViewSection()
{
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type [InCallControlsCollectionViewController.CollectionViewSection] and conformance [A], &demangling cache variable for type metadata for [InCallControlsCollectionViewController.CollectionViewSection]);
}

void sub_1BD329634(char *a1)
{
  InCallControlsCollectionViewController.mode.setter(*a1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD329660(char *a1)
{
  InCallControlsCollectionViewController.isOnScreen.setter(*a1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD329680()
{
  key path getter for InCallControlsCollectionViewController.participantsViewControllerDelegate : InCallControlsCollectionViewController();
}

void sub_1BD32969C(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  key path setter for InCallControlsCollectionViewController.participantsViewControllerDelegate : InCallControlsCollectionViewController(a1, a2, a3, a4, &OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_participantsViewControllerDelegate);
}

void sub_1BD3296B8()
{
  key path getter for InCallControlsCollectionViewController.participantsViewControllerDelegate : InCallControlsCollectionViewController();
}

void sub_1BD3296D4(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  key path setter for InCallControlsCollectionViewController.participantsViewControllerDelegate : InCallControlsCollectionViewController(a1, a2, a3, a4, &OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_inCallControlsCollectionViewControllerDelegate);
}

uint64_t dispatch thunk of InCallControlsCollectionViewControllerDelegate.inCallControlsCollectionViewController(_:didTap:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of InCallControlsCollectionViewControllerDelegate.isCaptioningEnabled(inCallControlsCollectionViewController:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t ObjC metadata update function for InCallControlsCollectionViewController()
{
  return type metadata accessor for InCallControlsCollectionViewController(0);
}

uint64_t type metadata accessor for InCallControlsCollectionViewController(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for InCallControlsCollectionViewController);
}

void type metadata completion function for InCallControlsCollectionViewController()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;

  type metadata accessor for UICollectionView.SupplementaryRegistration<InCallControlsSectionHeaderView>?(319, &lazy cache variable for type metadata for UICollectionView.SupplementaryRegistration<InCallControlsSectionHeaderView>?, &demangling cache variable for type metadata for UICollectionView.SupplementaryRegistration<InCallControlsSectionHeaderView>);
  if (v0 <= 0x3F)
  {
    type metadata accessor for UICollectionView.SupplementaryRegistration<InCallControlsSectionHeaderView>?(319, &lazy cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsActivityCell, UUID>?, &demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsActivityCell, UUID>);
    if (v1 <= 0x3F)
    {
      type metadata accessor for UICollectionView.SupplementaryRegistration<InCallControlsSectionHeaderView>?(319, &lazy cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsTitleCell, UUID>?, &demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsTitleCell, UUID>);
      if (v2 <= 0x3F)
      {
        type metadata accessor for UICollectionView.SupplementaryRegistration<InCallControlsSectionHeaderView>?(319, &lazy cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsStatusCell, UUID>?, &demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsStatusCell, UUID>);
        if (v3 <= 0x3F)
        {
          type metadata accessor for UICollectionView.SupplementaryRegistration<InCallControlsSectionHeaderView>?(319, &lazy cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsParticipantCell, UUID>?, &demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsParticipantCell, UUID>);
          if (v4 <= 0x3F)
          {
            type metadata accessor for UICollectionView.SupplementaryRegistration<InCallControlsSectionHeaderView>?(319, &lazy cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsAddParticipantCell, UUID>?, &demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsAddParticipantCell, UUID>);
            if (v5 <= 0x3F)
            {
              type metadata accessor for UICollectionView.SupplementaryRegistration<InCallControlsSectionHeaderView>?(319, &lazy cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsShareLinkCell, UUID>?, &demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsShareLinkCell, UUID>);
              if (v6 <= 0x3F)
              {
                type metadata accessor for UICollectionView.SupplementaryRegistration<InCallControlsSectionHeaderView>?(319, &lazy cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsIgnoreLMIRequestsCell, UUID>?, &demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsIgnoreLMIRequestsCell, UUID>);
                if (v7 <= 0x3F)
                {
                  type metadata accessor for UICollectionView.SupplementaryRegistration<InCallControlsSectionHeaderView>?(319, &lazy cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsToggleCaptionsCell, UUID>?, &demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsToggleCaptionsCell, UUID>);
                  if (v8 <= 0x3F)
                  {
                    type metadata accessor for UICollectionView.SupplementaryRegistration<InCallControlsSectionHeaderView>?(319, &lazy cache variable for type metadata for UICollectionView.CellRegistration<UICollectionViewListCell, UUID>?, &demangling cache variable for type metadata for UICollectionView.CellRegistration<UICollectionViewListCell, UUID>);
                    if (v9 <= 0x3F)
                    {
                      type metadata accessor for UICollectionView.SupplementaryRegistration<InCallControlsSectionHeaderView>?(319, &lazy cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsOpenMessagesCell, UUID>?, &demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsOpenMessagesCell, UUID>);
                      if (v10 <= 0x3F)
                      {
                        type metadata accessor for UICollectionView.SupplementaryRegistration<InCallControlsSectionHeaderView>?(319, &lazy cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsBlockCell, UUID>?, &demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsBlockCell, UUID>);
                        if (v11 <= 0x3F)
                        {
                          type metadata accessor for UICollectionView.SupplementaryRegistration<InCallControlsSectionHeaderView>?(319, &lazy cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsReportCell, UUID>?, &demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsReportCell, UUID>);
                          if (v12 <= 0x3F)
                          {
                            type metadata accessor for UICollectionView.SupplementaryRegistration<InCallControlsSectionHeaderView>?(319, &lazy cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsPTTTitleCell, UUID>?, &demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsPTTTitleCell, UUID>);
                            if (v13 <= 0x3F)
                            {
                              type metadata accessor for UICollectionView.SupplementaryRegistration<InCallControlsSectionHeaderView>?(319, &lazy cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsPTTLeaveChannelCell, UUID>?, &demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsPTTLeaveChannelCell, UUID>);
                              if (v14 <= 0x3F)
                              {
                                type metadata accessor for UICollectionView.SupplementaryRegistration<InCallControlsSectionHeaderView>?(319, &lazy cache variable for type metadata for UICollectionView.SupplementaryRegistration<InCallControlsPTTLeaveChannelFooterView>?, &demangling cache variable for type metadata for UICollectionView.SupplementaryRegistration<InCallControlsPTTLeaveChannelFooterView>);
                                if (v15 <= 0x3F)
                                {
                                  type metadata accessor for UICollectionView.SupplementaryRegistration<InCallControlsSectionHeaderView>?(319, &lazy cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsPTTOpenAppCell, UUID>?, (uint64_t *)&demangling cache variable for type metadata for UICollectionView.CellRegistration<InCallControlsPTTOpenAppCell, UUID>);
                                  if (v16 <= 0x3F)
                                    swift_updateClassMetadata2();
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t method lookup function for InCallControlsCollectionViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InCallControlsCollectionViewController.__allocating_init(conversation:participants:mode:gridLayoutStyle:isLegacy:shareLinkEnabled:menuHostViewController:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 400))();
}

void type metadata accessor for UICollectionView.SupplementaryRegistration<InCallControlsSectionHeaderView>?(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    v4 = type metadata accessor for Optional();
    if (!v5)
      atomic_store(v4, a2);
  }
  OUTLINED_FUNCTION_0();
}

uint64_t getEnumTagSinglePayload for InCallControlsCollectionViewController.CollectionViewSection(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF3)
  {
    if (a2 + 13 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 13) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 14;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xE;
  v5 = v6 - 14;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for InCallControlsCollectionViewController.CollectionViewSection(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 13 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 13) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF3)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF2)
    return ((uint64_t (*)(void))((char *)&loc_1BD329BF0 + 4 * byte_1BD65874A[v4]))();
  *a1 = a2 + 13;
  return ((uint64_t (*)(void))((char *)sub_1BD329C24 + 4 * byte_1BD658745[v4]))();
}

uint64_t sub_1BD329C24(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD329C2C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD329C34);
  return result;
}

uint64_t sub_1BD329C40(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD329C48);
  *(_BYTE *)result = a2 + 13;
  return result;
}

uint64_t sub_1BD329C4C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD329C54(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InCallControlsCollectionViewController.CollectionViewSection()
{
  return &type metadata for InCallControlsCollectionViewController.CollectionViewSection;
}

char *initializeBufferWithCopyOfBuffer for InCallControlsCollectionViewController.Action(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v7 = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 24) = v7;
        (**(void (***)(void *, const void *))(v7 - 8))(a1, a2);
        goto LABEL_7;
      case 1u:
      case 2u:
      case 3u:
      case 4u:
        v9 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
LABEL_7:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for InCallControlsCollectionViewController.Action(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      result = __swift_destroy_boxed_opaque_existential_1(a1);
      break;
    case 1:
    case 2:
    case 3:
    case 4:
      v3 = type metadata accessor for UUID();
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t initializeWithCopy for InCallControlsCollectionViewController.Action(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v6 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v6;
      (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
      goto LABEL_5;
    case 1u:
    case 2u:
    case 3u:
    case 4u:
      v7 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
LABEL_5:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_QWORD *assignWithCopy for InCallControlsCollectionViewController.Action(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (a1 != a2)
  {
    outlined destroy of AccountUpdateNotice((uint64_t)a1, type metadata accessor for InCallControlsCollectionViewController.Action);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v6 = a2[3];
        a1[3] = v6;
        a1[4] = a2[4];
        (**(void (***)(_QWORD *, _QWORD *))(v6 - 8))(a1, a2);
        goto LABEL_6;
      case 1u:
      case 2u:
      case 3u:
      case 4u:
        v7 = type metadata accessor for UUID();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
LABEL_6:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

void *initializeWithTake for InCallControlsCollectionViewController.Action(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 2u:
    case 3u:
    case 4u:
      v6 = type metadata accessor for UUID();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *assignWithTake for InCallControlsCollectionViewController.Action(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    outlined destroy of AccountUpdateNotice((uint64_t)a1, type metadata accessor for InCallControlsCollectionViewController.Action);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 2u:
      case 3u:
      case 4u:
        v6 = type metadata accessor for UUID();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t type metadata completion function for InCallControlsCollectionViewController.Action()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1BD32A49C()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSDiffableDataSourceSnapshot<InCallControlsCollectionViewController.CollectionViewSection, UUID>);
  OUTLINED_FUNCTION_62_25();

  OUTLINED_FUNCTION_43_3();
  return OUTLINED_FUNCTION_6_10();
}

uint64_t partial apply for closure #1 in InCallControlsCollectionViewController.apply(_:to:animatingDifferences:)()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSDiffableDataSourceSnapshot<InCallControlsCollectionViewController.CollectionViewSection, UUID>);
  return closure #1 in InCallControlsCollectionViewController.apply(_:to:animatingDifferences:)();
}

void partial apply for closure #1 in InCallControlsCollectionViewController.configureCellRegistrations()()
{
  closure #1 in InCallControlsCollectionViewController.configureCellRegistrations()();
}

void partial apply for closure #2 in InCallControlsCollectionViewController.configureCellRegistrations()()
{
  closure #1 in InCallControlsCollectionViewController.configureCellRegistrations()();
}

void partial apply for closure #3 in InCallControlsCollectionViewController.configureCellRegistrations()()
{
  closure #1 in InCallControlsCollectionViewController.configureCellRegistrations()();
}

void partial apply for closure #4 in InCallControlsCollectionViewController.configureCellRegistrations()()
{
  closure #1 in InCallControlsCollectionViewController.configureCellRegistrations()();
}

void partial apply for closure #5 in InCallControlsCollectionViewController.configureCellRegistrations()()
{
  closure #1 in InCallControlsCollectionViewController.configureCellRegistrations()();
}

void partial apply for closure #7 in InCallControlsCollectionViewController.configureCellRegistrations()(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  closure #7 in InCallControlsCollectionViewController.configureCellRegistrations()(a1, a2, a3, v3);
}

void partial apply for closure #8 in InCallControlsCollectionViewController.configureCellRegistrations()()
{
  closure #8 in InCallControlsCollectionViewController.configureCellRegistrations()();
}

void partial apply for closure #10 in InCallControlsCollectionViewController.configureCellRegistrations()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  closure #10 in InCallControlsCollectionViewController.configureCellRegistrations()(a1, a2, a3, v3);
}

void partial apply for closure #12 in InCallControlsCollectionViewController.configureCellRegistrations()()
{
  closure #1 in InCallControlsCollectionViewController.configureCellRegistrations()();
}

void partial apply for closure #13 in InCallControlsCollectionViewController.configureCellRegistrations()()
{
  closure #1 in InCallControlsCollectionViewController.configureCellRegistrations()();
}

void partial apply for closure #15 in InCallControlsCollectionViewController.configureCellRegistrations()()
{
  closure #1 in InCallControlsCollectionViewController.configureCellRegistrations()();
}

void partial apply for closure #6 in InCallControlsCollectionViewController.configureCellRegistrations()()
{
  closure #1 in InCallControlsCollectionViewController.configureCellRegistrations()();
}

void outlined assign with take of UICollectionView.SupplementaryRegistration<InCallControlsSectionHeaderView>?(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = OUTLINED_FUNCTION_83(a1, a2, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v3, v4, v5);
  OUTLINED_FUNCTION_0();
}

uint64_t outlined release of InCallControlsPTTCallDetailsViewModel(uint64_t a1)
{

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *outlined release of InCallControlsTitleCellViewModel(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  void *v4;

  v2 = a1[5];
  v3 = a1[6];
  v4 = (void *)a1[10];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  outlined consume of Data?(v2, v3);
  swift_bridgeObjectRelease();

  return a1;
}

void partial apply for closure #1 in InCallControlsCollectionViewController.createParticipantCellRegistration()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  closure #1 in InCallControlsCollectionViewController.createParticipantCellRegistration()(a1, a2, a3, v3);
}

void partial apply for closure #1 in InCallControlsCollectionViewController.createActivityCellRegistration()(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  closure #1 in InCallControlsCollectionViewController.createActivityCellRegistration()(a1, a2, a3, v3);
}

void partial apply for closure #1 in InCallControlsCollectionViewController.createSectionHeaderViewRegistration()(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  closure #1 in InCallControlsCollectionViewController.createSectionHeaderViewRegistration()(a1, a2, a3, a4, v4);
}

void OUTLINED_FUNCTION_75_14()
{
  uint64_t v0;
  uint64_t v1;

  __swift_storeEnumTagSinglePayload(v0, 0, 1, v1);
  specialized >> prefix<A>(_:)(v0);
}

uint64_t OUTLINED_FUNCTION_85_14(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, _QWORD);
  uint64_t v2;

  return v1(a1, *(_QWORD *)(v2 - 248));
}

uint64_t OUTLINED_FUNCTION_87_10()
{
  return dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)();
}

id OUTLINED_FUNCTION_93_8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;

  return objc_msgSend(a1, (SEL)(v6 + 3912), v5, a4, a5, 0);
}

uint64_t OUTLINED_FUNCTION_102_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;

  return v3(v4, a2, v2);
}

uint64_t OUTLINED_FUNCTION_106_8()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 232);
}

uint64_t OUTLINED_FUNCTION_111_8()
{
  return Subject<>.send()();
}

uint64_t OUTLINED_FUNCTION_119_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_128_5()
{
  return os_log(_:dso:log:type:_:)();
}

uint64_t OUTLINED_FUNCTION_129_6()
{
  return os_log(_:dso:log:type:_:)();
}

uint64_t OUTLINED_FUNCTION_132_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);

  return v4(v3, a2, v2);
}

uint64_t OUTLINED_FUNCTION_133_5()
{
  uint64_t (*v0)(uint64_t);
  uint64_t v1;

  return v0(v1);
}

uint64_t OUTLINED_FUNCTION_134_4()
{
  return type metadata accessor for SpringBoardUtilities();
}

uint64_t OUTLINED_FUNCTION_135_3()
{
  return type metadata accessor for UICollectionLayoutListConfiguration.Appearance();
}

BOOL OUTLINED_FUNCTION_138_4@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

void OUTLINED_FUNCTION_139_5()
{
  uint64_t v0;

}

void _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFs10ArraySliceVySSG_15ConversationKit22TranscriptionViewModelC7CaptionVs5NeverOTg506_sSS15f5Kit22hij2C7k12VIggr_SSAEs5L11OIegnrzr_TRSSAMIggr_Tf1cn_n(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, void (*a5)(uint64_t, uint64_t), uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *i;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;

  v26 = a5;
  v27 = a6;
  v10 = type metadata accessor for TranscriptionViewModel.Caption(0);
  v25 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = a4 >> 1;
  v29 = a3;
  v13 = __OFSUB__(a4 >> 1, a3);
  v14 = (a4 >> 1) - a3;
  if (v13)
    goto LABEL_17;
  if (v14)
  {
    v30 = MEMORY[0x1E0DEE9D8];
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v14 & ~(v14 >> 63), 0);
    if (v14 < 0)
    {
LABEL_18:
      __break(1u);
      return;
    }
    v24 = v6;
    v15 = 0;
    v16 = v30;
    for (i = (uint64_t *)(a2 + 16 * v29 + 8); ; i += 2)
    {
      v18 = v15 + 1;
      if (__OFADD__(v15, 1))
        break;
      if (v29 + v15 >= v28 || v15 >= v14)
        goto LABEL_16;
      v20 = *(i - 1);
      v21 = *i;
      swift_bridgeObjectRetain();
      v26(v20, v21);
      swift_bridgeObjectRelease();
      v30 = v16;
      v23 = *(_QWORD *)(v16 + 16);
      v22 = *(_QWORD *)(v16 + 24);
      if (v23 >= v22 >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v22 > 1, v23 + 1, 1);
        v16 = v30;
      }
      *(_QWORD *)(v16 + 16) = v23 + 1;
      outlined init with take of StagedCollaboration((uint64_t)v12, v16+ ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80))+ *(_QWORD *)(v25 + 72) * v23, type metadata accessor for TranscriptionViewModel.Caption);
      ++v15;
      if (v18 == v14)
        return;
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
}

uint64_t TranscriptionView.init(viewModel:positionalData:lowConfidenceText:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  int *v8;
  uint64_t *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  id v13;
  Class isa;
  double v15;
  double v16;

  *(_DWORD *)a4 = 0x10000;
  v8 = (int *)OUTLINED_FUNCTION_3_102();
  v9 = (uint64_t *)(a4 + v8[6]);
  *v9 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_65_18();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type TranscriptionViewModel and conformance TranscriptionViewModel, (void (*)(uint64_t))type metadata accessor for TranscriptionViewModel);
  swift_retain();
  *(_QWORD *)(a4 + 8) = ObservedObject.init(wrappedValue:)();
  *(_QWORD *)(a4 + 16) = v10;
  *(_QWORD *)(a4 + v8[7]) = a1;
  v11 = (_QWORD *)(a4 + v8[8]);
  *v11 = a2;
  v11[1] = a3;
  OUTLINED_FUNCTION_33_39();
  v12 = *MEMORY[0x1E0DC4B50];
  swift_retain_n();
  v13 = OUTLINED_FUNCTION_12_79(v12);
  isa = UIFont.withTraits(_:)(*(_DWORD *)a4).super.isa;

  -[objc_class pointSize](isa, sel_pointSize);
  v16 = v15;

  (*(void (**)(double))(*(_QWORD *)a1 + 328))(v16 + v16);
  swift_release();
  return swift_release_n();
}

uint64_t type metadata accessor for TranscriptionView()
{
  uint64_t result;

  result = type metadata singleton initialization cache for TranscriptionView;
  if (!type metadata singleton initialization cache for TranscriptionView)
    return swift_getSingletonMetadata();
  return result;
}

void TranscriptionView.font.getter()
{
  void *v0;

  v0 = (void *)OUTLINED_FUNCTION_33_39();
  OUTLINED_FUNCTION_12_79(*MEMORY[0x1E0DC4B50]);
  OUTLINED_FUNCTION_57_13();

  OUTLINED_FUNCTION_0();
}

void one-time initialization function for someoneIsLeavingAMessage()
{
  id v0;
  Swift::String v1;
  Swift::String_optional v2;
  Swift::String v3;
  Swift::String v4;
  Swift::String v5;

  v0 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v5._object = (void *)0xE000000000000000;
  v1._object = (void *)0x80000001BD685E20;
  v1._countAndFlagsBits = 0xD00000000000001CLL;
  v2.value._countAndFlagsBits = 0x61737265766E6F43;
  v2.value._object = (void *)0xEF74694B6E6F6974;
  v3._countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  v5._countAndFlagsBits = 0;
  v4 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, v2, (NSBundle)v0, v3, v5);

  static TranscriptionView.Strings.someoneIsLeavingAMessage = (__int128)v4;
}

__int128 *TranscriptionView.Strings.someoneIsLeavingAMessage.unsafeMutableAddressor()
{
  if (one-time initialization token for someoneIsLeavingAMessage != -1)
    swift_once();
  return &static TranscriptionView.Strings.someoneIsLeavingAMessage;
}

uint64_t static TranscriptionView.Strings.someoneIsLeavingAMessage.getter()
{
  return static TranscriptionView.Strings.someoneIsLeavingAMessage.getter(&one-time initialization token for someoneIsLeavingAMessage, (uint64_t *)&static TranscriptionView.Strings.someoneIsLeavingAMessage);
}

void one-time initialization function for someoneIsLeavingAMessageFormat()
{
  id v0;
  Swift::String v1;
  Swift::String_optional v2;
  Swift::String v3;
  Swift::String v4;
  Swift::String v5;

  v0 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v5._object = (void *)0xE000000000000000;
  v1._object = (void *)0x80000001BD685DE0;
  v1._countAndFlagsBits = 0xD000000000000017;
  v2.value._countAndFlagsBits = 0x61737265766E6F43;
  v2.value._object = (void *)0xEF74694B6E6F6974;
  v3._countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  v5._countAndFlagsBits = 0;
  v4 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, v2, (NSBundle)v0, v3, v5);

  static TranscriptionView.Strings.someoneIsLeavingAMessageFormat = (__int128)v4;
}

__int128 *TranscriptionView.Strings.someoneIsLeavingAMessageFormat.unsafeMutableAddressor()
{
  if (one-time initialization token for someoneIsLeavingAMessageFormat != -1)
    swift_once();
  return &static TranscriptionView.Strings.someoneIsLeavingAMessageFormat;
}

uint64_t static TranscriptionView.Strings.someoneIsLeavingAMessageFormat.getter()
{
  return static TranscriptionView.Strings.someoneIsLeavingAMessage.getter(&one-time initialization token for someoneIsLeavingAMessageFormat, (uint64_t *)&static TranscriptionView.Strings.someoneIsLeavingAMessageFormat);
}

uint64_t static TranscriptionView.Strings.someoneIsLeavingAMessage.getter(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;

  if (*a1 != -1)
    swift_once();
  v3 = *a2;
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t TranscriptionView.trait.getter()
{
  unsigned int *v0;

  return *v0;
}

double TranscriptionView.textSize.getter()
{
  void *v0;
  Class isa;
  double v2;
  double v3;

  v0 = (void *)OUTLINED_FUNCTION_33_39();
  OUTLINED_FUNCTION_12_79(*MEMORY[0x1E0DC4B50]);
  isa = OUTLINED_FUNCTION_57_13().super.isa;

  -[objc_class pointSize](isa, sel_pointSize);
  v3 = v2;

  return v3;
}

void TranscriptionView.hidePrivacySensitiveContent.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char v33;
  char v34;
  void (*v35)(char *, uint64_t);

  OUTLINED_FUNCTION_93();
  a19 = v22;
  a20 = v23;
  v24 = OUTLINED_FUNCTION_66_21();
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  OUTLINED_FUNCTION_79();
  v28 = (char *)(v26 - v27);
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)&a9 - v30;
  OUTLINED_FUNCTION_3_102();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v32);
  OUTLINED_FUNCTION_11_2();
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  TranscriptionViewModel.hidePrivacySensitiveContent.getter();
  v34 = v33;
  OUTLINED_FUNCTION_43();
  outlined init with copy of ConversationControlsAppLaunchButtonType(v20, v21, (uint64_t (*)(_QWORD))type metadata accessor for TranscriptionView);
  if ((v34 & 1) == 0)
  {
    specialized Environment.wrappedValue.getter();
    static RedactionReasons.privacy.getter();
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type RedactionReasons and conformance RedactionReasons, (void (*)(uint64_t))MEMORY[0x1E0CDA008]);
    dispatch thunk of SetAlgebra.isSuperset(of:)();
    v35 = *(void (**)(char *, uint64_t))(v25 + 8);
    v35(v28, v24);
    v35(v31, v24);
  }
  outlined destroy of AccountUpdateNotice(v21, (uint64_t (*)(_QWORD))type metadata accessor for TranscriptionView);
  OUTLINED_FUNCTION_52_1();
}

uint64_t TranscriptionView.viewModel.getter()
{
  return swift_retain();
}

void TranscriptionView.redactionReasons.getter()
{
  OUTLINED_FUNCTION_3_102();
  specialized Environment.wrappedValue.getter();
  OUTLINED_FUNCTION_0();
}

void TranscriptionView.showTranscript.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  unsigned __int8 v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  unsigned __int8 v32;
  int v33;
  unsigned __int8 v34;
  int v35;
  char v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  void (*v41)(uint64_t, uint64_t);
  _QWORD v42[2];
  uint64_t v43;
  uint64_t v44;

  OUTLINED_FUNCTION_93();
  v1 = OUTLINED_FUNCTION_66_21();
  v43 = *(_QWORD *)(v1 - 8);
  v44 = v1;
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_79();
  v4 = v2 - v3;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v42 - v6;
  v42[1] = OUTLINED_FUNCTION_3_102();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_79();
  v11 = v9 - v10;
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v42 - v14;
  v16 = MEMORY[0x1E0C80A78](v13);
  v18 = (char *)v42 - v17;
  v19 = MEMORY[0x1E0C80A78](v16);
  v21 = (char *)v42 - v20;
  MEMORY[0x1E0C80A78](v19);
  v23 = (char *)v42 - v22;
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  TranscriptionViewModel.state.getter();
  v25 = v24;
  v26 = OUTLINED_FUNCTION_43();
  if (v25 == 1)
  {
    type metadata accessor for Defaults();
    OUTLINED_FUNCTION_15();
    v28 = Defaults.init()();
    v29 = OUTLINED_FUNCTION_40_38(v28);
    v30 = OUTLINED_FUNCTION_43();
    OUTLINED_FUNCTION_61_22(v30, v31, (uint64_t (*)(_QWORD))type metadata accessor for TranscriptionView);
    if ((v29 & 1) != 0)
    {
      OUTLINED_FUNCTION_46((uint64_t)v23);
      OUTLINED_FUNCTION_95_1(v0, (uint64_t)v21);
LABEL_6:
      OUTLINED_FUNCTION_46((uint64_t)v21);
      OUTLINED_FUNCTION_95_1(v0, (uint64_t)v18);
      goto LABEL_8;
    }
  }
  else
  {
    OUTLINED_FUNCTION_61_22(v26, v27, (uint64_t (*)(_QWORD))type metadata accessor for TranscriptionView);
  }
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  TranscriptionViewModel.state.getter();
  v33 = v32;
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_46((uint64_t)v23);
  OUTLINED_FUNCTION_95_1(v0, (uint64_t)v21);
  if (v33 == 2)
    goto LABEL_6;
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  TranscriptionViewModel.state.getter();
  v35 = v34;
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_46((uint64_t)v21);
  OUTLINED_FUNCTION_95_1(v0, (uint64_t)v18);
  if (v35 != 3)
  {
LABEL_10:
    OUTLINED_FUNCTION_46((uint64_t)v18);
    OUTLINED_FUNCTION_95_1(v0, v11);
    goto LABEL_13;
  }
LABEL_8:
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  TranscriptionViewModel.hidePrivacySensitiveContent.getter();
  v37 = v36;
  OUTLINED_FUNCTION_43();
  outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v18, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for TranscriptionView);
  if ((v37 & 1) != 0)
  {
    OUTLINED_FUNCTION_46((uint64_t)v15);
    goto LABEL_10;
  }
  specialized Environment.wrappedValue.getter();
  static RedactionReasons.privacy.getter();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type RedactionReasons and conformance RedactionReasons, (void (*)(uint64_t))MEMORY[0x1E0CDA008]);
  v39 = v44;
  v40 = dispatch thunk of SetAlgebra.isSuperset(of:)();
  v41 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
  v41(v4, v39);
  v41((uint64_t)v7, v39);
  outlined destroy of AccountUpdateNotice((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for TranscriptionView);
  outlined destroy of AccountUpdateNotice((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for TranscriptionView);
  OUTLINED_FUNCTION_41_29();
  if ((v40 & 1) == 0)
  {
    partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
    TranscriptionViewModel.isGibberish.getter();
    v38 = OUTLINED_FUNCTION_43();
  }
LABEL_13:
  OUTLINED_FUNCTION_35_2(v38, (uint64_t (*)(_QWORD))type metadata accessor for TranscriptionView);
  OUTLINED_FUNCTION_52_1();
}

uint64_t TranscriptionView.showWaiting.getter()
{
  uint64_t v0;
  unsigned __int8 v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;

  OUTLINED_FUNCTION_3_102();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_77();
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  TranscriptionViewModel.state.getter();
  v2 = v1;
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_41_29();
  if (v2 == 1)
  {
    OUTLINED_FUNCTION_35_2(v3, (uint64_t (*)(_QWORD))type metadata accessor for TranscriptionView);
LABEL_5:
    type metadata accessor for Defaults();
    OUTLINED_FUNCTION_15();
    v8 = Defaults.init()();
    v9 = OUTLINED_FUNCTION_40_38(v8);
    OUTLINED_FUNCTION_43();
    v7 = v9 ^ 1;
    return v7 & 1;
  }
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  v4 = TranscriptionViewModel.captions.getter();
  OUTLINED_FUNCTION_43();
  v5 = *(_QWORD *)(v4 + 16);
  v6 = OUTLINED_FUNCTION_2_1();
  OUTLINED_FUNCTION_35_2(v6, (uint64_t (*)(_QWORD))type metadata accessor for TranscriptionView);
  if (!v5)
    goto LABEL_5;
  v7 = 0;
  return v7 & 1;
}

void key path setter for TranscriptionView.viewModel : TranscriptionView()
{
  uint64_t v0;

  v0 = swift_retain();
  TranscriptionView.viewModel.setter(v0);
}

void TranscriptionView.viewModel.setter(uint64_t a1)
{
  uint64_t v1;

  swift_release();
  *(_QWORD *)(v1 + 16) = a1;
  OUTLINED_FUNCTION_0();
}

uint64_t (*TranscriptionView.viewModel.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t TranscriptionView.$viewModel.getter()
{
  OUTLINED_FUNCTION_65_18();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type TranscriptionViewModel and conformance TranscriptionViewModel, (void (*)(uint64_t))type metadata accessor for TranscriptionViewModel);
  return ObservedObject.projectedValue.getter();
}

void TranscriptionView.transcriptView.getter(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = OUTLINED_FUNCTION_3_102();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x1E0C80A78](v3);
  outlined init with copy of ConversationControlsAppLaunchButtonType(v1, (uint64_t)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for TranscriptionView);
  v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v7 = swift_allocObject();
  outlined init with take of StagedCollaboration((uint64_t)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6, (uint64_t (*)(_QWORD))type metadata accessor for TranscriptionView);
  *a1 = partial apply for closure #1 in TranscriptionView.transcriptView.getter;
  a1[1] = v7;
}

uint64_t closure #1 in TranscriptionView.transcriptView.getter@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v15;
  uint64_t v16;
  __int128 v17;

  v4 = type metadata accessor for TranscriptionView();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for TranscriptionViewModel(0);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type TranscriptionViewModel and conformance TranscriptionViewModel, (void (*)(uint64_t))type metadata accessor for TranscriptionViewModel);
  ObservedObject.projectedValue.getter();
  swift_getKeyPath();
  ObservedObject.Wrapper.subscript.getter();
  swift_release();
  swift_release();
  v8 = v16;
  v15 = v17;
  v9 = TranscriptionView.textSize.getter() * 0.8;
  v10 = *(_QWORD *)(a1 + *(int *)(v4 + 28));
  outlined init with copy of ConversationControlsAppLaunchButtonType(a1, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for TranscriptionView);
  v11 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v12 = swift_allocObject();
  outlined init with take of StagedCollaboration((uint64_t)v7, v12 + v11, (uint64_t (*)(_QWORD))type metadata accessor for TranscriptionView);
  outlined init with copy of ConversationControlsAppLaunchButtonType(a1, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for TranscriptionView);
  v13 = swift_allocObject();
  outlined init with take of StagedCollaboration((uint64_t)v7, v13 + v11, (uint64_t (*)(_QWORD))type metadata accessor for TranscriptionView);
  *(_QWORD *)a2 = v8;
  *(_OWORD *)(a2 + 8) = v15;
  *(double *)(a2 + 24) = v9;
  *(_QWORD *)(a2 + 32) = 0;
  *(_QWORD *)(a2 + 40) = v10;
  *(_QWORD *)(a2 + 48) = partial apply for closure #1 in closure #1 in TranscriptionView.transcriptView.getter;
  *(_QWORD *)(a2 + 56) = v12;
  *(_QWORD *)(a2 + 64) = partial apply for closure #2 in closure #1 in TranscriptionView.transcriptView.getter;
  *(_QWORD *)(a2 + 72) = v13;
  *(_QWORD *)(a2 + 80) = specialized implicit closure #2 in implicit closure #1 in variable initialization expression of AutoScrollingList._autoScrollViewModel;
  *(_QWORD *)(a2 + 88) = 0;
  *(_BYTE *)(a2 + 96) = 0;
  return swift_retain();
}

void TranscriptionView.captionRow(caption:)()
{
  UIFontDescriptorSymbolicTraits *v0;
  Class *v1;
  UIFontDescriptorSymbolicTraits *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  Class isa;
  uint64_t v9;
  objc_class **v10;
  objc_class *v11;
  objc_class *v12;
  objc_class **v13;
  objc_class *v14;
  objc_class *v15;
  objc_class *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t *v19;

  OUTLINED_FUNCTION_93();
  v2 = v0;
  v4 = v3;
  v5 = type metadata accessor for ScreeningTranscriptLabel();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_33_39();
  v7 = OUTLINED_FUNCTION_12_79(*MEMORY[0x1E0DC4B50]);
  isa = UIFont.withTraits(_:)(*v2).super.isa;

  v9 = type metadata accessor for TranscriptionViewModel.Caption(0);
  v10 = (objc_class **)(v4 + *(int *)(v9 + 28));
  v12 = *v10;
  v11 = v10[1];
  v13 = (objc_class **)((char *)v2 + *(int *)(OUTLINED_FUNCTION_3_102() + 32));
  v14 = *v13;
  v15 = v13[1];
  v16 = *(objc_class **)(v4 + *(int *)(v9 + 36));
  *v1 = isa;
  v1[1] = v12;
  v1[2] = v11;
  v1[3] = v14;
  v1[4] = v15;
  v1[5] = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  static Color.white.getter();
  v17 = Color.opacity(_:)();
  OUTLINED_FUNCTION_43();
  v1[6] = (Class)v17;
  v18 = (uint64_t *)((char *)v1 + *(int *)(v5 + 36));
  *v18 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
  OUTLINED_FUNCTION_23_54();
  v19 = (uint64_t *)((char *)v1 + *(int *)(v5 + 40));
  *v19 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  OUTLINED_FUNCTION_23_54();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ScreeningTranscriptLabel and conformance ScreeningTranscriptLabel, (void (*)(uint64_t))type metadata accessor for ScreeningTranscriptLabel);
  View.privacySensitive(_:)();
  outlined destroy of AccountUpdateNotice((uint64_t)v1, (uint64_t (*)(_QWORD))type metadata accessor for ScreeningTranscriptLabel);
  OUTLINED_FUNCTION_52_1();
}

uint64_t closure #2 in closure #1 in TranscriptionView.transcriptView.getter@<X0>(UIFontDescriptorSymbolicTraits *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  type metadata accessor for Defaults();
  swift_allocObject();
  v4 = Defaults.init()();
  v5 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 232))(v4);
  swift_release();
  if ((v5 & 1) != 0)
  {
    v6 = static HorizontalAlignment.center.getter();
    v7 = static VerticalAlignment.lastTextBaseline.getter();
    *a2 = v6;
    a2[1] = v7;
    v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_ZStackLayout, TupleView<(LiveVoicemailIntroView, ModifiedContent<ScreeningTranscriptLabel, _OpacityEffect>)>>);
    closure #1 in closure #2 in closure #1 in TranscriptionView.transcriptView.getter(a1, (uint64_t *)((char *)a2 + *(int *)(v8 + 44)));
    v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ZStack<TupleView<(LiveVoicemailIntroView, ModifiedContent<ScreeningTranscriptLabel, _OpacityEffect>)>>);
    v10 = (uint64_t)a2;
    v11 = 0;
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ZStack<TupleView<(LiveVoicemailIntroView, ModifiedContent<ScreeningTranscriptLabel, _OpacityEffect>)>>);
    v10 = (uint64_t)a2;
    v11 = 1;
  }
  return __swift_storeEnumTagSinglePayload(v10, v11, 1, v9);
}

uint64_t closure #1 in closure #2 in closure #1 in TranscriptionView.transcriptView.getter@<X0>(UIFontDescriptorSymbolicTraits *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  Class *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  Class isa;
  objc_class *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;

  v4 = type metadata accessor for ScreeningTranscriptLabel();
  MEMORY[0x1E0C80A78](v4);
  v6 = (Class *)((char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ScreeningTranscriptLabel, _OpacityEffect>);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v23 - v11;
  type metadata accessor for TranscriptionViewModel(0);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type TranscriptionViewModel and conformance TranscriptionViewModel, (void (*)(uint64_t))type metadata accessor for TranscriptionViewModel);
  swift_retain();
  v24 = ObservedObject.init(wrappedValue:)();
  v14 = v13;
  type metadata accessor for UIFont();
  v15 = static UIFont.preferredFont(textStyle:weight:maximumPointSize:)(*MEMORY[0x1E0DC4B50], 0, 1);
  isa = UIFont.withTraits(_:)(*a1).super.isa;

  *v6 = isa;
  v6[1] = (Class)0x7974706D65;
  v6[2] = (Class)0xE500000000000000;
  v6[3] = 0;
  v17 = (objc_class *)MEMORY[0x1E0DEE9D8];
  v6[4] = (Class)0xE000000000000000;
  v6[5] = v17;
  static Color.white.getter();
  v18 = Color.opacity(_:)();
  swift_release();
  v6[6] = (Class)v18;
  v19 = (uint64_t *)((char *)v6 + *(int *)(v4 + 36));
  *v19 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
  swift_storeEnumTagMultiPayload();
  v20 = (uint64_t *)((char *)v6 + *(int *)(v4 + 40));
  *v20 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  swift_storeEnumTagMultiPayload();
  outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v6, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for ScreeningTranscriptLabel);
  *(_QWORD *)&v10[*(int *)(v7 + 36)] = 0;
  outlined destroy of AccountUpdateNotice((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for ScreeningTranscriptLabel);
  outlined init with take of Any?((uint64_t)v10, (uint64_t)v12, &demangling cache variable for type metadata for ModifiedContent<ScreeningTranscriptLabel, _OpacityEffect>);
  outlined init with copy of FeatureEligibility?((uint64_t)v12, (uint64_t)v10, &demangling cache variable for type metadata for ModifiedContent<ScreeningTranscriptLabel, _OpacityEffect>);
  *a2 = v24;
  a2[1] = v14;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (LiveVoicemailIntroView, ModifiedContent<ScreeningTranscriptLabel, _OpacityEffect>));
  outlined init with copy of FeatureEligibility?((uint64_t)v10, (uint64_t)a2 + *(int *)(v21 + 48), &demangling cache variable for type metadata for ModifiedContent<ScreeningTranscriptLabel, _OpacityEffect>);
  swift_retain();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v12, &demangling cache variable for type metadata for ModifiedContent<ScreeningTranscriptLabel, _OpacityEffect>);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v10, &demangling cache variable for type metadata for ModifiedContent<ScreeningTranscriptLabel, _OpacityEffect>);
  return swift_release();
}

uint64_t TranscriptionView.positionalData.getter()
{
  OUTLINED_FUNCTION_3_102();
  return swift_retain();
}

uint64_t TranscriptionView.lowConfidenceText.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(OUTLINED_FUNCTION_3_102() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

void TranscriptionView.body.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD v15[2];

  OUTLINED_FUNCTION_93();
  v1 = v0;
  v15[1] = v2;
  v3 = OUTLINED_FUNCTION_3_102();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x1E0C80A78](v3);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ZStack<_ConditionalContent<_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>, _PaddingLayout>, GeometryReader<AutoScrollingList<ZStack<TupleView<(LiveVoicemailIntroView, ModifiedContent<ScreeningTranscriptLabel, _OpacityEffect>)>>, [TranscriptionViewModel.Caption], TranscriptionViewModel.Caption, <<opaque return type of View.privacySensitive(_:)>>.0>>>, ModifiedContent<VStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingMod);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_77();
  v9 = (uint64_t *)(v8 - v7);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.onTapGesture(count:perform:)>>.0);
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_16_2();
  *v9 = static Alignment.bottomLeading.getter();
  v9[1] = v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_ZStackLayout, _ConditionalContent<_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>, _PaddingLayout>, GeometryReader<AutoScrollingList<ZStack<TupleView<(LiveVoicemailIntroView, ModifiedContent<ScreeningTranscriptLabel, _OpacityEffect>)>>, [TranscriptionViewModel.Caption], TranscriptionViewModel.Caption, <<opaque return type of View.privacySensitive(_:)>>.0>>>, ModifiedContent<VStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>);
  closure #1 in TranscriptionView.body.getter(v1, (uint64_t)v9 + *(int *)(v12 + 44));
  outlined init with copy of ConversationControlsAppLaunchButtonType(v1, (uint64_t)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for TranscriptionView);
  v13 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v14 = swift_allocObject();
  outlined init with take of StagedCollaboration((uint64_t)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v14 + v13, (uint64_t (*)(_QWORD))type metadata accessor for TranscriptionView);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type ZStack<_ConditionalContent<_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>, _PaddingLayout>, GeometryReader<AutoScrollingList<ZStack<TupleView<(LiveVoicemailIntroView, ModifiedContent<ScreeningTranscriptLabel, _OpacityEffect>)>>, [TranscriptionViewModel.Caption], TranscriptionViewModel.Caption, <<opaque return type of View.privacySensitive(_:)>>.0>>>, ModifiedContent<VStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritin, &demangling cache variable for type metadata for ZStack<_ConditionalContent<_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>, _PaddingLayout>, GeometryReader<AutoScrollingList<ZStack<TupleView<(LiveVoicemailIntroView, ModifiedContent<ScreeningTranscriptLabel, _OpacityEffect>)>>, [TranscriptionViewModel.Caption], TranscriptionViewModel.Caption, <<opaque return type of View.privacySensitive(_:)>>.0>>>, ModifiedContent<VStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingMod);
  View.onTapGesture(count:perform:)();
  swift_release();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v9, &demangling cache variable for type metadata for ZStack<_ConditionalContent<_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>, _PaddingLayout>, GeometryReader<AutoScrollingList<ZStack<TupleView<(LiveVoicemailIntroView, ModifiedContent<ScreeningTranscriptLabel, _OpacityEffect>)>>, [TranscriptionViewModel.Caption], TranscriptionViewModel.Caption, <<opaque return type of View.privacySensitive(_:)>>.0>>>, ModifiedContent<VStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingMod);
  static Alignment.bottomLeading.getter();
  OUTLINED_FUNCTION_35_32();
  specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  OUTLINED_FUNCTION_50_28();
  OUTLINED_FUNCTION_52_1();
}

void closure #1 in TranscriptionView.body.getter(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  id v25;
  Swift::String v26;
  Swift::String_optional v27;
  Swift::String v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t *v38;
  uint64_t v39;
  char v40;
  unint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  Swift::String v66;

  v64 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _Environmen);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayo);
  v6 = MEMORY[0x1E0C80A78](v62);
  v58 = (uint64_t)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v59 = (uint64_t)&v56 - v8;
  v9 = type metadata accessor for TranscriptionView();
  v57 = *(_QWORD *)(v9 - 8);
  v10 = *(_QWORD *)(v57 + 64);
  MEMORY[0x1E0C80A78](v9);
  v63 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>, _PaddingLayout>, GeometryReader<AutoScrollingList<ZStack<TupleView<(LiveVoicemailIntroView, ModifiedContent<ScreeningTranscriptLabel, _OpacityEffect>)>>, [TranscriptionViewModel.Caption], TranscriptionViewModel.Caption, <<opaque return type of View.privacySensitive(_:)>>.0>>>, ModifiedContent<VStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<F);
  MEMORY[0x1E0C80A78](v63);
  v61 = (uint64_t)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>, _PaddingLayout>, GeometryReader<AutoScrollingList<ZStack<TupleView<(LiveVoicemailIntroView, ModifiedContent<ScreeningTranscriptLabel, _OpacityEffect>)>>, [TranscriptionViewModel.Caption], TranscriptionViewModel.Caption, <<opaque return type of View.privacySensitive(_:)>>.0>>>.Storage);
  MEMORY[0x1E0C80A78](v60);
  v13 = (uint64_t *)((char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v65 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>, _PaddingLayout>, GeometryReader<AutoScrollingList<ZStack<TupleView<(LiveVoicemailIntroView, ModifiedContent<ScreeningTranscriptLabel, _OpacityEffect>)>>, [TranscriptionViewModel.Caption], TranscriptionViewModel.Caption, <<opaque return type of View.privacySensitive(_:)>>.0>>>);
  MEMORY[0x1E0C80A78](v65);
  v15 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>, _PaddingLayout>);
  v20 = MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v56 - v23;
  if ((TranscriptionView.showWaiting.getter() & 1) != 0)
  {
    v25 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
    v66._object = (void *)0xE000000000000000;
    v26._countAndFlagsBits = 0x2E474E4954494157;
    v26._object = (void *)0xEA00000000002E2ELL;
    v27.value._countAndFlagsBits = 0x61737265766E6F43;
    v27.value._object = (void *)0xEF74694B6E6F6974;
    v28._countAndFlagsBits = 0;
    v28._object = (void *)0xE000000000000000;
    v66._countAndFlagsBits = 0;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v26, v27, (NSBundle)v25, v28, v66);

    TranscriptionView.text(verbatim:)();
    swift_bridgeObjectRelease();
    LOBYTE(v25) = static Edge.Set.bottom.getter();
    EdgeInsets.init(_all:)();
    v30 = v29;
    v32 = v31;
    v34 = v33;
    v36 = v35;
    outlined init with copy of FeatureEligibility?((uint64_t)v18, (uint64_t)v22, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>);
    v37 = &v22[*(int *)(v19 + 36)];
    *v37 = (char)v25;
    *((_QWORD *)v37 + 1) = v30;
    *((_QWORD *)v37 + 2) = v32;
    *((_QWORD *)v37 + 3) = v34;
    *((_QWORD *)v37 + 4) = v36;
    v37[40] = 0;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v18, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>);
    v38 = &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>, _PaddingLayout>;
    outlined init with take of Any?((uint64_t)v22, (uint64_t)v24, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>, _PaddingLayout>);
    outlined init with copy of FeatureEligibility?((uint64_t)v24, (uint64_t)v13, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>, _PaddingLayout>);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GeometryReader<AutoScrollingList<ZStack<TupleView<(LiveVoicemailIntroView, ModifiedContent<ScreeningTranscriptLabel, _OpacityEffect>)>>, [TranscriptionViewModel.Caption], TranscriptionViewModel.Caption, <<opaque return type of View.privacySensitive(_:)>>.0>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<PlaceholderContentView<ModalOverlayTransition>, _OpacityEffect>, _BlurEffect>, _ScaleEffect> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>, _PaddingLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>, _PaddingLayout>, (uint64_t (*)(void))lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier> and conformance <> ModifiedContent<A, B>, MEMORY[0x1E0CD9758]);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type GeometryReader<AutoScrollingList<ZStack<TupleView<(LiveVoicemailIntroView, ModifiedContent<ScreeningTranscriptLabel, _OpacityEffect>)>>, [TranscriptionViewModel.Caption], TranscriptionViewModel.Caption, <<opaque return type of View.privacySensitive(_:)>>.0>> and conformance GeometryReader<A>, &demangling cache variable for type metadata for GeometryReader<AutoScrollingList<ZStack<TupleView<(LiveVoicemailIntroView, ModifiedContent<ScreeningTranscriptLabel, _OpacityEffect>)>>, [TranscriptionViewModel.Caption], TranscriptionViewModel.Caption, <<opaque return type of View.privacySensitive(_:)>>.0>>);
    _ConditionalContent<>.init(storage:)();
    outlined init with copy of FeatureEligibility?((uint64_t)v15, v61, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>, _PaddingLayout>, GeometryReader<AutoScrollingList<ZStack<TupleView<(LiveVoicemailIntroView, ModifiedContent<ScreeningTranscriptLabel, _OpacityEffect>)>>, [TranscriptionViewModel.Caption], TranscriptionViewModel.Caption, <<opaque return type of View.privacySensitive(_:)>>.0>>>);
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>, _PaddingLayout>, GeometryReader<AutoScrollingList<ZStack<TupleView<(LiveVoicemailIntroView, ModifiedContent<ScreeningTranscriptLabel, _OpacityEffect>)>>, [TranscriptionViewModel.Caption], TranscriptionViewModel.Caption, <<opaque return type of View.privacySensitive(_:)>>.0>>> and conformance <> _ConditionalContent<A, B>();
    lazy protocol witness table accessor for type ModifiedContent<VStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout();
    _ConditionalContent<>.init(storage:)();
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v15, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>, _PaddingLayout>, GeometryReader<AutoScrollingList<ZStack<TupleView<(LiveVoicemailIntroView, ModifiedContent<ScreeningTranscriptLabel, _OpacityEffect>)>>, [TranscriptionViewModel.Caption], TranscriptionViewModel.Caption, <<opaque return type of View.privacySensitive(_:)>>.0>>>);
    v39 = (uint64_t)v24;
  }
  else
  {
    TranscriptionView.showTranscript.getter();
    if ((v40 & 1) != 0)
    {
      outlined init with copy of ConversationControlsAppLaunchButtonType(a1, (uint64_t)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for TranscriptionView);
      v41 = (*(unsigned __int8 *)(v57 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
      v42 = swift_allocObject();
      outlined init with take of StagedCollaboration((uint64_t)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v42 + v41, (uint64_t (*)(_QWORD))type metadata accessor for TranscriptionView);
      *v13 = partial apply for closure #1 in TranscriptionView.transcriptView.getter;
      v13[1] = v42;
      swift_storeEnumTagMultiPayload();
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GeometryReader<AutoScrollingList<ZStack<TupleView<(LiveVoicemailIntroView, ModifiedContent<ScreeningTranscriptLabel, _OpacityEffect>)>>, [TranscriptionViewModel.Caption], TranscriptionViewModel.Caption, <<opaque return type of View.privacySensitive(_:)>>.0>>);
      lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<PlaceholderContentView<ModalOverlayTransition>, _OpacityEffect>, _BlurEffect>, _ScaleEffect> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>, _PaddingLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>, _PaddingLayout>, (uint64_t (*)(void))lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier> and conformance <> ModifiedContent<A, B>, MEMORY[0x1E0CD9758]);
      lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type GeometryReader<AutoScrollingList<ZStack<TupleView<(LiveVoicemailIntroView, ModifiedContent<ScreeningTranscriptLabel, _OpacityEffect>)>>, [TranscriptionViewModel.Caption], TranscriptionViewModel.Caption, <<opaque return type of View.privacySensitive(_:)>>.0>> and conformance GeometryReader<A>, &demangling cache variable for type metadata for GeometryReader<AutoScrollingList<ZStack<TupleView<(LiveVoicemailIntroView, ModifiedContent<ScreeningTranscriptLabel, _OpacityEffect>)>>, [TranscriptionViewModel.Caption], TranscriptionViewModel.Caption, <<opaque return type of View.privacySensitive(_:)>>.0>>);
      _ConditionalContent<>.init(storage:)();
      outlined init with copy of FeatureEligibility?((uint64_t)v15, v61, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>, _PaddingLayout>, GeometryReader<AutoScrollingList<ZStack<TupleView<(LiveVoicemailIntroView, ModifiedContent<ScreeningTranscriptLabel, _OpacityEffect>)>>, [TranscriptionViewModel.Caption], TranscriptionViewModel.Caption, <<opaque return type of View.privacySensitive(_:)>>.0>>>);
      swift_storeEnumTagMultiPayload();
      lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>, _PaddingLayout>, GeometryReader<AutoScrollingList<ZStack<TupleView<(LiveVoicemailIntroView, ModifiedContent<ScreeningTranscriptLabel, _OpacityEffect>)>>, [TranscriptionViewModel.Caption], TranscriptionViewModel.Caption, <<opaque return type of View.privacySensitive(_:)>>.0>>> and conformance <> _ConditionalContent<A, B>();
      lazy protocol witness table accessor for type ModifiedContent<VStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout();
      _ConditionalContent<>.init(storage:)();
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v15, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>, _PaddingLayout>, GeometryReader<AutoScrollingList<ZStack<TupleView<(LiveVoicemailIntroView, ModifiedContent<ScreeningTranscriptLabel, _OpacityEffect>)>>, [TranscriptionViewModel.Caption], TranscriptionViewModel.Caption, <<opaque return type of View.privacySensitive(_:)>>.0>>>);
      swift_release();
      return;
    }
    *(_QWORD *)v5 = static HorizontalAlignment.center.getter();
    *((_QWORD *)v5 + 1) = 0x4018000000000000;
    v5[16] = 0;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _Fl);
    closure #1 in closure #1 in TranscriptionView.body.getter(a1);
    v43 = static Edge.Set.bottom.getter();
    EdgeInsets.init(_all:)();
    v45 = v44;
    v47 = v46;
    v49 = v48;
    v51 = v50;
    v52 = v58;
    outlined init with copy of FeatureEligibility?((uint64_t)v5, v58, &demangling cache variable for type metadata for VStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _Environmen);
    v53 = v52 + *(int *)(v62 + 36);
    *(_BYTE *)v53 = v43;
    *(_QWORD *)(v53 + 8) = v45;
    *(_QWORD *)(v53 + 16) = v47;
    *(_QWORD *)(v53 + 24) = v49;
    *(_QWORD *)(v53 + 32) = v51;
    *(_BYTE *)(v53 + 40) = 0;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v5, &demangling cache variable for type metadata for VStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _Environmen);
    v38 = &demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayo;
    v54 = v52;
    v55 = v59;
    outlined init with take of Any?(v54, v59, &demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayo);
    outlined init with copy of FeatureEligibility?(v55, v61, &demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayo);
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>, _PaddingLayout>, GeometryReader<AutoScrollingList<ZStack<TupleView<(LiveVoicemailIntroView, ModifiedContent<ScreeningTranscriptLabel, _OpacityEffect>)>>, [TranscriptionViewModel.Caption], TranscriptionViewModel.Caption, <<opaque return type of View.privacySensitive(_:)>>.0>>> and conformance <> _ConditionalContent<A, B>();
    lazy protocol witness table accessor for type ModifiedContent<VStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout();
    _ConditionalContent<>.init(storage:)();
    v39 = v55;
  }
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v39, v38);
}

void TranscriptionView.text(verbatim:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  uint64_t v21;
  uint64_t KeyPath;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[22];
  _DWORD v31[48];

  OUTLINED_FUNCTION_93();
  v2 = v1;
  v28 = v3;
  v29 = v4;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Material?>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_0_7();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Material?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_77();
  v9 = v8 - v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_77();
  v14 = (void *)(v13 - v12);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_77();
  v18 = v17 - v16;
  swift_getKeyPath();
  OUTLINED_FUNCTION_8_8();
  static Alignment.center.getter();
  OUTLINED_FUNCTION_35_32();
  specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v19, v20);
  swift_release();
  OUTLINED_FUNCTION_2_1();
  v21 = static Font.title3.getter();
  v30[20] = swift_getKeyPath();
  v30[21] = v21;
  LODWORD(v21) = static HierarchicalShapeStyle.primary.getter();
  memcpy(v31, v30, 0xB0uLL);
  v31[44] = v21;
  KeyPath = swift_getKeyPath();
  static Material.regular.getter();
  v23 = type metadata accessor for Material();
  __swift_storeEnumTagSinglePayload(v9, 0, 1, v23);
  outlined init with copy of FeatureEligibility?(v9, (uint64_t)v0 + *(int *)(v27 + 28), &demangling cache variable for type metadata for Material?);
  *v0 = KeyPath;
  OUTLINED_FUNCTION_41_6((uint64_t)v0, (uint64_t)v14 + *(int *)(v10 + 36));
  memcpy(v14, v31, 0xB4uLL);
  outlined retain of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>((uint64_t)v31);
  OUTLINED_FUNCTION_9_42((uint64_t)v0);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v9, &demangling cache variable for type metadata for Material?);
  outlined release of ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>((uint64_t)v30);
  OUTLINED_FUNCTION_41_6((uint64_t)v14, v18);
  *(_QWORD *)(v18 + *(int *)(v26 + 36)) = 0x3FE6666666666666;
  OUTLINED_FUNCTION_9_42((uint64_t)v14);
  v24 = swift_getKeyPath();
  outlined init with copy of FeatureEligibility?(v18, v29, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>);
  v25 = v29
      + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>)
               + 36);
  *(_QWORD *)v25 = v28;
  *(_QWORD *)(v25 + 8) = v2;
  *(_QWORD *)(v25 + 16) = v24;
  *(_BYTE *)(v25 + 24) = 0;
  OUTLINED_FUNCTION_8_8();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v18, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>);
  OUTLINED_FUNCTION_52_1();
}

#error "1BD32C998: call analysis failed (funcsize=132)"

void TranscriptionView.aMessageIsBeingLeftView()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  objc_class *v7;
  NSBundle v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  objc_class *v19;
  NSBundle v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  OUTLINED_FUNCTION_93();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>>.Storage);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_77();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_16_2();
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  v3 = TranscriptionViewModel.callerDisplayName.getter();
  v5 = v4;
  OUTLINED_FUNCTION_43();
  swift_bridgeObjectRelease();
  v6 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0)
    v6 = v3 & 0xFFFFFFFFFFFFLL;
  if (v6)
  {
    v7 = (objc_class *)objc_msgSend((id)objc_opt_self(), sel_conversationKit);
    OUTLINED_FUNCTION_7_14();
    v8.super.isa = v7;
    OUTLINED_FUNCTION_49_2(v9, v10, v11, v12, v8);

    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v13 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v13 + 16) = xmmword_1BD6441D0;
    partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
    v14 = TranscriptionViewModel.callerDisplayName.getter();
    v16 = v15;
    OUTLINED_FUNCTION_43();
    *(_QWORD *)(v13 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v13 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v13 + 32) = v14;
    *(_QWORD *)(v13 + 40) = v16;
    String.init(format:_:)();
    swift_bridgeObjectRelease();
    TranscriptionView.text(verbatim:)();
    v17 = swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_54_31(v17, v18, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>);
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier> and conformance <> ModifiedContent<A, B>();
  }
  else
  {
    if (one-time initialization token for someoneIsLeavingAMessage != -1)
      swift_once();
    v19 = (objc_class *)objc_msgSend((id)objc_opt_self(), sel_conversationKit);
    OUTLINED_FUNCTION_7_14();
    v20.super.isa = v19;
    OUTLINED_FUNCTION_49_2(v21, v22, v23, v24, v20);

    TranscriptionView.text(verbatim:)();
    v25 = swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_54_31(v25, v26, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>);
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier> and conformance <> ModifiedContent<A, B>();
  }
  _ConditionalContent<>.init(storage:)();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v0, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>);
  OUTLINED_FUNCTION_52_1();
}

uint64_t closure #2 in TranscriptionView.body.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v2 = type metadata accessor for TranscriptionView();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x1E0C80A78](v2);
  type metadata accessor for SpringBoardUtilities();
  outlined init with copy of ConversationControlsAppLaunchButtonType(a1, (uint64_t)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for TranscriptionView);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  outlined init with take of StagedCollaboration((uint64_t)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v6 + v5, (uint64_t (*)(_QWORD))type metadata accessor for TranscriptionView);
  static SpringBoardUtilities.requestPasscodeUnlock(_:)((void (*)(uint64_t))partial apply for closure #1 in closure #2 in TranscriptionView.body.getter);
  return swift_release();
}

uint64_t closure #1 in closure #2 in TranscriptionView.body.getter()
{
  swift_retain();
  TranscriptionViewModel.hidePrivacySensitiveContent.setter();
  return swift_release();
}

uint64_t *TranscriptionView_Previews.viewModel.unsafeMutableAddressor()
{
  if (one-time initialization token for viewModel != -1)
    swift_once();
  return &static TranscriptionView_Previews.viewModel;
}

uint64_t static TranscriptionView_Previews.viewModel.getter()
{
  if (one-time initialization token for viewModel != -1)
    swift_once();
  return swift_retain();
}

void static TranscriptionView_Previews.previews.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  id v14;
  Class isa;
  double v16;
  double v17;
  _OWORD *v18;
  char *v19;
  uint64_t v20;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;

  v22 = type metadata accessor for TaskPriority();
  v4 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  OUTLINED_FUNCTION_16_2();
  v5 = (int *)OUTLINED_FUNCTION_3_102();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_0_7();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<TranscriptionView, _FrameLayout>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_11_2();
  if (one-time initialization token for viewModel != -1)
    swift_once();
  type metadata accessor for PositionalData();
  swift_allocObject();
  swift_retain();
  v9 = PositionalData.init()();
  *(_DWORD *)v3 = 0x10000;
  v10 = (uint64_t *)(v3 + v5[6]);
  *v10 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
  OUTLINED_FUNCTION_23_54();
  OUTLINED_FUNCTION_65_18();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type TranscriptionViewModel and conformance TranscriptionViewModel, (void (*)(uint64_t))type metadata accessor for TranscriptionViewModel);
  swift_retain();
  *(_QWORD *)(v3 + 8) = ObservedObject.init(wrappedValue:)();
  *(_QWORD *)(v3 + 16) = v11;
  *(_QWORD *)(v3 + v5[7]) = v9;
  v12 = (_QWORD *)(v3 + v5[8]);
  *v12 = 0xD000000000000013;
  v12[1] = 0x80000001BD685E00;
  OUTLINED_FUNCTION_33_39();
  v13 = *MEMORY[0x1E0DC4B50];
  swift_retain_n();
  v14 = OUTLINED_FUNCTION_12_79(v13);
  isa = UIFont.withTraits(_:)(*(_DWORD *)v3).super.isa;

  -[objc_class pointSize](isa, sel_pointSize);
  v17 = v16;

  (*(void (**)(double))(*(_QWORD *)v9 + 328))(v17 + v17);
  swift_release();
  swift_release_n();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  OUTLINED_FUNCTION_95_1(v3, v2);
  v18 = (_OWORD *)(v2 + *(int *)(v7 + 36));
  *v18 = v23;
  v18[1] = v24;
  v18[2] = v25;
  OUTLINED_FUNCTION_46(v3);
  static TaskPriority.userInitiated.getter();
  v19 = (char *)(a1
               + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<TranscriptionView, _FrameLayout>, _TaskModifier>)
                        + 36));
  v20 = type metadata accessor for _TaskModifier();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(&v19[*(int *)(v20 + 20)], v1, v22);
  *(_QWORD *)v19 = &async function pointer to partial apply for closure #1 in static TranscriptionView_Previews.previews.getter;
  *((_QWORD *)v19 + 1) = 0;
  OUTLINED_FUNCTION_41_6(v2, a1);
  OUTLINED_FUNCTION_50_28();
  OUTLINED_FUNCTION_9_42(v2);
}

uint64_t closure #1 in static TranscriptionView_Previews.previews.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for TranscriptionViewModel.Caption(0);
  v0[18] = v1;
  v0[19] = *(_QWORD *)(v1 - 8);
  v0[20] = swift_task_alloc();
  v2 = type metadata accessor for ContinuousClock.Instant();
  v0[21] = v2;
  v0[22] = *(_QWORD *)(v2 - 8);
  v0[23] = swift_task_alloc();
  v0[24] = swift_task_alloc();
  v0[25] = swift_task_alloc();
  v3 = type metadata accessor for ContinuousClock();
  v0[26] = v3;
  v0[27] = *(_QWORD *)(v3 - 8);
  v0[28] = swift_task_alloc();
  v0[29] = swift_task_alloc();
  type metadata accessor for MainActor();
  v0[30] = static MainActor.shared.getter();
  v0[31] = dispatch thunk of Actor.unownedExecutor.getter();
  v0[32] = v4;
  return swift_task_switch();
}

{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 336) = v0;
  swift_task_dealloc();
  v3 = (void (*)(uint64_t, uint64_t))v2[40];
  if (v0)
  {
    v4 = v2[29];
    v5 = v2[26];
    v6 = v2[27];
    v7 = v2[25];
    v8 = v2[21];
    swift_bridgeObjectRelease();
    v3(v7, v8);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    OUTLINED_FUNCTION_43();
  }
  else
  {
    v9 = v2[29];
    v10 = v2[26];
    v11 = v2[27];
    v3(v2[25], v2[21]);
    v12 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v2[43] = v12;
    v12(v9, v10);
  }
  return OUTLINED_FUNCTION_0_6();
}

{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t result;
  uint64_t v20;

  *(_QWORD *)(v0 + 120) = *(_QWORD *)(v0 + 304);
  *(_QWORD *)(v0 + 104) = 0;
  v1 = *(_QWORD *)(v0 + 312);
  *(_QWORD *)(v0 + 112) = 0xE000000000000000;
  *(_QWORD *)(v0 + 128) = v1;
  v2 = lazy protocol witness table accessor for type String and conformance String();
  v3 = MEMORY[0x1C3B73B2C](32, 0xE100000000000000, 0x7FFFFFFFFFFFFFFFLL, 1, MEMORY[0x1E0DEA968], v2);
  *(_QWORD *)(v0 + 352) = v3;
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(v3 + 16);
  *(_QWORD *)(v0 + 360) = v4;
  if (v4)
  {
    swift_beginAccess();
    *(_QWORD *)(v0 + 368) = 0;
    v5 = *(_QWORD *)(v0 + 352);
    v6 = *(void (**)(uint64_t, uint64_t))(v0 + 320);
    v7 = *(_QWORD *)(v0 + 192);
    v8 = *(_QWORD *)(v0 + 168);
    v10 = *(_QWORD *)(v5 + 48);
    v9 = *(_QWORD *)(v5 + 56);
    *(_OWORD *)(v0 + 16) = *(_OWORD *)(v5 + 32);
    *(_QWORD *)(v0 + 32) = v10;
    *(_QWORD *)(v0 + 40) = v9;
    lazy protocol witness table accessor for type Substring and conformance Substring();
    String.append<A>(contentsOf:)();
    ContinuousClock.init()();
    static ContinuousClock.Instant.now.getter();
    v11 = OUTLINED_FUNCTION_51_31();
    MEMORY[0x1C3B73DE4](v11);
    v6(v7, v8);
    v12 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 376) = v12;
    *v12 = v0;
    v12[1] = closure #1 in static TranscriptionView_Previews.previews.getter;
    OUTLINED_FUNCTION_14_26(*(_QWORD *)(v0 + 184));
    return ContinuousClock.sleep(until:tolerance:)();
  }
  OUTLINED_FUNCTION_2_1();
  v13 = *(_QWORD *)(v0 + 288);
  v14 = *(_QWORD *)(v0 + 296);
  swift_bridgeObjectRelease();
  TranscriptionViewModel.captions.getter();
  OUTLINED_FUNCTION_62_26();
  TranscriptionViewModel.captions.setter();
  if (v14 + 1 == v13)
  {
    swift_release();
    OUTLINED_FUNCTION_36_5();
    if (v16)
    {
LABEL_8:
      OUTLINED_FUNCTION_32_36();
      OUTLINED_FUNCTION_43();
      OUTLINED_FUNCTION_2_102();
      OUTLINED_FUNCTION_29_0();
      OUTLINED_FUNCTION_12();
      OUTLINED_FUNCTION_81_0();
      OUTLINED_FUNCTION_625();
      OUTLINED_FUNCTION_633();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    while (1)
    {
      *(_QWORD *)(v0 + 272) = v15 + 1;
      v20 = static TranscriptionView_Previews.phrases;
      swift_bridgeObjectRetain();
      specialized MutableCollection<>.shuffle<A>(using:)();
      result = OUTLINED_FUNCTION_37_38(v20);
      if (v17)
        break;
      swift_release();
      OUTLINED_FUNCTION_36_5();
      if (v16)
        goto LABEL_8;
    }
    v18 = 0;
  }
  else
  {
    v18 = *(_QWORD *)(v0 + 296) + 1;
    result = *(_QWORD *)(v0 + 280);
  }
  *(_QWORD *)(v0 + 296) = v18;
  if (v18 < *(_QWORD *)(result + 16))
  {
    OUTLINED_FUNCTION_10_87(result, v18);
    OUTLINED_FUNCTION_68_1();
    OUTLINED_FUNCTION_42_39();
    OUTLINED_FUNCTION_5_103();
  }
  __break(1u);
  return result;
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;

  v2 = *v1;
  *(_QWORD *)(*v1 + 384) = v0;
  swift_task_dealloc();
  if (v0)
  {
    v3 = *(void (**)(uint64_t, uint64_t))(v2 + 344);
    v4 = *(_QWORD *)(v2 + 224);
    v5 = *(_QWORD *)(v2 + 208);
    OUTLINED_FUNCTION_64_19(*(uint64_t (**)(_QWORD, _QWORD))(v2 + 320));
    v3(v4, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_19();
  }
  else
  {
    v6 = *(void (**)(uint64_t, uint64_t))(v2 + 344);
    v7 = *(_QWORD *)(v2 + 224);
    v8 = *(_QWORD *)(v2 + 208);
    OUTLINED_FUNCTION_64_19(*(uint64_t (**)(_QWORD, _QWORD))(v2 + 320));
    v6(v7, v8);
  }
  return OUTLINED_FUNCTION_0_6();
}

{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t *v3;
  void (*v4)(uint64_t, _QWORD);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;

  v1 = *(_QWORD *)(v0 + 264);
  v2 = *(_QWORD **)(v0 + 160);
  v3 = *(uint64_t **)(v0 + 144);
  v4 = (void (*)(uint64_t, _QWORD))static TranscriptionView_Previews.viewModel;
  v32 = *(_QWORD *)(TranscriptionViewModel.captions.getter() + 16);
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(v0 + 104);
  v5 = *(_QWORD *)(v0 + 112);
  v7 = *(_QWORD *)(v1 + 16);
  swift_bridgeObjectRetain();
  Date.init()();
  Date.init()();
  *v2 = v7;
  v8 = (_QWORD *)((char *)v2 + *((int *)v3 + 7));
  *v8 = v6;
  v8[1] = v5;
  *((_BYTE *)v2 + *((int *)v3 + 8)) = 0;
  *(_QWORD *)((char *)v2 + *((int *)v3 + 9)) = MEMORY[0x1E0DEE9D8];
  *((_BYTE *)v2 + *((int *)v3 + 10)) = 1;
  v9 = *(_QWORD *)(v1 + 16);
  v10 = __OFADD__(v9, 1);
  v11 = v9 + 1;
  if (v10)
  {
    __break(1u);
  }
  else
  {
    v5 = v0 + 48;
    *(_QWORD *)(*(_QWORD *)(v0 + 264) + 16) = v11;
    swift_getKeyPath();
    swift_getKeyPath();
    v4 = (void (*)(uint64_t, _QWORD))static Published.subscript.modify();
    v3 = v12;
    v13 = *v12;
    result = swift_isUniquelyReferenced_nonNull_native();
    *v3 = v13;
    if ((result & 1) != 0)
      goto LABEL_3;
  }
  result = specialized _ArrayBuffer._consumeAndCreateNew()();
  v13 = result;
  *v3 = result;
LABEL_3:
  if (!v32)
  {
    __break(1u);
    goto LABEL_20;
  }
  if (v32 > *(_QWORD *)(v13 + 16))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v15 = *(_QWORD *)(v0 + 360);
  v16 = *(_QWORD *)(v0 + 368) + 1;
  outlined assign with take of TranscriptionViewModel.Caption(*(_QWORD *)(v0 + 160), v13+ ((*(unsigned __int8 *)(*(_QWORD *)(v0 + 152) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 152) + 80))+ *(_QWORD *)(*(_QWORD *)(v0 + 152) + 72) * (v32 - 1));
  v4(v5, 0);
  swift_release();
  swift_release();
  if (v16 != v15)
  {
    v22 = *(_QWORD *)(v0 + 368) + 1;
    *(_QWORD *)(v0 + 368) = v22;
    v23 = *(void (**)(uint64_t, uint64_t))(v0 + 320);
    v24 = *(_QWORD *)(v0 + 192);
    v25 = *(_QWORD *)(v0 + 168);
    v26 = *(_QWORD *)(v0 + 352) + 32 * v22;
    v28 = *(_QWORD *)(v26 + 48);
    v27 = *(_QWORD *)(v26 + 56);
    *(_OWORD *)(v0 + 16) = *(_OWORD *)(v26 + 32);
    *(_QWORD *)(v0 + 32) = v28;
    *(_QWORD *)(v0 + 40) = v27;
    lazy protocol witness table accessor for type Substring and conformance Substring();
    String.append<A>(contentsOf:)();
    ContinuousClock.init()();
    OUTLINED_FUNCTION_42_39();
    v29 = OUTLINED_FUNCTION_51_31();
    MEMORY[0x1C3B73DE4](v29);
    v23(v24, v25);
    v30 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 376) = v30;
    *v30 = v0;
    v30[1] = closure #1 in static TranscriptionView_Previews.previews.getter;
    OUTLINED_FUNCTION_14_26(*(_QWORD *)(v0 + 184));
    return OUTLINED_FUNCTION_8_85();
  }
  swift_bridgeObjectRelease();
  v17 = *(_QWORD *)(v0 + 288);
  v18 = *(_QWORD *)(v0 + 296);
  swift_bridgeObjectRelease();
  TranscriptionViewModel.captions.getter();
  OUTLINED_FUNCTION_62_26();
  TranscriptionViewModel.captions.setter();
  if (v18 + 1 == v17)
  {
    swift_release();
    OUTLINED_FUNCTION_36_5();
    if (v20)
    {
LABEL_11:
      OUTLINED_FUNCTION_32_36();
      OUTLINED_FUNCTION_43();
      OUTLINED_FUNCTION_2_102();
      OUTLINED_FUNCTION_29_0();
      OUTLINED_FUNCTION_12();
      OUTLINED_FUNCTION_81_0();
      OUTLINED_FUNCTION_625();
      OUTLINED_FUNCTION_633();
      return OUTLINED_FUNCTION_165(*(uint64_t (**)(void))(v0 + 8));
    }
    while (1)
    {
      *(_QWORD *)(v0 + 272) = v19 + 1;
      v33 = static TranscriptionView_Previews.phrases;
      swift_bridgeObjectRetain();
      specialized MutableCollection<>.shuffle<A>(using:)();
      result = OUTLINED_FUNCTION_37_38(v33);
      if (v21)
        break;
      swift_release();
      OUTLINED_FUNCTION_36_5();
      if (v20)
        goto LABEL_11;
    }
    v31 = 0;
  }
  else
  {
    v31 = *(_QWORD *)(v0 + 296) + 1;
    result = *(_QWORD *)(v0 + 280);
  }
  *(_QWORD *)(v0 + 296) = v31;
  if (v31 < *(_QWORD *)(result + 16))
  {
    OUTLINED_FUNCTION_10_87(result, v31);
    OUTLINED_FUNCTION_68_1();
    OUTLINED_FUNCTION_42_39();
    OUTLINED_FUNCTION_5_103();
  }
LABEL_21:
  __break(1u);
  return result;
}

{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 336);
  OUTLINED_FUNCTION_32_36();

  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_2_102();
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_81_0();
  OUTLINED_FUNCTION_625();
  OUTLINED_FUNCTION_633();
  return OUTLINED_FUNCTION_16_29(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 384);
  OUTLINED_FUNCTION_32_36();

  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_2_102();
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_81_0();
  OUTLINED_FUNCTION_625();
  OUTLINED_FUNCTION_633();
  return OUTLINED_FUNCTION_16_29(*(uint64_t (**)(void))(v0 + 8));
}

_QWORD *closure #1 in static TranscriptionView_Previews.previews.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  _QWORD *result;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;

  v1 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v0 + 264) = v1;
  *(_QWORD *)(v1 + 16) = 0;
  if (one-time initialization token for viewModel != -1)
    swift_once();
  if (one-time initialization token for phrases != -1)
    swift_once();
  v2 = specialized Collection.prefix(_:)(4, static TranscriptionView_Previews.phrases);
  v4 = v3;
  v6 = v5;
  v8 = v7;
  OUTLINED_FUNCTION_8_8();
  _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFs10ArraySliceVySSG_15ConversationKit22TranscriptionViewModelC7CaptionVs5NeverOTg506_sSS15f5Kit22hij2C7k12VIggr_SSAEs5L11OIegnrzr_TRSSAMIggr_Tf1cn_n(v2, v4, v6, v8, (void (*)(uint64_t, uint64_t))partial apply for makeCaption #1 (_:) in closure #1 in static TranscriptionView_Previews.previews.getter, v1);
  swift_unknownObjectRelease();
  TranscriptionViewModel.captions.setter();
  for (*(_QWORD *)(v0 + 272) = 0; ; *(_QWORD *)(v0 + 272) = v11 + 1)
  {
    v13 = static TranscriptionView_Previews.phrases;
    swift_bridgeObjectRetain();
    specialized MutableCollection<>.shuffle<A>(using:)();
    result = (_QWORD *)OUTLINED_FUNCTION_37_38(v13);
    if (v10)
      break;
    swift_release();
    OUTLINED_FUNCTION_36_5();
    if (v12)
    {
      OUTLINED_FUNCTION_32_36();
      OUTLINED_FUNCTION_43();
      OUTLINED_FUNCTION_2_102();
      OUTLINED_FUNCTION_29_0();
      OUTLINED_FUNCTION_12();
      OUTLINED_FUNCTION_81_0();
      OUTLINED_FUNCTION_625();
      OUTLINED_FUNCTION_633();
      return (_QWORD *)OUTLINED_FUNCTION_165(*(uint64_t (**)(void))(v0 + 8));
    }
  }
  *(_QWORD *)(v0 + 296) = 0;
  if (result[2])
  {
    *(_QWORD *)(v0 + 304) = result[4];
    *(_QWORD *)(v0 + 312) = result[5];
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_68_1();
    OUTLINED_FUNCTION_42_39();
    OUTLINED_FUNCTION_5_103();
  }
  __break(1u);
  return result;
}

uint64_t makeCaption #1 (_:) in closure #1 in static TranscriptionView_Previews.previews.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  _QWORD *v8;
  uint64_t v9;
  int *v10;
  _QWORD *v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v8 = (_QWORD *)(a3 + 16);
  swift_beginAccess();
  v9 = *(_QWORD *)(a3 + 16);
  v10 = (int *)type metadata accessor for TranscriptionViewModel.Caption(0);
  Date.init()();
  Date.init()();
  *a4 = v9;
  v11 = (_QWORD *)((char *)a4 + v10[7]);
  *v11 = a1;
  v11[1] = a2;
  *((_BYTE *)a4 + v10[8]) = 0;
  *(_QWORD *)((char *)a4 + v10[9]) = MEMORY[0x1E0DEE9D8];
  *((_BYTE *)a4 + v10[10]) = 1;
  result = swift_beginAccess();
  v13 = *(_QWORD *)(a3 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
  {
    __break(1u);
  }
  else
  {
    *v8 = v15;
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t *TranscriptionView_Previews.phrases.unsafeMutableAddressor()
{
  if (one-time initialization token for phrases != -1)
    swift_once();
  return &static TranscriptionView_Previews.phrases;
}

void one-time initialization function for phrases()
{
  static TranscriptionView_Previews.phrases = (uint64_t)&outlined read-only object #0 of one-time initialization function for phrases;
}

{
  phrases._rawValue = &outlined read-only object #0 of one-time initialization function for phrases;
}

uint64_t static TranscriptionView_Previews.phrases.getter()
{
  if (one-time initialization token for phrases != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

uint64_t protocol witness for static _PreviewProvider._previews.getter in conformance TranscriptionView_Previews()
{
  lazy protocol witness table accessor for type TranscriptionView_Previews and conformance TranscriptionView_Previews();
  return static PreviewProvider._previews.getter();
}

uint64_t protocol witness for static _PreviewProvider._platform.getter in conformance TranscriptionView_Previews()
{
  lazy protocol witness table accessor for type TranscriptionView_Previews and conformance TranscriptionView_Previews();
  return static PreviewProvider._platform.getter();
}

uint64_t specialized AutoScrollViewModel.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v12[8];
  uint64_t v13;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = &v12[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Set<TranscriptionViewModel.CaptionID>>);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 96);
  v13 = MEMORY[0x1E0DEE9E8];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Set<TranscriptionViewModel.CaptionID>);
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v6 + 32))(v9, v8, v5);
  v10 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 104);
  v12[7] = 1;
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v2 + 32))(v10, v4, v1);
  return v0;
}

uint64_t specialized implicit closure #2 in implicit closure #1 in variable initialization expression of AutoScrollingList._autoScrollViewModel()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AutoScrollViewModel<TranscriptionViewModel.CaptionID>);
  swift_allocObject();
  return specialized AutoScrollViewModel.init()();
}

uint64_t partial apply for closure #2 in TranscriptionView.body.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = OUTLINED_FUNCTION_3_102();
  v1 = OUTLINED_FUNCTION_44(v0);
  return closure #2 in TranscriptionView.body.getter(v1);
}

void key path getter for EnvironmentValues.multilineTextAlignment : EnvironmentValues, serialized()
{
  _BYTE *v0;

  *v0 = OUTLINED_FUNCTION_58_25();
  OUTLINED_FUNCTION_0();
}

void sub_1BD32E16C()
{
  _BYTE *v0;

  *v0 = OUTLINED_FUNCTION_58_25();
  OUTLINED_FUNCTION_0();
}

void key path setter for EnvironmentValues.multilineTextAlignment : EnvironmentValues, serialized()
{
  OUTLINED_FUNCTION_67_15();
  OUTLINED_FUNCTION_0();
}

void sub_1BD32E1A0()
{
  OUTLINED_FUNCTION_67_15();
  OUTLINED_FUNCTION_0();
}

uint64_t outlined retain of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>(uint64_t a1)
{
  outlined copy of Text.Storage(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t outlined release of ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>(uint64_t a1)
{
  outlined consume of Text.Storage(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return a1;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>);
    v2[0] = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<PlaceholderContentView<ModalOverlayTransition>, _OpacityEffect>, _BlurEffect>, _ScaleEffect> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, (uint64_t (*)(void))lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>> and conformance <> ModifiedContent<A, B>, MEMORY[0x1E0CD9728]);
    v2[1] = lazy protocol witness table accessor for type AccessibilityVoiceOverModifier and conformance AccessibilityVoiceOverModifier();
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Material?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Material?>);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _ForegroundStyleModifier<HierarchicalShapeStyle> and conformance _ForegroundStyleModifier<A>, &demangling cache variable for type metadata for _ForegroundStyleModifier<HierarchicalShapeStyle>);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<PlaceholderContentView<ModalOverlayTransition>, _OpacityEffect>, _BlurEffect>, _ScaleEffect> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, (uint64_t (*)(void))lazy protocol witness table accessor for type ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>> and conformance <> ModifiedContent<A, B>, MEMORY[0x1E0CDA228]);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Font?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Font?>);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t partial apply for closure #1 in static TranscriptionView_Previews.previews.getter()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = dispatch thunk of CallScreeningStateMachine.transition(with:reason:validation:);
  return closure #1 in static TranscriptionView_Previews.previews.getter();
}

uint64_t associated type witness table accessor for View.Body : View in TranscriptionView()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t lazy protocol witness table accessor for type TranscriptionView_Previews and conformance TranscriptionView_Previews()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type TranscriptionView_Previews and conformance TranscriptionView_Previews;
  if (!lazy protocol witness table cache variable for type TranscriptionView_Previews and conformance TranscriptionView_Previews)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for TranscriptionView_Previews, &type metadata for TranscriptionView_Previews);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type TranscriptionView_Previews and conformance TranscriptionView_Previews);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type TranscriptionView_Previews and conformance TranscriptionView_Previews;
  if (!lazy protocol witness table cache variable for type TranscriptionView_Previews and conformance TranscriptionView_Previews)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for TranscriptionView_Previews, &type metadata for TranscriptionView_Previews);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type TranscriptionView_Previews and conformance TranscriptionView_Previews);
  }
  return result;
}

uint64_t associated type witness table accessor for PreviewProvider.Previews : View in TranscriptionView_Previews()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1BD32E578(uint64_t *a1@<X8>)
{
  *a1 = TranscriptionView.viewModel.getter();
  OUTLINED_FUNCTION_0();
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptionView(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    v7 = a2[2];
    v4[1] = a2[1];
    v4[2] = v7;
    v8 = a3[6];
    v9 = (uint64_t *)((char *)v4 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = type metadata accessor for RedactionReasons();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      *v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v13 = a3[8];
    *(uint64_t *)((char *)v4 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    v14 = (uint64_t *)((char *)v4 + v13);
    v15 = (uint64_t *)((char *)a2 + v13);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for TranscriptionView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release();
  v4 = a1 + *(int *)(a2 + 24);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = type metadata accessor for RedactionReasons();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TranscriptionView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  v7 = a3[6];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = type metadata accessor for RedactionReasons();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v11 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TranscriptionView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v6 = a3[6];
    v7 = (_QWORD *)(a1 + v6);
    v8 = (_QWORD *)(a2 + v6);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(a1 + v6, (uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = type metadata accessor for RedactionReasons();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_retain();
  swift_release();
  v10 = a3[8];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for TranscriptionView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v6 = a3[6];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = type metadata accessor for RedactionReasons();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v11 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v11) = *(_OWORD *)(a2 + v11);
  return a1;
}

uint64_t assignWithTake for TranscriptionView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  swift_release();
  if (a1 != a2)
  {
    v7 = a3[6];
    v8 = (void *)(a1 + v7);
    v9 = (const void *)(a2 + v7);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(a1 + v7, (uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
    v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = type metadata accessor for RedactionReasons();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
  }
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_release();
  v12 = a3[8];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptionView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BD32EB58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<RedactionReasons>);
    return __swift_getEnumTagSinglePayload(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptionView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BD32EBDC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7;

  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(a1 + 16) = (a2 - 1);
    OUTLINED_FUNCTION_18();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<RedactionReasons>);
    __swift_storeEnumTagSinglePayload(a1 + *(int *)(a4 + 24), a2, a2, v7);
  }
}

void type metadata completion function for TranscriptionView()
{
  unint64_t v0;

  type metadata accessor for Environment<RedactionReasons>.Content();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void type metadata accessor for Environment<RedactionReasons>.Content()
{
  unint64_t v0;
  uint64_t v1;

  if (!lazy cache variable for type metadata for Environment<RedactionReasons>.Content)
  {
    type metadata accessor for RedactionReasons();
    v0 = type metadata accessor for Environment.Content();
    if (!v1)
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Environment<RedactionReasons>.Content);
  }
}

ValueMetadata *type metadata accessor for TranscriptionView.Strings()
{
  return &type metadata for TranscriptionView.Strings;
}

ValueMetadata *type metadata accessor for TranscriptionView_Previews()
{
  return &type metadata for TranscriptionView_Previews;
}

void sub_1BD32ED48()
{
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type GeometryReader<AutoScrollingList<ZStack<TupleView<(LiveVoicemailIntroView, ModifiedContent<ScreeningTranscriptLabel, _OpacityEffect>)>>, [TranscriptionViewModel.Caption], TranscriptionViewModel.Caption, <<opaque return type of View.privacySensitive(_:)>>.0>> and conformance GeometryReader<A>, &demangling cache variable for type metadata for GeometryReader<AutoScrollingList<ZStack<TupleView<(LiveVoicemailIntroView, ModifiedContent<ScreeningTranscriptLabel, _OpacityEffect>)>>, [TranscriptionViewModel.Caption], TranscriptionViewModel.Caption, <<opaque return type of View.privacySensitive(_:)>>.0>>);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.onTapGesture(count:perform:)>>.0, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[4];

  result = lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.onTapGesture(count:perform:)>>.0, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.onTapGesture(count:perform:)>>.0, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.onTapGesture(count:perform:)>>.0, _FlexFrameLayout>);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ZStack<_ConditionalContent<_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>, _PaddingLayout>, GeometryReader<AutoScrollingList<ZStack<TupleView<(LiveVoicemailIntroView, ModifiedContent<ScreeningTranscriptLabel, _OpacityEffect>)>>, [TranscriptionViewModel.Caption], TranscriptionViewModel.Caption, <<opaque return type of View.privacySensitive(_:)>>.0>>>, ModifiedContent<VStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingMod);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type ZStack<_ConditionalContent<_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>, _PaddingLayout>, GeometryReader<AutoScrollingList<ZStack<TupleView<(LiveVoicemailIntroView, ModifiedContent<ScreeningTranscriptLabel, _OpacityEffect>)>>, [TranscriptionViewModel.Caption], TranscriptionViewModel.Caption, <<opaque return type of View.privacySensitive(_:)>>.0>>>, ModifiedContent<VStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritin, &demangling cache variable for type metadata for ZStack<_ConditionalContent<_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>, _PaddingLayout>, GeometryReader<AutoScrollingList<ZStack<TupleView<(LiveVoicemailIntroView, ModifiedContent<ScreeningTranscriptLabel, _OpacityEffect>)>>, [TranscriptionViewModel.Caption], TranscriptionViewModel.Caption, <<opaque return type of View.privacySensitive(_:)>>.0>>>, ModifiedContent<VStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingMod);
    v4[2] = v2;
    v4[3] = v3;
    v4[0] = swift_getOpaqueTypeConformance2();
    v4[1] = MEMORY[0x1E0CDA228];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.onTapGesture(count:perform:)>>.0, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t sub_1BD32EE2C()
{
  type metadata accessor for ScreeningTranscriptLabel();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ScreeningTranscriptLabel and conformance ScreeningTranscriptLabel, (void (*)(uint64_t))type metadata accessor for ScreeningTranscriptLabel);
  return swift_getOpaqueTypeConformance2();
}

unint64_t lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>> and conformance <> _ConditionalContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>> and conformance <> _ConditionalContent<A, B>;
  if (!lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>> and conformance <> _ConditionalContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>>);
    v2[0] = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier> and conformance <> ModifiedContent<A, B>();
    v2[1] = v2[0];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDB8A0], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>> and conformance <> _ConditionalContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<TranscriptionView, _FrameLayout>, _TaskModifier> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<TranscriptionView, _FrameLayout>, _TaskModifier> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<TranscriptionView, _FrameLayout>, _TaskModifier> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<TranscriptionView, _FrameLayout>, _TaskModifier>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<TranscriptionView, _FrameLayout> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type _TaskModifier and conformance _TaskModifier, (void (*)(uint64_t))MEMORY[0x1E0CD9168]);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<TranscriptionView, _FrameLayout>, _TaskModifier> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<TranscriptionView, _FrameLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<TranscriptionView, _FrameLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<TranscriptionView, _FrameLayout> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<TranscriptionView, _FrameLayout>);
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type TranscriptionView and conformance TranscriptionView, (void (*)(uint64_t))type metadata accessor for TranscriptionView);
    v3[0] = v2;
    v3[1] = MEMORY[0x1E0CD8D70];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v3);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<TranscriptionView, _FrameLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t sub_1BD32F040()
{
  return swift_deallocObject();
}

uint64_t partial apply for makeCaption #1 (_:) in closure #1 in static TranscriptionView_Previews.previews.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;

  return makeCaption #1 (_:) in closure #1 in static TranscriptionView_Previews.previews.getter(a1, a2, v3, a3);
}

unint64_t lazy protocol witness table accessor for type Substring and conformance Substring()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Substring and conformance Substring;
  if (!lazy protocol witness table cache variable for type Substring and conformance Substring)
  {
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0DEBB10], MEMORY[0x1E0DEBAF0]);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Substring and conformance Substring);
  }
  return result;
}

uint64_t partial apply for closure #1 in closure #2 in TranscriptionView.body.getter()
{
  OUTLINED_FUNCTION_3_102();
  OUTLINED_FUNCTION_214();
  return closure #1 in closure #2 in TranscriptionView.body.getter();
}

unint64_t lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>, _PaddingLayout>, GeometryReader<AutoScrollingList<ZStack<TupleView<(LiveVoicemailIntroView, ModifiedContent<ScreeningTranscriptLabel, _OpacityEffect>)>>, [TranscriptionViewModel.Caption], TranscriptionViewModel.Caption, <<opaque return type of View.privacySensitive(_:)>>.0>>> and conformance <> _ConditionalContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>, _PaddingLayout>, GeometryReader<AutoScrollingList<ZStack<TupleView<(LiveVoicemailIntroView, ModifiedContent<ScreeningTranscriptLabel, _OpacityEffect>)>>, [TranscriptionViewModel.Caption], TranscriptionViewModel.Caption, <<opaque return type of View.privacySensitive(_:)>>.0>>> and conformance <> _ConditionalContent<A, B>;
  if (!lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>, _PaddingLayout>, GeometryReader<AutoScrollingList<ZStack<TupleView<(LiveVoicemailIntroView, ModifiedContent<ScreeningTranscriptLabel, _OpacityEffect>)>>, [TranscriptionViewModel.Caption], TranscriptionViewModel.Caption, <<opaque return type of View.privacySensitive(_:)>>.0>>> and conformance <> _ConditionalContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>, _PaddingLayout>, GeometryReader<AutoScrollingList<ZStack<TupleView<(LiveVoicemailIntroView, ModifiedContent<ScreeningTranscriptLabel, _OpacityEffect>)>>, [TranscriptionViewModel.Caption], TranscriptionViewModel.Caption, <<opaque return type of View.privacySensitive(_:)>>.0>>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<PlaceholderContentView<ModalOverlayTransition>, _OpacityEffect>, _BlurEffect>, _ScaleEffect> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>, _PaddingLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>, _PaddingLayout>, (uint64_t (*)(void))lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier> and conformance <> ModifiedContent<A, B>, MEMORY[0x1E0CD9758]);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type GeometryReader<AutoScrollingList<ZStack<TupleView<(LiveVoicemailIntroView, ModifiedContent<ScreeningTranscriptLabel, _OpacityEffect>)>>, [TranscriptionViewModel.Caption], TranscriptionViewModel.Caption, <<opaque return type of View.privacySensitive(_:)>>.0>> and conformance GeometryReader<A>, &demangling cache variable for type metadata for GeometryReader<AutoScrollingList<ZStack<TupleView<(LiveVoicemailIntroView, ModifiedContent<ScreeningTranscriptLabel, _OpacityEffect>)>>, [TranscriptionViewModel.Caption], TranscriptionViewModel.Caption, <<opaque return type of View.privacySensitive(_:)>>.0>>);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDB8A0], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Material?>>, _OpacityEffect>, AccessibilityVoiceOverModifier>, _PaddingLayout>, GeometryReader<AutoScrollingList<ZStack<TupleView<(LiveVoicemailIntroView, ModifiedContent<ScreeningTranscriptLabel, _OpacityEffect>)>>, [TranscriptionViewModel.Caption], TranscriptionViewModel.Caption, <<opaque return type of View.privacySensitive(_:)>>.0>>> and conformance <> _ConditionalContent<A, B>);
  }
  return result;
}

uint64_t partial apply for closure #1 in TranscriptionView.transcriptView.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  OUTLINED_FUNCTION_3_102();
  OUTLINED_FUNCTION_214();
  return closure #1 in TranscriptionView.transcriptView.getter(v2, a1);
}

void partial apply for closure #1 in closure #1 in TranscriptionView.transcriptView.getter()
{
  OUTLINED_FUNCTION_3_102();
  TranscriptionView.captionRow(caption:)();
  OUTLINED_FUNCTION_18();
}

uint64_t objectdestroyTm_9()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = OUTLINED_FUNCTION_3_102();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_release();
  v3 = v0 + ((v2 + 16) & ~v2) + *(int *)(v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = OUTLINED_FUNCTION_66_21();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in closure #1 in TranscriptionView.transcriptView.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  UIFontDescriptorSymbolicTraits *v3;

  v2 = OUTLINED_FUNCTION_3_102();
  v3 = (UIFontDescriptorSymbolicTraits *)OUTLINED_FUNCTION_44(v2);
  return closure #2 in closure #1 in TranscriptionView.transcriptView.getter(v3, a1);
}

uint64_t View.transition<A>(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *))(v2 + 16))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  AnyTransition.init<A>(_:)();
  View.transition(_:)();
  return swift_release();
}

uint64_t TransitioningText<>.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t *v6;
  uint64_t result;

  v6 = (_QWORD *)((char *)a3
                + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TransitioningText<FadeOutFadeInTransition>)
                         + 40));
  *v6 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
  result = swift_storeEnumTagMultiPayload();
  *a3 = a1;
  a3[1] = a2;
  return result;
}

void FadeOutFadeInViewModifier.opacity.setter(double a1)
{
  double *v1;

  *v1 = a1;
}

uint64_t (*FadeOutFadeInViewModifier.opacity.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double FadeOutFadeInViewModifier.modifiedOpacity.getter(double a1)
{
  double v1;
  BOOL v2;
  double result;

  v1 = (a1 + -0.75) * 4.0;
  v2 = a1 <= 0.75;
  result = 0.0;
  if (!v2)
    return v1;
  return result;
}

void FadeOutFadeInViewModifier.animatableData.setter(double a1)
{
  double *v1;

  *v1 = a1;
}

double (*FadeOutFadeInViewModifier.animatableData.modify(_QWORD *a1))(uint64_t a1)
{
  _QWORD *v1;

  a1[1] = v1;
  *a1 = *v1;
  return FadeOutFadeInViewModifier.animatableData.modify;
}

double FadeOutFadeInViewModifier.animatableData.modify(uint64_t a1)
{
  return OUTLINED_FUNCTION_6_82((double *)a1, *(_QWORD **)(a1 + 8));
}

void FadeOutFadeInViewModifier.body(content:)(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  void (*v12)(uint64_t, uint64_t);

  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<FadeOutFadeInViewModifier>, _OpacityEffect>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_77();
  v10 = v9 - v8;
  if (a3 <= 0.75)
    v11 = 0.0;
  else
    v11 = (a3 + -0.75) * 4.0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ViewModifier_Content<FadeOutFadeInViewModifier>);
  OUTLINED_FUNCTION_9_3();
  v12(v10, a1);
  *(double *)(v10 + *(int *)(v6 + 36)) = v11;
  outlined init with take of ModifiedContent<_ViewModifier_Content<FadeOutFadeInViewModifier>, _OpacityEffect>(v10, a2, &demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<FadeOutFadeInViewModifier>, _OpacityEffect>);
  OUTLINED_FUNCTION_0_120();
}

uint64_t protocol witness for static ViewModifier._makeView(modifier:inputs:body:) in conformance FadeOutFadeInViewModifier()
{
  lazy protocol witness table accessor for type FadeOutFadeInViewModifier and conformance FadeOutFadeInViewModifier();
  return static ViewModifier<>._makeView(modifier:inputs:body:)();
}

uint64_t protocol witness for static ViewModifier._makeViewList(modifier:inputs:body:) in conformance FadeOutFadeInViewModifier()
{
  lazy protocol witness table accessor for type FadeOutFadeInViewModifier and conformance FadeOutFadeInViewModifier();
  return static ViewModifier<>._makeViewList(modifier:inputs:body:)();
}

void protocol witness for ViewModifier.body(content:) in conformance FadeOutFadeInViewModifier(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double *v2;

  FadeOutFadeInViewModifier.body(content:)(a1, a2, *v2);
}

void protocol witness for Animatable.animatableData.setter in conformance FadeOutFadeInViewModifier(double *a1)
{
  FadeOutFadeInViewModifier.animatableData.setter(*a1);
}

uint64_t (*protocol witness for Animatable.animatableData.modify in conformance FadeOutFadeInViewModifier(_QWORD *a1))()
{
  _QWORD *v1;

  a1[1] = v1;
  *a1 = *v1;
  return protocol witness for Animatable.animatableData.modify in conformance FadeOutFadeInViewModifier;
}

void FadeOutFadeInTransition.body(content:phase:)(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t (*v8)(uint64_t, uint64_t);

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<PlaceholderContentView<FadeOutFadeInTransition>, FadeOutFadeInViewModifier>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_77();
  v6 = v5 - v4;
  if ((TransitionPhase.isIdentity.getter() & 1) != 0)
    v7 = 1.0;
  else
    v7 = 0.0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PlaceholderContentView<FadeOutFadeInTransition>);
  OUTLINED_FUNCTION_9_3();
  OUTLINED_FUNCTION_7_96(v6, v8);
  *(double *)(v6 + *(int *)(v2 + 36)) = v7;
  outlined init with take of ModifiedContent<_ViewModifier_Content<FadeOutFadeInViewModifier>, _OpacityEffect>(v6, a1, &demangling cache variable for type metadata for ModifiedContent<PlaceholderContentView<FadeOutFadeInTransition>, FadeOutFadeInViewModifier>);
  OUTLINED_FUNCTION_0_120();
}

uint64_t TransitioningText.text.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TransitioningText.transition.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 36));
}

void TransitioningText.horizontalSizeClass.getter()
{
  specialized Environment.wrappedValue.getter();
}

uint64_t TransitioningText.toolbarFont.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v21;

  v0 = type metadata accessor for UserInterfaceSizeClass();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (UserInterfaceSizeClass?, UserInterfaceSizeClass?));
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v21 - v12;
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v21 - v14;
  if (static Platform.current.getter() != 1)
    goto LABEL_10;
  specialized Environment.wrappedValue.getter();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v13, *MEMORY[0x1E0CDC160], v0);
  __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v0);
  v16 = (uint64_t)&v6[*(int *)(v4 + 48)];
  outlined init with copy of ZStack<ModifiedContent<ModifiedContent<IDView<MarqueeLabel, String>, _TraitWritingModifier<TransitionTraitKey>>, _EnvironmentKeyWritingModifier<Font?>>>((uint64_t)v15, (uint64_t)v6, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  outlined init with copy of ZStack<ModifiedContent<ModifiedContent<IDView<MarqueeLabel, String>, _TraitWritingModifier<TransitionTraitKey>>, _EnvironmentKeyWritingModifier<Font?>>>((uint64_t)v13, v16, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v0) != 1)
  {
    outlined init with copy of ZStack<ModifiedContent<ModifiedContent<IDView<MarqueeLabel, String>, _TraitWritingModifier<TransitionTraitKey>>, _EnvironmentKeyWritingModifier<Font?>>>((uint64_t)v6, (uint64_t)v10, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    if (__swift_getEnumTagSinglePayload(v16, 1, v0) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v1 + 32))(v3, v16, v0);
      lazy protocol witness table accessor for type UserInterfaceSizeClass and conformance UserInterfaceSizeClass();
      v17 = dispatch thunk of static Equatable.== infix(_:_:)();
      v18 = *(void (**)(char *, uint64_t))(v1 + 8);
      v18(v3, v0);
      outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v13, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v15, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      v18(v10, v0);
      outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v6, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      if ((v17 & 1) != 0)
        goto LABEL_9;
LABEL_10:
      static Font.caption.getter();
      static Font.Weight.regular.getter();
      goto LABEL_11;
    }
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v13, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v15, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    (*(void (**)(char *, uint64_t))(v1 + 8))(v10, v0);
LABEL_7:
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v6, &demangling cache variable for type metadata for (UserInterfaceSizeClass?, UserInterfaceSizeClass?));
    goto LABEL_10;
  }
  outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v13, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v15, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  if (__swift_getEnumTagSinglePayload(v16, 1, v0) != 1)
    goto LABEL_7;
  outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v6, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
LABEL_9:
  static Font.footnote.getter();
  static Font.Weight.semibold.getter();
LABEL_11:
  v19 = Font.weight(_:)();
  swift_release();
  return v19;
}

uint64_t TransitioningText.init(_:transition:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X8>)
{
  uint64_t v11;
  uint64_t *v12;

  v11 = type metadata accessor for TransitioningText(0, a4, a5, a4);
  v12 = (uint64_t *)&a6[*(int *)(v11 + 40)];
  *v12 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)a6 = a1;
  *((_QWORD *)a6 + 1) = a2;
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(&a6[*(int *)(v11 + 36)], a3, a4);
}

void TransitioningText.body.getter(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;

  v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ZStack<ModifiedContent<ModifiedContent<IDView<MarqueeLabel, String>, _TraitWritingModifier<TransitionTraitKey>>, _EnvironmentKeyWritingModifier<Font?>>>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_77();
  v9 = (uint64_t *)(v8 - v7);
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<IDView<MarqueeLabel, String>, _TraitWritingModifier<TransitionTraitKey>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>();
  *v9 = static Alignment.center.getter();
  v9[1] = v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_ZStackLayout, ModifiedContent<ModifiedContent<IDView<MarqueeLabel, String>, _TraitWritingModifier<TransitionTraitKey>>, _EnvironmentKeyWritingModifier<Font?>>>);
  closure #1 in TransitioningText.body.getter(v3, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), (uint64_t)v9 + *(int *)(v11 + 44));
  static Animation.default.getter();
  v12 = Animation.speed(_:)();
  swift_release();
  v14 = *v3;
  v13 = v3[1];
  outlined init with copy of ZStack<ModifiedContent<ModifiedContent<IDView<MarqueeLabel, String>, _TraitWritingModifier<TransitionTraitKey>>, _EnvironmentKeyWritingModifier<Font?>>>((uint64_t)v9, a2, &demangling cache variable for type metadata for ZStack<ModifiedContent<ModifiedContent<IDView<MarqueeLabel, String>, _TraitWritingModifier<TransitionTraitKey>>, _EnvironmentKeyWritingModifier<Font?>>>);
  v15 = (uint64_t *)(a2
                  + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ZStack<ModifiedContent<ModifiedContent<IDView<MarqueeLabel, String>, _TraitWritingModifier<TransitionTraitKey>>, _EnvironmentKeyWritingModifier<Font?>>>, _AnimationModifier<String>>)
                           + 36));
  *v15 = v12;
  v15[1] = v14;
  v15[2] = v13;
  swift_bridgeObjectRetain();
  outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v9, &demangling cache variable for type metadata for ZStack<ModifiedContent<ModifiedContent<IDView<MarqueeLabel, String>, _TraitWritingModifier<TransitionTraitKey>>, _EnvironmentKeyWritingModifier<Font?>>>);
}

void closure #1 in TransitioningText.body.getter(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  char *v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t KeyPath;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v28 = a2;
  v29 = a3;
  v30 = a4;
  v5 = type metadata accessor for MarqueeLabel();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IDView<MarqueeLabel, String>);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<IDView<MarqueeLabel, String>, _TraitWritingModifier<TransitionTraitKey>>);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *a1;
  v15 = a1[1];
  v17 = (void *)objc_opt_self();
  swift_bridgeObjectRetain();
  v18 = objc_msgSend(v17, sel_labelColor);
  MarqueeLabel.init(text:color:animated:)();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v11, v8, v5);
  v19 = &v11[*(int *)(v9 + 52)];
  *(_QWORD *)v19 = v16;
  *((_QWORD *)v19 + 1) = v15;
  v20 = *(void (**)(char *, uint64_t))(v6 + 8);
  swift_bridgeObjectRetain();
  v20(v8, v5);
  v22 = (uint64_t)a1 + *(int *)(type metadata accessor for TransitioningText(0, v28, v29, v21) + 36);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type IDView<MarqueeLabel, String> and conformance IDView<A, B>, &demangling cache variable for type metadata for IDView<MarqueeLabel, String>, MEMORY[0x1E0CDFB30]);
  View.transition<A>(_:)(v22);
  outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v11, &demangling cache variable for type metadata for IDView<MarqueeLabel, String>);
  v23 = TransitioningText.toolbarFont.getter();
  KeyPath = swift_getKeyPath();
  v25 = v30;
  outlined init with copy of ZStack<ModifiedContent<ModifiedContent<IDView<MarqueeLabel, String>, _TraitWritingModifier<TransitionTraitKey>>, _EnvironmentKeyWritingModifier<Font?>>>((uint64_t)v14, v30, &demangling cache variable for type metadata for ModifiedContent<IDView<MarqueeLabel, String>, _TraitWritingModifier<TransitionTraitKey>>);
  v26 = (uint64_t *)(v25
                  + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<IDView<MarqueeLabel, String>, _TraitWritingModifier<TransitionTraitKey>>, _EnvironmentKeyWritingModifier<Font?>>)
                           + 36));
  *v26 = KeyPath;
  v26[1] = v23;
  outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v14, &demangling cache variable for type metadata for ModifiedContent<IDView<MarqueeLabel, String>, _TraitWritingModifier<TransitionTraitKey>>);
}

void outlined init with take of ModifiedContent<_ViewModifier_Content<FadeOutFadeInViewModifier>, _OpacityEffect>(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_83(a1, a2, a3);
  OUTLINED_FUNCTION_7_96(v3, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32));
  OUTLINED_FUNCTION_0();
}

uint64_t type metadata accessor for TransitioningText(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TransitioningText);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<IDView<MarqueeLabel, String>, _TraitWritingModifier<TransitionTraitKey>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<IDView<MarqueeLabel, String>, _TraitWritingModifier<TransitionTraitKey>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<IDView<MarqueeLabel, String>, _TraitWritingModifier<TransitionTraitKey>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<IDView<MarqueeLabel, String>, _TraitWritingModifier<TransitionTraitKey>>, _EnvironmentKeyWritingModifier<Font?>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<IDView<MarqueeLabel, String>, _TraitWritingModifier<TransitionTraitKey>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Font?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Font?>, MEMORY[0x1E0CDCF80]);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<IDView<MarqueeLabel, String>, _TraitWritingModifier<TransitionTraitKey>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<IDView<MarqueeLabel, String>, _TraitWritingModifier<TransitionTraitKey>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<IDView<MarqueeLabel, String>, _TraitWritingModifier<TransitionTraitKey>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<IDView<MarqueeLabel, String>, _TraitWritingModifier<TransitionTraitKey>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<IDView<MarqueeLabel, String>, _TraitWritingModifier<TransitionTraitKey>>);
    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type IDView<MarqueeLabel, String> and conformance IDView<A, B>, &demangling cache variable for type metadata for IDView<MarqueeLabel, String>, MEMORY[0x1E0CDFB30]);
    v3 = v2;
    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type _TraitWritingModifier<TransitionTraitKey> and conformance _TraitWritingModifier<A>, &demangling cache variable for type metadata for _TraitWritingModifier<TransitionTraitKey>, MEMORY[0x1E0CDBEF0]);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v5);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<IDView<MarqueeLabel, String>, _TraitWritingModifier<TransitionTraitKey>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t associated type witness table accessor for ViewModifier.Body : View in FadeOutFadeInViewModifier()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for Animatable.AnimatableData : VectorArithmetic in FadeOutFadeInViewModifier()
{
  return MEMORY[0x1E0CE0708];
}

uint64_t associated type witness table accessor for Transition.Body : View in FadeOutFadeInTransition()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for View.Body : View in TransitioningText<A>()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1BD3300CC(double *a1)
{
  FadeOutFadeInViewModifier.animatableData.setter(*a1);
}

ValueMetadata *type metadata accessor for FadeOutFadeInViewModifier()
{
  return &type metadata for FadeOutFadeInViewModifier;
}

ValueMetadata *type metadata accessor for FadeOutFadeInTransition()
{
  return &type metadata for FadeOutFadeInTransition;
}

void type metadata completion function for TransitioningText()
{
  unint64_t v0;
  unint64_t v1;

  swift_checkMetadataState();
  if (v0 <= 0x3F)
  {
    type metadata accessor for Environment<UserInterfaceSizeClass?>.Content();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for TransitioningText(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  size_t v16;
  uint64_t v17;
  unint64_t v18;
  int v19;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t);
  _QWORD *v29;
  _QWORD *v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v34;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v8 = v7;
  v9 = *(_QWORD *)(v6 + 64);
  v10 = type metadata accessor for UserInterfaceSizeClass();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_DWORD *)(v11 + 80);
  v13 = v12 & 0xF8 | 7;
  v14 = v9 + v13;
  v15 = (v9 + v13 + ((v8 + 16) & ~v8)) & ~v13;
  if (*(_DWORD *)(v11 + 84))
    v16 = *(_QWORD *)(v11 + 64);
  else
    v16 = *(_QWORD *)(v11 + 64) + 1;
  if (v16 <= 8)
    v17 = 8;
  else
    v17 = v16;
  v18 = v17 + v15 + 1;
  v19 = (v12 | v7) & 0x100000;
  if ((v13 | v7) != 7 || v19 != 0 || v18 > 0x18)
  {
    v22 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v22 + (((v13 | v7) + 16) & ~(v13 | v7)));
LABEL_25:
    swift_retain();
    return a1;
  }
  v34 = v10;
  v23 = ~v13;
  v24 = a2[1];
  *a1 = *a2;
  a1[1] = v24;
  v25 = (char *)a2 + v8;
  v26 = ((unint64_t)a1 + v8 + 16) & ~v8;
  v27 = (unint64_t)(v25 + 16) & ~v8;
  v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  swift_bridgeObjectRetain();
  v28(v26, v27, v5);
  v29 = (_QWORD *)((v26 + v14) & v23);
  v30 = (_QWORD *)((v27 + v14) & v23);
  v31 = *((unsigned __int8 *)v30 + v17);
  if (v31 >= 2)
  {
    if (v17 <= 3)
      v32 = v17;
    else
      v32 = 4;
    __asm { BR              X12 }
  }
  if (v31 != 1)
  {
    *v29 = *v30;
    *((_BYTE *)v29 + v17) = 0;
    goto LABEL_25;
  }
  if (__swift_getEnumTagSinglePayload((v27 + v14) & v23, 1, v34))
  {
    memcpy(v29, v30, v16);
  }
  else
  {
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v11 + 16))(v29, v30, v34);
    __swift_storeEnumTagSinglePayload((uint64_t)v29, 0, 1, v34);
  }
  *((_BYTE *)v29 + v17) = 1;
  return a1;
}

uint64_t destroy for TransitioningText(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t result;

  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v5 = (a1 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  (*(void (**)(unint64_t))(v4 + 8))(v5);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = type metadata accessor for UserInterfaceSizeClass();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_DWORD *)(v8 + 80) & 0xF8 | 7;
  v10 = (v5 + v6 + v9) & ~v9;
  v11 = *(_QWORD *)(v8 + 64);
  if (!*(_DWORD *)(v8 + 84))
    ++v11;
  if (v11 <= 8)
    v11 = 8;
  v12 = *(unsigned __int8 *)(v10 + v11);
  if (v12 >= 2)
  {
    if (v11 <= 3)
      v13 = v11;
    else
      v13 = 4;
    __asm { BR              X13 }
  }
  if (v12 != 1)
    return swift_release();
  result = __swift_getEnumTagSinglePayload(v10, 1, v7);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v10, v7);
  return result;
}

_QWORD *initializeWithCopy for TransitioningText(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  size_t v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = ((unint64_t)a1 + v7 + 16) & ~v7;
  v9 = ((unint64_t)a2 + v7 + 16) & ~v7;
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  swift_bridgeObjectRetain();
  v10(v8, v9, v5);
  v11 = *(_QWORD *)(v6 + 64);
  v12 = type metadata accessor for UserInterfaceSizeClass();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_DWORD *)(v13 + 80) & 0xF8 | 7;
  v15 = v11 + v14;
  v16 = (_QWORD *)((v11 + v14 + v8) & ~v14);
  v17 = (_QWORD *)((v15 + v9) & ~v14);
  if (*(_DWORD *)(v13 + 84))
    v18 = *(_QWORD *)(v13 + 64);
  else
    v18 = *(_QWORD *)(v13 + 64) + 1;
  if (v18 <= 8)
    v19 = 8;
  else
    v19 = v18;
  v20 = *((unsigned __int8 *)v17 + v19);
  if (v20 >= 2)
  {
    if (v19 <= 3)
      v21 = v19;
    else
      v21 = 4;
    __asm { BR              X12 }
  }
  if (v20 == 1)
  {
    if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v12))
    {
      memcpy(v16, v17, v18);
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v13 + 16))(v16, v17, v12);
      __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v12);
    }
    *((_BYTE *)v16 + v19) = 1;
  }
  else
  {
    *v16 = *v17;
    *((_BYTE *)v16 + v19) = 0;
    swift_retain();
  }
  return a1;
}

_QWORD *assignWithCopy for TransitioningText(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  size_t v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  unsigned int v21;
  uint64_t v22;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = ((unint64_t)a1 + v7 + 16) & ~v7;
  v9 = ((unint64_t)a2 + v7 + 16) & ~v7;
  (*(void (**)(uint64_t, uint64_t))(v6 + 24))(v8, v9);
  v10 = *(_QWORD *)(v6 + 64);
  v11 = type metadata accessor for UserInterfaceSizeClass();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_DWORD *)(v12 + 80) & 0xF8 | 7;
  v14 = (_QWORD *)((v10 + v13 + v8) & ~v13);
  v15 = (_QWORD *)((v10 + v13 + v9) & ~v13);
  if (v14 != v15)
  {
    v16 = v11;
    if (*(_DWORD *)(v12 + 84))
      v17 = *(_QWORD *)(v12 + 64);
    else
      v17 = *(_QWORD *)(v12 + 64) + 1;
    if (v17 <= 8)
      v18 = 8;
    else
      v18 = v17;
    v19 = *((unsigned __int8 *)v14 + v18);
    if (v19 >= 2)
    {
      if (v18 <= 3)
        v20 = v18;
      else
        v20 = 4;
      __asm { BR              X12 }
    }
    if (v19 == 1)
    {
      if (!__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v11))
        (*(void (**)(_QWORD *, uint64_t))(v12 + 8))(v14, v16);
    }
    else
    {
      swift_release();
    }
    v21 = *((unsigned __int8 *)v15 + v18);
    if (v21 >= 2)
    {
      if (v18 <= 3)
        v22 = v18;
      else
        v22 = 4;
      __asm { BR              X12 }
    }
    if (v21 == 1)
    {
      if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16))
      {
        memcpy(v14, v15, v17);
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v12 + 16))(v14, v15, v16);
        __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v16);
      }
      *((_BYTE *)v14 + v18) = 1;
    }
    else
    {
      *v14 = *v15;
      *((_BYTE *)v14 + v18) = 0;
      swift_retain();
    }
  }
  return a1;
}

_OWORD *initializeWithTake for TransitioningText(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  size_t v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  char v18;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = ((unint64_t)a1 + v5 + 16) & ~v5;
  v7 = ((unint64_t)a2 + v5 + 16) & ~v5;
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v6, v7);
  v8 = *(_QWORD *)(v4 + 64);
  v9 = type metadata accessor for UserInterfaceSizeClass();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_DWORD *)(v10 + 80) & 0xF8 | 7;
  v12 = (_QWORD *)((v8 + v11 + v6) & ~v11);
  v13 = (_QWORD *)((v8 + v11 + v7) & ~v11);
  if (*(_DWORD *)(v10 + 84))
    v14 = *(_QWORD *)(v10 + 64);
  else
    v14 = *(_QWORD *)(v10 + 64) + 1;
  if (v14 <= 8)
    v15 = 8;
  else
    v15 = v14;
  v16 = *((unsigned __int8 *)v13 + v15);
  if (v16 >= 2)
  {
    if (v15 <= 3)
      v17 = v15;
    else
      v17 = 4;
    __asm { BR              X12 }
  }
  if (v16 == 1)
  {
    if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v9))
    {
      memcpy(v12, v13, v14);
      v18 = 1;
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v10 + 32))(v12, v13, v9);
      v18 = 1;
      __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v9);
    }
  }
  else
  {
    v18 = 0;
    *v12 = *v13;
  }
  *((_BYTE *)v12 + v15) = v18;
  return a1;
}

_QWORD *assignWithTake for TransitioningText(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  size_t v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;
  char v24;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = ((unint64_t)a1 + v8 + 16) & ~v8;
  v10 = ((unint64_t)a2 + v8 + 16) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 40))(v9, v10);
  v11 = *(_QWORD *)(v7 + 64);
  v12 = type metadata accessor for UserInterfaceSizeClass();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_DWORD *)(v13 + 80) & 0xF8 | 7;
  v15 = (_QWORD *)((v11 + v14 + v9) & ~v14);
  v16 = (_QWORD *)((v11 + v14 + v10) & ~v14);
  if (v15 != v16)
  {
    v17 = v12;
    if (*(_DWORD *)(v13 + 84))
      v18 = *(_QWORD *)(v13 + 64);
    else
      v18 = *(_QWORD *)(v13 + 64) + 1;
    if (v18 <= 8)
      v19 = 8;
    else
      v19 = v18;
    v20 = *((unsigned __int8 *)v15 + v19);
    if (v20 >= 2)
    {
      if (v19 <= 3)
        v21 = v19;
      else
        v21 = 4;
      __asm { BR              X12 }
    }
    if (v20 == 1)
    {
      if (!__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v12))
        (*(void (**)(_QWORD *, uint64_t))(v13 + 8))(v15, v17);
    }
    else
    {
      swift_release();
    }
    v22 = *((unsigned __int8 *)v16 + v19);
    if (v22 >= 2)
    {
      if (v19 <= 3)
        v23 = v19;
      else
        v23 = 4;
      __asm { BR              X12 }
    }
    if (v22 == 1)
    {
      if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v17))
      {
        memcpy(v15, v16, v18);
        v24 = 1;
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v13 + 32))(v15, v16, v17);
        v24 = 1;
        __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v17);
      }
    }
    else
    {
      v24 = 0;
      *v15 = *v16;
    }
    *((_BYTE *)v15 + v19) = v24;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for TransitioningText(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  int v16;
  unsigned int v18;
  int v19;
  unint64_t v20;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF)
    v8 = 0x7FFFFFFF;
  else
    v8 = *(_DWORD *)(v6 + 84);
  v9 = *(_QWORD *)(type metadata accessor for UserInterfaceSizeClass() - 8);
  if (*(_DWORD *)(v9 + 84))
    v10 = *(_QWORD *)(v9 + 64);
  else
    v10 = *(_QWORD *)(v9 + 64) + 1;
  v11 = 8;
  if (v10 > 8)
    v11 = v10;
  if (!a2)
    return 0;
  v12 = *(unsigned __int8 *)(v6 + 80);
  if (a2 <= v8)
    goto LABEL_27;
  v13 = *(_DWORD *)(v9 + 80) & 0xF8 | 7;
  v14 = v11 + ((((v12 + 16) & ~v12) + *(_QWORD *)(v6 + 64) + v13) & ~v13) + 1;
  v15 = 8 * v14;
  if (v14 <= 3)
  {
    v18 = ((a2 - v8 + ~(-1 << v15)) >> v15) + 1;
    if (HIWORD(v18))
    {
      v16 = *(_DWORD *)(a1 + v14);
      if (!v16)
        goto LABEL_27;
      goto LABEL_20;
    }
    if (v18 > 0xFF)
    {
      v16 = *(unsigned __int16 *)(a1 + v14);
      if (!*(_WORD *)(a1 + v14))
        goto LABEL_27;
      goto LABEL_20;
    }
    if (v18 < 2)
    {
LABEL_27:
      if ((v7 & 0x80000000) != 0)
        return __swift_getEnumTagSinglePayload((a1 + v12 + 16) & ~v12, v7, v5);
      v20 = *(_QWORD *)(a1 + 8);
      if (v20 >= 0xFFFFFFFF)
        LODWORD(v20) = -1;
      return (v20 + 1);
    }
  }
  v16 = *(unsigned __int8 *)(a1 + v14);
  if (!*(_BYTE *)(a1 + v14))
    goto LABEL_27;
LABEL_20:
  v19 = (v16 - 1) << v15;
  if (v14 > 3)
    v19 = 0;
  if ((_DWORD)v14)
  {
    if (v14 > 3)
      LODWORD(v14) = 4;
    __asm { BR              X11 }
  }
  return v8 + v19 + 1;
}

void storeEnumTagSinglePayload for TransitioningText(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unint64_t v10;
  size_t v11;
  char v12;
  unsigned int v13;
  int v14;
  unsigned int v15;
  int v16;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v7 + 84) <= 0x7FFFFFFFu)
    v8 = 0x7FFFFFFF;
  else
    v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(type metadata accessor for UserInterfaceSizeClass() - 8);
  v10 = *(_QWORD *)(v9 + 64);
  if (!*(_DWORD *)(v9 + 84))
    ++v10;
  if (v10 <= 8)
    v10 = 8;
  v11 = v10
      + ((((*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))
        + *(_QWORD *)(v7 + 64)
        + (*(_DWORD *)(v9 + 80) & 0xF8 | 7)) & ~(*(_DWORD *)(v9 + 80) & 0xF8 | 7))
      + 1;
  v12 = 8 * v11;
  if (a3 <= v8)
  {
    v13 = 0u;
  }
  else if (v11 <= 3)
  {
    v15 = ((a3 - v8 + ~(-1 << v12)) >> v12) + 1;
    if (HIWORD(v15))
    {
      v13 = 4u;
    }
    else if (v15 >= 0x100)
    {
      v13 = 2;
    }
    else
    {
      v13 = v15 > 1;
    }
  }
  else
  {
    v13 = 1u;
  }
  if (v8 < a2)
  {
    v14 = ~v8 + a2;
    if (v11 < 4)
    {
      if ((_DWORD)v11)
      {
        v16 = v14 & ~(-1 << v12);
        bzero(a1, v11);
        if ((_DWORD)v11 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if ((_DWORD)v11 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v11);
      *(_DWORD *)a1 = v14;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X12 }
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<_ViewModifier_Content<FadeOutFadeInViewModifier>, _OpacityEffect> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<_ViewModifier_Content<FadeOutFadeInViewModifier>, _OpacityEffect> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<_ViewModifier_Content<FadeOutFadeInViewModifier>, _OpacityEffect> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<FadeOutFadeInViewModifier>, _OpacityEffect>);
    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type _ViewModifier_Content<FadeOutFadeInViewModifier> and conformance _ViewModifier_Content<A>, &demangling cache variable for type metadata for _ViewModifier_Content<FadeOutFadeInViewModifier>, MEMORY[0x1E0CDBF10]);
    v3[0] = v2;
    v3[1] = MEMORY[0x1E0CD9728];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v3);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<_ViewModifier_Content<FadeOutFadeInViewModifier>, _OpacityEffect> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<PlaceholderContentView<FadeOutFadeInTransition>, FadeOutFadeInViewModifier> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<PlaceholderContentView<FadeOutFadeInTransition>, FadeOutFadeInViewModifier> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<PlaceholderContentView<FadeOutFadeInTransition>, FadeOutFadeInViewModifier> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<PlaceholderContentView<FadeOutFadeInTransition>, FadeOutFadeInViewModifier>);
    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type PlaceholderContentView<FadeOutFadeInTransition> and conformance PlaceholderContentView<A>, &demangling cache variable for type metadata for PlaceholderContentView<FadeOutFadeInTransition>, MEMORY[0x1E0CDC048]);
    v3[0] = v2;
    v3[1] = lazy protocol witness table accessor for type FadeOutFadeInViewModifier and conformance FadeOutFadeInViewModifier();
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v3);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<PlaceholderContentView<FadeOutFadeInTransition>, FadeOutFadeInViewModifier> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type FadeOutFadeInViewModifier and conformance FadeOutFadeInViewModifier()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type FadeOutFadeInViewModifier and conformance FadeOutFadeInViewModifier;
  if (!lazy protocol witness table cache variable for type FadeOutFadeInViewModifier and conformance FadeOutFadeInViewModifier)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for FadeOutFadeInViewModifier, &type metadata for FadeOutFadeInViewModifier);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type FadeOutFadeInViewModifier and conformance FadeOutFadeInViewModifier);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type FadeOutFadeInViewModifier and conformance FadeOutFadeInViewModifier;
  if (!lazy protocol witness table cache variable for type FadeOutFadeInViewModifier and conformance FadeOutFadeInViewModifier)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for FadeOutFadeInViewModifier, &type metadata for FadeOutFadeInViewModifier);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type FadeOutFadeInViewModifier and conformance FadeOutFadeInViewModifier);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ZStack<ModifiedContent<ModifiedContent<IDView<MarqueeLabel, String>, _TraitWritingModifier<TransitionTraitKey>>, _EnvironmentKeyWritingModifier<Font?>>>, _AnimationModifier<String>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ZStack<ModifiedContent<ModifiedContent<IDView<MarqueeLabel, String>, _TraitWritingModifier<TransitionTraitKey>>, _EnvironmentKeyWritingModifier<Font?>>>, _AnimationModifier<String>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ZStack<ModifiedContent<ModifiedContent<IDView<MarqueeLabel, String>, _TraitWritingModifier<TransitionTraitKey>>, _EnvironmentKeyWritingModifier<Font?>>>, _AnimationModifier<String>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ZStack<ModifiedContent<ModifiedContent<IDView<MarqueeLabel, String>, _TraitWritingModifier<TransitionTraitKey>>, _EnvironmentKeyWritingModifier<Font?>>>, _AnimationModifier<String>>);
    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type ZStack<ModifiedContent<ModifiedContent<IDView<MarqueeLabel, String>, _TraitWritingModifier<TransitionTraitKey>>, _EnvironmentKeyWritingModifier<Font?>>> and conformance ZStack<A>, &demangling cache variable for type metadata for ZStack<ModifiedContent<ModifiedContent<IDView<MarqueeLabel, String>, _TraitWritingModifier<TransitionTraitKey>>, _EnvironmentKeyWritingModifier<Font?>>>, MEMORY[0x1E0CDFCF8]);
    v3 = v2;
    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type _AnimationModifier<String> and conformance _AnimationModifier<A>, &demangling cache variable for type metadata for _AnimationModifier<String>, MEMORY[0x1E0CDB148]);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v5);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ZStack<ModifiedContent<ModifiedContent<IDView<MarqueeLabel, String>, _TraitWritingModifier<TransitionTraitKey>>, _EnvironmentKeyWritingModifier<Font?>>>, _AnimationModifier<String>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

void outlined init with copy of ZStack<ModifiedContent<ModifiedContent<IDView<MarqueeLabel, String>, _TraitWritingModifier<TransitionTraitKey>>, _EnvironmentKeyWritingModifier<Font?>>>(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  OUTLINED_FUNCTION_83(a1, a2, a3);
  OUTLINED_FUNCTION_9_3();
  OUTLINED_FUNCTION_7_96(v3, v4);
  OUTLINED_FUNCTION_0();
}

uint64_t URL.withoutFragment.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_77();
  v5 = v4 - v3;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URLComponents?);
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_77();
  v9 = v8 - v7;
  v10 = type metadata accessor for URLComponents();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_77();
  v14 = v13 - v12;
  URLComponents.init(url:resolvingAgainstBaseURL:)();
  if (__swift_getEnumTagSinglePayload(v9, 1, v10) == 1)
  {
    outlined destroy of Conversation?(v9, &demangling cache variable for type metadata for URLComponents?);
    v15 = type metadata accessor for URL();
    return __swift_storeEnumTagSinglePayload(a1, 1, 1, v15);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v14, v9, v10);
    URLComponents.fragment.setter();
    URL.baseURL.getter();
    URLComponents.url(relativeTo:)();
    outlined destroy of Conversation?(v5, &demangling cache variable for type metadata for URL?);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v14, v10);
  }
}

uint64_t ClarityUIRecentsView.body.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v0 = type metadata accessor for ClarityUINavigationTitle();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for List<Never, ForEach<[CHRecentCall], String, <<opaque return type of View.badge(_:)>>.0>>);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ForEach<[CHRecentCall], String, <<opaque return type of View.badge(_:)>>.0>);
  lazy protocol witness table accessor for type ForEach<[CHRecentCall], String, <<opaque return type of View.badge(_:)>>.0> and conformance <> ForEach<A, B, C>();
  List<>.init(content:)();
  static ClarityUINavigationTitle.recents.getter();
  lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type List<Never, ForEach<[CHRecentCall], String, <<opaque return type of View.badge(_:)>>.0>> and conformance List<A, B>, &demangling cache variable for type metadata for List<Never, ForEach<[CHRecentCall], String, <<opaque return type of View.badge(_:)>>.0>>, MEMORY[0x1E0CDD950]);
  View.navigationTitle(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t closure #1 in ClarityUIRecentsView.body.getter()
{
  ClarityUICallHistory.recentCalls.getter();
  swift_getKeyPath();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [CHRecentCall]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.badge(_:)>>.0);
  lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type [CHRecentCall] and conformance [A], &demangling cache variable for type metadata for [CHRecentCall], MEMORY[0x1E0DEAF48]);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for NavigationLink<Label<Text, ClarityUIContactAvatar>, Never>);
  lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type NavigationLink<Label<Text, ClarityUIContactAvatar>, Never> and conformance NavigationLink<A, B>, &demangling cache variable for type metadata for NavigationLink<Label<Text, ClarityUIContactAvatar>, Never>, MEMORY[0x1E0CD9468]);
  swift_getOpaqueTypeConformance2();
  return ForEach<>.init(_:id:content:)();
}

uint64_t partial apply for closure #1 in ClarityUIRecentsView.body.getter()
{
  return closure #1 in ClarityUIRecentsView.body.getter();
}

unint64_t lazy protocol witness table accessor for type ForEach<[CHRecentCall], String, <<opaque return type of View.badge(_:)>>.0> and conformance <> ForEach<A, B, C>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[3];

  result = lazy protocol witness table cache variable for type ForEach<[CHRecentCall], String, <<opaque return type of View.badge(_:)>>.0> and conformance <> ForEach<A, B, C>;
  if (!lazy protocol witness table cache variable for type ForEach<[CHRecentCall], String, <<opaque return type of View.badge(_:)>>.0> and conformance <> ForEach<A, B, C>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ForEach<[CHRecentCall], String, <<opaque return type of View.badge(_:)>>.0>);
    v2[1] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for NavigationLink<Label<Text, ClarityUIContactAvatar>, Never>);
    v2[2] = lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type NavigationLink<Label<Text, ClarityUIContactAvatar>, Never> and conformance NavigationLink<A, B>, &demangling cache variable for type metadata for NavigationLink<Label<Text, ClarityUIContactAvatar>, Never>, MEMORY[0x1E0CD9468]);
    v2[0] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDFEE8], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ForEach<[CHRecentCall], String, <<opaque return type of View.badge(_:)>>.0> and conformance <> ForEach<A, B, C>);
  }
  return result;
}

void key path getter for CHRecentCall.uniqueId : CHRecentCall(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = objc_msgSend(*a1, sel_uniqueId);
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v6 = v5;

  *a2 = v4;
  a2[1] = v6;
}

void key path setter for CHRecentCall.uniqueId : CHRecentCall(_QWORD *a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  v3 = (id)MEMORY[0x1C3B72E00](*a1, a1[1]);
  objc_msgSend(v2, sel_setUniqueId_, v3);

}

void closure #1 in closure #1 in ClarityUIRecentsView.body.getter(void **a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NavigationLink<Label<Text, ClarityUIContactAvatar>, Never>);
  MEMORY[0x1E0C80A78](v4);
  ClarityUIRecentsView.contact(for:)(*a1, a2);
}

uint64_t sub_1BD331954()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(void **)(v4 - 192);
  v7 = *(_QWORD *)(v4 - 184);
  v6 = *(_QWORD *)(v4 - 176);
  v8 = *(id *)(v4 - 200);
  v9 = v5;
  swift_bridgeObjectRetain();
  v10 = v3;
  ClarityUIOutgoingCallAction.init(recentCall:)(v10, v4 - 128);
  v11 = *(_QWORD *)(v4 - 128);
  v12 = *(_QWORD *)(v4 - 120);
  v13 = *(unsigned __int8 *)(v4 - 112);
  *(_QWORD *)(v4 - 200) = v8;
  *(_QWORD *)(v4 - 192) = v9;
  *(_QWORD *)(v4 - 184) = v7;
  *(_QWORD *)(v4 - 176) = v6;
  *(_QWORD *)(v4 - 168) = v11;
  *(_QWORD *)(v4 - 160) = v12;
  *(_QWORD *)(v4 - 152) = v13;
  *(_OWORD *)(v4 - 144) = *(_OWORD *)(v4 - 104);
  *(_QWORD *)(v4 - 240) = v8;
  *(_QWORD *)(v4 - 232) = v9;
  *(_QWORD *)(v4 - 224) = v7;
  *(_QWORD *)(v4 - 216) = v6;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Label<Text, ClarityUIContactAvatar>);
  lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type Label<Text, ClarityUIContactAvatar> and conformance Label<A, B>, (uint64_t *)&demangling cache variable for type metadata for Label<Text, ClarityUIContactAvatar>, MEMORY[0x1E0CDF8C8]);
  lazy protocol witness table accessor for type ClarityUIPreviewNavigationDestination and conformance ClarityUIPreviewNavigationDestination();
  NavigationLink<>.init<A>(value:label:)();
  objc_msgSend(v10, sel_unreadCount);
  lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type NavigationLink<Label<Text, ClarityUIContactAvatar>, Never> and conformance NavigationLink<A, B>, &demangling cache variable for type metadata for NavigationLink<Label<Text, ClarityUIContactAvatar>, Never>, MEMORY[0x1E0CD9468]);
  View.badge(_:)();
  swift_bridgeObjectRelease();

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

void ClarityUIRecentsView.contact(for:)(void *a1, uint64_t a2)
{
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  v3 = *(void **)(a2 + OBJC_IVAR____TtC15ConversationKit20ClarityUICallHistory_contactStore);
  v4 = objc_allocWithZone(MEMORY[0x1E0D0CE58]);
  v5 = v3;
  objc_msgSend(v4, sel_initWithDataSource_, v5);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v6 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v6 + 16) = xmmword_1BD6443F0;
  *(_QWORD *)(v6 + 32) = a1;
  v7 = specialized Array._endMutation()();
  OUTLINED_FUNCTION_17_8(v7, (unint64_t *)&lazy cache variable for type metadata for CHRecentCall);
  v8 = a1;
  Array._bridgeToObjectiveC()();
  OUTLINED_FUNCTION_24_48();
  static ClarityUIContact.requiredDescriptors(for:)((uint64_t)v5);
}

void sub_1BD331B74()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  _QWORD *v4;
  Class isa;
  id v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  id v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  id v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  _QWORD *v23;
  id v24;
  void *v25;
  void *v26;
  void *v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  id v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  _QWORD *v35;
  id v36;
  id v37;
  id v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  id v44;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for CNKeyDescriptor);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v44 = 0;
  v6 = objc_msgSend(v3, sel_contactsByHandleForCalls_keyDescriptors_error_, v0, isa, &v44);

  v8 = v44;
  if (v6)
  {
    OUTLINED_FUNCTION_17_8(v7, (unint64_t *)&lazy cache variable for type metadata for CHHandle);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [CNContact]);
    lazy protocol witness table accessor for type CHHandle and conformance NSObject();
    v9 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
    v10 = v8;

    v11 = specialized Collection.first.getter(v9);
    v13 = v12;
    swift_bridgeObjectRelease();
    if (v11)
    {

      if ((unint64_t)v13 >> 62)
      {
        if (v13 >= 0)
          v14 = (id)(v13 & 0xFFFFFFFFFFFFFF8);
        else
          v14 = (id)v13;
        swift_bridgeObjectRetain();
        _CocoaArrayWrapper.endIndex.getter();
        OUTLINED_FUNCTION_24_48();
        if (v14)
          goto LABEL_5;
      }
      else
      {
        v14 = *(id *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v14)
        {
LABEL_5:
          specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v13 & 0xC000000000000001) == 0, v13);
          if ((v13 & 0xC000000000000001) != 0)
            MEMORY[0x1C3B73D18](0, v13);
          else
            v15 = *(id *)(v13 + 32);
          OUTLINED_FUNCTION_24_48();
          goto LABEL_27;
        }
      }
      swift_bridgeObjectRelease();
    }
    if (!outlined bridged method (pb) of @objc CHRecentCall.remoteParticipantHandles.getter(v2)
      || (specialized Collection.first.getter(), v27 = v26, v28 = swift_bridgeObjectRelease(), !v27)
      || (OUTLINED_FUNCTION_17_8(v28, (unint64_t *)&lazy cache variable for type metadata for CNMutableContact),
          (v29 = CNMutableContact.init(handle:)(v27)) == 0))
    {
      if (one-time initialization token for clarityUI != -1)
        swift_once();
      v30 = OUTLINED_FUNCTION_17_2();
      __swift_project_value_buffer(v30, (uint64_t)&static Log.clarityUI);
      v31 = v2;
      v32 = Logger.logObject.getter();
      v33 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v32, v33))
      {
        v34 = (uint8_t *)OUTLINED_FUNCTION_105();
        v35 = (_QWORD *)OUTLINED_FUNCTION_105();
        *(_DWORD *)v34 = 138412290;
        v44 = v31;
        v36 = v31;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *v35 = v31;

        _os_log_impl(&dword_1BD004000, v32, v33, "Unable to create contact for recent call: %@", v34, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_60();
      }

      v29 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97200]), sel_init);
    }
    v14 = v29;
  }
  else
  {
    v43 = v3;
    v16 = v44;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    if (one-time initialization token for clarityUI != -1)
      swift_once();
    v17 = OUTLINED_FUNCTION_17_2();
    __swift_project_value_buffer(v17, (uint64_t)&static Log.clarityUI);
    v18 = v2;
    OUTLINED_FUNCTION_13_12();
    v19 = v18;
    OUTLINED_FUNCTION_13_12();
    v20 = Logger.logObject.getter();
    v21 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = OUTLINED_FUNCTION_105();
      v23 = (_QWORD *)OUTLINED_FUNCTION_105();
      *(_DWORD *)v22 = 138412546;
      v44 = v19;
      v24 = v19;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *v23 = v19;

      *(_WORD *)(v22 + 12) = 2112;
      OUTLINED_FUNCTION_13_12();
      v25 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v44 = v25;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v23[1] = v25;
      OUTLINED_FUNCTION_3_10();
      OUTLINED_FUNCTION_3_10();
      _os_log_impl(&dword_1BD004000, v20, v21, "Unable to get contacts by handle for recent call: %@. Error: %@", (uint8_t *)v22, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_3_10();
    OUTLINED_FUNCTION_3_10();

    v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97200]), sel_init);
    OUTLINED_FUNCTION_3_10();
    v3 = v43;
  }
LABEL_27:
  v37 = v1;
  v38 = v14;
  v39 = objc_msgSend(v38, sel_identifier);
  v40 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v42 = v41;

  *v4 = v38;
  v4[1] = v37;
  v4[2] = v40;
  v4[3] = v42;
}

uint64_t ClarityUIOutgoingCallAction.init(recentCall:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  Swift::String v8;
  uint64_t result;

  v4 = objc_msgSend(a1, sel_uniqueId);
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v7 = v6;

  v8._countAndFlagsBits = v5;
  v8._object = v7;
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  LOBYTE(v4) = CHRecentCall.callType.getter();
  result = OUTLINED_FUNCTION_15();
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)a2 = 0x2D746E65636552;
  *(_QWORD *)(a2 + 8) = 0xE700000000000000;
  *(_BYTE *)(a2 + 16) = (_BYTE)v4;
  *(_QWORD *)(a2 + 24) = partial apply for closure #1 in ClarityUIOutgoingCallAction.init(recentCall:);
  *(_QWORD *)(a2 + 32) = result;
  return result;
}

uint64_t ClarityUIRecentsView.init()()
{
  if (one-time initialization token for shared != -1)
    swift_once();
  return swift_retain();
}

uint64_t protocol witness for View.body.getter in conformance ClarityUIRecentsView()
{
  return ClarityUIRecentsView.body.getter();
}

uint64_t CHRecentCall.callType.getter()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v4;
  id v5;
  void *v6;
  os_log_type_t v7;
  _DWORD *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = objc_msgSend(v0, sel_mediaType);
  if (v2 != (id)1)
  {
    if (v2 == (id)2)
      return 1;
    if (one-time initialization token for clarityUI != -1)
      swift_once();
    v4 = OUTLINED_FUNCTION_17_2();
    __swift_project_value_buffer(v4, (uint64_t)&static Log.clarityUI);
    v5 = OUTLINED_FUNCTION_8_86();
    v6 = (void *)OUTLINED_FUNCTION_9_82();
    v7 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_22_8(v7))
    {
      v8 = (_DWORD *)OUTLINED_FUNCTION_105();
      v13 = OUTLINED_FUNCTION_105();
      *v8 = 136315138;
      objc_msgSend(v1, sel_mediaType);
      type metadata accessor for CHRecentCallMediaType(0);
      v9 = String.init<A>(describing:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v9, v10, &v13);
      OUTLINED_FUNCTION_31_3();

      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_22_0(&dword_1BD004000, v11, v12, "Unhandled media type for recent call: %s");
      OUTLINED_FUNCTION_17_18();
      OUTLINED_FUNCTION_60();
    }

  }
  return 0;
}

Swift::Void __swiftcall CHRecentCall.makeCall()()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  id v8;
  void *v9;
  os_log_type_t v10;
  _DWORD *v11;
  _QWORD *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  _QWORD aBlock[6];

  v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DBD1E0]), sel_init);
  v2 = objc_msgSend(v16, sel_dialRequestForRecentCall_, v0);
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, sel_setOriginatingUIType_, 31);
    v4 = OUTLINED_FUNCTION_15();
    *(_QWORD *)(v4 + 16) = v3;
    *(_QWORD *)(v4 + 24) = v0;
    aBlock[4] = partial apply for closure #1 in CHRecentCall.makeCall();
    aBlock[5] = v4;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = thunk for @escaping @callee_guaranteed (@guaranteed Error?) -> ();
    aBlock[3] = &block_descriptor_60;
    v5 = _Block_copy(aBlock);
    v6 = v3;
    OUTLINED_FUNCTION_8_86();
    swift_release();
    objc_msgSend(v16, sel_launchAppForDialRequest_completion_, v3, v5);
    _Block_release(v5);

  }
  else
  {
    if (one-time initialization token for clarityUI != -1)
      swift_once();
    v7 = OUTLINED_FUNCTION_17_2();
    __swift_project_value_buffer(v7, (uint64_t)&static Log.clarityUI);
    v8 = OUTLINED_FUNCTION_8_86();
    v9 = (void *)OUTLINED_FUNCTION_9_82();
    v10 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_22_8(v10))
    {
      v11 = (_DWORD *)OUTLINED_FUNCTION_105();
      v12 = (_QWORD *)OUTLINED_FUNCTION_105();
      *v11 = 138412290;
      aBlock[0] = v1;
      v13 = v1;
      OUTLINED_FUNCTION_31_3();
      *v12 = v1;

      OUTLINED_FUNCTION_22_0(&dword_1BD004000, v14, v15, "Unable to make dial request for recent call: %@");
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
      OUTLINED_FUNCTION_17_18();
      OUTLINED_FUNCTION_60();
    }

  }
}

void closure #1 in CHRecentCall.makeCall()(void *a1, void *a2, void *a3)
{
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  os_log_type_t v14;
  uint64_t v15;
  _QWORD *v16;
  id v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  NSObject *oslog;
  uint64_t v23;

  if (a1)
  {
    v6 = a1;
    if (one-time initialization token for clarityUI != -1)
      swift_once();
    v7 = type metadata accessor for Logger();
    __swift_project_value_buffer(v7, (uint64_t)&static Log.clarityUI);
    v8 = a1;
    v9 = a2;
    v10 = a3;
    v11 = a1;
    v12 = v9;
    v13 = v10;
    oslog = Logger.logObject.getter();
    v14 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v14))
    {
      v15 = swift_slowAlloc();
      v16 = (_QWORD *)swift_slowAlloc();
      v21 = swift_slowAlloc();
      v23 = v21;
      *(_DWORD *)v15 = 138412802;
      v17 = v12;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *v16 = v12;

      *(_WORD *)(v15 + 12) = 2112;
      v18 = v13;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v16[1] = v13;

      *(_WORD *)(v15 + 22) = 2080;
      swift_getErrorValue();
      v19 = Error.localizedDescription.getter();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v19, v20, &v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BD004000, oslog, v14, "Unable to launch app for dial request: %@, recent call: %@, error: %s", (uint8_t *)v15, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v16, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v21, -1, -1);
      MEMORY[0x1C3B751B8](v15, -1, -1);

    }
    else
    {

    }
  }
}

uint64_t static ClarityUIRecentsNavigationDestination.== infix(_:_:)()
{
  return 1;
}

Swift::Int ClarityUIRecentsNavigationDestination.hashValue.getter()
{
  Hasher.init(_seed:)();
  return Hasher._finalize()();
}

uint64_t outlined bridged method (pb) of @objc CHRecentCall.remoteParticipantHandles.getter(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_remoteParticipantHandles);
  if (!v1)
    return 0;
  v2 = v1;
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for CHHandle);
  lazy protocol witness table accessor for type CHHandle and conformance NSObject();
  v3 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t sub_1BD332954()
{
  uint64_t v0;

  return swift_deallocObject();
}

void partial apply for closure #1 in ClarityUIOutgoingCallAction.init(recentCall:)()
{
  CHRecentCall.makeCall()();
}

uint64_t sub_1BD332998()
{
  uint64_t v0;

  return swift_deallocObject();
}

void partial apply for closure #1 in CHRecentCall.makeCall()(void *a1)
{
  uint64_t v1;

  closure #1 in CHRecentCall.makeCall()(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t associated type witness table accessor for View.Body : View in ClarityUIRecentsView()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t lazy protocol witness table accessor for type ClarityUIRecentsNavigationDestination and conformance ClarityUIRecentsNavigationDestination()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ClarityUIRecentsNavigationDestination and conformance ClarityUIRecentsNavigationDestination;
  if (!lazy protocol witness table cache variable for type ClarityUIRecentsNavigationDestination and conformance ClarityUIRecentsNavigationDestination)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ClarityUIRecentsNavigationDestination, &type metadata for ClarityUIRecentsNavigationDestination);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ClarityUIRecentsNavigationDestination and conformance ClarityUIRecentsNavigationDestination);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ClarityUIRecentsNavigationDestination and conformance ClarityUIRecentsNavigationDestination;
  if (!lazy protocol witness table cache variable for type ClarityUIRecentsNavigationDestination and conformance ClarityUIRecentsNavigationDestination)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ClarityUIRecentsNavigationDestination, &type metadata for ClarityUIRecentsNavigationDestination);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ClarityUIRecentsNavigationDestination and conformance ClarityUIRecentsNavigationDestination);
  }
  return result;
}

ValueMetadata *type metadata accessor for ClarityUIRecentsView()
{
  return &type metadata for ClarityUIRecentsView;
}

ValueMetadata *type metadata accessor for ClarityUIRecentsNavigationDestination()
{
  return &type metadata for ClarityUIRecentsNavigationDestination;
}

uint64_t sub_1BD332A3C()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for List<Never, ForEach<[CHRecentCall], String, <<opaque return type of View.badge(_:)>>.0>>);
  lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type List<Never, ForEach<[CHRecentCall], String, <<opaque return type of View.badge(_:)>>.0>> and conformance List<A, B>, &demangling cache variable for type metadata for List<Never, ForEach<[CHRecentCall], String, <<opaque return type of View.badge(_:)>>.0>>, MEMORY[0x1E0CDD950]);
  return swift_getOpaqueTypeConformance2();
}

char *keypath_get_selector_uniqueId()
{
  return sel_uniqueId;
}

void partial apply for closure #1 in closure #1 in ClarityUIRecentsView.body.getter(void **a1)
{
  uint64_t v1;

  closure #1 in closure #1 in ClarityUIRecentsView.body.getter(a1, v1);
}

unint64_t lazy protocol witness table accessor for type ClarityUIPreviewNavigationDestination and conformance ClarityUIPreviewNavigationDestination()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ClarityUIPreviewNavigationDestination and conformance ClarityUIPreviewNavigationDestination;
  if (!lazy protocol witness table cache variable for type ClarityUIPreviewNavigationDestination and conformance ClarityUIPreviewNavigationDestination)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ClarityUIPreviewNavigationDestination, &type metadata for ClarityUIPreviewNavigationDestination);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ClarityUIPreviewNavigationDestination and conformance ClarityUIPreviewNavigationDestination);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ClarityUIPreviewNavigationDestination and conformance ClarityUIPreviewNavigationDestination;
  if (!lazy protocol witness table cache variable for type ClarityUIPreviewNavigationDestination and conformance ClarityUIPreviewNavigationDestination)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ClarityUIPreviewNavigationDestination, &type metadata for ClarityUIPreviewNavigationDestination);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ClarityUIPreviewNavigationDestination and conformance ClarityUIPreviewNavigationDestination);
  }
  return result;
}

void static InCallControlsParticipantCell.invalidateCalculatedHeights()()
{
  static InCallControlsParticipantCell._defaultContentHeight = 0;
  byte_1EF4C9940 = 1;
  static InCallControlsParticipantCell._extendedContentHeight = 0;
  byte_1EF4C9950 = 1;
}

uint64_t InCallControlsParticipantCell.configure(with:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  char v23;
  char *v24;
  uint64_t v25;
  char v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int *v33;
  void *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t inited;
  uint64_t v43;
  void *v44;
  _QWORD *v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  id v57;
  id v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67;
  uint64_t v68;
  __int128 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIBackgroundConfiguration?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = OUTLINED_FUNCTION_14_5();
  v64 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v65 = v7;
  v68 = (uint64_t)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (InCallControlsParticipantCellViewModel?, InCallControlsParticipantCellViewModel?));
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for InCallControlsParticipantCellViewModel?);
  OUTLINED_FUNCTION_1_1();
  v13 = MEMORY[0x1E0C80A78](v12);
  v62 = (uint64_t)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v61 - v16;
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v61 - v18;
  *(_QWORD *)&v67 = v1;
  v20 = v1 + OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell_viewModel;
  OUTLINED_FUNCTION_2_0();
  v66 = a1;
  outlined init with copy of InCallControlsParticipantCellViewModel(a1, (uint64_t)v19);
  __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v6);
  v21 = (uint64_t)&v11[*(int *)(v8 + 48)];
  outlined init with copy of InCallControlsParticipantCellViewModel?(v20, (uint64_t)v11);
  outlined init with copy of InCallControlsParticipantCellViewModel?((uint64_t)v19, v21);
  OUTLINED_FUNCTION_30_49((uint64_t)v11);
  v63 = (int *)v6;
  if (v23)
  {
    outlined destroy of Conversation?((uint64_t)v19, &demangling cache variable for type metadata for InCallControlsParticipantCellViewModel?);
    OUTLINED_FUNCTION_30_49(v21);
    if (v23)
      return outlined destroy of Conversation?((uint64_t)v11, &demangling cache variable for type metadata for InCallControlsParticipantCellViewModel?);
LABEL_9:
    outlined destroy of Conversation?((uint64_t)v11, &demangling cache variable for type metadata for (InCallControlsParticipantCellViewModel?, InCallControlsParticipantCellViewModel?));
    v24 = (char *)v67;
    goto LABEL_11;
  }
  outlined init with copy of InCallControlsParticipantCellViewModel?((uint64_t)v11, (uint64_t)v17);
  OUTLINED_FUNCTION_30_49(v21);
  if (v23)
  {
    outlined destroy of Conversation?((uint64_t)v19, &demangling cache variable for type metadata for InCallControlsParticipantCellViewModel?);
    outlined destroy of InCallControlsParticipantCellViewModel((uint64_t)v17);
    goto LABEL_9;
  }
  v25 = v68;
  outlined init with take of InCallControlsParticipantCellViewModel(v21, v68);
  v26 = static InCallControlsParticipantCellViewModel.== infix(_:_:)((uint64_t)v17, v25);
  outlined destroy of InCallControlsParticipantCellViewModel(v25);
  outlined destroy of Conversation?((uint64_t)v19, &demangling cache variable for type metadata for InCallControlsParticipantCellViewModel?);
  outlined destroy of InCallControlsParticipantCellViewModel((uint64_t)v17);
  result = outlined destroy of Conversation?((uint64_t)v11, &demangling cache variable for type metadata for InCallControlsParticipantCellViewModel?);
  v24 = (char *)v67;
  if ((v26 & 1) == 0)
  {
LABEL_11:
    static UIBackgroundConfiguration.listGroupedCell()();
    v27 = (void *)objc_opt_self();
    v28 = objc_msgSend(v27, sel_whiteColor);
    v29 = UIBackgroundConfiguration.backgroundColor.setter();
    OUTLINED_FUNCTION_17_8(v29, (unint64_t *)&lazy cache variable for type metadata for UIVibrancyEffect);
    static UIVibrancyEffect.inCallControlsEffect.getter();
    UIBackgroundConfiguration.visualEffect.setter();
    v30 = type metadata accessor for UIBackgroundConfiguration();
    __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v30);
    MEMORY[0x1C3B7370C](v5);
    objc_msgSend(v24, sel_setAutomaticallyUpdatesBackgroundConfiguration_, 0);
    v31 = v66;
    v32 = v62;
    outlined init with copy of InCallControlsParticipantCellViewModel(v66, v62);
    v33 = v63;
    __swift_storeEnumTagSinglePayload(v32, 0, 1, (uint64_t)v63);
    OUTLINED_FUNCTION_2_0();
    outlined assign with take of InCallControlsParticipantCellViewModel?(v32, v20);
    swift_endAccess();
    v34 = *(void **)&v24[OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell_nameLabel];
    v35 = (uint64_t *)(v31 + v33[6]);
    v36 = *v35;
    v37 = v35[1];
    OUTLINED_FUNCTION_25_2();
    outlined bridged method (mbgnn) of @objc UILabel.text.setter(v36, v37, v34);
    OUTLINED_FUNCTION_53();
    v38 = *(unsigned __int8 *)(v31 + v33[8]);
    if ((v38 - 2) >= 2)
    {
      if (v38 != 1)
      {
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1BD644B60;
        *(_QWORD *)(inited + 32) = PushToTalkDisclosureButton.label.getter(&OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell____lazy_storage___lmiApproveButton, (uint64_t (*)(uint64_t))closure #1 in InCallControlsParticipantCell.lmiApproveButton.getter);
        *(_QWORD *)(inited + 40) = PushToTalkDisclosureButton.label.getter(&OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell____lazy_storage___lmiRejectButton, (uint64_t (*)(uint64_t))closure #1 in InCallControlsParticipantCell.lmiRejectButton.getter);
        *(_QWORD *)(inited + 48) = InCallControlsParticipantCell.kickMemberButton.getter();
        *(_QWORD *)&v69 = inited;
        OUTLINED_FUNCTION_13_82();
        OUTLINED_FUNCTION_3_103();
        OUTLINED_FUNCTION_133();
        v43 = OUTLINED_FUNCTION_39_47();
        *(_OWORD *)(v43 + 16) = xmmword_1BD6443F0;
        v44 = *(void **)&v24[OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell_actionButton];
        *(_QWORD *)(v43 + 32) = v44;
        *(_QWORD *)&v69 = v43;
        OUTLINED_FUNCTION_13_82();
        v45 = v44;
        OUTLINED_FUNCTION_33_40();
        OUTLINED_FUNCTION_53();
        v46 = (uint64_t *)(v31 + v33[9]);
        v47 = *v46;
        v48 = v46[1];
        v49 = *(void (**)(uint64_t, uint64_t))((*MEMORY[0x1E0DEEDD8] & *v45) + 0x170);
        OUTLINED_FUNCTION_25_2();
        v49(v47, v48);
LABEL_17:
        v51 = *(_QWORD *)(v31 + 16);
        v50 = *(_QWORD *)(v31 + 24);
        v53 = *(_QWORD *)(v31 + 32);
        v52 = *(_QWORD *)(v31 + 40);
        v54 = *(_QWORD *)(v31 + 48);
        v69 = *(_OWORD *)v31;
        v70 = v51;
        v71 = v50;
        v72 = v53;
        v73 = v52;
        v74 = v54;
        v55 = (id)v69;
        OUTLINED_FUNCTION_25_2();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        ParticipantContactView.contactDetails.setter((uint64_t *)&v69);
        v57 = OUTLINED_FUNCTION_25_1(v56, sel_layer);
        v58 = objc_msgSend(v27, sel_clearColor);
        v59 = objc_msgSend(v58, sel_CGColor);

        objc_msgSend(v57, sel_setShadowColor_, v59);
        v60 = swift_bridgeObjectRetain();
        GradientView.colors.setter(v60);
        objc_msgSend(v34, sel_setTextColor_, *(_QWORD *)(v31 + v33[17]));
        __asm { BR              X10 }
      }
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      v41 = swift_initStackObject();
      *(_OWORD *)(v41 + 16) = xmmword_1BD644B60;
      OUTLINED_FUNCTION_37_39(v41, OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell_actionButton);
      *(_QWORD *)(v41 + 40) = PushToTalkDisclosureButton.label.getter(&OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell____lazy_storage___lmiApproveButton, (uint64_t (*)(uint64_t))closure #1 in InCallControlsParticipantCell.lmiApproveButton.getter);
      *(_QWORD *)(v41 + 48) = PushToTalkDisclosureButton.label.getter(&OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell____lazy_storage___lmiRejectButton, (uint64_t (*)(uint64_t))closure #1 in InCallControlsParticipantCell.lmiRejectButton.getter);
      *(_QWORD *)&v69 = v41;
      OUTLINED_FUNCTION_13_82();
      OUTLINED_FUNCTION_3_103();
      OUTLINED_FUNCTION_133();
      v40 = OUTLINED_FUNCTION_39_47();
      *(_OWORD *)(v40 + 16) = xmmword_1BD6443F0;
      *(_QWORD *)(v40 + 32) = InCallControlsParticipantCell.kickMemberButton.getter();
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      v39 = swift_initStackObject();
      v67 = xmmword_1BD6441C0;
      *(_OWORD *)(v39 + 16) = xmmword_1BD6441C0;
      OUTLINED_FUNCTION_37_39(v39, OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell_actionButton);
      *(_QWORD *)(v39 + 40) = InCallControlsParticipantCell.kickMemberButton.getter();
      *(_QWORD *)&v69 = v39;
      OUTLINED_FUNCTION_13_82();
      OUTLINED_FUNCTION_3_103();
      OUTLINED_FUNCTION_133();
      v40 = OUTLINED_FUNCTION_39_47();
      *(_OWORD *)(v40 + 16) = v67;
      *(_QWORD *)(v40 + 32) = PushToTalkDisclosureButton.label.getter(&OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell____lazy_storage___lmiApproveButton, (uint64_t (*)(uint64_t))closure #1 in InCallControlsParticipantCell.lmiApproveButton.getter);
      *(_QWORD *)(v40 + 40) = PushToTalkDisclosureButton.label.getter(&OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell____lazy_storage___lmiRejectButton, (uint64_t (*)(uint64_t))closure #1 in InCallControlsParticipantCell.lmiRejectButton.getter);
    }
    *(_QWORD *)&v69 = v40;
    OUTLINED_FUNCTION_13_82();
    OUTLINED_FUNCTION_33_40();
    OUTLINED_FUNCTION_53();
    goto LABEL_17;
  }
  return result;
}

uint64_t outlined init with copy of InCallControlsParticipantCellViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for InCallControlsParticipantCellViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined init with copy of InCallControlsParticipantCellViewModel?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for InCallControlsParticipantCellViewModel?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined assign with take of InCallControlsParticipantCellViewModel?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for InCallControlsParticipantCellViewModel?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

id InCallControlsParticipantCell.nameLabel.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell_nameLabel);
}

id InCallControlsParticipantCell.subtitleLabel.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell_subtitleLabel);
}

id InCallControlsParticipantCell.actionButton.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell_actionButton);
}

void InCallControlsParticipantCell.lmiApproveButton.setter(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1
                + OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell____lazy_storage___lmiApproveButton);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell____lazy_storage___lmiApproveButton) = a1;

}

_QWORD *closure #1 in InCallControlsParticipantCell.lmiApproveButton.getter(void *a1)
{
  _QWORD *v2;
  void (*v3)(uint64_t);
  uint64_t v4;
  id v5;

  v2 = InCallControlsParticipantCell.inCallControlButton(for:)(2);
  if (one-time initialization token for joinButton != -1)
    swift_once();
  v3 = *(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v2) + 0x188);
  v4 = swift_bridgeObjectRetain();
  v3(v4);
  outlined bridged method (mbnn) of @objc NSObject.accessibilityIdentifier.setter(0xD000000000000010, 0x80000001BD6860C0, v2);
  v5 = objc_msgSend(a1, sel_contentView);
  objc_msgSend(v5, sel_addSubview_, v2);

  return v2;
}

void *InCallControlsParticipantCell.inCallControlButton(for:)(char a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  type metadata accessor for InCallControlButton();
  LOWORD(v6) = 1;
  v2 = (void *)InCallControlButton.__allocating_init(style:symbolDescriber:text:discSize:imageSpacing:visualEffectGroupName:wantsPointerInteraction:isImageTrailing:)();
  objc_msgSend(v2, sel_setAlpha_, 0.0, v6);
  objc_msgSend(v2, sel_setEnabled_, 0);
  v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v3;
  *(_BYTE *)(v4 + 24) = a1;
  swift_retain();
  UIControl.addAction(for:handler:)(64, (uint64_t)partial apply for closure #1 in InCallControlsParticipantCell.inCallControlButton(for:), v4);
  swift_release();
  swift_release();
  return v2;
}

void InCallControlsParticipantCell.lmiRejectButton.setter(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell____lazy_storage___lmiRejectButton);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell____lazy_storage___lmiRejectButton) = a1;

}

_QWORD *closure #1 in InCallControlsParticipantCell.lmiRejectButton.getter(void *a1)
{
  _QWORD *v2;
  void (*v3)(uint64_t);
  uint64_t v4;
  id v5;

  v2 = InCallControlsParticipantCell.inCallControlButton(for:)(3);
  if (one-time initialization token for leaveButton != -1)
    swift_once();
  v3 = *(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v2) + 0x188);
  v4 = swift_bridgeObjectRetain();
  v3(v4);
  outlined bridged method (mbnn) of @objc NSObject.accessibilityIdentifier.setter(0x63656A6552696D6CLL, 0xEF6E6F7474754274, v2);
  v5 = objc_msgSend(a1, sel_contentView);
  objc_msgSend(v5, sel_addSubview_, v2);

  return v2;
}

id InCallControlsParticipantCell.kickMemberButton.getter()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell____lazy_storage___kickMemberButton;
  v2 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell____lazy_storage___kickMemberButton];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell____lazy_storage___kickMemberButton];
  }
  else
  {
    v4 = InCallControlsParticipantCell.inCallControlButton(for:)(1);
    outlined bridged method (mbnn) of @objc NSObject.accessibilityIdentifier.setter(0xD000000000000010, 0x80000001BD686130, v4);
    v5 = objc_msgSend(v0, sel_contentView);
    objc_msgSend(v5, sel_addSubview_, v4);

    v6 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v4;
    v3 = v4;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

void InCallControlsParticipantCell.kickMemberButton.setter(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1
                + OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell____lazy_storage___kickMemberButton);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell____lazy_storage___kickMemberButton) = a1;

}

uint64_t InCallControlsParticipantCell.contentViews.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;

  v1 = OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell____lazy_storage___contentViews;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell____lazy_storage___contentViews))
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell____lazy_storage___contentViews);
  }
  else
  {
    v3 = v0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    v4 = swift_allocObject();
    v5 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell_avatarView);
    v6 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell_nameLabel);
    *(_OWORD *)(v4 + 16) = xmmword_1BD64B8D0;
    v7 = *(void **)(v3 + OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell_subtitleLabel);
    *(_QWORD *)(v4 + 32) = v5;
    *(_QWORD *)(v4 + 40) = v6;
    v8 = *(void **)(v3 + OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell_statusIcon);
    *(_QWORD *)(v4 + 48) = v7;
    *(_QWORD *)(v4 + 56) = v8;
    v9 = *(void **)(v3 + OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell_actionButton);
    *(_QWORD *)(v4 + 64) = v9;
    v10 = v5;
    v11 = v6;
    v12 = v7;
    v13 = v8;
    v14 = v9;
    *(_QWORD *)(v4 + 72) = InCallControlsParticipantCell.kickMemberButton.getter();
    *(_QWORD *)(v4 + 80) = PushToTalkDisclosureButton.label.getter(&OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell____lazy_storage___lmiApproveButton, (uint64_t (*)(uint64_t))closure #1 in InCallControlsParticipantCell.lmiApproveButton.getter);
    *(_QWORD *)(v4 + 88) = PushToTalkDisclosureButton.label.getter(&OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell____lazy_storage___lmiRejectButton, (uint64_t (*)(uint64_t))closure #1 in InCallControlsParticipantCell.lmiRejectButton.getter);
    specialized Array._endMutation()();
    v2 = v4;
    *(_QWORD *)(v3 + v1) = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t key path getter for InCallControlsParticipantCell.participantCellDelegate : InCallControlsParticipantCell@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *a1 + OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell_participantCellDelegate;
  swift_beginAccess();
  result = MEMORY[0x1C3B752C0](v3);
  v5 = *(_QWORD *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t key path setter for InCallControlsParticipantCell.participantCellDelegate : InCallControlsParticipantCell(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *a2 + OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell_participantCellDelegate;
  swift_beginAccess();
  *(_QWORD *)(v3 + 8) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t InCallControlsParticipantCell.participantCellDelegate.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell_participantCellDelegate;
  OUTLINED_FUNCTION_2_0();
  return MEMORY[0x1C3B752C0](v1);
}

uint64_t InCallControlsParticipantCell.participantCellDelegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell_participantCellDelegate;
  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*InCallControlsParticipantCell.participantCellDelegate.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell_participantCellDelegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  OUTLINED_FUNCTION_2_0();
  v6 = MEMORY[0x1C3B752C0](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return InCallControlsBaseCell.delegate.modify;
}

id InCallControlsParticipantCell.__allocating_init(frame:)()
{
  Class v0;
  id v1;
  double v2;
  id v3;
  SEL v4;

  OUTLINED_FUNCTION_17_7();
  v1 = objc_allocWithZone(v0);
  v2 = OUTLINED_FUNCTION_15_0();
  return objc_msgSend(v3, v4, v2);
}

unint64_t InCallControlsParticipantCell.init(frame:)()
{
  char *v0;
  uint64_t v1;
  id v2;
  char *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  id v30;
  char *v31;
  double v32;
  objc_super *v33;
  SEL v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  void *v39;
  void *v40;
  id v41;
  id v42;
  Class isa;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  id v48;
  id v49;
  char *v50;
  void *v51;
  double v52;
  uint64_t v53;
  char *v54;
  unint64_t result;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  void *v60;
  id v61;
  uint64_t v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  _QWORD v68[4];
  __int16 v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  _QWORD v73[4];
  __int16 v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  _QWORD v78[4];
  __int16 v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  __int128 v83;
  __int128 v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  _QWORD v89[4];
  __int16 v90;
  uint64_t v91;
  char v92;
  uint64_t v93;

  OUTLINED_FUNCTION_17_7();
  OUTLINED_FUNCTION_15_6();
  v1 = OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell_nameLabel;
  v2 = objc_allocWithZone(MEMORY[0x1E0DC3990]);
  v3 = v0;
  *(_QWORD *)&v0[v1] = objc_msgSend(v2, sel_init);
  v4 = OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell_subtitleLabel;
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  *(_QWORD *)&v3[v4] = v5;
  v6 = OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell_statusIcon;
  OUTLINED_FUNCTION_17_8((uint64_t)v5, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  v7 = (void *)*MEMORY[0x1E0DC4A88];
  v89[0] = 0x69662E6F65646976;
  v89[1] = 0xEA00000000006C6CLL;
  v89[2] = -1;
  v89[3] = v7;
  v90 = 0;
  v91 = 4;
  v92 = 0;
  v93 = 0;
  v8 = v7;
  OUTLINED_FUNCTION_16_67((uint64_t)v89);
  OUTLINED_FUNCTION_26_2();
  OUTLINED_FUNCTION_15_5();
  v9 = OUTLINED_FUNCTION_48_1(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_initWithImage_);

  *(_QWORD *)&v3[v6] = v9;
  v10 = OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell_avatarView;
  LOBYTE(v83) = 0;
  v11 = objc_allocWithZone((Class)type metadata accessor for ParticipantContactView());
  *(_QWORD *)&v3[v10] = ParticipantContactView.init(colorStyle:)((unsigned __int8 *)&v83);
  v12 = OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell_actionButton;
  type metadata accessor for InCallControlButton();
  v85 = 0;
  v83 = 0u;
  v84 = 0u;
  *(_QWORD *)&v3[v12] = OUTLINED_FUNCTION_5_104();
  v13 = &v3[OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell_viewModel];
  v14 = OUTLINED_FUNCTION_14_5();
  OUTLINED_FUNCTION_12_7(v14);
  v15 = OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell_cameraSymbolImage;
  *(_QWORD *)&v83 = 0x69662E6F65646976;
  *((_QWORD *)&v83 + 1) = 0xEA00000000006C6CLL;
  *(_QWORD *)&v84 = -1;
  *((_QWORD *)&v84 + 1) = v8;
  LOWORD(v85) = 0;
  v86 = 4;
  v87 = 0;
  v88 = 0;
  v16 = v8;
  OUTLINED_FUNCTION_16_67((uint64_t)&v83);
  OUTLINED_FUNCTION_26_2();
  OUTLINED_FUNCTION_15_5();
  *(_QWORD *)&v3[v15] = v13;
  v17 = OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell_copresenceSymbolImage;
  OUTLINED_FUNCTION_22_62();
  v78[0] = v18;
  v78[1] = v19;
  v78[2] = -1;
  v78[3] = v16;
  v79 = 0;
  v80 = 4;
  v81 = 0;
  v82 = 0;
  v20 = v16;
  OUTLINED_FUNCTION_16_67((uint64_t)v78);
  OUTLINED_FUNCTION_26_2();
  OUTLINED_FUNCTION_18_70();
  *(_QWORD *)&v3[v17] = v13;
  v21 = OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell_linkSymbolImage;
  v22 = (void *)*MEMORY[0x1E0DC4B10];
  v73[0] = 1802398060;
  v73[1] = 0xE400000000000000;
  v73[2] = 1;
  v73[3] = v22;
  v74 = 0;
  v75 = 4;
  v76 = 0;
  v77 = 0;
  v23 = v22;
  v24 = OUTLINED_FUNCTION_16_67((uint64_t)v73);
  v67 = v23;

  swift_bridgeObjectRelease();
  *(_QWORD *)&v3[v21] = v24;
  v25 = OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell_messagesSymbolImage;
  OUTLINED_FUNCTION_27_44();
  v68[0] = v26;
  v68[1] = v27;
  v68[2] = 1;
  v68[3] = v28;
  v69 = 0;
  v70 = 4;
  v71 = 0;
  v72 = 0;
  v29 = v28;
  v30 = OUTLINED_FUNCTION_16_67((uint64_t)v68);

  OUTLINED_FUNCTION_25_45();
  *(_QWORD *)&v3[v25] = v30;
  *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell____lazy_storage___lmiApproveButton] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell____lazy_storage___lmiRejectButton] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell____lazy_storage___kickMemberButton] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell____lazy_storage___contentViews] = 0;
  v31 = &v3[OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell_callDelegate];
  *(_QWORD *)v31 = 0;
  *((_QWORD *)v31 + 1) = 0;
  OUTLINED_FUNCTION_40_4((uint64_t)&v3[OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell_participantCellDelegate]);

  v32 = OUTLINED_FUNCTION_15_0();
  v35 = (char *)objc_msgSendSuper2(v33, v34, v32, 1);
  objc_msgSend(v35, sel_setAutomaticallyUpdatesBackgroundConfiguration_, 0);
  v36 = OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell_nameLabel;
  v37 = one-time initialization token for tableViewCellTitleLabel;
  v38 = *(id *)&v35[OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell_nameLabel];
  if (v37 != -1)
    swift_once();
  OUTLINED_FUNCTION_44_40();

  v39 = *(void **)&v35[v36];
  v40 = (void *)objc_opt_self();
  v41 = v39;
  v42 = OUTLINED_FUNCTION_48_1(v40, sel_preferredFontForTextStyle_);
  isa = UIFont.withTraits(_:)(0x8000u).super.isa;

  objc_msgSend(v41, sel_setFont_, isa);
  v44 = *(void **)&v35[v36];
  OUTLINED_FUNCTION_32_37();
  objc_msgSend(v44, sel_setNumberOfLines_, 2);
  v45 = OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell_subtitleLabel;
  v46 = one-time initialization token for tableViewCellSubtitleLabel;
  v47 = *(id *)&v35[OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell_subtitleLabel];
  if (v46 != -1)
    swift_once();
  OUTLINED_FUNCTION_44_40();

  v48 = *(id *)&v35[v45];
  v49 = objc_msgSend(v40, sel_preferredFontForTextStyle_, v67);
  objc_msgSend(v48, sel_setFont_, v49);

  objc_msgSend(*(id *)&v35[v45], sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(*(id *)&v35[OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell_statusIcon], sel_setTintColor_, static Colors.InCallControls.tableViewCellSubtitleLabel);
  v50 = *(char **)&v35[OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell_actionButton];
  v51 = *(void **)&v50[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_label];
  OUTLINED_FUNCTION_32_37();
  if (v51)
  {
    LODWORD(v52) = 1148846080;
    objc_msgSend(v51, sel_setContentCompressionResistancePriority_forAxis_, 0, v52);
  }
  v53 = OUTLINED_FUNCTION_7_0();
  swift_unknownObjectWeakInit();
  v54 = v50;
  swift_retain();
  UIControl.addAction(for:handler:)(64, (uint64_t)partial apply for closure #1 in InCallControlsParticipantCell.init(frame:), v53);

  swift_release_n();
  result = InCallControlsParticipantCell.contentViews.getter();
  v56 = result;
  if (!(result >> 62))
  {
    v57 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v57)
      goto LABEL_9;
LABEL_15:
    v62 = swift_bridgeObjectRelease();
    v63 = OUTLINED_FUNCTION_123(v62, sel_separatorLayoutGuide);
    v64 = objc_msgSend(v63, sel_leadingAnchor);

    v65 = objc_msgSend(*(id *)&v35[v36], sel_leadingAnchor);
    v66 = OUTLINED_FUNCTION_48_1(v64, sel_constraintEqualToAnchor_);

    objc_msgSend(v66, sel_setActive_, 1);
    return (unint64_t)v35;
  }
  result = _CocoaArrayWrapper.endIndex.getter();
  v57 = result;
  if (!result)
    goto LABEL_15;
LABEL_9:
  if (v57 >= 1)
  {
    v58 = 0;
    do
    {
      if ((v56 & 0xC000000000000001) != 0)
        v59 = (id)MEMORY[0x1C3B73D18](v58, v56);
      else
        v59 = *(id *)(v56 + 8 * v58 + 32);
      v60 = v59;
      ++v58;
      v61 = OUTLINED_FUNCTION_123((uint64_t)v59, sel_contentView);
      objc_msgSend(v61, sel_addSubview_, v60);

    }
    while (v57 != v58);
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

void closure #1 in InCallControlsParticipantCell.init(frame:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char *v3;
  void *v4;
  void (*v5)(void);

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = (char *)MEMORY[0x1C3B752C0](v2);
  if (v3)
  {
    v4 = v3;
    v5 = *(void (**)(void))&v3[OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell_callDelegate];
    if (v5)
    {
      _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(*(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell_callDelegate]);

      v5();
      outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v5);
    }
    else
    {

    }
  }
}

id InCallControlsParticipantCell.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void InCallControlsParticipantCell.init(coder:)()
{
  char *v0;
  void *v1;
  uint64_t v2;
  char *v3;
  id v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  char *v28;
  _QWORD v29[4];
  __int16 v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  _QWORD v34[4];
  __int16 v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  _QWORD v39[4];
  __int16 v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  _QWORD v50[4];
  __int16 v51;
  uint64_t v52;
  char v53;
  uint64_t v54;

  v1 = v0;
  v2 = OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell_nameLabel;
  *(_QWORD *)((char *)v1 + v2) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  v3 = (char *)OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell_subtitleLabel;
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  *(_QWORD *)&v3[(_QWORD)v1] = v4;
  v5 = OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell_statusIcon;
  OUTLINED_FUNCTION_17_8((uint64_t)v4, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  v6 = (void *)*MEMORY[0x1E0DC4A88];
  v50[0] = 0x69662E6F65646976;
  v50[1] = 0xEA00000000006C6CLL;
  v50[2] = -1;
  v50[3] = v6;
  v51 = 0;
  v52 = 4;
  v53 = 0;
  v54 = 0;
  v7 = v6;
  OUTLINED_FUNCTION_23_55((uint64_t)v50);
  OUTLINED_FUNCTION_26_2();
  OUTLINED_FUNCTION_15_5();
  v8 = OUTLINED_FUNCTION_48_1(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_initWithImage_);

  *(_QWORD *)((char *)v1 + v5) = v8;
  v9 = OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell_avatarView;
  LOBYTE(v44) = 0;
  v10 = objc_allocWithZone((Class)type metadata accessor for ParticipantContactView());
  *(_QWORD *)((char *)v1 + v9) = ParticipantContactView.init(colorStyle:)((unsigned __int8 *)&v44);
  v11 = OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell_actionButton;
  type metadata accessor for InCallControlButton();
  v46 = 0;
  v44 = 0u;
  v45 = 0u;
  *(_QWORD *)((char *)v1 + v11) = OUTLINED_FUNCTION_5_104();
  v12 = (char *)v1 + OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell_viewModel;
  v13 = OUTLINED_FUNCTION_14_5();
  OUTLINED_FUNCTION_12_7(v13);
  v14 = OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell_cameraSymbolImage;
  *(_QWORD *)&v44 = 0x69662E6F65646976;
  *((_QWORD *)&v44 + 1) = 0xEA00000000006C6CLL;
  *(_QWORD *)&v45 = -1;
  *((_QWORD *)&v45 + 1) = v7;
  LOWORD(v46) = 0;
  v47 = 4;
  v48 = 0;
  v49 = 0;
  v15 = v7;
  OUTLINED_FUNCTION_23_55((uint64_t)&v44);
  OUTLINED_FUNCTION_26_2();
  OUTLINED_FUNCTION_15_5();
  *(_QWORD *)((char *)v1 + v14) = v12;
  v16 = OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell_copresenceSymbolImage;
  OUTLINED_FUNCTION_22_62();
  v39[0] = v17;
  v39[1] = v18;
  v39[2] = -1;
  v39[3] = v15;
  v40 = 0;
  v41 = 4;
  v42 = 0;
  v43 = 0;
  v19 = v15;
  OUTLINED_FUNCTION_23_55((uint64_t)v39);
  OUTLINED_FUNCTION_26_2();
  OUTLINED_FUNCTION_18_70();
  *(_QWORD *)((char *)v1 + v16) = v12;
  v20 = OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell_linkSymbolImage;
  v21 = (void *)*MEMORY[0x1E0DC4B10];
  v34[0] = 1802398060;
  v34[1] = 0xE400000000000000;
  v34[2] = 1;
  v34[3] = v21;
  v35 = 0;
  v36 = 4;
  v37 = 0;
  v38 = 0;
  v22 = v21;
  OUTLINED_FUNCTION_23_55((uint64_t)v34);
  OUTLINED_FUNCTION_26_2();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v1 + v20) = v12;
  v23 = OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell_messagesSymbolImage;
  OUTLINED_FUNCTION_27_44();
  v29[0] = v24;
  v29[1] = v25;
  v29[2] = 1;
  v29[3] = v26;
  v30 = 0;
  v31 = 4;
  v32 = 0;
  v33 = 0;
  v27 = v26;
  OUTLINED_FUNCTION_23_55((uint64_t)v29);
  OUTLINED_FUNCTION_26_2();
  OUTLINED_FUNCTION_25_45();
  *(_QWORD *)((char *)v1 + v23) = v12;
  *(_QWORD *)((char *)v1
            + OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell____lazy_storage___lmiApproveButton) = 0;
  *(_QWORD *)((char *)v1
            + OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell____lazy_storage___lmiRejectButton) = 0;
  *(_QWORD *)((char *)v1
            + OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell____lazy_storage___kickMemberButton) = 0;
  *(_QWORD *)((char *)v1
            + OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell____lazy_storage___contentViews) = 0;
  v28 = (char *)v1 + OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell_callDelegate;
  *(_QWORD *)v28 = 0;
  *((_QWORD *)v28 + 1) = 0;
  OUTLINED_FUNCTION_40_4((uint64_t)v1 + OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell_participantCellDelegate);

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t InCallControlsParticipantCell.setEnabled(_:for:)(char a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  double v7;
  id v8;
  void *v9;

  if (!(a2 >> 62))
  {
    v4 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v4)
      goto LABEL_3;
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  result = _CocoaArrayWrapper.endIndex.getter();
  v4 = result;
  if (!result)
    return swift_bridgeObjectRelease();
LABEL_3:
  if (v4 >= 1)
  {
    v6 = 0;
    if ((a1 & 1) != 0)
      v7 = 1.0;
    else
      v7 = 0.0;
    do
    {
      if ((a2 & 0xC000000000000001) != 0)
        v8 = (id)MEMORY[0x1C3B73D18](v6, a2);
      else
        v8 = *(id *)(a2 + 8 * v6 + 32);
      v9 = v8;
      ++v6;
      objc_msgSend(v8, sel_setEnabled_, a1 & 1);
      objc_msgSend(v9, sel_setAlpha_, v7);

    }
    while (v4 != v6);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void closure #1 in InCallControlsParticipantCell.configure(with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t ObjectType;
  _QWORD v30[2];
  uint64_t v31;
  uint64_t v32;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v7 = MEMORY[0x1C3B752C0](a1 + 16);
  if (v7)
  {
    v8 = (char *)v7;
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    v30[1] = static OS_os_log.conversationKit;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1BD646740;
    v10 = &v8[OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell_participantCellDelegate];
    swift_beginAccess();
    v11 = MEMORY[0x1C3B752C0](v10);
    if (v11)
    {
      v12 = *((_QWORD *)v10 + 1);
      v31 = v11;
      v32 = v12;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for InCallControlsParticipantCellDelegate);
      v13 = String.init<A>(reflecting:)();
      v15 = v14;
    }
    else
    {
      v15 = 0xE300000000000000;
      v13 = 7104878;
    }
    v16 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v9 + 56) = MEMORY[0x1E0DEA968];
    v17 = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v9 + 64) = v17;
    *(_QWORD *)(v9 + 32) = v13;
    *(_QWORD *)(v9 + 40) = v15;
    v18 = type metadata accessor for InCallControlsParticipantCellViewModel();
    v19 = *(int *)(v18 + 32);
    LOBYTE(v31) = *(_BYTE *)(a2 + v19);
    v20 = String.init<A>(reflecting:)();
    *(_QWORD *)(v9 + 96) = v16;
    *(_QWORD *)(v9 + 104) = v17;
    *(_QWORD *)(v9 + 72) = v20;
    *(_QWORD *)(v9 + 80) = v21;
    v22 = a2 + *(int *)(v18 + 20);
    v23 = type metadata accessor for UUID();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v6, v22, v23);
    __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v23);
    specialized >> prefix<A>(_:)((uint64_t)v6);
    v25 = v24;
    v30[0] = a2;
    v27 = v26;
    outlined destroy of Conversation?((uint64_t)v6, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    *(_QWORD *)(v9 + 136) = v16;
    *(_QWORD *)(v9 + 144) = v17;
    *(_QWORD *)(v9 + 112) = v25;
    *(_QWORD *)(v9 + 120) = v27;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    if (MEMORY[0x1C3B752C0](v10))
    {
      v28 = *((_QWORD *)v10 + 1);
      ObjectType = swift_getObjectType();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t, uint64_t))(v28 + 8))(v8, *(unsigned __int8 *)(v30[0] + v19), v22, ObjectType, v28);

      swift_unknownObjectRelease();
    }
    else
    {

    }
  }
}

Swift::Void __swiftcall InCallControlsParticipantCell.layoutSubviews()()
{
  char *v0;
  double v1;
  double v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  id v6;
  double v7;
  double v8;
  uint64_t v9;
  id v10;
  double v11;
  double v12;
  uint64_t v13;
  id v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  CGFloat v20;
  double v21;
  void *v22;
  uint64_t v23;
  id v24;
  CGFloat v25;
  void *v26;
  double v27;
  double v28;
  double v29;
  CGFloat v30;
  double v31;
  CGFloat v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  void *v40;
  double v41;
  id v42;
  id v43;
  double v44;
  CGFloat v45;
  double v46;
  CGFloat v47;
  double v48;
  CGFloat v49;
  double v50;
  CGFloat v51;
  id v52;
  double v53;
  double v54;
  double v55;
  double v56;
  id v57;
  id v58;
  double v59;
  double v60;
  double v61;
  double v62;
  id v63;
  void *v64;
  double v65;
  void *v66;
  double v67;
  id v68;
  SEL v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  void *v74;
  id v75;
  double v76;
  double v77;
  double v78;
  double v79;
  double v80;
  double v81;
  double v82;
  double MidY;
  double v84;
  double v85;
  double y;
  double v87;
  double v88;
  double v89;
  CGFloat v90;
  CGFloat v91;
  double v92;
  double rect;
  double rect_8;
  double rect_16;
  double rect_24;
  CGRect v97;
  double v98;
  __int128 v99;
  uint64_t v100;
  double v101;
  __int128 v102;
  uint64_t v103;
  _QWORD v104[4];
  CGRect v105;
  objc_super v106;
  CGRect v107;
  CGRect v108;
  CGRect v109;
  CGRect v110;
  CGRect v111;
  CGRect v112;
  CGRect v113;
  CGRect v114;
  CGRect v115;
  CGRect v116;
  CGRect v117;
  CGRect v118;
  CGRect v119;
  CGRect v120;
  CGRect v121;

  v106.receiver = v0;
  v106.super_class = (Class)OUTLINED_FUNCTION_15_6();
  objc_msgSendSuper2(&v106, sel_layoutSubviews);
  v105.origin = (CGPoint)xmmword_1BD659090;
  v105.size = (CGSize)vdupq_n_s64(0x4042800000000000uLL);
  closure #2 in InCallControlsParticipantCell.layoutSubviews()(v0);
  v84 = v2;
  v85 = v1;
  *(double *)v104 = v1;
  v104[1] = v3;
  *(double *)&v104[2] = v2;
  *(double *)&v104[3] = v4;
  v92 = v4;
  v6 = OUTLINED_FUNCTION_25_1(v5, sel_contentView);
  OUTLINED_FUNCTION_31_49(v6);
  v8 = v7;

  v10 = OUTLINED_FUNCTION_25_1(v9, sel_contentView);
  OUTLINED_FUNCTION_31_49(v10);
  v12 = v11;

  v101 = v12 + -10.0 + -32.0 + -32.0 + -26.0;
  v102 = xmmword_1BD6590A0;
  v103 = 0x4040000000000000;
  v14 = OUTLINED_FUNCTION_25_1(v13, sel_contentView);
  OUTLINED_FUNCTION_31_49(v14);
  v16 = v15;

  v98 = v16 + -10.0 + -32.0;
  v99 = xmmword_1BD6590A0;
  v100 = 0x4040000000000000;
  closure #6 in InCallControlsParticipantCell.layoutSubviews()(&v105, v0);
  rect = v17;
  rect_8 = v18;
  rect_16 = v19;
  v20 = 0.0;
  v107.origin.x = 14.0;
  v107.origin.y = 0.0;
  v107.size.width = 37.0;
  v107.size.height = 37.0;
  v21 = CGRectGetMaxX(v107) + 12.0;
  v22 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell_statusIcon];
  v24 = OUTLINED_FUNCTION_123(v23, sel_image);
  v25 = 0.0;
  if (v24)
  {
    v26 = v24;
    objc_msgSend(v24, sel_size);
    v25 = v27;
    v20 = v28;

  }
  v82 = v8 + -10.0;
  v90 = v25;
  v91 = v21;
  v97.origin.x = v21;
  v97.origin.y = 0.0;
  v97.size.width = v25;
  v97.size.height = v20;
  rect_24 = v20;
  closure #8 in InCallControlsParticipantCell.layoutSubviews()(v0, &v97, (uint64_t)&v98, (uint64_t)&v101, (uint64_t)v104);
  v30 = v29;
  v32 = v31;
  v34 = v33;
  InCallControlsParticipantCell.contentHeight.getter();
  v36 = v35 * 0.5;
  v37 = floor(v36 + -18.5);
  v38 = floor(v36 - v92 * 0.5);
  v39 = v36 + -16.0;
  v108.size.height = rect_8;
  v108.origin.y = floor(v36 - (rect_8 + v34) * 0.5);
  v108.origin.x = rect;
  y = v108.origin.y;
  v108.size.width = rect_16;
  v109.origin.y = CGRectGetMaxY(v108);
  v88 = v30;
  v89 = v32;
  v109.origin.x = v30;
  v87 = v109.origin.y;
  v109.size.width = v32;
  v109.size.height = v34;
  MidY = CGRectGetMidY(v109);
  v40 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell_avatarView];
  OUTLINED_FUNCTION_6_83();
  v116.origin.x = 14.0;
  v116.origin.y = v37;
  v116.size.width = 37.0;
  v116.size.height = 37.0;
  if (!CGRectEqualToRect(v110, v116))
    objc_msgSend(v40, sel_setFrame_, 14.0, v37, 37.0, 37.0);
  v41 = floor(v39);
  v42 = *(id *)&v0[OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell_actionButton];
  OUTLINED_FUNCTION_6_83();
  v117.origin.x = v85;
  v117.origin.y = v38;
  v117.size.width = v84;
  v117.size.height = v92;
  if (!CGRectEqualToRect(v111, v117))
    objc_msgSend(v42, sel_setFrame_, v85, v38, v84, v92);
  v43 = PushToTalkDisclosureButton.label.getter(&OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell____lazy_storage___lmiApproveButton, (uint64_t (*)(uint64_t))closure #1 in InCallControlsParticipantCell.lmiApproveButton.getter);
  OUTLINED_FUNCTION_15_75(v43);
  v45 = v44;
  v47 = v46;
  v49 = v48;
  v51 = v50;

  v112.origin.x = v45;
  v112.origin.y = v47;
  v112.size.width = v49;
  v112.size.height = v51;
  v118.origin.x = v82 + -32.0;
  v118.origin.y = v41;
  v118.size.width = 32.0;
  v118.size.height = 32.0;
  if (!CGRectEqualToRect(v112, v118))
  {
    v42 = PushToTalkDisclosureButton.label.getter(&OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell____lazy_storage___lmiApproveButton, (uint64_t (*)(uint64_t))closure #1 in InCallControlsParticipantCell.lmiApproveButton.getter);
    objc_msgSend(v42, sel_setFrame_, v82 + -32.0, v41, 32.0, 32.0);

  }
  v52 = PushToTalkDisclosureButton.label.getter(&OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell____lazy_storage___lmiRejectButton, (uint64_t (*)(uint64_t))closure #1 in InCallControlsParticipantCell.lmiRejectButton.getter);
  OUTLINED_FUNCTION_15_75(v52);
  OUTLINED_FUNCTION_17_59();
  v53 = OUTLINED_FUNCTION_19_59();
  if (!OUTLINED_FUNCTION_21_63(v53, v54, v55, v56))
  {
    v57 = PushToTalkDisclosureButton.label.getter(&OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell____lazy_storage___lmiRejectButton, (uint64_t (*)(uint64_t))closure #1 in InCallControlsParticipantCell.lmiRejectButton.getter);
    OUTLINED_FUNCTION_9_83(v57);

  }
  v58 = InCallControlsParticipantCell.kickMemberButton.getter();
  OUTLINED_FUNCTION_15_75(v58);
  OUTLINED_FUNCTION_17_59();
  v59 = OUTLINED_FUNCTION_19_59();
  if (!OUTLINED_FUNCTION_21_63(v59, v60, v61, v62))
  {
    v63 = InCallControlsParticipantCell.kickMemberButton.getter();
    OUTLINED_FUNCTION_9_83(v63);

  }
  v64 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell_nameLabel];
  OUTLINED_FUNCTION_6_83();
  v119.origin.x = rect;
  v119.origin.y = y;
  v119.size.width = rect_16;
  v119.size.height = rect_8;
  if (!CGRectEqualToRect(v113, v119))
    objc_msgSend(v64, sel_setFrame_, rect, y, rect_16, rect_8);
  v65 = floor(MidY - rect_24 * 0.5);
  v66 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell_subtitleLabel];
  OUTLINED_FUNCTION_6_83();
  v120.origin.x = v88;
  v120.origin.y = v87;
  v120.size.width = v89;
  v120.size.height = v34;
  if (!CGRectEqualToRect(v114, v120))
    objc_msgSend(v66, sel_setFrame_, v88, v87, v89, v34);
  objc_msgSend(v22, sel_frame, *(_QWORD *)&v82);
  v121.origin.x = v91;
  v121.origin.y = v65;
  v121.size.width = v90;
  v121.size.height = rect_24;
  if (!CGRectEqualToRect(v115, v121))
  {
    v67 = OUTLINED_FUNCTION_15_0();
    objc_msgSend(v68, v69, v67);
  }
  if (objc_msgSend(v0, sel__shouldReverseLayoutDirection))
  {
    v70 = InCallControlsParticipantCell.contentViews.getter();
    if (v70 >> 62)
    {
      v71 = _CocoaArrayWrapper.endIndex.getter();
      if (v71)
        goto LABEL_22;
    }
    else
    {
      v71 = *(_QWORD *)((v70 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v71)
      {
LABEL_22:
        if (v71 < 1)
        {
          __break(1u);
          return;
        }
        v72 = 0;
        do
        {
          if ((v70 & 0xC000000000000001) != 0)
            v73 = (id)MEMORY[0x1C3B73D18](v72, v70);
          else
            v73 = *(id *)(v70 + 8 * v72 + 32);
          v74 = v73;
          ++v72;
          v75 = OUTLINED_FUNCTION_25_1((uint64_t)v73, sel_contentView);
          OUTLINED_FUNCTION_31_49(v75);
          v77 = v76;

          OUTLINED_FUNCTION_11_80();
          v79 = v77 - v78;
          OUTLINED_FUNCTION_11_80();
          v81 = v79 - v80;
          OUTLINED_FUNCTION_11_80();
          objc_msgSend(v74, sel_setFrame_, v81);

        }
        while (v71 != v72);
      }
    }
    swift_bridgeObjectRelease();
  }
}

void closure #2 in InCallControlsParticipantCell.layoutSubviews()(char *a1)
{
  char *v1;
  void *v2;
  id v4;
  id v5;
  void *v6;
  id v7;
  Swift::String v8;
  char *v9;
  Swift::String v10;

  v1 = *(char **)&a1[OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell_actionButton];
  v2 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_label];
  if (v2)
  {
    v4 = v2;
    objc_msgSend(v4, sel_intrinsicContentSize);
    v5 = objc_msgSend(v4, sel_font);
    if (v5)
    {
      v6 = v5;
      objc_msgSend(v5, sel_lineHeight);

      v7 = objc_msgSend(a1, sel_contentView);
      objc_msgSend(v7, sel_bounds);

      return;
    }
    __break(1u);
  }
  _StringGuts.grow(_:)(52);
  v8._object = (void *)0x80000001BD686150;
  v8._countAndFlagsBits = 0xD000000000000032;
  String.append(_:)(v8);
  type metadata accessor for InCallControlButton();
  v9 = v1;
  v10._countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

id closure #6 in InCallControlsParticipantCell.layoutSubviews()(CGRect *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id result;
  void *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for InCallControlsParticipantCellViewModel?);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for InCallControlsParticipantCellViewModel();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  CGRectGetMaxX(*a1);
  result = objc_msgSend(*(id *)&a2[OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell_nameLabel], sel_font);
  if (result)
  {
    v11 = result;
    objc_msgSend(result, sel_lineHeight);

    v12 = (uint64_t)&a2[OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell_viewModel];
    swift_beginAccess();
    __swift_getEnumTagSinglePayload(v12, 1, v7);
    outlined init with copy of InCallControlsParticipantCellViewModel?(v12, (uint64_t)v6);
    if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7) == 1)
    {
      return (id)outlined destroy of Conversation?((uint64_t)v6, &demangling cache variable for type metadata for InCallControlsParticipantCellViewModel?);
    }
    else
    {
      outlined init with take of InCallControlsParticipantCellViewModel((uint64_t)v6, (uint64_t)v9);
      if (v9[*(int *)(v7 + 32)] == 4)
      {
        v13 = objc_msgSend(a2, sel_contentView);
        objc_msgSend(v13, sel_bounds);

      }
      return (id)outlined destroy of InCallControlsParticipantCellViewModel((uint64_t)v9);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

id closure #8 in InCallControlsParticipantCell.layoutSubviews()(char *a1, CGRect *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  double v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  BOOL v26;
  id result;
  void *v28;
  id v29;
  _QWORD v30[3];

  v30[1] = a4;
  v30[2] = a5;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for InCallControlsParticipantCellViewModel?);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v30 - v11;
  v13 = type metadata accessor for InCallControlsParticipantCellViewModel();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v17 = MEMORY[0x1E0C80A78](v16).n128_u64[0];
  v19 = (char *)v30 - v18;
  objc_msgSend(*(id *)&a1[OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell_statusIcon], sel_alpha, v17);
  if (v20 >= 0.5)
    CGRectGetMaxX(*a2);
  v21 = (uint64_t)&a1[OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell_viewModel];
  swift_beginAccess();
  outlined init with copy of InCallControlsParticipantCellViewModel?(v21, (uint64_t)v12);
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13) == 1)
  {
    outlined destroy of Conversation?((uint64_t)v12, &demangling cache variable for type metadata for InCallControlsParticipantCellViewModel?);
  }
  else
  {
    outlined init with take of InCallControlsParticipantCellViewModel((uint64_t)v12, (uint64_t)v19);
    v22 = &v19[*(int *)(v13 + 28)];
    v24 = *(_QWORD *)v22;
    v23 = *((_QWORD *)v22 + 1);
    v25 = v22[16];
    outlined copy of InCallControlsParticipantCellViewModel.SubtitleState(*(_QWORD *)v22, v23, v22[16]);
    outlined destroy of InCallControlsParticipantCellViewModel((uint64_t)v19);
    v26 = (v25 & 0xE0) == 0x80 && (v23 | v24) == 0;
    if (v26 && v25 == 128)
      goto LABEL_12;
    outlined consume of InCallControlsParticipantCellViewModel.SubtitleState(v24, v23, v25);
  }
  result = objc_msgSend(*(id *)&a1[OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell_subtitleLabel], sel_font);
  if (!result)
  {
    __break(1u);
    return result;
  }
  v28 = result;
  objc_msgSend(result, sel_lineHeight);

LABEL_12:
  outlined init with copy of InCallControlsParticipantCellViewModel?(v21, (uint64_t)v9);
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v13) == 1)
    return (id)outlined destroy of Conversation?((uint64_t)v9, &demangling cache variable for type metadata for InCallControlsParticipantCellViewModel?);
  outlined init with take of InCallControlsParticipantCellViewModel((uint64_t)v9, (uint64_t)v15);
  if (v15[*(int *)(v13 + 32)] == 4)
  {
    v29 = objc_msgSend(a1, sel_contentView);
    objc_msgSend(v29, sel_bounds);

  }
  return (id)outlined destroy of InCallControlsParticipantCellViewModel((uint64_t)v15);
}

void InCallControlsParticipantCell.contentHeight.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_getObjectType();
  v1 = v0 + OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell_viewModel;
  swift_beginAccess();
  v2 = type metadata accessor for InCallControlsParticipantCellViewModel();
  if (__swift_getEnumTagSinglePayload(v1, 1, v2) || *(_BYTE *)(v1 + *(int *)(v2 + 60)) != 1)
    static InCallControlsParticipantCell.defaultContentHeight.getter();
  else
    static InCallControlsParticipantCell.extendedContentHeight.getter();
}

UICollectionViewLayoutAttributes __swiftcall InCallControlsParticipantCell.preferredLayoutAttributesFitting(_:)(UICollectionViewLayoutAttributes a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)OUTLINED_FUNCTION_15_6();
  v3 = objc_msgSendSuper2(&v5, sel_preferredLayoutAttributesFittingAttributes_, a1.super.isa);
  InCallControlsParticipantCell.contentHeight.getter();
  objc_msgSend(v3, sel_bounds);
  objc_msgSend(v3, sel_setBounds_);
  return (UICollectionViewLayoutAttributes)v3;
}

uint64_t closure #1 in InCallControlsParticipantCell.inCallControlButton(for:)(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t ObjectType;
  _QWORD v36[2];
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for InCallControlsParticipantCellViewModel?);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for InCallControlsParticipantCellViewModel();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = MEMORY[0x1C3B752C0](a2 + 16);
  if (result)
  {
    v15 = (char *)result;
    v16 = result + OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell_viewModel;
    swift_beginAccess();
    outlined init with copy of InCallControlsParticipantCellViewModel?(v16, (uint64_t)v10);
    if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11) == 1)
    {

      return outlined destroy of Conversation?((uint64_t)v10, &demangling cache variable for type metadata for InCallControlsParticipantCellViewModel?);
    }
    else
    {
      outlined init with take of InCallControlsParticipantCellViewModel((uint64_t)v10, (uint64_t)v13);
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      v36[1] = static OS_os_log.conversationKit;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v17 = swift_allocObject();
      *(_OWORD *)(v17 + 16) = xmmword_1BD646740;
      v18 = &v15[OBJC_IVAR____TtC15ConversationKit29InCallControlsParticipantCell_participantCellDelegate];
      swift_beginAccess();
      v19 = MEMORY[0x1C3B752C0](v18);
      v37 = a3;
      if (v19)
      {
        v20 = *((_QWORD *)v18 + 1);
        v38 = v19;
        v39 = v20;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for InCallControlsParticipantCellDelegate);
        v21 = String.init<A>(reflecting:)();
        v23 = v22;
      }
      else
      {
        v23 = 0xE300000000000000;
        v21 = 7104878;
      }
      v24 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v17 + 56) = MEMORY[0x1E0DEA968];
      v25 = lazy protocol witness table accessor for type String and conformance String();
      *(_QWORD *)(v17 + 64) = v25;
      *(_QWORD *)(v17 + 32) = v21;
      *(_QWORD *)(v17 + 40) = v23;
      LOBYTE(v38) = v37;
      v26 = String.init<A>(reflecting:)();
      *(_QWORD *)(v17 + 96) = v24;
      *(_QWORD *)(v17 + 104) = v25;
      *(_QWORD *)(v17 + 72) = v26;
      *(_QWORD *)(v17 + 80) = v27;
      v28 = &v13[*(int *)(v11 + 20)];
      v29 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v7, v28, v29);
      __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v29);
      specialized >> prefix<A>(_:)((uint64_t)v7);
      v31 = v30;
      v33 = v32;
      outlined destroy of Conversation?((uint64_t)v7, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      *(_QWORD *)(v17 + 136) = v24;
      *(_QWORD *)(v17 + 144) = v25;
      *(_QWORD *)(v17 + 112) = v31;
      *(_QWORD *)(v17 + 120) = v33;
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();
      if (MEMORY[0x1C3B752C0](v18))
      {
        v34 = *((_QWORD *)v18 + 1);
        ObjectType = swift_getObjectType();
        (*(void (**)(char *, _QWORD, char *, uint64_t, uint64_t))(v34 + 8))(v15, v37, v28, ObjectType, v34);

        swift_unknownObjectRelease();
      }
      else
      {

      }
      return outlined destroy of InCallControlsParticipantCellViewModel((uint64_t)v13);
    }
  }
  return result;
}

void static InCallControlsParticipantCell.extendedContentHeight.getter()
{
  static InCallControlsParticipantCell.extendedContentHeight.getter(&byte_1EF4C9950, &static InCallControlsParticipantCell._extendedContentHeight);
}

void static InCallControlsParticipantCell.defaultContentHeight.getter()
{
  static InCallControlsParticipantCell.extendedContentHeight.getter(&byte_1EF4C9940, &static InCallControlsParticipantCell._defaultContentHeight);
}

void static InCallControlsParticipantCell.extendedContentHeight.getter(_BYTE *a1, uint64_t *a2)
{
  uint64_t v4;

  if ((*a1 & 1) != 0)
    static InCallControlsParticipantCell.cellHeight(for:)();
  else
    v4 = *a2;
  *a2 = v4;
  *a1 = 0;
}

void static InCallControlsParticipantCell.cellHeight(for:)()
{
  void *v0;
  id v1;
  Class isa;
  id v3;

  v0 = (void *)objc_opt_self();
  v1 = objc_msgSend(v0, sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4AD0]);
  isa = UIFont.withTraits(_:)(0x8000u).super.isa;

  -[objc_class lineHeight](isa, sel_lineHeight);
  v3 = objc_msgSend(v0, sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4B10]);
  objc_msgSend(v3, sel_lineHeight);

}

id InCallControlsParticipantCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)OUTLINED_FUNCTION_15_6();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t outlined consume of InCallControlsParticipantCellViewModel.SubtitleState(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 0x80) == 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1BD3362D8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BD3362FC()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = (int *)OUTLINED_FUNCTION_14_5();
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = (v2 + 24) & ~v2;
  swift_release();
  v4 = v0 + v3;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = v0 + v3 + v1[5];
  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  OUTLINED_FUNCTION_42_40();
  outlined consume of InCallControlsParticipantCellViewModel.SubtitleState(*(_QWORD *)(v4 + v1[7]), *(_QWORD *)(v4 + v1[7] + 8), *(_BYTE *)(v4 + v1[7] + 16));
  OUTLINED_FUNCTION_42_40();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t outlined init with take of InCallControlsParticipantCellViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for InCallControlsParticipantCellViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void partial apply for closure #1 in InCallControlsParticipantCell.configure(with:)()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_14_5() - 8) + 80);
  closure #1 in InCallControlsParticipantCell.configure(with:)(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t outlined destroy of InCallControlsParticipantCellViewModel(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for InCallControlsParticipantCellViewModel();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void partial apply for closure #1 in InCallControlsParticipantCell.init(frame:)(uint64_t a1)
{
  uint64_t v1;

  closure #1 in InCallControlsParticipantCell.init(frame:)(a1, v1);
}

uint64_t ObjC metadata update function for InCallControlsParticipantCell()
{
  return type metadata accessor for InCallControlsParticipantCell();
}

uint64_t type metadata accessor for InCallControlsParticipantCell()
{
  uint64_t result;

  result = type metadata singleton initialization cache for InCallControlsParticipantCell;
  if (!type metadata singleton initialization cache for InCallControlsParticipantCell)
    return swift_getSingletonMetadata();
  return result;
}

void type metadata completion function for InCallControlsParticipantCell()
{
  unint64_t v0;

  type metadata accessor for InCallControlsParticipantCellViewModel?();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void type metadata accessor for InCallControlsParticipantCellViewModel?()
{
  unint64_t v0;
  uint64_t v1;

  if (!lazy cache variable for type metadata for InCallControlsParticipantCellViewModel?)
  {
    type metadata accessor for InCallControlsParticipantCellViewModel();
    v0 = type metadata accessor for Optional();
    if (!v1)
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for InCallControlsParticipantCellViewModel?);
  }
}

uint64_t outlined copy of InCallControlsParticipantCellViewModel.SubtitleState(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 0x80) == 0)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_1BD3365EC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in InCallControlsParticipantCell.inCallControlButton(for:)(uint64_t a1)
{
  uint64_t v1;

  return closure #1 in InCallControlsParticipantCell.inCallControlButton(for:)(a1, *(_QWORD *)(v1 + 16), *(unsigned __int8 *)(v1 + 24));
}

uint64_t OUTLINED_FUNCTION_39_47()
{
  return swift_initStackObject();
}

void PersonalNicknameMenuView.__allocating_init(displayContext:personalNicknameMenuViewDelegate:)(char *a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_12_3();
  PersonalNicknameMenuView.init(displayContext:personalNicknameMenuViewDelegate:)(a1, a2, a3);
  OUTLINED_FUNCTION_18();
}

ConversationKit::PersonalNicknameMenuViewDisplayContext_optional __swiftcall PersonalNicknameMenuViewDisplayContext.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 3;
  if ((unint64_t)rawValue < 3)
    v2 = rawValue;
  *v1 = v2;
  return (ConversationKit::PersonalNicknameMenuViewDisplayContext_optional)rawValue;
}

uint64_t PersonalNicknameMenuViewDisplayContext.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

ConversationKit::PersonalNicknameMenuViewDisplayContext_optional protocol witness for RawRepresentable.init(rawValue:) in conformance PersonalNicknameMenuViewDisplayContext(Swift::Int *a1)
{
  return PersonalNicknameMenuViewDisplayContext.init(rawValue:)(*a1);
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance PersonalNicknameMenuViewDisplayContext@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = PersonalNicknameMenuViewDisplayContext.rawValue.getter();
  *a1 = result;
  return result;
}

void PersonalNicknameMenuView.personalNickname.didset()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  id v12;
  double v13;
  double v14;
  id v15;
  objc_class *v16;
  Class isa;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  id v32;
  void *v33;
  void *v34;
  id v35;
  id v36;

  v1 = *(void **)((char *)nicknamesDefaults.value._kvo_ + v0);
  if (v1)
  {
    v36 = v1;
    PersonalNicknameMenuView.nameLabel.getter();
    v3 = v2;
    type metadata accessor for NameAndPhotoUtilities();
    v4 = static NameAndPhotoUtilities.formattedDisplayName(for:)(v36);
    outlined bridged method (mbnn) of @objc UILabel.text.setter(v4, v5, v3);

    v6 = objc_msgSend(v36, sel_avatar);
    if (v6)
    {
      v7 = v6;
      v8 = objc_msgSend(v6, sel_imageData);

      v9 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      v11 = v10;

      v12 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
      objc_msgSend(v12, sel_scale);
      v14 = v13;

      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
      outlined copy of Data._Representation(v9, v11);
      v15 = UIImage.__allocating_init(data:scale:)(v9, v11, v14);
      PersonalNicknameMenuView.leadingAvatarView.getter();
      isa = v16;
      objc_opt_self();
      v18 = (void *)swift_dynamicCastObjCClass();
      if (v18)
      {
        objc_msgSend(v18, sel_setImage_, v15);
      }
      else
      {

        PersonalNicknameMenuView.containerStackView.getter();
        v20 = v19;
        PersonalNicknameMenuView.leadingAvatarView.getter();
        v22 = v21;
        objc_msgSend(v20, sel_removeArrangedSubview_, v21);

        PersonalNicknameMenuView.leadingAvatarView.setter((uint64_t)objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_initWithImage_, v15));
        PersonalNicknameMenuView.leadingAvatarView.getter();
        v24 = v23;
        objc_msgSend(v23, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

        PersonalNicknameMenuView.containerStackView.getter();
        v26 = v25;
        PersonalNicknameMenuView.leadingAvatarView.getter();
        v28 = v27;
        objc_msgSend(v26, sel_insertArrangedSubview_atIndex_, v27, 0);

        v29 = (void *)objc_opt_self();
        PersonalNicknameMenuView.generateLeadingAvatarConstraints()();
        type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
        isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        objc_msgSend(v29, sel_activateConstraints_, isa);
      }

      PersonalNicknameMenuView.leadingAvatarView.getter();
      v31 = v30;
      v32 = objc_msgSend(v30, sel_layer);

      if (one-time initialization token for leadingImageSize != -1)
        swift_once();
      objc_msgSend(v32, sel_setCornerRadius_, *(double *)&static Layout.Nickname.leadingImageSize * 0.5);

      PersonalNicknameMenuView.leadingAvatarView.getter();
      v34 = v33;
      v35 = objc_msgSend(v33, sel_layer);

      objc_msgSend(v35, sel_setMasksToBounds_, 1);
      outlined consume of Data._Representation(v9, v11);
    }
    else
    {

    }
  }
}

id UIImage.__allocating_init(data:scale:)(uint64_t a1, unint64_t a2, double a3)
{
  id v6;
  Class isa;
  id v8;

  v6 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  isa = Data._bridgeToObjectiveC()().super.isa;
  v8 = objc_msgSend(v6, sel_initWithData_scale_, isa, a3);
  outlined consume of Data._Representation(a1, a2);

  return v8;
}

void PersonalNicknameMenuView.personalNickname.setter(void *a1)
{
  uint64_t v1;
  void *v2;
  id v3;

  v2 = *(void **)((char *)nicknamesDefaults.value._kvo_ + v1);
  *(_QWORD *)((char *)nicknamesDefaults.value._kvo_ + v1) = a1;
  v3 = a1;

  PersonalNicknameMenuView.personalNickname.didset();
}

void PersonalNicknameMenuView.contactStore.getter()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;

  v2 = *(void **)((char *)&nicknamesDefaults.value._identifier_->isa + v0);
  if (!v2)
  {
    v3 = closure #1 in PersonalNicknameMenuView.contactStore.getter();
    OUTLINED_FUNCTION_17_3(v3);

    v2 = 0;
  }
  v4 = v2;
  OUTLINED_FUNCTION_18();
}

id closure #1 in PersonalNicknameMenuView.contactStore.getter()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  id v10;

  v0 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v1 = outlined bridged method (ob) of @objc NSBundle.bundleIdentifier.getter(v0);
  if (v2)
  {
    v3 = v1;
    v4 = v2;
  }
  else
  {
    v5 = (id)TUPreferredFaceTimeBundleIdentifier();
    v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v4 = v6;

  }
  v7 = (void *)objc_opt_self();
  v8 = (void *)MEMORY[0x1C3B72E00](v3, v4);
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(v7, sel_tu_contactStoreConfigurationForBundleIdentifier_, v8);

  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97298]), sel_initWithConfiguration_, v9);
  return v10;
}

id PersonalNicknameMenuView.meContact.getter()
{
  uint64_t v0;
  CFStringRef container;
  void *v2;
  id v3;
  void *v4;
  id v5;

  container = nicknamesDefaults.value._container_;
  v2 = *(void **)((char *)&nicknamesDefaults.value._container_->isa + v0);
  v3 = v2;
  if (v2 == (void *)1)
  {
    v3 = closure #1 in PersonalNicknameMenuView.meContact.getter();
    v4 = *(void **)((char *)&container->isa + v0);
    *(void **)((char *)&container->isa + v0) = v3;
    v5 = v3;
    outlined consume of UIView??(v4);
  }
  outlined copy of UIView??(v2);
  return v3;
}

id closure #1 in PersonalNicknameMenuView.meContact.getter()
{
  void *v0;
  void *v1;
  Class isa;
  id v3;
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;
  id v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  _QWORD *v13;
  id v14;
  void *v15;
  id v17[2];

  v17[1] = *(id *)MEMORY[0x1E0C80C00];
  PersonalNicknameMenuView.contactStore.getter();
  v1 = v0;
  isa = (Class)objc_msgSend((id)objc_opt_self(), sel_keysForNicknameHandling);
  if (!isa)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for CNKeyDescriptor);
    static Array._unconditionallyBridgeFromObjectiveC(_:)();
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  v17[0] = 0;
  v3 = objc_msgSend(v1, sel__crossPlatformUnifiedMeContactWithKeysToFetch_error_, isa, v17);

  v4 = v17[0];
  if (!v3)
  {
    v5 = v4;
    v6 = (void *)_convertNSErrorToError(_:)();

    swift_willThrow();
    if (one-time initialization token for nickname != -1)
      swift_once();
    v7 = type metadata accessor for Logger();
    __swift_project_value_buffer(v7, (uint64_t)&static Logger.nickname);
    v8 = v6;
    v9 = v6;
    v10 = Logger.logObject.getter();
    v11 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v12 = 138412290;
      v14 = v6;
      v15 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v17[0] = v15;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *v13 = v15;

      _os_log_impl(&dword_1BD004000, v10, v11, "Could not fetch me card %@", v12, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v13, -1, -1);
      MEMORY[0x1C3B751B8](v12, -1, -1);

    }
    else
    {

    }
    return 0;
  }
  return v3;
}

void PersonalNicknameMenuView.leadingAvatarView.getter()
{
  CallControlsFullScreenStatusView.textContainer.getter(&nicknamesDefaults.is_nil, (uint64_t (*)(uint64_t))closure #1 in PersonalNicknameMenuView.leadingAvatarView.getter);
}

id closure #1 in PersonalNicknameMenuView.leadingAvatarView.getter(uint64_t a1)
{
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  id v9;
  double v10;
  double v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  id v25;

  v1 = *(void **)((char *)nicknamesDefaults.value._kvo_ + a1);
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v2, sel_avatar);
    if (v3)
    {
      v4 = v3;
      v5 = objc_msgSend(v3, sel_imageData);

      v6 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      v8 = v7;

      v9 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
      objc_msgSend(v9, sel_scale);
      v11 = v10;

      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
      outlined copy of Data._Representation(v6, v8);
      v12 = UIImage.__allocating_init(data:scale:)(v6, v8, v11);
      v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_initWithImage_, v12);
      v14 = objc_msgSend(v13, sel_layer);
      if (one-time initialization token for leadingImageSize != -1)
        swift_once();
      objc_msgSend(v14, sel_setCornerRadius_, *(double *)&static Layout.Nickname.leadingImageSize * 0.5);

      v15 = objc_msgSend(v13, sel_layer);
      objc_msgSend(v15, sel_setMasksToBounds_, 1);

      outlined consume of Data._Representation(v6, v8);
      return v13;
    }
    else
    {
      v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97360]), sel_init);
      v21 = objc_msgSend(v2, sel_firstName);
      if (!v21)
      {
        v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        v21 = (id)MEMORY[0x1C3B72E00](v22);
        swift_bridgeObjectRelease();
      }
      objc_msgSend(v20, sel_setGivenName_, v21);

      v23 = objc_msgSend(v2, sel_lastName);
      if (!v23)
      {
        v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        v23 = (id)MEMORY[0x1C3B72E00](v24);
        swift_bridgeObjectRelease();
      }
      objc_msgSend(v20, sel_setFamilyName_, v23);

      v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97468]), sel_initWithContact_, v20);
      return v25;
    }
  }
  else
  {
    v17 = PersonalNicknameMenuView.meContact.getter();
    if (v17)
    {
      v18 = v17;
      v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97468]), sel_initWithContact_, v17);

      return v19;
    }
    else
    {
      return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_init);
    }
  }
}

void PersonalNicknameMenuView.leadingAvatarView.setter(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + *(_QWORD *)&nicknamesDefaults.is_nil);
  *(_QWORD *)(v1 + *(_QWORD *)&nicknamesDefaults.is_nil) = a1;

}

void PersonalNicknameMenuView.nameLabel.getter()
{
  CallControlsFullScreenStatusView.textContainer.getter(&OBJC_IVAR____TtC15ConversationKit24PersonalNicknameMenuView____lazy_storage___nameLabel, (uint64_t (*)(uint64_t))closure #1 in PersonalNicknameMenuView.nameLabel.getter);
}

id closure #1 in PersonalNicknameMenuView.nameLabel.getter(uint64_t a1)
{
  id v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  v3 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A90]);
  objc_msgSend(v2, sel_setFont_, v3);

  v4 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
  objc_msgSend(v2, sel_setTextColor_, v4);

  v5 = *(void **)((char *)nicknamesDefaults.value._kvo_ + a1);
  if (v5)
  {
    type metadata accessor for NameAndPhotoUtilities();
    v6 = v5;
    v7 = static NameAndPhotoUtilities.formattedDisplayName(for:)(v6);
    outlined bridged method (mbnn) of @objc UILabel.text.setter(v7, v8, v2);
LABEL_8:

    return v2;
  }
  v9 = PersonalNicknameMenuView.meContact.getter();
  if (v9)
  {
    v10 = v9;
    v11 = outlined bridged method (pb) of @objc CNContact.displayName.getter(v9);
    if (v12)
    {
      v6 = (id)MEMORY[0x1C3B72E00](v11);
      swift_bridgeObjectRelease();
    }
    else
    {
      v6 = 0;
    }
    objc_msgSend(v2, sel_setText_, v6);

    goto LABEL_8;
  }
  return v2;
}

void PersonalNicknameMenuView.subtitleLabel.getter()
{
  CallControlsFullScreenStatusView.textContainer.getter(&OBJC_IVAR____TtC15ConversationKit24PersonalNicknameMenuView____lazy_storage___subtitleLabel, (uint64_t (*)(uint64_t))closure #1 in PersonalNicknameMenuView.subtitleLabel.getter);
}

id closure #1 in PersonalNicknameMenuView.subtitleLabel.getter(uint64_t a1)
{
  id v2;
  id v3;
  id v4;
  id v5;
  unint64_t v6;
  unint64_t v7;
  Swift::String_optional v8;
  Swift::String v9;
  uint64_t v10;
  Swift::String v11;
  unint64_t v13;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  v3 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4AB8]);
  objc_msgSend(v2, sel_setFont_, v3);

  v4 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
  objc_msgSend(v2, sel_setTextColor_, v4);

  LODWORD(v4) = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC15ConversationKit24PersonalNicknameMenuView_displayContext);
  v5 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v13 = 0xE000000000000000;
  if ((_DWORD)v4 == 2)
  {
    v6 = 0x80000001BD686530;
    v7 = 0xD000000000000014;
  }
  else
  {
    v7 = 0x50202620656D614ELL;
    v6 = 0xEC0000006F746F68;
  }
  v8.value._countAndFlagsBits = 0x61737265766E6F43;
  v8.value._object = (void *)0xEF74694B6E6F6974;
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  v10 = 0;
  v11 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v7, v8, (NSBundle)v5, v9, *(Swift::String *)(&v13 - 1));

  outlined bridged method (mbnn) of @objc UILabel.text.setter(v11._countAndFlagsBits, (uint64_t)v11._object, v2);
  return v2;
}

void PersonalNicknameMenuView.labelStackView.getter()
{
  CallControlsFullScreenStatusView.textContainer.getter(&OBJC_IVAR____TtC15ConversationKit24PersonalNicknameMenuView____lazy_storage___labelStackView, (uint64_t (*)(uint64_t))closure #1 in PersonalNicknameMenuView.labelStackView.getter);
}

void *closure #1 in PersonalNicknameMenuView.labelStackView.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  UIStackView *v3;
  void *v4;
  void *v5;

  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UIStackView);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1BD6441C0;
  PersonalNicknameMenuView.nameLabel.getter();
  *(_QWORD *)(v0 + 32) = v1;
  PersonalNicknameMenuView.subtitleLabel.getter();
  *(_QWORD *)(v0 + 40) = v2;
  specialized Array._endMutation()();
  UIStackView.__allocating_init(arrangedSubviews:)(v3, (Swift::OpaquePointer)v0);
  v5 = v4;
  objc_msgSend(v4, sel_setAxis_, 1);
  objc_msgSend(v5, sel_setAlignment_, 1);
  if (one-time initialization token for distanceBetweenLabels != -1)
    swift_once();
  objc_msgSend(v5, sel_setSpacing_, *(double *)&static Layout.Nickname.distanceBetweenLabels);
  return v5;
}

void PersonalNicknameMenuView.containerStackView.getter()
{
  CallControlsFullScreenStatusView.textContainer.getter(&OBJC_IVAR____TtC15ConversationKit24PersonalNicknameMenuView____lazy_storage___containerStackView, (uint64_t (*)(uint64_t))closure #1 in PersonalNicknameMenuView.containerStackView.getter);
}

void *closure #1 in PersonalNicknameMenuView.containerStackView.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  UIStackView *v3;
  void *v4;
  void *v5;

  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UIStackView);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1BD6441C0;
  PersonalNicknameMenuView.leadingAvatarView.getter();
  *(_QWORD *)(v0 + 32) = v1;
  PersonalNicknameMenuView.labelStackView.getter();
  *(_QWORD *)(v0 + 40) = v2;
  specialized Array._endMutation()();
  UIStackView.__allocating_init(arrangedSubviews:)(v3, (Swift::OpaquePointer)v0);
  v5 = v4;
  objc_msgSend(v4, sel_setAxis_, 0);
  objc_msgSend(v5, sel_setAlignment_, 3);
  if (one-time initialization token for distanceBetweenImageAndLabels != -1)
    swift_once();
  objc_msgSend(v5, sel_setSpacing_, *(double *)&static Layout.Nickname.distanceBetweenImageAndLabels);
  return v5;
}

id PersonalNicknameMenuView.tapRecognizer.getter()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  char *v4;
  char *v5;
  id v6;
  void *v7;
  id v8;
  _QWORD v10[4];

  v1 = OBJC_IVAR____TtC15ConversationKit24PersonalNicknameMenuView____lazy_storage___tapRecognizer;
  v2 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit24PersonalNicknameMenuView____lazy_storage___tapRecognizer];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtC15ConversationKit24PersonalNicknameMenuView____lazy_storage___tapRecognizer];
  }
  else
  {
    v4 = v0;
    v10[3] = type metadata accessor for PersonalNicknameMenuView();
    v10[0] = v0;
    objc_allocWithZone(MEMORY[0x1E0DC3D80]);
    v5 = v0;
    v6 = @nonobjc UITapGestureRecognizer.init(target:action:)(v10, (uint64_t)sel_didTapWithSender_);
    v7 = *(void **)&v0[v1];
    *(_QWORD *)&v4[v1] = v6;
    v3 = v6;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

id PersonalNicknameMenuView.init(displayContext:personalNicknameMenuViewDelegate:)(char *a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  char v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  objc_super v11;

  v5 = *a1;
  *(_QWORD *)&v3[(unint64_t)nicknamesDefaults.value._kvo_] = 0;
  *(_QWORD *)&v3[(unint64_t)nicknamesDefaults.value._identifier_] = 0;
  *(_QWORD *)&v3[(unint64_t)nicknamesDefaults.value._container_] = 1;
  *(_QWORD *)&v3[*(_QWORD *)&nicknamesDefaults.is_nil] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit24PersonalNicknameMenuView____lazy_storage___nameLabel] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit24PersonalNicknameMenuView____lazy_storage___subtitleLabel] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit24PersonalNicknameMenuView____lazy_storage___labelStackView] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit24PersonalNicknameMenuView____lazy_storage___containerStackView] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit24PersonalNicknameMenuView____lazy_storage___tapRecognizer] = 0;
  v6 = OUTLINED_FUNCTION_18_1(OBJC_IVAR____TtC15ConversationKit24PersonalNicknameMenuView_personalNicknameMenuViewDelegate);
  v3[OBJC_IVAR____TtC15ConversationKit24PersonalNicknameMenuView_displayContext] = v5;
  *(_QWORD *)(v6 + 8) = a3;
  swift_unknownObjectWeakAssign();
  v11.receiver = v3;
  v11.super_class = (Class)type metadata accessor for PersonalNicknameMenuView();
  v7 = objc_msgSendSuper2(&v11, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  specialized PersonalNicknameMenuView.getPersonalNickname(completion:)((uint64_t)v7, v7);

  PersonalNicknameMenuView.setupConstraints()();
  v8 = v7;
  v9 = PersonalNicknameMenuView.tapRecognizer.getter();
  objc_msgSend(v8, sel_addGestureRecognizer_, v9);

  swift_unknownObjectRelease();
  return v8;
}

id PersonalNicknameMenuView.__allocating_init(coder:)(void *a1)
{
  id v2;

  v2 = objc_msgSend(OUTLINED_FUNCTION_12_3(), sel_initWithCoder_, a1);

  return v2;
}

void PersonalNicknameMenuView.init(coder:)()
{
  char *v0;

  *(_QWORD *)&v0[(unint64_t)nicknamesDefaults.value._kvo_] = 0;
  *(_QWORD *)&v0[(unint64_t)nicknamesDefaults.value._identifier_] = 0;
  *(_QWORD *)&v0[(unint64_t)nicknamesDefaults.value._container_] = 1;
  *(_QWORD *)&v0[*(_QWORD *)&nicknamesDefaults.is_nil] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit24PersonalNicknameMenuView____lazy_storage___nameLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit24PersonalNicknameMenuView____lazy_storage___subtitleLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit24PersonalNicknameMenuView____lazy_storage___labelStackView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit24PersonalNicknameMenuView____lazy_storage___containerStackView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit24PersonalNicknameMenuView____lazy_storage___tapRecognizer] = 0;
  OUTLINED_FUNCTION_18_1(OBJC_IVAR____TtC15ConversationKit24PersonalNicknameMenuView_personalNicknameMenuViewDelegate);

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void PersonalNicknameMenuView.setupConstraints()()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  id v32;
  id v33;
  void *v34;
  Class isa;

  v1 = v0;
  PersonalNicknameMenuView.leadingAvatarView.getter();
  v3 = v2;
  PersonalNicknameMenuView.nameLabel.getter();
  v5 = v4;
  PersonalNicknameMenuView.subtitleLabel.getter();
  v7 = v6;
  PersonalNicknameMenuView.labelStackView.getter();
  v9 = v8;
  PersonalNicknameMenuView.containerStackView.getter();
  v11 = v10;
  OUTLINED_FUNCTION_18_4(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_);
  OUTLINED_FUNCTION_18_4(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_);
  OUTLINED_FUNCTION_18_4(v7, sel_setTranslatesAutoresizingMaskIntoConstraints_);
  OUTLINED_FUNCTION_18_4(v9, sel_setTranslatesAutoresizingMaskIntoConstraints_);
  OUTLINED_FUNCTION_18_4(v11, sel_setTranslatesAutoresizingMaskIntoConstraints_);

  OUTLINED_FUNCTION_14_84();
  objc_msgSend(v1, sel_addSubview_, v11);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v12 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v12 + 16) = xmmword_1BD644140;
  PersonalNicknameMenuView.containerStackView.getter();
  v14 = v13;
  v15 = objc_msgSend(v13, sel_topAnchor);

  v17 = OUTLINED_FUNCTION_123(v16, sel_topAnchor);
  if (one-time initialization token for distanceFromEdge != -1)
    swift_once();
  v18 = objc_msgSend(v15, sel_constraintEqualToAnchor_constant_, v17, *(double *)&static Layout.Nickname.distanceFromEdge);

  *(_QWORD *)(v12 + 32) = v18;
  OUTLINED_FUNCTION_14_84();
  v20 = objc_msgSend(v19, sel_bottomAnchor);
  OUTLINED_FUNCTION_4_39();
  v22 = OUTLINED_FUNCTION_123(v21, sel_bottomAnchor);
  v23 = OUTLINED_FUNCTION_2_104();
  OUTLINED_FUNCTION_18_11();

  *(_QWORD *)(v12 + 40) = &selRef_associatedAppBundleIdentifier;
  OUTLINED_FUNCTION_14_84();
  v25 = objc_msgSend(v24, sel_leadingAnchor);
  OUTLINED_FUNCTION_4_39();
  v27 = OUTLINED_FUNCTION_123(v26, sel_leadingAnchor);
  v28 = OUTLINED_FUNCTION_2_104();
  OUTLINED_FUNCTION_18_11();

  *(_QWORD *)(v12 + 48) = &selRef_associatedAppBundleIdentifier;
  OUTLINED_FUNCTION_14_84();
  v30 = objc_msgSend(v29, sel_trailingAnchor);
  OUTLINED_FUNCTION_4_39();
  v32 = OUTLINED_FUNCTION_123(v31, sel_trailingAnchor);
  v33 = OUTLINED_FUNCTION_2_104();
  OUTLINED_FUNCTION_18_11();

  *(_QWORD *)(v12 + 56) = &selRef_associatedAppBundleIdentifier;
  specialized Array._endMutation()();
  PersonalNicknameMenuView.generateLeadingAvatarConstraints()();
  specialized Array.append<A>(contentsOf:)();
  v34 = (void *)objc_opt_self();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v34, sel_activateConstraints_, isa);

}

uint64_t PersonalNicknameMenuView.generateLeadingAvatarConstraints()()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  id v8;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v0 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v0 + 16) = xmmword_1BD6441C0;
  PersonalNicknameMenuView.leadingAvatarView.getter();
  v2 = v1;
  v3 = objc_msgSend(v1, sel_heightAnchor);

  if (one-time initialization token for leadingImageSize != -1)
    swift_once();
  v4 = OUTLINED_FUNCTION_29_48();

  *(_QWORD *)(v0 + 32) = v4;
  PersonalNicknameMenuView.leadingAvatarView.getter();
  v6 = v5;
  v7 = objc_msgSend(v5, sel_widthAnchor);

  v8 = OUTLINED_FUNCTION_29_48();
  *(_QWORD *)(v0 + 40) = v8;
  specialized Array._endMutation()();
  return v0;
}

Swift::Void __swiftcall PersonalNicknameMenuView.didTap(sender:)(UITapGestureRecognizer *sender)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;

  v2 = v1;
  if (one-time initialization token for nickname != -1)
    swift_once();
  v3 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v3, (uint64_t)&static Logger.nickname);
  v4 = (void *)Logger.logObject.getter();
  v5 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_5_3(v5))
  {
    *(_WORD *)OUTLINED_FUNCTION_105() = 0;
    OUTLINED_FUNCTION_2_5(&dword_1BD004000, v6, v7, "Received tap on nickname menu view");
    OUTLINED_FUNCTION_60();
  }

  v8 = v2 + OBJC_IVAR____TtC15ConversationKit24PersonalNicknameMenuView_personalNicknameMenuViewDelegate;
  if (MEMORY[0x1C3B752C0](v8))
  {
    v9 = *(_QWORD *)(v8 + 8);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(ObjectType, v9);
    swift_unknownObjectRelease();
  }
}

id PersonalNicknameMenuView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void PersonalNicknameMenuView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id PersonalNicknameMenuView.__deallocating_deinit()
{
  return BaseButton.__deallocating_deinit(type metadata accessor for PersonalNicknameMenuView);
}

void closure #1 in PersonalNicknameMenuView.setNickname()(void *a1)
{
  id v2;

  v2 = a1;
  PersonalNicknameMenuView.personalNickname.setter(a1);
}

void specialized PersonalNicknameMenuView.getPersonalNickname(completion:)(uint64_t a1, void *a2)
{
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  unsigned __int8 v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  id v19;
  id v20;
  uint64_t v21;
  void *v22;
  _QWORD *v23;
  _QWORD aBlock[6];

  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = a2;
  v4 = (void *)objc_opt_self();
  v5 = a2;
  v6 = objc_msgSend(v4, sel_sharedController);
  v7 = (void *)MEMORY[0x1C3B72E00](0xD000000000000018, 0x80000001BD659250);
  v8 = objc_msgSend(v6, sel_hasListenerForID_, v7);

  if ((v8 & 1) == 0)
  {
    v9 = objc_msgSend(v4, sel_sharedController);
    v10 = (void *)MEMORY[0x1C3B72E00](0xD000000000000018, 0x80000001BD659250);
    objc_msgSend(v9, sel_addListenerID_capabilities_, v10, *MEMORY[0x1E0D36CB8]);

  }
  v11 = (void *)objc_opt_self();
  v12 = objc_msgSend(v11, sel_sharedInstance);
  v13 = objc_msgSend(v12, sel_personalNickname);

  if (v13)
  {
    if (one-time initialization token for nickname != -1)
      swift_once();
    v14 = type metadata accessor for Logger();
    __swift_project_value_buffer(v14, (uint64_t)&static Logger.nickname);
    v15 = v13;
    v16 = Logger.logObject.getter();
    v17 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      v23 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v18 = 138412290;
      aBlock[0] = v15;
      v19 = v15;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *v23 = v13;

      _os_log_impl(&dword_1BD004000, v16, v17, "Reading the personal nick name from cache %@", v18, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v23, -1, -1);
      MEMORY[0x1C3B751B8](v18, -1, -1);

    }
    else
    {

    }
    v20 = v15;
    PersonalNicknameMenuView.personalNickname.setter(v13);
  }
  else
  {
    v20 = objc_msgSend(v11, sel_sharedInstance);
    v21 = swift_allocObject();
    *(_QWORD *)(v21 + 16) = partial apply for closure #1 in PersonalNicknameMenuView.setNickname();
    *(_QWORD *)(v21 + 24) = v3;
    aBlock[4] = partial apply for closure #1 in PersonalNicknameMenuView.getPersonalNickname(completion:);
    aBlock[5] = v21;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = thunk for @escaping @callee_guaranteed (@guaranteed Error?) -> ();
    aBlock[3] = &block_descriptor_9_3;
    v22 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v20, sel_fetchPersonalNicknameWithCompletion_, v22);
    _Block_release(v22);
  }

  swift_release();
}

uint64_t closure #1 in PersonalNicknameMenuView.getPersonalNickname(completion:)(void *a1, uint64_t (*a2)(void *))
{
  uint64_t v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  _QWORD *v9;
  id v10;

  if (one-time initialization token for nickname != -1)
    swift_once();
  v4 = type metadata accessor for Logger();
  __swift_project_value_buffer(v4, (uint64_t)&static Logger.nickname);
  v5 = a1;
  v6 = Logger.logObject.getter();
  v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v8 = 138412290;
    if (a1)
      v10 = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *v9 = a1;

    _os_log_impl(&dword_1BD004000, v6, v7, "Fetching the personal nick name: %@", v8, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v9, -1, -1);
    MEMORY[0x1C3B751B8](v8, -1, -1);

  }
  else
  {

  }
  return a2(a1);
}

uint64_t type metadata accessor for PersonalNicknameMenuView()
{
  return objc_opt_self();
}

void *PersonalNicknameNameProvider.personalNickname.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit28PersonalNicknameNameProvider_personalNickname);
  v2 = v1;
  return v1;
}

id PersonalNicknameNameProvider.__allocating_init(personalNickname:)(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  objc_super v11;

  v3 = (char *)OUTLINED_FUNCTION_12_3();
  *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit28PersonalNicknameNameProvider_personalNickname] = a1;
  v11.receiver = v3;
  v11.super_class = v1;
  return OUTLINED_FUNCTION_90_0((uint64_t)v3, sel_init, v4, v5, v6, v7, v8, v9, v11);
}

id PersonalNicknameNameProvider.init(personalNickname:)(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  objc_super v9;

  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit28PersonalNicknameNameProvider_personalNickname] = a1;
  v9.receiver = v1;
  v9.super_class = (Class)type metadata accessor for PersonalNicknameNameProvider();
  return OUTLINED_FUNCTION_90_0((uint64_t)v9.super_class, sel_init, v2, v3, v4, v5, v6, v7, v9);
}

id PersonalNicknameNameProvider.__allocating_init()()
{
  return objc_msgSend(OUTLINED_FUNCTION_12_3(), sel_init);
}

void PersonalNicknameNameProvider.init()()
{
  OUTLINED_FUNCTION_300();
  __break(1u);
}

id PersonalNicknameNameProvider.__deallocating_deinit()
{
  return BaseButton.__deallocating_deinit(type metadata accessor for PersonalNicknameNameProvider);
}

Swift::String_optional __swiftcall PersonalNicknameNameProvider.givenName()()
{
  uint64_t v0;
  void *v1;
  Swift::String_optional result;

  v0 = PersonalNicknameNameProvider.givenName()((SEL *)&selRef_firstName);
  result.value._object = v1;
  result.value._countAndFlagsBits = v0;
  return result;
}

Swift::String_optional __swiftcall PersonalNicknameNameProvider.middleName()()
{
  uint64_t v0;
  void *v1;
  Swift::String_optional result;

  OUTLINED_FUNCTION_34_0();
  result.value._object = v1;
  result.value._countAndFlagsBits = v0;
  return result;
}

Swift::String_optional __swiftcall PersonalNicknameNameProvider.familyName()()
{
  uint64_t v0;
  void *v1;
  Swift::String_optional result;

  v0 = PersonalNicknameNameProvider.givenName()((SEL *)&selRef_lastName);
  result.value._object = v1;
  result.value._countAndFlagsBits = v0;
  return result;
}

uint64_t PersonalNicknameNameProvider.givenName()(SEL *a1)
{
  uint64_t v1;
  id v2;

  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit28PersonalNicknameNameProvider_personalNickname))
  {
    v2 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC15ConversationKit28PersonalNicknameNameProvider_personalNickname), *a1);
    static String._unconditionallyBridgeFromObjectiveC(_:)();

  }
  return OUTLINED_FUNCTION_50();
}

id @objc PersonalNicknameNameProvider.givenName()(void *a1, uint64_t a2, uint64_t (*a3)(void))
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v4 = a1;
  v5 = a3();
  v7 = v6;

  if (v7)
  {
    v8 = (void *)MEMORY[0x1C3B72E00](v5, v7);
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = 0;
  }
  return v8;
}

Swift::String_optional __swiftcall PersonalNicknameNameProvider.nickname()()
{
  uint64_t v0;
  void *v1;
  Swift::String_optional result;

  OUTLINED_FUNCTION_34_0();
  result.value._object = v1;
  result.value._countAndFlagsBits = v0;
  return result;
}

void PersonalNicknameAvatarProvider.imageData.getter()
{
  uint64_t v0;
  unint64_t v1;

  v0 = OUTLINED_FUNCTION_50();
  outlined copy of Data?(v0, v1);
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void PersonalNicknameAvatarProvider.wallpaperFilePath.getter()
{
  PersonalNicknameAvatarProvider.wallpaperFilePath.getter();
}

{
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void PersonalNicknameAvatarProvider.nameString.getter()
{
  PersonalNicknameAvatarProvider.wallpaperFilePath.getter();
}

id PersonalNicknameAvatarProvider.__allocating_init(imageData:wallpaperFilePath:nameString:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  OUTLINED_FUNCTION_12_3();
  return PersonalNicknameAvatarProvider.init(imageData:wallpaperFilePath:nameString:)(a1, a2, a3, a4, a5, a6);
}

id PersonalNicknameAvatarProvider.init(imageData:wallpaperFilePath:nameString:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char *v6;
  char *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  objc_super v17;

  v7 = &v6[OBJC_IVAR____TtC15ConversationKit30PersonalNicknameAvatarProvider_imageData];
  *(_QWORD *)v7 = a1;
  *((_QWORD *)v7 + 1) = a2;
  v8 = &v6[OBJC_IVAR____TtC15ConversationKit30PersonalNicknameAvatarProvider_wallpaperFilePath];
  *(_QWORD *)v8 = a3;
  *((_QWORD *)v8 + 1) = a4;
  v9 = &v6[OBJC_IVAR____TtC15ConversationKit30PersonalNicknameAvatarProvider_nameString];
  *(_QWORD *)v9 = a5;
  *((_QWORD *)v9 + 1) = a6;
  v17.receiver = v6;
  v17.super_class = (Class)type metadata accessor for PersonalNicknameAvatarProvider();
  return OUTLINED_FUNCTION_90_0((uint64_t)v17.super_class, sel_init, v10, v11, v12, v13, v14, v15, v17);
}

void PersonalNicknameAvatarProvider.init()()
{
  OUTLINED_FUNCTION_300();
  __break(1u);
}

id PersonalNicknameAvatarProvider.__deallocating_deinit()
{
  return BaseButton.__deallocating_deinit(type metadata accessor for PersonalNicknameAvatarProvider);
}

void specialized PersonalNicknameAvatarProvider.generateAvatarImage(of:imageHandler:)(uint64_t a1, void (**a2)(_QWORD, _QWORD, _QWORD), double a3, double a4)
{
  double v6;
  double v7;
  double v8;
  double v9;
  id v10;
  double v11;
  CGFloat v12;
  uint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  UIImage *v18;
  CGSize v19;

  v6 = 100.0;
  if ((*(_QWORD *)&a4 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v7 = a4;
  else
    v7 = 100.0;
  if ((*(_QWORD *)&a4 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v6 = a3;
  if ((*(_QWORD *)&a3 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v8 = a4;
  else
    v8 = v7;
  if ((*(_QWORD *)&a3 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v9 = a3;
  else
    v9 = v6;
  v10 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
  objc_msgSend(v10, sel_scale);
  v12 = v11;

  v13 = (uint64_t *)(a1 + OBJC_IVAR____TtC15ConversationKit30PersonalNicknameAvatarProvider_imageData);
  v14 = *(_QWORD *)(a1 + OBJC_IVAR____TtC15ConversationKit30PersonalNicknameAvatarProvider_imageData + 8);
  if (v14 >> 60 == 15
    || (v15 = *v13,
        type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIImage),
        outlined copy of Data._Representation(v15, v14),
        (v16 = UIImage.__allocating_init(data:scale:)(v15, v14, v12)) == 0))
  {
    v18 = 0;
    v17 = 0;
  }
  else
  {
    v17 = v16;
    v19.width = v9;
    v19.height = v8;
    UIGraphicsBeginImageContextWithOptions(v19, 0, v12);
    objc_msgSend(v17, sel_drawInRect_, 0.0, 0.0, v9, v8);
    v18 = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

  }
  ((void (**)(_QWORD, UIImage *, _QWORD))a2)[2](a2, v18, 0);

  _Block_release(a2);
}

void PersonalNicknameAvatarProvider.generateAvatarImage(of:imageHandler:)(void (*a1)(void), double a2, double a3)
{
  uint64_t v3;
  double v5;
  double v6;
  id v7;
  double v8;
  double v9;
  uint64_t *v10;
  unint64_t v11;
  id v12;
  uint64_t v13;
  id v14;
  UIImage *v15;
  id v16;
  CGSize v17;

  v5 = a3;
  v6 = a2;
  if ((*(_QWORD *)&a2 & 0x7FFFFFFFFFFFFFFFLL) == 0 && (*(_QWORD *)&a3 & 0x7FFFFFFFFFFFFFFFLL) == 0)
  {
    v5 = 100.0;
    v6 = 100.0;
  }
  v7 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
  objc_msgSend(v7, sel_scale);
  v9 = v8;

  v10 = (uint64_t *)(v3 + OBJC_IVAR____TtC15ConversationKit30PersonalNicknameAvatarProvider_imageData);
  v11 = *(_QWORD *)(v3 + OBJC_IVAR____TtC15ConversationKit30PersonalNicknameAvatarProvider_imageData + 8);
  if (v11 >> 60 == 15)
  {
    v12 = 0;
LABEL_8:
    v14 = 0;
    goto LABEL_9;
  }
  v13 = *v10;
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  outlined copy of Data._Representation(v13, v11);
  v12 = UIImage.__allocating_init(data:scale:)(v13, v11, v9);
  if (!v12)
    goto LABEL_8;
  v14 = v12;
  v17.width = v6;
  v17.height = v5;
  UIGraphicsBeginImageContextWithOptions(v17, 0, v9);
  objc_msgSend(v14, sel_drawInRect_, 0.0, 0.0, v6, v5);
  v15 = UIGraphicsGetImageFromCurrentImageContext();
  UIGraphicsEndImageContext();

  v12 = v15;
LABEL_9:
  v16 = v12;
  a1();

}

uint64_t PersonalNicknameAvatarProvider.generatePosterImage(handler:)(void (*a1)(_QWORD, void *), uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  Class isa;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  void *v36;
  void *v37;
  void *v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  _QWORD v47[4];
  uint64_t v48;
  void (*v49)(_QWORD, void *);
  uint64_t v50;
  id aBlock;
  uint64_t v52;
  void (*v53)(uint64_t, void *, void *);
  void *v54;
  uint64_t (*v55)(uint64_t, void *);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v58 = *MEMORY[0x1E0C80C00];
  v5 = type metadata accessor for URL.DirectoryHint();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for URL();
  v50 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v47 - v15;
  if (*(_QWORD *)(v2 + OBJC_IVAR____TtC15ConversationKit30PersonalNicknameAvatarProvider_wallpaperFilePath + 8))
  {
    v48 = v14;
    v49 = a1;
    __swift_storeEnumTagSinglePayload((uint64_t)v11, 1, 1, v14);
    (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0CAFD78], v5);
    swift_bridgeObjectRetain();
    URL.init(filePath:directoryHint:relativeTo:)();
    v23 = (void *)Data.init(contentsOf:options:)();
    v25 = v24;
    v26 = (void *)objc_opt_self();
    OUTLINED_FUNCTION_7_98();
    isa = Data._bridgeToObjectiveC()().super.isa;
    aBlock = 0;
    v28 = objc_msgSend(v26, sel_unarchiveConfigurationFromData_error_, isa, &aBlock);

    v29 = aBlock;
    if (v28)
    {
      v30 = v28;
      OUTLINED_FUNCTION_0_121();
      v31 = v2 + OBJC_IVAR____TtC15ConversationKit30PersonalNicknameAvatarProvider_nameString;
      v32 = *(_QWORD *)(v2 + OBJC_IVAR____TtC15ConversationKit30PersonalNicknameAvatarProvider_nameString);
      v33 = *(_QWORD *)(v31 + 8);
      objc_allocWithZone(MEMORY[0x1E0DBD148]);
      swift_bridgeObjectRetain();
      v34 = @nonobjc TPInComingCallUISnapshotViewController.init(configuration:style:nameString:)(v28, 3, v32, v33);
      v35 = OUTLINED_FUNCTION_15();
      *(_QWORD *)(v35 + 16) = v49;
      *(_QWORD *)(v35 + 24) = a2;
      v55 = partial apply for closure #1 in PersonalNicknameAvatarProvider.generatePosterImage(handler:);
      v56 = v35;
      aBlock = (id)MEMORY[0x1E0C809B0];
      v52 = 1107296256;
      v53 = thunk for @escaping @callee_guaranteed (@guaranteed ASCLockupRequest?, @guaranteed Error?) -> ();
      v54 = &block_descriptor_61;
      v36 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      objc_msgSend(v34, sel_snapshotWithOptions_completionBlock_, 0, v36);
      _Block_release(v36);

    }
    else
    {
      v37 = v29;
      v38 = (void *)_convertNSErrorToError(_:)();

      swift_willThrow();
      if (one-time initialization token for nickname != -1)
        swift_once();
      v39 = OUTLINED_FUNCTION_17_2();
      v40 = __swift_project_value_buffer(v39, (uint64_t)&static Logger.nickname);
      OUTLINED_FUNCTION_12_80();
      OUTLINED_FUNCTION_7_98();
      OUTLINED_FUNCTION_12_80();
      Logger.logObject.getter();
      v41 = OUTLINED_FUNCTION_232();
      if (os_log_type_enabled(v40, v41))
      {
        v42 = OUTLINED_FUNCTION_105();
        v57 = OUTLINED_FUNCTION_105();
        *(_DWORD *)v42 = 136315394;
        v47[2] = v16;
        aBlock = v23;
        v52 = v25;
        OUTLINED_FUNCTION_7_98();
        v43 = String.init<A>(reflecting:)();
        v47[3] = a2;
        aBlock = (id)OUTLINED_FUNCTION_20_64(v43, v44);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_0_121();
        OUTLINED_FUNCTION_0_121();
        *(_WORD *)(v42 + 12) = 2080;
        aBlock = v38;
        OUTLINED_FUNCTION_12_80();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
        v45 = String.init<A>(reflecting:)();
        aBlock = (id)OUTLINED_FUNCTION_20_64(v45, v46);
        OUTLINED_FUNCTION_21_64();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_4_108();
        OUTLINED_FUNCTION_4_108();
        _os_log_impl(&dword_1BD004000, v40, v41, "Could not unarchive configuration from data: %s error: %s", (uint8_t *)v42, 0x16u);
        OUTLINED_FUNCTION_22_63();
        OUTLINED_FUNCTION_60();
      }
      OUTLINED_FUNCTION_0_121();
      OUTLINED_FUNCTION_0_121();
      OUTLINED_FUNCTION_4_108();
      OUTLINED_FUNCTION_4_108();

      OUTLINED_FUNCTION_12_80();
      v49(0, v38);
      OUTLINED_FUNCTION_4_108();
      OUTLINED_FUNCTION_4_108();
    }
    OUTLINED_FUNCTION_0_121();
    return (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v16, v48);
  }
  else
  {
    if (one-time initialization token for nickname != -1)
      swift_once();
    v17 = OUTLINED_FUNCTION_17_2();
    v18 = (void *)__swift_project_value_buffer(v17, (uint64_t)&static Logger.nickname);
    Logger.logObject.getter();
    v19 = OUTLINED_FUNCTION_232();
    if (OUTLINED_FUNCTION_5_3(v19))
    {
      *(_WORD *)OUTLINED_FUNCTION_105() = 0;
      OUTLINED_FUNCTION_2_5(&dword_1BD004000, v20, v21, "Could not find a wallpaperFilePath");
      OUTLINED_FUNCTION_60();
    }

    return ((uint64_t (*)(_QWORD, _QWORD))a1)(0, 0);
  }
}

uint64_t closure #1 in PersonalNicknameAvatarProvider.generatePosterImage(handler:)(uint64_t a1, id a2, uint64_t (*a3)(uint64_t, id))
{
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v18;

  if (a2)
  {
    v6 = a2;
    if (one-time initialization token for nickname != -1)
      swift_once();
    v7 = type metadata accessor for Logger();
    __swift_project_value_buffer(v7, (uint64_t)&static Logger.nickname);
    v8 = a2;
    v9 = a2;
    v10 = Logger.logObject.getter();
    v11 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      v18 = v13;
      *(_DWORD *)v12 = 136315138;
      v14 = a2;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
      v15 = String.init<A>(reflecting:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v15, v16, &v18);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BD004000, v10, v11, "Could not snapshot TPInComingCallUISnapshotViewController with error: %s", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v13, -1, -1);
      MEMORY[0x1C3B751B8](v12, -1, -1);

    }
    else
    {

    }
  }
  return a3(a1, a2);
}

id @nonobjc TPInComingCallUISnapshotViewController.init(configuration:style:nameString:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v5;
  void *v8;
  id v9;

  v5 = v4;
  if (a4)
  {
    v8 = (void *)MEMORY[0x1C3B72E00](a3, a4);
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = 0;
  }
  v9 = objc_msgSend(v5, sel_initWithConfiguration_style_nameString_, a1, a2, v8);

  return v9;
}

uint64_t type metadata accessor for PersonalNicknameNameProvider()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for PersonalNicknameAvatarProvider()
{
  return objc_opt_self();
}

uint64_t sub_1BD339948()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in PersonalNicknameAvatarProvider.generatePosterImage(handler:)(uint64_t a1, void *a2)
{
  uint64_t v2;

  return closure #1 in PersonalNicknameAvatarProvider.generatePosterImage(handler:)(a1, a2, *(uint64_t (**)(uint64_t, id))(v2 + 16));
}

unint64_t lazy protocol witness table accessor for type PersonalNicknameMenuViewDisplayContext and conformance PersonalNicknameMenuViewDisplayContext()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PersonalNicknameMenuViewDisplayContext and conformance PersonalNicknameMenuViewDisplayContext;
  if (!lazy protocol witness table cache variable for type PersonalNicknameMenuViewDisplayContext and conformance PersonalNicknameMenuViewDisplayContext)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for PersonalNicknameMenuViewDisplayContext, &type metadata for PersonalNicknameMenuViewDisplayContext);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PersonalNicknameMenuViewDisplayContext and conformance PersonalNicknameMenuViewDisplayContext);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for PersonalNicknameMenuViewDisplayContext(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BD339A00 + 4 * byte_1BD659145[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BD339A34 + 4 * byte_1BD659140[v4]))();
}

uint64_t sub_1BD339A34(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD339A3C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD339A44);
  return result;
}

uint64_t sub_1BD339A50(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD339A58);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BD339A5C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD339A64(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for PersonalNicknameMenuViewDisplayContext()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t dispatch thunk of PersonalNicknameMenuViewDelegate.presentOnboardingViewController()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t method lookup function for PersonalNicknameMenuView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PersonalNicknameMenuView.__allocating_init(displayContext:personalNicknameMenuViewDelegate:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 408))();
}

uint64_t dispatch thunk of PersonalNicknameMenuView.didTap(sender:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1B0))();
}

uint64_t method lookup function for PersonalNicknameNameProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PersonalNicknameNameProvider.__allocating_init(personalNickname:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t method lookup function for PersonalNicknameAvatarProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PersonalNicknameAvatarProvider.__allocating_init(imageData:wallpaperFilePath:nameString:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_1BD339ADC()
{
  uint64_t v0;

  return swift_deallocObject();
}

void partial apply for closure #1 in PersonalNicknameMenuView.setNickname()(void *a1)
{
  closure #1 in PersonalNicknameMenuView.setNickname()(a1);
}

uint64_t partial apply for closure #1 in PersonalNicknameMenuView.getPersonalNickname(completion:)(void *a1)
{
  uint64_t v1;

  return closure #1 in PersonalNicknameMenuView.getPersonalNickname(completion:)(a1, *(uint64_t (**)(void *))(v1 + 16));
}

void specialized _ArrayProtocol.filter(_:)(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  specialized _ArrayProtocol.filter(_:)(a1, a2, a3, type metadata accessor for Participant, (uint64_t)specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:));
}

{
  specialized _ArrayProtocol.filter(_:)(a1, a2, a3, type metadata accessor for ParticipantGridView.IdentifiableParticipantTile, (uint64_t)specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:));
}

{
  specialized _ArrayProtocol.filter(_:)(a1, a2, a3, type metadata accessor for TranscriptionViewModel.Caption, (uint64_t)specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:));
}

void specialized _ArrayProtocol.filter(_:)(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), uint64_t a5)
{
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(_QWORD);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(char *);
  uint64_t v27;
  uint64_t v28;

  v20 = a5;
  v6 = a4;
  v26 = a1;
  v27 = a2;
  v8 = a4(0);
  v25 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_5_27();
  v24 = v9;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v20 - v11;
  v28 = MEMORY[0x1E0DEE9D8];
  v23 = *(_QWORD *)(a3 + 16);
  if (v23)
  {
    v13 = 0;
    v14 = MEMORY[0x1E0DEE9D8];
    v21 = v6;
    v22 = a3;
    while (v13 < *(_QWORD *)(a3 + 16))
    {
      v15 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
      v16 = *(_QWORD *)(v25 + 72);
      outlined init with copy of ConversationControlsAppLaunchButtonType(a3 + v15 + v16 * v13, (uint64_t)v12, v6);
      v17 = v26(v12);
      if (v5)
      {
        OUTLINED_FUNCTION_25_46();
        swift_release();
        swift_bridgeObjectRelease();
        return;
      }
      if ((v17 & 1) != 0)
      {
        outlined init with take of StagedCollaboration((uint64_t)v12, v24, v6);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          OUTLINED_FUNCTION_23_56(0, *(_QWORD *)(v14 + 16) + 1);
        v14 = v28;
        v19 = *(_QWORD *)(v28 + 16);
        v18 = *(_QWORD *)(v28 + 24);
        if (v19 >= v18 >> 1)
        {
          OUTLINED_FUNCTION_23_56(v18 > 1, v19 + 1);
          v14 = v28;
        }
        *(_QWORD *)(v14 + 16) = v19 + 1;
        v6 = v21;
        outlined init with take of StagedCollaboration(v24, v14 + v15 + v19 * v16, v21);
        a3 = v22;
      }
      else
      {
        OUTLINED_FUNCTION_25_46();
      }
      if (v23 == ++v13)
        goto LABEL_15;
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
  }
}

void Array<A>.screenSharingParticipant.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  uint64_t (*v20)(uint64_t);
  const void *v21;
  const void *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD v27[2];
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34[42];
  _BYTE v35[24];
  uint64_t v36;
  _BYTE v37[184];
  uint64_t v38;

  OUTLINED_FUNCTION_93();
  v2 = v1;
  v4 = v3;
  v5 = type metadata accessor for Participant.State(0);
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_0_7();
  v6 = OUTLINED_FUNCTION_14_2();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_5_27();
  v33 = v8;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v27 - v10;
  v12 = MEMORY[0x1E0DEE9D8];
  v38 = MEMORY[0x1E0DEE9D8];
  v13 = *(_QWORD *)(v2 + 16);
  swift_bridgeObjectRetain();
  if (v13)
  {
    v27[1] = v2;
    v28 = v4;
    OUTLINED_FUNCTION_37_3();
    v14 = *(_QWORD *)(v7 + 72);
    v30 = v15;
    v16 = v2 + v15;
    v17 = v37;
    v32 = &v34[12];
    v18 = type metadata accessor for Participant.State;
    v31 = v5;
    v29 = v37;
    while (1)
    {
      outlined init with copy of ConversationControlsAppLaunchButtonType(v16, (uint64_t)v11, type metadata accessor for Participant);
      outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v11, v0, v18);
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        v20 = v18;
        v21 = (const void *)(v0 + *(int *)(v19 + 48));
        outlined consume of Participant.CopresenceInfo?(*(_QWORD *)(v0 + *(int *)(v19 + 64)), *(_QWORD *)(v0 + *(int *)(v19 + 64) + 8));
        v22 = v21;
        v18 = v20;
        memcpy(v34, v22, sizeof(v34));
        v23 = type metadata accessor for Date();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v0, v23);
        outlined init with copy of Participant.ScreenInfo?((uint64_t)v32, (uint64_t)v35);
        outlined destroy of Participant.MediaInfo((uint64_t)v34);
        if (v36 != 1)
        {
          outlined destroy of Participant.ScreenInfo?((uint64_t)v35);
          outlined init with take of StagedCollaboration((uint64_t)v11, v33, type metadata accessor for Participant);
          v24 = v38;
          if ((OUTLINED_FUNCTION_83_8() & 1) == 0)
          {
            OUTLINED_FUNCTION_89_1(0, *(_QWORD *)(v24 + 16) + 1);
            v24 = v38;
          }
          v26 = *(_QWORD *)(v24 + 16);
          v25 = *(_QWORD *)(v24 + 24);
          if (v26 >= v25 >> 1)
          {
            OUTLINED_FUNCTION_89_1(v25 > 1, v26 + 1);
            v24 = v38;
          }
          *(_QWORD *)(v24 + 16) = v26 + 1;
          outlined init with take of StagedCollaboration(v33, v24 + v30 + v26 * v14, type metadata accessor for Participant);
          v17 = v29;
          v18 = v20;
          goto LABEL_12;
        }
      }
      else
      {
        outlined destroy of RemoteControlRequest(v0, v18);
        memset(v35, 0, sizeof(v35));
        v36 = 1;
        bzero(v17, 0xB1uLL);
      }
      outlined destroy of Participant.ScreenInfo?((uint64_t)v35);
      outlined destroy of RemoteControlRequest((uint64_t)v11, type metadata accessor for Participant);
LABEL_12:
      v16 += v14;
      if (!--v13)
      {
        v12 = v38;
        v4 = v28;
        break;
      }
    }
  }
  swift_bridgeObjectRelease();
  v34[0] = v12;
  swift_retain();
  specialized MutableCollection<>.sort(by:)(v34, (uint64_t (*)(_QWORD *))specialized UnsafeMutableBufferPointer._stableSortImpl(by:));
  OUTLINED_FUNCTION_43();
  specialized Collection.first.getter(v34[0], v4);
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_52_1();
}

void Array<A>.arrayCloselyMatching(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[24];

  OUTLINED_FUNCTION_93();
  v10[3] = v0;
  MEMORY[0x1E0C80A78](v1);
  MEMORY[0x1E0C80A78](v2);
  v10[1] = v3;
  MEMORY[0x1E0C80A78](v4);
  v10[2] = (char *)v10 - v5;
  v10[16] = v6;
  v10[12] = v7;
  v10[13] = v8;
  v10[14] = v9;
  type metadata accessor for Array();
  OUTLINED_FUNCTION_86();
  OUTLINED_FUNCTION_5_105();
}

void sub_1BD33A45C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v3 - 96) = _ArrayProtocol.filter(_:)();
  *(_QWORD *)(v3 - 144) = v2;
  v4 = *(_QWORD *)(v3 - 248);
  *(_QWORD *)(v3 - 224) = v0;
  *(_QWORD *)(v3 - 216) = v4;
  *(_QWORD *)(v3 - 208) = v1;
  OUTLINED_FUNCTION_86();
  *(_QWORD *)(v3 - 112) = _ArrayProtocol.filter(_:)();
  *(_QWORD *)(v3 - 120) = static Array._allocateUninitialized(_:)();
  swift_bridgeObjectRetain();
  *(_QWORD *)(v3 - 128) = Array.startIndex.getter();
  OUTLINED_FUNCTION_20_65();
}

void Array<A>.sortToMatch(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_93();
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_0_7();
  swift_getTupleTypeMetadata2();
  v1 = type metadata accessor for Optional();
  MEMORY[0x1E0C80A78](v1);
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_45_3();
}

void sub_1BD33A7C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);

  Sequence.enumerated()();
  *(_QWORD *)(v7 - 112) = *(_QWORD *)(v7 - 128);
  OUTLINED_FUNCTION_6_84();
  type metadata accessor for EnumeratedSequence();
  EnumeratedSequence.makeIterator()();
  OUTLINED_FUNCTION_6_84();
  *(_QWORD *)(v7 - 168) = type metadata accessor for EnumeratedSequence.Iterator();
  EnumeratedSequence.Iterator.next()();
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 32);
  *(_QWORD *)(v7 - 160) = v4;
  *(_QWORD *)(v7 - 176) = v8;
  v8(v6, v5, v4);
  if (__swift_getEnumTagSinglePayload(v6, 1, v3) != 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 144) + 32))(v2, v6 + *(int *)(v3 + 48), v1);
    *(_QWORD *)(v7 - 112) = **(_QWORD **)(v7 - 136);
    OUTLINED_FUNCTION_45_3();
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_52_1();
}

void Array<A>.filterAndSortForInCallControls()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_93();
  v1 = v0;
  v2 = OUTLINED_FUNCTION_14_2();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v16 - v7;
  v9 = MEMORY[0x1E0DEE9D8];
  v18 = MEMORY[0x1E0DEE9D8];
  v10 = *(_QWORD *)(v1 + 16);
  OUTLINED_FUNCTION_86();
  if (v10)
  {
    OUTLINED_FUNCTION_37_3();
    v11 = *(_QWORD *)(v3 + 72);
    v16 = v1;
    v17 = v12;
    v13 = v1 + v12;
    do
    {
      outlined init with copy of ConversationControlsAppLaunchButtonType(v13, (uint64_t)v8, type metadata accessor for Participant);
      if (*(_QWORD *)&v8[*(int *)(v2 + 28)])
      {
        outlined init with take of StagedCollaboration((uint64_t)v8, (uint64_t)v6, type metadata accessor for Participant);
        if ((OUTLINED_FUNCTION_83_8() & 1) == 0)
          OUTLINED_FUNCTION_89_1(0, *(_QWORD *)(v9 + 16) + 1);
        v9 = v18;
        v15 = *(_QWORD *)(v18 + 16);
        v14 = *(_QWORD *)(v18 + 24);
        if (v15 >= v14 >> 1)
        {
          OUTLINED_FUNCTION_89_1(v14 > 1, v15 + 1);
          v9 = v18;
        }
        *(_QWORD *)(v9 + 16) = v15 + 1;
        outlined init with take of StagedCollaboration((uint64_t)v6, v9 + v17 + v15 * v11, type metadata accessor for Participant);
      }
      else
      {
        outlined destroy of RemoteControlRequest((uint64_t)v8, type metadata accessor for Participant);
      }
      v13 += v11;
      --v10;
    }
    while (v10);
    v9 = v18;
  }
  swift_bridgeObjectRelease();
  v18 = v9;
  swift_bridgeObjectRetain();
  specialized MutableCollection<>.sort(by:)(&v18, specialized UnsafeMutableBufferPointer._stableSortImpl(by:));
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_52_1();
}

BOOL closure #1 in Array<A>.arrayCloselyMatching(_:)()
{
  uint64_t v0;

  v0 = type metadata accessor for Array();
  MEMORY[0x1C3B750C8](MEMORY[0x1E0DEAF38], v0);
  return (Sequence<>.contains(_:)() & 1) == 0;
}

uint64_t closure #2 in Array<A>.arrayCloselyMatching(_:)()
{
  uint64_t v0;

  v0 = type metadata accessor for Array();
  MEMORY[0x1C3B750C8](MEMORY[0x1E0DEAF38], v0);
  return Sequence<>.contains(_:)() & 1;
}

void Array<A>.union()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  CGRect v3;
  CGRect v4;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v2 = a1 + 56;
    swift_bridgeObjectRetain();
    do
    {
      v3.origin.x = OUTLINED_FUNCTION_22_64();
      CGRectUnion(v3, v4);
      v2 += 32;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_22_64();
}

void closure #1 in Array<A>.sortForInCallControls()(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);
  char *v8;
  uint64_t v9;

  v2 = type metadata accessor for Participant(0);
  v3 = MEMORY[0x1E0C80A78](v2);
  MEMORY[0x1E0C80A78](v3);
  v4 = type metadata accessor for Participant.State(0);
  v5 = MEMORY[0x1E0C80A78](v4);
  MEMORY[0x1E0C80A78](v5);
  outlined init with copy of ConversationControlsAppLaunchButtonType(a1, (uint64_t)&v9 - v6, v7);
  v8 = (char *)sub_1BD33AD98 + 4 * byte_1BD659300[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BD33AD98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;

  v5 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v3, v5);
  outlined init with copy of ConversationControlsAppLaunchButtonType(v1, v0, type metadata accessor for Participant);
  outlined destroy of RemoteControlRequest(v0, type metadata accessor for Participant);
  Participant.isActive.getter();
  v7 = v6;
  outlined init with copy of ConversationControlsAppLaunchButtonType(v1, v2, type metadata accessor for Participant);
  if ((v7 & 1) != 0)
  {
    outlined destroy of RemoteControlRequest(v2, type metadata accessor for Participant);
  }
  else
  {
    Participant.isActive.getter();
    v9 = v8;
    outlined destroy of RemoteControlRequest(v2, type metadata accessor for Participant);
    if ((v9 & 1) != 0)
    {
      v10 = 0;
      return v10 & 1;
    }
  }
  Participant.contactDetails.getter();
  v12 = *(void **)(v4 - 136);
  v11 = *(_QWORD *)(v4 - 128);
  v13 = *(_QWORD *)(v4 - 120);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  Participant.contactDetails.getter();
  v15 = *(void **)(v4 - 192);
  v14 = *(_QWORD *)(v4 - 184);
  v16 = *(_QWORD *)(v4 - 176);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if (v14 == v11 && v16 == v13)
    v10 = 0;
  else
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10 & 1;
}

uint64_t sub_1BD33AEFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int EnumCaseMultiPayload;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
  v5 = v3 + *(int *)(v4 + 48);
  outlined consume of Participant.CopresenceInfo?(*(_QWORD *)(v3 + *(int *)(v4 + 64)), *(_QWORD *)(v3 + *(int *)(v4 + 64) + 8));
  outlined destroy of Participant.MediaInfo(v5);
  v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v3, v6);
  outlined init with copy of ConversationControlsAppLaunchButtonType(v1, v0, type metadata accessor for Participant);
  outlined init with copy of ConversationControlsAppLaunchButtonType(v0, v2, type metadata accessor for Participant.State);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  return ((uint64_t (*)(void))((char *)sub_1BD33AFA8 + 4 * byte_1BD659307[EnumCaseMultiPayload]))();
}

void sub_1BD33AFA8()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;

  v2(v1, v3);
  outlined destroy of RemoteControlRequest(v0, type metadata accessor for Participant);
  JUMPOUT(0x1BD33AED4);
}

void sub_1BD33AFCC()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
  v4 = v0 + *(int *)(v3 + 48);
  outlined consume of Participant.CopresenceInfo?(*(_QWORD *)(v0 + *(int *)(v3 + 64)), *(_QWORD *)(v0 + *(int *)(v3 + 64) + 8));
  outlined destroy of Participant.MediaInfo(v4);
  v1(v0, v2);
  JUMPOUT(0x1BD33ADC8);
}

void Array<A>.participants(notIn:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  OUTLINED_FUNCTION_93();
  v2 = v1;
  v4 = v3;
  v22 = OUTLINED_FUNCTION_14_2();
  v5 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UUID();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_0_7();
  v10 = *(_QWORD *)(v4 + 16);
  if (v10)
  {
    v20[1] = v2;
    v23 = MEMORY[0x1E0DEE9D8];
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v10, 0);
    OUTLINED_FUNCTION_37_3();
    v12 = v4 + v11;
    v21 = *(_QWORD *)(v5 + 72);
    do
    {
      outlined init with copy of ConversationControlsAppLaunchButtonType(v12, (uint64_t)v7, type metadata accessor for Participant);
      (*(void (**)(uint64_t, char *, uint64_t))(v9 + 16))(v0, &v7[*(int *)(v22 + 20)], v8);
      outlined destroy of RemoteControlRequest((uint64_t)v7, type metadata accessor for Participant);
      v13 = v23;
      if ((OUTLINED_FUNCTION_83_8() & 1) == 0)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(v13 + 16) + 1, 1);
        v13 = v23;
      }
      v15 = *(_QWORD *)(v13 + 16);
      v14 = *(_QWORD *)(v13 + 24);
      if (v15 >= v14 >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v14 > 1, v15 + 1, 1);
        v13 = v23;
      }
      *(_QWORD *)(v13 + 16) = v15 + 1;
      OUTLINED_FUNCTION_37_3();
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v9 + 32))(v13 + v16 + *(_QWORD *)(v9 + 72) * v15, v0, v8);
      v23 = v13;
      v12 += v21;
      --v10;
    }
    while (v10);
  }
  specialized Set.init<A>(_:)();
  v18 = v17;
  v19 = swift_bridgeObjectRetain();
  specialized _ArrayProtocol.filter(_:)(v19, v18);
  OUTLINED_FUNCTION_52_1();
}

uint64_t specialized MutableCollection<>.sort(by:)(uint64_t *a1, uint64_t (*a2)(_QWORD *))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v9[2];

  v4 = *(_QWORD *)(type metadata accessor for Participant(0) - 8);
  v5 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    specialized _ContiguousArrayBuffer._consumeAndCreateNew()();
    v5 = v6;
  }
  v7 = *(_QWORD *)(v5 + 16);
  v9[0] = v5 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  v9[1] = v7;
  result = a2(v9);
  *a1 = v5;
  return result;
}

uint64_t specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()()
{
  return specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()((uint64_t (*)(_QWORD, uint64_t, uint64_t))specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:));
}

{
  return specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()((uint64_t (*)(_QWORD, uint64_t, uint64_t))specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:));
}

{
  return MEMORY[0x1E0DEC660]();
}

uint64_t specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(uint64_t (*a1)(_QWORD, uint64_t, uint64_t))
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;

  v2 = *v1;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v1 = v2;
  if ((result & 1) == 0)
    return a1(0, *(_QWORD *)(v2 + 16) + 1, 1);
  return result;
}

uint64_t specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(uint64_t a1)
{
  return specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(a1, (uint64_t (*)(BOOL))specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:));
}

{
  return specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(a1, (uint64_t (*)(BOOL))specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:));
}

uint64_t specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(uint64_t result, uint64_t (*a2)(BOOL))
{
  uint64_t v2;
  unint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)v2 + 24);
  if (result + 1 > (uint64_t)(v3 >> 1))
    return a2(v3 > 1);
  return result;
}

void specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);

  v3 = OUTLINED_FUNCTION_4_109(a1);
  type metadata accessor for Participant(v3);
  OUTLINED_FUNCTION_10_88();
  outlined init with take of StagedCollaboration(v1, v5 + *(_QWORD *)(v4 + 72) * v2, v6);
}

uint64_t outlined destroy of Participant.ScreenInfo?(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t outlined init with copy of Participant.ScreenInfo?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_4_109(a1);
  type metadata accessor for UUID();
  OUTLINED_FUNCTION_10_88();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 32))(v3 + *(_QWORD *)(v4 + 72) * v2, v1);
}

BOOL partial apply for closure #1 in Array<A>.arrayCloselyMatching(_:)()
{
  return closure #1 in Array<A>.arrayCloselyMatching(_:)();
}

uint64_t partial apply for closure #2 in Array<A>.arrayCloselyMatching(_:)()
{
  return closure #2 in Array<A>.arrayCloselyMatching(_:)() & 1;
}

Swift::Int specialized UnsafeMutableBufferPointer._stableSortImpl(by:)(uint64_t *a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  Swift::Int v49;
  Swift::Int result;
  unint64_t v51;
  Swift::Int v52;
  char *v53;
  Swift::Int v54;
  uint64_t v55;
  Swift::Int v56;
  Swift::Int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  Swift::Int v65;
  Swift::Int v66;
  uint64_t v67;
  char *v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  Swift::Int v75;
  Swift::Int v76;
  unint64_t v77;
  uint64_t v79;
  Swift::Int v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  char *v87;
  char *v88;
  Swift::Int v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  BOOL v101;
  unint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  BOOL v111;
  uint64_t v112;
  char v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  BOOL v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  char *v137;
  char *v138;
  Swift::Int v139;
  unint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  _QWORD *v145;
  unint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  Swift::Int v151;
  char *v152;
  Swift::Int v153;
  char *v154;
  uint64_t v155;
  char *v156;
  char *v157;
  Swift::Int v158;
  char *v159;
  char *v160;
  uint64_t v161;
  char *v162;
  unint64_t v163;
  uint64_t v164;
  char *v165;
  char *v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  char *v174;
  uint64_t v175;
  Swift::Int v176;
  uint64_t *v177;
  char *v178;
  char *v179;
  char *v180;
  uint64_t v181;
  char *v182;
  char *v183;
  char *v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  Swift::Int v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;

  v170 = type metadata accessor for PersonNameComponents();
  v169 = *(_QWORD *)(v170 - 8);
  MEMORY[0x1E0C80A78](v170);
  v3 = (char *)&v148 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v192 = type metadata accessor for Participant.State(0);
  v4 = MEMORY[0x1E0C80A78](v192);
  v178 = (char *)&v148 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v4);
  v182 = (char *)&v148 - v7;
  v8 = MEMORY[0x1E0C80A78](v6);
  v166 = (char *)&v148 - v9;
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v148 - v11;
  v13 = MEMORY[0x1E0C80A78](v10);
  v157 = (char *)&v148 - v14;
  v15 = MEMORY[0x1E0C80A78](v13);
  v159 = (char *)&v148 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v152 = (char *)&v148 - v18;
  MEMORY[0x1E0C80A78](v17);
  v161 = (uint64_t)&v148 - v19;
  v181 = type metadata accessor for Participant(0);
  v164 = *(_QWORD *)(v181 - 8);
  v20 = MEMORY[0x1E0C80A78](v181);
  v155 = (uint64_t)&v148 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x1E0C80A78](v20);
  v185 = (char *)&v148 - v23;
  v24 = MEMORY[0x1E0C80A78](v22);
  v183 = (char *)&v148 - v25;
  v26 = MEMORY[0x1E0C80A78](v24);
  v28 = (char *)&v148 - v27;
  v29 = MEMORY[0x1E0C80A78](v26);
  v31 = (char *)&v148 - v30;
  v32 = MEMORY[0x1E0C80A78](v29);
  v34 = (char *)&v148 - v33;
  v35 = MEMORY[0x1E0C80A78](v32);
  v180 = (char *)&v148 - v36;
  v37 = MEMORY[0x1E0C80A78](v35);
  v160 = (char *)&v148 - v38;
  v39 = MEMORY[0x1E0C80A78](v37);
  v156 = (char *)&v148 - v40;
  v41 = MEMORY[0x1E0C80A78](v39);
  v172 = (uint64_t)&v148 - v42;
  v43 = MEMORY[0x1E0C80A78](v41);
  v167 = (uint64_t)&v148 - v44;
  v45 = MEMORY[0x1E0C80A78](v43);
  v47 = (char *)&v148 - v46;
  MEMORY[0x1E0C80A78](v45);
  v162 = (char *)&v148 - v48;
  v177 = a1;
  v49 = a1[1];
  result = _minimumMergeRunLength(_:)(v49);
  if (result >= v49)
  {
    if (v49 < 0)
      goto LABEL_133;
    if (v49)
      return specialized MutableCollection<>._insertionSort(within:sortedEnd:by:)(0, v49, 1, v177);
    return result;
  }
  v151 = result;
  v149 = specialized static Array._allocateUninitialized(_:)(v49 / 2);
  v163 = v51;
  v150 = v49;
  if (v49 <= 0)
    goto LABEL_96;
  v52 = 0;
  v53 = (char *)MEMORY[0x1E0DEE9D8];
  v54 = v49;
  v168 = v3;
  v173 = v12;
  v174 = v28;
  v184 = v31;
  v179 = v34;
  v165 = v47;
  v55 = (uint64_t)v162;
  while (1)
  {
    v56 = v52 + 1;
    v154 = v53;
    v158 = v52;
    if (v52 + 1 >= v54)
    {
      v65 = v52 + 1;
      v69 = v177;
      goto LABEL_29;
    }
    v189 = v54;
    v57 = *v177;
    v58 = v52;
    v59 = (uint64_t)v47;
    v60 = *(_QWORD *)(v164 + 72);
    v61 = v55;
    outlined init with copy of ConversationControlsAppLaunchButtonType(*v177 + v60 * v56, v55, type metadata accessor for Participant);
    v153 = v57;
    v191 = v60;
    v62 = v57 + v60 * v58;
    v47 = (char *)v59;
    outlined init with copy of ConversationControlsAppLaunchButtonType(v62, v59, type metadata accessor for Participant);
    v63 = v171;
    closure #1 in Array<A>.sortForInCallControls()(v61);
    LODWORD(v188) = v64;
    v171 = v63;
    if (v63)
      break;
    outlined destroy of RemoteControlRequest(v59, type metadata accessor for Participant);
    outlined destroy of RemoteControlRequest(v61, type metadata accessor for Participant);
    v65 = v58 + 2;
    if (v58 + 2 < v189)
    {
      v186 = v191 * v56;
      v66 = v153;
      v175 = v191 * v65;
      v176 = v58 + 2;
      v67 = v167;
      outlined init with copy of ConversationControlsAppLaunchButtonType(v153 + v191 * v65, v167, type metadata accessor for Participant);
      outlined init with copy of ConversationControlsAppLaunchButtonType(v66 + v186, v172, type metadata accessor for Participant);
      outlined init with copy of ConversationControlsAppLaunchButtonType(v67, v161, type metadata accessor for Participant.State);
      v68 = (char *)&loc_1BD33BA04 + dword_1BD33D51C[swift_getEnumCaseMultiPayload()];
      __asm { BR              X9 }
    }
    v52 = v58;
    v69 = v177;
    v12 = v173;
    if ((v188 & 1) == 0)
      goto LABEL_27;
    if (v65 < v58)
      goto LABEL_137;
    if (v58 < v65)
    {
      v70 = 0;
      v71 = v191 * (v58 + 1);
      v72 = v65 * v191;
      v73 = v58;
      v74 = v58 * v191;
      do
      {
        if (v73 != v65 + v70 - 1)
        {
          v75 = v153;
          if (!v153)
          {
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
            JUMPOUT(0x1BD33D51CLL);
          }
          v76 = v65;
          v77 = v153 + v74;
          v190 = v153 + v71;
          outlined init with take of StagedCollaboration(v153 + v74, v155, type metadata accessor for Participant);
          if (v74 < v71 || v77 >= v75 + v72)
          {
            v79 = v190;
            swift_arrayInitWithTakeFrontToBack();
          }
          else
          {
            v79 = v190;
            if (v74 != v71)
              swift_arrayInitWithTakeBackToFront();
          }
          outlined init with take of StagedCollaboration(v155, v79, type metadata accessor for Participant);
          v65 = v76;
          v69 = v177;
        }
        ++v73;
        --v70;
        v71 -= v191;
        v72 -= v191;
        v74 += v191;
      }
      while (v73 < v65 + v70);
      v12 = v173;
      v31 = v184;
      v34 = v179;
      v47 = v165;
      v52 = v158;
    }
    else
    {
LABEL_27:
      v31 = v184;
    }
    v54 = v189;
LABEL_29:
    if (v65 < v54)
    {
      v101 = __OFSUB__(v65, v52);
      v80 = v65 - v52;
      if (v101)
        goto LABEL_134;
      if (v80 >= v151)
      {
        v52 = v158;
      }
      else
      {
        if (__OFADD__(v158, v151))
          goto LABEL_135;
        if (v158 + v151 < v54)
          v54 = v158 + v151;
        if (v54 < v158)
        {
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
          goto LABEL_138;
        }
        if (v65 != v54)
        {
          v81 = *(_QWORD *)(v164 + 72);
          v190 = v81 * (v65 - 1);
          v175 = v81;
          v189 = v65 * v81;
          v153 = v54;
          v176 = v65;
          v188 = v158;
          v82 = *v69;
          v187 = v65 * v81;
          outlined init with copy of ConversationControlsAppLaunchButtonType(v65 * v81 + v82, (uint64_t)v34, type metadata accessor for Participant);
          v191 = 0;
          v186 = v190;
          outlined init with copy of ConversationControlsAppLaunchButtonType(v190 + v82, (uint64_t)v31, type metadata accessor for Participant);
          outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v34, (uint64_t)v12, type metadata accessor for Participant.State);
          v83 = (char *)&loc_1BD33C624 + dword_1BD33D58C[swift_getEnumCaseMultiPayload()];
          __asm { BR              X9 }
        }
        v52 = v158;
      }
    }
    if (v65 < v52)
      goto LABEL_132;
    v176 = v65;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
    {
      v53 = v154;
    }
    else
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *((_QWORD *)v154 + 2) + 1, 1, v154);
      v53 = v137;
    }
    v85 = *((_QWORD *)v53 + 2);
    v84 = *((_QWORD *)v53 + 3);
    v86 = v85 + 1;
    v55 = (uint64_t)v162;
    if (v85 >= v84 >> 1)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v84 > 1, v85 + 1, 1, v53);
      v55 = (uint64_t)v162;
      v53 = v138;
    }
    *((_QWORD *)v53 + 2) = v86;
    v87 = v53 + 32;
    v88 = &v53[16 * v85 + 32];
    v89 = v176;
    *(_QWORD *)v88 = v158;
    *((_QWORD *)v88 + 1) = v89;
    if (v85)
    {
      while (1)
      {
        v90 = v86 - 1;
        if (v86 >= 4)
        {
          v95 = &v87[16 * v86];
          v96 = *((_QWORD *)v95 - 8);
          v97 = *((_QWORD *)v95 - 7);
          v101 = __OFSUB__(v97, v96);
          v98 = v97 - v96;
          if (v101)
            goto LABEL_117;
          v100 = *((_QWORD *)v95 - 6);
          v99 = *((_QWORD *)v95 - 5);
          v101 = __OFSUB__(v99, v100);
          v93 = v99 - v100;
          v94 = v101;
          if (v101)
            goto LABEL_118;
          v102 = v86 - 2;
          v103 = &v87[16 * v86 - 32];
          v105 = *(_QWORD *)v103;
          v104 = *((_QWORD *)v103 + 1);
          v101 = __OFSUB__(v104, v105);
          v106 = v104 - v105;
          if (v101)
            goto LABEL_119;
          v101 = __OFADD__(v93, v106);
          v107 = v93 + v106;
          if (v101)
            goto LABEL_121;
          if (v107 >= v98)
          {
            v125 = &v87[16 * v90];
            v127 = *(_QWORD *)v125;
            v126 = *((_QWORD *)v125 + 1);
            v101 = __OFSUB__(v126, v127);
            v128 = v126 - v127;
            if (v101)
              goto LABEL_127;
            v118 = v93 < v128;
            goto LABEL_77;
          }
        }
        else
        {
          if (v86 != 3)
          {
            v119 = *((_QWORD *)v53 + 4);
            v120 = *((_QWORD *)v53 + 5);
            v101 = __OFSUB__(v120, v119);
            v112 = v120 - v119;
            v113 = v101;
            goto LABEL_71;
          }
          v92 = *((_QWORD *)v53 + 4);
          v91 = *((_QWORD *)v53 + 5);
          v101 = __OFSUB__(v91, v92);
          v93 = v91 - v92;
          v94 = v101;
        }
        if ((v94 & 1) != 0)
          goto LABEL_120;
        v102 = v86 - 2;
        v108 = &v87[16 * v86 - 32];
        v110 = *(_QWORD *)v108;
        v109 = *((_QWORD *)v108 + 1);
        v111 = __OFSUB__(v109, v110);
        v112 = v109 - v110;
        v113 = v111;
        if (v111)
          goto LABEL_122;
        v114 = &v87[16 * v90];
        v116 = *(_QWORD *)v114;
        v115 = *((_QWORD *)v114 + 1);
        v101 = __OFSUB__(v115, v116);
        v117 = v115 - v116;
        if (v101)
          goto LABEL_124;
        if (__OFADD__(v112, v117))
          goto LABEL_126;
        if (v112 + v117 >= v93)
        {
          v118 = v93 < v117;
LABEL_77:
          if (v118)
            v90 = v102;
          goto LABEL_79;
        }
LABEL_71:
        if ((v113 & 1) != 0)
          goto LABEL_123;
        v121 = &v87[16 * v90];
        v123 = *(_QWORD *)v121;
        v122 = *((_QWORD *)v121 + 1);
        v101 = __OFSUB__(v122, v123);
        v124 = v122 - v123;
        if (v101)
          goto LABEL_125;
        if (v124 < v112)
          goto LABEL_88;
LABEL_79:
        v129 = v90 - 1;
        if (v90 - 1 >= v86)
        {
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
          goto LABEL_136;
        }
        if (!*v177)
        {
          __break(1u);
          goto LABEL_140;
        }
        v130 = v53;
        v131 = &v87[16 * v129];
        v132 = *(_QWORD *)v131;
        v133 = &v87[16 * v90];
        v134 = *((_QWORD *)v133 + 1);
        v135 = v171;
        specialized _merge<A>(low:mid:high:buffer:by:)(*v177 + *(_QWORD *)(v164 + 72) * *(_QWORD *)v131, *v177 + *(_QWORD *)(v164 + 72) * *(_QWORD *)v133, *v177 + *(_QWORD *)(v164 + 72) * v134, v163);
        v171 = v135;
        if (v135)
          goto LABEL_94;
        if (v134 < v132)
          goto LABEL_114;
        if (v90 > *((_QWORD *)v130 + 2))
          goto LABEL_115;
        *(_QWORD *)v131 = v132;
        *(_QWORD *)&v87[16 * v129 + 8] = v134;
        v136 = *((_QWORD *)v130 + 2);
        if (v90 >= v136)
          goto LABEL_116;
        v86 = v136 - 1;
        memmove(&v87[16 * v90], v133 + 16, 16 * (v136 - 1 - v90));
        v53 = v130;
        *((_QWORD *)v130 + 2) = v136 - 1;
        v34 = v179;
        v47 = v165;
        v55 = (uint64_t)v162;
        if (v136 <= 2)
          goto LABEL_88;
      }
    }
    v86 = 1;
LABEL_88:
    v54 = v177[1];
    v52 = v176;
    v31 = v184;
    if (v176 >= v54)
      goto LABEL_97;
  }
  outlined destroy of RemoteControlRequest(v59, type metadata accessor for Participant);
  outlined destroy of RemoteControlRequest(v61, type metadata accessor for Participant);
LABEL_94:
  swift_bridgeObjectRelease();
  if (v150 < -1)
  {
    __break(1u);
LABEL_96:
    v53 = (char *)MEMORY[0x1E0DEE9D8];
    v86 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_97:
    if (v86 >= 2)
    {
      v139 = *v177;
      do
      {
        v140 = v86 - 2;
        if (v86 < 2)
          goto LABEL_128;
        if (!v139)
          goto LABEL_141;
        v141 = (uint64_t)v53;
        v142 = *(_QWORD *)&v53[16 * v140 + 32];
        v143 = *(_QWORD *)&v53[16 * v86 + 24];
        v144 = v171;
        specialized _merge<A>(low:mid:high:buffer:by:)(v139 + *(_QWORD *)(v164 + 72) * v142, v139 + *(_QWORD *)(v164 + 72) * *(_QWORD *)&v53[16 * v86 + 16], v139 + *(_QWORD *)(v164 + 72) * v143, v163);
        v171 = v144;
        if (v144)
          goto LABEL_94;
        if (v143 < v142)
          goto LABEL_129;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          specialized _ArrayBuffer._consumeAndCreateNew()(v141);
          v141 = v147;
        }
        if (v140 >= *(_QWORD *)(v141 + 16))
          goto LABEL_130;
        v145 = (_QWORD *)(v141 + 32 + 16 * v140);
        *v145 = v142;
        v145[1] = v143;
        v146 = *(_QWORD *)(v141 + 16);
        if (v86 > v146)
          goto LABEL_131;
        memmove((void *)(v141 + 32 + 16 * (v86 - 1)), (const void *)(v141 + 32 + 16 * v86), 16 * (v146 - v86));
        v53 = (char *)v141;
        *(_QWORD *)(v141 + 16) = v146 - 1;
        v86 = v146 - 1;
      }
      while (v146 > 2);
    }
    swift_bridgeObjectRelease();
    if (v150 < -1)
    {
LABEL_138:
      __break(1u);
      JUMPOUT(0x1BD33D50CLL);
    }
  }
  *(_QWORD *)(v149 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t specialized MutableCollection<>._insertionSort(within:sortedEnd:by:)(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  _QWORD v36[3];
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  _QWORD *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v37 = a1;
  v40 = type metadata accessor for PersonNameComponents();
  v39 = *(_QWORD *)(v40 - 8);
  MEMORY[0x1E0C80A78](v40);
  v47 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Participant.State(0);
  v9 = MEMORY[0x1E0C80A78](v8);
  v50 = (char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v52 = (char *)v36 - v12;
  v13 = MEMORY[0x1E0C80A78](v11);
  v38 = (char *)v36 - v14;
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v36 - v15;
  v49 = type metadata accessor for Participant(0);
  v17 = MEMORY[0x1E0C80A78](v49);
  v19 = (char *)v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x1E0C80A78](v17);
  v51 = (char *)v36 - v21;
  v22 = MEMORY[0x1E0C80A78](v20);
  v53 = (char *)v36 - v23;
  v24 = MEMORY[0x1E0C80A78](v22);
  v26 = (char *)v36 - v25;
  v27 = MEMORY[0x1E0C80A78](v24);
  v60 = (uint64_t)v36 - v28;
  result = MEMORY[0x1E0C80A78](v27);
  v48 = a3;
  v36[2] = a2;
  if (a3 != a2)
  {
    v32 = (char *)v36 - v31;
    v33 = *(_QWORD *)(v30 + 72);
    v58 = v33 * (v48 - 1);
    v46 = v33;
    v57 = v33 * v48;
    v42 = a4;
    v44 = v8;
    v41 = v16;
    v45 = v26;
    v56 = (char *)v36 - v31;
    v43 = v19;
    v59 = 0;
    v55 = v37;
    v34 = *a4;
    v54 = v33 * v48;
    outlined init with copy of ConversationControlsAppLaunchButtonType(v33 * v48 + v34, (uint64_t)v36 - v31, type metadata accessor for Participant);
    outlined init with copy of ConversationControlsAppLaunchButtonType(v58 + v34, v60, type metadata accessor for Participant);
    outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v32, (uint64_t)v16, type metadata accessor for Participant.State);
    v35 = (char *)&loc_1BD33F5E4 + *((int *)qword_1BD33FFE0 + swift_getEnumCaseMultiPayload());
    __asm { BR              X9 }
  }
  return result;
}

{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t, uint64_t);
  char *v20;
  void (*v21)(char *, uint64_t);
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  _QWORD *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;

  v28 = a1;
  v7 = type metadata accessor for IndexPath();
  v36 = *(_QWORD **)(v7 - 8);
  v8 = MEMORY[0x1E0C80A78](v7);
  v35 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v32 = (char *)&v26 - v11;
  result = MEMORY[0x1E0C80A78](v10);
  v31 = (char *)&v26 - v13;
  v34 = a3;
  v27 = a2;
  if (a3 != a2)
  {
    v14 = v36[9];
    v29 = (void (*)(char *, uint64_t, uint64_t))v36[2];
    v30 = a4;
    v38 = v14 * (v34 - 1);
    v33 = v14;
    v37 = v14 * v34;
    while (2)
    {
      v15 = 0;
      v16 = v28;
      do
      {
        v17 = *a4;
        v18 = v31;
        v19 = v29;
        v29(v31, v37 + v15 + *a4, v7);
        v20 = v32;
        v19(v32, v38 + v15 + v17, v7);
        _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type IndexPath and conformance IndexPath, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1658], MEMORY[0x1E0CB1678]);
        LOBYTE(v17) = dispatch thunk of static Comparable.< infix(_:_:)();
        v21 = (void (*)(char *, uint64_t))v36[1];
        v22 = v20;
        a4 = v30;
        v21(v22, v7);
        result = ((uint64_t (*)(char *, uint64_t))v21)(v18, v7);
        if ((v17 & 1) == 0)
          break;
        v23 = *a4;
        if (!*a4)
        {
          __break(1u);
          return result;
        }
        v24 = v23 + v38 + v15;
        v25 = (void (*)(char *, uint64_t, uint64_t))v36[4];
        v25(v35, v23 + v37 + v15, v7);
        swift_arrayInitWithTakeFrontToBack();
        result = ((uint64_t (*)(uint64_t, char *, uint64_t))v25)(v24, v35, v7);
        v15 -= v33;
        ++v16;
      }
      while (v34 != v16);
      v38 += v33;
      v37 += v33;
      if (++v34 != v27)
        continue;
      break;
    }
  }
  return result;
}

void _s10Foundation4UUIDVACSHAAWlTm_3(unint64_t *a1, uint64_t a2)
{
  uint64_t v4;

  if (!*a1)
  {
    v4 = type metadata accessor for UUID();
    atomic_store(MEMORY[0x1C3B750C8](a2, v4), a1);
  }
  OUTLINED_FUNCTION_0();
}

BOOL static ScreenSharingInteractionTransport.Errors.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void ScreenSharingInteractionTransport.Errors.hash(into:)(uint64_t a1, char a2)
{
  Hasher._combine(_:)(a2 & 1);
  OUTLINED_FUNCTION_0();
}

Swift::Int ScreenSharingInteractionTransport.Errors.hashValue.getter(char a1)
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1 & 1);
  return Hasher._finalize()();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance ScreenSharingInteractionTransport.Errors(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static ScreenSharingInteractionTransport.Errors.== infix(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance ScreenSharingInteractionTransport.Errors()
{
  char *v0;

  return ScreenSharingInteractionTransport.Errors.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance ScreenSharingInteractionTransport.Errors(uint64_t a1)
{
  char *v1;

  ScreenSharingInteractionTransport.Errors.hash(into:)(a1, *v1);
}

uint64_t key path getter for ScreenSharingInteractionTransport.isSendingInteractionData : ScreenSharingInteractionTransport@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 184))();
  *a2 = result & 1;
  return result;
}

void key path setter for ScreenSharingInteractionTransport.isSendingInteractionData : ScreenSharingInteractionTransport()
{
  ScreenSharingInteractionTransport.isSendingInteractionData.setter();
}

uint64_t ScreenSharingInteractionTransport.isSendingInteractionData.getter()
{
  uint64_t v0;

  swift_getKeyPath();
  OUTLINED_FUNCTION_112_9();
  OUTLINED_FUNCTION_19();
  return *(unsigned __int8 *)(v0 + 40);
}

void sub_1BD342078()
{
  _BYTE *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))(v1 + 184))() & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD3420A0()
{
  ScreenSharingInteractionTransport.isSendingInteractionData.setter();
  OUTLINED_FUNCTION_0();
}

void ScreenSharingInteractionTransport.isSendingInteractionData.setter()
{
  ScreenSharingInteractionTransport.isSendingInteractionData.setter();
}

{
  uint64_t v0;

  swift_getKeyPath();
  OUTLINED_FUNCTION_374_0(*(uint64_t (**)(void))(*(_QWORD *)v0 + 432));
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_14_1();
}

uint64_t key path getter for ScreenSharingInteractionTransport.isReceivingInteractionData : ScreenSharingInteractionTransport@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 232))();
  *a2 = result & 1;
  return result;
}

void key path setter for ScreenSharingInteractionTransport.isReceivingInteractionData : ScreenSharingInteractionTransport()
{
  ScreenSharingInteractionTransport.isReceivingInteractionData.setter();
}

uint64_t ScreenSharingInteractionTransport.isReceivingInteractionData.getter()
{
  uint64_t v0;

  swift_getKeyPath();
  OUTLINED_FUNCTION_112_9();
  OUTLINED_FUNCTION_19();
  return *(unsigned __int8 *)(v0 + 41);
}

void sub_1BD34215C()
{
  _BYTE *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))(v1 + 232))() & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD342184()
{
  ScreenSharingInteractionTransport.isReceivingInteractionData.setter();
  OUTLINED_FUNCTION_0();
}

void ScreenSharingInteractionTransport.isReceivingInteractionData.setter()
{
  ScreenSharingInteractionTransport.isSendingInteractionData.setter();
}

uint64_t ScreenSharingInteractionTransport.isSendingInteractionDataDebouncer.getter()
{
  swift_getKeyPath();
  OUTLINED_FUNCTION_112_9();
  OUTLINED_FUNCTION_19();
  return swift_retain();
}

void key path setter for ScreenSharingInteractionTransport.isSendingInteractionDataDebouncer : ScreenSharingInteractionTransport()
{
  swift_retain();
  ScreenSharingInteractionTransport.isSendingInteractionDataDebouncer.setter();
}

void ScreenSharingInteractionTransport.isSendingInteractionDataDebouncer.setter()
{
  uint64_t v0;

  swift_getKeyPath();
  OUTLINED_FUNCTION_374_0(*(uint64_t (**)(void))(*(_QWORD *)v0 + 432));
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_14_1();
}

uint64_t closure #1 in ScreenSharingInteractionTransport.isSendingInteractionDataDebouncer.setter(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)(a1 + 64) = a2;
  swift_retain();
  return swift_release();
}

void (*ScreenSharingInteractionTransport._firewall.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  OUTLINED_FUNCTION_2_0();
  v4 = MEMORY[0x1C3B752C0](v1 + 80);
  v5 = *(_QWORD *)(v1 + 88);
  v3[3] = v4;
  v3[4] = v5;
  return ScreenSharingInteractionTransport._firewall.modify;
}

void ScreenSharingInteractionTransport._firewall.modify(uint64_t a1, char a2)
{
  void *v3;

  v3 = *(void **)a1;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 40) + 88) = *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_248();
  }
  else
  {
    OUTLINED_FUNCTION_248();
    OUTLINED_FUNCTION_10();
  }
  OUTLINED_FUNCTION_4_2(v3);
}

uint64_t key path getter for ScreenSharingInteractionTransport.firewall : ScreenSharingInteractionTransport@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 376))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t key path setter for ScreenSharingInteractionTransport.firewall : ScreenSharingInteractionTransport(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)a2 + 384);
  v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

uint64_t ScreenSharingInteractionTransport.firewall.getter()
{
  uint64_t v0;

  swift_getKeyPath();
  OUTLINED_FUNCTION_112_9();
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_1();
  return MEMORY[0x1C3B752C0](v0 + 80);
}

void sub_1BD342488()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))(v1 + 376))();
  v0[1] = v2;
  OUTLINED_FUNCTION_0();
}

uint64_t ScreenSharingInteractionTransport.firewall.setter()
{
  uint64_t v0;

  swift_getKeyPath();
  OUTLINED_FUNCTION_374_0(*(uint64_t (**)(void))(*(_QWORD *)v0 + 432));
  OUTLINED_FUNCTION_17_22();
  return swift_unknownObjectRelease();
}

uint64_t closure #1 in ScreenSharingInteractionTransport.firewall.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  *(_QWORD *)(a1 + 88) = a3;
  return swift_unknownObjectWeakAssign();
}

uint64_t partial apply for closure #1 in ScreenSharingInteractionTransport.firewall.setter()
{
  uint64_t *v0;

  return closure #1 in ScreenSharingInteractionTransport.firewall.setter(v0[2], v0[3], v0[4]);
}

void (*ScreenSharingInteractionTransport.firewall.modify(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;

  v2 = v1;
  v4 = malloc(0x40uLL);
  *a1 = v4;
  v4[4] = v2;
  swift_getKeyPath();
  (*(void (**)(void))(*(_QWORD *)v2 + 424))();
  OUTLINED_FUNCTION_17_22();
  v4[5] = OBJC_IVAR____TtC15ConversationKit33ScreenSharingInteractionTransport___observationRegistrar;
  *v4 = v2;
  swift_getKeyPath();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ScreenSharingInteractionTransport and conformance ScreenSharingInteractionTransport, (void (*)(uint64_t))type metadata accessor for ScreenSharingInteractionTransport);
  v4[6] = v5;
  ObservationRegistrar.willSet<A, B>(_:keyPath:)();
  OUTLINED_FUNCTION_22();
  v4[7] = ScreenSharingInteractionTransport._firewall.modify(v4);
  return ScreenSharingInteractionTransport.firewall.modify;
}

void ScreenSharingInteractionTransport.firewall.modify(_QWORD *a1)
{
  _QWORD *v1;

  v1 = (_QWORD *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 56))(*a1, 0);
  *v1 = v1[4];
  swift_getKeyPath();
  OUTLINED_FUNCTION_55_4();
  ObservationRegistrar.didSet<A, B>(_:keyPath:)();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_4_2(v1);
}

uint64_t type metadata accessor for ScreenSharingInteractionTransport()
{
  uint64_t result;

  result = type metadata singleton initialization cache for ScreenSharingInteractionTransport;
  if (!type metadata singleton initialization cache for ScreenSharingInteractionTransport)
    return swift_getSingletonMetadata();
  return result;
}

void ScreenSharingInteractionTransport.__allocating_init(session:unreliableMessenger:reliableMessenger:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_allocObject();
  ScreenSharingInteractionTransport.init(session:unreliableMessenger:reliableMessenger:)(a1, a2, a3);
  OUTLINED_FUNCTION_18();
}

void ScreenSharingInteractionTransport.init(session:unreliableMessenger:reliableMessenger:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_WORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 88) = 0;
  *(_QWORD *)(v3 + 48) = 2000000000000000000;
  *(_QWORD *)(v3 + 56) = 0;
  *(_QWORD *)(v3 + 64) = 0;
  *(_QWORD *)(v3 + 72) = 0;
  swift_unknownObjectWeakInit();
  ObservationRegistrar.init()();
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = a2;
  *(_QWORD *)(v3 + 32) = a3;
  OUTLINED_FUNCTION_18();
}

void ScreenSharingInteractionTransport.didSendData()()
{
  ScreenSharingInteractionTransport.didSendData()();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  v2 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_58_5();
  v4 = type metadata accessor for TaskPriority();
  OUTLINED_FUNCTION_77_0(v1, v5, v6, v4);
  OUTLINED_FUNCTION_48_2();
  OUTLINED_FUNCTION_11_1();
  v7 = static MainActor.shared.getter();
  v8 = (_QWORD *)OUTLINED_FUNCTION_15();
  v9 = MEMORY[0x1E0DF06E8];
  v8[2] = v7;
  v8[3] = v9;
  v8[4] = v2;
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
  swift_release();
  OUTLINED_FUNCTION_91();
}

uint64_t closure #1 in ScreenSharingInteractionTransport.didSendData()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[2] = a4;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  v4[3] = swift_task_alloc();
  v4[4] = type metadata accessor for MainActor();
  v4[5] = static MainActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  return swift_task_switch();
}

uint64_t closure #1 in ScreenSharingInteractionTransport.didSendData()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;

  v2 = OUTLINED_FUNCTION_281_2();
  if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)v0 + 184))(v2) & 1) == 0)
    ScreenSharingInteractionTransport.isSendingInteractionData.setter();
  v3 = ScreenSharingInteractionTransport.isSendingInteractionDataDebouncer.getter();
  if (v3)
  {
    v4 = v3;
    v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
    MEMORY[0x1C3B73268](v4, MEMORY[0x1E0DEE9C0] + 8, v5, MEMORY[0x1E0DEDB38]);
    OUTLINED_FUNCTION_43();
  }
  v6 = *(_QWORD *)(v1 + 24);
  v7 = *(_QWORD *)(v1 + 16);
  v8 = OUTLINED_FUNCTION_415();
  __swift_storeEnumTagSinglePayload(v6, 1, 1, v8);
  OUTLINED_FUNCTION_11_1();
  v9 = static MainActor.shared.getter();
  v10 = (_QWORD *)OUTLINED_FUNCTION_15();
  v11 = MEMORY[0x1E0DF06E8];
  v10[2] = v9;
  v10[3] = v11;
  v10[4] = v7;
  _sScTss5Error_pRs_rlE8priority9operationScTyxsAA_pGScPSg_xyYaKYAcntcfCyt_Tgm5(v6, (uint64_t)&async function pointer to partial apply for closure #1 in closure #1 in ScreenSharingInteractionTransport.didSendData(), (uint64_t)v10);
  ScreenSharingInteractionTransport.isSendingInteractionDataDebouncer.setter();
  OUTLINED_FUNCTION_12();
  return OUTLINED_FUNCTION_14_3(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t closure #1 in closure #1 in ScreenSharingInteractionTransport.didSendData()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[2] = a4;
  v5 = type metadata accessor for ContinuousClock();
  v4[3] = v5;
  v4[4] = *(_QWORD *)(v5 - 8);
  v4[5] = swift_task_alloc();
  type metadata accessor for MainActor();
  v4[6] = static MainActor.shared.getter();
  v4[7] = dispatch thunk of Actor.unownedExecutor.getter();
  v4[8] = v6;
  return swift_task_switch();
}

uint64_t closure #1 in closure #1 in ScreenSharingInteractionTransport.didSendData()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  OUTLINED_FUNCTION_280_1();
  v1 = (_QWORD *)OUTLINED_FUNCTION_19_13();
  *(_QWORD *)(v0 + 72) = v1;
  v2 = OUTLINED_FUNCTION_139_6(v1, (uint64_t)closure #1 in closure #1 in ScreenSharingInteractionTransport.didSendData());
  return OUTLINED_FUNCTION_165_4(v2, v3, v4, v5, v6, v7);
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_107_7();
  OUTLINED_FUNCTION_103_6();
  OUTLINED_FUNCTION_4_41(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  return OUTLINED_FUNCTION_26_47();
}

{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_281_2();
  ScreenSharingInteractionTransport.isSendingInteractionData.setter();
  OUTLINED_FUNCTION_12();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_20();
  return OUTLINED_FUNCTION_1_8(v0);
}

{
  uint64_t v0;

  swift_release();
  OUTLINED_FUNCTION_29_0();
  return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v0 + 8));
}

void ScreenSharingInteractionTransport.didReceiveData()()
{
  ScreenSharingInteractionTransport.didSendData()();
}

uint64_t closure #1 in ScreenSharingInteractionTransport.didReceiveData()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[2] = a4;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  v4[3] = swift_task_alloc();
  v4[4] = type metadata accessor for MainActor();
  v4[5] = static MainActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  return swift_task_switch();
}

uint64_t closure #1 in ScreenSharingInteractionTransport.didReceiveData()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;

  v2 = OUTLINED_FUNCTION_281_2();
  if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)v0 + 232))(v2) & 1) == 0)
    ScreenSharingInteractionTransport.isReceivingInteractionData.setter();
  v3 = ScreenSharingInteractionTransport.isSendingInteractionDataDebouncer.getter();
  if (v3)
  {
    v4 = v3;
    v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
    MEMORY[0x1C3B73268](v4, MEMORY[0x1E0DEE9C0] + 8, v5, MEMORY[0x1E0DEDB38]);
    OUTLINED_FUNCTION_43();
  }
  v6 = *(_QWORD *)(v1 + 24);
  v7 = *(_QWORD *)(v1 + 16);
  v8 = OUTLINED_FUNCTION_415();
  __swift_storeEnumTagSinglePayload(v6, 1, 1, v8);
  OUTLINED_FUNCTION_11_1();
  v9 = static MainActor.shared.getter();
  v10 = (_QWORD *)OUTLINED_FUNCTION_15();
  v11 = MEMORY[0x1E0DF06E8];
  v10[2] = v9;
  v10[3] = v11;
  v10[4] = v7;
  _sScTss5Error_pRs_rlE8priority9operationScTyxsAA_pGScPSg_xyYaKYAcntcfCyt_Tgm5(v6, (uint64_t)&async function pointer to partial apply for closure #1 in closure #1 in ScreenSharingInteractionTransport.didReceiveData(), (uint64_t)v10);
  ScreenSharingInteractionTransport.isSendingInteractionDataDebouncer.setter();
  OUTLINED_FUNCTION_12();
  return OUTLINED_FUNCTION_14_3(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t closure #1 in closure #1 in ScreenSharingInteractionTransport.didReceiveData()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[2] = a4;
  v5 = type metadata accessor for ContinuousClock();
  v4[3] = v5;
  v4[4] = *(_QWORD *)(v5 - 8);
  v4[5] = swift_task_alloc();
  type metadata accessor for MainActor();
  v4[6] = static MainActor.shared.getter();
  v4[7] = dispatch thunk of Actor.unownedExecutor.getter();
  v4[8] = v6;
  return swift_task_switch();
}

uint64_t closure #1 in closure #1 in ScreenSharingInteractionTransport.didReceiveData()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  OUTLINED_FUNCTION_280_1();
  v1 = (_QWORD *)OUTLINED_FUNCTION_19_13();
  *(_QWORD *)(v0 + 72) = v1;
  v2 = OUTLINED_FUNCTION_139_6(v1, (uint64_t)closure #1 in closure #1 in ScreenSharingInteractionTransport.didReceiveData());
  return OUTLINED_FUNCTION_165_4(v2, v3, v4, v5, v6, v7);
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_107_7();
  OUTLINED_FUNCTION_103_6();
  OUTLINED_FUNCTION_4_41(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  return OUTLINED_FUNCTION_26_47();
}

{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_281_2();
  ScreenSharingInteractionTransport.isReceivingInteractionData.setter();
  OUTLINED_FUNCTION_12();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_20();
  return OUTLINED_FUNCTION_1_8(v0);
}

uint64_t ScreenSharingInteractionTransport.access<A>(keyPath:)()
{
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ScreenSharingInteractionTransport and conformance ScreenSharingInteractionTransport, (void (*)(uint64_t))type metadata accessor for ScreenSharingInteractionTransport);
  return ObservationRegistrar.access<A, B>(_:keyPath:)();
}

uint64_t ScreenSharingInteractionTransport.withMutation<A, B>(keyPath:_:)()
{
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ScreenSharingInteractionTransport and conformance ScreenSharingInteractionTransport, (void (*)(uint64_t))type metadata accessor for ScreenSharingInteractionTransport);
  return ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
}

void ScreenSharingInteractionTransport.deinit()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_285();
  OUTLINED_FUNCTION_53_2();
  OUTLINED_FUNCTION_76();
  swift_release();
  swift_release();
  outlined destroy of weak ConversationControlsCountdownJoinButtonDelegate?(v0 + 80);
  v1 = type metadata accessor for ObservationRegistrar();
  OUTLINED_FUNCTION_20_6(*(_QWORD *)(v1 - 8));
  OUTLINED_FUNCTION_0();
}

uint64_t ScreenSharingInteractionTransport.__deallocating_deinit()
{
  ScreenSharingInteractionTransport.deinit();
  return swift_deallocClassInstance();
}

void ScreenSharingInteractionTransport.availableDeliveryModes.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  void (*v6)(unint64_t, _QWORD, uint64_t);

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ControlMessageReliability>);
  v0 = type metadata accessor for ControlMessageReliability();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = *(_QWORD *)(v1 + 72);
  v3 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BD645380;
  v5 = v4 + v3;
  v6 = *(void (**)(unint64_t, _QWORD, uint64_t))(v1 + 104);
  v6(v5, *MEMORY[0x1E0D8C020], v0);
  v6(v5 + v2, *MEMORY[0x1E0D8C018], v0);
  specialized Set.init(_nonEmptyArrayLiteral:)();
}

BOOL ScreenSharingInteractionTransport.isInvalidated.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BOOL8 v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GroupSession<ScreenSharingInteractionActivity>.State);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_4_1();
  GroupSession.state.getter();
  v3 = OUTLINED_FUNCTION_4_30(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88)) == *MEMORY[0x1E0CB4110];
  OUTLINED_FUNCTION_39_0(v0, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  return v3;
}

uint64_t ScreenSharingInteractionTransport.activate()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncStream<ControlMessengerState>.Continuation.BufferingPolicy);
  v11 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_77();
  v3 = v2 - v1;
  if (one-time initialization token for screenSharing != -1)
    swift_once();
  v4 = type metadata accessor for Logger();
  __swift_project_value_buffer(v4, (uint64_t)&static Log.screenSharing);
  OUTLINED_FUNCTION_29_1();
  v5 = Logger.logObject.getter();
  v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    *(_DWORD *)v7 = 136315138;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GroupSession<ScreenSharingInteractionActivity>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(lazy protocol witness table cache variable for type GroupSession<ScreenSharingInteractionActivity> and conformance GroupSession<A>, &demangling cache variable for type metadata for GroupSession<ScreenSharingInteractionActivity>);
    v8 = dispatch thunk of CustomStringConvertible.description.getter();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v8, v9, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_373_1();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v5, v6, "Activating screen sharing interaction transport for session: %s", v7, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_60();
  }

  OUTLINED_FUNCTION_373_1();
  GroupSession.join()();
  type metadata accessor for ControlMessengerState();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v11 + 104))(v3, *MEMORY[0x1E0DF07B8], v0);
  return AsyncStream.init(_:bufferingPolicy:_:)();
}

uint64_t closure #1 in ScreenSharingInteractionTransport.activate()(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[2];
  void (*v22)(uint64_t, char *, uint64_t);
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;

  v23 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1E0C80A78](v4);
  v25 = (uint64_t)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncStream<ControlMessengerState>.Continuation);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Set<Participant>>.Publisher);
  v21[0] = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  GroupSession.$activeParticipants.getter();
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v24((char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  v12 = *(unsigned __int8 *)(v7 + 80);
  v21[1] = v12 | 7;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a2;
  v22 = *(void (**)(uint64_t, char *, uint64_t))(v7 + 32);
  v22(v13 + ((v12 + 24) & ~v12), (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Published<Set<Participant>>.Publisher and conformance Published<A>.Publisher, &demangling cache variable for type metadata for Published<Set<Participant>>.Publisher);
  swift_retain();
  v14 = Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v21[0] + 8))(v11, v9);
  v15 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload(v25, 1, 1, v15);
  v24((char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v23, v6);
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = 0;
  v16[3] = 0;
  v16[4] = a2;
  v22((uint64_t)v16 + ((v12 + 40) & ~v12), (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  swift_retain();
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
  v18 = v17;
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = v14;
  *(_QWORD *)(v19 + 24) = v18;
  return AsyncStream.Continuation.onTermination.setter();
}

void closure #1 in closure #1 in ScreenSharingInteractionTransport.activate()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v6 = type metadata accessor for ControlMessengerState();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncStream<ControlMessengerState>.Continuation.YieldResult);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(*(_QWORD *)a1 + 16) >= 2uLL)
  {
    if (one-time initialization token for screenSharing != -1)
      swift_once();
    v14 = type metadata accessor for Logger();
    __swift_project_value_buffer(v14, (uint64_t)&static Log.screenSharing);
    swift_retain_n();
    v15 = Logger.logObject.getter();
    v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      v24 = v11;
      v17 = swift_slowAlloc();
      v26 = a3;
      v18 = (uint8_t *)v17;
      v23 = swift_slowAlloc();
      v28 = v23;
      v25 = v10;
      *(_DWORD *)v18 = 136315138;
      v22[1] = v18 + 4;
      v27 = *(_QWORD *)(a2 + 16);
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GroupSession<ScreenSharingInteractionActivity>);
      v19 = String.init<A>(reflecting:)();
      v27 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v19, v20, &v28);
      v10 = v25;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      v11 = v24;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD004000, v15, v16, "Activated screen sharing interaction transport for session: %s", v18, 0xCu);
      v21 = v23;
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v21, -1, -1);
      MEMORY[0x1C3B751B8](v18, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0D8C000], v6);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncStream<ControlMessengerState>.Continuation);
    AsyncStream.Continuation.yield(_:)();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
}

uint64_t closure #2 in closure #1 in ScreenSharingInteractionTransport.activate()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5[5] = a4;
  v5[6] = a5;
  v6 = type metadata accessor for ControlMessengerState();
  v5[7] = v6;
  v5[8] = *(_QWORD *)(v6 - 8);
  v5[9] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncStream<ControlMessengerState>.Continuation.YieldResult);
  v5[10] = v7;
  v5[11] = *(_QWORD *)(v7 - 8);
  v5[12] = swift_task_alloc();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GroupSession<ScreenSharingInteractionActivity>.State);
  v5[13] = v8;
  v5[14] = *(_QWORD *)(v8 - 8);
  v5[15] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GroupSession<ScreenSharingInteractionActivity>.State?);
  v5[16] = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncPublisher<Published<GroupSession<ScreenSharingInteractionActivity>.State>.Publisher>);
  v5[17] = v9;
  v5[18] = *(_QWORD *)(v9 - 8);
  v5[19] = swift_task_alloc();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<GroupSession<ScreenSharingInteractionActivity>.State>.Publisher);
  v5[20] = v10;
  v5[21] = *(_QWORD *)(v10 - 8);
  v5[22] = swift_task_alloc();
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncPublisher<Published<GroupSession<ScreenSharingInteractionActivity>.State>.Publisher>.Iterator);
  v5[23] = v11;
  v5[24] = *(_QWORD *)(v11 - 8);
  v5[25] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t closure #2 in closure #1 in ScreenSharingInteractionTransport.activate()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = v0[21];
  v2 = v0[20];
  v3 = v0[18];
  v0[26] = *(_QWORD *)(v0[5] + 16);
  GroupSession.$state.getter();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Published<GroupSession<ScreenSharingInteractionActivity>.State>.Publisher and conformance Published<A>.Publisher, &demangling cache variable for type metadata for Published<GroupSession<ScreenSharingInteractionActivity>.State>.Publisher);
  MEMORY[0x1C3B71234](v2, v4);
  OUTLINED_FUNCTION_10_11(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_259_1();
  OUTLINED_FUNCTION_222_1(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type AsyncPublisher<Published<GroupSession<ScreenSharingInteractionActivity>.State>.Publisher>.Iterator and conformance AsyncPublisher<A>.Iterator, &demangling cache variable for type metadata for AsyncPublisher<Published<GroupSession<ScreenSharingInteractionActivity>.State>.Publisher>.Iterator);
  v0[27] = v5;
  v6 = (_QWORD *)swift_task_alloc();
  v0[28] = v6;
  *v6 = v0;
  v6[1] = closure #2 in closure #1 in ScreenSharingInteractionTransport.activate();
  OUTLINED_FUNCTION_380_1();
  return OUTLINED_FUNCTION_122_4();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;

  v2 = *v1;
  v4 = *v1;
  OUTLINED_FUNCTION_11_40(&v4);
  if (v0)
    *(_QWORD *)(v2 + 232) = v0;
  else
    *(_DWORD *)(v2 + 248) = *MEMORY[0x1E0CB4110];
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_2_8();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  id *v10;
  NSObject *v11;
  uint64_t v12;
  os_log_type_t v13;
  os_log_type_t v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  OUTLINED_FUNCTION_32_8();
  v24 = v1;
  v25 = v2;
  v23 = v0;
  v3 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 104);
  OUTLINED_FUNCTION_19_7(v3);
  if (!v5)
  {
    v6 = *(_DWORD *)(v0 + 248);
    v7 = *(_QWORD *)(v0 + 112);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v0 + 120), v3, v4);
    v8 = OUTLINED_FUNCTION_4_30(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 88));
    v9 = *(_QWORD *)(v0 + 112);
    v10 = *(id **)(v0 + 120);
    if (v8 != v6)
    {
      OUTLINED_FUNCTION_60_11(v9);
      v19 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 240) = v19;
      *v19 = v0;
      v19[1] = closure #2 in closure #1 in ScreenSharingInteractionTransport.activate();
      OUTLINED_FUNCTION_380_1();
      return dispatch thunk of AsyncIteratorProtocol.next()();
    }
    (*(void (**)(_QWORD, _QWORD))(v9 + 96))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 104));

    if (one-time initialization token for screenSharing != -1)
      swift_once();
    v11 = *(NSObject **)(v0 + 40);
    v12 = OUTLINED_FUNCTION_17_2();
    v13 = __swift_project_value_buffer(v12, (uint64_t)&static Log.screenSharing);
    OUTLINED_FUNCTION_29_1();
    OUTLINED_FUNCTION_38_3();
    v14 = OUTLINED_FUNCTION_12_0();
    if (OUTLINED_FUNCTION_5_3(v14))
    {
      v15 = *(_QWORD *)(v0 + 208);
      v16 = (uint8_t *)OUTLINED_FUNCTION_105();
      v22 = OUTLINED_FUNCTION_105();
      *(_DWORD *)v16 = 136315138;
      *(_QWORD *)(v0 + 24) = v15;
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GroupSession<ScreenSharingInteractionActivity>);
      v17 = OUTLINED_FUNCTION_333_0();
      *(_QWORD *)(v0 + 32) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v17, v18, &v22);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_25();
      OUTLINED_FUNCTION_23_0();
      OUTLINED_FUNCTION_48(&dword_1BD004000, v11, v13, "Invalidating screen sharing interaction transport due to session invalidation: %s", v16);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }
    OUTLINED_FUNCTION_23_0();

    v21 = *(_QWORD *)(v0 + 88);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 64) + 104))(*(_QWORD *)(v0 + 72), *MEMORY[0x1E0D8BFF8], *(_QWORD *)(v0 + 56));
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncStream<ControlMessengerState>.Continuation);
    AsyncStream.Continuation.yield(_:)();
    OUTLINED_FUNCTION_4_41(*(uint64_t (**)(uint64_t, uint64_t))(v21 + 8));
    AsyncStream.Continuation.finish()();
  }
  OUTLINED_FUNCTION_20_6(*(_QWORD *)(v0 + 192));
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_81_0();
  OUTLINED_FUNCTION_625();
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_633();
  OUTLINED_FUNCTION_575();
  OUTLINED_FUNCTION_535();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 232);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
  OUTLINED_FUNCTION_8_11();
  return OUTLINED_FUNCTION_4_55();
}

{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_11_40(v2);
  if (v1)
    *(_QWORD *)(v0 + 232) = v1;
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_2_8();
}

void closure #3 in closure #1 in ScreenSharingInteractionTransport.activate()()
{
  AnyCancellable.cancel()();
  JUMPOUT(0x1C3B73268);
}

Swift::Void __swiftcall ScreenSharingInteractionTransport.invalidate()()
{
  NSObject *v0;
  uint64_t v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (one-time initialization token for screenSharing != -1)
    swift_once();
  v1 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v1, (uint64_t)&static Log.screenSharing);
  OUTLINED_FUNCTION_29_1();
  Logger.logObject.getter();
  v2 = OUTLINED_FUNCTION_369();
  if (OUTLINED_FUNCTION_78_0(v0))
  {
    v3 = (uint8_t *)OUTLINED_FUNCTION_105();
    v4 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v3 = 136315138;
    v7 = v4;
    OUTLINED_FUNCTION_31_11();
    OUTLINED_FUNCTION_34_7(lazy protocol witness table cache variable for type GroupSession<ScreenSharingInteractionActivity> and conformance GroupSession<A>);
    v5 = dispatch thunk of CustomStringConvertible.description.getter();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v5, v6, &v7);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_23_0();
    OUTLINED_FUNCTION_27();
    OUTLINED_FUNCTION_48(&dword_1BD004000, v0, v2, "Invalidating screen sharing interaction session: %s", v3);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  OUTLINED_FUNCTION_23_0();
  GroupSession.end()();
}

uint64_t ScreenSharingInteractionTransport.send(_:reliability:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[14] = a3;
  v4[15] = v3;
  v4[12] = a1;
  v4[13] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ControlMessageReliability?);
  v4[16] = OUTLINED_FUNCTION_2_25();
  v5 = type metadata accessor for Participants();
  v4[17] = v5;
  v4[18] = *(_QWORD *)(v5 - 8);
  v4[19] = OUTLINED_FUNCTION_6_15();
  v4[20] = OUTLINED_FUNCTION_5_55();
  v6 = type metadata accessor for ControlMessageReliability();
  v4[21] = v6;
  v4[22] = *(_QWORD *)(v6 - 8);
  v4[23] = OUTLINED_FUNCTION_6_15();
  v4[24] = OUTLINED_FUNCTION_5_55();
  v4[25] = OUTLINED_FUNCTION_5_55();
  v4[26] = OUTLINED_FUNCTION_97_7();
  v4[27] = OUTLINED_FUNCTION_2_25();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Participant?);
  v4[28] = OUTLINED_FUNCTION_2_25();
  v7 = OUTLINED_FUNCTION_151();
  v4[29] = v7;
  v4[30] = *(_QWORD *)(v7 - 8);
  v4[31] = OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_4_4();
}

uint64_t ScreenSharingInteractionTransport.send(_:reliability:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  uint64_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  uint64_t v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t ObjectType;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  void (*v39)(_QWORD, _QWORD, _QWORD);
  _BOOL4 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t (*v72)(void);
  uint64_t v74;
  void (*v75)(_QWORD, _QWORD);
  uint64_t v76;
  void (*v77)(uint64_t);
  uint64_t v78;
  uint64_t v79;
  uint64_t (*v80)(uint64_t);
  int v81;
  _QWORD *v82;
  _QWORD *v83;
  NSObject *v84;
  os_log_type_t v85;
  _BOOL4 v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint8_t *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  void (*v105)(uint64_t, uint64_t, uint64_t);
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  os_log_type_t type;
  uint64_t v111[2];

  if (one-time initialization token for screenSharing != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 104);
  v2 = OUTLINED_FUNCTION_17_2();
  v3 = __swift_project_value_buffer(v2, (uint64_t)&static Log.screenSharing);
  v4 = OUTLINED_FUNCTION_64();
  outlined copy of Data._Representation(v4, v5);
  v6 = OUTLINED_FUNCTION_56_17();
  v7 = static os_log_type_t.debug.getter();
  v8 = OUTLINED_FUNCTION_5_3(v7);
  v10 = *(_QWORD *)(v0 + 96);
  v9 = *(_QWORD *)(v0 + 104);
  if (v8)
  {
    v11 = (uint8_t *)OUTLINED_FUNCTION_105();
    *(_DWORD *)v11 = 134217984;
    *(_QWORD *)(v0 + 88) = Data.count.getter();
    OUTLINED_FUNCTION_197_1();
    OUTLINED_FUNCTION_313_1(v10);
    OUTLINED_FUNCTION_48(&dword_1BD004000, v6, (os_log_type_t)v1, "Sending screen sharing interaction data: (%ld bytes)", v11);
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_313_1(v10);

  v12 = *(_QWORD *)(*(_QWORD *)(v0 + 120) + 16);
  GroupSession.activeParticipants.getter();
  OUTLINED_FUNCTION_11_1();
  v13 = OUTLINED_FUNCTION_64();
  v15 = specialized _NativeSet.filter(_:)(v13, v14);
  v16 = v15;
  if (*(_QWORD *)(v15 + 16) != 1)
  {
    OUTLINED_FUNCTION_43();
    goto LABEL_9;
  }
  v17 = *(_QWORD *)(v0 + 224);
  v9 = *(_QWORD *)(v0 + 232);
  specialized Collection.first.getter(v15, v17);
  OUTLINED_FUNCTION_43();
  if (__swift_getEnumTagSinglePayload(v17, 1, v9) == 1)
  {
    outlined destroy of AsyncStream<Bool>?(*(_QWORD *)(v0 + 224), (uint64_t *)&demangling cache variable for type metadata for Participant?);
LABEL_9:
    OUTLINED_FUNCTION_29_1();
    OUTLINED_FUNCTION_56_17();
    v18 = OUTLINED_FUNCTION_232();
    if (OUTLINED_FUNCTION_4_14(v18))
    {
      v19 = (uint8_t *)OUTLINED_FUNCTION_105();
      v20 = OUTLINED_FUNCTION_105();
      *(_DWORD *)v19 = 136315138;
      v111[0] = v20;
      *(_QWORD *)(v0 + 40) = v12;
      OUTLINED_FUNCTION_11_8();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GroupSession<ScreenSharingInteractionActivity>);
      v21 = OUTLINED_FUNCTION_66_20();
      *(_QWORD *)(v0 + 32) = OUTLINED_FUNCTION_341_0(v21, v22, v23, v24, v25, v26, v27, v28, v97, v99, v101, v104, v106);
      OUTLINED_FUNCTION_197_1();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_23_0();
      OUTLINED_FUNCTION_48(&dword_1BD004000, v16, (os_log_type_t)v9, "Not sending data because we couldn't find participant to communicate to: %s", v19);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }
    OUTLINED_FUNCTION_23_0();

    lazy protocol witness table accessor for type ScreenSharingInteractionTransport.Errors and conformance ScreenSharingInteractionTransport.Errors();
    OUTLINED_FUNCTION_10_8();
    *v29 = 0;
    swift_willThrow();
LABEL_17:
    OUTLINED_FUNCTION_158_1();
    OUTLINED_FUNCTION_29_0();
    OUTLINED_FUNCTION_12();
    OUTLINED_FUNCTION_81_0();
    OUTLINED_FUNCTION_633();
    OUTLINED_FUNCTION_575();
    OUTLINED_FUNCTION_535();
    OUTLINED_FUNCTION_578();
    OUTLINED_FUNCTION_541();
    v72 = *(uint64_t (**)(void))(v0 + 8);
    return OUTLINED_FUNCTION_100_5(v72);
  }
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 240) + 32))(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 232));
  if (!OUTLINED_FUNCTION_176_0())
  {
    lazy protocol witness table accessor for type ScreenSharingInteractionTransport.Errors and conformance ScreenSharingInteractionTransport.Errors();
    v37 = OUTLINED_FUNCTION_10_8();
    OUTLINED_FUNCTION_163_1(v37, v38);
    v39 = *(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 176) + 16);
    v39(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 168));
    OUTLINED_FUNCTION_378_1();
    OUTLINED_FUNCTION_356_0();
    OUTLINED_FUNCTION_378_1();
    OUTLINED_FUNCTION_356_0();
    OUTLINED_FUNCTION_56_17();
    type = OUTLINED_FUNCTION_370_1();
    v40 = os_log_type_enabled(0, type);
    v42 = *(_QWORD *)(v0 + 176);
    v41 = *(_QWORD *)(v0 + 184);
    v43 = *(_QWORD *)(v0 + 168);
    if (v40)
    {
      v108 = *(_QWORD *)(v0 + 176);
      v44 = *(_QWORD *)(v0 + 128);
      v46 = *(_QWORD *)(v0 + 96);
      v45 = *(_QWORD *)(v0 + 104);
      v102 = *(_QWORD *)(v0 + 184);
      v47 = OUTLINED_FUNCTION_105();
      v111[0] = OUTLINED_FUNCTION_105();
      *(_DWORD *)v47 = 136315650;
      *(_QWORD *)(v0 + 16) = v46;
      *(_QWORD *)(v0 + 24) = v45;
      outlined copy of Data._Representation(v46, v45);
      v48 = OUTLINED_FUNCTION_347_1();
      *(_QWORD *)(v0 + 48) = OUTLINED_FUNCTION_341_0(v48, v49, v50, v51, v52, v53, v54, v55, v97, v0 + 48, v102, (uint64_t)v39, v0 + 64);
      OUTLINED_FUNCTION_137_0();
      OUTLINED_FUNCTION_2_1();
      OUTLINED_FUNCTION_322_0();
      OUTLINED_FUNCTION_322_0();
      *(_WORD *)(v47 + 12) = 2080;
      v105(v44, v103, v43);
      OUTLINED_FUNCTION_80_0();
      __swift_storeEnumTagSinglePayload(v56, v57, v58, v43);
      specialized >> prefix<A>(_:)(v44);
      v60 = v59;
      OUTLINED_FUNCTION_173_2(v59, &demangling cache variable for type metadata for ControlMessageReliability?);
      *(_QWORD *)(v0 + 56) = OUTLINED_FUNCTION_191(v60, v61, v111);
      OUTLINED_FUNCTION_137_0();
      OUTLINED_FUNCTION_21_0();
      OUTLINED_FUNCTION_230_0(v103, *(uint64_t (**)(uint64_t, uint64_t))(v108 + 8));
      *(_WORD *)(v47 + 22) = 2080;
      *(_QWORD *)(v0 + 64) = v37;
      OUTLINED_FUNCTION_356_0();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
      v62 = OUTLINED_FUNCTION_332_1();
      *(_QWORD *)(v0 + 72) = OUTLINED_FUNCTION_341_0(v62, v63, v64, v65, v66, v67, v68, v69, v98, v100, v103, (uint64_t)v105, v107);
      OUTLINED_FUNCTION_137_0();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_10_9();
      OUTLINED_FUNCTION_10_9();
      _os_log_impl(&dword_1BD004000, 0, type, "Not sending data %s with reliability: %s since the firewall rejected it for reason: %s.", (uint8_t *)v47, 0x20u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_60();
    }
    OUTLINED_FUNCTION_379_0();
    OUTLINED_FUNCTION_379_0();
    OUTLINED_FUNCTION_230_0(v41, *(uint64_t (**)(uint64_t, uint64_t))(v42 + 8));
    OUTLINED_FUNCTION_10_9();
    OUTLINED_FUNCTION_10_9();

    v71 = *(_QWORD *)(v0 + 240);
    v70 = *(_QWORD *)(v0 + 248);
    swift_willThrow();
    OUTLINED_FUNCTION_39_0(v70, *(uint64_t (**)(uint64_t, uint64_t))(v71 + 8));
    goto LABEL_17;
  }
  v31 = v30;
  v32 = v3;
  v33 = *(_QWORD *)(v0 + 248);
  v34 = *(_QWORD *)(v0 + 216);
  ObjectType = swift_getObjectType();
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 16))(v34, v33, ObjectType, v31);
  v36 = *(_QWORD *)(v0 + 216);
  v74 = *(_QWORD *)(v0 + 176);
  v75 = *(void (**)(_QWORD, _QWORD))(v0 + 112);
  v76 = OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_130_3(v76, type metadata accessor for RemoteControlMessage);
  v77 = *(void (**)(uint64_t))(v74 + 16);
  v78 = OUTLINED_FUNCTION_239_2();
  v77(v78);
  v79 = OUTLINED_FUNCTION_345_1();
  v81 = v80(v79);
  if (v81 == *MEMORY[0x1E0D8C020])
  {
    static Participants.only(_:)();
    v82 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 256) = v82;
    *v82 = v0;
    v82[1] = ScreenSharingInteractionTransport.send(_:reliability:);
  }
  else
  {
    if (v81 != *MEMORY[0x1E0D8C018])
    {
      ((void (*)(_QWORD, _QWORD, _QWORD))v77)(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 168));
      v84 = v32;
      Logger.logObject.getter();
      v85 = OUTLINED_FUNCTION_232();
      v86 = OUTLINED_FUNCTION_23_5(v85);
      v87 = *(_QWORD *)(v0 + 192);
      v88 = *(_QWORD *)(v0 + 168);
      if (v86)
      {
        v89 = *(_QWORD *)(v0 + 128);
        v109 = *(_QWORD *)(v0 + 176);
        v90 = (uint8_t *)swift_slowAlloc();
        v111[0] = OUTLINED_FUNCTION_105();
        *(_DWORD *)v90 = 136315138;
        ((void (*)(uint64_t, uint64_t, uint64_t))v77)(v89, v87, v88);
        OUTLINED_FUNCTION_80_0();
        __swift_storeEnumTagSinglePayload(v91, v92, v93, v88);
        specialized >> prefix<A>(_:)(v89);
        v95 = v94;
        outlined destroy of AsyncStream<Bool>?(v89, &demangling cache variable for type metadata for ControlMessageReliability?);
        *(_QWORD *)(v0 + 80) = OUTLINED_FUNCTION_304(v95, v96, v111);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        OUTLINED_FUNCTION_25();
        OUTLINED_FUNCTION_266_2(v109);
        OUTLINED_FUNCTION_48(&dword_1BD004000, v84, (os_log_type_t)v36, "Unknown reliability mode for control message: %s", v90);
        OUTLINED_FUNCTION_21();
        OUTLINED_FUNCTION_60();
      }
      OUTLINED_FUNCTION_266_2(*(_QWORD *)(v0 + 176));

      v75(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 168));
      OUTLINED_FUNCTION_188_2();
      ScreenSharingInteractionTransport.didSendData()();
      OUTLINED_FUNCTION_4_41(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 88));
      OUTLINED_FUNCTION_12();
      OUTLINED_FUNCTION_625();
      OUTLINED_FUNCTION_633();
      OUTLINED_FUNCTION_575();
      OUTLINED_FUNCTION_535();
      OUTLINED_FUNCTION_578();
      OUTLINED_FUNCTION_614();
      swift_task_dealloc();
      swift_task_dealloc();
      v72 = (uint64_t (*)(void))OUTLINED_FUNCTION_20();
      return OUTLINED_FUNCTION_100_5(v72);
    }
    static Participants.only(_:)();
    v83 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 272) = v83;
    *v83 = v0;
    v83[1] = ScreenSharingInteractionTransport.send(_:reliability:);
  }
  OUTLINED_FUNCTION_211_1(*(_QWORD *)(v0 + 96));
  OUTLINED_FUNCTION_156_4();
  return GroupSessionMessenger.send(_:to:)();
}

{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_24_4(v2);
  *(_QWORD *)(v0 + 264) = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_34_18(*(_QWORD *)(v0 + 144));
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_2_8();
}

{
  uint64_t v0;
  uint64_t (*v1)(void);

  OUTLINED_FUNCTION_32_8();
  OUTLINED_FUNCTION_188_2();
  ScreenSharingInteractionTransport.didSendData()();
  OUTLINED_FUNCTION_4_41(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_625();
  OUTLINED_FUNCTION_633();
  OUTLINED_FUNCTION_575();
  OUTLINED_FUNCTION_535();
  OUTLINED_FUNCTION_578();
  swift_task_dealloc();
  OUTLINED_FUNCTION_641();
  OUTLINED_FUNCTION_618();
  v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_20();
  return OUTLINED_FUNCTION_165(v1);
}

{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_24_4(v2);
  *(_QWORD *)(v0 + 280) = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_34_18(*(_QWORD *)(v0 + 144));
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_2_8();
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_58_3();
  OUTLINED_FUNCTION_34_18(*(_QWORD *)(v0 + 240));
  OUTLINED_FUNCTION_158_1();
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_81_0();
  OUTLINED_FUNCTION_625();
  OUTLINED_FUNCTION_633();
  OUTLINED_FUNCTION_575();
  OUTLINED_FUNCTION_535();
  OUTLINED_FUNCTION_578();
  OUTLINED_FUNCTION_541();
  return OUTLINED_FUNCTION_48_34(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_58_3();
  OUTLINED_FUNCTION_34_18(*(_QWORD *)(v0 + 240));
  OUTLINED_FUNCTION_158_1();
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_81_0();
  OUTLINED_FUNCTION_625();
  OUTLINED_FUNCTION_633();
  OUTLINED_FUNCTION_575();
  OUTLINED_FUNCTION_535();
  OUTLINED_FUNCTION_578();
  OUTLINED_FUNCTION_541();
  return OUTLINED_FUNCTION_48_34(*(uint64_t (**)(void))(v0 + 8));
}

void ScreenSharingInteractionTransport.receiveData()()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_93();
  v2 = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncStream<Data>.Continuation.BufferingPolicy);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_16_2();
  if (one-time initialization token for screenSharing != -1)
    swift_once();
  v5 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v5, (uint64_t)&static Log.screenSharing);
  OUTLINED_FUNCTION_29_1();
  v6 = Logger.logObject.getter();
  v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)OUTLINED_FUNCTION_105();
    v12 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v8 = 136315138;
    v13 = v12;
    OUTLINED_FUNCTION_31_11();
    OUTLINED_FUNCTION_34_7(lazy protocol witness table cache variable for type GroupSession<ScreenSharingInteractionActivity> and conformance GroupSession<A>);
    v9 = dispatch thunk of CustomStringConvertible.description.getter();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v9, v10, &v13);
    OUTLINED_FUNCTION_197_1();
    OUTLINED_FUNCTION_23_0();
    OUTLINED_FUNCTION_27();
    OUTLINED_FUNCTION_48(&dword_1BD004000, v6, v7, "Creating screen sharing interaction transport data stream for session: %s", v8);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  OUTLINED_FUNCTION_23_0();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(v0, *MEMORY[0x1E0DF07B8], v3);
  v2[3] = OUTLINED_FUNCTION_31_11();
  OUTLINED_FUNCTION_34_7(&lazy protocol witness table cache variable for type AsyncStream<Data> and conformance AsyncStream<A>);
  v2[4] = v11;
  __swift_allocate_boxed_opaque_existential_1(v2);
  AsyncStream.init(_:bufferingPolicy:_:)();
  OUTLINED_FUNCTION_52_1();
}

uint64_t closure #1 in ScreenSharingInteractionTransport.receiveData()(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t, uint64_t);
  unint64_t v12;
  char *v13;
  void (*v14)(char *, char *, uint64_t);
  char *v15;
  uint64_t v17;
  uint64_t v18;

  v17 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncStream<Data>.Continuation);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 1, 1, v18);
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v11(v7, a1, v4);
  v12 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v13 = (char *)swift_allocObject();
  *((_QWORD *)v13 + 2) = 0;
  *((_QWORD *)v13 + 3) = 0;
  *((_QWORD *)v13 + 4) = a2;
  v14 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
  v14(&v13[v12], v7, v4);
  swift_retain();
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
  swift_release();
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 1, 1, v18);
  v11(v7, v17, v4);
  v15 = (char *)swift_allocObject();
  *((_QWORD *)v15 + 2) = 0;
  *((_QWORD *)v15 + 3) = 0;
  *((_QWORD *)v15 + 4) = a2;
  v14(&v15[v12], v7, v4);
  swift_retain();
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
  return swift_release();
}

uint64_t closure #1 in closure #1 in ScreenSharingInteractionTransport.receiveData()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5[7] = a4;
  v5[8] = a5;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Participant?);
  v5[9] = swift_task_alloc();
  v5[10] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncStream<Data>.Continuation.YieldResult);
  v5[11] = v6;
  v5[12] = *(_QWORD *)(v6 - 8);
  v5[13] = swift_task_alloc();
  v7 = type metadata accessor for Participant();
  v5[14] = v7;
  v5[15] = *(_QWORD *)(v7 - 8);
  v5[16] = swift_task_alloc();
  v5[17] = swift_task_alloc();
  v5[18] = swift_task_alloc();
  v5[19] = type metadata accessor for RemoteControlMessage(0);
  v5[20] = swift_task_alloc();
  v8 = type metadata accessor for GroupSessionMessenger.MessageContext();
  v5[21] = v8;
  v5[22] = *(_QWORD *)(v8 - 8);
  v5[23] = swift_task_alloc();
  v5[24] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Data, GroupSessionMessenger.MessageContext)?);
  v5[25] = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GroupSessionMessenger.Messages<Data>);
  v5[26] = v9;
  v5[27] = *(_QWORD *)(v9 - 8);
  v5[28] = swift_task_alloc();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GroupSessionMessenger.Messages<Data>.Iterator);
  v5[29] = v10;
  v5[30] = *(_QWORD *)(v10 - 8);
  v5[31] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t closure #1 in closure #1 in ScreenSharingInteractionTransport.receiveData()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_107_7();
  OUTLINED_FUNCTION_316_1();
  GroupSessionMessenger.messages(of:)();
  OUTLINED_FUNCTION_296_2();
  OUTLINED_FUNCTION_10_11(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type GroupSessionMessenger.Messages<Data>.Iterator and conformance GroupSessionMessenger.Messages<A>.Iterator, &demangling cache variable for type metadata for GroupSessionMessenger.Messages<Data>.Iterator);
  *(_QWORD *)(v0 + 256) = v2;
  v3 = (_QWORD *)swift_task_alloc();
  OUTLINED_FUNCTION_181_1(v3);
  return OUTLINED_FUNCTION_68_16();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;

  v2 = *v1;
  v4 = *v1;
  OUTLINED_FUNCTION_11_40(&v4);
  if (v0)
    *(_QWORD *)(v2 + 280) = v0;
  else
    *(_QWORD *)(v2 + 272) = 0;
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_2_8();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;

  v2 = *v1;
  v4 = *v1;
  OUTLINED_FUNCTION_11_40(&v4);
  if (v0)
    *(_QWORD *)(v2 + 280) = v0;
  else
    *(_QWORD *)(v2 + 272) = 0;
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_2_8();
}

#error "1BD3454CC: call analysis failed (funcsize=175)"

uint64_t closure #2 in closure #1 in ScreenSharingInteractionTransport.receiveData()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5[7] = a4;
  v5[8] = a5;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Participant?);
  v5[9] = swift_task_alloc();
  v5[10] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncStream<Data>.Continuation.YieldResult);
  v5[11] = v6;
  v5[12] = *(_QWORD *)(v6 - 8);
  v5[13] = swift_task_alloc();
  v7 = type metadata accessor for Participant();
  v5[14] = v7;
  v5[15] = *(_QWORD *)(v7 - 8);
  v5[16] = swift_task_alloc();
  v5[17] = swift_task_alloc();
  v5[18] = swift_task_alloc();
  v5[19] = type metadata accessor for RemoteControlMessage(0);
  v5[20] = swift_task_alloc();
  v8 = type metadata accessor for GroupSessionMessenger.MessageContext();
  v5[21] = v8;
  v5[22] = *(_QWORD *)(v8 - 8);
  v5[23] = swift_task_alloc();
  v5[24] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Data, GroupSessionMessenger.MessageContext)?);
  v5[25] = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GroupSessionMessenger.Messages<Data>);
  v5[26] = v9;
  v5[27] = *(_QWORD *)(v9 - 8);
  v5[28] = swift_task_alloc();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GroupSessionMessenger.Messages<Data>.Iterator);
  v5[29] = v10;
  v5[30] = *(_QWORD *)(v10 - 8);
  v5[31] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t closure #2 in closure #1 in ScreenSharingInteractionTransport.receiveData()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_107_7();
  OUTLINED_FUNCTION_316_1();
  GroupSessionMessenger.messages(of:)();
  OUTLINED_FUNCTION_296_2();
  OUTLINED_FUNCTION_10_11(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type GroupSessionMessenger.Messages<Data>.Iterator and conformance GroupSessionMessenger.Messages<A>.Iterator, &demangling cache variable for type metadata for GroupSessionMessenger.Messages<Data>.Iterator);
  *(_QWORD *)(v0 + 256) = v2;
  v3 = (_QWORD *)swift_task_alloc();
  OUTLINED_FUNCTION_181_1(v3);
  return OUTLINED_FUNCTION_68_16();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;

  v2 = *v1;
  v4 = *v1;
  OUTLINED_FUNCTION_11_40(&v4);
  if (v0)
    *(_QWORD *)(v2 + 280) = v0;
  else
    *(_QWORD *)(v2 + 272) = 0;
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_2_8();
}

{
  uint64_t v0;

  *(_QWORD *)(v0 + 32) = *(_QWORD *)(v0 + 280);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
  OUTLINED_FUNCTION_8_11();
  return OUTLINED_FUNCTION_4_55();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;

  v2 = *v1;
  v4 = *v1;
  OUTLINED_FUNCTION_11_40(&v4);
  if (v0)
    *(_QWORD *)(v2 + 280) = v0;
  else
    *(_QWORD *)(v2 + 272) = 0;
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_2_8();
}

#error "1BD345AD0: call analysis failed (funcsize=175)"

uint64_t protocol witness for ControlTransport.activate() in conformance ScreenSharingInteractionTransport()
{
  return ScreenSharingInteractionTransport.activate()();
}

void protocol witness for ControlTransport.availableDeliveryModes.getter in conformance ScreenSharingInteractionTransport()
{
  ScreenSharingInteractionTransport.availableDeliveryModes.getter();
}

uint64_t protocol witness for ControlTransport.send(_:reliability:) in conformance ScreenSharingInteractionTransport(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = partial apply for closure #1 in MultiwayViewController.registerForSystemEventsIfNecessary();
  return ScreenSharingInteractionTransport.send(_:reliability:)(a1, a2, a3);
}

uint64_t ScreenSharingInteractionSession.groupSession.getter()
{
  return swift_retain();
}

uint64_t key path setter for ScreenSharingInteractionSession.playbackServer : ScreenSharingInteractionSession(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 64) = v2;
  swift_retain();
  return swift_release();
}

uint64_t ScreenSharingInteractionSession.playbackServer.getter()
{
  OUTLINED_FUNCTION_1();
  return swift_retain();
}

void key path setter for ScreenSharingInteractionSession.captureInteraction : ScreenSharingInteractionSession(void **a1, uint64_t *a2)
{
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  v4 = *(void **)(v3 + 72);
  *(_QWORD *)(v3 + 72) = v2;
  v5 = v2;

}

void *ScreenSharingInteractionSession.captureInteraction.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  OUTLINED_FUNCTION_1();
  v1 = *(void **)(v0 + 72);
  v2 = v1;
  return v1;
}

void ScreenSharingInteractionSession.remoteControlStatus.getter()
{
  uint64_t v0;
  unint64_t v1;

  OUTLINED_FUNCTION_1();
  outlined copy of RemoteControlState(*(_QWORD *)(v0 + 128));
  OUTLINED_FUNCTION_1_28();
  OUTLINED_FUNCTION_350();
  OUTLINED_FUNCTION_30_50(&v1);
  OUTLINED_FUNCTION_353_1();
  OUTLINED_FUNCTION_306();
  OUTLINED_FUNCTION_22();
  __asm { BR              X11 }
}

uint64_t sub_1BD345EE8@<X0>(unint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_342_2(a1);
  return 1;
}

void ScreenSharingInteractionSession.__allocating_init(session:controller:serverBag:contactManager:)()
{
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_55_4();
  ScreenSharingInteractionSession.init(session:controller:serverBag:contactManager:)();
}

uint64_t sub_1BD345F74()
{
  uint64_t v0;

  return v0;
}

void ScreenSharingInteractionSession.init(session:controller:serverBag:contactManager:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_93();
  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GroupSessionMessenger.MessageStream<RemoteControlMessage>);
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_41();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_41();
  v4 = type metadata accessor for ControlMessageSession.Role();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_231_0();
  v3 = type metadata accessor for GroupSessionMessenger.DeliveryMode();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_58_5();
  type metadata accessor for DeviceInactivityObserver();
  v0[8] = 0;
  v0[9] = 0;
  v0[7] = 0;
  OUTLINED_FUNCTION_14_0();
  DeviceInactivityObserver.init(inactivityTimeout:)(2);
}

uint64_t sub_1BD346078(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char v14;
  unsigned int *v15;
  void *v16;
  id v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  NSObject *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  os_log_type_t v33;
  _WORD *v34;
  void (*v35)(uint64_t, _UNKNOWN **);

  *(_QWORD *)(v1 + 80) = a1;
  type metadata accessor for DisplayLayerVisibilityObserver();
  OUTLINED_FUNCTION_14_0();
  *(_QWORD *)(v1 + 88) = DisplayLayerVisibilityObserver.init()();
  *(_QWORD *)(v1 + 144) = 0;
  *(_OWORD *)(v1 + 96) = 0u;
  *(_OWORD *)(v1 + 112) = 0u;
  *(_QWORD *)(v1 + 168) = v3;
  *(_QWORD *)(v6 - 112) = v3;
  if ((OUTLINED_FUNCTION_340_1() & 1) != 0)
    v7 = 0xA000000000000008;
  else
    v7 = 0xA000000000000010;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ManagedBuffer<RemoteControlState, os_unfair_lock_s>);
  v8 = OUTLINED_FUNCTION_15();
  *(_DWORD *)(v8 + 24) = 0;
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v1 + 128) = v7;
  *(_QWORD *)(v1 + 136) = v8;
  OUTLINED_FUNCTION_352_1(v8, *MEMORY[0x1E0CB3F68]);
  type metadata accessor for GroupSessionMessenger();
  OUTLINED_FUNCTION_14_0();
  outlined copy of RemoteControlState(v7);
  OUTLINED_FUNCTION_11_1();
  v9 = GroupSessionMessenger.init<A>(session:deliveryMode:)();
  *(_QWORD *)(v1 + 40) = v9;
  OUTLINED_FUNCTION_352_1(v9, *MEMORY[0x1E0CB3F70]);
  swift_allocObject();
  OUTLINED_FUNCTION_11_1();
  v10 = GroupSessionMessenger.init<A>(session:deliveryMode:)();
  *(_QWORD *)(v1 + 48) = v10;
  type metadata accessor for ScreenSharingInteractionTransport();
  v11 = OUTLINED_FUNCTION_14_0();
  OUTLINED_FUNCTION_11_1();
  swift_retain();
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  v12 = v9;
  v13 = *(void **)(v6 - 128);
  ScreenSharingInteractionTransport.init(session:unreliableMessenger:reliableMessenger:)(v2, v12, v10);
  *(_QWORD *)(v1 + 16) = v11;
  *(_QWORD *)(v1 + 24) = v2;
  OUTLINED_FUNCTION_11_1();
  OUTLINED_FUNCTION_14_11();
  v14 = OUTLINED_FUNCTION_340_1();
  v15 = (unsigned int *)MEMORY[0x1E0D8BFC8];
  if ((v14 & 1) == 0)
    v15 = (unsigned int *)MEMORY[0x1E0D8BFD0];
  (*(void (**)(uint64_t, _QWORD, _QWORD))(v4 + 104))(v5, *v15, *(_QWORD *)(v6 - 136));
  type metadata accessor for ControlMessageSession();
  OUTLINED_FUNCTION_383_1(&lazy protocol witness table cache variable for type ScreenSharingInteractionTransport and conformance ScreenSharingInteractionTransport);
  *(_QWORD *)(v1 + 32) = ControlMessageSession.__allocating_init(transport:role:)();
  swift_unknownObjectUnownedInit();
  v16 = *(void **)(v6 - 120);
  *(_QWORD *)(v1 + 152) = v16;
  v17 = v16;
  if ((OUTLINED_FUNCTION_340_1() & 1) != 0)
  {
    v18 = (uint8_t *)(v1 + 64);
    type metadata accessor for PlaybackServer();
    OUTLINED_FUNCTION_1_28();
    v19 = PlaybackServer.__allocating_init(session:interruptionHandler:)();
    v20 = OUTLINED_FUNCTION_415();
    OUTLINED_FUNCTION_77_0(*(_QWORD *)(v6 - 168), v21, v22, v20);
    v23 = (_QWORD *)OUTLINED_FUNCTION_15();
    v23[2] = 0;
    v23[3] = 0;
    v23[4] = v19;
    OUTLINED_FUNCTION_1_28();
    _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
    *(_QWORD *)(v1 + 56) = v24;
    swift_release();
    OUTLINED_FUNCTION_2_0();
    *(_QWORD *)(v1 + 64) = v19;
    OUTLINED_FUNCTION_1_28();
    OUTLINED_FUNCTION_43();
    ScreenSharingInteractionSession.observeInteractionState()();
    OUTLINED_FUNCTION_22();
  }
  else
  {
    v18 = (uint8_t *)(v1 + 72);
    type metadata accessor for CaptureUIInteraction();
    OUTLINED_FUNCTION_1_28();
    v25 = CaptureUIInteraction.__allocating_init(session:interruptionHandler:)();
    OUTLINED_FUNCTION_2_0();
    v26 = *(void **)(v1 + 72);
    *(_QWORD *)(v1 + 72) = v25;

  }
  v27 = *(NSObject **)(v6 - 112);
  if ((FTServerBag.remoteControlEnabled.getter() & 1) != 0)
  {
    OUTLINED_FUNCTION_97_7();
    OUTLINED_FUNCTION_383_1(&lazy protocol witness table cache variable for type RemoteControlMessage and conformance RemoteControlMessage);
    OUTLINED_FUNCTION_383_1(&lazy protocol witness table cache variable for type RemoteControlMessage and conformance RemoteControlMessage);
    partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
    v28 = *(_QWORD *)(v6 - 160);
    GroupSessionMessenger.receive<A>(_:)();
    OUTLINED_FUNCTION_43();
    v29 = OUTLINED_FUNCTION_15();
    *(_QWORD *)(v29 + 16) = partial apply for closure #4 in ScreenSharingInteractionSession.init(session:controller:serverBag:contactManager:);
    *(_QWORD *)(v29 + 24) = v1;
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type GroupSessionMessenger.MessageStream<RemoteControlMessage> and conformance GroupSessionMessenger.MessageStream<A>, &demangling cache variable for type metadata for GroupSessionMessenger.MessageStream<RemoteControlMessage>);
    OUTLINED_FUNCTION_11_8();
    v30 = *(_QWORD *)(v6 - 144);
    v31 = Publisher<>.sink(receiveValue:)();
    OUTLINED_FUNCTION_22();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 152) + 8))(v28, v30);
    *(_QWORD *)(v1 + 112) = v31;
    swift_release();
  }
  else
  {
    if (one-time initialization token for screenSharing != -1)
      swift_once();
    v32 = OUTLINED_FUNCTION_17_2();
    OUTLINED_FUNCTION_3(v32, (uint64_t)&static Log.screenSharing);
    v33 = OUTLINED_FUNCTION_232();
    if (os_log_type_enabled(v27, v33))
    {
      v34 = (_WORD *)OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_220_0(v34);
      OUTLINED_FUNCTION_130(&dword_1BD004000, v27, v33, "Not setting up remote control message listener as remote control is disabled by the server bag", v18);
      OUTLINED_FUNCTION_60();
    }

  }
  v35 = *(void (**)(uint64_t, _UNKNOWN **))(**(_QWORD **)(v1 + 16) + 384);
  OUTLINED_FUNCTION_11_8();
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  v35(v1, &protocol witness table for ScreenSharingInteractionSession);

  swift_release();
  OUTLINED_FUNCTION_43();
  return v1;
}

void closure #1 in ScreenSharingInteractionSession.init(session:controller:serverBag:contactManager:)(uint64_t a1)
{
  closure #1 in ScreenSharingInteractionSession.init(session:controller:serverBag:contactManager:)(a1, "Screen sharing playback server invalidated with error: %s");
}

uint64_t closure #2 in ScreenSharingInteractionSession.init(session:controller:serverBag:contactManager:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[5] = a4;
  v5 = type metadata accessor for InteractionState();
  v4[6] = v5;
  v4[7] = *(_QWORD *)(v5 - 8);
  v4[8] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncPublisher<Published<Bool>.Publisher>);
  v4[9] = v6;
  v4[10] = *(_QWORD *)(v6 - 8);
  v4[11] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  v4[12] = v7;
  v4[13] = *(_QWORD *)(v7 - 8);
  v4[14] = swift_task_alloc();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncPublisher<Published<Bool>.Publisher>.Iterator);
  v4[15] = v8;
  v4[16] = *(_QWORD *)(v8 - 8);
  v4[17] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t closure #2 in ScreenSharingInteractionSession.init(session:controller:serverBag:contactManager:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  OUTLINED_FUNCTION_58_3();
  v1 = v0[13];
  v2 = v0[12];
  v3 = v0[10];
  PlaybackServer.$isActive.getter();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Published<Bool>.Publisher and conformance Published<A>.Publisher, &demangling cache variable for type metadata for Published<Bool>.Publisher);
  MEMORY[0x1C3B71234](v2, v4);
  OUTLINED_FUNCTION_351_1(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  AsyncPublisher.makeAsyncIterator()();
  OUTLINED_FUNCTION_39_40(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(lazy protocol witness table cache variable for type AsyncPublisher<Published<Bool>.Publisher>.Iterator and conformance AsyncPublisher<A>.Iterator, &demangling cache variable for type metadata for AsyncPublisher<Published<Bool>.Publisher>.Iterator);
  v5 = (_QWORD *)swift_task_alloc();
  v0[18] = v5;
  *v5 = v0;
  v5[1] = closure #2 in ScreenSharingInteractionSession.init(session:controller:serverBag:contactManager:);
  return OUTLINED_FUNCTION_1_59();
}

{
  OUTLINED_FUNCTION_146_2();
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_4_4();
}

{
  uint64_t v0;

  *(_BYTE *)(v0 + 185) = *(_BYTE *)(v0 + 184);
  return OUTLINED_FUNCTION_23_57();
}

{
  uint64_t v0;
  int v1;
  uint64_t v3;
  os_log_type_t v4;
  _WORD *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v10;

  v1 = *(unsigned __int8 *)(v0 + 185);
  if (v1 != 2 && (v1 & 1) == 0)
  {
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(lazy protocol witness table cache variable for type AsyncPublisher<Published<Bool>.Publisher>.Iterator and conformance AsyncPublisher<A>.Iterator, &demangling cache variable for type metadata for AsyncPublisher<Published<Bool>.Publisher>.Iterator);
    v10 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 144) = v10;
    *v10 = v0;
    v10[1] = closure #2 in ScreenSharingInteractionSession.init(session:controller:serverBag:contactManager:);
    return dispatch thunk of AsyncIteratorProtocol.next()();
  }
  else
  {
    OUTLINED_FUNCTION_34_18(*(_QWORD *)(v0 + 128));
    if (one-time initialization token for screenSharing != -1)
      swift_once();
    v3 = OUTLINED_FUNCTION_17_2();
    *(_QWORD *)(v0 + 160) = __swift_project_value_buffer(v3, (uint64_t)&static Log.screenSharing);
    Logger.logObject.getter();
    v4 = OUTLINED_FUNCTION_12_0();
    if (OUTLINED_FUNCTION_23_5(v4))
    {
      v5 = (_WORD *)OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_124_3(v5);
      OUTLINED_FUNCTION_11_78(&dword_1BD004000, v6, v7, "Playback server is now active, changing interaction state to draw");
      OUTLINED_FUNCTION_60();
    }
    OUTLINED_FUNCTION_337_1();
    static InteractionState.draw.getter();
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 168) = v8;
    *v8 = v0;
    v8[1] = closure #2 in ScreenSharingInteractionSession.init(session:controller:serverBag:contactManager:);
    OUTLINED_FUNCTION_211_1(*(_QWORD *)(v0 + 64));
    return PlaybackServer.changeInteractionState(_:)();
  }
}

{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 152);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
  OUTLINED_FUNCTION_8_11();
  return OUTLINED_FUNCTION_4_55();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_107_7();
  OUTLINED_FUNCTION_279_2();
  v2 = *(_QWORD *)(v1 + 56);
  OUTLINED_FUNCTION_24_4(v3);
  *(_QWORD *)(v1 + 176) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_4_41(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  if (v0)
  {
    OUTLINED_FUNCTION_2_14();
    return OUTLINED_FUNCTION_26_47();
  }
  else
  {
    swift_task_dealloc();
    OUTLINED_FUNCTION_29_0();
    OUTLINED_FUNCTION_12();
    OUTLINED_FUNCTION_81_0();
    OUTLINED_FUNCTION_277_1();
    return v5(v5, v6, v7, v8, v9, v10, v11, v12);
  }
}

{
  uint64_t v0;
  os_log_type_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint8_t *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v3 = *(NSObject **)(v0 + 160);
  OUTLINED_FUNCTION_15_63();
  OUTLINED_FUNCTION_15_63();
  Logger.logObject.getter();
  v4 = OUTLINED_FUNCTION_232();
  if (OUTLINED_FUNCTION_4_14(v4))
  {
    v5 = *(_QWORD *)(v0 + 176);
    v6 = (uint8_t *)OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_273_2(4.8149e-34);
    *(_QWORD *)(v2 + 24) = v5;
    OUTLINED_FUNCTION_15_63();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
    v7 = OUTLINED_FUNCTION_66_20();
    *(_QWORD *)(v0 + 32) = OUTLINED_FUNCTION_336_1(v7, v8, v9);
    OUTLINED_FUNCTION_33_38();
    OUTLINED_FUNCTION_54_1();
    OUTLINED_FUNCTION_19_2();
    OUTLINED_FUNCTION_19_2();
    OUTLINED_FUNCTION_48(&dword_1BD004000, v3, v1, "Error updating interaction state: %s", v6);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_19_2();
  OUTLINED_FUNCTION_19_2();
  OUTLINED_FUNCTION_19_2();

  swift_task_dealloc();
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_81_0();
  return OUTLINED_FUNCTION_48_34(*(uint64_t (**)(void))(v0 + 8));
}

void closure #3 in ScreenSharingInteractionSession.init(session:controller:serverBag:contactManager:)(uint64_t a1)
{
  closure #1 in ScreenSharingInteractionSession.init(session:controller:serverBag:contactManager:)(a1, "Screen sharing capture interaction invalidated with error: %s");
}

void closure #1 in ScreenSharingInteractionSession.init(session:controller:serverBag:contactManager:)(uint64_t a1, const char *a2)
{
  uint64_t v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  unint64_t v7;
  NSObject *oslog;
  uint64_t v9;

  if (one-time initialization token for screenSharing != -1)
    swift_once();
  v3 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v3, (uint64_t)&static Log.screenSharing);
  OUTLINED_FUNCTION_67();
  OUTLINED_FUNCTION_67();
  oslog = Logger.logObject.getter();
  v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(oslog, v4))
  {
    v5 = (uint8_t *)OUTLINED_FUNCTION_105();
    v9 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v5 = 136315138;
    OUTLINED_FUNCTION_67();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
    v6 = String.init<A>(reflecting:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v6, v7, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_25();
    OUTLINED_FUNCTION_30_5();
    OUTLINED_FUNCTION_30_5();
    OUTLINED_FUNCTION_48(&dword_1BD004000, oslog, v4, a2, v5);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_30_5();
  OUTLINED_FUNCTION_30_5();

}

uint64_t closure #4 in ScreenSharingInteractionSession.init(session:controller:serverBag:contactManager:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v32 = a2;
  v5 = type metadata accessor for Participant();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RemoteControlMessage?);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for RemoteControlMessage(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for screenSharing != -1)
    swift_once();
  v15 = type metadata accessor for Logger();
  __swift_project_value_buffer(v15, (uint64_t)&static Log.screenSharing);
  outlined init with copy of ShareCardStatusHeaderView(a1, (uint64_t)v14, type metadata accessor for RemoteControlMessage);
  v16 = Logger.logObject.getter();
  v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    v30 = v5;
    v18 = swift_slowAlloc();
    v31 = a3;
    v19 = (uint8_t *)v18;
    v20 = swift_slowAlloc();
    v29 = a1;
    v21 = v20;
    v34 = v20;
    v28 = v6;
    *(_DWORD *)v19 = 136315138;
    v27 = v19 + 4;
    outlined init with copy of ShareCardStatusHeaderView((uint64_t)v14, (uint64_t)v11, type metadata accessor for RemoteControlMessage);
    __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v12);
    specialized >> prefix<A>(_:)((uint64_t)v11);
    v23 = v22;
    v25 = v24;
    outlined destroy of AsyncStream<Bool>?((uint64_t)v11, &demangling cache variable for type metadata for RemoteControlMessage?);
    v33 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v23, v25, &v34);
    v6 = v28;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v5 = v30;
    swift_bridgeObjectRelease();
    outlined destroy of RemoteControlMessage((uint64_t)v14, type metadata accessor for RemoteControlMessage);
    _os_log_impl(&dword_1BD004000, v16, v17, "Received remote control message: %s", v19, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v21, -1, -1);
    MEMORY[0x1C3B751B8](v19, -1, -1);
  }
  else
  {
    outlined destroy of RemoteControlMessage((uint64_t)v14, type metadata accessor for RemoteControlMessage);
  }

  GroupSessionMessenger.MessageContext.source.getter();
  ScreenSharingInteractionSession.handleRemoteControlMessage(_:from:)();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t thunk for @escaping @callee_guaranteed (@in_guaranteed RemoteControlMessage, @in_guaranteed GroupSessionMessenger.MessageContext) -> ()(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (RemoteControlMessage, GroupSessionMessenger.MessageContext));
  return a2(a1, a1 + *(int *)(v4 + 48));
}

Swift::Void __swiftcall ScreenSharingInteractionSession.setup()()
{
  NSObject *v0;
  os_log_type_t v1;
  uint64_t v2;
  os_log_type_t v3;
  uint8_t *v4;
  void *Strong;
  unint64_t isa;
  uint64_t v7;
  uint64_t v8;

  if (one-time initialization token for screenSharing != -1)
    swift_once();
  v2 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v2, (uint64_t)&static Log.screenSharing);
  v3 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_5_3(v3))
  {
    v4 = (uint8_t *)OUTLINED_FUNCTION_105();
    *(_WORD *)v4 = 0;
    OUTLINED_FUNCTION_130(&dword_1BD004000, v0, v1, "Setting up state machine and triggering state update", v4);
    OUTLINED_FUNCTION_60();
  }

  Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  OUTLINED_FUNCTION_1();
  isa = (unint64_t)v0[16].isa;
  outlined copy of RemoteControlState(isa);
  OUTLINED_FUNCTION_14_11();
  OUTLINED_FUNCTION_117_8();
  OUTLINED_FUNCTION_30_50((unint64_t *)&v8);
  OUTLINED_FUNCTION_118_10();
  outlined consume of RemoteControlState(isa);
  OUTLINED_FUNCTION_27_0();
  v7 = v8;
  ScreenSharingInteractionController.session(_:didUpdateState:)((uint64_t)v0, &v7);

  OUTLINED_FUNCTION_204_2();
  OUTLINED_FUNCTION_3_6();
}

Swift::Void __swiftcall ScreenSharingInteractionSession.invalidate()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_4_1();
  if (one-time initialization token for screenSharing != -1)
    swift_once();
  v3 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v3, (uint64_t)&static Log.screenSharing);
  OUTLINED_FUNCTION_11_8();
  v4 = Logger.logObject.getter();
  v5 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_78_0(v4))
  {
    v6 = (uint8_t *)OUTLINED_FUNCTION_105();
    *(_DWORD *)v6 = 67109120;
    GroupSession.isLocallyInitiated.getter();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_19();
    _os_log_impl(&dword_1BD004000, v4, v5, "Invalidating group session (locallyInitiated=%{BOOL}d", v6, 8u);
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_19();

  if (*(_QWORD *)(v0 + 104))
  {
    partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
    AnyCancellable.cancel()();
    v7 = OUTLINED_FUNCTION_43();
  }
  if (*(_QWORD *)(v0 + 96))
  {
    partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
    AnyCancellable.cancel()();
    v7 = OUTLINED_FUNCTION_43();
  }
  if (*(_QWORD *)(v0 + 56))
  {
    v8 = partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
    MEMORY[0x1C3B73268](v8, MEMORY[0x1E0DEE9C0] + 8, MEMORY[0x1E0DEDCE8], MEMORY[0x1E0DEDD18]);
    v7 = OUTLINED_FUNCTION_43();
  }
  if (*(_QWORD *)(v0 + 112))
  {
    partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
    AnyCancellable.cancel()();
    v7 = OUTLINED_FUNCTION_43();
  }
  (*(void (**)(uint64_t))(**(_QWORD **)(v0 + 80) + 160))(v7);
  v9 = OUTLINED_FUNCTION_415();
  OUTLINED_FUNCTION_77_0(v1, v10, v11, v9);
  v12 = (_QWORD *)OUTLINED_FUNCTION_15();
  v12[2] = 0;
  v12[3] = 0;
  v12[4] = v0;
  OUTLINED_FUNCTION_11_8();
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCytSg_Tgm5();
  swift_release();
  ScreenSharingInteractionTransport.invalidate()();
  OUTLINED_FUNCTION_65_1();
}

uint64_t closure #1 in ScreenSharingInteractionSession.invalidate()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a4;
  return swift_task_switch();
}

uint64_t closure #1 in ScreenSharingInteractionSession.invalidate()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = OUTLINED_FUNCTION_175_1();
  *(_QWORD *)(v0 + 32) = v1;
  if (v1)
  {
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 40) = v2;
    OUTLINED_FUNCTION_30_9(v2, (uint64_t)closure #1 in ScreenSharingInteractionSession.invalidate());
    return PlaybackServer.invalidate(waitsForSession:)();
  }
  else
  {
    **(_BYTE **)(v0 + 16) = 1;
    return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v0 + 8));
  }
}

{
  OUTLINED_FUNCTION_18_55();
  OUTLINED_FUNCTION_1_6();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_4_4();
}

{
  uint64_t v0;

  **(_BYTE **)(v0 + 16) = *(_QWORD *)(v0 + 32) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ScreenSharingInteractionSession.presentRemoteControlOnboarding()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  *(_QWORD *)(v1 + 24) = OUTLINED_FUNCTION_2_25();
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_4_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v7)(void);

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = OUTLINED_FUNCTION_415();
  OUTLINED_FUNCTION_77_0(v2, v4, v5, v3);
  v6 = (_QWORD *)OUTLINED_FUNCTION_15();
  v6[2] = 0;
  v6[3] = 0;
  v6[4] = v1;
  OUTLINED_FUNCTION_11_8();
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
  swift_release();
  OUTLINED_FUNCTION_29_0();
  v7 = (uint64_t (*)(void))OUTLINED_FUNCTION_20();
  return OUTLINED_FUNCTION_14_3(v7);
}

uint64_t closure #1 in ScreenSharingInteractionSession.presentRemoteControlOnboarding()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[13] = a4;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RemoteControlRequest?);
  v4[14] = swift_task_alloc();
  v5 = type metadata accessor for Logger();
  v4[15] = v5;
  v4[16] = *(_QWORD *)(v5 - 8);
  v4[17] = swift_task_alloc();
  v6 = type metadata accessor for Participant();
  v4[18] = v6;
  v4[19] = *(_QWORD *)(v6 - 8);
  v4[20] = swift_task_alloc();
  v4[21] = type metadata accessor for RemoteControlRequest(0);
  v4[22] = swift_task_alloc();
  v4[23] = swift_task_alloc();
  return swift_task_switch();
}

void closure #1 in ScreenSharingInteractionSession.presentRemoteControlOnboarding()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  void (*v20)(uint64_t);
  void *Strong;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33[2];

  v2 = v1[13];
  OUTLINED_FUNCTION_1();
  v3 = *(_QWORD *)(v2 + 128);
  outlined copy of RemoteControlState(v3);
  OUTLINED_FUNCTION_11_8();
  OUTLINED_FUNCTION_154_3();
  OUTLINED_FUNCTION_30_50(&v31);
  OUTLINED_FUNCTION_155_1();
  if (!v0)
  {
    outlined consume of RemoteControlState(v3);
    OUTLINED_FUNCTION_19();
    if ((v31 >> 61) - 1 >= 4)
    {
      if (!(v31 >> 61))
      {
        v10 = v1[23];
        v11 = v1[19];
        v12 = v1[20];
        v30 = v1[18];
        v13 = v31;
        v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (RemoteControlRequest, Participant, Bool));
        v29 = v13;
        v15 = swift_projectBox();
        v16 = v15 + *(int *)(v14 + 48);
        OUTLINED_FUNCTION_94_7(v15, v17, type metadata accessor for RemoteControlRequest);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v12, v16, v30);
        OUTLINED_FUNCTION_2_0();
        RemoteControlStateMachine.presentOnboardingForRemoteControlRequest(_:from:)(v10, v12);
        OUTLINED_FUNCTION_248();
        Strong = (void *)swift_unknownObjectUnownedLoadStrong();
        v23 = *(_QWORD *)(v2 + 128);
        outlined copy of RemoteControlState(v23);
        OUTLINED_FUNCTION_14_11();
        OUTLINED_FUNCTION_319_1();
        OUTLINED_FUNCTION_33_41(&v32);
        v24 = v1[23];
        v25 = v1[19];
        v26 = v1[20];
        v27 = v1[13];
        OUTLINED_FUNCTION_320_0();
        outlined consume of RemoteControlState(v23);
        OUTLINED_FUNCTION_27_0();
        v28 = v32;
        v33[0] = v32;
        ScreenSharingInteractionController.session(_:didUpdateState:)(v27, v33);

        outlined consume of RemoteControlState(v28);
        OUTLINED_FUNCTION_230_0(v26, *(uint64_t (**)(uint64_t, uint64_t))(v25 + 8));
        outlined destroy of RemoteControlMessage(v24, type metadata accessor for RemoteControlRequest);
        outlined consume of RemoteControlState(v29);
        goto LABEL_12;
      }
    }
    else
    {
      outlined consume of RemoteControlState(v31);
    }
    if (one-time initialization token for screenSharing != -1)
      swift_once();
    v4 = __swift_project_value_buffer(v1[15], (uint64_t)&static Log.screenSharing);
    OUTLINED_FUNCTION_225_2(v4);
    OUTLINED_FUNCTION_29_1();
    v5 = Logger.logObject.getter();
    v6 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_162_3(v6))
    {
      v7 = (uint8_t *)OUTLINED_FUNCTION_105();
      v32 = OUTLINED_FUNCTION_105();
      *(_DWORD *)v7 = 136315138;
      v8 = *(_QWORD *)(v2 + 128);
      OUTLINED_FUNCTION_245_0(v8);
      OUTLINED_FUNCTION_319_1();
      OUTLINED_FUNCTION_33_41((unint64_t *)v33);
      OUTLINED_FUNCTION_320_0();
      OUTLINED_FUNCTION_244(v8);
      v1[9] = v33[0];
      v18 = String.init<A>(reflecting:)();
      v1[8] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v18, v19, (uint64_t *)&v32);
      OUTLINED_FUNCTION_287_1();
      OUTLINED_FUNCTION_25();
      OUTLINED_FUNCTION_23_0();
      OUTLINED_FUNCTION_48(&dword_1BD004000, v5, v6, "Missing receivedRequest, state: %s", v7);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }
    OUTLINED_FUNCTION_23_0();

    v9 = OUTLINED_FUNCTION_64();
    v20(v9);
LABEL_12:
    swift_task_dealloc();
    OUTLINED_FUNCTION_29_0();
    OUTLINED_FUNCTION_12();
    OUTLINED_FUNCTION_81_0();
    OUTLINED_FUNCTION_625();
    OUTLINED_FUNCTION_265_2();
    __asm { BR              X0 }
  }
  OUTLINED_FUNCTION_265_2();
}

uint64_t ScreenSharingInteractionSession.sendRemoteControlMessage(_:to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  v4 = type metadata accessor for Participants();
  v3[18] = v4;
  v3[19] = *(_QWORD *)(v4 - 8);
  v3[20] = OUTLINED_FUNCTION_23_3();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RemoteControlMessage?);
  v3[21] = OUTLINED_FUNCTION_2_25();
  v3[22] = OUTLINED_FUNCTION_32_16();
  v3[23] = OUTLINED_FUNCTION_2_25();
  v3[24] = OUTLINED_FUNCTION_97_7();
  v3[25] = OUTLINED_FUNCTION_6_15();
  v3[26] = OUTLINED_FUNCTION_5_55();
  v3[27] = OUTLINED_FUNCTION_5_55();
  v3[28] = OUTLINED_FUNCTION_5_55();
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_4_4();
}

uint64_t ScreenSharingInteractionSession.sendRemoteControlMessage(_:to:)()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  os_log_type_t v5;
  _WORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t (*v12)(void);

  v1 = *(void **)(v0[17] + 168);
  if ((FTServerBag.remoteControlEnabled.getter() & 1) != 0)
  {
    OUTLINED_FUNCTION_2_0();
    v2 = OUTLINED_FUNCTION_64();
    RemoteControlStateMachine.validateOutgoingMessage(_:to:)(v2, v3);
    v9 = v0[28];
    v10 = v0[15];
    OUTLINED_FUNCTION_248();
    outlined init with copy of ShareCardStatusHeaderView(v10, v9, type metadata accessor for RemoteControlMessage);
    OUTLINED_FUNCTION_239_2();
    v11 = (char *)&loc_1BD347EE0 + 4 * byte_1BD659326[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  if (one-time initialization token for screenSharing != -1)
    swift_once();
  v4 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v4, (uint64_t)&static Log.screenSharing);
  v5 = OUTLINED_FUNCTION_232();
  if (OUTLINED_FUNCTION_23_5(v5))
  {
    v6 = (_WORD *)OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_124_3(v6);
    OUTLINED_FUNCTION_11_78(&dword_1BD004000, v7, v8, "Dropping outgoing message due to server bag disabling the feature");
    OUTLINED_FUNCTION_60();
  }

  OUTLINED_FUNCTION_128_6();
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_81_0();
  OUTLINED_FUNCTION_625();
  OUTLINED_FUNCTION_633();
  OUTLINED_FUNCTION_575();
  v12 = (uint64_t (*)(void))OUTLINED_FUNCTION_20();
  return v12();
}

{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_18_55();
  OUTLINED_FUNCTION_233_0();
  *(_QWORD *)(v1 + 240) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_4_4();
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v5;

  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_24_4(v3);
  v0[32] = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_34_18(v0[19]);
  if (v1)
  {
    OUTLINED_FUNCTION_2_14();
    return OUTLINED_FUNCTION_2_8();
  }
  else
  {
    v5 = (_QWORD *)swift_task_alloc();
    v0[33] = (uint64_t)v5;
    *v5 = v2;
    v5[1] = ScreenSharingInteractionSession.sendRemoteControlMessage(_:to:);
    return ScreenSharingInteractionSession.updateInteractionState()();
  }
}

{
  OUTLINED_FUNCTION_363_1();
  OUTLINED_FUNCTION_1_6();
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_4_4();
}

{
  uint64_t v0;

  swift_release();
  v0 = OUTLINED_FUNCTION_255_1();
  OUTLINED_FUNCTION_173_2(v0, &demangling cache variable for type metadata for ConversationControlsType?);
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_1_3();
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_284();
  outlined destroy of RemoteControlMessage(*(_QWORD *)(v0 + 184), type metadata accessor for RemoteControlResponse);
  OUTLINED_FUNCTION_236_2();
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_81_0();
  OUTLINED_FUNCTION_625();
  OUTLINED_FUNCTION_633();
  OUTLINED_FUNCTION_575();
  OUTLINED_FUNCTION_535();
  return OUTLINED_FUNCTION_66_0(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_284();
  OUTLINED_FUNCTION_236_2();
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_81_0();
  OUTLINED_FUNCTION_625();
  OUTLINED_FUNCTION_633();
  OUTLINED_FUNCTION_575();
  OUTLINED_FUNCTION_535();
  return OUTLINED_FUNCTION_66_0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t ScreenSharingInteractionSession.sendRemoteControlMessage(_:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,_QWORD *a22,uint64_t a23,uint64_t a24)
{
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  os_log_type_t v31;
  _BOOL8 v32;
  uint64_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  OUTLINED_FUNCTION_79_0();
  a23 = v25;
  a24 = v26;
  a22 = v24;
  outlined destroy of RemoteControlMessage(v24[23], type metadata accessor for RemoteControlResponse);
  if (one-time initialization token for screenSharing != -1)
    swift_once();
  v27 = v24[15];
  v28 = v24[27];
  v29 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v29, (uint64_t)&static Log.screenSharing);
  OUTLINED_FUNCTION_210_0((uint64_t)v27, v30, type metadata accessor for RemoteControlMessage);
  OUTLINED_FUNCTION_26_31();
  v31 = OUTLINED_FUNCTION_12_0();
  v32 = OUTLINED_FUNCTION_5_3(v31);
  v33 = v24[27];
  if (v32)
  {
    v34 = (uint8_t *)OUTLINED_FUNCTION_105();
    a13 = OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_349_0(4.8149e-34);
    OUTLINED_FUNCTION_221_1(v35, v36, type metadata accessor for RemoteControlMessage);
    v37 = OUTLINED_FUNCTION_148_1();
    specialized >> prefix<A>(_:)(v37);
    v39 = v38;
    OUTLINED_FUNCTION_253_2(v38, &demangling cache variable for type metadata for RemoteControlMessage?);
    v24[14] = OUTLINED_FUNCTION_191(v39, v40, &a13);
    OUTLINED_FUNCTION_262_1();
    OUTLINED_FUNCTION_21_0();
    outlined destroy of RemoteControlMessage(v33, type metadata accessor for RemoteControlMessage);
    OUTLINED_FUNCTION_48(&dword_1BD004000, v27, (os_log_type_t)v28, "Sending remote control message: %s", v34);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_183_1(v32, type metadata accessor for RemoteControlMessage);

  OUTLINED_FUNCTION_269_2();
  v24[31] = swift_task_alloc();
  OUTLINED_FUNCTION_298_0(&lazy protocol witness table cache variable for type RemoteControlMessage and conformance RemoteControlMessage);
  OUTLINED_FUNCTION_298_0(&lazy protocol witness table cache variable for type RemoteControlMessage and conformance RemoteControlMessage);
  OUTLINED_FUNCTION_248_2((uint64_t)ScreenSharingInteractionSession.sendRemoteControlMessage(_:to:));
  OUTLINED_FUNCTION_167_2();
  return GroupSessionMessenger.send<A>(_:to:)();
}

void ScreenSharingInteractionSession.sendRemoteControlMessage(_:to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  void *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(void);
  uint64_t v19;
  unint64_t v20[8];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  OUTLINED_FUNCTION_196_0();
  v22 = v2;
  v23 = v3;
  v21 = v1;
  v4 = *(_QWORD *)(v1 + 208);
  OUTLINED_FUNCTION_94_7(*(_QWORD *)(v1 + 120), v5, type metadata accessor for RemoteControlMessage);
  v6 = 1 << OUTLINED_FUNCTION_358_0();
  if ((v6 & 0xE) != 0)
  {
    v9 = *(_QWORD *)(v1 + 136);
    outlined destroy of RemoteControlMessage(*(_QWORD *)(v1 + 208), type metadata accessor for RemoteControlMessage);
    *(_OWORD *)(v1 + 16) = 0u;
    *(_OWORD *)(v1 + 32) = 0u;
    *(_QWORD *)(v1 + 48) = 0;
    *(_BYTE *)(v1 + 56) = -1;
    *(_QWORD *)(v1 + 272) = *(_QWORD *)(*(_QWORD *)v9 + 672);
    OUTLINED_FUNCTION_48_2();
    *(_QWORD *)(v1 + 280) = OUTLINED_FUNCTION_54_2();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_56_0();
    OUTLINED_FUNCTION_63_1();
    swift_task_switch();
  }
  else
  {
    if ((v6 & 0x31) != 0)
    {
      outlined destroy of RemoteControlMessage(*(_QWORD *)(v1 + 208), type metadata accessor for RemoteControlMessage);
      v7 = (void *)OUTLINED_FUNCTION_290_1();
      v8 = *(_QWORD *)(v4 + 128);
      OUTLINED_FUNCTION_32_38();
      OUTLINED_FUNCTION_117_8();
      OUTLINED_FUNCTION_33_41(v20);
      OUTLINED_FUNCTION_118_10();
      if (v0)
      {
        OUTLINED_FUNCTION_187_1();
        return;
      }
      v10 = OUTLINED_FUNCTION_50_29(v8);
      OUTLINED_FUNCTION_49_34(v10, v11, v12, v13, v14, v15, v16, v17, v19, v20[0], v20[1]);

      OUTLINED_FUNCTION_204_2();
    }
    OUTLINED_FUNCTION_128_6();
    OUTLINED_FUNCTION_29_0();
    OUTLINED_FUNCTION_12();
    OUTLINED_FUNCTION_81_0();
    OUTLINED_FUNCTION_625();
    OUTLINED_FUNCTION_633();
    OUTLINED_FUNCTION_575();
    v18 = (uint64_t (*)(void))OUTLINED_FUNCTION_20();
    OUTLINED_FUNCTION_48_34(v18);
  }
}

#error "1BD3486B4: call analysis failed (funcsize=37)"

uint64_t ScreenSharingInteractionSession.beginRemoteControlSession()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return OUTLINED_FUNCTION_23_57();
}

{
  uint64_t (*v0)(void);

  ScreenSharingInteractionSession.observeDisplayLayerVisibility()();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_20();
  return OUTLINED_FUNCTION_16(v0);
}

uint64_t ScreenSharingInteractionSession.cancelRemoteControlRequest()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[9] = v0;
  v2 = OUTLINED_FUNCTION_17_2();
  v1[10] = v2;
  v1[11] = *(_QWORD *)(v2 - 8);
  v1[12] = OUTLINED_FUNCTION_23_3();
  v1[13] = OUTLINED_FUNCTION_97_7();
  v1[14] = OUTLINED_FUNCTION_2_25();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RemoteControlRequest?);
  v1[15] = OUTLINED_FUNCTION_2_25();
  v3 = OUTLINED_FUNCTION_151();
  v1[16] = v3;
  v1[17] = *(_QWORD *)(v3 - 8);
  v1[18] = OUTLINED_FUNCTION_23_3();
  v1[19] = OUTLINED_FUNCTION_216_1();
  v1[20] = OUTLINED_FUNCTION_6_15();
  v1[21] = OUTLINED_FUNCTION_5_55();
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_4_4();
}

{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_24_4(v2);
  *(_QWORD *)(v0 + 192) = v1;
  swift_task_dealloc();
  outlined destroy of RemoteControlMessage(*(_QWORD *)(v0 + 112), type metadata accessor for RemoteControlMessage);
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_2_8();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_107_7();
  v1 = OUTLINED_FUNCTION_34_18(*(_QWORD *)(v0 + 136));
  OUTLINED_FUNCTION_130_3(v1, type metadata accessor for RemoteControlRequest);
  OUTLINED_FUNCTION_145_4();
  OUTLINED_FUNCTION_232_1();
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_81_0();
  OUTLINED_FUNCTION_625();
  OUTLINED_FUNCTION_633();
  v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_20();
  return OUTLINED_FUNCTION_40_36(v2);
}

{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_284();
  v1 = *(_QWORD *)(v0 + 176);
  v2 = (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 136) + 8))(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 128));
  OUTLINED_FUNCTION_130_3(v2, type metadata accessor for RemoteControlRequest);
  outlined consume of RemoteControlState(v1);
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_81_0();
  OUTLINED_FUNCTION_625();
  OUTLINED_FUNCTION_633();
  OUTLINED_FUNCTION_575();
  OUTLINED_FUNCTION_535();
  return OUTLINED_FUNCTION_66_0(*(uint64_t (**)(void))(v0 + 8));
}

void ScreenSharingInteractionSession.cancelRemoteControlRequest()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  unint64_t *v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  OUTLINED_FUNCTION_106_9();
  v23 = v22[9];
  OUTLINED_FUNCTION_1();
  v25 = *(_QWORD *)(v23 + 128);
  v24 = *(_QWORD *)(v23 + 136);
  OUTLINED_FUNCTION_32_38();
  OUTLINED_FUNCTION_117_8();
  OUTLINED_FUNCTION_35_33((unint64_t *)(v24 + 16), v22 + 5);
  OUTLINED_FUNCTION_118_10();
  if (v24 == -16)
  {
    OUTLINED_FUNCTION_50_29(v25);
    v26 = v22[5];
    v22[22] = v26;
    ((void (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)sub_1BD3488F4 + 4 * byte_1BD65932D[v26 >> 61]))(v26, v27, v28, v29, v30, v31, v32, v33, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
      a20,
      a21,
      a22);
  }
  else
  {
    OUTLINED_FUNCTION_58_26();
  }
}

#error "1BD348B94: call analysis failed (funcsize=104)"

uint64_t ScreenSharingInteractionSession.endRemoteControlSession()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[9] = v0;
  v1[10] = OUTLINED_FUNCTION_97_7();
  v1[11] = OUTLINED_FUNCTION_2_25();
  v2 = OUTLINED_FUNCTION_17_2();
  v1[12] = v2;
  v1[13] = *(_QWORD *)(v2 - 8);
  v1[14] = OUTLINED_FUNCTION_6_15();
  v1[15] = OUTLINED_FUNCTION_5_55();
  v3 = OUTLINED_FUNCTION_151();
  v1[16] = v3;
  v1[17] = *(_QWORD *)(v3 - 8);
  v1[18] = OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_216_1();
  v1[19] = OUTLINED_FUNCTION_2_25();
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_4_4();
}

{
  uint64_t v0;
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_107_7();
  OUTLINED_FUNCTION_279_2();
  OUTLINED_FUNCTION_24_4(v2);
  v1[21] = v0;
  swift_task_dealloc();
  v3 = v1[17];
  outlined destroy of RemoteControlMessage(v1[11], type metadata accessor for RemoteControlMessage);
  OUTLINED_FUNCTION_4_41(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_26_47();
}

{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_157_1();
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_81_0();
  OUTLINED_FUNCTION_625();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_20();
  return OUTLINED_FUNCTION_1_8(v0);
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_157_1();
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_81_0();
  OUTLINED_FUNCTION_625();
  return OUTLINED_FUNCTION_1_8(*(uint64_t (**)(void))(v0 + 8));
}

void ScreenSharingInteractionSession.endRemoteControlSession()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, unint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  os_unfair_lock_s *v35;
  unint64_t v36;
  uint64_t v37;

  OUTLINED_FUNCTION_106_9();
  a29 = v32;
  a30 = v33;
  a28 = v31;
  v34 = *(_QWORD *)(v31 + 72);
  OUTLINED_FUNCTION_1();
  v36 = *(_QWORD *)(v34 + 128);
  v35 = *(os_unfair_lock_s **)(v34 + 136);
  OUTLINED_FUNCTION_51_32(v36);
  os_unfair_lock_lock(v35 + 6);
  OUTLINED_FUNCTION_30_50(&a18);
  os_unfair_lock_unlock(v35 + 6);
  if (v30)
  {
    OUTLINED_FUNCTION_58_26();
  }
  else
  {
    v37 = OUTLINED_FUNCTION_50_29(v36);
    ((void (*)(uint64_t))((char *)sub_1BD348F20 + 4 * byte_1BD659333[a18 >> 61]))(v37);
  }
}

#error "1BD348FF4: call analysis failed (funcsize=96)"

uint64_t ScreenSharingInteractionSession.suspendRemoteControlSession(reason:)(_BYTE *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v2 + 96) = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  *(_QWORD *)(v2 + 104) = OUTLINED_FUNCTION_2_25();
  *(_QWORD *)(v2 + 112) = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  *(_QWORD *)(v2 + 120) = OUTLINED_FUNCTION_2_25();
  *(_QWORD *)(v2 + 128) = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<DeviceInactivityObserver.State>.Publisher);
  *(_QWORD *)(v2 + 136) = OUTLINED_FUNCTION_2_25();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.CombineLatest<Published<DeviceInactivityObserver.State>.Publisher, Published<Bool>.Publisher>);
  *(_QWORD *)(v2 + 144) = v4;
  v5 = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v2 + 152) = v5;
  *(_QWORD *)(v2 + 160) = *(_QWORD *)(v5 + 64);
  *(_QWORD *)(v2 + 168) = OUTLINED_FUNCTION_5_55();
  *(_QWORD *)(v2 + 176) = OUTLINED_FUNCTION_5_55();
  *(_QWORD *)(v2 + 184) = OUTLINED_FUNCTION_97_7();
  *(_QWORD *)(v2 + 192) = OUTLINED_FUNCTION_2_25();
  v6 = OUTLINED_FUNCTION_33_0();
  *(_QWORD *)(v2 + 200) = v6;
  *(_QWORD *)(v2 + 208) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v2 + 216) = OUTLINED_FUNCTION_23_3();
  *(_QWORD *)(v2 + 224) = type metadata accessor for RemoteControlSuspendRequest(0);
  *(_QWORD *)(v2 + 232) = OUTLINED_FUNCTION_2_25();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RemoteControlRequest?);
  *(_QWORD *)(v2 + 240) = OUTLINED_FUNCTION_2_25();
  v7 = OUTLINED_FUNCTION_17_2();
  *(_QWORD *)(v2 + 248) = v7;
  *(_QWORD *)(v2 + 256) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v2 + 264) = OUTLINED_FUNCTION_6_15();
  *(_QWORD *)(v2 + 272) = OUTLINED_FUNCTION_5_55();
  *(_QWORD *)(v2 + 280) = OUTLINED_FUNCTION_5_55();
  v8 = OUTLINED_FUNCTION_151();
  *(_QWORD *)(v2 + 288) = v8;
  *(_QWORD *)(v2 + 296) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v2 + 304) = OUTLINED_FUNCTION_6_15();
  *(_QWORD *)(v2 + 312) = OUTLINED_FUNCTION_5_55();
  *(_QWORD *)(v2 + 320) = OUTLINED_FUNCTION_216_1();
  *(_QWORD *)(v2 + 328) = OUTLINED_FUNCTION_6_15();
  *(_QWORD *)(v2 + 336) = OUTLINED_FUNCTION_5_55();
  *(_QWORD *)(v2 + 344) = OUTLINED_FUNCTION_5_55();
  *(_BYTE *)(v2 + 376) = *a1;
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_2_8();
}

void ScreenSharingInteractionSession.suspendRemoteControlSession(reason:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4[4];

  v2 = *(_QWORD *)(v1 + 96);
  OUTLINED_FUNCTION_1();
  v3 = *(_QWORD *)(v2 + 128);
  outlined copy of RemoteControlState(v3);
  OUTLINED_FUNCTION_11_8();
  OUTLINED_FUNCTION_350();
  OUTLINED_FUNCTION_30_50(v4);
  OUTLINED_FUNCTION_353_1();
  if (!v0)
  {
    outlined consume of RemoteControlState(v3);
    OUTLINED_FUNCTION_19();
    __asm { BR              X10 }
  }
  OUTLINED_FUNCTION_156_4();
}

void sub_1BD349664(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unint64_t a20)
{
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  unint64_t v27;
  os_unfair_lock_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  void (*v32)(uint64_t);
  uint64_t (*v33)(void);

  OUTLINED_FUNCTION_306();
  if (one-time initialization token for screenSharing != -1)
    swift_once();
  v23 = __swift_project_value_buffer(v21[31], (uint64_t)&static Log.screenSharing);
  OUTLINED_FUNCTION_225_2(v23);
  OUTLINED_FUNCTION_29_1();
  v24 = Logger.logObject.getter();
  v25 = static os_log_type_t.fault.getter();
  if (OUTLINED_FUNCTION_162_3(v25))
  {
    v26 = (uint8_t *)OUTLINED_FUNCTION_105();
    a19 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v26 = 136315138;
    v27 = *(_QWORD *)(v22 + 128);
    OUTLINED_FUNCTION_245_0(v27);
    OUTLINED_FUNCTION_154_3();
    OUTLINED_FUNCTION_33_41(&a20);
    if (!v20)
    {
      OUTLINED_FUNCTION_155_1();
      OUTLINED_FUNCTION_244(v27);
      v21[5] = a20;
      v30 = String.init<A>(reflecting:)();
      v21[6] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v30, v31, &a19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_23_0();
      OUTLINED_FUNCTION_25();
      OUTLINED_FUNCTION_48(&dword_1BD004000, v24, v25, "No active remote control session to suspend: %s", v26);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }
    swift_release();
    OUTLINED_FUNCTION_156_4();
    os_unfair_lock_unlock(v28);
  }
  else
  {

    OUTLINED_FUNCTION_23_0();
    v29 = OUTLINED_FUNCTION_64();
    v32(v29);
    OUTLINED_FUNCTION_152_4();
    swift_task_dealloc();
    OUTLINED_FUNCTION_625();
    OUTLINED_FUNCTION_633();
    OUTLINED_FUNCTION_575();
    OUTLINED_FUNCTION_535();
    OUTLINED_FUNCTION_578();
    OUTLINED_FUNCTION_541();
    OUTLINED_FUNCTION_29_0();
    OUTLINED_FUNCTION_12();
    OUTLINED_FUNCTION_81_0();
    OUTLINED_FUNCTION_618();
    OUTLINED_FUNCTION_647();
    OUTLINED_FUNCTION_617();
    OUTLINED_FUNCTION_545();
    OUTLINED_FUNCTION_616();
    OUTLINED_FUNCTION_615();
    OUTLINED_FUNCTION_614();
    v33 = (uint64_t (*)(void))OUTLINED_FUNCTION_20();
    OUTLINED_FUNCTION_100_5(v33);
  }
}

uint64_t ScreenSharingInteractionSession.suspendRemoteControlSession(reason:)()
{
  uint64_t v0;
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_107_7();
  OUTLINED_FUNCTION_279_2();
  OUTLINED_FUNCTION_24_4(v2);
  v1[46] = v0;
  swift_task_dealloc();
  v3 = v1[37];
  outlined destroy of RemoteControlMessage(v1[24], type metadata accessor for RemoteControlMessage);
  OUTLINED_FUNCTION_4_41(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_26_47();
}

#error "1BD34A264: call analysis failed (funcsize=290)"

uint64_t ScreenSharingInteractionSession.suspendRemoteControlSession(reason:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  _QWORD *v20;
  uint64_t v21;
  uint64_t (*v22)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  OUTLINED_FUNCTION_166_1();
  v31 = v20[30];
  v32 = v20[27];
  v33 = v20[24];
  v34 = v20[22];
  v35 = v20[21];
  v36 = v20[17];
  v37 = v20[15];
  v38 = v20[13];
  OUTLINED_FUNCTION_183_1(v21, type metadata accessor for RemoteControlSuspendRequest);
  OUTLINED_FUNCTION_575();
  OUTLINED_FUNCTION_535();
  OUTLINED_FUNCTION_578();
  OUTLINED_FUNCTION_541();
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_81_0();
  OUTLINED_FUNCTION_625();
  OUTLINED_FUNCTION_641();
  OUTLINED_FUNCTION_633();
  OUTLINED_FUNCTION_618();
  OUTLINED_FUNCTION_647();
  OUTLINED_FUNCTION_617();
  OUTLINED_FUNCTION_545();
  OUTLINED_FUNCTION_616();
  OUTLINED_FUNCTION_615();
  OUTLINED_FUNCTION_614();
  OUTLINED_FUNCTION_310();
  return v22(v22, v23, v24, v25, v26, v27, v28, v29, a9, v31, v32, v33, v34, v35, v36, v37, v38, a18, a19, a20);
}

uint64_t closure #1 in ScreenSharingInteractionSession.suspendRemoteControlSession(reason:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5[6] = a4;
  v5[7] = a5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncPublisher<Publishers.CombineLatest<Published<DeviceInactivityObserver.State>.Publisher, Published<Bool>.Publisher>>);
  v5[8] = v6;
  v5[9] = *(_QWORD *)(v6 - 8);
  v5[10] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncPublisher<Publishers.CombineLatest<Published<DeviceInactivityObserver.State>.Publisher, Published<Bool>.Publisher>>.Iterator);
  v5[11] = v7;
  v5[12] = *(_QWORD *)(v7 - 8);
  v5[13] = swift_task_alloc();
  return swift_task_switch();
}

void closure #1 in ScreenSharingInteractionSession.suspendRemoteControlSession(reason:)()
{
  OUTLINED_FUNCTION_58_3();
  OUTLINED_FUNCTION_249_2();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.CombineLatest<Published<DeviceInactivityObserver.State>.Publisher, Published<Bool>.Publisher>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.CombineLatest<Published<DeviceInactivityObserver.State>.Publisher, Published<Bool>.Publisher> and conformance Publishers.CombineLatest<A, B>, &demangling cache variable for type metadata for Publishers.CombineLatest<Published<DeviceInactivityObserver.State>.Publisher, Published<Bool>.Publisher>);
  OUTLINED_FUNCTION_267_2();
}

#error "1BD34A580: call analysis failed (funcsize=24)"

uint64_t closure #1 in ScreenSharingInteractionSession.suspendRemoteControlSession(reason:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_11_40(v2);
  if (v1)
    *(_QWORD *)(v0 + 136) = v1;
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_2_8();
}

{
  uint64_t v0;

  *(_WORD *)(v0 + 170) = *(_WORD *)(v0 + 168);
  return OUTLINED_FUNCTION_23_57();
}

{
  os_log_type_t v0;
  uint64_t v1;
  uint8_t *v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  os_log_type_t v6;
  _WORD *v7;
  const char *v8;
  uint64_t (*v9)(void);
  uint64_t v11;
  os_log_type_t v12;
  _WORD *v13;
  _QWORD *v14;
  uint64_t v15;
  os_log_type_t v16;
  _WORD *v17;
  uint64_t v18;
  os_log_type_t v19;
  _WORD *v20;
  _QWORD *v21;
  uint64_t (*v22)(void);

  v3 = *(unsigned __int16 *)(v1 + 170);
  if (((unsigned __int16)v3 & 0xFF00) == 0x200 || (v4 = OUTLINED_FUNCTION_315_2(), (*(_QWORD *)(v1 + 128) = v4) == 0))
  {
    OUTLINED_FUNCTION_60_11(*(_QWORD *)(v1 + 96));
    OUTLINED_FUNCTION_29_0();
    OUTLINED_FUNCTION_12();
    v9 = (uint64_t (*)(void))OUTLINED_FUNCTION_20();
    return OUTLINED_FUNCTION_40_36(v9);
  }
  if (!*(_BYTE *)(v1 + 170))
  {
    if (((unsigned __int16)v3 & 0x100) != 0)
      goto LABEL_22;
    if (one-time initialization token for screenSharing != -1)
      swift_once();
    v11 = OUTLINED_FUNCTION_17_2();
    OUTLINED_FUNCTION_3(v11, (uint64_t)&static Log.screenSharing);
    v12 = OUTLINED_FUNCTION_12_0();
    if (OUTLINED_FUNCTION_5_3(v12))
    {
      v13 = (_WORD *)OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_220_0(v13);
      OUTLINED_FUNCTION_130(&dword_1BD004000, v3, v0, "User is no longer controlling their device and no layers are hidden, resuming remote control", v2);
      OUTLINED_FUNCTION_60();
    }

    v14 = (_QWORD *)OUTLINED_FUNCTION_7_20();
    *(_QWORD *)(v1 + 144) = v14;
    OUTLINED_FUNCTION_30_9(v14, (uint64_t)closure #1 in ScreenSharingInteractionSession.suspendRemoteControlSession(reason:));
    v9 = v22;
    return OUTLINED_FUNCTION_40_36(v9);
  }
  if (*(_BYTE *)(v1 + 170) == 1)
  {
    if (one-time initialization token for screenSharing != -1)
      swift_once();
    v5 = OUTLINED_FUNCTION_17_2();
    OUTLINED_FUNCTION_3(v5, (uint64_t)&static Log.screenSharing);
    v6 = OUTLINED_FUNCTION_12_0();
    if (OUTLINED_FUNCTION_4_14(v6))
    {
      v7 = (_WORD *)OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_124_3(v7);
      v8 = "User is currently controlling their device, will wait before resuming remote control";
      goto LABEL_26;
    }
    goto LABEL_27;
  }
  if (((unsigned __int16)v3 & 0x100) == 0)
  {
    if (one-time initialization token for screenSharing != -1)
      swift_once();
    v15 = OUTLINED_FUNCTION_17_2();
    OUTLINED_FUNCTION_3(v15, (uint64_t)&static Log.screenSharing);
    v16 = OUTLINED_FUNCTION_12_0();
    if (OUTLINED_FUNCTION_4_14(v16))
    {
      v17 = (_WORD *)OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_124_3(v17);
      v8 = "Waiting for device inactivity state to update before resuming remote control";
      goto LABEL_26;
    }
    goto LABEL_27;
  }
LABEL_22:
  if (one-time initialization token for screenSharing != -1)
    swift_once();
  v18 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v18, (uint64_t)&static Log.screenSharing);
  v19 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_4_14(v19))
  {
    v20 = (_WORD *)OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_124_3(v20);
    v8 = "Waiting for user to navigate away from hidden layers before resuming remote control";
LABEL_26:
    OUTLINED_FUNCTION_22_50(&dword_1BD004000, v3, (os_log_type_t)v2, v8);
    OUTLINED_FUNCTION_60();
  }
LABEL_27:
  OUTLINED_FUNCTION_19();

  v21 = (_QWORD *)swift_task_alloc();
  OUTLINED_FUNCTION_237_2(v21);
  return OUTLINED_FUNCTION_68_16();
}

{
  uint64_t v0;

  *(_QWORD *)(v0 + 40) = *(_QWORD *)(v0 + 136);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
  OUTLINED_FUNCTION_8_11();
  return OUTLINED_FUNCTION_4_55();
}

{
  OUTLINED_FUNCTION_146_2();
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_4_4();
}

{
  _QWORD *v0;

  swift_release();
  v0 = (_QWORD *)swift_task_alloc();
  OUTLINED_FUNCTION_237_2(v0);
  return OUTLINED_FUNCTION_122_4();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;

  v2 = *v1;
  v4 = *v1;
  OUTLINED_FUNCTION_11_40(&v4);
  if (v0)
    *(_QWORD *)(v2 + 136) = v0;
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_2_8();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 96);
  v1 = *(_QWORD *)(v0 + 104);
  swift_release();
  OUTLINED_FUNCTION_39_0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_81_0();
  return OUTLINED_FUNCTION_1_8(*(uint64_t (**)(void))(v0 + 8));
}

void closure #2 in ScreenSharingInteractionSession.suspendRemoteControlSession(reason:)()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
  JUMPOUT(0x1C3B73268);
}

uint64_t ScreenSharingInteractionSession.resumeRemoteControlSession()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[10] = v0;
  v1[11] = OUTLINED_FUNCTION_97_7();
  v1[12] = OUTLINED_FUNCTION_2_25();
  v2 = OUTLINED_FUNCTION_17_2();
  v1[13] = v2;
  v1[14] = *(_QWORD *)(v2 - 8);
  v1[15] = OUTLINED_FUNCTION_6_15();
  v1[16] = OUTLINED_FUNCTION_5_55();
  v3 = OUTLINED_FUNCTION_151();
  v1[17] = v3;
  v1[18] = *(_QWORD *)(v3 - 8);
  v1[19] = OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_216_1();
  v1[20] = OUTLINED_FUNCTION_2_25();
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_4_4();
}

{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_24_4(v2);
  *(_QWORD *)(v0 + 184) = v1;
  swift_task_dealloc();
  outlined destroy of RemoteControlMessage(*(_QWORD *)(v0 + 96), type metadata accessor for RemoteControlMessage);
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_2_8();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  v1 = OUTLINED_FUNCTION_34_18(*(_QWORD *)(v0 + 144));
  OUTLINED_FUNCTION_130_3(v1, type metadata accessor for RemoteControlRequest);
  OUTLINED_FUNCTION_145_4();
  OUTLINED_FUNCTION_286_1();
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_81_0();
  OUTLINED_FUNCTION_625();
  v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_20();
  return OUTLINED_FUNCTION_1_8(v2);
}

{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 144) + 8))(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 136));
  OUTLINED_FUNCTION_130_3(v2, type metadata accessor for RemoteControlRequest);
  outlined consume of RemoteControlState(v1);
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_81_0();
  OUTLINED_FUNCTION_625();
  OUTLINED_FUNCTION_633();
  OUTLINED_FUNCTION_575();
  return OUTLINED_FUNCTION_1_8(*(uint64_t (**)(void))(v0 + 8));
}

#error "1BD34AD90: call analysis failed (funcsize=277)"

void ScreenSharingInteractionSession.handleRemoteControlMessage(_:from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  uint64_t v30;
  Class v31;
  char *v32;
  os_log_type_t v33;
  int v34;
  _BOOL8 v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  NSObject *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  Class v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  NSObject *v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(char *, uint64_t, NSObject *);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  Class isa;
  NSObject *v78;
  uint64_t v79;
  uint64_t v80[14];
  uint64_t v81;
  uint64_t v82;

  OUTLINED_FUNCTION_93();
  v81 = v1;
  v82 = v2;
  v4 = v3;
  v6 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_77();
  v10 = v9 - v8;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_41();
  v70 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RemoteControlMessage?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_58_5();
  v14 = type metadata accessor for Participant();
  isa = v14[-1].isa;
  v78 = v14;
  v15 = *((_QWORD *)isa + 8);
  MEMORY[0x1E0C80A78](v14);
  v75 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v72 = (char *)&v63 - v17;
  v76 = OUTLINED_FUNCTION_97_7();
  v73 = *(_QWORD *)(v76 - 8);
  v18 = *(_QWORD *)(v73 + 64);
  MEMORY[0x1E0C80A78](v76);
  MEMORY[0x1E0C80A78](v19);
  v74 = (uint64_t)&v63 - v20;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v63 - v22;
  if ((FTServerBag.remoteControlEnabled.getter() & 1) != 0)
  {
    v69 = v10;
    OUTLINED_FUNCTION_2_0();
    v71 = v6;
    RemoteControlStateMachine.validateIncomingMessage(_:from:)(v6, v4);
    v27 = v4;
    v67 = v0;
    swift_endAccess();
    if (one-time initialization token for screenSharing != -1)
      swift_once();
    v28 = OUTLINED_FUNCTION_17_2();
    v29 = __swift_project_value_buffer(v28, (uint64_t)&static Log.screenSharing);
    v30 = v71;
    outlined init with copy of ShareCardStatusHeaderView(v71, (uint64_t)v23, type metadata accessor for RemoteControlMessage);
    v31 = isa;
    v32 = v72;
    v68 = (void (*)(char *, uint64_t, NSObject *))*((_QWORD *)isa + 2);
    v68(v72, v4, v78);
    Logger.logObject.getter();
    v33 = OUTLINED_FUNCTION_12_0();
    v34 = v33;
    v35 = os_log_type_enabled(v29, v33);
    if (v35)
    {
      v36 = OUTLINED_FUNCTION_105();
      v66 = OUTLINED_FUNCTION_105();
      v80[0] = v66;
      *(_DWORD *)v36 = 136315394;
      v64 = v36 + 4;
      OUTLINED_FUNCTION_261_1((uint64_t)v23, v37, type metadata accessor for RemoteControlMessage);
      OUTLINED_FUNCTION_242_1();
      v65 = v29;
      v38 = v32;
      v40 = v39;
      v42 = v41;
      OUTLINED_FUNCTION_355_1(v39, &demangling cache variable for type metadata for RemoteControlMessage?);
      v79 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v40, v42, v80);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      outlined destroy of RemoteControlMessage((uint64_t)v23, type metadata accessor for RemoteControlMessage);
      *(_WORD *)(v36 + 12) = 2080;
      LODWORD(v64) = v34;
      v43 = v70;
      v76 = v27;
      v44 = v78;
      v68((char *)v70, (uint64_t)v38, v78);
      OUTLINED_FUNCTION_80_0();
      __swift_storeEnumTagSinglePayload(v45, v46, v47, (uint64_t)v44);
      specialized >> prefix<A>(_:)(v43);
      v49 = v48;
      v51 = v50;
      outlined destroy of AsyncStream<Bool>?(v43, (uint64_t *)&demangling cache variable for type metadata for Participant?);
      v79 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v49, v51, v80);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v52 = isa;
      swift_bridgeObjectRelease();
      (*((void (**)(char *, NSObject *))v52 + 1))(v38, v44);
      OUTLINED_FUNCTION_26_6(&dword_1BD004000, v65, (os_log_type_t)v64, "Handling remote control message: %s from participant: %s", (uint8_t *)v36);
      OUTLINED_FUNCTION_25_6();
      OUTLINED_FUNCTION_60();
    }
    OUTLINED_FUNCTION_312_1(v35, type metadata accessor for RemoteControlMessage);
    (*((void (**)(char *, NSObject *))v31 + 1))(v32, v78);

    v53 = v69;
    v54 = OUTLINED_FUNCTION_415();
    OUTLINED_FUNCTION_77_0(v53, v55, v56, v54);
    v57 = v74;
    outlined init with copy of ShareCardStatusHeaderView(v30, v74, type metadata accessor for RemoteControlMessage);
    v58 = (uint64_t)v75;
    v68(v75, v27, v78);
    v59 = (*(unsigned __int8 *)(v73 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80);
    v60 = (v18 + v59 + 7) & 0xFFFFFFFFFFFFFFF8;
    v61 = (*((unsigned __int8 *)v31 + 80) + v60 + 8) & ~(unint64_t)*((unsigned __int8 *)v31 + 80);
    v62 = swift_allocObject();
    *(_QWORD *)(v62 + 16) = 0;
    *(_QWORD *)(v62 + 24) = 0;
    outlined init with take of ShareCardStatusHeaderView(v57, v62 + v59, type metadata accessor for RemoteControlMessage);
    *(_QWORD *)(v62 + v60) = v67;
    OUTLINED_FUNCTION_107_0(v62 + v61, v58, *((uint64_t (**)(uint64_t, uint64_t, uint64_t))v31 + 4));
    OUTLINED_FUNCTION_11_8();
    _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
    swift_release();
    OUTLINED_FUNCTION_52_1();
  }
  else
  {
    if (one-time initialization token for screenSharing != -1)
      swift_once();
    v24 = OUTLINED_FUNCTION_17_2();
    v78 = OUTLINED_FUNCTION_3(v24, (uint64_t)&static Log.screenSharing);
    v25 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v78, v25))
    {
      v26 = (uint8_t *)OUTLINED_FUNCTION_105();
      *(_WORD *)v26 = 0;
      OUTLINED_FUNCTION_130(&dword_1BD004000, v78, v25, "Dropping incoming message due to server bag disabling the feature", v26);
      OUTLINED_FUNCTION_60();
    }

  }
}

uint64_t closure #1 in ScreenSharingInteractionSession.handleRemoteControlMessage(_:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[6] = a5;
  v6[7] = a6;
  v6[5] = a4;
  type metadata accessor for RemoteControlResponse(0);
  v6[8] = swift_task_alloc();
  type metadata accessor for RemoteControlRequest(0);
  v6[9] = swift_task_alloc();
  v6[10] = type metadata accessor for RemoteControlMessage(0);
  v6[11] = swift_task_alloc();
  return swift_task_switch();
}

void closure #1 in ScreenSharingInteractionSession.handleRemoteControlMessage(_:from:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char *v3;

  OUTLINED_FUNCTION_94_7(*(_QWORD *)(v2 + 40), a2, type metadata accessor for RemoteControlMessage);
  v3 = (char *)sub_1BD34B91C + 4 * byte_1BD65933F[OUTLINED_FUNCTION_358_0()];
  __asm { BR              X10 }
}

uint64_t sub_1BD34B91C()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  outlined init with take of ShareCardStatusHeaderView(v0[11], v0[9], type metadata accessor for RemoteControlRequest);
  v1 = (_QWORD *)swift_task_alloc();
  v0[12] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = closure #1 in ScreenSharingInteractionSession.handleRemoteControlMessage(_:from:);
  v2 = OUTLINED_FUNCTION_211_1(v0[9]);
  return ScreenSharingInteractionSession.handleRemoteControlRequest(_:from:)(v2, v3);
}

uint64_t sub_1BD34B968()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;

  outlined init with take of ShareCardStatusHeaderView(v0[11], v0[8], type metadata accessor for RemoteControlResponse);
  v1 = (_QWORD *)swift_task_alloc();
  v0[13] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = closure #1 in ScreenSharingInteractionSession.handleRemoteControlMessage(_:from:);
  v2 = OUTLINED_FUNCTION_211_1(v0[8]);
  return ScreenSharingInteractionSession.handleRemoteControlResponse(_:)(v2);
}

uint64_t sub_1BD34B9B4()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v1;
  *v1 = v0;
  v1[1] = closure #1 in ScreenSharingInteractionSession.handleRemoteControlMessage(_:from:);
  return ScreenSharingInteractionSession.handleRemoteControlCancellation()();
}

uint64_t sub_1BD34B9E8()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v1;
  *v1 = v0;
  v1[1] = closure #1 in ScreenSharingInteractionSession.handleRemoteControlMessage(_:from:);
  return ScreenSharingInteractionSession.handleRemoteControlSessionEnded()();
}

uint64_t sub_1BD34BA1C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 128) = v1;
  OUTLINED_FUNCTION_30_9(v1, (uint64_t)closure #1 in ScreenSharingInteractionSession.handleRemoteControlMessage(_:from:));
  return ScreenSharingInteractionSession.handleRemoteControlSuspended()();
}

uint64_t sub_1BD34BA48()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 136) = v1;
  OUTLINED_FUNCTION_30_9(v1, (uint64_t)closure #1 in ScreenSharingInteractionSession.handleRemoteControlMessage(_:from:));
  return ScreenSharingInteractionSession.handleRemoteControlResumed()();
}

uint64_t sub_1BD34BA74()
{
  uint64_t v0;

  OUTLINED_FUNCTION_159_3();
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_12();
  return OUTLINED_FUNCTION_1_8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t closure #1 in ScreenSharingInteractionSession.handleRemoteControlMessage(_:from:)()
{
  OUTLINED_FUNCTION_18_55();
  OUTLINED_FUNCTION_1_6();
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_4_4();
}

{
  OUTLINED_FUNCTION_18_55();
  OUTLINED_FUNCTION_1_6();
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_4_4();
}

{
  OUTLINED_FUNCTION_18_55();
  OUTLINED_FUNCTION_1_6();
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_4_4();
}

{
  OUTLINED_FUNCTION_18_55();
  OUTLINED_FUNCTION_1_6();
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_4_4();
}

{
  OUTLINED_FUNCTION_18_55();
  OUTLINED_FUNCTION_1_6();
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_4_4();
}

{
  OUTLINED_FUNCTION_18_55();
  OUTLINED_FUNCTION_1_6();
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_4_4();
}

#error "1BD34BB3C: call analysis failed (funcsize=42)"

#error "1BD34BC1C: call analysis failed (funcsize=42)"

#error "1BD34BD64: call analysis failed (funcsize=42)"

uint64_t ScreenSharingInteractionSession.handleRemoteControlRequest(_:from:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[17] = a2;
  v3[18] = v2;
  v3[16] = a1;
  v3[19] = OUTLINED_FUNCTION_97_7();
  v3[20] = OUTLINED_FUNCTION_2_25();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RemoteControlResponse?);
  v3[21] = OUTLINED_FUNCTION_2_25();
  v3[22] = OUTLINED_FUNCTION_32_16();
  v3[23] = OUTLINED_FUNCTION_6_15();
  v3[24] = OUTLINED_FUNCTION_5_55();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RemoteControlRequest?);
  v3[25] = OUTLINED_FUNCTION_2_25();
  v3[26] = OUTLINED_FUNCTION_216_1();
  v3[27] = OUTLINED_FUNCTION_2_25();
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_4_4();
}

uint64_t ScreenSharingInteractionSession.handleRemoteControlRequest(_:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  uint64_t v35;
  os_log_type_t v36;
  _BOOL8 v37;
  uint64_t v38;
  uint64_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  void (*v52)(uint64_t);
  uint64_t v53;
  os_log_type_t v54;
  _BOOL8 v55;
  uint64_t v56;
  uint8_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t (*v72)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;

  OUTLINED_FUNCTION_79_0();
  a23 = v25;
  a24 = v26;
  a22 = v24;
  v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DBD228]), sel_initWithContactsDataSource_, *(_QWORD *)(*(_QWORD *)(v24 + 144) + 152));
  *(_QWORD *)(v24 + 224) = v27;
  type metadata accessor for TUHandle();
  v28 = Participant.handle.getter();
  v30 = TUHandle.init(destinationID:)(v28, v29);
  *(_QWORD *)(v24 + 232) = v30;
  if (-[NSObject isHandleEligibleForScreenSharingRequests:](v27, sel_isHandleEligibleForScreenSharingRequests_, v30))
  {
    if (one-time initialization token for screenSharing != -1)
      swift_once();
    v31 = *(_QWORD *)(v24 + 128);
    v32 = *(_QWORD *)(v24 + 216);
    v33 = OUTLINED_FUNCTION_17_2();
    v34 = __swift_project_value_buffer(v33, (uint64_t)&static Log.screenSharing);
    OUTLINED_FUNCTION_261_1(v31, v35, type metadata accessor for RemoteControlRequest);
    Logger.logObject.getter();
    v36 = OUTLINED_FUNCTION_12_0();
    v37 = OUTLINED_FUNCTION_4_14(v36);
    v38 = *(_QWORD *)(v24 + 216);
    if (v37)
    {
      v39 = *(_QWORD *)(v24 + 200);
      v40 = (uint8_t *)OUTLINED_FUNCTION_105();
      a13 = OUTLINED_FUNCTION_105();
      *(_DWORD *)v40 = 136315138;
      outlined init with copy of ShareCardStatusHeaderView(v38, v39, type metadata accessor for RemoteControlRequest);
      OUTLINED_FUNCTION_252_0();
      v42 = v41;
      OUTLINED_FUNCTION_253_2(v41, &demangling cache variable for type metadata for RemoteControlRequest?);
      *(_QWORD *)(v24 + 120) = OUTLINED_FUNCTION_304(v42, v43, &a13);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_25();
      outlined destroy of RemoteControlMessage(v38, type metadata accessor for RemoteControlRequest);
      OUTLINED_FUNCTION_48(&dword_1BD004000, v34, (os_log_type_t)v32, "Handling remote control request: %s", v40);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }
    OUTLINED_FUNCTION_312_1(v37, type metadata accessor for RemoteControlRequest);

    v63 = *(_QWORD *)(v24 + 144);
    *(_QWORD *)(v24 + 64) = Participant.displayName.getter();
    *(_QWORD *)(v24 + 72) = v64;
    *(_BYTE *)(v24 + 104) = 3;
    *(_QWORD *)(v24 + 240) = *(_QWORD *)(*(_QWORD *)v63 + 672);
    OUTLINED_FUNCTION_48_2();
    *(_QWORD *)(v24 + 248) = OUTLINED_FUNCTION_54_2();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_56_0();
    OUTLINED_FUNCTION_63_1();
    OUTLINED_FUNCTION_167_2();
    return swift_task_switch();
  }
  else
  {
    if (one-time initialization token for screenSharing != -1)
      swift_once();
    v44 = OUTLINED_FUNCTION_17_2();
    v45 = __swift_project_value_buffer(v44, (uint64_t)&static Log.screenSharing);
    *(_QWORD *)(v24 + 256) = v45;
    Logger.logObject.getter();
    v46 = OUTLINED_FUNCTION_369();
    if (OUTLINED_FUNCTION_78_0(v27))
    {
      v47 = (uint8_t *)OUTLINED_FUNCTION_105();
      *(_WORD *)v47 = 0;
      OUTLINED_FUNCTION_130(&dword_1BD004000, v27, v46, "Received remote control request from ineligble contact: sending auto-rejection", v47);
      OUTLINED_FUNCTION_60();
    }
    v48 = *(_QWORD *)(v24 + 192);
    v49 = *(_QWORD *)(v24 + 176);

    UUID.init()();
    v50 = v48 + *(_DWORD *)(v49 + 20);
    OUTLINED_FUNCTION_33_0();
    v51 = OUTLINED_FUNCTION_239_2();
    v52(v51);
    Date.init()();
    *(_BYTE *)(v48 + *(int *)(v49 + 28)) = 0;
    OUTLINED_FUNCTION_261_1(v48, v53, type metadata accessor for RemoteControlResponse);
    Logger.logObject.getter();
    v54 = OUTLINED_FUNCTION_232();
    v55 = OUTLINED_FUNCTION_5_3(v54);
    v56 = *(_QWORD *)(v24 + 184);
    if (v55)
    {
      v57 = (uint8_t *)OUTLINED_FUNCTION_105();
      a13 = OUTLINED_FUNCTION_105();
      *(_DWORD *)v57 = 136315138;
      OUTLINED_FUNCTION_317_1(v56, v58, type metadata accessor for RemoteControlResponse);
      v59 = OUTLINED_FUNCTION_321_0();
      specialized >> prefix<A>(_:)(v59);
      v61 = v60;
      OUTLINED_FUNCTION_323_0(v60, &demangling cache variable for type metadata for RemoteControlResponse?);
      *(_QWORD *)(v24 + 112) = OUTLINED_FUNCTION_304(v61, v62, &a13);
      OUTLINED_FUNCTION_197_1();
      OUTLINED_FUNCTION_25();
      outlined destroy of RemoteControlMessage(v56, type metadata accessor for RemoteControlResponse);
      OUTLINED_FUNCTION_48(&dword_1BD004000, v45, (os_log_type_t)v50, "Sending rejection: %s", v57);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }
    OUTLINED_FUNCTION_183_1(v55, type metadata accessor for RemoteControlResponse);

    v66 = *(uint64_t **)(v24 + 144);
    OUTLINED_FUNCTION_94_7(*(_QWORD *)(v24 + 192), v67, type metadata accessor for RemoteControlResponse);
    OUTLINED_FUNCTION_295_1();
    OUTLINED_FUNCTION_193_1(*v66);
    v78 = v68;
    v69 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v24 + 264) = v69;
    *v69 = v24;
    v69[1] = ScreenSharingInteractionSession.handleRemoteControlRequest(_:from:);
    OUTLINED_FUNCTION_211_1(*(_QWORD *)(v24 + 160));
    OUTLINED_FUNCTION_167_2();
    return v72(v70, v71, v72, v73, v74, v75, v76, v77, a9, a10, a11, v78, a13, a14, a15, a16);
  }
}

uint64_t ScreenSharingInteractionSession.handleRemoteControlRequest(_:from:)()
{
  uint64_t v0;

  swift_release();
  v0 = OUTLINED_FUNCTION_255_1();
  OUTLINED_FUNCTION_173_2(v0, &demangling cache variable for type metadata for ConversationControlsType?);
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_1_3();
}

{
  uint64_t v0;
  void *v1;

  OUTLINED_FUNCTION_284();
  v1 = *(void **)(v0 + 224);

  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_81_0();
  OUTLINED_FUNCTION_625();
  OUTLINED_FUNCTION_633();
  OUTLINED_FUNCTION_575();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_363_1();
  OUTLINED_FUNCTION_233_0();
  *(_QWORD *)(v1 + 272) = v0;
  v2 = swift_task_dealloc();
  OUTLINED_FUNCTION_130_3(v2, type metadata accessor for RemoteControlMessage);
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_2_8();
}

{
  uint64_t v0;

  outlined destroy of RemoteControlMessage(*(_QWORD *)(v0 + 192), type metadata accessor for RemoteControlResponse);
  OUTLINED_FUNCTION_134_5();
  *(_QWORD *)(v0 + 288) = OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_56_0();
  OUTLINED_FUNCTION_63_1();
  return OUTLINED_FUNCTION_2_8();
}

{
  uint64_t v0;

  swift_release();
  v0 = OUTLINED_FUNCTION_255_1();
  OUTLINED_FUNCTION_173_2(v0, &demangling cache variable for type metadata for ConversationControlsType?);
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_1_3();
}

{
  os_log_type_t v0;
  uint64_t *v1;
  uint8_t *v2;
  NSObject *v3;
  os_log_type_t v4;
  _WORD *v5;

  v3 = v1[32];
  outlined destroy of RemoteControlMessage(v1[24], type metadata accessor for RemoteControlResponse);
  Logger.logObject.getter();
  v4 = OUTLINED_FUNCTION_232();
  if (OUTLINED_FUNCTION_5_3(v4))
  {
    v5 = (_WORD *)OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_220_0(v5);
    OUTLINED_FUNCTION_130(&dword_1BD004000, v3, v0, "Error sending auto-rejection, but we're still not allowing control", v2);
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_19_2();

  OUTLINED_FUNCTION_134_5();
  v1[36] = OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_56_0();
  OUTLINED_FUNCTION_63_1();
  return OUTLINED_FUNCTION_0_6();
}

uint64_t ScreenSharingInteractionSession.handleRemoteControlResponse(_:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[3] = a1;
  v2[4] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RemoteControlResponse?);
  v2[5] = OUTLINED_FUNCTION_2_25();
  v2[6] = OUTLINED_FUNCTION_32_16();
  v2[7] = OUTLINED_FUNCTION_2_25();
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_4_4();
}

uint64_t ScreenSharingInteractionSession.handleRemoteControlResponse(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,_QWORD *a22,uint64_t a23,uint64_t a24)
{
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  os_log_type_t v31;
  _BOOL8 v32;
  uint64_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;

  OUTLINED_FUNCTION_79_0();
  a23 = v25;
  a24 = v26;
  a22 = v24;
  if (one-time initialization token for screenSharing != -1)
    swift_once();
  v27 = v24[3];
  v28 = v24[7];
  v29 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v29, (uint64_t)&static Log.screenSharing);
  OUTLINED_FUNCTION_210_0((uint64_t)v27, v30, type metadata accessor for RemoteControlResponse);
  OUTLINED_FUNCTION_26_31();
  v31 = OUTLINED_FUNCTION_12_0();
  v32 = OUTLINED_FUNCTION_5_3(v31);
  v33 = v24[7];
  if (v32)
  {
    v34 = (uint8_t *)OUTLINED_FUNCTION_105();
    a13 = OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_349_0(4.8149e-34);
    OUTLINED_FUNCTION_221_1(v35, v36, type metadata accessor for RemoteControlResponse);
    v37 = OUTLINED_FUNCTION_148_1();
    specialized >> prefix<A>(_:)(v37);
    v39 = v38;
    OUTLINED_FUNCTION_253_2(v38, &demangling cache variable for type metadata for RemoteControlResponse?);
    v24[2] = OUTLINED_FUNCTION_191(v39, v40, &a13);
    OUTLINED_FUNCTION_262_1();
    OUTLINED_FUNCTION_21_0();
    outlined destroy of RemoteControlMessage(v33, type metadata accessor for RemoteControlResponse);
    OUTLINED_FUNCTION_48(&dword_1BD004000, v27, (os_log_type_t)v28, "Handling remote control response: %s", v34);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_183_1(v32, type metadata accessor for RemoteControlResponse);

  v41 = (_QWORD *)swift_task_alloc();
  v24[8] = v41;
  *v41 = v24;
  v41[1] = ScreenSharingInteractionSession.handleRemoteControlResponse(_:);
  OUTLINED_FUNCTION_167_2();
  return ScreenSharingInteractionSession.updateInteractionState()();
}

uint64_t ScreenSharingInteractionSession.handleRemoteControlResponse(_:)()
{
  uint64_t v0;

  OUTLINED_FUNCTION_18_55();
  OUTLINED_FUNCTION_1_6();
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_12();
  return OUTLINED_FUNCTION_1_8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t ScreenSharingInteractionSession.handleRemoteControlCancellation()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 64) = v0;
  return OUTLINED_FUNCTION_23_57();
}

{
  uint64_t v0;
  uint64_t v1;
  os_log_type_t v2;
  _WORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (one-time initialization token for screenSharing != -1)
    swift_once();
  v1 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v1, (uint64_t)&static Log.screenSharing);
  v2 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_23_5(v2))
  {
    v3 = (_WORD *)OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_124_3(v3);
    OUTLINED_FUNCTION_11_78(&dword_1BD004000, v4, v5, "Handling remote control cancellation");
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_337_1();
  OUTLINED_FUNCTION_202_3();
  *(_QWORD *)(v0 + 72) = v6;
  OUTLINED_FUNCTION_48_2();
  *(_QWORD *)(v0 + 80) = OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_56_0();
  OUTLINED_FUNCTION_63_1();
  return OUTLINED_FUNCTION_1_3();
}

{
  uint64_t v0;
  uint64_t v1;

  swift_release();
  v1 = OUTLINED_FUNCTION_255_1();
  OUTLINED_FUNCTION_173_2(v1, &demangling cache variable for type metadata for ConversationControlsType?);
  return OUTLINED_FUNCTION_14_3(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t ScreenSharingInteractionSession.handleRemoteControlSessionEnded()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 64) = v0;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 72) = v2;
  OUTLINED_FUNCTION_30_9(v2, (uint64_t)ScreenSharingInteractionSession.handleRemoteControlSessionEnded());
  return ScreenSharingInteractionSession.updateInteractionState()();
}

{
  OUTLINED_FUNCTION_18_55();
  OUTLINED_FUNCTION_1_6();
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_4_4();
}

{
  uint64_t v0;
  uint64_t v1;
  os_log_type_t v2;
  _WORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (one-time initialization token for screenSharing != -1)
    swift_once();
  v1 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v1, (uint64_t)&static Log.screenSharing);
  v2 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_23_5(v2))
  {
    v3 = (_WORD *)OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_124_3(v3);
    OUTLINED_FUNCTION_11_78(&dword_1BD004000, v4, v5, "Handling end remote control session");
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_337_1();
  OUTLINED_FUNCTION_202_3();
  *(_QWORD *)(v0 + 80) = v6;
  OUTLINED_FUNCTION_48_2();
  *(_QWORD *)(v0 + 88) = OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_56_0();
  OUTLINED_FUNCTION_63_1();
  return OUTLINED_FUNCTION_1_3();
}

{
  uint64_t v0;
  uint64_t v1;

  swift_release();
  v1 = OUTLINED_FUNCTION_255_1();
  OUTLINED_FUNCTION_173_2(v1, &demangling cache variable for type metadata for ConversationControlsType?);
  return OUTLINED_FUNCTION_14_3(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t ScreenSharingInteractionSession.handleRemoteControlSuspended()()
{
  return OUTLINED_FUNCTION_23_57();
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  os_log_type_t v3;
  _WORD *v4;
  uint64_t v5;
  uint64_t v6;

  if (one-time initialization token for screenSharing != -1)
    swift_once();
  v2 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v2, (uint64_t)&static Log.screenSharing);
  v3 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_23_5(v3))
  {
    v4 = (_WORD *)OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_124_3(v4);
    OUTLINED_FUNCTION_11_78(&dword_1BD004000, v5, v6, "Handling suspended remote control session");
    OUTLINED_FUNCTION_60();
  }

  return OUTLINED_FUNCTION_14_3(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t ScreenSharingInteractionSession.handleRemoteControlResumed()()
{
  return OUTLINED_FUNCTION_23_57();
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  os_log_type_t v3;
  _WORD *v4;
  uint64_t v5;
  uint64_t v6;

  if (one-time initialization token for screenSharing != -1)
    swift_once();
  v2 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v2, (uint64_t)&static Log.screenSharing);
  v3 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_23_5(v3))
  {
    v4 = (_WORD *)OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_124_3(v4);
    OUTLINED_FUNCTION_11_78(&dword_1BD004000, v5, v6, "Handling resumed remote control session");
    OUTLINED_FUNCTION_60();
  }

  return OUTLINED_FUNCTION_14_3(*(uint64_t (**)(void))(v1 + 8));
}

void ScreenSharingInteractionSession.observeInteractionState()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<InteractionState>.Publisher);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_16_2();
  if (OUTLINED_FUNCTION_175_1())
  {
    PlaybackServer.$interactionState.getter();
    OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_7_4();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Published<InteractionState>.Publisher and conformance Published<A>.Publisher, &demangling cache variable for type metadata for Published<InteractionState>.Publisher);
    v4 = Publisher<>.sink(receiveValue:)();
    OUTLINED_FUNCTION_27_0();
    OUTLINED_FUNCTION_17_22();
    OUTLINED_FUNCTION_8(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    *(_QWORD *)(v1 + 120) = v4;
    swift_release();
  }
  OUTLINED_FUNCTION_65_1();
}

uint64_t closure #1 in ScreenSharingInteractionSession.observeInteractionState()()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  uint64_t v8;
  char v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v16 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for InteractionState();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v8 = result;
    (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0D8BF60], v3);
    v9 = static InteractionState.== infix(_:_:)();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    if ((v9 & 1) != 0)
    {
      if (one-time initialization token for screenSharing != -1)
        swift_once();
      v10 = type metadata accessor for Logger();
      __swift_project_value_buffer(v10, (uint64_t)&static Log.screenSharing);
      v11 = Logger.logObject.getter();
      v12 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v11, v12))
      {
        v13 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v13 = 0;
        _os_log_impl(&dword_1BD004000, v11, v12, "Suspending remote control due to local device activity", v13, 2u);
        MEMORY[0x1C3B751B8](v13, -1, -1);
      }

      v14 = type metadata accessor for TaskPriority();
      __swift_storeEnumTagSinglePayload((uint64_t)v2, 1, 1, v14);
      v15 = (_QWORD *)swift_allocObject();
      v15[2] = 0;
      v15[3] = 0;
      v15[4] = v8;
      _sScTss5Error_pRs_rlE8priority9operationScTyxsAA_pGScPSg_xyYaKYAcntcfCyt_Tgm5((uint64_t)v2, (uint64_t)&async function pointer to partial apply for closure #1 in closure #1 in ScreenSharingInteractionSession.observeInteractionState(), (uint64_t)v15);
    }
    return swift_release();
  }
  return result;
}

uint64_t closure #1 in closure #1 in ScreenSharingInteractionSession.observeInteractionState()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  *(_BYTE *)(v4 + 32) = 1;
  v7 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)a4 + 568) + *(_QWORD *)(*(_QWORD *)a4 + 568));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v5;
  *v5 = v4;
  v5[1] = closure #1 in closure #1 in ScreenSharingInteractionSession.observeInteractionState();
  return v7(v4 + 32);
}

uint64_t closure #1 in closure #1 in ScreenSharingInteractionSession.observeInteractionState()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_233_0();
  *(_QWORD *)(v2 + 24) = v0;
  swift_task_dealloc();
  if (!v0)
    return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v1 + 8));
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_4_4();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void ScreenSharingInteractionSession.observeDisplayLayerVisibility()()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(void);
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;

  OUTLINED_FUNCTION_93();
  v1 = v0;
  v22 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = v4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v9);
  (*(void (**)(__n128))(*(_QWORD *)v0[11] + 120))(v10);
  v11 = OUTLINED_FUNCTION_415();
  OUTLINED_FUNCTION_77_0((uint64_t)v4, v12, v13, v11);
  v14 = OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_7_4();
  OUTLINED_FUNCTION_55_4();
  v15();
  v16 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v17 = (v7 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = 0;
  *(_QWORD *)(v18 + 24) = 0;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v18 + v16, v8, v5);
  *(_QWORD *)(v18 + v17) = v14;
  v19 = (uint64_t)v21;
  *(_QWORD *)(v18 + ((v17 + 15) & 0xFFFFFFFFFFFFFFF8)) = v22;
  _sScTss5Error_pRs_rlE8priority9operationScTyxsAA_pGScPSg_xyYaKYAcntcfCyt_Tgm5(v19, (uint64_t)&async function pointer to partial apply for closure #1 in ScreenSharingInteractionSession.observeDisplayLayerVisibility(), v18);
  OUTLINED_FUNCTION_382();
  OUTLINED_FUNCTION_14_0();
  v20 = OUTLINED_FUNCTION_365_0();
  OUTLINED_FUNCTION_8(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  v1[12] = v20;
  swift_release();
  OUTLINED_FUNCTION_52_1();
}

uint64_t closure #1 in ScreenSharingInteractionSession.observeDisplayLayerVisibility()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[6] = a4;
  v5[7] = a5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncPublisher<Published<Bool>.Publisher>);
  v5[8] = v6;
  v5[9] = *(_QWORD *)(v6 - 8);
  v5[10] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncPublisher<Published<Bool>.Publisher>.Iterator);
  v5[11] = v7;
  v5[12] = *(_QWORD *)(v7 - 8);
  v5[13] = swift_task_alloc();
  v8 = type metadata accessor for ContinuousClock();
  v5[14] = v8;
  v5[15] = *(_QWORD *)(v8 - 8);
  v5[16] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t closure #1 in ScreenSharingInteractionSession.observeDisplayLayerVisibility()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(void);

  ContinuousClock.init()();
  v1 = (_QWORD *)OUTLINED_FUNCTION_19_13();
  *(_QWORD *)(v0 + 136) = v1;
  *v1 = v0;
  v1[1] = closure #1 in ScreenSharingInteractionSession.observeDisplayLayerVisibility();
  OUTLINED_FUNCTION_2_14();
  return v3();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_18_55();
  v2 = *(_QWORD *)(v1 + 120);
  OUTLINED_FUNCTION_233_0();
  *(_QWORD *)(v3 + 144) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_4_41(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_0_6();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;

  v2 = *v1;
  v4 = *v1;
  OUTLINED_FUNCTION_11_40(&v4);
  if (v0)
    *(_QWORD *)(v2 + 176) = v0;
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_2_8();
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_309_2();
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_81_0();
  return OUTLINED_FUNCTION_14_3(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;

  *(_BYTE *)(v0 + 210) = *(_BYTE *)(v0 + 208);
  return OUTLINED_FUNCTION_23_57();
}

{
  NSObject *v0;
  os_log_type_t v1;
  uint64_t v2;
  uint8_t *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(void);
  uint64_t v8;
  os_log_type_t v9;
  _WORD *v10;
  _QWORD *v11;
  uint64_t (*v12)(uint64_t);

  if (*(_BYTE *)(v2 + 210) == 2 || (v4 = OUTLINED_FUNCTION_315_2(), (*(_QWORD *)(v2 + 168) = v4) == 0))
  {
    OUTLINED_FUNCTION_20_6(*(_QWORD *)(v2 + 96));
    OUTLINED_FUNCTION_29_0();
    OUTLINED_FUNCTION_12();
    OUTLINED_FUNCTION_81_0();
    v7 = (uint64_t (*)(void))OUTLINED_FUNCTION_20();
    return OUTLINED_FUNCTION_40_36(v7);
  }
  else if ((*(_BYTE *)(v2 + 210) & 1) != 0)
  {
    if (one-time initialization token for screenSharing != -1)
      swift_once();
    v8 = OUTLINED_FUNCTION_17_2();
    OUTLINED_FUNCTION_3(v8, (uint64_t)&static Log.screenSharing);
    v9 = OUTLINED_FUNCTION_12_0();
    if (OUTLINED_FUNCTION_5_3(v9))
    {
      v10 = (_WORD *)OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_220_0(v10);
      OUTLINED_FUNCTION_130(&dword_1BD004000, v0, v1, "Suspending remote control due to layers being hidden from cloned display", v3);
      OUTLINED_FUNCTION_60();
    }

    *(_BYTE *)(v2 + 209) = 2;
    v11 = (_QWORD *)OUTLINED_FUNCTION_7_20();
    *(_QWORD *)(v2 + 184) = v11;
    OUTLINED_FUNCTION_30_9(v11, (uint64_t)closure #1 in ScreenSharingInteractionSession.observeDisplayLayerVisibility());
    return v12(v2 + 209);
  }
  else
  {
    OUTLINED_FUNCTION_19();
    v5 = (_QWORD *)swift_task_alloc();
    OUTLINED_FUNCTION_203_0(v5);
    return OUTLINED_FUNCTION_68_16();
  }
}

{
  uint64_t v0;

  *(_QWORD *)(v0 + 40) = *(_QWORD *)(v0 + 176);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
  OUTLINED_FUNCTION_8_11();
  return OUTLINED_FUNCTION_4_55();
}

{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_18_55();
  OUTLINED_FUNCTION_233_0();
  *(_QWORD *)(v1 + 192) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_4_4();
}

{
  _QWORD *v0;

  swift_release();
  v0 = (_QWORD *)swift_task_alloc();
  OUTLINED_FUNCTION_203_0(v0);
  return OUTLINED_FUNCTION_122_4();
}

{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_11_40(v2);
  if (v1)
    *(_QWORD *)(v0 + 176) = v1;
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_2_8();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 96);
  v1 = *(_QWORD *)(v0 + 104);
  swift_release();
  OUTLINED_FUNCTION_39_0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_309_2();
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_81_0();
  return OUTLINED_FUNCTION_14_3(*(uint64_t (**)(void))(v0 + 8));
}

void closure #1 in ScreenSharingInteractionSession.observeDisplayLayerVisibility()()
{
  OUTLINED_FUNCTION_58_3();
  OUTLINED_FUNCTION_249_2();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Published<Bool>.Publisher and conformance Published<A>.Publisher, &demangling cache variable for type metadata for Published<Bool>.Publisher);
  OUTLINED_FUNCTION_267_2();
}

#error "1BD34D2F0: call analysis failed (funcsize=24)"

uint64_t ScreenSharingInteractionSession.updateInteractionState()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[9] = v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for InteractionState?);
  v1[10] = OUTLINED_FUNCTION_2_25();
  v2 = type metadata accessor for InteractionState();
  v1[11] = v2;
  v1[12] = *(_QWORD *)(v2 - 8);
  v1[13] = OUTLINED_FUNCTION_6_15();
  v1[14] = OUTLINED_FUNCTION_5_55();
  v1[15] = OUTLINED_FUNCTION_5_55();
  v1[16] = OUTLINED_FUNCTION_5_55();
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_4_4();
}

{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_175_1();
  *(_QWORD *)(v0 + 136) = v1;
  if (v1)
  {
    OUTLINED_FUNCTION_48_2();
    *(_QWORD *)(v0 + 144) = OUTLINED_FUNCTION_54_2();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_56_0();
    OUTLINED_FUNCTION_63_1();
    return OUTLINED_FUNCTION_0_6();
  }
  else
  {
    OUTLINED_FUNCTION_153_4();
    OUTLINED_FUNCTION_29_0();
    OUTLINED_FUNCTION_12();
    OUTLINED_FUNCTION_81_0();
    OUTLINED_FUNCTION_625();
    return OUTLINED_FUNCTION_1_8(*(uint64_t (**)(void))(v0 + 8));
  }
}

{
  swift_release();
  PlaybackServer.interactionState.getter();
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_2_8();
}

{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_18_55();
  OUTLINED_FUNCTION_233_0();
  *(_QWORD *)(v1 + 176) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_4_4();
}

{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 160);
  v2 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 88);
  swift_release();
  v1(v2, v3);
  v4 = OUTLINED_FUNCTION_64();
  ((void (*)(uint64_t))v1)(v4);
  OUTLINED_FUNCTION_153_4();
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_81_0();
  OUTLINED_FUNCTION_625();
  return OUTLINED_FUNCTION_1_8(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  os_log_type_t v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v2 = *(NSObject **)(v0 + 152);
  v3 = *(void (**)(uint64_t, uint64_t))(v0 + 160);
  v4 = *(_QWORD *)(v0 + 120);
  v5 = *(_QWORD *)(v0 + 88);
  swift_release();
  v3(v4, v5);
  v6 = OUTLINED_FUNCTION_239_2();
  ((void (*)(uint64_t))v3)(v6);
  OUTLINED_FUNCTION_15_63();
  OUTLINED_FUNCTION_15_63();
  Logger.logObject.getter();
  v7 = OUTLINED_FUNCTION_232();
  if (OUTLINED_FUNCTION_4_14(v7))
  {
    v8 = *(_QWORD *)(v0 + 176);
    v9 = (uint8_t *)OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_273_2(4.8149e-34);
    *(_QWORD *)(v1 + 40) = v8;
    OUTLINED_FUNCTION_15_63();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
    v10 = OUTLINED_FUNCTION_66_20();
    *(_QWORD *)(v0 + 48) = OUTLINED_FUNCTION_336_1(v10, v11, v12);
    OUTLINED_FUNCTION_33_38();
    OUTLINED_FUNCTION_54_1();
    OUTLINED_FUNCTION_19_2();
    OUTLINED_FUNCTION_19_2();
    OUTLINED_FUNCTION_48(&dword_1BD004000, v2, (os_log_type_t)v4, "Failed to update interaction state %s", v9);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_19_2();
  OUTLINED_FUNCTION_19_2();
  OUTLINED_FUNCTION_19_2();

  OUTLINED_FUNCTION_153_4();
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_81_0();
  OUTLINED_FUNCTION_625();
  return OUTLINED_FUNCTION_48_34(*(uint64_t (**)(void))(v0 + 8));
}

void ScreenSharingInteractionSession.updateInteractionState()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_QWORD *a26,uint64_t a27,uint64_t a28)
{
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t, uint64_t);
  NSObject *v48;
  os_log_type_t v49;
  _BOOL4 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  os_log_type_t v64;
  NSObject *v65;

  OUTLINED_FUNCTION_166_1();
  a27 = v30;
  a28 = v31;
  a26 = v29;
  v32 = v29[9];
  OUTLINED_FUNCTION_1();
  v33 = *(_QWORD *)(v32 + 128);
  OUTLINED_FUNCTION_32_38();
  OUTLINED_FUNCTION_117_8();
  OUTLINED_FUNCTION_30_50((unint64_t *)&a16);
  OUTLINED_FUNCTION_118_10();
  if (v28)
  {
    OUTLINED_FUNCTION_310();
  }
  else
  {
    OUTLINED_FUNCTION_50_29(v33);
    OUTLINED_FUNCTION_328_1();
    if (v35)
    {
      if ((v34 & 0xC) != 0)
      {
        v36 = (_QWORD *)v29[15];
        v37 = v29[11];
        v38 = v29[12];
        v39 = (unsigned int *)MEMORY[0x1E0D8BF68];
      }
      else
      {
        v36 = (_QWORD *)v29[15];
        v37 = v29[11];
        v38 = v29[12];
        v39 = (unsigned int *)MEMORY[0x1E0D8BF60];
      }
    }
    else
    {
      v36 = (_QWORD *)v29[15];
      v37 = v29[11];
      v38 = v29[12];
      *v36 = 0x3FF0000000000000;
      v39 = (unsigned int *)MEMORY[0x1E0D8BF58];
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v38 + 104))(v36, *v39, v37);
    OUTLINED_FUNCTION_145_4();
    if (one-time initialization token for screenSharing != -1)
      swift_once();
    v41 = v29[15];
    v40 = v29[16];
    v43 = v29[13];
    v42 = v29[14];
    v44 = v29[11];
    v45 = v29[12];
    v46 = OUTLINED_FUNCTION_17_2();
    v29[19] = __swift_project_value_buffer(v46, (uint64_t)&static Log.screenSharing);
    v47 = *(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 16);
    v47(v42, v40, v44);
    v47(v43, v41, v44);
    v48 = Logger.logObject.getter();
    v49 = static os_log_type_t.default.getter();
    v50 = os_log_type_enabled(v48, v49);
    v52 = v29[13];
    v51 = v29[14];
    if (v50)
    {
      v65 = v48;
      v53 = v29[10];
      v63 = v29[13];
      v54 = OUTLINED_FUNCTION_105();
      a16 = OUTLINED_FUNCTION_105();
      *(_DWORD *)v54 = 136315394;
      OUTLINED_FUNCTION_367_0(v53);
      OUTLINED_FUNCTION_243_0();
      v64 = v49;
      v56 = v55;
      OUTLINED_FUNCTION_355_1(v55, &demangling cache variable for type metadata for InteractionState?);
      v29[7] = OUTLINED_FUNCTION_304(v56, v57, &a16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_25();
      OUTLINED_FUNCTION_218_2(v51);
      *(_WORD *)(v54 + 12) = 2080;
      OUTLINED_FUNCTION_367_0(v53);
      OUTLINED_FUNCTION_243_0();
      v59 = v58;
      outlined destroy of AsyncStream<Bool>?(v53, &demangling cache variable for type metadata for InteractionState?);
      v29[8] = OUTLINED_FUNCTION_304(v59, v60, &a16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_25();
      OUTLINED_FUNCTION_218_2(v63);
      OUTLINED_FUNCTION_26_6(&dword_1BD004000, v65, v64, "Updating interaction state from %s to %s", (uint8_t *)v54);
      OUTLINED_FUNCTION_25_6();
      OUTLINED_FUNCTION_60();
    }
    v61 = *(_QWORD *)(v29[12] + 8);
    OUTLINED_FUNCTION_218_2(v29[14]);
    OUTLINED_FUNCTION_218_2(v52);

    v29[20] = v61;
    v62 = (_QWORD *)swift_task_alloc();
    v29[21] = v62;
    *v62 = v29;
    v62[1] = ScreenSharingInteractionSession.updateInteractionState();
    OUTLINED_FUNCTION_211_1(v29[15]);
    OUTLINED_FUNCTION_310();
    PlaybackServer.changeInteractionState(_:)();
  }
}

uint64_t RemoteControlState.interactionState(displayScale:)@<X0>(double *a1@<X8>)
{
  double v2;
  char v3;
  char v4;
  char v5;
  double v6;
  unsigned int *v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_328_1();
  if (v5)
  {
    if ((v4 & 0xC) != 0)
      v7 = (unsigned int *)MEMORY[0x1E0D8BF68];
    else
      v7 = (unsigned int *)MEMORY[0x1E0D8BF60];
  }
  else
  {
    v6 = v2;
    if ((v3 & 1) != 0)
      v6 = 1.0;
    *a1 = v6;
    v7 = (unsigned int *)MEMORY[0x1E0D8BF58];
  }
  v8 = *v7;
  v9 = type metadata accessor for InteractionState();
  return (*(uint64_t (**)(double *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(a1, v8, v9);
}

Swift::Void __swiftcall ScreenSharingInteractionSession.handleRemoteControlUserResponse(allowRemoteControl:)(Swift::Bool allowRemoteControl)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int EnumTagSinglePayload;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_77();
  v7 = v6 - v5;
  v8 = OUTLINED_FUNCTION_415();
  __swift_storeEnumTagSinglePayload(v7, 1, 1, v8);
  v9 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v9 + 16) = 0;
  *(_QWORD *)(v9 + 24) = 0;
  *(_QWORD *)(v9 + 32) = v2;
  *(_BYTE *)(v9 + 40) = allowRemoteControl;
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v7, 1, v8);
  OUTLINED_FUNCTION_11_1();
  if (EnumTagSinglePayload == 1)
  {
    outlined destroy of AsyncStream<Bool>?(v7, &demangling cache variable for type metadata for TaskPriority?);
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
    if (*(_QWORD *)(v9 + 16))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      dispatch thunk of Actor.unownedExecutor.getter();
      swift_unknownObjectRelease();
    }
  }
  swift_task_create();
  swift_release();
  OUTLINED_FUNCTION_91();
}

uint64_t closure #1 in ScreenSharingInteractionSession.handleRemoteControlUserResponse(allowRemoteControl:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v5 + 240) = a5;
  *(_QWORD *)(v5 + 80) = a4;
  v6 = type metadata accessor for Logger();
  *(_QWORD *)(v5 + 88) = v6;
  *(_QWORD *)(v5 + 96) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 + 104) = swift_task_alloc();
  *(_QWORD *)(v5 + 112) = type metadata accessor for RemoteControlMessage(0);
  *(_QWORD *)(v5 + 120) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Participant?);
  *(_QWORD *)(v5 + 128) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RemoteControlResponse?);
  *(_QWORD *)(v5 + 136) = swift_task_alloc();
  *(_QWORD *)(v5 + 144) = type metadata accessor for RemoteControlResponse(0);
  *(_QWORD *)(v5 + 152) = swift_task_alloc();
  *(_QWORD *)(v5 + 160) = swift_task_alloc();
  v7 = type metadata accessor for Participant();
  *(_QWORD *)(v5 + 168) = v7;
  *(_QWORD *)(v5 + 176) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v5 + 184) = swift_task_alloc();
  *(_QWORD *)(v5 + 192) = swift_task_alloc();
  type metadata accessor for RemoteControlRequest(0);
  *(_QWORD *)(v5 + 200) = swift_task_alloc();
  return swift_task_switch();
}

#error "1BD34E48C: call analysis failed (funcsize=321)"

uint64_t closure #1 in ScreenSharingInteractionSession.handleRemoteControlUserResponse(allowRemoteControl:)()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;

  v4 = *v1;
  v2 = v4;
  OUTLINED_FUNCTION_24_4(&v4);
  *(_QWORD *)(v2 + 232) = v0;
  swift_task_dealloc();
  outlined destroy of RemoteControlMessage(*(_QWORD *)(v2 + 120), type metadata accessor for RemoteControlMessage);
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_2_8();
}

{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v1 = *(uint64_t (**)(uint64_t))(v0 + 216);
  outlined destroy of RemoteControlMessage(*(_QWORD *)(v0 + 160), type metadata accessor for RemoteControlResponse);
  v2 = OUTLINED_FUNCTION_345_1();
  v3 = v1(v2);
  OUTLINED_FUNCTION_130_3(v3, type metadata accessor for RemoteControlRequest);
  OUTLINED_FUNCTION_145_4();
  OUTLINED_FUNCTION_170_0();
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_81_0();
  OUTLINED_FUNCTION_625();
  OUTLINED_FUNCTION_633();
  OUTLINED_FUNCTION_575();
  OUTLINED_FUNCTION_535();
  OUTLINED_FUNCTION_578();
  v4 = (uint64_t (*)(void))OUTLINED_FUNCTION_20();
  return OUTLINED_FUNCTION_1_8(v4);
}

{
  uint64_t v0;
  unint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_32_8();
  v1 = *(_QWORD *)(v0 + 208);
  v2 = *(uint64_t (**)(uint64_t))(v0 + 216);
  OUTLINED_FUNCTION_312_1(v3, type metadata accessor for RemoteControlResponse);
  v4 = OUTLINED_FUNCTION_239_2();
  v5 = v2(v4);
  OUTLINED_FUNCTION_130_3(v5, type metadata accessor for RemoteControlRequest);
  outlined consume of RemoteControlState(v1);
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_81_0();
  OUTLINED_FUNCTION_625();
  OUTLINED_FUNCTION_575();
  OUTLINED_FUNCTION_535();
  OUTLINED_FUNCTION_578();
  swift_task_dealloc();
  OUTLINED_FUNCTION_641();
  OUTLINED_FUNCTION_618();
  return OUTLINED_FUNCTION_165(*(uint64_t (**)(void))(v0 + 8));
}

void ScreenSharingInteractionSession.updateHUDActivity(type:)()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  _WORD *v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[4];
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  NSObject *v50;
  uint64_t v51;
  _QWORD v52[6];
  __int128 v53[2];
  unsigned __int8 v54;
  _OWORD v55[3];

  OUTLINED_FUNCTION_93();
  v1 = v0;
  v49 = v2;
  v3 = type metadata accessor for Date();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_41();
  v48 = v5;
  v47 = OUTLINED_FUNCTION_33_0();
  v46[3] = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  v6 = OUTLINED_FUNCTION_231_0();
  v7 = type metadata accessor for HUDActivityManager.BannerUpdate(v6);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v46 - v12;
  if (one-time initialization token for screenSharing != -1)
    swift_once();
  v14 = OUTLINED_FUNCTION_17_2();
  v15 = __swift_project_value_buffer(v14, (uint64_t)&static Log.screenSharing);
  OUTLINED_FUNCTION_29_1();
  v50 = v15;
  Logger.logObject.getter();
  v16 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_21_12(v16))
  {
    v46[0] = v4;
    v46[1] = v3;
    v17 = (uint8_t *)OUTLINED_FUNCTION_105();
    *(_QWORD *)&v55[0] = OUTLINED_FUNCTION_105();
    *(_DWORD *)v17 = 136315138;
    v18 = v1[18];
    v46[2] = v13;
    if (v18)
    {
      *(_QWORD *)&v53[0] = v18;
      type metadata accessor for HUDActivity(0);
      OUTLINED_FUNCTION_14_11();
      v19 = String.init<A>(reflecting:)();
      v21 = v20;
    }
    else
    {
      v19 = 7104878;
      v21 = 0xE300000000000000;
    }
    *(_QWORD *)&v53[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v19, v21, (uint64_t *)v55);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_23_0();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_48(&dword_1BD004000, v15, v16, "Ending current HUD activity %s", v17);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  OUTLINED_FUNCTION_23_0();
  v22 = v1[18];
  if (v22)
  {
    v23 = *(void (**)(uint64_t))(*(_QWORD *)v22 + 224);
    v24 = partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
    v23(v24);
    OUTLINED_FUNCTION_43();
  }
  outlined init with copy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v49, (uint64_t)v53, &demangling cache variable for type metadata for ConversationControlsType?);
  if (v54 == 255)
  {
    outlined destroy of AsyncStream<Bool>?((uint64_t)v53, &demangling cache variable for type metadata for ConversationControlsType?);
    v27 = Logger.logObject.getter();
    v28 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (_WORD *)OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_124_3(v29);
      OUTLINED_FUNCTION_60();
    }

  }
  else
  {
    outlined init with take of ConversationControlsType(v53, v55);
    OUTLINED_FUNCTION_343_1();
    if (v54 == 4)
    {
      outlined init with copy of ConversationControlsType((uint64_t)v55, (uint64_t)v52);
      UUID.init()();
      OUTLINED_FUNCTION_201_1();
      OUTLINED_FUNCTION_285_1(0x4085E00000000000);
      OUTLINED_FUNCTION_200_0();
      v10[65] = 1;
      OUTLINED_FUNCTION_108_7();
      OUTLINED_FUNCTION_278_0();
      OUTLINED_FUNCTION_307_1();
      outlined destroy of ConversationControlsType((uint64_t)v52);
      v25 = OUTLINED_FUNCTION_198();
      *(_QWORD *)&v10[*(int *)(v7 + 40)] = 0;
      OUTLINED_FUNCTION_326_2(v25, v26, type metadata accessor for HUDActivityManager.BannerUpdate);
    }
    else
    {
      outlined init with copy of ConversationControlsType((uint64_t)v55, (uint64_t)v52);
      UUID.init()();
      OUTLINED_FUNCTION_201_1();
      OUTLINED_FUNCTION_285_1(0x4089000000000000);
      OUTLINED_FUNCTION_200_0();
      v10[65] = 0;
      OUTLINED_FUNCTION_108_7();
      OUTLINED_FUNCTION_278_0();
      OUTLINED_FUNCTION_307_1();
      outlined destroy of ConversationControlsType((uint64_t)v52);
      v30 = OUTLINED_FUNCTION_198();
      *(_QWORD *)&v10[*(int *)(v7 + 40)] = 0;
      OUTLINED_FUNCTION_326_2(v30, v31, type metadata accessor for HUDActivityManager.BannerUpdate);
      OUTLINED_FUNCTION_348_0();
    }
    v1[18] = (*(uint64_t (**)(char *))(*v1 + 680))(v13);
    swift_release();
    OUTLINED_FUNCTION_343_1();
    OUTLINED_FUNCTION_29_1();
    v32 = Logger.logObject.getter();
    v33 = static os_log_type_t.default.getter();
    if (OUTLINED_FUNCTION_162_3(v33))
    {
      v34 = OUTLINED_FUNCTION_105();
      v51 = OUTLINED_FUNCTION_105();
      *(_DWORD *)v34 = 136315394;
      outlined init with copy of ConversationControlsType((uint64_t)v53, (uint64_t)v52);
      v42 = specialized >> prefix<A>(_:)((uint64_t)v52, v35, v36, v37, v38, v39, v40, v41);
      outlined destroy of AsyncStream<Bool>?((uint64_t)v52, &demangling cache variable for type metadata for ConversationControlsType?);
      v52[0] = OUTLINED_FUNCTION_304(v42, v43, &v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_25();
      OUTLINED_FUNCTION_348_0();
      *(_WORD *)(v34 + 12) = 2080;
      if (v1[18])
      {
        v52[0] = v1[18];
        type metadata accessor for HUDActivity(0);
        swift_retain();
        v45 = String.init<A>(reflecting:)();
      }
      else
      {
        v45 = 7104878;
      }
      v52[0] = OUTLINED_FUNCTION_191(v45, v44, &v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_23_0();
      OUTLINED_FUNCTION_21_0();
      OUTLINED_FUNCTION_26_6(&dword_1BD004000, v32, v33, "Created new hud activity for control type %s %s", (uint8_t *)v34);
      OUTLINED_FUNCTION_25_6();
      OUTLINED_FUNCTION_60();
    }
    OUTLINED_FUNCTION_23_0();

    OUTLINED_FUNCTION_348_0();
    outlined destroy of RemoteControlMessage((uint64_t)v13, type metadata accessor for HUDActivityManager.BannerUpdate);
    outlined destroy of ConversationControlsType((uint64_t)v55);
  }
  OUTLINED_FUNCTION_52_1();
}

void ScreenSharingInteractionSession.presentBannerUpdate(_:)(uint64_t a1)
{
  _QWORD *v2;
  _UNKNOWN **v3;
  uint64_t v4;

  if (one-time initialization token for shared != -1)
    swift_once();
  v2 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  if (((*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)static Features.shared) + 0x50))() & 1) != 0)
  {
    if (one-time initialization token for shared != -1)
      swift_once();
    v3 = &static HUDActivityManager.shared;
    v4 = 31;
  }
  else
  {
    if (one-time initialization token for shared != -1)
      swift_once();
    v3 = &static BannerActivityManager.shared;
    v4 = 33;
  }
  (*(void (**)(uint64_t))((*v2 & *(_QWORD *)*v3) + 8 * v4))(a1);
  OUTLINED_FUNCTION_18();
}

void ScreenSharingInteractionSession.deinit()
{
  uint64_t v0;

  OUTLINED_FUNCTION_285();
  OUTLINED_FUNCTION_53_2();
  OUTLINED_FUNCTION_76();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  outlined consume of RemoteControlState(*(_QWORD *)(v0 + 128));
  OUTLINED_FUNCTION_19();
  swift_release();

  swift_unknownObjectUnownedDestroy();
  OUTLINED_FUNCTION_0();
}

uint64_t ScreenSharingInteractionSession.__deallocating_deinit()
{
  ScreenSharingInteractionSession.deinit();
  return swift_deallocClassInstance();
}

void ScreenSharingInteractionSession.activeControlParticipant.getter(char *a1@<X8>)
{
  uint64_t v1;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  char v7;
  char v8;
  int v9;
  unint64_t v10;

  OUTLINED_FUNCTION_1();
  v3 = *(_QWORD *)(v1 + 128);
  outlined copy of RemoteControlState(v3);
  OUTLINED_FUNCTION_14_11();
  OUTLINED_FUNCTION_117_8();
  OUTLINED_FUNCTION_30_50(&v10);
  OUTLINED_FUNCTION_118_10();
  outlined consume of RemoteControlState(v3);
  v4 = OUTLINED_FUNCTION_27_0();
  v5 = v10 >> 61;
  if (v10 >> 61 == 4)
  {
    v9 = *(unsigned __int8 *)(v10 + 24);
    OUTLINED_FUNCTION_204_2();
    if (v9 == 1)
    {
      v8 = 1;
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if ((_DWORD)v5 != 3)
  {
    if ((_DWORD)v5 == 2)
    {
      v6 = (*(uint64_t (**)(uint64_t))(**(_QWORD **)(v1 + 16) + 184))(v4);
      goto LABEL_6;
    }
    OUTLINED_FUNCTION_204_2();
LABEL_12:
    v8 = 0;
    goto LABEL_13;
  }
  v6 = (*(uint64_t (**)(uint64_t))(**(_QWORD **)(v1 + 16) + 232))(v4);
LABEL_6:
  v7 = v6;
  OUTLINED_FUNCTION_204_2();
  if ((v7 & 1) != 0)
    v8 = 2;
  else
    v8 = 0;
LABEL_13:
  *a1 = v8;
  OUTLINED_FUNCTION_3_6();
}

uint64_t ScreenSharingInteractionSession.validateIncomingMessage(_:from:)(uint64_t a1, uint64_t a2)
{
  return ScreenSharingInteractionSession.validateIncomingMessage(_:from:)(a1, a2, RemoteControlStateMachine.validateIncomingMessage(_:from:));
}

uint64_t ScreenSharingInteractionSession.validateOutgoingMessage(_:to:)(uint64_t a1, uint64_t a2)
{
  return ScreenSharingInteractionSession.validateIncomingMessage(_:from:)(a1, a2, RemoteControlStateMachine.validateOutgoingMessage(_:to:));
}

uint64_t ScreenSharingInteractionSession.validateIncomingMessage(_:from:)(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t))
{
  swift_beginAccess();
  a3(a1, a2);
  return swift_endAccess();
}

uint64_t protocol witness for ScreenSharingInteractionTransport.MessageFirewall.validateIncomingMessage(_:from:) in conformance ScreenSharingInteractionSession(uint64_t a1, uint64_t a2)
{
  return ScreenSharingInteractionSession.validateIncomingMessage(_:from:)(a1, a2);
}

uint64_t protocol witness for ScreenSharingInteractionTransport.MessageFirewall.validateOutgoingMessage(_:to:) in conformance ScreenSharingInteractionSession(uint64_t a1, uint64_t a2)
{
  return ScreenSharingInteractionSession.validateOutgoingMessage(_:to:)(a1, a2);
}

uint64_t partial apply for closure #1 in ScreenSharingInteractionTransport.activate()(uint64_t a1)
{
  uint64_t v1;

  return closure #1 in ScreenSharingInteractionTransport.activate()(a1, v1);
}

uint64_t specialized _NativeSet.filter(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t isStackAllocationSafe;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  _QWORD v16[2];

  v3 = v2;
  v16[1] = *MEMORY[0x1E0C80C00];
  v6 = *(_BYTE *)(a1 + 32);
  v7 = v6 & 0x3F;
  v8 = (unint64_t)((1 << v6) + 63) >> 6;
  isStackAllocationSafe = swift_retain_n();
  if (v7 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    v10 = (_QWORD *)((char *)v16 - ((8 * v8 + 15) & 0x3FFFFFFFFFFFFFF0));
    specialized UnsafeMutablePointer.assign(repeating:count:)(0, v8, v10);
    swift_retain();
    specialized closure #1 in _NativeSet.filter(_:)(v10, v8, a1, a2);
    v12 = v11;
    swift_release();
    if (v3)
      swift_willThrow();
    swift_release_n();
  }
  else
  {
    v13 = (uint64_t *)swift_slowAlloc();
    specialized UnsafeMutablePointer.assign(repeating:count:)(0, v8, v13);
    swift_retain();
    specialized closure #1 in _NativeSet.filter(_:)(v13, v8, a1, a2);
    v12 = v14;
    swift_release();
    MEMORY[0x1C3B751B8](v13, -1, -1);
    swift_release_n();
  }
  swift_release();
  return v12;
}

{
  uint64_t v2;
  char v5;
  unsigned int v6;
  unint64_t v7;
  uint64_t isStackAllocationSafe;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD v13[2];

  v13[1] = *MEMORY[0x1E0C80C00];
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v7 = (unint64_t)((1 << v5) + 63) >> 6;
  isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v6 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    v9 = (_QWORD *)((char *)v13 - ((8 * v7 + 15) & 0x3FFFFFFFFFFFFFF0));
    specialized UnsafeMutablePointer.assign(repeating:count:)(0, v7, v9);
    swift_bridgeObjectRetain();
    v10 = specialized closure #1 in _NativeSet.filter(_:)((uint64_t)v9, v7, a1, a2);
    swift_release();
    if (v2)
      swift_willThrow();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v11 = (_QWORD *)swift_slowAlloc();
    specialized UnsafeMutablePointer.assign(repeating:count:)(0, v7, v11);
    swift_bridgeObjectRetain();
    v10 = specialized closure #1 in _NativeSet.filter(_:)((uint64_t)v11, v7, a1, a2);
    swift_release();
    MEMORY[0x1C3B751B8](v11, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRelease();
  return v10;
}

{
  uint64_t v2;
  char v5;
  unsigned int v6;
  unint64_t v7;
  uint64_t isStackAllocationSafe;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  _QWORD v15[2];

  v15[1] = *MEMORY[0x1E0C80C00];
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v7 = (unint64_t)((1 << v5) + 63) >> 6;
  isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v6 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    v9 = (_QWORD *)((char *)v15 - ((8 * v7 + 15) & 0x3FFFFFFFFFFFFFF0));
    specialized UnsafeMutablePointer.assign(repeating:count:)(0, v7, v9);
    swift_bridgeObjectRetain();
    specialized closure #1 in _NativeSet.filter(_:)(v9, v7, a1, a2);
    v11 = v10;
    swift_release();
    if (v2)
      swift_willThrow();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v12 = (uint64_t *)swift_slowAlloc();
    specialized UnsafeMutablePointer.assign(repeating:count:)(0, v7, v12);
    swift_bridgeObjectRetain();
    specialized closure #1 in _NativeSet.filter(_:)(v12, v7, a1, a2);
    v11 = v13;
    swift_release();
    MEMORY[0x1C3B751B8](v12, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRelease();
  return v11;
}

{
  uint64_t v2;
  uint64_t v3;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t isStackAllocationSafe;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  _QWORD v16[2];

  v3 = v2;
  v16[1] = *MEMORY[0x1E0C80C00];
  v6 = *(_BYTE *)(a1 + 32);
  v7 = v6 & 0x3F;
  v8 = (unint64_t)((1 << v6) + 63) >> 6;
  isStackAllocationSafe = swift_retain_n();
  if (v7 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    v10 = (_QWORD *)((char *)v16 - ((8 * v8 + 15) & 0x3FFFFFFFFFFFFFF0));
    specialized UnsafeMutablePointer.assign(repeating:count:)(0, v8, v10);
    swift_retain();
    specialized closure #1 in _NativeSet.filter(_:)(v10, v8, a1, a2);
    v12 = v11;
    swift_release();
    if (v3)
      swift_willThrow();
    swift_release_n();
  }
  else
  {
    v13 = (uint64_t *)swift_slowAlloc();
    specialized UnsafeMutablePointer.assign(repeating:count:)(0, v8, v13);
    swift_retain();
    specialized closure #1 in _NativeSet.filter(_:)(v13, v8, a1, a2);
    v12 = v14;
    swift_release();
    MEMORY[0x1C3B751B8](v13, -1, -1);
    swift_release_n();
  }
  swift_release();
  return v12;
}

unint64_t lazy protocol witness table accessor for type ScreenSharingInteractionTransport.Errors and conformance ScreenSharingInteractionTransport.Errors()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ScreenSharingInteractionTransport.Errors and conformance ScreenSharingInteractionTransport.Errors;
  if (!lazy protocol witness table cache variable for type ScreenSharingInteractionTransport.Errors and conformance ScreenSharingInteractionTransport.Errors)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ScreenSharingInteractionTransport.Errors, &type metadata for ScreenSharingInteractionTransport.Errors);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ScreenSharingInteractionTransport.Errors and conformance ScreenSharingInteractionTransport.Errors);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ScreenSharingInteractionTransport.Errors and conformance ScreenSharingInteractionTransport.Errors;
  if (!lazy protocol witness table cache variable for type ScreenSharingInteractionTransport.Errors and conformance ScreenSharingInteractionTransport.Errors)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ScreenSharingInteractionTransport.Errors, &type metadata for ScreenSharingInteractionTransport.Errors);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ScreenSharingInteractionTransport.Errors and conformance ScreenSharingInteractionTransport.Errors);
  }
  return result;
}

uint64_t partial apply for closure #1 in ScreenSharingInteractionTransport.receiveData()(uint64_t a1)
{
  uint64_t v1;

  return closure #1 in ScreenSharingInteractionTransport.receiveData()(a1, v1);
}

unint64_t outlined copy of RemoteControlState(unint64_t result)
{
  switch(result >> 61)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
      result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t partial apply for closure #4 in ScreenSharingInteractionSession.init(session:controller:serverBag:contactManager:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return closure #4 in ScreenSharingInteractionSession.init(session:controller:serverBag:contactManager:)(a1, a2, v2);
}

uint64_t sub_1BD34F2CC()
{
  OUTLINED_FUNCTION_53_2();
  return swift_deallocObject();
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed RemoteControlMessage, @in_guaranteed GroupSessionMessenger.MessageContext) -> ()(uint64_t a1)
{
  uint64_t v1;

  return thunk for @escaping @callee_guaranteed (@in_guaranteed RemoteControlMessage, @in_guaranteed GroupSessionMessenger.MessageContext) -> ()(a1, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 16));
}

uint64_t partial apply for closure #2 in ScreenSharingInteractionSession.init(session:controller:serverBag:contactManager:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_174();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_61_5(v0);
  v2 = OUTLINED_FUNCTION_7_11(v1);
  return closure #2 in ScreenSharingInteractionSession.init(session:controller:serverBag:contactManager:)(v2, v3, v4, v5);
}

uint64_t partial apply for closure #1 in ScreenSharingInteractionSession.invalidate()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_174();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_61_5(v0);
  v2 = OUTLINED_FUNCTION_7_11(v1);
  return closure #1 in ScreenSharingInteractionSession.invalidate()(v2, v3, v4, v5);
}

uint64_t partial apply for closure #1 in ScreenSharingInteractionSession.presentRemoteControlOnboarding()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_174();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_61_5(v0);
  v2 = OUTLINED_FUNCTION_7_11(v1);
  return closure #1 in ScreenSharingInteractionSession.presentRemoteControlOnboarding()(v2, v3, v4, v5);
}

uint64_t sub_1BD34F3E4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BD34F408()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.CombineLatest<Published<DeviceInactivityObserver.State>.Publisher, Published<Bool>.Publisher>);
  OUTLINED_FUNCTION_131_5();
  OUTLINED_FUNCTION_67_1();
  OUTLINED_FUNCTION_43_3();
  swift_release();
  OUTLINED_FUNCTION_55_4();
  return OUTLINED_FUNCTION_17_33();
}

uint64_t partial apply for closure #1 in ScreenSharingInteractionSession.suspendRemoteControlSession(reason:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_107_7();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.CombineLatest<Published<DeviceInactivityObserver.State>.Publisher, Published<Bool>.Publisher>);
  OUTLINED_FUNCTION_192_1();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_61_5(v0);
  OUTLINED_FUNCTION_37_1(v1);
  OUTLINED_FUNCTION_277_1();
  return closure #1 in ScreenSharingInteractionSession.suspendRemoteControlSession(reason:)(v2, v3, v4, v5, v6);
}

uint64_t sub_1BD34F4C4()
{
  return objectdestroy_13Tm_3();
}

uint64_t partial apply for closure #1 in ScreenSharingInteractionSession.handleRemoteControlUserResponse(allowRemoteControl:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  OUTLINED_FUNCTION_107_7();
  v1 = swift_task_alloc();
  v2 = (_QWORD *)OUTLINED_FUNCTION_61_5(v1);
  *v2 = v0;
  v2[1] = _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tgq5TATQ0_;
  OUTLINED_FUNCTION_277_1();
  return closure #1 in ScreenSharingInteractionSession.handleRemoteControlUserResponse(allowRemoteControl:)(v3, v4, v5, v6, v7);
}

void outlined destroy of RemoteControlMessage(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  v2 = a2(0);
  OUTLINED_FUNCTION_20_6(*(_QWORD *)(v2 - 8));
  OUTLINED_FUNCTION_0();
}

void sub_1BD34F5AC()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))(v1 + 256))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD34F5D4()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))(v1 + 280))();
  OUTLINED_FUNCTION_0();
}

uint64_t ObjC metadata update function for ScreenSharingInteractionTransport()
{
  return type metadata accessor for ScreenSharingInteractionTransport();
}

uint64_t type metadata completion function for ScreenSharingInteractionTransport()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ObservationRegistrar();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for ScreenSharingInteractionTransport()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ScreenSharingInteractionTransport.isSendingInteractionData.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of ScreenSharingInteractionTransport.isReceivingInteractionData.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of ScreenSharingInteractionTransport.firewall.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 376))();
}

uint64_t dispatch thunk of ScreenSharingInteractionTransport.firewall.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 384))();
}

uint64_t dispatch thunk of ScreenSharingInteractionTransport.firewall.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 392))();
}

uint64_t dispatch thunk of ScreenSharingInteractionTransport.__allocating_init(session:unreliableMessenger:reliableMessenger:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 400))();
}

uint64_t dispatch thunk of ScreenSharingInteractionTransport.access<A>(keyPath:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 424))();
}

uint64_t dispatch thunk of ScreenSharingInteractionTransport.withMutation<A, B>(keyPath:_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 432))();
}

uint64_t dispatch thunk of ScreenSharingInteractionTransport.MessageFirewall.validateIncomingMessage(_:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of ScreenSharingInteractionTransport.MessageFirewall.validateOutgoingMessage(_:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t storeEnumTagSinglePayload for ScreenSharingInteractionTransport.Errors(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BD34F7A4 + 4 * byte_1BD659355[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BD34F7D8 + 4 * byte_1BD659350[v4]))();
}

uint64_t sub_1BD34F7D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD34F7E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD34F7E8);
  return result;
}

uint64_t sub_1BD34F7F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD34F7FCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BD34F800(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD34F808(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ScreenSharingInteractionTransport.Errors()
{
  return &type metadata for ScreenSharingInteractionTransport.Errors;
}

uint64_t type metadata accessor for ScreenSharingInteractionSession()
{
  return objc_opt_self();
}

uint64_t method lookup function for ScreenSharingInteractionSession()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ScreenSharingInteractionSession.playbackServer.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of ScreenSharingInteractionSession.captureInteraction.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of ScreenSharingInteractionSession.remoteControlStatus.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 424))();
}

uint64_t dispatch thunk of ScreenSharingInteractionSession.__allocating_init(session:controller:serverBag:contactManager:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 504))();
}

uint64_t dispatch thunk of ScreenSharingInteractionSession.setup()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 512))();
}

uint64_t dispatch thunk of ScreenSharingInteractionSession.invalidate()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 520))();
}

uint64_t dispatch thunk of ScreenSharingInteractionSession.presentRemoteControlOnboarding()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(void);
  uint64_t v4;

  v1 = (_QWORD *)OUTLINED_FUNCTION_19_13();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_140(v1, (uint64_t)_sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tgq5TATQ0_, v4);
  return OUTLINED_FUNCTION_16(v2);
}

uint64_t dispatch thunk of ScreenSharingInteractionSession.sendRemoteControlMessage(_:to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v5 = (_QWORD *)OUTLINED_FUNCTION_19_13();
  *(_QWORD *)(v2 + 16) = v5;
  OUTLINED_FUNCTION_30_9(v5, (uint64_t)_sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tgq5TATQ0_);
  return v7(a1, a2);
}

uint64_t dispatch thunk of ScreenSharingInteractionSession.beginRemoteControlSession()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(void);
  uint64_t v4;

  v1 = (_QWORD *)OUTLINED_FUNCTION_19_13();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_140(v1, (uint64_t)_sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tgq5TATQ0_, v4);
  return OUTLINED_FUNCTION_16(v2);
}

uint64_t dispatch thunk of ScreenSharingInteractionSession.cancelRemoteControlRequest()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(void);
  uint64_t v4;

  v1 = (_QWORD *)OUTLINED_FUNCTION_19_13();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_140(v1, (uint64_t)_sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tgq5TATQ0_, v4);
  return OUTLINED_FUNCTION_16(v2);
}

uint64_t dispatch thunk of ScreenSharingInteractionSession.endRemoteControlSession()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(void);
  uint64_t v4;

  v1 = (_QWORD *)OUTLINED_FUNCTION_19_13();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_140(v1, (uint64_t)partial apply for closure #1 in MultiwayViewController.registerForSystemEventsIfNecessary(), v4);
  return OUTLINED_FUNCTION_16(v2);
}

uint64_t dispatch thunk of ScreenSharingInteractionSession.suspendRemoteControlSession(reason:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v3 = (_QWORD *)OUTLINED_FUNCTION_7_20();
  *(_QWORD *)(v1 + 16) = v3;
  OUTLINED_FUNCTION_30_9(v3, (uint64_t)_sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tgq5TATQ0_);
  return v5(a1);
}

uint64_t dispatch thunk of ScreenSharingInteractionSession.resumeRemoteControlSession()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(void);
  uint64_t v4;

  v1 = (_QWORD *)OUTLINED_FUNCTION_19_13();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_140(v1, (uint64_t)_sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tgq5TATQ0_, v4);
  return OUTLINED_FUNCTION_16(v2);
}

uint64_t dispatch thunk of ScreenSharingInteractionSession.handleRemoteControlUserResponse(allowRemoteControl:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 664))();
}

uint64_t dispatch thunk of ScreenSharingInteractionSession.updateHUDActivity(type:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 672))();
}

uint64_t dispatch thunk of ScreenSharingInteractionSession.presentBannerUpdate(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 680))();
}

uint64_t sub_1BD34FA7C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(unint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v1 = *(_QWORD *)(OUTLINED_FUNCTION_97_7() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(_QWORD *)(OUTLINED_FUNCTION_151() - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  OUTLINED_FUNCTION_67_1();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 2u:
    case 3u:
    case 5u:
      v6 = OUTLINED_FUNCTION_33_0();
      OUTLINED_FUNCTION_75(v6);
      OUTLINED_FUNCTION_216_1();
      goto LABEL_5;
    case 1u:
      v7 = OUTLINED_FUNCTION_33_0();
      v8 = *(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
      v8(v0 + v2, v7);
      v13 = v3;
      v9 = OUTLINED_FUNCTION_32_16();
      v8(v0 + v2 + *(int *)(v9 + 20), v7);
      v3 = v13;
      goto LABEL_5;
    case 4u:
      v10 = OUTLINED_FUNCTION_33_0();
      OUTLINED_FUNCTION_75(v10);
      type metadata accessor for RemoteControlSuspendRequest(0);
LABEL_5:
      v11 = type metadata accessor for Date();
      OUTLINED_FUNCTION_75(v11);
      break;
    default:
      break;
  }
  swift_release();
  OUTLINED_FUNCTION_39_0(v0 + ((((v3 + v2 + 7) & 0xFFFFFFFFFFFFFFF8) + v5 + 8) & ~v5), *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  OUTLINED_FUNCTION_55_4();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ScreenSharingInteractionSession.handleRemoteControlMessage(_:from:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_97_7();
  OUTLINED_FUNCTION_151();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_61_5(v0);
  v2 = OUTLINED_FUNCTION_6_65(v1);
  return closure #1 in ScreenSharingInteractionSession.handleRemoteControlMessage(_:from:)(v2, v3, v4, v5, v6, v7);
}

uint64_t partial apply for closure #1 in ScreenSharingInteractionTransport.didReceiveData()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_174();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_61_5(v0);
  v2 = OUTLINED_FUNCTION_7_11(v1);
  return closure #1 in ScreenSharingInteractionTransport.didReceiveData()(v2, v3, v4, v5);
}

uint64_t partial apply for closure #1 in closure #1 in ScreenSharingInteractionTransport.didReceiveData()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_174();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_61_5(v0);
  v2 = OUTLINED_FUNCTION_7_11(v1);
  return closure #1 in closure #1 in ScreenSharingInteractionTransport.didReceiveData()(v2, v3, v4, v5);
}

void sub_1BD34FD20(uint64_t *a1@<X8>)
{
  *a1 = ScreenSharingInteractionTransport.isSendingInteractionDataDebouncer.getter();
  OUTLINED_FUNCTION_0();
}

uint64_t partial apply for closure #1 in ScreenSharingInteractionTransport.isSendingInteractionDataDebouncer.setter()
{
  uint64_t v0;

  return closure #1 in ScreenSharingInteractionTransport.isSendingInteractionDataDebouncer.setter(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void partial apply for closure #1 in ScreenSharingInteractionTransport.isReceivingInteractionData.setter()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + 41) = *(_BYTE *)(v0 + 24);
}

void partial apply for closure #1 in ScreenSharingInteractionTransport.isSendingInteractionData.setter()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + 40) = *(_BYTE *)(v0 + 24);
}

uint64_t sub_1BD34FD80()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  OUTLINED_FUNCTION_131_5();
  OUTLINED_FUNCTION_67_1();
  OUTLINED_FUNCTION_43_3();
  swift_release();
  OUTLINED_FUNCTION_55_4();
  return OUTLINED_FUNCTION_17_33();
}

uint64_t partial apply for closure #1 in ScreenSharingInteractionSession.observeDisplayLayerVisibility()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  OUTLINED_FUNCTION_192_1();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_61_5(v0);
  v2 = OUTLINED_FUNCTION_6_65(v1);
  return closure #1 in ScreenSharingInteractionSession.observeDisplayLayerVisibility()(v2, v3, v4, v5, v6);
}

uint64_t partial apply for closure #1 in ScreenSharingInteractionSession.observeInteractionState()()
{
  return closure #1 in ScreenSharingInteractionSession.observeInteractionState()();
}

uint64_t partial apply for closure #1 in closure #1 in ScreenSharingInteractionSession.observeInteractionState()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_174();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_61_5(v0);
  v2 = OUTLINED_FUNCTION_7_11(v1);
  return closure #1 in closure #1 in ScreenSharingInteractionSession.observeInteractionState()(v2, v3, v4, v5);
}

uint64_t sub_1BD34FEAC()
{
  return objectdestroy_113Tm(&demangling cache variable for type metadata for AsyncStream<Data>.Continuation);
}

uint64_t partial apply for closure #1 in closure #1 in ScreenSharingInteractionTransport.receiveData()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_107_7();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncStream<Data>.Continuation);
  OUTLINED_FUNCTION_90_12();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_61_5(v0);
  OUTLINED_FUNCTION_37_1(v1);
  OUTLINED_FUNCTION_277_1();
  return closure #1 in closure #1 in ScreenSharingInteractionTransport.receiveData()(v2, v3, v4, v5, v6);
}

uint64_t sub_1BD34FF14()
{
  return objectdestroy_113Tm(&demangling cache variable for type metadata for AsyncStream<Data>.Continuation);
}

uint64_t partial apply for closure #2 in closure #1 in ScreenSharingInteractionTransport.receiveData()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_107_7();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncStream<Data>.Continuation);
  OUTLINED_FUNCTION_90_12();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_61_5(v0);
  OUTLINED_FUNCTION_37_1(v1);
  OUTLINED_FUNCTION_277_1();
  return closure #2 in closure #1 in ScreenSharingInteractionTransport.receiveData()(v2, v3, v4, v5, v6);
}

uint64_t partial apply for closure #1 in ScreenSharingInteractionTransport.didSendData()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_174();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_61_5(v0);
  v2 = OUTLINED_FUNCTION_7_11(v1);
  return closure #1 in ScreenSharingInteractionTransport.didSendData()(v2, v3, v4, v5);
}

uint64_t objectdestroy_13Tm_3()
{
  OUTLINED_FUNCTION_67_1();
  OUTLINED_FUNCTION_76();
  OUTLINED_FUNCTION_21_6();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in ScreenSharingInteractionTransport.didSendData()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_174();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_61_5(v0);
  v2 = OUTLINED_FUNCTION_7_11(v1);
  return closure #1 in closure #1 in ScreenSharingInteractionTransport.didSendData()(v2, v3, v4, v5);
}

void specialized closure #1 in _NativeSet.filter(_:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char *v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  int64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int64_t v51;

  v35 = a2;
  v49 = a4;
  v36 = a1;
  v43 = type metadata accessor for UUID();
  v47 = *(_QWORD *)(v43 - 8);
  MEMORY[0x1E0C80A78](v43);
  v46 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v45 = (char *)&v34 - v7;
  v44 = type metadata accessor for Participant();
  v42 = *(_QWORD *)(v44 - 8);
  MEMORY[0x1E0C80A78](v44);
  v41 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v9);
  v40 = (char *)&v34 - v11;
  v12 = 0;
  v48 = a3;
  v13 = *(_QWORD *)(a3 + 56);
  v37 = 0;
  v38 = a3 + 56;
  v14 = 1 << *(_BYTE *)(a3 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v13;
  v39 = (unint64_t)(v14 + 63) >> 6;
  v17 = v40;
  v19 = v44;
  v18 = v45;
  v20 = v46;
  while (1)
  {
    if (v16)
    {
      v50 = (v16 - 1) & v16;
      v51 = v12;
      v21 = __clz(__rbit64(v16)) | (v12 << 6);
      goto LABEL_20;
    }
    v22 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v22 >= v39)
      goto LABEL_24;
    v23 = *(_QWORD *)(v38 + 8 * v22);
    v24 = v12 + 1;
    if (!v23)
    {
      v24 = v12 + 2;
      if (v12 + 2 >= v39)
        goto LABEL_24;
      v23 = *(_QWORD *)(v38 + 8 * v24);
      if (!v23)
      {
        v24 = v12 + 3;
        if (v12 + 3 >= v39)
          goto LABEL_24;
        v23 = *(_QWORD *)(v38 + 8 * v24);
        if (!v23)
          break;
      }
    }
LABEL_19:
    v50 = (v23 - 1) & v23;
    v51 = v24;
    v21 = __clz(__rbit64(v23)) + (v24 << 6);
LABEL_20:
    v26 = v42;
    v27 = v21;
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v42 + 16))(v17, *(_QWORD *)(v48 + 48) + *(_QWORD *)(v42 + 72) * v21, v19, v10);
    Participant.id.getter();
    v28 = v41;
    GroupSession.localParticipant.getter();
    Participant.id.getter();
    v29 = *(void (**)(char *, uint64_t))(v26 + 8);
    v29(v28, v19);
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
    v30 = v43;
    LOBYTE(v28) = dispatch thunk of static Equatable.== infix(_:_:)();
    v31 = *(void (**)(char *, uint64_t))(v47 + 8);
    v31(v20, v30);
    v31(v18, v30);
    v29(v17, v19);
    v12 = v51;
    v16 = v50;
    if ((v28 & 1) == 0)
    {
      *(uint64_t *)((char *)v36 + ((v27 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v27;
      if (__OFADD__(v37++, 1))
      {
        __break(1u);
LABEL_24:
        v33 = v48;
        swift_retain();
        specialized _NativeSet.extractSubset(using:count:)(v36, v35, v37, v33);
        swift_release();
        return;
      }
    }
  }
  v25 = v12 + 4;
  if (v12 + 4 >= v39)
    goto LABEL_24;
  v23 = *(_QWORD *)(v38 + 8 * v25);
  if (v23)
  {
    v24 = v12 + 4;
    goto LABEL_19;
  }
  while (1)
  {
    v24 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v24 >= v39)
      goto LABEL_24;
    v23 = *(_QWORD *)(v38 + 8 * v24);
    ++v25;
    if (v23)
      goto LABEL_19;
  }
LABEL_26:
  __break(1u);
}

{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  char *v32;
  id v33;
  char *v34;
  void (*v35)(char *, uint64_t);
  id v36;
  BOOL v37;
  id v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  unint64_t v49;
  unint64_t v50;
  int64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  id v56;

  v41 = a2;
  v44 = a1;
  v6 = type metadata accessor for UUID();
  v55 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x1E0C80A78](v6);
  v53 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v52 = (char *)&v41 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = a3;
  v47 = 0;
  v13 = 0;
  v16 = *(_QWORD *)(a3 + 56);
  v15 = a3 + 56;
  v14 = v16;
  v17 = 1 << *(_BYTE *)(v15 - 24);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & v14;
  v42 = v15;
  v43 = (unint64_t)(v17 + 63) >> 6;
  v45 = a4;
  do
  {
LABEL_4:
    if (v19)
    {
      v20 = __clz(__rbit64(v19));
      v21 = (v19 - 1) & v19;
      v22 = v20 | (v13 << 6);
    }
    else
    {
      v23 = v13 + 1;
      if (__OFADD__(v13, 1))
        goto LABEL_32;
      if (v23 >= v43)
      {
LABEL_31:
        v40 = v46;
        swift_retain();
        specialized _NativeSet.extractSubset(using:count:)(v44, v41, v47, v40);
        swift_bridgeObjectRelease();
        return;
      }
      v24 = *(_QWORD *)(v42 + 8 * v23);
      ++v13;
      if (!v24)
      {
        v13 = v23 + 1;
        if (v23 + 1 >= v43)
          goto LABEL_31;
        v24 = *(_QWORD *)(v42 + 8 * v13);
        if (!v24)
        {
          v13 = v23 + 2;
          if (v23 + 2 >= v43)
            goto LABEL_31;
          v24 = *(_QWORD *)(v42 + 8 * v13);
          if (!v24)
          {
            v25 = v23 + 3;
            if (v25 >= v43)
              goto LABEL_31;
            v24 = *(_QWORD *)(v42 + 8 * v25);
            if (!v24)
            {
              while (1)
              {
                v13 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_33;
                if (v13 >= v43)
                  goto LABEL_31;
                v24 = *(_QWORD *)(v42 + 8 * v13);
                ++v25;
                if (v24)
                  goto LABEL_19;
              }
            }
            v13 = v25;
          }
        }
      }
LABEL_19:
      v21 = (v24 - 1) & v24;
      v22 = __clz(__rbit64(v24)) + (v13 << 6);
    }
    v26 = *(void **)(*(_QWORD *)(v46 + 48) + 8 * v22);
    v27 = *(_QWORD *)(a4 + 16);
    v50 = v21;
    v51 = v13;
    v48 = v26;
    v49 = v22;
    if (v27)
    {
      v28 = v55;
      v29 = a4 + ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80));
      v56 = v26;
      swift_bridgeObjectRetain();
      v54 = *(_QWORD *)(v28 + 72);
      v30 = *(void (**)(char *, uint64_t, uint64_t))(v28 + 16);
      while (1)
      {
        v30(v12, v29, v6);
        __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v6);
        if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v6) == 1)
          break;
        v31 = v55;
        v32 = v52;
        (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v52, v12, v6);
        v33 = objc_msgSend(v56, sel_UUID, v41);
        v34 = v53;
        static UUID._unconditionallyBridgeFromObjectiveC(_:)();

        LOBYTE(v33) = static UUID.== infix(_:_:)();
        v35 = *(void (**)(char *, uint64_t))(v31 + 8);
        v35(v34, v6);
        v35(v32, v6);
        if ((v33 & 1) != 0)
        {
          v38 = v56;

          a4 = v45;
          swift_bridgeObjectRelease();
          v19 = v50;
          v13 = v51;
          goto LABEL_4;
        }
        v29 += v54;
        if (!--v27)
          goto LABEL_25;
      }
    }
    else
    {
      v39 = v26;
      swift_bridgeObjectRetain();
LABEL_25:
      __swift_storeEnumTagSinglePayload((uint64_t)v12, 1, 1, v6);
    }
    v36 = v48;

    a4 = v45;
    swift_bridgeObjectRelease();

    *(uint64_t *)((char *)v44 + ((v49 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v49;
    v37 = __OFADD__(v47++, 1);
    v19 = v50;
    v13 = v51;
  }
  while (!v37);
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
}

{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char *v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  int64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int64_t v51;

  v35 = a2;
  v49 = a4;
  v36 = a1;
  v43 = type metadata accessor for UUID();
  v47 = *(_QWORD *)(v43 - 8);
  MEMORY[0x1E0C80A78](v43);
  v46 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v45 = (char *)&v34 - v7;
  v44 = type metadata accessor for Participant();
  v42 = *(_QWORD *)(v44 - 8);
  MEMORY[0x1E0C80A78](v44);
  v41 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v9);
  v40 = (char *)&v34 - v11;
  v12 = 0;
  v48 = a3;
  v13 = *(_QWORD *)(a3 + 56);
  v37 = 0;
  v38 = a3 + 56;
  v14 = 1 << *(_BYTE *)(a3 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v13;
  v39 = (unint64_t)(v14 + 63) >> 6;
  v17 = v40;
  v19 = v44;
  v18 = v45;
  v20 = v46;
  while (1)
  {
    if (v16)
    {
      v50 = (v16 - 1) & v16;
      v51 = v12;
      v21 = __clz(__rbit64(v16)) | (v12 << 6);
      goto LABEL_20;
    }
    v22 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v22 >= v39)
      goto LABEL_24;
    v23 = *(_QWORD *)(v38 + 8 * v22);
    v24 = v12 + 1;
    if (!v23)
    {
      v24 = v12 + 2;
      if (v12 + 2 >= v39)
        goto LABEL_24;
      v23 = *(_QWORD *)(v38 + 8 * v24);
      if (!v23)
      {
        v24 = v12 + 3;
        if (v12 + 3 >= v39)
          goto LABEL_24;
        v23 = *(_QWORD *)(v38 + 8 * v24);
        if (!v23)
          break;
      }
    }
LABEL_19:
    v50 = (v23 - 1) & v23;
    v51 = v24;
    v21 = __clz(__rbit64(v23)) + (v24 << 6);
LABEL_20:
    v26 = v42;
    v27 = v21;
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v42 + 16))(v17, *(_QWORD *)(v48 + 48) + *(_QWORD *)(v42 + 72) * v21, v19, v10);
    Participant.id.getter();
    v28 = v41;
    GroupSession.localParticipant.getter();
    Participant.id.getter();
    v29 = *(void (**)(char *, uint64_t))(v26 + 8);
    v29(v28, v19);
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
    v30 = v43;
    LOBYTE(v28) = dispatch thunk of static Equatable.== infix(_:_:)();
    v31 = *(void (**)(char *, uint64_t))(v47 + 8);
    v31(v20, v30);
    v31(v18, v30);
    v29(v17, v19);
    v12 = v51;
    v16 = v50;
    if ((v28 & 1) == 0)
    {
      *(uint64_t *)((char *)v36 + ((v27 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v27;
      if (__OFADD__(v37++, 1))
      {
        __break(1u);
LABEL_24:
        v33 = v48;
        swift_retain();
        specialized _NativeSet.extractSubset(using:count:)(v36, v35, v37, v33, (void (*)(uint64_t))MEMORY[0x1E0CB4250], (uint64_t *)&demangling cache variable for type metadata for _SetStorage<Participant>, &lazy protocol witness table cache variable for type Participant and conformance Participant, MEMORY[0x1E0CB4260]);
        swift_release();
        return;
      }
    }
  }
  v25 = v12 + 4;
  if (v12 + 4 >= v39)
    goto LABEL_24;
  v23 = *(_QWORD *)(v38 + 8 * v25);
  if (v23)
  {
    v24 = v12 + 4;
    goto LABEL_19;
  }
  while (1)
  {
    v24 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v24 >= v39)
      goto LABEL_24;
    v23 = *(_QWORD *)(v38 + 8 * v24);
    ++v25;
    if (v23)
      goto LABEL_19;
  }
LABEL_26:
  __break(1u);
}

uint64_t sub_1BD3503C4()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncStream<ControlMessengerState>.Continuation);
  OUTLINED_FUNCTION_285();
  OUTLINED_FUNCTION_43_3();
  return OUTLINED_FUNCTION_6_10();
}

void partial apply for closure #1 in closure #1 in ScreenSharingInteractionTransport.activate()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncStream<ControlMessengerState>.Continuation)
                                      - 8)
                          + 80);
  closure #1 in closure #1 in ScreenSharingInteractionTransport.activate()(a1, *(_QWORD *)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

uint64_t sub_1BD350464()
{
  return objectdestroy_113Tm(&demangling cache variable for type metadata for AsyncStream<ControlMessengerState>.Continuation);
}

uint64_t objectdestroy_113Tm(uint64_t *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(a1);
  OUTLINED_FUNCTION_67_1();
  OUTLINED_FUNCTION_76();
  OUTLINED_FUNCTION_43_3();
  return OUTLINED_FUNCTION_6_10();
}

uint64_t partial apply for closure #2 in closure #1 in ScreenSharingInteractionTransport.activate()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_107_7();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncStream<ControlMessengerState>.Continuation);
  OUTLINED_FUNCTION_90_12();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_61_5(v0);
  OUTLINED_FUNCTION_37_1(v1);
  OUTLINED_FUNCTION_277_1();
  return closure #2 in closure #1 in ScreenSharingInteractionTransport.activate()(v2, v3, v4, v5, v6);
}

uint64_t sub_1BD350524()
{
  OUTLINED_FUNCTION_285();
  OUTLINED_FUNCTION_53_2();
  return swift_deallocObject();
}

void partial apply for closure #3 in closure #1 in ScreenSharingInteractionTransport.activate()()
{
  closure #3 in closure #1 in ScreenSharingInteractionTransport.activate()();
}

uint64_t OUTLINED_FUNCTION_76_16()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[30] + 8))(v0[31], v0[29]);
}

uint64_t OUTLINED_FUNCTION_103_6()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 80) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_112_9()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 424))();
}

void OUTLINED_FUNCTION_117_8()
{
  os_unfair_lock_s *v0;

  os_unfair_lock_lock(v0);
}

void OUTLINED_FUNCTION_118_10()
{
  os_unfair_lock_s *v0;

  os_unfair_lock_unlock(v0);
}

uint64_t OUTLINED_FUNCTION_128_6()
{
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_130_3(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  outlined destroy of RemoteControlMessage(v2, a2);
}

uint64_t OUTLINED_FUNCTION_134_5()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 144);
  *(_BYTE *)(v0 + 56) = 4;
  *(_QWORD *)(v0 + 280) = *(_QWORD *)(*(_QWORD *)v1 + 672);
  return type metadata accessor for MainActor();
}

uint64_t OUTLINED_FUNCTION_139_6@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = a2;
  return v2;
}

uint64_t OUTLINED_FUNCTION_141_4()
{
  uint64_t v0;

  return v0;
}

unint64_t OUTLINED_FUNCTION_145_4()
{
  unint64_t v0;

  return outlined consume of RemoteControlState(v0);
}

uint64_t OUTLINED_FUNCTION_146_2()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 152) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_148_1()
{
  uint64_t v0;
  uint64_t v1;

  __swift_storeEnumTagSinglePayload(v1, 0, 1, v0);
  return v1;
}

void OUTLINED_FUNCTION_154_3()
{
  os_unfair_lock_s *v0;

  os_unfair_lock_lock(v0);
}

uint64_t OUTLINED_FUNCTION_158_1()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_159_3()
{
  return swift_task_dealloc();
}

BOOL OUTLINED_FUNCTION_161_3(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

BOOL OUTLINED_FUNCTION_162_3(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_163_1(uint64_t a1, _BYTE *a2)
{
  *a2 = 1;
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_165_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void))
{
  return a6();
}

uint64_t OUTLINED_FUNCTION_170_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_171_0()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0[15] + 32))(v0[17], v0[9], v0[14]);
}

void OUTLINED_FUNCTION_173_2(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  outlined destroy of AsyncStream<Bool>?(v2, a2);
}

uint64_t OUTLINED_FUNCTION_174_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 8))(v1, v2, v3, v0);
}

uint64_t OUTLINED_FUNCTION_175_1()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t OUTLINED_FUNCTION_176_0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 376))();
}

uint64_t OUTLINED_FUNCTION_181_1(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 264) = a1;
  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 200);
}

uint64_t OUTLINED_FUNCTION_182_2(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

void OUTLINED_FUNCTION_183_1(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  outlined destroy of RemoteControlMessage(v2, a2);
}

uint64_t OUTLINED_FUNCTION_193_1@<X0>(uint64_t a1@<X8>)
{
  return *(unsigned int *)(*(_QWORD *)(a1 + 536) + 4);
}

uint64_t OUTLINED_FUNCTION_197_1()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_201_1()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + *(int *)(v0 + 44) + 8) = 0;
  return swift_unknownObjectWeakInit();
}

double OUTLINED_FUNCTION_202_3()
{
  uint64_t v0;
  double result;

  *(_QWORD *)(v0 + 48) = 0;
  result = 0.0;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_BYTE *)(v0 + 56) = -1;
  return result;
}

uint64_t OUTLINED_FUNCTION_203_0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 200) = a1;
  *a1 = v3;
  a1[1] = v1;
  return v2;
}

unint64_t OUTLINED_FUNCTION_204_2()
{
  unint64_t v0;

  return outlined consume of RemoteControlState(v0);
}

uint64_t OUTLINED_FUNCTION_207_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v0, v1, v2);
}

void OUTLINED_FUNCTION_210_0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  outlined init with copy of ShareCardStatusHeaderView(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_211_1@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

uint64_t OUTLINED_FUNCTION_212_0@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

uint64_t OUTLINED_FUNCTION_213_0()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_216_1()
{
  return type metadata accessor for RemoteControlRequest(0);
}

uint64_t OUTLINED_FUNCTION_217_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
}

uint64_t OUTLINED_FUNCTION_218_2(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_219_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v0, v3);
}

void OUTLINED_FUNCTION_221_1(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  outlined init with copy of ShareCardStatusHeaderView(v3, v4, a3);
}

uint64_t OUTLINED_FUNCTION_222_1@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t OUTLINED_FUNCTION_225_2(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, a1, v1);
}

uint64_t OUTLINED_FUNCTION_229_3()
{
  return swift_unknownObjectUnownedLoadStrong();
}

uint64_t OUTLINED_FUNCTION_230_0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_232_1()
{
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_233_0()
{
  _QWORD *v0;
  _QWORD *v1;

  *v0 = *v1;
}

BOOL OUTLINED_FUNCTION_234(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_236_2()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_237_2(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 160) = a1;
  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t OUTLINED_FUNCTION_239_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_240_0()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_241_1()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v1, 0, 1, v0);
}

void OUTLINED_FUNCTION_242_1()
{
  uint64_t v0;
  uint64_t v1;

  __swift_storeEnumTagSinglePayload(v0, 0, 1, *(_QWORD *)(v1 - 152));
  specialized >> prefix<A>(_:)(v0);
}

void OUTLINED_FUNCTION_243_0()
{
  uint64_t v0;
  uint64_t v1;

  __swift_storeEnumTagSinglePayload(v0, 0, 1, v1);
  specialized >> prefix<A>(_:)(v0);
}

uint64_t OUTLINED_FUNCTION_244(unint64_t a1)
{
  outlined consume of RemoteControlState(a1);
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_245_0(unint64_t a1)
{
  outlined copy of RemoteControlState(a1);
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_246_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t *a13)
{
  uint64_t v13;
  unint64_t v14;

  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v13, v14, a13);
}

void OUTLINED_FUNCTION_247_2()
{
  closure #2 in ScreenSharingInteractionSession.suspendRemoteControlSession(reason:)();
}

uint64_t OUTLINED_FUNCTION_248_2@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  *v1 = v2;
  v1[1] = a1;
  return *(_QWORD *)(v2 + 120);
}

uint64_t OUTLINED_FUNCTION_251_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16)
{
  uint64_t v16;

  *(_QWORD *)(v16 + 16) = a15;
  *(_QWORD *)(v16 + 24) = a16;
  return outlined copy of Data._Representation(a15, a16);
}

void OUTLINED_FUNCTION_252_0()
{
  uint64_t v0;
  uint64_t v1;

  __swift_storeEnumTagSinglePayload(v1, 0, 1, v0);
  specialized >> prefix<A>(_:)(v1);
}

void OUTLINED_FUNCTION_253_2(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  outlined destroy of AsyncStream<Bool>?(v2, a2);
}

uint64_t OUTLINED_FUNCTION_255_1()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);

  return v1(v0);
}

uint64_t OUTLINED_FUNCTION_257_2(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  *a1 = v10;
  a1[1] = v9;
  return a9;
}

uint64_t OUTLINED_FUNCTION_259_1()
{
  return AsyncPublisher.makeAsyncIterator()();
}

void OUTLINED_FUNCTION_261_1(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  outlined init with copy of ShareCardStatusHeaderView(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_262_1()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_263_1(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_266_2@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(v1, v2);
}

void OUTLINED_FUNCTION_267_2()
{
  JUMPOUT(0x1C3B71234);
}

uint64_t OUTLINED_FUNCTION_268_2()
{
  return AsyncStream.Continuation.yield(_:)();
}

uint64_t OUTLINED_FUNCTION_269_2()
{
  return static Participants.only(_:)();
}

void OUTLINED_FUNCTION_273_2(float a1)
{
  float *v1;

  *v1 = a1;
}

uint64_t OUTLINED_FUNCTION_278_0()
{
  return static Date.now.getter();
}

void OUTLINED_FUNCTION_279_2()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t OUTLINED_FUNCTION_280_1()
{
  return ContinuousClock.init()();
}

uint64_t OUTLINED_FUNCTION_281_2()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_285_1@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  *v2 = a1;
  return outlined init with copy of ConversationControlsType(v3 - 232, v1);
}

uint64_t OUTLINED_FUNCTION_286_1()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_287_1()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_290_1()
{
  return swift_unknownObjectUnownedLoadStrong();
}

uint64_t OUTLINED_FUNCTION_295_1()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_296_2()
{
  return GroupSessionMessenger.Messages.makeAsyncIterator()();
}

void OUTLINED_FUNCTION_298_0(_QWORD *a1)
{
  void (*v1)(uint64_t);

  lazy protocol witness table accessor for type UUID and conformance UUID(a1, v1);
}

uint64_t OUTLINED_FUNCTION_301_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a12 + 8))(a14, a13);
}

uint64_t OUTLINED_FUNCTION_303_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_304_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16)
{
  return outlined consume of Data._Representation(a15, a16);
}

BOOL OUTLINED_FUNCTION_305_0(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_307_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t OUTLINED_FUNCTION_309_2()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_311_2(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 200);
}

void OUTLINED_FUNCTION_312_1(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  outlined destroy of RemoteControlMessage(v2, a2);
}

uint64_t OUTLINED_FUNCTION_313_1(uint64_t a1)
{
  unint64_t v1;

  return outlined consume of Data._Representation(a1, v1);
}

uint64_t OUTLINED_FUNCTION_315_2()
{
  return swift_weakLoadStrong();
}

void OUTLINED_FUNCTION_317_1(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  outlined init with copy of ShareCardStatusHeaderView(a1, v3, a3);
}

void OUTLINED_FUNCTION_319_1()
{
  os_unfair_lock_s *v0;

  os_unfair_lock_lock(v0);
}

void OUTLINED_FUNCTION_320_0()
{
  os_unfair_lock_s *v0;

  os_unfair_lock_unlock(v0);
}

uint64_t OUTLINED_FUNCTION_321_0()
{
  uint64_t v0;
  uint64_t v1;

  __swift_storeEnumTagSinglePayload(v1, 0, 1, v0);
  return v1;
}

uint64_t OUTLINED_FUNCTION_322_0()
{
  unint64_t v0;
  uint64_t v1;

  return outlined consume of Data._Representation(v1, v0);
}

void OUTLINED_FUNCTION_323_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  outlined destroy of AsyncStream<Bool>?(v2, a2);
}

uint64_t OUTLINED_FUNCTION_324_2(uint64_t a1, unint64_t a2)
{
  uint64_t *v2;

  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, v2);
}

void OUTLINED_FUNCTION_326_2(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  outlined init with take of ShareCardStatusHeaderView(v3, v4, a3);
}

uint64_t OUTLINED_FUNCTION_331_1()
{
  return String.init<A>(reflecting:)();
}

uint64_t OUTLINED_FUNCTION_332_1()
{
  return String.init<A>(reflecting:)();
}

uint64_t OUTLINED_FUNCTION_333_0()
{
  return String.init<A>(reflecting:)();
}

uint64_t OUTLINED_FUNCTION_336_1(uint64_t a1, unint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, (uint64_t *)va);
}

void OUTLINED_FUNCTION_337_1()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_340_1()
{
  return GroupSession.isLocallyInitiated.getter();
}

uint64_t OUTLINED_FUNCTION_341_0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, (uint64_t *)va);
}

unint64_t OUTLINED_FUNCTION_342_2@<X0>(unint64_t a1@<X8>)
{
  return outlined consume of RemoteControlState(a1);
}

uint64_t OUTLINED_FUNCTION_343_1()
{
  uint64_t v0;

  return outlined init with copy of ConversationControlsType(v0 - 136, v0 - 184);
}

uint64_t OUTLINED_FUNCTION_345_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_347_1()
{
  return String.init<A>(reflecting:)();
}

uint64_t OUTLINED_FUNCTION_348_0()
{
  uint64_t v0;

  return outlined destroy of ConversationControlsType(v0 - 184);
}

void OUTLINED_FUNCTION_349_0(float a1)
{
  float *v1;

  *v1 = a1;
}

uint64_t OUTLINED_FUNCTION_351_1@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t OUTLINED_FUNCTION_352_1(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;

  return v2(v3, a2, v4);
}

void OUTLINED_FUNCTION_353_1()
{
  os_unfair_lock_s *v0;

  os_unfair_lock_unlock(v0);
}

void OUTLINED_FUNCTION_354_0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  outlined init with copy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v3, v4, a3);
}

void OUTLINED_FUNCTION_355_1(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  outlined destroy of AsyncStream<Bool>?(v2, a2);
}

id OUTLINED_FUNCTION_356_0()
{
  void *v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_357_0()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(v0, v2);
}

uint64_t OUTLINED_FUNCTION_358_0()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_360_0()
{
  return String.init<A>(reflecting:)();
}

void OUTLINED_FUNCTION_362_0(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  outlined destroy of RemoteControlMessage(v2, a2);
}

uint64_t OUTLINED_FUNCTION_363_1()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *v0;
  *(_QWORD *)(v1 - 8) = *v0;
  return *(_QWORD *)(v2 + 264);
}

uint64_t OUTLINED_FUNCTION_365_0()
{
  return AnyCancellable.init(_:)();
}

uint64_t OUTLINED_FUNCTION_367_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, v1, v2);
}

uint64_t OUTLINED_FUNCTION_368_1()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 80);
}

uint64_t OUTLINED_FUNCTION_370_1()
{
  return static os_log_type_t.error.getter();
}

uint64_t OUTLINED_FUNCTION_373_1()
{
  return swift_release_n();
}

uint64_t OUTLINED_FUNCTION_374_0@<X0>(uint64_t (*a1)(void)@<X8>)
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_376_1(float a1)
{
  float *v1;

  *v1 = a1;
  return GroupSessionMessenger.MessageContext.source.getter();
}

void OUTLINED_FUNCTION_377_0()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_378_1()
{
  uint64_t v0;
  unint64_t v1;

  return outlined copy of Data._Representation(v0, v1);
}

uint64_t OUTLINED_FUNCTION_379_0()
{
  uint64_t v0;
  unint64_t v1;

  return outlined consume of Data._Representation(v0, v1);
}

uint64_t OUTLINED_FUNCTION_380_1()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 128);
}

uint64_t OUTLINED_FUNCTION_381_0()
{
  return String.init<A>(reflecting:)();
}

uint64_t OUTLINED_FUNCTION_382()
{
  return type metadata accessor for AnyCancellable();
}

void OUTLINED_FUNCTION_383_1(_QWORD *a1)
{
  void (*v1)(uint64_t);

  lazy protocol witness table accessor for type UUID and conformance UUID(a1, v1);
}

void PushToTalkTalkCircularButton.__allocating_init(viewModel:)()
{
  uint64_t v0;

  OUTLINED_FUNCTION_16_1();
  PushToTalkTalkCircularButton.init(viewModel:)(v0);
  OUTLINED_FUNCTION_0();
}

char *PushToTalkTalkCircularButton.init(viewModel:)(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  char *v7;

  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit28PushToTalkTalkCircularButton_controller] = 0;
  v3 = OBJC_IVAR____TtC15ConversationKit28PushToTalkTalkCircularButton_stateConfiguration;
  v4 = one-time initialization token for pttTalkButtonFullScreen;
  v5 = v1;
  if (v4 != -1)
    swift_once();
  *(_QWORD *)&v5[v3] = static Colors.InCallControls.pttTalkButtonFullScreen;
  *(_QWORD *)&v5[OBJC_IVAR____TtC15ConversationKit28PushToTalkTalkCircularButton_viewModel] = a1;
  swift_bridgeObjectRetain();
  swift_retain();

  swift_bridgeObjectRetain();
  v6 = CircularButton.init(symbol:stateConfiguration:context:)();
  type metadata accessor for PushToTalkTalkButtonController();
  swift_allocObject();
  v7 = (char *)v6;
  *(_QWORD *)&v7[OBJC_IVAR____TtC15ConversationKit28PushToTalkTalkCircularButton_controller] = PushToTalkTalkButtonController.init(button:viewModel:)(v7, a1);
  swift_release();
  return v7;
}

void PushToTalkTalkCircularButton.__allocating_init(coder:)()
{
  void *v0;

  objc_msgSend(OUTLINED_FUNCTION_16_1(), sel_initWithCoder_, v0);

  OUTLINED_FUNCTION_0();
}

void PushToTalkTalkCircularButton.init(coder:)()
{
  char *v0;
  uint64_t v1;

  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit28PushToTalkTalkCircularButton_controller] = 0;
  v1 = OBJC_IVAR____TtC15ConversationKit28PushToTalkTalkCircularButton_stateConfiguration;
  if (one-time initialization token for pttTalkButtonFullScreen != -1)
    swift_once();
  *(_QWORD *)&v0[v1] = static Colors.InCallControls.pttTalkButtonFullScreen;
  swift_bridgeObjectRetain();

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void PushToTalkTalkCircularButton.computedState.getter()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit28PushToTalkTalkCircularButton_controller);
  if (v1)
  {
    v2 = *(void (**)(uint64_t))(*(_QWORD *)v1 + 216);
    v3 = swift_retain();
    v2(v3);
    swift_release();
  }
  OUTLINED_FUNCTION_0();
}

Swift::Void __swiftcall PushToTalkTalkCircularButton.updateConfiguration()()
{
  _QWORD *v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  _BYTE *v4;
  char v5;
  objc_class *v7;
  uint64_t v8;
  _BYTE v10[24];
  ValueMetadata *v11;
  _UNKNOWN **v12;
  objc_super v13;
  _BYTE v14[64];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIButton.Configuration?);
  v2 = MEMORY[0x1E0C80A78](v1);
  v4 = &v10[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = (*(uint64_t (**)(__n128))(**(_QWORD **)((char *)v0
                                                       + OBJC_IVAR____TtC15ConversationKit28PushToTalkTalkCircularButton_viewModel)
                                         + 112))(v2);
  if ((v5 & 0xFE) == 2 || (v5 & 1) == 0)
  {
    v7 = (objc_class *)type metadata accessor for PushToTalkTalkCircularButton();
    v13.receiver = v0;
    v13.super_class = v7;
    objc_msgSendSuper2(&v13, sel_updateConfiguration);
  }
  else
  {
    v11 = &type metadata for SymbolImageDescribers.ConversationControls;
    v12 = &protocol witness table for SymbolImageDescribers.ConversationControls;
    v10[0] = 20;
    (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
    specialized Dictionary.subscript.getter();
    static UIButton.Configuration.base(title:symbol:shape:style:context:)(0, 0, (uint64_t)v10, 1, (uint64_t)v14, 2, (uint64_t)v4);
    outlined release of ButtonStyle?((uint64_t)v14);
    outlined destroy of SymbolImageDescribing?((uint64_t)v10);
    v8 = type metadata accessor for UIButton.Configuration();
    __swift_storeEnumTagSinglePayload((uint64_t)v4, 0, 1, v8);
    UIButton.configuration.setter();
  }
}

uint64_t type metadata accessor for PushToTalkTalkCircularButton()
{
  return objc_opt_self();
}

void PushToTalkTalkCircularButton.__allocating_init(symbol:stateConfiguration:context:)()
{
  OUTLINED_FUNCTION_0_122();
  __break(1u);
}

void PushToTalkTalkCircularButton.init(symbol:stateConfiguration:context:)()
{
  OUTLINED_FUNCTION_0_122();
  __break(1u);
}

uint64_t PushToTalkTalkCircularButton.__ivar_destroyer()
{
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

id PushToTalkTalkCircularButton.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PushToTalkTalkCircularButton();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for PushToTalkTalkCircularButton()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PushToTalkTalkCircularButton.__allocating_init(viewModel:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 296))();
}

void ConversationControlsOpenMessagesButtonProvider.__allocating_init(controlsManager:context:shape:)(uint64_t a1, char a2, char a3)
{
  *(_QWORD *)(swift_allocObject() + 136) = a1;
  ControlsButtonProvider.init(context:shape:)(a2, a3);
}

Swift::Void __swiftcall ConversationControlsOpenMessagesButtonProvider.buttonChanged()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  ControlsButtonProvider.buttonChanged()();
  v6 = (void *)(*(uint64_t (**)(void))(*v0 + 168))();
  if (v6)
  {
    v8 = v6;
    v9 = v7;
    outlined bridged method (mbnn) of @objc NSObject.accessibilityIdentifier.setter(0xD000000000000012, 0x80000001BD672470, v6);
    v10 = (_QWORD *)v0[17];
    v11 = objc_msgSend(v8, sel_addTarget_action_forControlEvents_, v1[17], sel_openMessagesButtonTapped, 64);
    (*(void (**)(id))((*MEMORY[0x1E0DEEDD8] & *v10) + 0x4F0))(v11);
    *(_QWORD *)(swift_allocObject() + 24) = v9;
    swift_unknownObjectWeakInit();
    lazy protocol witness table accessor for type Published<Bool>.Publisher and conformance Published<A>.Publisher();
    v12 = Publisher<>.sink(receiveValue:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    (*(void (**)(uint64_t))(*v1 + 224))(v12);

  }
}

void closure #1 in ConversationControlsOpenMessagesButtonProvider.buttonChanged()(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess();
  v4 = (void *)MEMORY[0x1C3B752C0](v3);
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v4, sel_setEnabled_, v2);

  }
}

void ConversationControlsOpenMessagesButtonProvider.init(controlsManager:context:shape:)(uint64_t a1, char a2, char a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 136) = a1;
  ControlsButtonProvider.init(context:shape:)(a2, a3);
}

uint64_t ConversationControlsOpenMessagesButtonProvider.deinit()
{
  uint64_t v0;
  uint64_t v1;

  v1 = ControlsButtonProvider.deinit();
  OUTLINED_FUNCTION_1_24(v1);
  return v0;
}

uint64_t ConversationControlsOpenMessagesButtonProvider.__deallocating_deinit()
{
  uint64_t v0;

  v0 = ControlsButtonProvider.deinit();
  OUTLINED_FUNCTION_1_24(v0);
  return swift_deallocClassInstance();
}

uint64_t sub_1BD35177C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void partial apply for closure #1 in ConversationControlsOpenMessagesButtonProvider.buttonChanged()(unsigned __int8 *a1)
{
  uint64_t v1;

  closure #1 in ConversationControlsOpenMessagesButtonProvider.buttonChanged()(a1, v1);
}

uint64_t type metadata accessor for ConversationControlsOpenMessagesButtonProvider()
{
  return objc_opt_self();
}

uint64_t NotifyDispatchName.rawValue.getter(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t NotifyDispatchName.rawValue.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*NotifyDispatchName.rawValue.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t protocol witness for ExpressibleByStringLiteral.init(stringLiteral:) in conformance NotifyDispatchName@<X0>(Swift::String *a1@<X0>, ConversationKit::NotifyDispatchName *a2@<X8>)
{
  uint64_t result;
  ConversationKit::NotifyDispatchName v4;

  v4 = NotifyDispatchName.init(stringLiteral:)(*a1);
  result = v4.rawValue._countAndFlagsBits;
  *a2 = v4;
  return result;
}

uint64_t notifyRegisterDispatch(name:queue:handler:)(uint64_t a1, unint64_t a2, NSObject *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t result;
  _QWORD aBlock[6];
  int out_token;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v5 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v5 = a1 & 0xFFFFFFFFFFFFLL;
  if (v5)
  {
    v9 = String.utf8CString.getter();
    out_token = 0;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      specialized _ContiguousArrayBuffer._consumeAndCreateNew()();
      v9 = v10;
    }
    if (!*(_QWORD *)(v9 + 16))
      __break(1u);
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + 16) = a4;
    *(_QWORD *)(v11 + 24) = a5;
    aBlock[4] = partial apply for thunk for @escaping @callee_guaranteed () -> (@unowned Font.Weight);
    aBlock[5] = v11;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = thunk for @escaping @callee_guaranteed (@unowned Int32) -> ();
    aBlock[3] = &block_descriptor_62;
    v12 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    notify_register_dispatch((const char *)(v9 + 32), &out_token, a3, v12);
    _Block_release(v12);
    return swift_release();
  }
  else
  {
    result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_1BD351AAC()
{
  swift_release();
  return swift_deallocObject();
}

unint64_t lazy protocol witness table accessor for type NotifyDispatchName and conformance NotifyDispatchName()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type NotifyDispatchName and conformance NotifyDispatchName;
  if (!lazy protocol witness table cache variable for type NotifyDispatchName and conformance NotifyDispatchName)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for NotifyDispatchName, &type metadata for NotifyDispatchName);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type NotifyDispatchName and conformance NotifyDispatchName);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type NotifyDispatchName and conformance NotifyDispatchName;
  if (!lazy protocol witness table cache variable for type NotifyDispatchName and conformance NotifyDispatchName)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for NotifyDispatchName, &type metadata for NotifyDispatchName);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type NotifyDispatchName and conformance NotifyDispatchName);
  }
  return result;
}

uint64_t associated type witness table accessor for ExpressibleByStringLiteral.StringLiteralType : _ExpressibleByBuiltinStringLiteral in NotifyDispatchName()
{
  return MEMORY[0x1E0DEA9F0];
}

uint64_t associated type witness table accessor for ExpressibleByExtendedGraphemeClusterLiteral.ExtendedGraphemeClusterLiteralType : _ExpressibleByBuiltinExtendedGraphemeClusterLiteral in NotifyDispatchName()
{
  return MEMORY[0x1E0DEAA00];
}

uint64_t associated type witness table accessor for ExpressibleByUnicodeScalarLiteral.UnicodeScalarLiteralType : _ExpressibleByBuiltinUnicodeScalarLiteral in NotifyDispatchName()
{
  return MEMORY[0x1E0DEA9F8];
}

ValueMetadata *type metadata accessor for NotifyDispatchName()
{
  return &type metadata for NotifyDispatchName;
}

ConversationKit::MaterialView __swiftcall MaterialView.init(blurStyle:)(UIBlurEffectStyle blurStyle)
{
  id v1;

  v1 = objc_msgSend((id)objc_opt_self(), sel_effectWithStyle_, blurStyle);
  return (ConversationKit::MaterialView)OUTLINED_FUNCTION_0_18(v1);
}

id MaterialView.init(privateBlurStyle:)(uint64_t a1)
{
  id v1;

  v1 = objc_msgSend((id)objc_opt_self(), sel_effectWithStyle_, a1);
  return OUTLINED_FUNCTION_0_18(v1);
}

id MaterialView.makeUIView(context:)(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F58]), sel_initWithEffect_, a2);
}

unint64_t lazy protocol witness table accessor for type MaterialView and conformance MaterialView()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type MaterialView and conformance MaterialView;
  if (!lazy protocol witness table cache variable for type MaterialView and conformance MaterialView)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for MaterialView, &type metadata for MaterialView);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MaterialView and conformance MaterialView);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type MaterialView and conformance MaterialView;
  if (!lazy protocol witness table cache variable for type MaterialView and conformance MaterialView)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for MaterialView, &type metadata for MaterialView);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MaterialView and conformance MaterialView);
  }
  return result;
}

id protocol witness for UIViewRepresentable.makeUIView(context:) in conformance MaterialView(uint64_t a1)
{
  uint64_t *v1;

  return MaterialView.makeUIView(context:)(a1, *v1);
}

uint64_t protocol witness for static View._makeView(view:inputs:) in conformance MaterialView()
{
  lazy protocol witness table accessor for type MaterialView and conformance MaterialView();
  return static UIViewRepresentable._makeView(view:inputs:)();
}

uint64_t protocol witness for static View._makeViewList(view:inputs:) in conformance MaterialView()
{
  lazy protocol witness table accessor for type MaterialView and conformance MaterialView();
  return static UIViewRepresentable._makeViewList(view:inputs:)();
}

void protocol witness for View.body.getter in conformance MaterialView()
{
  lazy protocol witness table accessor for type MaterialView and conformance MaterialView();
  UIViewRepresentable.body.getter();
  __break(1u);
}

ValueMetadata *type metadata accessor for MaterialView()
{
  return &type metadata for MaterialView;
}

uint64_t key path setter for CallAgainHUDView.recipe : CallAgainHUDView(uint64_t a1, _QWORD **a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v4 = type metadata accessor for ConversationControlsRecipe();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of ConversationControlsRecipe(a1, (uint64_t)v6);
  return (*(uint64_t (**)(char *))((*MEMORY[0x1E0DEEDD8] & **a2) + 0xC8))(v6);
}

uint64_t CallAgainHUDView.recipe.didset()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v1 = type metadata accessor for ConversationControlsRecipe();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = v0 + OBJC_IVAR____TtC15ConversationKit16CallAgainHUDView_recipe;
  swift_beginAccess();
  outlined init with copy of ConversationControlsRecipe(v4, (uint64_t)v3);
  CallAgainHUDView.updateFromRecipe(_:)((uint64_t)v3);
  return outlined destroy of ConversationControlsRecipe((uint64_t)v3);
}

uint64_t CallAgainHUDView.recipe.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15ConversationKit16CallAgainHUDView_recipe;
  swift_beginAccess();
  return outlined init with copy of ConversationControlsRecipe(v3, a1);
}

uint64_t CallAgainHUDView.recipe.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15ConversationKit16CallAgainHUDView_recipe;
  OUTLINED_FUNCTION_60_0();
  outlined assign with copy of ConversationControlsRecipe(a1, v3);
  swift_endAccess();
  CallAgainHUDView.recipe.didset();
  return OUTLINED_FUNCTION_10_12();
}

uint64_t (*CallAgainHUDView.recipe.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_60_0();
  return CallAgainHUDView.recipe.modify;
}

uint64_t CallAgainHUDView.recipe.modify(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return CallAgainHUDView.recipe.didset();
  return result;
}

void *CallAgainHUDView.Constants.buttonCornerRadiusMac.unsafeMutableAddressor()
{
  return &static CallAgainHUDView.Constants.buttonCornerRadiusMac;
}

double static CallAgainHUDView.Constants.buttonCornerRadiusMac.getter()
{
  return 5.0;
}

void one-time initialization function for buttonSpacing()
{
  static CallAgainHUDView.buttonSpacing = 0x402E000000000000;
}

void CallAgainHUDView.bottomButtonConstraint.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_4_3(a1, OBJC_IVAR____TtC15ConversationKit16CallAgainHUDView_bottomButtonConstraint);
}

void CallAgainHUDView.avatarBottomConstraint.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_4_3(a1, OBJC_IVAR____TtC15ConversationKit16CallAgainHUDView_avatarBottomConstraint);
}

id closure #1 in variable initialization expression of CallAgainHUDView.primaryLabel()
{
  id result;
  void *v1;
  Class isa;
  Class v3;
  void *v4;
  objc_class *v5;
  UILabel *v6;
  void *v7;
  void *v8;
  UIColor_optional v9;

  result = objc_msgSend((id)objc_opt_self(), sel__preferredFontForTextStyle_weight_, *MEMORY[0x1E0DC4B60], *MEMORY[0x1E0DC1448]);
  if (result)
  {
    v1 = result;
    isa = UIFont.withTraits(_:)(0x8000u).super.isa;

    v3 = UIFont.caseSensitive()().super.isa;
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UILabel);
    v4 = (void *)objc_opt_self();
    v5 = v3;
    v9.value.super.isa = (Class)objc_msgSend(v4, sel_labelColor);
    UILabel.init(font:textColor:)(v6, (UIFont)v5, v9);
    v8 = v7;
    objc_msgSend(v7, sel_setNumberOfLines_, 2);
    objc_msgSend(v8, sel_setTextAlignment_, 1);

    return v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *closure #1 in variable initialization expression of CallAgainHUDView.callTypeLabel()
{
  id v0;
  id v1;
  id v2;
  UILabel *v3;
  void *v4;
  void *v5;
  UIColor_optional v7;

  v0 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UILabel);
  v1 = objc_allocWithZone(MEMORY[0x1E0DC3658]);
  v2 = v0;
  v7.value.super.isa = (Class)objc_msgSend(v1, sel_initWithWhite_alpha_, 0.6, 1.0);
  UILabel.init(font:textColor:)(v3, (UIFont)v2, v7);
  v5 = v4;
  objc_msgSend(v4, sel__setDrawsAsBackdropOverlayWithBlendMode_, 3);

  return v5;
}

id closure #1 in variable initialization expression of CallAgainHUDView.avatarStack(void *a1)
{
  objc_msgSend(a1, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(a1, sel_setAxis_, 1);
  objc_msgSend(a1, sel_setAlignment_, 3);
  objc_msgSend(a1, sel_setSpacing_, 11.0);
  return a1;
}

id closure #1 in variable initialization expression of CallAgainHUDView.videoMessageStackView(void *a1)
{
  id v1;
  id v2;

  v1 = objc_msgSend(a1, sel_traitCollection);
  v2 = objc_msgSend(v1, sel_preferredContentSizeCategory);

  LOBYTE(v1) = UIContentSizeCategory.isAccessibilityCategory.getter();
  objc_msgSend(a1, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(a1, sel_setAxis_, v1 & 1);
  objc_msgSend(a1, sel_setDistribution_, 1);
  if (one-time initialization token for buttonSpacing != -1)
    swift_once();
  objc_msgSend(a1, sel_setSpacing_, *(double *)&static CallAgainHUDView.buttonSpacing);
  return a1;
}

uint64_t closure #1 in variable initialization expression of CallAgainHUDView.callBackButton()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  Swift::String v12;
  Swift::String_optional v13;
  Swift::String v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  void (*v19)(_BYTE *, _QWORD);
  uint64_t v20;
  uint64_t KeyPath;
  uint64_t v22;
  _QWORD v24[2];
  _BYTE v25[32];
  Swift::String v26;

  v0 = type metadata accessor for AttributeContainer();
  MEMORY[0x1E0C80A78](v0);
  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for UIButton.Configuration();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v24 - v9;
  static UIButton.Configuration.roundButtonConfiguration(using:)(10);
  v11 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v26._object = (void *)0xE000000000000000;
  v12._countAndFlagsBits = 0x4147415F4C4C4143;
  v12._object = (void *)0xEA00000000004E49;
  v13.value._countAndFlagsBits = 0x61737265766E6F43;
  v13.value._object = (void *)0xEF74694B6E6F6974;
  v14._countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  v26._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v12, v13, (NSBundle)v11, v14, v26);

  AttributeContainer.init()();
  AttributedString.init(_:attributes:)();
  v15 = type metadata accessor for AttributedString();
  __swift_storeEnumTagSinglePayload((uint64_t)v3, 0, 1, v15);
  UIButton.Configuration.attributedTitle.setter();
  v16 = (void *)objc_opt_self();
  v17 = objc_msgSend(v16, sel_systemGreenColor);
  UIButton.Configuration.baseBackgroundColor.setter();
  v18 = objc_msgSend(v16, sel_whiteColor);
  UIButton.Configuration.baseForegroundColor.setter();
  v19 = (void (*)(_BYTE *, _QWORD))UIButton.Configuration.attributedTitle.modify();
  if (!__swift_getEnumTagSinglePayload(v20, 1, v15))
  {
    KeyPath = swift_getKeyPath();
    MEMORY[0x1E0C80A78](KeyPath);
    swift_getKeyPath();
    v24[1] = objc_msgSend((id)objc_opt_self(), sel__preferredFontForTextStyle_weight_, *MEMORY[0x1E0DC4B10], *MEMORY[0x1E0DC1448]);
    lazy protocol witness table accessor for type AttributeScopes.UIKitAttributes.FontAttribute and conformance AttributeScopes.UIKitAttributes.FontAttribute();
    AttributedString.subscript.setter();
  }
  v19(v25, 0);
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIButton);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v10, v4);
  v22 = UIButton.init(configuration:primaryAction:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  return v22;
}

uint64_t static UIButton.Configuration.roundButtonConfiguration(using:)(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  _QWORD v10[8];

  v2 = type metadata accessor for UIButton.Configuration.CornerStyle();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UIButton.Configuration.filled()();
  SymbolImageDescribers.LocalParticipantView.symbolImageDescription.getter(a1);
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  v6 = v10[0];
  v7 = v10[1];
  swift_bridgeObjectRetain();
  @nonobjc UIImage.init(_systemName:)(v6, v7);
  UIButton.Configuration.image.setter();
  v8 = objc_msgSend((id)objc_opt_self(), sel_configurationWithTextStyle_scale_, v10[3], v10[2]);
  UIButton.Configuration.preferredSymbolConfigurationForImage.setter();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DC3060], v2);
  UIButton.Configuration.cornerStyle.setter();
  UIButton.Configuration.imagePadding.setter();
  return outlined release of SymbolImageDescription((uint64_t)v10);
}

id CallAgainHUDView.callBackButton.getter()
{
  return OUTLINED_FUNCTION_7(OBJC_IVAR____TtC15ConversationKit16CallAgainHUDView_callBackButton);
}

id closure #1 in variable initialization expression of CallAgainHUDView.closeButton()
{
  uint64_t v0;
  id v1;
  double v3[50];

  v0 = type metadata accessor for UIButton.Configuration();
  MEMORY[0x1E0C80A78](v0);
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIButton);
  static UIButton.Configuration.closeButtonConfiguration()();
  v1 = (id)UIButton.init(configuration:primaryAction:)();
  static Layout.ConversationControls.values.getter((uint64_t)v3);
  objc_msgSend(v1, sel__setTouchInsets_, v3[31], v3[32], v3[33], v3[34]);

  objc_msgSend(v1, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  return v1;
}

uint64_t static UIButton.Configuration.closeButtonConfiguration()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  Swift::String v10;
  Swift::String_optional v11;
  Swift::String v12;
  uint64_t v13;
  void (*v14)(_BYTE *, _QWORD);
  uint64_t v15;
  uint64_t KeyPath;
  id v17;
  _QWORD v19[2];
  _BYTE v20[32];
  Swift::String v21;

  v0 = type metadata accessor for UIBackgroundConfiguration();
  MEMORY[0x1E0C80A78](v0);
  v1 = type metadata accessor for AttributeContainer();
  MEMORY[0x1E0C80A78](v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UIButton.Configuration.CornerStyle();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UIButton.Configuration.filled()();
  UIButton.Configuration.contentInsets.setter();
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DC3060], v5);
  UIButton.Configuration.cornerStyle.setter();
  v9 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v21._object = (void *)0xE000000000000000;
  v10._object = (void *)0x80000001BD679710;
  v10._countAndFlagsBits = 0xD000000000000010;
  v11.value._countAndFlagsBits = 0x61737265766E6F43;
  v11.value._object = (void *)0xEF74694B6E6F6974;
  v12._countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  v21._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v10, v11, (NSBundle)v9, v12, v21);

  AttributeContainer.init()();
  AttributedString.init(_:attributes:)();
  v13 = type metadata accessor for AttributedString();
  __swift_storeEnumTagSinglePayload((uint64_t)v4, 0, 1, v13);
  UIButton.Configuration.attributedTitle.setter();
  v14 = (void (*)(_BYTE *, _QWORD))UIButton.Configuration.attributedTitle.modify();
  if (!__swift_getEnumTagSinglePayload(v15, 1, v13))
  {
    KeyPath = swift_getKeyPath();
    MEMORY[0x1E0C80A78](KeyPath);
    swift_getKeyPath();
    v19[1] = objc_msgSend((id)objc_opt_self(), sel__preferredFontForTextStyle_weight_, *MEMORY[0x1E0DC4B10], *MEMORY[0x1E0DC1448]);
    lazy protocol witness table accessor for type AttributeScopes.UIKitAttributes.FontAttribute and conformance AttributeScopes.UIKitAttributes.FontAttribute();
    AttributedString.subscript.setter();
  }
  v14(v20, 0);
  static UIBackgroundConfiguration.listGroupedCell()();
  v17 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
  UIBackgroundConfiguration.backgroundColor.setter();
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIVibrancyEffect);
  static UIVibrancyEffect.inCallControlsEffect.getter();
  UIBackgroundConfiguration.visualEffect.setter();
  return UIButton.Configuration.background.setter();
}

id CallAgainHUDView.closeButton.getter()
{
  return OUTLINED_FUNCTION_7(OBJC_IVAR____TtC15ConversationKit16CallAgainHUDView_closeButton);
}

uint64_t closure #1 in variable initialization expression of CallAgainHUDView.videoMessageButton()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  Swift::String v11;
  Swift::String_optional v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  void (*v26)(uint64_t *, _QWORD);
  uint64_t v27;
  uint64_t KeyPath;
  uint64_t v29;
  uint64_t v30;
  _QWORD v32[2];
  uint64_t v33[4];
  Swift::String v34;

  v0 = type metadata accessor for AttributeContainer();
  MEMORY[0x1E0C80A78](v0);
  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for UIButton.Configuration();
  v32[0] = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v32 - v8;
  static UIButton.Configuration.roundButtonConfiguration(using:)(5);
  static Platform.current.getter();
  UIButton.Configuration.contentInsets.setter();
  v10 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v34._countAndFlagsBits = 0xD00000000000002DLL;
  v34._object = (void *)0x80000001BD686C80;
  v11._object = (void *)0x80000001BD686C60;
  v11._countAndFlagsBits = 0xD000000000000013;
  v12.value._countAndFlagsBits = 0x61737265766E6F43;
  v12.value._object = (void *)0xEF74694B6E6F6974;
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v11, v12, (NSBundle)v10, v13, v34);

  AttributeContainer.init()();
  AttributedString.init(_:attributes:)();
  v14 = type metadata accessor for AttributedString();
  __swift_storeEnumTagSinglePayload((uint64_t)v3, 0, 1, v14);
  UIButton.Configuration.attributedTitle.setter();
  v15 = UIButton.Configuration.preferredSymbolConfigurationForImage.getter();
  if (v15)
  {
    v16 = (void *)v15;
    _sSo8NSObjectCMaTm_0(0, &lazy cache variable for type metadata for UIImageSymbolConfiguration);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1BD6441C0;
    v18 = (void *)objc_opt_self();
    *(_QWORD *)(v17 + 32) = objc_msgSend(v18, sel_systemRedColor);
    *(_QWORD *)(v17 + 40) = objc_msgSend(v18, sel_systemRedColor);
    v33[0] = v17;
    specialized Array._endMutation()();
    v19 = @nonobjc UIImageSymbolConfiguration.__allocating_init(paletteColors:)();
    v20 = objc_msgSend((id)objc_opt_self(), sel_configurationWithWeight_, 7);
    v21 = objc_msgSend(v19, sel_configurationByApplyingConfiguration_, v20);

    v22 = objc_msgSend(v16, sel_configurationByApplyingConfiguration_, v21);
  }
  UIButton.Configuration.preferredSymbolConfigurationForImage.setter();
  v23 = (void *)objc_opt_self();
  v24 = objc_msgSend(v23, sel_whiteColor);
  UIButton.Configuration.baseBackgroundColor.setter();
  v25 = objc_msgSend(v23, sel_blackColor);
  UIButton.Configuration.baseForegroundColor.setter();
  v26 = (void (*)(uint64_t *, _QWORD))UIButton.Configuration.attributedTitle.modify();
  if (!__swift_getEnumTagSinglePayload(v27, 1, v14))
  {
    KeyPath = swift_getKeyPath();
    MEMORY[0x1E0C80A78](KeyPath);
    swift_getKeyPath();
    v32[1] = objc_msgSend((id)objc_opt_self(), sel__preferredFontForTextStyle_weight_, *MEMORY[0x1E0DC4B10], *MEMORY[0x1E0DC1448]);
    lazy protocol witness table accessor for type AttributeScopes.UIKitAttributes.FontAttribute and conformance AttributeScopes.UIKitAttributes.FontAttribute();
    AttributedString.subscript.setter();
  }
  v26(v33, 0);
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIButton);
  v29 = v32[0];
  (*(void (**)(char *, char *, uint64_t))(v32[0] + 16))(v6, v9, v4);
  v30 = UIButton.init(configuration:primaryAction:)();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v9, v4);
  return v30;
}

id @nonobjc UIImageSymbolConfiguration.__allocating_init(paletteColors:)()
{
  Class isa;
  id v1;

  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIColor);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v1 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_configurationWithPaletteColors_, isa);

  return v1;
}

id CallAgainHUDView.videoMessageButton.getter()
{
  return OUTLINED_FUNCTION_7(OBJC_IVAR____TtC15ConversationKit16CallAgainHUDView_videoMessageButton);
}

double CallAgainHUDView.buttonBottomPaddingDivisor.getter()
{
  return dbl_1BD659940[static Platform.current.getter() == 1];
}

id closure #1 in variable initialization expression of CallAgainHUDView.showCallDetailsButton()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(), sel_buttonWithType_, 4);
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v0, sel_setPointerInteractionEnabled_, 1);
  v1 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
  objc_msgSend(v0, sel_setTintColor_, v1);

  return v0;
}

id CallAgainHUDView.showCallDetailsButton.getter()
{
  return OUTLINED_FUNCTION_7(OBJC_IVAR____TtC15ConversationKit16CallAgainHUDView_showCallDetailsButton);
}

_QWORD *CallAgainHUDView.__allocating_init(recipe:)()
{
  uint64_t v0;

  OUTLINED_FUNCTION_16_1();
  return CallAgainHUDView.init(recipe:)(v0);
}

_QWORD *CallAgainHUDView.init(recipe:)(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  void *v18;
  int v19;
  const char *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  _QWORD *v26;
  id v27;
  id v28;
  objc_super v30;

  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit16CallAgainHUDView_bottomButtonConstraint] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit16CallAgainHUDView_avatarBottomConstraint] = 0;
  OUTLINED_FUNCTION_18_35();
  v3 = OBJC_IVAR____TtC15ConversationKit16CallAgainHUDView_primaryLabel;
  v4 = v1;
  *(_QWORD *)&v1[v3] = closure #1 in variable initialization expression of CallAgainHUDView.primaryLabel();
  v5 = OBJC_IVAR____TtC15ConversationKit16CallAgainHUDView_callTypeLabel;
  *(_QWORD *)&v4[v5] = closure #1 in variable initialization expression of CallAgainHUDView.callTypeLabel();
  v6 = OBJC_IVAR____TtC15ConversationKit16CallAgainHUDView_avatarStack;
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3CA8]), sel_init);
  v8 = closure #1 in variable initialization expression of CallAgainHUDView.avatarStack(v7);

  *(_QWORD *)&v4[v6] = v8;
  v9 = OBJC_IVAR____TtC15ConversationKit16CallAgainHUDView_videoMessageStackView;
  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3CA8]), sel_init);
  v11 = closure #1 in variable initialization expression of CallAgainHUDView.videoMessageStackView(v10);

  *(_QWORD *)&v4[v9] = v11;
  v12 = OBJC_IVAR____TtC15ConversationKit16CallAgainHUDView_callBackButton;
  *(_QWORD *)&v4[v12] = closure #1 in variable initialization expression of CallAgainHUDView.callBackButton();
  v13 = OBJC_IVAR____TtC15ConversationKit16CallAgainHUDView_closeButton;
  *(_QWORD *)&v4[v13] = closure #1 in variable initialization expression of CallAgainHUDView.closeButton();
  v14 = OBJC_IVAR____TtC15ConversationKit16CallAgainHUDView_videoMessageButton;
  *(_QWORD *)&v4[v14] = closure #1 in variable initialization expression of CallAgainHUDView.videoMessageButton();
  v15 = OBJC_IVAR____TtC15ConversationKit16CallAgainHUDView_effectsView;
  *(_QWORD *)&v4[v15] = closure #1 in LocalParticipantView.overlayBlurView.getter();
  *(_QWORD *)&v4[OBJC_IVAR____TtC15ConversationKit16CallAgainHUDView_avatarStackVerticalSpacingDivisor] = 0x3FCCAC083126E979;
  v16 = OBJC_IVAR____TtC15ConversationKit16CallAgainHUDView_showCallDetailsButton;
  *(_QWORD *)&v4[v16] = closure #1 in variable initialization expression of CallAgainHUDView.showCallDetailsButton();
  outlined init with copy of ConversationControlsRecipe(a1, (uint64_t)&v4[OBJC_IVAR____TtC15ConversationKit16CallAgainHUDView_recipe]);

  v30.receiver = v4;
  v30.super_class = (Class)ObjC metadata update function for CallAgainHUDView();
  v17 = objc_msgSendSuper2(&v30, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  OUTLINED_FUNCTION_53_0(v17, sel_addSubview_);
  CallAgainHUDView.updateFromRecipe(_:)(a1);
  v18 = *(void **)((char *)v17 + OBJC_IVAR____TtC15ConversationKit16CallAgainHUDView_videoMessageStackView);
  OUTLINED_FUNCTION_53_0(v17, sel_addSubview_);
  v19 = static Platform.current.getter();
  objc_msgSend(v18, sel_addArrangedSubview_, *(_QWORD *)((char *)v17 + OBJC_IVAR____TtC15ConversationKit16CallAgainHUDView_callBackButton));
  v20 = sel_addArrangedSubview_;
  if (v19 == 3)
  {
    v21 = *(_QWORD *)((char *)v17 + OBJC_IVAR____TtC15ConversationKit16CallAgainHUDView_closeButton);
    v22 = v18;
  }
  else
  {
    objc_msgSend(v18, sel_addArrangedSubview_, *(_QWORD *)((char *)v17 + OBJC_IVAR____TtC15ConversationKit16CallAgainHUDView_videoMessageButton));
    OUTLINED_FUNCTION_38_45();
    v21 = *(_QWORD *)((char *)v17 + OBJC_IVAR____TtC15ConversationKit16CallAgainHUDView_showCallDetailsButton);
    v20 = sel_addSubview_;
    v22 = v17;
  }
  objc_msgSend(v22, v20, v21);
  v23 = OBJC_IVAR____TtC15ConversationKit16CallAgainHUDView_avatarStack;
  OUTLINED_FUNCTION_38_45();
  v24 = *(_QWORD *)((char *)v17 + OBJC_IVAR____TtC15ConversationKit16CallAgainHUDView_primaryLabel);
  OUTLINED_FUNCTION_53_0(*(id *)((char *)v17 + v23), sel_addArrangedSubview_);
  objc_msgSend(*(id *)((char *)v17 + v23), sel_addArrangedSubview_, *(_QWORD *)((char *)v17 + OBJC_IVAR____TtC15ConversationKit16CallAgainHUDView_callTypeLabel));
  v25 = objc_msgSend(*(id *)((char *)v17 + v23), sel_setCustomSpacing_afterView_, v24, 2.0);
  (*(void (**)(id))((*MEMORY[0x1E0DEEDD8] & *v17) + 0x170))(v25);
  objc_opt_self();
  v26 = v17;
  v27 = OUTLINED_FUNCTION_9((uint64_t)v26, sel_clearColor);
  OUTLINED_FUNCTION_53_0(v26, sel_setBackgroundColor_);

  v28 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  objc_msgSend(v28, sel_addObserver_selector_name_object_, v26, sel_handleContentSizeCategoryDidChange_, *MEMORY[0x1E0DC48E8], 0);

  OUTLINED_FUNCTION_10_12();
  return v26;
}

uint64_t type metadata accessor for CallAgainHUDView()
{
  uint64_t result;

  result = type metadata singleton initialization cache for CallAgainHUDView;
  if (!type metadata singleton initialization cache for CallAgainHUDView)
    return swift_getSingletonMetadata();
  return result;
}

void CallAgainHUDView.updateFromRecipe(_:)(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  unint64_t v4;
  char *v5;
  BOOL v6;
  char *v7;
  char *v8;
  void *v9;
  id v10;
  Swift::String v11;
  Swift::String_optional v12;
  Swift::String v13;
  Swift::String v14;
  Swift::String v15;

  CallAgainHUDView.updateAvatar()();
  v3 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit16CallAgainHUDView_primaryLabel);
  v4 = *(_QWORD *)(a1 + 88);
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = (char *)_CocoaArrayWrapper.endIndex.getter();
    if (!v5)
      goto LABEL_7;
LABEL_3:
    v6 = __OFSUB__(v5, 1);
    v7 = v5 - 1;
    if (v6)
    {
      __break(1u);
    }
    else
    {
      specialized Array._checkSubscript(_:wasNativeTypeChecked:)(v7, (v4 & 0xC000000000000001) == 0, v4);
      if ((v4 & 0xC000000000000001) == 0)
      {
        v8 = (char *)*(id *)(v4 + 8 * (_QWORD)v7 + 32);
LABEL_6:
        v5 = v8;
        goto LABEL_7;
      }
    }
    v8 = (char *)MEMORY[0x1C3B73D18](v7, v4);
    goto LABEL_6;
  }
  v5 = *(char **)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v5)
    goto LABEL_3;
LABEL_7:
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setAttributedText_, v5);

  v9 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit16CallAgainHUDView_callTypeLabel);
  v10 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v15._object = (void *)0xE000000000000000;
  v11._countAndFlagsBits = 0x454D495445434146;
  v11._object = (void *)0xEE004F454449565FLL;
  v12.value._countAndFlagsBits = 0x61737265766E6F43;
  v12.value._object = (void *)0xEF74694B6E6F6974;
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  v15._countAndFlagsBits = 0;
  v14 = NSLocalizedString(_:tableName:bundle:value:comment:)(v11, v12, (NSBundle)v10, v13, v15);

  outlined bridged method (mbnn) of @objc UILabel.text.setter(v14._countAndFlagsBits, (uint64_t)v14._object, v9);
}

void CallAgainHUDView.updateAvatar()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  id *v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  id *v7;
  void (*v8)(__n128);
  id v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  uint64_t v14;

  v1 = type metadata accessor for ConversationControlsRecipe();
  MEMORY[0x1E0C80A78](v1);
  v3 = (id *)((char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (id *)((char *)&v14 - v6);
  v8 = *(void (**)(__n128))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0);
  v8(v5);
  if (v7[7])
  {
    v9 = v7[7];
    outlined destroy of ConversationControlsRecipe((uint64_t)v7);
    objc_msgSend(v9, sel_removeFromSuperview);

  }
  else
  {
    v10 = outlined destroy of ConversationControlsRecipe((uint64_t)v7);
  }
  ((void (*)(uint64_t))v8)(v10);
  if (v3[7])
  {
    v11 = v3[7];
    v12 = OUTLINED_FUNCTION_10_12();
    v13 = OUTLINED_FUNCTION_9(v12, sel_layer);
    objc_msgSend(v13, sel_setAllowsHitTesting_, 0);

    objc_msgSend(v11, sel_setUserInteractionEnabled_, 0);
    objc_msgSend(*(id *)((char *)v0 + OBJC_IVAR____TtC15ConversationKit16CallAgainHUDView_avatarStack), sel_insertArrangedSubview_atIndex_, v11, 0);
    swift_unknownObjectWeakAssign();

  }
  else
  {
    OUTLINED_FUNCTION_10_12();
  }
}

uint64_t CallAgainHUDView.__allocating_init(coder:)()
{
  uint64_t v0;
  uint64_t v1;

  objc_msgSend(OUTLINED_FUNCTION_16_1(), sel_initWithCoder_, v0);
  OUTLINED_FUNCTION_49_5();
  return v1;
}

void CallAgainHUDView.init(coder:)()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit16CallAgainHUDView_bottomButtonConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit16CallAgainHUDView_avatarBottomConstraint] = 0;
  OUTLINED_FUNCTION_18_35();
  v2 = OBJC_IVAR____TtC15ConversationKit16CallAgainHUDView_primaryLabel;
  *(_QWORD *)&v0[v2] = closure #1 in variable initialization expression of CallAgainHUDView.primaryLabel();
  v3 = OBJC_IVAR____TtC15ConversationKit16CallAgainHUDView_callTypeLabel;
  *(_QWORD *)&v0[v3] = closure #1 in variable initialization expression of CallAgainHUDView.callTypeLabel();
  v4 = OBJC_IVAR____TtC15ConversationKit16CallAgainHUDView_avatarStack;
  closure #1 in variable initialization expression of CallAgainHUDView.avatarStack(objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3CA8]), sel_init));
  OUTLINED_FUNCTION_123_0();
  *(_QWORD *)&v0[v4] = v1;
  v5 = OBJC_IVAR____TtC15ConversationKit16CallAgainHUDView_videoMessageStackView;
  closure #1 in variable initialization expression of CallAgainHUDView.videoMessageStackView(objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3CA8]), sel_init));
  OUTLINED_FUNCTION_123_0();
  *(_QWORD *)&v0[v5] = v1;
  v6 = OBJC_IVAR____TtC15ConversationKit16CallAgainHUDView_callBackButton;
  *(_QWORD *)&v0[v6] = closure #1 in variable initialization expression of CallAgainHUDView.callBackButton();
  v7 = OBJC_IVAR____TtC15ConversationKit16CallAgainHUDView_closeButton;
  *(_QWORD *)&v0[v7] = closure #1 in variable initialization expression of CallAgainHUDView.closeButton();
  v8 = OBJC_IVAR____TtC15ConversationKit16CallAgainHUDView_videoMessageButton;
  *(_QWORD *)&v0[v8] = closure #1 in variable initialization expression of CallAgainHUDView.videoMessageButton();
  v9 = OBJC_IVAR____TtC15ConversationKit16CallAgainHUDView_effectsView;
  *(_QWORD *)&v0[v9] = closure #1 in LocalParticipantView.overlayBlurView.getter();
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit16CallAgainHUDView_avatarStackVerticalSpacingDivisor] = 0x3FCCAC083126E979;
  v10 = OBJC_IVAR____TtC15ConversationKit16CallAgainHUDView_showCallDetailsButton;
  *(_QWORD *)&v0[v10] = closure #1 in variable initialization expression of CallAgainHUDView.showCallDetailsButton();

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Void __swiftcall CallAgainHUDView.constrainViews()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  id v12;
  char v13;
  uint64_t *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  id v40;

  v2 = v1;
  Layout.LocalParticipantViewCameraControls.init()();
  static Platform.current.getter();
  v3 = MEMORY[0x1E0DEE9D8];
  v4 = (void *)MEMORY[0x1C3B752C0](v2 + OBJC_IVAR____TtC15ConversationKit16CallAgainHUDView_avatarView);
  if (v4)
  {
    v5 = objc_msgSend(v4, sel_widthAnchor);
    v6 = objc_msgSend(v5, sel_constraintEqualToConstant_, 160.0);

    v8 = OUTLINED_FUNCTION_123(v7, sel_heightAnchor);
    v9 = OUTLINED_FUNCTION_123((uint64_t)v8, sel_widthAnchor);
    v10 = objc_msgSend(v8, sel_constraintEqualToAnchor_, v9);

    if (v3 >> 62)
    {
      OUTLINED_FUNCTION_5_0();
      v11 = _CocoaArrayWrapper.endIndex.getter();
      OUTLINED_FUNCTION_27();
    }
    else
    {
      v11 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    if (!__OFADD__(v11, 2))
    {
      OUTLINED_FUNCTION_8_88(v11 + 2);
      OUTLINED_FUNCTION_45_1();
      v12 = v6;
      OUTLINED_FUNCTION_44_36();
    }
    __break(1u);
    JUMPOUT(0x1BD354778);
  }
  v13 = static Platform.current.getter();
  v14 = &OBJC_IVAR____TtC15ConversationKit16CallAgainHUDView_closeButton;
  if (v13 == 3)
    v14 = &OBJC_IVAR____TtC15ConversationKit16CallAgainHUDView_videoMessageStackView;
  v15 = *(id *)(v2 + *v14);
  v16 = OUTLINED_FUNCTION_9((uint64_t)v15, sel_bottomAnchor);
  v17 = objc_msgSend(v15, sel_bottomAnchor);
  v18 = objc_msgSend(v16, sel_constraintEqualToAnchor_, v17);
  OUTLINED_FUNCTION_37_0();

  v19 = objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC15ConversationKit16CallAgainHUDView_videoMessageStackView), sel_topAnchor);
  v20 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v2
                                                              + OBJC_IVAR____TtC15ConversationKit16CallAgainHUDView_avatarStack), sel_bottomAnchor));
  v21 = OUTLINED_FUNCTION_13_1((uint64_t)v20, sel_constraintEqualToAnchor_);

  v0;
  CallAgainHUDView.bottomButtonConstraint.setter((uint64_t)v0);
  v21;
  CallAgainHUDView.avatarBottomConstraint.setter((uint64_t)v21);
  v23 = OUTLINED_FUNCTION_25_1(v22, sel_topAnchor);
  v24 = OUTLINED_FUNCTION_9((uint64_t)v23, sel_topAnchor);
  v25 = objc_msgSend(v23, sel_constraintEqualToAnchor_, v24);

  v27 = OUTLINED_FUNCTION_25_1(v26, sel_bottomAnchor);
  v28 = OUTLINED_FUNCTION_9((uint64_t)v27, sel_bottomAnchor);
  v29 = objc_msgSend(v27, (SEL)&selRef_attemptToPlaySoundType_forCall_ + 6, v28);

  v31 = OUTLINED_FUNCTION_25_1(v30, sel_trailingAnchor);
  v32 = OUTLINED_FUNCTION_9((uint64_t)v31, sel_trailingAnchor);
  v33 = objc_msgSend(v31, (SEL)&selRef_attemptToPlaySoundType_forCall_ + 6, v32);

  v35 = (uint64_t)OUTLINED_FUNCTION_25_1(v34, sel_leadingAnchor);
  v36 = OUTLINED_FUNCTION_9(v35, sel_leadingAnchor);
  v37 = OUTLINED_FUNCTION_13_1((uint64_t)v36, (const char *)&selRef_attemptToPlaySoundType_forCall_ + 6);

  OUTLINED_FUNCTION_34_34();
  if (v38)
  {
    OUTLINED_FUNCTION_5_0();
    v39 = _CocoaArrayWrapper.endIndex.getter();
    OUTLINED_FUNCTION_27();
  }
  else
  {
    v39 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (!__OFADD__(v39, 4))
  {
    OUTLINED_FUNCTION_8_88(v39 + 4);
    OUTLINED_FUNCTION_45_1();
    v40 = v25;
    OUTLINED_FUNCTION_44_36();
  }
  __break(1u);
  JUMPOUT(0x1BD3546BCLL);
}

Swift::Void __swiftcall CallAgainHUDView.layoutSubviews()()
{
  void *v0;
  char *v1;
  void *v2;
  id v3;
  double v4;
  double v5;
  double v6;
  void *v7;
  id v8;
  double v9;
  objc_super v10;

  v10.receiver = v1;
  v10.super_class = (Class)ObjC metadata update function for CallAgainHUDView();
  objc_msgSendSuper2(&v10, sel_layoutSubviews);
  v2 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKit16CallAgainHUDView_bottomButtonConstraint];
  if (v2)
  {
    v3 = v2;
    OUTLINED_FUNCTION_27_46();
    v5 = v4;
    v6 = CallAgainHUDView.buttonBottomPaddingDivisor.getter();
    OUTLINED_FUNCTION_15_76(v5 - v5 * (1.0 - v6));

  }
  v7 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKit16CallAgainHUDView_avatarBottomConstraint];
  if (v7)
  {
    v8 = v7;
    OUTLINED_FUNCTION_27_46();
    OUTLINED_FUNCTION_15_76(v9- v9 * (1.0 - *(double *)&v1[OBJC_IVAR____TtC15ConversationKit16CallAgainHUDView_avatarStackVerticalSpacingDivisor]));

  }
}

id CallAgainHUDView.handleContentSizeCategoryDidChange(_:)(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  id v3;
  char v4;

  v3 = objc_msgSend(OUTLINED_FUNCTION_25_1(a1, sel_traitCollection), sel_preferredContentSizeCategory);
  OUTLINED_FUNCTION_123_0();
  v4 = UIContentSizeCategory.isAccessibilityCategory.getter();

  return objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC15ConversationKit16CallAgainHUDView_videoMessageStackView), sel_setAxis_, v4 & 1);
}

id CallAgainHUDView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void CallAgainHUDView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id CallAgainHUDView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)ObjC metadata update function for CallAgainHUDView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BD354C08(_QWORD **a1)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0xC0))();
}

uint64_t type metadata completion function for CallAgainHUDView()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ConversationControlsRecipe();
  if (v1 <= 0x3F)
    return swift_updateClassMetadata2();
  return result;
}

uint64_t method lookup function for CallAgainHUDView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CallAgainHUDView.recipe.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of CallAgainHUDView.recipe.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of CallAgainHUDView.recipe.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of CallAgainHUDView.__allocating_init(recipe:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 344))();
}

uint64_t dispatch thunk of CallAgainHUDView.constrainViews()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x170))();
}

ValueMetadata *type metadata accessor for CallAgainHUDView.Constants()
{
  return &type metadata for CallAgainHUDView.Constants;
}

uint64_t sub_1BD354D88()
{
  return 8;
}

uint64_t sub_1BD354D94()
{
  return swift_release();
}

uint64_t sub_1BD354D9C(_QWORD *a1, _QWORD *a2)
{
  *a2 = *a1;
  return swift_retain();
}

_QWORD *sub_1BD354DB0(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t PeoplePickerCallCreator.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  objc_class *v4;
  _QWORD v6[5];

  v1 = v0;
  v2 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  if (one-time initialization token for shared != -1)
    swift_once();
  v3 = (void *)static PlaceholderCallCenter.shared;
  v4 = (objc_class *)type metadata accessor for CallCenter();
  objc_allocWithZone(v4);
  v6[3] = v4;
  v6[4] = &protocol witness table for CallCenter;
  v6[0] = CallCenter.init(callCenter:placeholderCallCenter:shouldRegisterForMediaControllerChanges:shouldRegisterForReactionsControllerChanges:)(v2, v3, 0, 0);
  return (*(uint64_t (**)(_QWORD *))(v1 + 120))(v6);
}

uint64_t thunk for @escaping @callee_guaranteed (@guaranteed TUFilteredRequest) -> ()(_QWORD *a1, uint64_t (*a2)(_QWORD))
{
  return a2(*a1);
}

void thunk for @escaping @callee_guaranteed (@in_guaranteed TUFilteredRequest) -> (@out ())(uint64_t a1, void (*a2)(uint64_t *))
{
  uint64_t v2;

  v2 = a1;
  a2(&v2);
  OUTLINED_FUNCTION_36();
}

uint64_t key path getter for PeoplePickerCallCreator.presentScreenTimeShield : PeoplePickerCallCreator@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD *);

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 96))();
  if (result)
  {
    v5 = result;
    v6 = v4;
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = v5;
    *(_QWORD *)(result + 24) = v6;
    v7 = partial apply for thunk for @escaping @callee_guaranteed (@guaranteed CNComposeRecipient) -> ();
  }
  else
  {
    v7 = 0;
  }
  *a2 = v7;
  a2[1] = result;
  return result;
}

uint64_t key path setter for PeoplePickerCallCreator.presentScreenTimeShield : PeoplePickerCallCreator(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t);
  uint64_t (*v7)(void (*)(uint64_t), uint64_t);

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed UITapGestureRecognizer) -> (@out ());
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *(uint64_t (**)(void (*)(uint64_t), uint64_t))(**(_QWORD **)a2 + 104);
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return v7(v6, v5);
}

uint64_t PeoplePickerCallCreator.presentScreenTimeShield.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_2_0();
  v0 = OUTLINED_FUNCTION_50();
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v0);
  return OUTLINED_FUNCTION_50();
}

uint64_t PeoplePickerCallCreator.presentScreenTimeShield.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  OUTLINED_FUNCTION_2_0();
  v5 = *(_QWORD *)(v2 + 16);
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v5);
}

uint64_t (*PeoplePickerCallCreator.presentScreenTimeShield.modify())()
{
  OUTLINED_FUNCTION_2_0();
  return CallRecordingPillViewController.cancellable.modify;
}

uint64_t PeoplePickerCallCreator.__allocating_init(callCenter:)(__int128 *a1)
{
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v2 + 16) = 0;
  *(_QWORD *)(v2 + 24) = 0;
  outlined init with take of Notice(a1, v2 + 32);
  return v2;
}

uint64_t PeoplePickerCallCreator.init(callCenter:)(__int128 *a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = 0;
  outlined init with take of Notice(a1, v1 + 32);
  return v1;
}

void PeoplePickerCallCreator.invitePeople(_:withVideo:senderIdentity:activity:messagesGroup:)(unint64_t a1, int a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  char v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  Class isa;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  _QWORD *v56;
  void *v57;
  id v58;
  id v59;
  id v60;
  uint64_t v61;
  void (*v62)(void);
  id v63;
  id v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  void *v70;
  _QWORD *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  uint64_t v76;
  unint64_t v77;
  __int128 v78;
  uint64_t v79;
  unint64_t v80;

  v74 = a5;
  v75 = a3;
  HIDWORD(v76) = a2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MessagesGroup?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v73 = (uint64_t)&v68 - v13;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_6_0();
  if (a1 >> 62)
  {
    OUTLINED_FUNCTION_33_1();
    v15 = OUTLINED_FUNCTION_188();
    OUTLINED_FUNCTION_54_1();
  }
  else
  {
    v15 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v15 >= 1)
  {
    v69 = v6;
    v70 = (void *)a4;
    v71 = (_QWORD *)v5;
    v72 = v11;
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    v16 = MEMORY[0x1E0DEE9D8];
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v17 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v17 + 16) = xmmword_1BD646740;
    v80 = a1;
    OUTLINED_FUNCTION_33_1();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [PickablePerson]);
    v18 = String.init<A>(reflecting:)();
    v20 = v19;
    v21 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v17 + 56) = MEMORY[0x1E0DEA968];
    v22 = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v17 + 64) = v22;
    *(_QWORD *)(v17 + 32) = v18;
    *(_QWORD *)(v17 + 40) = v20;
    LOBYTE(v80) = BYTE4(v76) & 1;
    v23 = String.init<A>(reflecting:)();
    *(_QWORD *)(v17 + 96) = v21;
    *(_QWORD *)(v17 + 104) = v22;
    *(_QWORD *)(v17 + 72) = v23;
    *(_QWORD *)(v17 + 80) = v24;
    if (v75)
    {
      v80 = (unint64_t)v75;
      v25 = v75;
      _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUSenderIdentity);
      v26 = v25;
      v27 = String.init<A>(reflecting:)();
    }
    else
    {
      v28 = 0xE300000000000000;
      v27 = 7104878;
    }
    *(_QWORD *)(v17 + 136) = v21;
    *(_QWORD *)(v17 + 144) = v22;
    *(_QWORD *)(v17 + 112) = v27;
    *(_QWORD *)(v17 + 120) = v28;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    OUTLINED_FUNCTION_27();
    v80 = v16;
    if (a1 >> 62)
    {
      OUTLINED_FUNCTION_33_1();
      v29 = OUTLINED_FUNCTION_188();
      if (v29)
        goto LABEL_14;
    }
    else
    {
      v29 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      OUTLINED_FUNCTION_33_1();
      if (v29)
      {
LABEL_14:
        v79 = objc_opt_self();
        if (v29 >= 1)
        {
          v78 = xmmword_1BD6443F0;
          v77 = a1;
          if ((a1 & 0xC000000000000001) != 0)
            MEMORY[0x1C3B73D18](0, a1);
          else
            OUTLINED_FUNCTION_5_6(a1);
          OUTLINED_FUNCTION_7_99();
        }
        __break(1u);
        return;
      }
    }
    OUTLINED_FUNCTION_54_1();
    v30 = MEMORY[0x1E0DEE9D8];
    _sSo8NSObjectCMaTm_0(0, &lazy cache variable for type metadata for TUJoinConversationRequest);
    v31 = OUTLINED_FUNCTION_124();
    specialized Set.init<A>(_:)(v31, v32, v33, v34, v35, v36, v37, v38, v68, v69, (uint64_t)v70, (uint64_t)v71, (uint64_t)v72, v73, v74, (uint64_t)v75, v76, v77, v78,
      *((uint64_t *)&v78 + 1));
    v39 = TUJoinConversationRequest.__allocating_init(remoteMembers:)();
    objc_msgSend(v39, sel_setVideoEnabled_, BYTE4(v76) & 1);
    if (v30 >> 62)
    {
      OUTLINED_FUNCTION_17_20();
      v40 = OUTLINED_FUNCTION_25_3();
      OUTLINED_FUNCTION_13_3();
    }
    else
    {
      v40 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    OUTLINED_FUNCTION_13_3();
    if (v40 == 1)
    {
      v41 = BYTE4(v76);
      objc_msgSend(v39, sel_setVideo_, BYTE4(v76) & 1);
      if ((v41 & 1) == 0)
      {
        v42 = objc_msgSend((id)objc_opt_self(), sel_expanseProvider);
        OUTLINED_FUNCTION_2_105((uint64_t)v42, sel_setProvider_);

      }
    }
    v43 = objc_msgSend(v75, sel_handle);
    OUTLINED_FUNCTION_2_105((uint64_t)v43, sel_setCallerID_);

    v44 = v73;
    if (one-time initialization token for startMultiwayCall != -1)
      swift_once();
    v45 = OUTLINED_FUNCTION_124();
    outlined bridged method (mbgnn) of @objc TUJoinConversationRequest.invitationPreferences.setter(v45, v39);
    OUTLINED_FUNCTION_13_3();
    objc_msgSend(v39, sel_setWantsStagingArea_, 0);
    outlined init with copy of MessagesGroup?(v74, v44);
    v46 = type metadata accessor for MessagesGroup();
    if (__swift_getEnumTagSinglePayload(v44, 1, v46) == 1)
    {
      outlined destroy of MessagesGroup?(v44);
      v47 = OUTLINED_FUNCTION_33_0();
      __swift_storeEnumTagSinglePayload(v69, 1, 1, v47);
      isa = 0;
    }
    else
    {
      v49 = OUTLINED_FUNCTION_33_0();
      v50 = *(_QWORD *)(v49 - 8);
      v51 = v69;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 16))(v69, v44, v49);
      outlined destroy of MessagesGroup(v44);
      __swift_storeEnumTagSinglePayload(v51, 0, 1, v49);
      isa = 0;
      if (__swift_getEnumTagSinglePayload(v51, 1, v49) != 1)
      {
        isa = UUID._bridgeToObjectiveC()().super.isa;
        (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v51, v49);
      }
    }
    objc_msgSend(v39, sel_setMessagesGroupUUID_, isa);

    v52 = (uint64_t)v72;
    outlined init with copy of MessagesGroup?(v74, (uint64_t)v72);
    if (__swift_getEnumTagSinglePayload(v52, 1, v46) == 1)
    {
      v53 = outlined destroy of MessagesGroup?(v52);
      v54 = 0;
    }
    else
    {
      OUTLINED_FUNCTION_5_0();
      outlined destroy of MessagesGroup(v52);
      v55 = OUTLINED_FUNCTION_50();
      v54 = (void *)MEMORY[0x1C3B72E00](v55);
      v53 = OUTLINED_FUNCTION_27();
    }
    v57 = v70;
    v56 = v71;
    OUTLINED_FUNCTION_2_105(v53, sel_setMessagesGroupName_);

    v58 = objc_msgSend(v39, sel_setOriginatingUIType_, 21);
    if (v57)
    {
      v59 = v57;
      OUTLINED_FUNCTION_2_105((uint64_t)v59, sel_setActivity_);
      v60 = objc_msgSend((id)objc_opt_self(), sel_expanseProvider);
      objc_msgSend(v39, sel_setProvider_, v60);

      OUTLINED_FUNCTION_40_3(v39, sel_setShouldLaunchBackgroundInCallUI_);
    }
    v61 = (*(uint64_t (**)(id))(*v56 + 96))(v58);
    if (v61)
    {
      v62 = (void (*)(void))v61;
      v63 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
      v64 = objc_msgSend(v63, sel_callFilterController);

      LODWORD(v63) = OUTLINED_FUNCTION_18_71(v64, sel_shouldRestrictJoinConversationRequest_performSynchronously_, (uint64_t)v39);
      if ((_DWORD)v63)
      {
        v65 = v39;
        v62();

        OUTLINED_FUNCTION_27_47();
LABEL_41:
        OUTLINED_FUNCTION_52_1();
        return;
      }
      OUTLINED_FUNCTION_27_47();
    }
    v66 = v56[7];
    v67 = v56[8];
    __swift_project_boxed_opaque_existential_1(v56 + 4, v66);
    (*(void (**)(id, uint64_t, uint64_t))(v67 + 224))(v39, v66, v67);

    goto LABEL_41;
  }
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  static os_log_type_t.error.getter();
  os_log(_:dso:log:type:_:)();
}

id TUJoinConversationRequest.__allocating_init(remoteMembers:)()
{
  id v0;
  Class isa;
  id v2;

  v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
  _sSo8TUHandleCSo8NSObjectCSH10ObjectiveCWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type TUConversationMember and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
  isa = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithRemoteMembers_, isa);

  return v2;
}

void PeoplePickerCallCreator.dialCall(provider:video:contact:handle:senderIdentity:ttyType:)(void *a1, char a2, void *a3, void *a4, void *a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  uint64_t EnumTagSinglePayload;
  NSUUID v29;
  uint64_t v30;
  void (*v31)(void);
  id v32;
  id v33;
  id v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(void);
  id v39;
  id v40;
  uint64_t v41;

  v8 = v6;
  v40 = a5;
  v41 = a6;
  v13 = OUTLINED_FUNCTION_33_0();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_6_0();
  v18 = PeoplePickerCallCreator.handleForDialRequest(withProvider:handle:contact:)(a1, a4, a3);
  if (v18)
  {
    v19 = v18;
    v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DBD2E0]), sel_initWithProvider_, a1);
    v21 = objc_msgSend(v20, sel_setVideo_, a2 & 1);
    if (a3)
    {
      v22 = objc_msgSend(a3, sel_identifier);
      v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v25 = v24;

      v26 = (void *)MEMORY[0x1C3B72E00](v23, v25);
      v21 = (id)swift_bridgeObjectRelease();
    }
    else
    {
      v26 = 0;
    }
    OUTLINED_FUNCTION_137((uint64_t)v21, sel_setContactIdentifier_);

    objc_msgSend(v20, sel_setHandle_, v19);
    if (v40)
    {
      v27 = objc_msgSend(v40, sel_UUID);
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v7, v16, v13);
      OUTLINED_FUNCTION_83_7(v7, 0);
      EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v7, 1, v13);
      if ((_DWORD)EnumTagSinglePayload != 1)
      {
        v29.super.isa = UUID._bridgeToObjectiveC()().super.isa;
        EnumTagSinglePayload = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v7, v13);
        goto LABEL_10;
      }
    }
    else
    {
      EnumTagSinglePayload = OUTLINED_FUNCTION_83_7(v7, 1);
    }
    v29.super.isa = 0;
LABEL_10:
    OUTLINED_FUNCTION_137(EnumTagSinglePayload, sel_setLocalSenderIdentityUUID_);

    v30 = (*(uint64_t (**)(id))(*v8 + 96))(objc_msgSend(v20, sel_setTtyType_, v41));
    if (v30)
    {
      v31 = (void (*)(void))v30;
      v32 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
      v33 = objc_msgSend(v32, sel_callFilterController);

      LODWORD(v32) = OUTLINED_FUNCTION_18_71(v33, sel_shouldRestrictDialRequest_performSynchronously_, (uint64_t)v20);
      if ((_DWORD)v32)
      {
        v34 = v20;
        v31();

        OUTLINED_FUNCTION_11_14((uint64_t)v31);
        goto LABEL_15;
      }
      OUTLINED_FUNCTION_11_14((uint64_t)v31);
    }
    v35 = v8 + 4;
    v37 = v8[7];
    v36 = v8[8];
    __swift_project_boxed_opaque_existential_1(v35, v37);
    *(_QWORD *)(OUTLINED_FUNCTION_15() + 16) = v20;
    v38 = *(void (**)(void))(v36 + 232);
    v39 = v20;
    v38();

    swift_release();
  }
LABEL_15:
  OUTLINED_FUNCTION_52_1();
}

id PeoplePickerCallCreator.handleForDialRequest(withProvider:handle:contact:)(void *a1, id a2, void *a3)
{
  id v5;
  id v6;
  unint64_t v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  id v24;
  uint64_t v25;
  unint64_t v26;

  if (!objc_msgSend(a1, sel_isTelephonyProvider) || objc_msgSend(a2, sel_type) == (id)2)
  {
    v5 = a2;
    return a2;
  }
  if (!a3)
    goto LABEL_18;
  v6 = objc_msgSend(a3, sel_phoneNumbers);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for CNLabeledValue);
  v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v7 >> 62))
  {
    if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_7;
LABEL_17:
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  swift_bridgeObjectRetain();
  v16 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v16)
    goto LABEL_17;
LABEL_7:
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v7 & 0xC000000000000001) == 0, v7);
  if ((v7 & 0xC000000000000001) != 0)
    v8 = (id)MEMORY[0x1C3B73D18](0, v7);
  else
    v8 = *(id *)(v7 + 32);
  v9 = v8;
  swift_bridgeObjectRelease();
  v10 = objc_msgSend(v9, sel_value);

  if (v10)
  {
    v11 = objc_msgSend(v10, sel_stringValue);
    if (!v11)
    {
      v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v11 = (id)MEMORY[0x1C3B72E00](v12);
      swift_bridgeObjectRelease();
    }
    v13 = outlined bridged method (pb) of @objc CNPhoneNumber.countryCode.getter(v10);
    if (v14)
    {
      v15 = (void *)MEMORY[0x1C3B72E00](v13);
      swift_bridgeObjectRelease();
    }
    else
    {
      v15 = 0;
    }
    a2 = objc_msgSend((id)objc_opt_self(), sel_normalizedPhoneNumberHandleForValue_isoCountryCode_, v11, v15);

    return a2;
  }
LABEL_18:
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  static os_log_type_t.error.getter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1BD645380;
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
  v18 = a2;
  v19 = String.init<A>(reflecting:)();
  v21 = v20;
  v22 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v17 + 56) = MEMORY[0x1E0DEA968];
  v23 = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v17 + 64) = v23;
  *(_QWORD *)(v17 + 32) = v19;
  *(_QWORD *)(v17 + 40) = v21;
  if (a3)
  {
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for CNContact);
    v24 = a3;
    v25 = String.init<A>(reflecting:)();
  }
  else
  {
    v26 = 0xE300000000000000;
    v25 = 7104878;
  }
  *(_QWORD *)(v17 + 96) = v22;
  *(_QWORD *)(v17 + 104) = v23;
  *(_QWORD *)(v17 + 72) = v25;
  *(_QWORD *)(v17 + 80) = v26;
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t closure #1 in PeoplePickerCallCreator.dialCall(provider:video:contact:handle:senderIdentity:ttyType:)(uint64_t result, void *a2)
{
  void *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;

  if (result)
  {
    v3 = (void *)result;
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_1BD645380;
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUDialRequest);
    v5 = a2;
    v6 = String.init<A>(reflecting:)();
    v8 = v7;
    v9 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v4 + 56) = MEMORY[0x1E0DEA968];
    v10 = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v4 + 64) = v10;
    *(_QWORD *)(v4 + 32) = v6;
    *(_QWORD *)(v4 + 40) = v8;
    v11 = v3;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
    v12 = String.init<A>(reflecting:)();
    *(_QWORD *)(v4 + 96) = v9;
    *(_QWORD *)(v4 + 104) = v10;
    *(_QWORD *)(v4 + 72) = v12;
    *(_QWORD *)(v4 + 80) = v13;
    os_log(_:dso:log:type:_:)();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void PeoplePickerCallCreator.createCallWithLink(_:facetimeUnavailablePeople:facetimeAvailablePeople:shouldAddOtherInvitedToRemoteMembers:activity:)(void *a1, unint64_t a2, unint64_t a3, int a4)
{
  _QWORD *v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(void);
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v6 = v4;
  HIDWORD(v37) = a4;
  if (a2 >> 62)
  {
    OUTLINED_FUNCTION_17_20();
    v9 = OUTLINED_FUNCTION_25_3();
  }
  else
  {
    v9 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    OUTLINED_FUNCTION_124();
  }
  if (v9)
  {
    objc_opt_self();
    if (v9 >= 1)
    {
      if ((a2 & 0xC000000000000001) != 0)
        MEMORY[0x1C3B73D18](0, a2);
      else
        OUTLINED_FUNCTION_5_6(a2);
      OUTLINED_FUNCTION_7_99();
    }
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  OUTLINED_FUNCTION_13_3();
  v5 = MEMORY[0x1E0DEE9D8];
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v10 = OUTLINED_FUNCTION_188();
    if (v10)
    {
LABEL_11:
      v42 = (id)objc_opt_self();
      if (v10 >= 1)
      {
        if ((a3 & 0xC000000000000001) != 0)
          MEMORY[0x1C3B73D18](0, a3);
        else
          OUTLINED_FUNCTION_5_6(a3);
        OUTLINED_FUNCTION_7_99();
      }
      goto LABEL_25;
    }
  }
  else
  {
    v10 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v10)
      goto LABEL_11;
  }
  swift_bridgeObjectRelease();
  if ((v37 & 0x100000000) == 0)
    goto LABEL_28;
  if (v5 >> 62)
  {
LABEL_26:
    OUTLINED_FUNCTION_33_1();
    if (!OUTLINED_FUNCTION_25_3())
      goto LABEL_27;
LABEL_21:
    specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v5 & 0xC000000000000001) == 0, v5);
    if ((v5 & 0xC000000000000001) != 0)
      v12 = (id)MEMORY[0x1C3B73D18](0, v5);
    else
      v12 = *(id *)(v5 + 32);
    v13 = v12;
    OUTLINED_FUNCTION_54_1();
    v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DBD2A0]), sel_initWithHandle_, v13);
    OUTLINED_FUNCTION_40_3(v14, sel_setIsOtherInvitedHandle_);
    v15 = v14;
    OUTLINED_FUNCTION_26_48();
  }
  v11 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  OUTLINED_FUNCTION_33_1();
  if (v11)
    goto LABEL_21;
LABEL_27:
  OUTLINED_FUNCTION_13_3();
LABEL_28:
  OUTLINED_FUNCTION_13_3();
  v16 = a1;
  OUTLINED_FUNCTION_20_66((uint64_t)v16, v17, v18, v19, v20, v21, v22, v23, v36, v37, (uint64_t)a1, (uint64_t)v6, v39, v40, v41, a3, (uint64_t)v42, v43, v44,
    v45);
  v24 = objc_allocWithZone(MEMORY[0x1E0DBD308]);
  v25 = (void *)OUTLINED_FUNCTION_50();
  v27 = @nonobjc TUJoinConversationRequest.init(conversationLink:otherInvitedHandles:sendLetMeInRequest:)(v25, v26, 0);
  if (one-time initialization token for inviteWithMessages != -1)
    swift_once();
  v28 = OUTLINED_FUNCTION_5_0();
  outlined bridged method (mbgnn) of @objc TUJoinConversationRequest.invitationPreferences.setter(v28, v27);
  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_40_3(v27, sel_setVideoEnabled_);
  v29 = (*(uint64_t (**)(id))(*v6 + 96))(objc_msgSend(v27, sel_setWantsStagingArea_, 0));
  if (!v29)
    goto LABEL_34;
  v30 = (void (*)(void))v29;
  v31 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v32 = objc_msgSend(v31, sel_callFilterController);

  LODWORD(v31) = OUTLINED_FUNCTION_18_71(v32, sel_shouldRestrictJoinConversationRequest_performSynchronously_, (uint64_t)v27);
  if (!(_DWORD)v31)
  {
    OUTLINED_FUNCTION_11_14((uint64_t)v30);
LABEL_34:
    v34 = v6[7];
    v35 = v6[8];
    __swift_project_boxed_opaque_existential_1(v6 + 4, v34);
    (*(void (**)(id, uint64_t, uint64_t))(v35 + 224))(v27, v34, v35);
    goto LABEL_35;
  }
  v33 = v27;
  v30();

  OUTLINED_FUNCTION_11_14((uint64_t)v30);
LABEL_35:

}

uint64_t PeoplePickerCallCreator.deinit()
{
  uint64_t v0;

  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(*(_QWORD *)(v0 + 16));
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  return v0;
}

uint64_t PeoplePickerCallCreator.__deallocating_deinit()
{
  uint64_t v0;

  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(*(_QWORD *)(v0 + 16));
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  return swift_deallocClassInstance();
}

id @nonobjc TUJoinConversationRequest.init(conversationLink:otherInvitedHandles:sendLetMeInRequest:)(void *a1, uint64_t a2, char a3)
{
  void *v3;
  Class isa;
  id v7;

  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
  _sSo8TUHandleCSo8NSObjectCSH10ObjectiveCWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type TUHandle and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
  isa = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v3, sel_initWithConversationLink_otherInvitedHandles_sendLetMeInRequest_, a1, isa, a3 & 1);

  return v7;
}

id @nonobjc TUJoinConversationRequest.init(conversationLink:otherInvitedHandles:remoteMembers:sendLetMeInRequest:)(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  void *v4;
  Class isa;
  Class v8;
  id v9;

  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
  _sSo8TUHandleCSo8NSObjectCSH10ObjectiveCWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type TUHandle and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
  isa = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
  _sSo8TUHandleCSo8NSObjectCSH10ObjectiveCWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type TUConversationMember and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
  v8 = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(v4, sel_initWithConversationLink_otherInvitedHandles_remoteMembers_sendLetMeInRequest_, a1, isa, v8, a4 & 1);

  return v9;
}

void outlined bridged method (mbgnn) of @objc TUJoinConversationRequest.invitationPreferences.setter(uint64_t a1, void *a2)
{
  Class isa;

  _sSo8NSObjectCMaTm_0(0, &lazy cache variable for type metadata for TUConversationInvitationPreference);
  _sSo8TUHandleCSo8NSObjectCSH10ObjectiveCWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type TUConversationInvitationPreference and conformance NSObject, &lazy cache variable for type metadata for TUConversationInvitationPreference);
  isa = Set._bridgeToObjectiveC()().super.isa;
  objc_msgSend(a2, sel_setInvitationPreferences_, isa);

}

uint64_t outlined bridged method (pb) of @objc CNPhoneNumber.countryCode.getter(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_countryCode);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t outlined init with copy of MessagesGroup?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MessagesGroup?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of MessagesGroup?(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MessagesGroup?);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t outlined destroy of MessagesGroup(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MessagesGroup();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BD356CB4()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in PeoplePickerCallCreator.dialCall(provider:video:contact:handle:senderIdentity:ttyType:)(uint64_t a1)
{
  uint64_t v1;

  return closure #1 in PeoplePickerCallCreator.dialCall(provider:video:contact:handle:senderIdentity:ttyType:)(a1, *(void **)(v1 + 16));
}

uint64_t type metadata accessor for PeoplePickerCallCreator()
{
  return objc_opt_self();
}

uint64_t method lookup function for PeoplePickerCallCreator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PeoplePickerCallCreator.presentScreenTimeShield.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of PeoplePickerCallCreator.presentScreenTimeShield.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of PeoplePickerCallCreator.presentScreenTimeShield.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of PeoplePickerCallCreator.__allocating_init(callCenter:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of PeoplePickerCallCreator.invitePeople(_:withVideo:senderIdentity:activity:messagesGroup:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of PeoplePickerCallCreator.dialCall(provider:video:contact:handle:senderIdentity:ttyType:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of PeoplePickerCallCreator.createCallWithLink(_:facetimeUnavailablePeople:facetimeAvailablePeople:shouldAddOtherInvitedToRemoteMembers:activity:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t sub_1BD356D64()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t _sSo8TUHandleCSo8NSObjectCSH10ObjectiveCWlTm_0(unint64_t *a1, unint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = _sSo8NSObjectCMaTm_0(255, a2);
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0DEFCF8], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t SystemBannerDismissalReason.description.getter(uint64_t a1)
{
  uint64_t result;

  result = 0xD000000000000020;
  if (!a1)
    return 0xD000000000000023;
  if (a1 == 2)
    return 0xD000000000000028;
  if (a1 != 1)
  {
    result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
    __break(1u);
  }
  return result;
}

BOOL static SystemBannerHostError.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void SystemBannerHostError.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
  Hasher._combine(_:)(a2);
  OUTLINED_FUNCTION_0();
}

Swift::Int SystemBannerHostError.hashValue.getter(unsigned __int8 a1)
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1);
  return Hasher._finalize()();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance SystemBannerHostError(char *a1, char *a2)
{
  return static SystemBannerHostError.== infix(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance SystemBannerHostError()
{
  unsigned __int8 *v0;

  return SystemBannerHostError.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance SystemBannerHostError(uint64_t a1)
{
  unsigned __int8 *v1;

  SystemBannerHostError.hash(into:)(a1, *v1);
}

unint64_t SystemBannerDismissalReason.init(rawValue:)(unint64_t result)
{
  if (result > 2)
    return 0;
  return result;
}

unint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance SystemBannerDismissalReason@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result;
  char v4;

  result = SystemBannerDismissalReason.init(rawValue:)(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance SystemBannerDismissalReason()
{
  uint64_t *v0;

  return SystemBannerDismissalReason.description.getter(*v0);
}

uint64_t static SystemBannerHostViewController.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a1 + OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_bannerIdentifier) == *(_QWORD *)(a2 + OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_bannerIdentifier)
    && *(_QWORD *)(a1 + OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_bannerIdentifier + 8) == *(_QWORD *)(a2 + OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_bannerIdentifier + 8))
  {
    return OUTLINED_FUNCTION_6_4();
  }
  else
  {
    return _stringCompareWithSmolCheck(_:_:expecting:)();
  }
}

uint64_t key path setter for SystemBannerHostViewController.delegate : SystemBannerHostViewController(uint64_t a1, _QWORD **a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x1A8);
  v3 = swift_unknownObjectRetain();
  return v2(v3);
}

void SystemBannerHostViewController.delegate.getter()
{
  SystemBannerHostViewController.delegate.getter();
}

{
  OUTLINED_FUNCTION_1_7();
  OUTLINED_FUNCTION_26();
}

void SystemBannerHostViewController.delegate.setter()
{
  SystemBannerHostViewController.delegate.setter();
}

{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_21_6();
  swift_unknownObjectWeakAssign();
  OUTLINED_FUNCTION_19_0();
  OUTLINED_FUNCTION_32();
}

void SystemBannerHostViewController.delegate.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_124_1();
  v2 = OUTLINED_FUNCTION_80((uint64_t)v1);
  v3 = OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_delegate;
  *(_QWORD *)(v2 + 32) = v0;
  *(_QWORD *)(v2 + 40) = v3;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_26();
}

void sub_1BD356FF4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  OUTLINED_FUNCTION_18();
}

uint64_t key path setter for SystemBannerHostViewController.controlsManager : SystemBannerHostViewController(id *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x1C0))(*a1);
}

void SystemBannerHostViewController.controlsManager.didset()
{
  void *v0;
  uint64_t v1;
  _QWORD *v2;
  NSObject *v3;
  os_log_type_t v4;
  _BOOL4 v5;
  _QWORD *v6;
  uint8_t *v7;
  uint64_t v8;
  id *v9;
  uint64_t (*v10)(void);
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t ObjectType;
  id *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v1 = type metadata accessor for Logger();
  __swift_project_value_buffer(v1, (uint64_t)&static Logger.conversationControls);
  v2 = v0;
  v3 = Logger.logObject.getter();
  v4 = static os_log_type_t.default.getter();
  v5 = os_log_type_enabled(v3, v4);
  v6 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  if (v5)
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v23 = v8;
    *(_DWORD *)v7 = 136315138;
    v9 = (id *)((char *)v2 + OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_controlsManager);
    swift_beginAccess();
    v10 = *(uint64_t (**)(void))((*v6 & *(_QWORD *)*v9) + 0x270);
    v11 = *v9;
    v12 = v10();
    v14 = v13;

    v24 = v12;
    v25 = v14;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Call);
    v15 = String.init<A>(reflecting:)();
    v24 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v15, v16, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v3, v4, "Updating the system HUD controls manager for call %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v8, -1, -1);
    MEMORY[0x1C3B751B8](v7, -1, -1);

  }
  else
  {

  }
  v17 = (*(uint64_t (**)(void))((*v6 & *v2) + 0x2D0))();
  if (v17)
  {
    v19 = (void *)v17;
    v20 = v18;
    ObjectType = swift_getObjectType();
    v22 = (id *)((char *)v2 + OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_controlsManager);
    swift_beginAccess();
    (*(void (**)(id, uint64_t, uint64_t))(v20 + 96))(*v22, ObjectType, v20);

  }
}

id SystemBannerHostViewController.controlsManager.getter()
{
  id *v0;

  OUTLINED_FUNCTION_1_7();
  return OUTLINED_FUNCTION_144_3(*v0);
}

void SystemBannerHostViewController.controlsManager.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  id v5;

  v3 = (void **)(v1 + OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_controlsManager);
  OUTLINED_FUNCTION_2_0();
  v4 = *v3;
  *v3 = a1;
  v5 = a1;

  SystemBannerHostViewController.controlsManager.didset();
  OUTLINED_FUNCTION_9_0();
}

void SystemBannerHostViewController.controlsManager.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void SystemBannerHostViewController.controlsManager.modify(uint64_t a1, char a2)
{
  LocalParticipantView.blurEnabled.modify(a1, a2, (void (*)(uint64_t))SystemBannerHostViewController.controlsManager.didset);
}

void SystemBannerHostViewController.callCenter.getter()
{
  uint64_t *v0;
  id v1;

  v1 = objc_retain(*(id *)(OUTLINED_FUNCTION_89_16(*v0)
                         + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_callCenter));
  OUTLINED_FUNCTION_49_5();
  OUTLINED_FUNCTION_0();
}

void SystemBannerHostViewController.bannerIdentifier.getter()
{
  OUTLINED_FUNCTION_52_4();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void SystemBannerHostViewController.sizeClass.getter()
{
  OUTLINED_FUNCTION_1_7();
  OUTLINED_FUNCTION_32();
}

void SystemBannerHostViewController.sizeClass.setter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_sizeClass);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  OUTLINED_FUNCTION_32();
}

void key path setter for SystemBannerHostViewController.controlsType : SystemBannerHostViewController(uint64_t a1)
{
  uint64_t v1;

  outlined init with copy of ConversationControlsType(a1, (uint64_t)&v1);
  SystemBannerHostViewController.controlsType.setter();
}

void SystemBannerHostViewController.controlsType.getter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_2_0();
  v0 = OUTLINED_FUNCTION_21_6();
  outlined init with copy of ConversationControlsType(v0, v1);
  OUTLINED_FUNCTION_32();
}

void SystemBannerHostViewController.controlsType.setter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_2_0();
  v0 = OUTLINED_FUNCTION_50();
  outlined assign with take of ConversationControlsType(v0, v1);
  OUTLINED_FUNCTION_25_29();
  OUTLINED_FUNCTION_32();
}

void key path setter for SystemBannerHostViewController.notice : SystemBannerHostViewController(uint64_t a1)
{
  _BYTE v1[40];

  outlined init with copy of ModifiedContent<<<opaque return type of View.environment<A>(_:)>>.0, _TransactionModifier>(a1, (uint64_t)v1, (uint64_t *)&demangling cache variable for type metadata for Notice?);
  SystemBannerHostViewController.notice.setter();
}

void SystemBannerHostViewController.notice.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;

  OUTLINED_FUNCTION_2_0();
  v0 = OUTLINED_FUNCTION_21_6();
  outlined init with copy of ModifiedContent<<<opaque return type of View.environment<A>(_:)>>.0, _TransactionModifier>(v0, v1, v2);
  OUTLINED_FUNCTION_32();
}

void SystemBannerHostViewController.notice.setter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_2_0();
  v0 = OUTLINED_FUNCTION_50();
  outlined assign with take of Notice?(v0, v1);
  OUTLINED_FUNCTION_25_29();
  OUTLINED_FUNCTION_32();
}

void SystemBannerHostViewController.captureOnlyBackdropView.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v6;

  v1 = OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController____lazy_storage___captureOnlyBackdropView;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController____lazy_storage___captureOnlyBackdropView);
  if (!v2)
  {
    v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC4498]), sel_init);
    objc_msgSend(v3, sel_setRenderMode_, 1);
    objc_msgSend(v3, sel_setUserInteractionEnabled_, 1);
    v4 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v3;
    v5 = v3;

    v2 = 0;
  }
  v6 = v2;
  OUTLINED_FUNCTION_18();
}

void SystemBannerHostViewController.shadowView.setter(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_shadowView);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_shadowView) = a1;

}

uint64_t SystemBannerHostViewController.OverriddenSystemApertureContent.sizeClass.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t SystemBannerHostViewController.OverriddenSystemApertureContent.controlsType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return outlined init with copy of ConversationControlsType(v1 + 8, a1);
}

_OWORD *SystemBannerHostViewController.OverriddenSystemApertureContent.init(sizeClass:controlsType:)@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X8>)
{
  *(_QWORD *)a3 = a1;
  return outlined init with take of ConversationControlsType(a2, (_OWORD *)(a3 + 8));
}

void SystemBannerHostViewController.overriddenSystemApertureContent.didset(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  __int128 *v14;
  _QWORD v15[7];
  uint64_t v16;
  uint64_t v17[7];
  _OWORD v18[3];
  unsigned __int8 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  unsigned __int8 v23;
  _OWORD v24[3];
  unsigned __int8 v25;

  outlined init with copy of ModifiedContent<<<opaque return type of View.environment<A>(_:)>>.0, _TransactionModifier>(a1, (uint64_t)&v20, &demangling cache variable for type metadata for SystemBannerHostViewController.OverriddenSystemApertureContent?);
  if (v23 == 255)
  {
    v14 = &v20;
LABEL_9:
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v14, &demangling cache variable for type metadata for SystemBannerHostViewController.OverriddenSystemApertureContent?);
    return;
  }
  v24[0] = v20;
  v24[1] = v21;
  v24[2] = v22;
  v25 = v23;
  v2 = v1 + OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_overriddenSystemApertureContent;
  swift_beginAccess();
  outlined init with copy of ModifiedContent<<<opaque return type of View.environment<A>(_:)>>.0, _TransactionModifier>(v2, (uint64_t)v18, &demangling cache variable for type metadata for SystemBannerHostViewController.OverriddenSystemApertureContent?);
  if (v19 == 255)
  {
    outlined destroy of SystemBannerHostViewController.OverriddenSystemApertureContent((uint64_t)v24);
    v14 = v18;
    goto LABEL_9;
  }
  v20 = v18[0];
  v21 = v18[1];
  v22 = v18[2];
  v23 = v19;
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v3 = type metadata accessor for Logger();
  __swift_project_value_buffer(v3, (uint64_t)&static Logger.conversationControls);
  outlined init with copy of SystemBannerHostViewController.OverriddenSystemApertureContent((uint64_t *)v24, (uint64_t)v18);
  outlined init with copy of SystemBannerHostViewController.OverriddenSystemApertureContent((uint64_t *)&v20, (uint64_t)v17);
  v4 = Logger.logObject.getter();
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = swift_slowAlloc();
    v7 = swift_slowAlloc();
    v16 = v7;
    *(_DWORD *)v6 = 136315394;
    outlined init with copy of SystemBannerHostViewController.OverriddenSystemApertureContent((uint64_t *)v18, (uint64_t)v15);
    v8 = specialized >> prefix<A>(_:)((uint64_t)v15);
    v10 = v9;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v15, &demangling cache variable for type metadata for SystemBannerHostViewController.OverriddenSystemApertureContent?);
    v15[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v8, v10, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    outlined destroy of SystemBannerHostViewController.OverriddenSystemApertureContent((uint64_t)v18);
    *(_WORD *)(v6 + 12) = 2080;
    outlined init with copy of SystemBannerHostViewController.OverriddenSystemApertureContent(v17, (uint64_t)v15);
    v11 = specialized >> prefix<A>(_:)((uint64_t)v15);
    v13 = v12;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v15, &demangling cache variable for type metadata for SystemBannerHostViewController.OverriddenSystemApertureContent?);
    v15[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v11, v13, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    outlined destroy of SystemBannerHostViewController.OverriddenSystemApertureContent((uint64_t)v17);
    _os_log_impl(&dword_1BD004000, v4, v5, "Updated overridden system aperture content from %s to %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v7, -1, -1);
    MEMORY[0x1C3B751B8](v6, -1, -1);

  }
  else
  {

    outlined destroy of SystemBannerHostViewController.OverriddenSystemApertureContent((uint64_t)v17);
    outlined destroy of SystemBannerHostViewController.OverriddenSystemApertureContent((uint64_t)v18);
  }
  outlined destroy of SystemBannerHostViewController.OverriddenSystemApertureContent((uint64_t)&v20);
  outlined destroy of SystemBannerHostViewController.OverriddenSystemApertureContent((uint64_t)v24);
}

void SystemBannerHostViewController.overriddenSystemApertureContent.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v6[56];

  v3 = v1 + OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_overriddenSystemApertureContent;
  OUTLINED_FUNCTION_2_0();
  outlined init with copy of ModifiedContent<<<opaque return type of View.environment<A>(_:)>>.0, _TransactionModifier>(v3, (uint64_t)v6, &demangling cache variable for type metadata for SystemBannerHostViewController.OverriddenSystemApertureContent?);
  OUTLINED_FUNCTION_2_0();
  v4 = OUTLINED_FUNCTION_65_2();
  outlined assign with copy of SystemBannerHostViewController.OverriddenSystemApertureContent?(v4, v5);
  OUTLINED_FUNCTION_25_29();
  SystemBannerHostViewController.overriddenSystemApertureContent.didset((uint64_t)v6);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(a1, &demangling cache variable for type metadata for SystemBannerHostViewController.OverriddenSystemApertureContent?);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v6, &demangling cache variable for type metadata for SystemBannerHostViewController.OverriddenSystemApertureContent?);
}

void SystemBannerHostViewController.needsCustomTimerForEphemeralSystemApertureState.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41[6];

  OUTLINED_FUNCTION_206();
  OUTLINED_FUNCTION_351();
  if (OUTLINED_FUNCTION_220_1(v0) != 2)
  {
    OUTLINED_FUNCTION_351();
    if ((OUTLINED_FUNCTION_54_0(*(uint64_t (**)(void))(v1 + 1248)) & 1) != 0)
    {
      OUTLINED_FUNCTION_351();
      OUTLINED_FUNCTION_216_2(v2, v3, v4, v5, v6, v7);
      v8 = ConversationControlsType.associatedNotice.getter((uint64_t)v41);
      OUTLINED_FUNCTION_100(v8, v9, v10, v11, v12, v13);
      v14 = v41[3];
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v41, (uint64_t *)&demangling cache variable for type metadata for Notice?);
      if (!v14)
      {
        v21 = OUTLINED_FUNCTION_216_2(v15, v16, v17, v18, v19, v20);
        OUTLINED_FUNCTION_16_68((uint64_t)v21, v22, v23, v24, v25, v26);
        v35 = OUTLINED_FUNCTION_14_15(v27, v28, v29, v30, v31, v32, v33, v34, v41[0]);
        OUTLINED_FUNCTION_100(v35, v36, v37, v38, v39, v40);
      }
    }
  }
  OUTLINED_FUNCTION_164_0();
}

uint64_t key path setter for SystemBannerHostViewController.systemApertureAlertingManager : SystemBannerHostViewController(uint64_t a1, _QWORD **a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x2C0);
  v3 = swift_retain();
  return v2(v3);
}

void SystemBannerHostViewController.systemApertureAlertingManager.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;

  v2 = OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController____lazy_storage___systemApertureAlertingManager;
  if (!*(_QWORD *)(v1
                  + OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController____lazy_storage___systemApertureAlertingManager))
  {
    type metadata accessor for SystemApertureAlertingManager();
    OUTLINED_FUNCTION_14_0();
    v3 = OUTLINED_FUNCTION_8_86();
    *(_QWORD *)(v1 + v2) = specialized SystemApertureAlertingManager.init(systemApertureElement:sceneStateDescriber:)(v3, v3, v0);
    swift_retain();
    swift_release();
  }
  swift_retain();
  OUTLINED_FUNCTION_18();
}

uint64_t SystemBannerHostViewController.systemApertureAlertingManager.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1
            + OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController____lazy_storage___systemApertureAlertingManager) = a1;
  return swift_release();
}

void SystemBannerHostViewController.systemApertureAlertingManager.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[1] = v1;
  SystemBannerHostViewController.systemApertureAlertingManager.getter();
  *a1 = v3;
  OUTLINED_FUNCTION_0();
}

void SystemBannerHostViewController.systemApertureAlertingManager.modify(uint64_t *a1, char a2)
{
  uint64_t v2;

  if ((a2 & 1) != 0)
  {
    v2 = swift_retain();
    SystemBannerHostViewController.systemApertureAlertingManager.setter(v2);
    OUTLINED_FUNCTION_155_2();
  }
  else
  {
    SystemBannerHostViewController.systemApertureAlertingManager.setter(*a1);
    OUTLINED_FUNCTION_0();
  }
}

uint64_t key path setter for SystemBannerHostViewController.conversationControlsViewController : SystemBannerHostViewController(uint64_t a1, _QWORD **a2)
{
  id v2;
  uint64_t v3;
  uint64_t (*v4)(id, uint64_t);
  id v5;

  v2 = *(id *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(uint64_t (**)(id, uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x2D8);
  v5 = *(id *)a1;
  return v4(v2, v3);
}

void SystemBannerHostViewController.conversationControlsViewController.didset(void *a1, uint64_t a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  SEL *v12;
  uint64_t v13;
  uint64_t ObjectType;
  void (*v15)(char *, _UNKNOWN **, uint64_t, uint64_t);
  id v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  _BOOL4 v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char **v37;
  id v38;
  void *v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  id v44;
  uint64_t v45;
  unint64_t v46;
  char *v47;
  id v48;
  void *v49;
  id v50;
  void *v51;
  id v52;
  void *v53;
  uint64_t v54;
  id v55;
  void *v56;
  id v57;
  id v58;
  void *v59;
  id v60;
  SEL *v61;
  id v62;
  id v63;
  void *v64;
  id v65;
  id v66;
  void *v67;
  id v68;
  id v69;
  unint64_t v70;
  id v71;
  id v72;
  id v73;
  id v74;
  char **v75;
  unint64_t v76;
  id v77;
  id v78;
  void *v79;
  id v80;
  id v81;
  void *v82;
  uint64_t v83;
  uint64_t v84;
  char **v85;
  id v86;
  id v87;
  void *v88;
  id v89;
  id v90;
  void *v91;
  id v92;
  id v93;
  void *v94;
  id v95;
  uint64_t v96;
  id v97;
  SEL *v98;
  uint64_t v99;
  _QWORD *v100;
  id v101;
  id v102;
  id v103;
  _QWORD *v104;
  void (*v105)(id *__return_ptr);
  id v106;
  id v107;
  double v108;
  id v109;
  id v110;
  id v111;
  id v112;
  char *v113;
  id v114;
  void *v115;
  id v116;
  uint64_t (*v117)(void);
  void *v118;
  id v119;
  id v120;
  void *v121;
  id v122;
  id v123;
  id v124;
  void *v125;
  id v126;
  id v127;
  id v128;
  void *v129;
  id v130;
  id v131;
  uint64_t v132;
  id v133;
  id v134;
  id v135;
  void *v136;
  Class isa;
  id v138;
  id v139;
  void *v140;
  id v141;
  uint64_t v142;
  void *v143;
  id v144;
  void *v145;
  void *v146;
  double v147;
  uint64_t v148;
  _QWORD *v149;
  uint64_t v150;
  void *v151;
  id v152;
  id v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  id v158;
  id v159;
  id v160;
  id v161;
  char *v162;
  id v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  unint64_t v167;
  uint64_t v168;
  char *v169;
  unint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t (*v173)(uint64_t, uint64_t);
  void *v174;
  void (*v175)(uint64_t);
  _QWORD *v176;
  unsigned __int8 v177;
  id v178[5];
  id v179;
  int v180;
  id v181[5];
  id v182[6];

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v157 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v166 = (uint64_t)&v157 - v9;
  v10 = &v2[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_conversationControlsViewController];
  swift_beginAccess();
  v11 = *(void **)v10;
  v12 = (SEL *)&selRef_associatedAppBundleIdentifier;
  if (*(_QWORD *)v10)
  {
    v162 = v7;
    v165 = a2;
    v13 = *((_QWORD *)v10 + 1);
    ObjectType = swift_getObjectType();
    v15 = *(void (**)(char *, _UNKNOWN **, uint64_t, uint64_t))(v13 + 16);
    v16 = v11;
    v17 = v2;
    v164 = ObjectType;
    v168 = v13;
    v15(v2, &protocol witness table for SystemBannerHostViewController, ObjectType, v13);
    v169 = v17;
    v18 = (uint64_t)&v17[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_overriddenSystemApertureContent];
    swift_beginAccess();
    outlined init with copy of ModifiedContent<<<opaque return type of View.environment<A>(_:)>>.0, _TransactionModifier>(v18, (uint64_t)&v171, &demangling cache variable for type metadata for SystemBannerHostViewController.OverriddenSystemApertureContent?);
    LODWORD(v18) = v177;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v171, &demangling cache variable for type metadata for SystemBannerHostViewController.OverriddenSystemApertureContent?);
    if ((_DWORD)v18 != 255
      && (v169[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_isTransitioningToEphemeralSystemApertureContent] & 1) == 0)
    {
      if (one-time initialization token for conversationControls != -1)
        swift_once();
      v19 = type metadata accessor for Logger();
      __swift_project_value_buffer(v19, (uint64_t)&static Logger.conversationControls);
      v20 = Logger.logObject.getter();
      v21 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v20, v21))
      {
        v22 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v22 = 0;
        _os_log_impl(&dword_1BD004000, v20, v21, "[System] Attempting to replace conversationControlsViewController while ephemeralSystemApertureContent is showing which is unsupported and unexpected", v22, 2u);
        MEMORY[0x1C3B751B8](v22, -1, -1);
      }

    }
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v23 = type metadata accessor for Logger();
    __swift_project_value_buffer(v23, (uint64_t)&static Logger.conversationControls);
    v24 = a1;
    v25 = v16;
    v26 = v24;
    v27 = v25;
    v28 = Logger.logObject.getter();
    v29 = static os_log_type_t.debug.getter();
    v30 = os_log_type_enabled(v28, v29);
    v167 = (unint64_t)a1;
    v163 = v26;
    if (v30)
    {
      v31 = swift_slowAlloc();
      v32 = (void *)swift_slowAlloc();
      v182[0] = v32;
      *(_DWORD *)v31 = 136315394;
      if (a1)
      {
        v171 = (uint64_t)v26;
        v172 = v165;
        v33 = v26;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsViewController);
        v34 = String.init<A>(reflecting:)();
        v36 = v35;
      }
      else
      {
        v36 = 0xE300000000000000;
        v34 = 7104878;
      }
      v171 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v34, v36, (uint64_t *)v182);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();

      *(_WORD *)(v31 + 12) = 2080;
      v171 = (uint64_t)v27;
      v172 = v168;
      v44 = v27;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsViewController);
      v45 = String.init<A>(reflecting:)();
      v171 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v45, v46, (uint64_t *)v182);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BD004000, v28, v29, "[System] Replacing %s with %s", (uint8_t *)v31, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v32, -1, -1);
      MEMORY[0x1C3B751B8](v31, -1, -1);

      v12 = (SEL *)&selRef_associatedAppBundleIdentifier;
    }
    else
    {

    }
    v47 = v169;
    objc_msgSend(v169, sel_addChildViewController_, v27);
    v48 = objc_msgSend(v47, sel_view);
    if (v48)
    {
      v49 = v48;
      v50 = objc_msgSend(v27, sel_view);
      if (v50)
      {
        v51 = v50;
        objc_msgSend(v49, sel_addSubview_, v50);

        v52 = objc_msgSend(v27, sel_view);
        if (v52)
        {
          v53 = v52;
          objc_msgSend(v52, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
          v54 = swift_allocObject();
          *(_OWORD *)(v54 + 16) = xmmword_1BD6441C0;
          v55 = objc_msgSend(v27, sel_view);
          if (v55)
          {
            v56 = v55;
            v57 = objc_msgSend(v55, sel_topAnchor);

            v58 = objc_msgSend(v169, sel_view);
            if (v58)
            {
              v59 = v58;
              v60 = objc_msgSend(v58, sel_topAnchor);

              v61 = (SEL *)&selRef_associatedAppBundleIdentifier;
              v62 = objc_msgSend(v57, sel_constraintEqualToAnchor_, v60);

              *(_QWORD *)(v54 + 32) = v62;
              v63 = objc_msgSend(v27, sel_view);
              if (v63)
              {
                v64 = v63;
                v65 = objc_msgSend(v63, sel_bottomAnchor);

                v66 = objc_msgSend(v169, sel_view);
                if (v66)
                {
                  v67 = v66;
                  v68 = objc_msgSend(v66, sel_bottomAnchor);

                  v69 = objc_msgSend(v65, sel_constraintEqualToAnchor_, v68);
                  *(_QWORD *)(v54 + 40) = v69;
                  v171 = v54;
                  specialized Array._endMutation()();
                  v70 = v171;
                  v170 = v171;
                  v71 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
                  v72 = objc_msgSend(v71, sel_userInterfaceIdiom);

                  v73 = objc_msgSend(v27, sel_view);
                  v74 = v73;
                  v75 = &selRef_associatedAppBundleIdentifier;
                  v37 = &selRef_associatedAppBundleIdentifier;
                  v76 = v70 >> 62;
                  if (v72 == (id)1)
                  {
                    if (!v73)
                    {
LABEL_91:
                      __break(1u);
                      goto LABEL_92;
                    }
                    v77 = objc_msgSend(v73, sel_widthAnchor);

                    (*(void (**)(uint64_t))(v168 + 56))(v164);
                    v74 = objc_msgSend(v77, sel_constraintEqualToConstant_);

                    v78 = objc_msgSend(v27, sel_view);
                    if (!v78)
                    {
LABEL_92:
                      __break(1u);
                      goto LABEL_93;
                    }
                    v79 = v78;
                    v80 = objc_msgSend(v78, sel_centerXAnchor);

                    v81 = objc_msgSend(v169, sel_view);
                    if (!v81)
                    {
LABEL_93:
                      __break(1u);
                      goto LABEL_94;
                    }
                    v82 = v81;
                    v12 = (SEL *)objc_msgSend(v81, sel_centerXAnchor);

                    v61 = (SEL *)objc_msgSend(v80, sel_constraintEqualToAnchor_, v12);
                    if (v76)
                    {
                      swift_bridgeObjectRetain();
                      v83 = _CocoaArrayWrapper.endIndex.getter();
                      swift_bridgeObjectRelease();
                    }
                    else
                    {
                      v75 = (char **)(v70 & 0xFFFFFFFFFFFFF8);
                      v83 = *(_QWORD *)((v70 & 0xFFFFFFFFFFFFF8) + 0x10);
                    }
                    v84 = v83 + 2;
                    v76 = v167;
                    if (!__OFADD__(v83, 2))
                    {
LABEL_45:
                      specialized Array._reserveCapacityImpl(minimumCapacity:growForAppend:)(v84, 1);
                      specialized Array._endMutation()();
                      v97 = v74;
                      MEMORY[0x1C3B7301C]();
                      if (*(_QWORD *)((v170 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v170 & 0xFFFFFFFFFFFFFF8)
                                                                                         + 0x18) >> 1)
                        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
                      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                      specialized Array._endMutation()();
                      v98 = v61;
                      MEMORY[0x1C3B7301C]();
                      if (*(_QWORD *)((v170 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v170 & 0xFFFFFFFFFFFFFF8)
                                                                                         + 0x18) >> 1)
                        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
                      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                      specialized Array._endMutation()();

                      type metadata accessor for ConversationHUDViewController();
                      v99 = swift_dynamicCastClass();
                      if (!v99
                        || (v169[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_isSystemAperturePresentation] & 1) != 0)
                      {
LABEL_63:
                        v136 = (void *)objc_opt_self();
                        type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
                        swift_bridgeObjectRetain();
                        isa = Array._bridgeToObjectiveC()().super.isa;
                        swift_bridgeObjectRelease();
                        objc_msgSend(v136, sel_activateConstraints_, isa);

                        SystemBannerHostViewController.installSystemApertureViewsIfNeeded()();
                        if (!v76)
                        {
                          v154 = type metadata accessor for ConversationControlsRecipe();
                          v155 = v166;
                          __swift_storeEnumTagSinglePayload(v166, 1, 1, v154);
                          v156 = (uint64_t)v162;
                          (*(void (**)(uint64_t))(v168 + 32))(v164);
                          SystemBannerHostViewController.alertIfNeededForRecipeTransition(from:to:)(v155, v156);
                          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v156, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
                          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v155, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
                          swift_bridgeObjectRelease();
LABEL_71:
                          objc_msgSend(v27, sel_didMoveToParentViewController_, v169);

                          return;
                        }
                        v138 = v163;
                        v139 = objc_msgSend(v27, sel_view);
                        if (v139)
                        {
                          v140 = v139;
                          objc_msgSend(v139, sel_setAlpha_, 0.0);

                          objc_msgSend(v138, sel_willMoveToParentViewController_, 0);
                          v141 = objc_msgSend(v138, sel_view);
                          v142 = v165;
                          if (v141)
                          {
                            v143 = v141;
                            v144 = objc_msgSend(v27, sel_view);
                            if (v144)
                            {
                              v145 = v144;
                              v146 = (void *)objc_opt_self();
                              swift_bridgeObjectRelease();
                              if (one-time initialization token for shared != -1)
                                swift_once();
                              v147 = (*(double (**)(void))(*(_QWORD *)static Defaults.shared + 1016))();
                              v148 = swift_allocObject();
                              swift_unknownObjectWeakInit();
                              v149 = (_QWORD *)swift_allocObject();
                              v149[2] = v138;
                              v149[3] = v142;
                              v150 = v168;
                              v149[4] = v27;
                              v149[5] = v150;
                              v149[6] = v148;
                              v175 = partial apply for closure #1 in SystemBannerHostViewController.conversationControlsViewController.didset;
                              v176 = v149;
                              v171 = MEMORY[0x1E0C809B0];
                              v172 = 1107296256;
                              v173 = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ();
                              v174 = &block_descriptor_67;
                              v151 = _Block_copy(&v171);
                              v152 = v27;
                              v153 = v138;
                              swift_release();
                              objc_msgSend(v146, sel_transitionFromView_toView_duration_options_completion_, v143, v145, 5242880, v151, v147);

                              _Block_release(v151);
                              goto LABEL_71;
                            }
                            goto LABEL_90;
                          }
LABEL_89:
                          __break(1u);
LABEL_90:
                          __break(1u);
                          goto LABEL_91;
                        }
LABEL_88:
                        __break(1u);
                        goto LABEL_89;
                      }
                      v100 = (_QWORD *)v99;
                      v101 = objc_allocWithZone(MEMORY[0x1E0DC3F10]);
                      v161 = v27;
                      v160 = v27;
                      v102 = objc_msgSend(v101, sel_init);
                      objc_msgSend(v102, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
                      v103 = objc_msgSend(v102, sel_layer);
                      v104 = (_QWORD *)MEMORY[0x1E0DEEDD8];
                      v105 = *(void (**)(id *__return_ptr))((*MEMORY[0x1E0DEEDD8] & *v100) + 0x150);
                      v105(v178);
                      v106 = objc_msgSend(v178[0], sel_CGColor);
                      outlined release of BackgroundView<A>(v178);
                      objc_msgSend(v103, sel_setShadowColor_, v106);

                      v107 = objc_msgSend(v102, sel_layer);
                      v105(&v179);
                      outlined release of BackgroundView<A>(&v179);
                      LODWORD(v108) = v180;
                      objc_msgSend(v107, sel_setShadowOpacity_, v108);

                      v109 = objc_msgSend(v102, sel_layer);
                      v105(v181);
                      outlined release of BackgroundView<A>(v181);
                      objc_msgSend(v109, sel_setShadowRadius_, *(double *)&v181[2]);

                      v110 = objc_msgSend(v102, sel_layer);
                      v105(v182);
                      outlined release of BackgroundView<A>(v182);
                      objc_msgSend(v110, sel_setShadowOffset_, *(double *)&v182[3], *(double *)&v182[4]);

                      v111 = objc_msgSend(v102, sel_layer);
                      objc_msgSend(v111, sel_setShadowPathIsBounds_, 1);

                      v112 = v102;
                      v113 = v169;
                      SystemBannerHostViewController.shadowView.setter((uint64_t)v102);
                      v114 = objc_msgSend(v113, sel_view);
                      if (!v114)
                      {
LABEL_99:
                        __break(1u);
                        return;
                      }
                      v115 = v114;
                      objc_msgSend(v114, sel_insertSubview_atIndex_, v112, 1);

                      v116 = objc_msgSend(v112, sel_topAnchor);
                      v117 = *(uint64_t (**)(void))((*v104 & *v100) + 0x1B8);
                      v118 = (void *)v117();
                      v119 = objc_msgSend(v118, sel_topAnchor);

                      v158 = objc_msgSend(v116, sel_constraintEqualToAnchor_, v119);
                      v120 = objc_msgSend(v112, sel_leadingAnchor);
                      v121 = (void *)v117();
                      v122 = objc_msgSend(v121, sel_leadingAnchor);

                      v123 = objc_msgSend(v120, sel_constraintEqualToAnchor_, v122);
                      v124 = objc_msgSend(v112, sel_bottomAnchor);
                      v125 = (void *)v117();
                      v126 = objc_msgSend(v125, sel_bottomAnchor);

                      v127 = objc_msgSend(v124, sel_constraintEqualToAnchor_, v126);
                      v159 = v112;
                      v128 = objc_msgSend(v112, sel_trailingAnchor);
                      v129 = (void *)v117();
                      v130 = objc_msgSend(v129, sel_trailingAnchor);

                      v131 = objc_msgSend(v128, sel_constraintEqualToAnchor_, v130);
                      if (v170 >> 62)
                      {
                        swift_bridgeObjectRetain();
                        v132 = _CocoaArrayWrapper.endIndex.getter();
                        swift_bridgeObjectRelease();
                      }
                      else
                      {
                        v132 = *(_QWORD *)((v170 & 0xFFFFFFFFFFFFF8) + 0x10);
                      }
                      v76 = v167;
                      v27 = v161;
                      if (__OFADD__(v132, 4))
                      {
                        __break(1u);
                      }
                      else
                      {
                        specialized Array._reserveCapacityImpl(minimumCapacity:growForAppend:)(v132 + 4, 1);
                        specialized Array._endMutation()();
                        v130 = v158;
                        MEMORY[0x1C3B7301C]();
                        if (*(_QWORD *)((v170 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(_QWORD *)((v170 & 0xFFFFFFFFFFFFFF8)
                                                                                          + 0x18) >> 1)
                        {
LABEL_56:
                          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                          specialized Array._endMutation()();
                          v133 = v123;
                          MEMORY[0x1C3B7301C]();
                          if (*(_QWORD *)((v170 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v170 & 0xFFFFFFFFFFFFFF8)
                                                                                             + 0x18) >> 1)
                            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
                          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                          specialized Array._endMutation()();
                          v134 = v127;
                          MEMORY[0x1C3B7301C]();
                          if (*(_QWORD *)((v170 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v170 & 0xFFFFFFFFFFFFFF8)
                                                                                             + 0x18) >> 1)
                            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
                          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                          specialized Array._endMutation()();
                          v135 = v131;
                          MEMORY[0x1C3B7301C]();
                          if (*(_QWORD *)((v170 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v170 & 0xFFFFFFFFFFFFFF8)
                                                                                             + 0x18) >> 1)
                            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
                          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                          specialized Array._endMutation()();

                          goto LABEL_63;
                        }
                      }
                      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
                      goto LABEL_56;
                    }
                    __break(1u);
                  }
                  if (!v74)
                  {
LABEL_94:
                    __break(1u);
                    goto LABEL_95;
                  }
                  v85 = v75;
                  v86 = objc_msgSend(v74, v75[147]);

                  v87 = objc_msgSend(v169, v12[143]);
                  if (!v87)
                  {
LABEL_95:
                    __break(1u);
                    goto LABEL_96;
                  }
                  v88 = v87;
                  v89 = objc_msgSend(v87, (SEL)v85 + 310);

                  v74 = objc_msgSend(v86, v61[146], v89);
                  v90 = objc_msgSend(v27, v12[143]);
                  if (!v90)
                  {
LABEL_96:
                    __break(1u);
                    goto LABEL_97;
                  }
                  v91 = v90;
                  v92 = objc_msgSend(v90, sel_trailingAnchor);

                  v93 = objc_msgSend(v169, v12[143]);
                  if (!v93)
                  {
LABEL_97:
                    __break(1u);
LABEL_98:
                    __break(1u);
                    goto LABEL_99;
                  }
                  v94 = v93;
                  v95 = objc_msgSend(v93, sel_trailingAnchor);

                  v61 = (SEL *)objc_msgSend(v92, v61[146], v95);
                  if (v76)
                  {
                    swift_bridgeObjectRetain();
                    v96 = _CocoaArrayWrapper.endIndex.getter();
                    swift_bridgeObjectRelease();
                  }
                  else
                  {
                    v96 = *(_QWORD *)((v70 & 0xFFFFFFFFFFFFF8) + 0x10);
                  }
                  v84 = v96 + 2;
                  v76 = v167;
                  if (!__OFADD__(v96, 2))
                    goto LABEL_45;
                  __break(1u);
                  goto LABEL_77;
                }
LABEL_87:
                __break(1u);
                goto LABEL_88;
              }
LABEL_86:
              __break(1u);
              goto LABEL_87;
            }
LABEL_85:
            __break(1u);
            goto LABEL_86;
          }
LABEL_84:
          __break(1u);
          goto LABEL_85;
        }
LABEL_83:
        __break(1u);
        goto LABEL_84;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_83;
  }
  if (!a1)
    return;
  v37 = a1;
  objc_msgSend(v37, sel_willMoveToParentViewController_, 0);
  v38 = objc_msgSend(v37, sel_view);
  if (!v38)
    goto LABEL_98;
  v39 = v38;
  objc_msgSend(v38, sel_removeFromSuperview);

  objc_msgSend(v37, sel_removeFromParentViewController);
  if (one-time initialization token for conversationControls != -1)
LABEL_77:
    swift_once();
  v40 = type metadata accessor for Logger();
  __swift_project_value_buffer(v40, (uint64_t)&static Logger.conversationControls);
  v41 = Logger.logObject.getter();
  v42 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v41, v42))
  {
    v43 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v43 = 0;
    _os_log_impl(&dword_1BD004000, v41, v42, "[System] Removed conversationControlsViewController without replacement", v43, 2u);
    MEMORY[0x1C3B751B8](v43, -1, -1);

  }
  else
  {

  }
}

void closure #1 in SystemBannerHostViewController.conversationControlsViewController.didset(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t ObjectType;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;

  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v23 - v15;
  ObjectType = swift_getObjectType();
  objc_msgSend(a2, sel_removeFromParentViewController);
  v18 = swift_getObjectType();
  v19 = objc_msgSend(a4, sel_view);
  if (v19)
  {
    v20 = v19;
    objc_msgSend(v19, sel_setAlpha_, 1.0);

    swift_beginAccess();
    v21 = MEMORY[0x1C3B752C0](a6 + 16);
    if (v21)
    {
      v22 = (void *)v21;
      if (*(_BYTE *)(v21
                    + OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_isSystemAperturePresentation) == 1)
        SystemBannerHostViewController.updateSystemApertureElement()();
      (*(void (**)(uint64_t, uint64_t))(a3 + 32))(ObjectType, a3);
      (*(void (**)(uint64_t, uint64_t))(a5 + 32))(v18, a5);
      SystemBannerHostViewController.alertIfNeededForRecipeTransition(from:to:)((uint64_t)v16, (uint64_t)v13);

      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v13, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v16, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
    }
  }
  else
  {
    __break(1u);
  }
}

void SystemBannerHostViewController.conversationControlsViewController.getter()
{
  id *v0;
  id v1;

  OUTLINED_FUNCTION_1_7();
  v1 = *v0;
  OUTLINED_FUNCTION_21_6();
  OUTLINED_FUNCTION_32();
}

void SystemBannerHostViewController.conversationControlsViewController.setter(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;

  v5 = v2 + OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_conversationControlsViewController;
  OUTLINED_FUNCTION_2_0();
  v6 = *(void **)v5;
  *(_QWORD *)v5 = a1;
  *(_QWORD *)(v5 + 8) = a2;
  v7 = a1;
  v8 = (void *)OUTLINED_FUNCTION_311_0();
  SystemBannerHostViewController.conversationControlsViewController.didset(v8, v9);

}

void SystemBannerHostViewController.conversationControlsViewController.modify()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  __int128 *v3;
  __int128 v4;
  id v5;

  v2 = OUTLINED_FUNCTION_124_1();
  *(_QWORD *)(OUTLINED_FUNCTION_80((uint64_t)v2) + 40) = v0;
  v3 = (__int128 *)(v0
                  + OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_conversationControlsViewController);
  OUTLINED_FUNCTION_2_0();
  v4 = *v3;
  *(_OWORD *)(v1 + 24) = *v3;
  v5 = (id)v4;
  OUTLINED_FUNCTION_65_2();
  OUTLINED_FUNCTION_18();
}

void SystemBannerHostViewController.conversationControlsViewController.modify(uint64_t a1, char a2)
{
  void *v2;
  id *v3;
  id v4;

  v2 = *(void **)a1;
  v3 = (id *)(*(_QWORD *)a1 + 24);
  if ((a2 & 1) != 0)
  {
    v4 = *(id *)(*(_QWORD *)a1 + 24);
    OUTLINED_FUNCTION_291_3();

  }
  else
  {
    OUTLINED_FUNCTION_291_3();
  }
  free(v2);
}

void SystemBannerHostViewController.hasRootViewController.getter()
{
  uint64_t *v0;
  void *v1;

  v1 = (void *)OUTLINED_FUNCTION_42_25(*v0);
  if (v1)

  OUTLINED_FUNCTION_0();
}

void SystemBannerHostViewController.requesterIdentifier.getter()
{
  OUTLINED_FUNCTION_1_7();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_21_6();
  OUTLINED_FUNCTION_32();
}

void SystemBannerHostViewController.requesterIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_requesterIdentifier);
  OUTLINED_FUNCTION_2_0();
  *v5 = a1;
  v5[1] = a2;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_9_0();
}

uint64_t key path setter for SystemBannerHostViewController.requesterIdentifier : SystemBannerHostViewController(uint64_t *a1, _QWORD **a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x310);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

void SystemBannerHostViewController.requesterIdentifier.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path setter for SystemBannerHostViewController.layoutDescription : SystemBannerHostViewController(id *a1, _QWORD **a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x328);
  v4 = *a1;
  return v3(v2);
}

void SystemBannerHostViewController.layoutDescription.getter()
{
  id *v0;
  id v1;

  OUTLINED_FUNCTION_1_7();
  v1 = *v0;
  OUTLINED_FUNCTION_32();
}

void SystemBannerHostViewController.layoutDescription.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;

  v3 = (void **)(v1 + OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_layoutDescription);
  OUTLINED_FUNCTION_2_0();
  v4 = *v3;
  *v3 = a1;

  OUTLINED_FUNCTION_32();
}

void SystemBannerHostViewController.layoutDescription.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t SystemBannerHostViewController.panGestureProxy.setter(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_panGestureProxy);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_panGestureProxy) = a1;
  swift_unknownObjectRetain();
  if (v2)
    objc_msgSend(v2, sel_setActionHandler_, 0);
  OUTLINED_FUNCTION_113();
  return OUTLINED_FUNCTION_9_8();
}

id sub_1BD3596E4(id a1)
{
  return a1;
}

void SystemBannerHostViewController.presentableContext.getter()
{
  SystemBannerHostViewController.delegate.getter();
}

void sub_1BD359718()
{
  OUTLINED_FUNCTION_32();
}

void SystemBannerHostViewController.presentableContext.setter()
{
  SystemBannerHostViewController.delegate.setter();
}

uint64_t key path setter for SystemBannerHostViewController.presentableContext : SystemBannerHostViewController(uint64_t a1, _QWORD **a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x358);
  v3 = swift_unknownObjectRetain();
  return v2(v3);
}

void SystemBannerHostViewController.presentableContext.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_124_1();
  v2 = OUTLINED_FUNCTION_80((uint64_t)v1);
  v3 = OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_presentableContext;
  *(_QWORD *)(v2 + 32) = v0;
  *(_QWORD *)(v2 + 40) = v3;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_26();
}

void sub_1BD359834(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  OUTLINED_FUNCTION_18();
}

void SystemBannerHostViewController.delegate.modify(void **a1, char a2)
{
  void *v3;

  v3 = *a1;
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    OUTLINED_FUNCTION_10();
  }
  free(v3);
}

uint64_t SystemBannerHostViewController.dismissalPreventionAssertion.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;

  v3 = OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_dismissalPreventionAssertion;
  v4 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_dismissalPreventionAssertion);
  if (v4)
  {
    objc_msgSend(v4, sel_invalidate);
    v3 = OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_dismissalPreventionAssertion;
  }
  *(_QWORD *)(v1 + v3) = a1;
  return OUTLINED_FUNCTION_9_8();
}

void SystemBannerHostViewController.gesturePriorityAssertion.willset()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  void *v7;

  v1 = OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_gesturePriorityAssertion;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_gesturePriorityAssertion))
  {
    v2 = v0;
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v3 = type metadata accessor for Logger();
    __swift_project_value_buffer(v3, (uint64_t)&static Logger.conversationControls);
    v4 = Logger.logObject.getter();
    v5 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v6 = 0;
      _os_log_impl(&dword_1BD004000, v4, v5, "[System] invalidating gesturePriorityAssertion", v6, 2u);
      MEMORY[0x1C3B751B8](v6, -1, -1);
    }

    v7 = *(void **)(v2 + v1);
    if (v7)
      objc_msgSend(v7, sel_invalidate);
  }
}

uint64_t SystemBannerHostViewController.gesturePriorityAssertion.setter(uint64_t a1)
{
  uint64_t v1;

  SystemBannerHostViewController.gesturePriorityAssertion.willset();
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_gesturePriorityAssertion) = a1;
  return OUTLINED_FUNCTION_0_101();
}

uint64_t SystemBannerHostViewController.activityUUID.getter()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);

  OUTLINED_FUNCTION_33_0();
  v0 = OUTLINED_FUNCTION_50();
  return v1(v0);
}

uint64_t SystemBannerHostViewController.isSystemAperturePresentation.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_isSystemAperturePresentation);
}

void SystemBannerHostViewController.hasPresentedFullScreenCallUI.getter()
{
  SystemBannerHostViewController.hasPresentedFullScreenCallUI.getter((SEL *)&selRef_hasPresentedFullScreenCallUI);
}

void SystemBannerHostViewController.isPresentingFullScreenCallUI.getter()
{
  SystemBannerHostViewController.hasPresentedFullScreenCallUI.getter((SEL *)&selRef_isPresentingFullScreenCallUI);
}

void SystemBannerHostViewController.hasPresentedFullScreenCallUI.getter(SEL *a1)
{
  uint64_t *v1;
  void *v3;

  v3 = (void *)OUTLINED_FUNCTION_43_6(*v1);
  if (v3)
  {
    objc_msgSend(v3, *a1);
    OUTLINED_FUNCTION_10();
  }
  OUTLINED_FUNCTION_0();
}

uint64_t SystemBannerHostViewController.isMicIndicatorVisible.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  int v29;
  uint64_t result;
  uint64_t v31;

  OUTLINED_FUNCTION_93();
  v3 = v0;
  v4 = type metadata accessor for ConversationControlsAction();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_77();
  v8 = v7 - v6;
  v9 = OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_16_2();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_6_0();
  v12 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v13 = OUTLINED_FUNCTION_42_25(*v0);
  if (!v13)
    goto LABEL_4;
  v15 = (void *)v13;
  v16 = v14;
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v16 + 32))(ObjectType, v16);

  v18 = OUTLINED_FUNCTION_45_10(v2);
  if ((_DWORD)v18)
  {
    OUTLINED_FUNCTION_96_6(v18, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
LABEL_4:
    LODWORD(v19) = 0;
    goto LABEL_16;
  }
  v20 = outlined init with copy of ConversationControlsRecipe(v2, v1);
  OUTLINED_FUNCTION_96_6(v20, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  v21 = v1 + *(int *)(v9 + 60);
  v22 = *(unsigned __int8 *)(v21 + 40);
  if (v22 <= 0xFD)
  {
    if ((v22 & 0x80) != 0)
    {
      v31 = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRetain();
    }
    else
    {
      v31 = *(_QWORD *)v21;
      outlined copy of ConversationControlsRecipe.Actions(*(_QWORD *)v21, *(_QWORD *)(v21 + 8), *(_QWORD *)(v21 + 16), *(_QWORD *)(v21 + 24), *(_QWORD *)(v21 + 32), v22);
    }
  }
  else
  {
    v31 = MEMORY[0x1E0DEE9D8];
  }
  specialized Array.append<A>(contentsOf:)();
  swift_storeEnumTagMultiPayload();
  v19 = *(_QWORD *)(v31 + 16);
  if (v19)
  {
    v23 = v31 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v24 = *(_QWORD *)(v5 + 72);
    swift_bridgeObjectRetain();
    v25 = v19 - 1;
    do
    {
      v26 = v25;
      static ConversationControlsAction.== infix(_:_:)();
      LODWORD(v19) = v27;
      if ((v27 & 1) != 0)
        break;
      v25 = v26 - 1;
      v23 += v24;
    }
    while (v26);
    OUTLINED_FUNCTION_27();
  }
  outlined destroy of AccountUpdateNotice(v8, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsAction);
  v28 = OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_22_29(v28, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
LABEL_16:
  v29 = SBUIIsSystemApertureEnabled();
  result = v19 & (v29 ^ 1);
  if ((v19 & 1) != 0)
  {
    if (v29)
      return OUTLINED_FUNCTION_54_0(*(uint64_t (**)(void))((*v12 & *v3) + 0x550)) == 4;
  }
  return result;
}

void SystemBannerHostViewController.__allocating_init(controlsManager:sizeClass:type:delegate:isSystemAperturePresentation:requesterIdentifier:destination:layoutDescription:defaults:features:notificationCenter:activityUUID:fromActivityManager:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, unint64_t a8)
{
  uint64_t ObjectType;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  OUTLINED_FUNCTION_28_52(a1, a2, a3, a4, a5, a6, a7, a8);
  OUTLINED_FUNCTION_12_3();
  ObjectType = swift_getObjectType();
  OUTLINED_FUNCTION_21_66(ObjectType, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26,
    v27,
    v28,
    v29,
    SHIDWORD(v29),
    v30);
  OUTLINED_FUNCTION_81_1();
}

void SystemBannerHostViewController.init(controlsManager:sizeClass:type:delegate:isSystemAperturePresentation:requesterIdentifier:destination:layoutDescription:defaults:features:notificationCenter:activityUUID:fromActivityManager:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, unint64_t a8)
{
  uint64_t ObjectType;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  OUTLINED_FUNCTION_28_52(a1, a2, a3, a4, a5, a6, a7, a8);
  ObjectType = swift_getObjectType();
  OUTLINED_FUNCTION_21_66(ObjectType, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26,
    v27,
    v28,
    v29,
    SHIDWORD(v29),
    v30);
  OUTLINED_FUNCTION_81_1();
}

BOOL closure #1 in SystemBannerHostViewController.init(controlsManager:sizeClass:type:delegate:isSystemAperturePresentation:requesterIdentifier:destination:layoutDescription:defaults:features:notificationCenter:activityUUID:fromActivityManager:)(_BYTE *a1)
{
  return (*a1 & 1) == 0;
}

void closure #2 in SystemBannerHostViewController.init(controlsManager:sizeClass:type:delegate:isSystemAperturePresentation:requesterIdentifier:destination:layoutDescription:defaults:features:notificationCenter:activityUUID:fromActivityManager:)(_QWORD *a1)
{
  if (*a1)
    dispatch thunk of DispatchWorkItem.isCancelled.getter();
  OUTLINED_FUNCTION_0();
}

uint64_t closure #3 in SystemBannerHostViewController.init(controlsManager:sizeClass:type:delegate:isSystemAperturePresentation:requesterIdentifier:destination:layoutDescription:defaults:features:notificationCenter:activityUUID:fromActivityManager:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 8);
  return swift_retain();
}

uint64_t closure #4 in SystemBannerHostViewController.init(controlsManager:sizeClass:type:delegate:isSystemAperturePresentation:requesterIdentifier:destination:layoutDescription:defaults:features:notificationCenter:activityUUID:fromActivityManager:)(uint64_t *a1, uint64_t a2)
{
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v6;
  uint64_t v7;
  os_log_type_t v8;
  _WORD *v9;

  v6 = *a1;
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v7 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v7, (uint64_t)&static Logger.conversationControls);
  v8 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_51_3(v8))
  {
    v9 = (_WORD *)OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_220_0(v9);
    OUTLINED_FUNCTION_130(&dword_1BD004000, v2, v3, "Running queued invalidation task", v4);
    OUTLINED_FUNCTION_60();
  }

  if (v6)
    dispatch thunk of DispatchWorkItem.perform()();
  return $defer #1 () in closure #4 in SystemBannerHostViewController.init(controlsManager:sizeClass:type:delegate:isSystemAperturePresentation:requesterIdentifier:destination:layoutDescription:defaults:features:notificationCenter:activityUUID:fromActivityManager:)(a2);
}

uint64_t $defer #1 () in closure #4 in SystemBannerHostViewController.init(controlsManager:sizeClass:type:delegate:isSystemAperturePresentation:requesterIdentifier:destination:layoutDescription:defaults:features:notificationCenter:activityUUID:fromActivityManager:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  void *v3;

  v1 = a1 + 16;
  swift_beginAccess();
  result = MEMORY[0x1C3B752C0](v1);
  if (result)
  {
    v3 = (void *)result;
    swift_retain();

    CurrentValueSubject.send(_:)();
    return swift_release();
  }
  return result;
}

void SystemBannerHostViewController.__allocating_init(coder:)(uint64_t a1)
{
  objc_msgSend(OUTLINED_FUNCTION_12_3(), sel_initWithCoder_, a1);
  OUTLINED_FUNCTION_49_5();
  OUTLINED_FUNCTION_0();
}

void SystemBannerHostViewController.init(coder:)()
{
  char *v0;
  char *v1;
  char *v2;
  char *v3;
  uint64_t v4;
  char *v5;
  char *v6;
  char *v7;
  char *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  id v19;
  id v20;

  v1 = v0;
  OUTLINED_FUNCTION_54();
  v2 = &v0[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_notice];
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_QWORD *)v2 + 4) = 0;
  v3 = &v0[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_captureGroupName];
  *(_QWORD *)v3 = 0xD00000000000001ALL;
  *((_QWORD *)v3 + 1) = 0x80000001BD686E80;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController____lazy_storage___captureOnlyBackdropView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_shadowView] = 0;
  v4 = OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_invalidationTaskSubject;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<DispatchWorkItem?, Never>);
  OUTLINED_FUNCTION_14_0();
  *(_QWORD *)&v0[v4] = CurrentValueSubject.init(_:)();
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_invalidationCancellable] = 0;
  v5 = &v0[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_overriddenSystemApertureContent];
  *(_OWORD *)v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;
  *((_OWORD *)v5 + 2) = 0u;
  v5[48] = -1;
  v0[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_isTransitioningToEphemeralSystemApertureContent] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController____lazy_storage___systemApertureAlertingManager] = 0;
  v6 = &v0[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_conversationControlsViewController];
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  v0[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_expandedForMenuPresentation] = 0;
  v7 = &v0[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_requesterIdentifier];
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_layoutDescription] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_panGestureProxy] = 0;
  OUTLINED_FUNCTION_54();
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_dismissalPreventionAssertion] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_gesturePriorityAssertion] = 0;
  v0[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_isPresentingMenu] = 0;
  v0[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_forceSuppressSystemApertureOverAssociatedScene] = 0;
  v0[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_isShowingSystemApertureOverAssociatedScene] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_activeLayoutMode] = 0;
  v0[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_canRequestAlertingAssertion] = 0;
  v8 = &v0[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_nextSystemApertureLayoutMode];
  *(_QWORD *)v8 = 0;
  v8[8] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_contentRole] = 2;
  v9 = OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_leadingViewContainer;
  v10 = objc_allocWithZone((Class)type metadata accessor for SystemApertureContainerView());
  *(_QWORD *)&v0[v9] = OUTLINED_FUNCTION_20_60(v10);
  v11 = OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_trailingViewContainer;
  v12 = OUTLINED_FUNCTION_12_3();
  *(_QWORD *)&v0[v11] = OUTLINED_FUNCTION_20_60(v12);
  v13 = OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_minimalViewContainer;
  v14 = OUTLINED_FUNCTION_12_3();
  *(_QWORD *)&v0[v13] = OUTLINED_FUNCTION_20_60(v14);
  v15 = OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_detachedMinimalViewContainer;
  v16 = OUTLINED_FUNCTION_12_3();
  *(_QWORD *)&v0[v15] = OUTLINED_FUNCTION_20_60(v16);
  v17 = (void *)*MEMORY[0x1E0DAC938];
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_elementIdentifier] = *MEMORY[0x1E0DAC938];
  v18 = OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_keyColor;
  v19 = objc_allocWithZone(MEMORY[0x1E0DC3658]);
  v20 = v17;
  *(_QWORD *)&v1[v18] = objc_msgSend(v19, sel_initWithRed_green_blue_alpha_, 0.192, 0.82, 0.345, 1.0);

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void SystemBannerHostViewController.__deallocating_deinit()
{
  char *v0;
  objc_super v1;

  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_notificationCenter], sel_removeObserver_, v0);
  v1.receiver = v0;
  v1.super_class = (Class)ObjC metadata update function for SystemBannerHostViewController();
  objc_msgSendSuper2(&v1, sel_dealloc);
  OUTLINED_FUNCTION_3_1();
}

void SystemBannerHostViewController.contextMenuWillPresent(_:)(NSObject *a1)
{
  SystemBannerHostViewController.processContextMenuNotification(_:for:)(a1, 0);
}

void SystemBannerHostViewController.contextMenuDidDismiss(_:)(NSObject *a1)
{
  SystemBannerHostViewController.processContextMenuNotification(_:for:)(a1, 1);
}

uint64_t SystemBannerHostViewController.isPresentingMenu.didset(uint64_t result)
{
  unsigned __int8 *v1;
  uint64_t v2;
  unsigned __int8 *v3;
  uint64_t v4;
  unsigned __int8 *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;

  v2 = OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_isPresentingMenu;
  if (v1[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_isPresentingMenu] != (result & 1))
  {
    v3 = v1;
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v4 = type metadata accessor for Logger();
    __swift_project_value_buffer(v4, (uint64_t)&static Logger.conversationControls);
    v5 = v1;
    v6 = Logger.logObject.getter();
    v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v8 = 67109120;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      _os_log_impl(&dword_1BD004000, v6, v7, "[SystemAperture] isPresentingMenu: %{BOOL}d", v8, 8u);
      MEMORY[0x1C3B751B8](v8, -1, -1);

    }
    else
    {

    }
    return (*(uint64_t (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)v5) + 0x440))(v3[v2]);
  }
  return result;
}

uint64_t SystemBannerHostViewController.isPresentingMenu.setter(char a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_isPresentingMenu);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_isPresentingMenu) = a1;
  return SystemBannerHostViewController.isPresentingMenu.didset(v2);
}

void SystemBannerHostViewController.processContextMenuNotification(_:for:)(NSObject *a1, char a2)
{
  NSObject *v2;
  char v3;
  NSObject *v4;
  uint64_t (*v7)(void);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  uint64_t v18;
  NSObject *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  id v32;
  os_log_type_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  os_log_type_t type;
  uint64_t v43[4];
  uint64_t v44;

  v4 = v2;
  v7 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & (uint64_t)v2->isa) + 0x550);
  v8 = v7();
  if (v8 == 4)
  {
    if ((a2 & 1) != 0)
      v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    else
      v3 = 1;
    OUTLINED_FUNCTION_27();
    v8 = SystemBannerHostViewController.isPresentingMenu.setter(v3 & 1);
  }
  if ((unint64_t)(((uint64_t (*)(uint64_t))v7)(v8) - 2) <= 2)
  {
    v2 = a1;
    v9 = Notification.userInfo.getter();
    if (v9)
    {
      a1 = v9;
      v2 = specialized _dictionaryDownCastConditional<A, B, C, D>(_:)(v9);
      OUTLINED_FUNCTION_53();
      if (v2)
      {
        specialized Dictionary.subscript.getter((uint64_t)v2, (uint64_t)v43);
        OUTLINED_FUNCTION_27();
        if (v43[3])
        {
          type metadata accessor for SBUISystemApertureLayoutMode(0);
          if ((OUTLINED_FUNCTION_97() & 1) != 0)
          {
            v10 = v44;
            if ((unint64_t)(v44 - 2) <= 2)
            {
              if (v7() != v10)
              {
                if (one-time initialization token for conversationControls != -1)
                  swift_once();
                v11 = OUTLINED_FUNCTION_17_2();
                v12 = OUTLINED_FUNCTION_79_16(v11, (uint64_t)&static Logger.conversationControls);
                OUTLINED_FUNCTION_145_5();
                v13 = OUTLINED_FUNCTION_232();
                if (OUTLINED_FUNCTION_4_14(v13))
                {
                  type = v3;
                  v14 = OUTLINED_FUNCTION_105();
                  v43[0] = OUTLINED_FUNCTION_105();
                  *(_DWORD *)v14 = 136446722;
                  if ((a2 & 1) != 0)
                    v15 = 0x696D736944646964;
                  else
                    v15 = 0x736572506C6C6977;
                  if ((a2 & 1) != 0)
                    v16 = 0xEA00000000007373;
                  else
                    v16 = 0xEB00000000746E65;
                  v44 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v15, v16, v43);
                  OUTLINED_FUNCTION_17_56();
                  OUTLINED_FUNCTION_27();
                  *(_WORD *)(v14 + 12) = 2082;
                  v17 = (id)SBUISystemApertureLayoutModeDescription();
                  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                  v19 = a1;
                  v21 = v20;

                  getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v18, v21, v43);
                  OUTLINED_FUNCTION_135_4();
                  v22 = OUTLINED_FUNCTION_53();
                  *(_WORD *)(v14 + 22) = 2082;
                  ((void (*)(uint64_t))v7)(v22);
                  v23 = (id)SBUISystemApertureLayoutModeDescription();
                  OUTLINED_FUNCTION_75_2();
                  OUTLINED_FUNCTION_84_10();
                  OUTLINED_FUNCTION_56_23(v24, v25, v43);
                  OUTLINED_FUNCTION_135_4();

                  OUTLINED_FUNCTION_54_1();
                  _os_log_impl(&dword_1BD004000, v4, type, "[SystemAperture] %{public}s systemApertureLayoutMode %{public}s != activeLayoutMode %{public}s", (uint8_t *)v14, 0x20u);
                  swift_arrayDestroy();
                  OUTLINED_FUNCTION_60();
                }

              }
              if (one-time initialization token for conversationControls != -1)
                swift_once();
              v31 = OUTLINED_FUNCTION_17_2();
              v32 = OUTLINED_FUNCTION_79_16(v31, (uint64_t)&static Logger.conversationControls);
              OUTLINED_FUNCTION_145_5();
              v33 = OUTLINED_FUNCTION_369();
              if (os_log_type_enabled(v4, v33))
              {
                v34 = OUTLINED_FUNCTION_105();
                v44 = OUTLINED_FUNCTION_105();
                *(_DWORD *)v34 = 136446466;
                if ((a2 & 1) != 0)
                  v35 = 0x696D736944646964;
                else
                  v35 = 0x736572506C6C6977;
                if ((a2 & 1) != 0)
                  v36 = 0xEA00000000007373;
                else
                  v36 = 0xEB00000000746E65;
                v43[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v35, v36, &v44);
                OUTLINED_FUNCTION_137_0();
                v37 = OUTLINED_FUNCTION_13_3();
                *(_WORD *)(v34 + 12) = 2082;
                ((void (*)(uint64_t))v7)(v37);
                v38 = (id)SBUISystemApertureLayoutModeDescription();
                v39 = OUTLINED_FUNCTION_75_2();
                OUTLINED_FUNCTION_84_10();
                v43[0] = v39;
                v43[1] = v10;
                v40 = String.init<A>(reflecting:)();
                v43[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v40, v41, &v44);
                UnsafeMutableRawBufferPointer.copyMemory(from:)();

                OUTLINED_FUNCTION_27();
                OUTLINED_FUNCTION_26_6(&dword_1BD004000, v4, v33, "[SystemAperture] %{public}s with activeLayoutMode: %{public}s", (uint8_t *)v34);
                OUTLINED_FUNCTION_25_6();
                OUTLINED_FUNCTION_60();
              }

              return;
            }
          }
        }
        else
        {
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v43, &demangling cache variable for type metadata for Any?);
        }
      }
    }
  }
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v26 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v26, (uint64_t)&static Logger.conversationControls);
  v27 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_51_3(v27))
  {
    v28 = (uint8_t *)OUTLINED_FUNCTION_105();
    v43[0] = OUTLINED_FUNCTION_105();
    *(_DWORD *)v28 = 136446210;
    if ((a2 & 1) != 0)
      v29 = 0x696D736944646964;
    else
      v29 = 0x736572506C6C6977;
    if ((a2 & 1) != 0)
      v30 = 0xEA00000000007373;
    else
      v30 = 0xEB00000000746E65;
    v44 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v29, v30, v43);
    OUTLINED_FUNCTION_31_3();
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_48(&dword_1BD004000, v2, (os_log_type_t)a1, "[SystemAperture] %{public}s (not in System Aperture)", v28);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

}

uint64_t specialized _dictionaryDownCastConditional<A, B, C, D>(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  unint64_t v5;
  int64_t v6;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  int64_t i;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  _OWORD v15[2];
  _OWORD v16[2];
  _OWORD v17[2];
  _OWORD v18[2];
  _BYTE __dst[72];
  _BYTE __src[72];
  _QWORD v21[6];

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<ContextMenuNotificationUserInfoKey, Any>);
    v2 = static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9E0];
  }
  specialized _NativeDictionary.makeIterator()(v21, a1);
  v3 = v21[0];
  v4 = v21[3];
  v5 = v21[4];
  v14 = v21[1];
  v6 = (unint64_t)(v21[2] + 64) >> 6;
  swift_bridgeObjectRetain();
  result = swift_retain();
  if (!v5)
    goto LABEL_6;
LABEL_5:
  v8 = (v5 - 1) & v5;
  v9 = __clz(__rbit64(v5)) | (v4 << 6);
  for (i = v4; ; v9 = __clz(__rbit64(v12)) + (i << 6))
  {
    outlined init with copy of AnyHashable(*(_QWORD *)(v3 + 48) + 40 * v9, (uint64_t)__src);
    outlined init with copy of Any(*(_QWORD *)(v3 + 56) + 32 * v9, (uint64_t)&__src[40]);
    memcpy(__dst, __src, sizeof(__dst));
    outlined init with copy of AnyHashable((uint64_t)__dst, (uint64_t)v15);
    if (!swift_dynamicCast())
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)__dst, (uint64_t *)&demangling cache variable for type metadata for (key: AnyHashable, value: Any));
      swift_release();
      outlined consume of [String : Application].Iterator._Variant();
      swift_release();
      return 0;
    }
    outlined init with copy of Any((uint64_t)&__dst[40], (uint64_t)v15);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)__dst, (uint64_t *)&demangling cache variable for type metadata for (key: AnyHashable, value: Any));
    outlined init with take of Any(v15, v16);
    outlined init with take of Any(v16, v17);
    outlined init with take of Any(v17, v18);
    outlined init with take of Any(v18, v15);
    result = (uint64_t)specialized _NativeDictionary._unsafeInsertNew(key:value:)(v15, v2);
    v4 = i;
    v5 = v8;
    if (v8)
      goto LABEL_5;
LABEL_6:
    v11 = v4 + 1;
    if (__OFADD__(v4, 1))
      break;
    if (v11 >= v6)
      goto LABEL_26;
    v12 = *(_QWORD *)(v14 + 8 * v11);
    i = v4 + 1;
    if (!v12)
    {
      i = v4 + 2;
      if (v4 + 2 >= v6)
        goto LABEL_26;
      v12 = *(_QWORD *)(v14 + 8 * i);
      if (!v12)
      {
        i = v4 + 3;
        if (v4 + 3 >= v6)
          goto LABEL_26;
        v12 = *(_QWORD *)(v14 + 8 * i);
        if (!v12)
        {
          i = v4 + 4;
          if (v4 + 4 >= v6)
            goto LABEL_26;
          v12 = *(_QWORD *)(v14 + 8 * i);
          if (!v12)
          {
            i = v4 + 5;
            if (v4 + 5 >= v6)
              goto LABEL_26;
            v12 = *(_QWORD *)(v14 + 8 * i);
            if (!v12)
            {
              v13 = v4 + 6;
              while (v13 < v6)
              {
                v12 = *(_QWORD *)(v14 + 8 * v13++);
                if (v12)
                {
                  i = v13 - 1;
                  goto LABEL_21;
                }
              }
LABEL_26:
              swift_release();
              outlined consume of [String : Application].Iterator._Variant();
              return v2;
            }
          }
        }
      }
    }
LABEL_21:
    v8 = (v12 - 1) & v12;
  }
  __break(1u);
  return result;
}

void SystemBannerHostViewController.handleSceneStateChangeNotification(_:)()
{
  _QWORD *v0;
  NSObject *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  char v12;
  _QWORD *v13;
  uint64_t v14;
  id v15;
  os_log_type_t v16;
  uint8_t *v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  OUTLINED_FUNCTION_280_0();
  v50 = v2;
  v51 = v3;
  v4 = v0;
  v5 = Notification.object.getter();
  if (!v39)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v36, &demangling cache variable for type metadata for Any?);
    goto LABEL_15;
  }
  OUTLINED_FUNCTION_59(v5, &lazy cache variable for type metadata for UIWindowScene);
  v6 = OUTLINED_FUNCTION_97();
  if ((v6 & 1) == 0)
  {
LABEL_15:
    OUTLINED_FUNCTION_21_3();
    return;
  }
  v7 = OUTLINED_FUNCTION_9(v6, sel_view);
  if (v7)
  {
    v8 = v7;
    objc_msgSend(v7, sel_window);

    v10 = OUTLINED_FUNCTION_2_11(v9, sel_windowScene);
    OUTLINED_FUNCTION_18_17();
    if (v1)
    {
      v11 = v35;
      v12 = static NSObject.== infix(_:_:)();

      if ((v12 & 1) != 0)
      {
        v13 = (_QWORD *)MEMORY[0x1E0DEEDD8];
        if (OUTLINED_FUNCTION_181_2(**(_QWORD **)((char *)v4
                                                 + OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_trailingViewContainer)))
        {
          type metadata accessor for SystemApertureInCallWaveformTrailingView();
          swift_dynamicCastClass();
          OUTLINED_FUNCTION_4_39();
          if (one-time initialization token for conversationControls != -1)
            swift_once();
          v14 = OUTLINED_FUNCTION_17_2();
          v15 = OUTLINED_FUNCTION_79_16(v14, (uint64_t)&static Logger.conversationControls);
          OUTLINED_FUNCTION_268_3();
          v16 = OUTLINED_FUNCTION_251_0();
          if (OUTLINED_FUNCTION_35(v1))
          {
            v17 = (uint8_t *)OUTLINED_FUNCTION_105();
            OUTLINED_FUNCTION_105();
            *(_DWORD *)v17 = 136446210;
            OUTLINED_FUNCTION_8_64(*(uint64_t (**)(void))((*v13 & *v4) + 0x550));
            v18 = (id)SBUISystemApertureLayoutModeDescription();
            OUTLINED_FUNCTION_75_2();
            OUTLINED_FUNCTION_84_10();
            v37 = v13;
            v19 = String.init<A>(reflecting:)();
            v36 = OUTLINED_FUNCTION_16_26(v19, v20, v21, v22, v23);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();

            OUTLINED_FUNCTION_27();
            OUTLINED_FUNCTION_48(&dword_1BD004000, v1, v16, "Updating waveform for scene state change, layout mode: %{public}s", v17);
            OUTLINED_FUNCTION_21();
            OUTLINED_FUNCTION_60();
          }

          v24 = OUTLINED_FUNCTION_8_64(*(uint64_t (**)(void))((*v13 & *v4) + 0x550));
          SystemBannerHostViewController.updateWaveformForLayoutMode(_:)(v24, v25, v26, v27, v28, v29, v30, v31, v32, v33, SHIDWORD(v33), v34, v35, v36, (uint64_t)v37, v38, v39, v40, v41,
            v42,
            v43,
            v44,
            v45,
            v46,
            v47,
            v48,
            v49);
        }
      }

    }
    else
    {

    }
    goto LABEL_15;
  }

  __break(1u);
}

void SystemBannerHostViewController.callDisplayContextChanged(_:)(int a1)
{
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v5;
  os_log_type_t v6;
  _WORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  _QWORD v14[6];

  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v5 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v5, (uint64_t)&static Logger.conversationControls);
  v6 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_51_3(v6))
  {
    v7 = (_WORD *)OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_220_0(v7);
    OUTLINED_FUNCTION_130(&dword_1BD004000, v1, v2, "triggering an update to conversationControlsView because callDisplayContextChanged", v3);
    OUTLINED_FUNCTION_60();
  }

  v8 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  OUTLINED_FUNCTION_39_6();
  if ((OUTLINED_FUNCTION_279_3(v9) & 1) == 0)
    goto LABEL_11;
  v10 = Notification.object.getter();
  if (!v14[3])
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v14, &demangling cache variable for type metadata for Any?);
LABEL_11:
    (*(void (**)(_QWORD *__return_ptr))((*v8 & (uint64_t)v1->isa) + 0x1F0))(v14);
    OUTLINED_FUNCTION_39_6();
    OUTLINED_FUNCTION_220_1(v11);
    OUTLINED_FUNCTION_39_6();
    (*(void (**)(_QWORD *))(v12 + 1048))(v14);
    outlined destroy of ConversationControlsType((uint64_t)v14);
    return;
  }
  OUTLINED_FUNCTION_59(v10, (unint64_t *)&lazy cache variable for type metadata for TUCall);
  if ((OUTLINED_FUNCTION_97() & 1) == 0)
    goto LABEL_11;
  objc_msgSend(v13, sel_status);
  OUTLINED_FUNCTION_14_18();
  if (a1 != 4)
    goto LABEL_11;
}

Swift::Void __swiftcall SystemBannerHostViewController.viewDidLoad()()
{
  _BYTE *v0;
  _BYTE *v1;
  id v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  id v34;
  void *v35;
  void *v36;
  id v37;
  id v38;
  Class isa;
  objc_super v40;

  v1 = v0;
  v40.receiver = v0;
  v40.super_class = (Class)ObjC metadata update function for SystemBannerHostViewController();
  v2 = objc_msgSendSuper2(&v40, sel_viewDidLoad);
  v3 = OUTLINED_FUNCTION_25_1((uint64_t)v2, sel_view);
  if (!v3)
  {
    __break(1u);
    goto LABEL_10;
  }
  v4 = v3;
  OUTLINED_FUNCTION_108_8();
  v6 = v5;
  objc_msgSend(v4, sel_insertSubview_atIndex_, v5, 0);

  OUTLINED_FUNCTION_108_8();
  v8 = v7;
  objc_msgSend(v7, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1BD644140;
  OUTLINED_FUNCTION_108_8();
  v11 = objc_msgSend(v10, sel_topAnchor);
  OUTLINED_FUNCTION_26_2();
  v13 = OUTLINED_FUNCTION_123(v12, sel_view);
  if (!v13)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v14 = v13;
  v15 = objc_msgSend(v13, sel_topAnchor);
  OUTLINED_FUNCTION_18_11();
  v16 = OUTLINED_FUNCTION_95_13();
  OUTLINED_FUNCTION_18_17();

  *(_QWORD *)(v9 + 32) = v14;
  OUTLINED_FUNCTION_108_8();
  v18 = objc_msgSend(v17, sel_leadingAnchor);
  OUTLINED_FUNCTION_26_2();
  v20 = OUTLINED_FUNCTION_123(v19, sel_view);
  if (!v20)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v21 = v20;
  v22 = objc_msgSend(v20, sel_leadingAnchor);
  OUTLINED_FUNCTION_18_11();
  v23 = OUTLINED_FUNCTION_95_13();
  OUTLINED_FUNCTION_18_17();

  *(_QWORD *)(v9 + 40) = v21;
  OUTLINED_FUNCTION_108_8();
  v25 = objc_msgSend(v24, sel_bottomAnchor);
  OUTLINED_FUNCTION_26_2();
  v27 = OUTLINED_FUNCTION_123(v26, sel_view);
  if (!v27)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v28 = v27;
  v29 = objc_msgSend(v27, sel_bottomAnchor);
  OUTLINED_FUNCTION_18_11();
  v30 = OUTLINED_FUNCTION_95_13();
  OUTLINED_FUNCTION_18_17();

  *(_QWORD *)(v9 + 48) = v28;
  OUTLINED_FUNCTION_108_8();
  v32 = objc_msgSend(v31, sel_trailingAnchor);
  OUTLINED_FUNCTION_26_2();
  v34 = OUTLINED_FUNCTION_123(v33, sel_view);
  if (!v34)
  {
LABEL_13:
    __break(1u);
    return;
  }
  v35 = v34;
  v36 = (void *)objc_opt_self();
  v37 = objc_msgSend(v35, sel_trailingAnchor);

  v38 = objc_msgSend(v8, sel_constraintEqualToAnchor_, v37);
  *(_QWORD *)(v9 + 56) = v38;
  specialized Array._endMutation()();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  isa = Array._bridgeToObjectiveC()().super.isa;
  OUTLINED_FUNCTION_27();
  objc_msgSend(v36, sel_activateConstraints_, isa);

  if (v1[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_isSystemAperturePresentation] == 1)
    SystemBannerHostViewController.updateSystemApertureElement()();
}

void SystemBannerHostViewController.viewWillTransition(to:with:)(void *a1)
{
  NSObject *v1;
  NSObject *v2;
  double v4;
  objc_super *v5;
  SEL v6;
  double v7;
  double v8;
  double v9;
  double v10;
  uint64_t v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char aBlock;
  void *v30;
  void *v31;
  NSObject *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v2 = v1;
  swift_getObjectType();
  ObjC metadata update function for SystemBannerHostViewController();
  v4 = OUTLINED_FUNCTION_235();
  objc_msgSendSuper2(v5, v6, a1, v4);
  -[NSObject preferredContentSize](v1, sel_preferredContentSize);
  v8 = v7;
  v10 = v9;
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v11 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v11, (uint64_t)&static Logger.conversationControls);
  v12 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_4_14(v12))
  {
    v13 = OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_105();
    *(_DWORD *)v13 = 136446722;
    v14 = _typeName(_:qualified:)();
    OUTLINED_FUNCTION_132(v14, v15, v16, v17);
    OUTLINED_FUNCTION_88_10();
    OUTLINED_FUNCTION_54_1();
    *(_WORD *)(v13 + 12) = 2082;
    v18 = OUTLINED_FUNCTION_235();
    v19 = MEMORY[0x1C3B7379C](v18);
    OUTLINED_FUNCTION_132(v19, v20, v21, v22);
    OUTLINED_FUNCTION_88_10();
    v23 = OUTLINED_FUNCTION_54_1();
    *(_WORD *)(v13 + 22) = 2082;
    v24 = MEMORY[0x1C3B7379C](v23, v8, v10);
    OUTLINED_FUNCTION_132(v24, v25, v26, v27);
    OUTLINED_FUNCTION_88_10();
    OUTLINED_FUNCTION_54_1();
    OUTLINED_FUNCTION_85_15(&dword_1BD004000, v1, v28, "[%{public}s] willTransition(to size: %{public}s, with coordinator:) , preffered contentSize %{public}s");
    OUTLINED_FUNCTION_100_6();
    OUTLINED_FUNCTION_60();
  }

  aBlock = MEMORY[0x1E0C809B0];
  v30 = OUTLINED_FUNCTION_224((uint64_t)&block_descriptor_63, v33, v35, MEMORY[0x1E0C809B0], 1107296256, v37, v39);
  *(_QWORD *)(OUTLINED_FUNCTION_7_0() + 16) = v2;
  v31 = OUTLINED_FUNCTION_224((uint64_t)&block_descriptor_3_1, v34, v36, aBlock, 1107296256, v38, v40);
  v32 = v2;
  swift_release();
  objc_msgSend(a1, sel_animateAlongsideTransition_completion_, v30, v31);
  _Block_release(v31);
  _Block_release(v30);
}

void closure #2 in SystemBannerHostViewController.viewWillTransition(to:with:)(int a1, id a2)
{
  id v3;
  void *v4;
  id v5;
  id v6;

  v3 = objc_msgSend(a2, sel_view);
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v3, sel_setNeedsLayout);

    v5 = objc_msgSend(a2, sel_view);
    if (v5)
    {
      v6 = v5;
      objc_msgSend(v5, sel_layoutIfNeeded);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

Swift::Void __swiftcall SystemBannerHostViewController.viewWillLayoutSubviews()()
{
  _QWORD *v0;
  id v1;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)ObjC metadata update function for SystemBannerHostViewController();
  v1 = objc_msgSendSuper2(&v2, sel_viewWillLayoutSubviews);
  (*(void (**)(id))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x400))(v1);
  OUTLINED_FUNCTION_3_1();
}

Swift::Void __swiftcall SystemBannerHostViewController.didMove(toParent:)(UIViewController_optional *toParent)
{
  void *v1;
  char v3;
  objc_super v4;

  v4.receiver = v1;
  v4.super_class = (Class)ObjC metadata update function for SystemBannerHostViewController();
  -[UIViewController_optional didMoveToParentViewController:](&v4, sel_didMoveToParentViewController_, toParent);
  if (toParent)
  {
    OUTLINED_FUNCTION_83_17();
    if (v3)
      SystemBannerHostViewController.updateSystemApertureElement()();
  }
  OUTLINED_FUNCTION_36();
}

Swift::Void __swiftcall SystemBannerHostViewController.updatePreferredContentSize()()
{
  _QWORD *v0;
  void *v1;
  id v2;

  if (*((_BYTE *)v0 + OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_isSystemAperturePresentation) == 1)
  {
    (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x5E0))();
  }
  else
  {
    v1 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2D0))();
    if (v1)
    {
      v2 = v1;
      objc_msgSend(v1, sel_preferredContentSize);
      objc_msgSend(v0, sel_setPreferredContentSize_);

    }
    else
    {
      OUTLINED_FUNCTION_3_1();
    }
  }
}

Swift::Void __swiftcall SystemBannerHostViewController.updateControlsPresentationSize(_:)(CGSize a1)
{
  uint64_t *v1;
  double v2;
  void (*v3)(double);
  void *v4;

  if (OUTLINED_FUNCTION_42_25(*v1))
  {
    OUTLINED_FUNCTION_172_1();
    v2 = OUTLINED_FUNCTION_235();
    v3(v2);
    OUTLINED_FUNCTION_0_77(v4);
  }
  else
  {
    OUTLINED_FUNCTION_43_1();
  }
}

Swift::Void __swiftcall SystemBannerHostViewController.updateControlsCornerRadius()()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  if (OUTLINED_FUNCTION_42_25(*v0))
  {
    v2 = v1;
    v3 = OUTLINED_FUNCTION_172_1();
    (*(void (**)(uint64_t, uint64_t))(v2 + 136))(v3, v2);
    OUTLINED_FUNCTION_7_1(v4);
  }
  else
  {
    OUTLINED_FUNCTION_36();
  }
}

uint64_t SystemBannerHostViewController.updateConversationControlsViewController(type:sizeClass:fromActivityManager:)()
{
  _QWORD *v0;

  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x420))();
  return 1;
}

void SystemBannerHostViewController.updateContent(for:using:controllingWith:fromActivityManager:)(uint64_t a1, uint8_t *a2, int a3, void *a4, int a5)
{
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  int *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  char *v31;
  _QWORD *v32;
  uint64_t (*v33)(__n128);
  char v34;
  BOOL v35;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, char *, uint64_t);
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  os_log_type_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  _QWORD *v54;
  int v55;
  id v56;
  uint64_t v57;
  int v58;
  char *v59;
  void *v60;
  uint64_t (**v61)(uint64_t, uint64_t);
  uint64_t v62;
  NSObject *v63;
  os_log_type_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  NSObject *v99;
  os_log_type_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  unint64_t v127;
  uint64_t v128;
  uint8_t **v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  NSObject *v141;
  os_log_type_t v142;
  _BOOL4 v143;
  uint8_t *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  NSObject *v156;
  os_log_type_t v157;
  uint8_t *v158;
  uint64_t v159;
  unint64_t v160;
  uint64_t v161;
  uint64_t *v162;
  uint64_t v163;
  char v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  NSObject *v170;
  os_log_type_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  unint64_t v182;
  unint64_t v183;
  uint64_t v184;
  uint64_t v185;
  unint64_t v186;
  uint64_t v187;
  unint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint8_t *v191;
  uint64_t v192;
  id v193;
  uint64_t v194;
  uint64_t v195;
  char *v196;
  NSObject *v197;
  os_log_type_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  unint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  id v214;
  uint64_t v215;
  NSObject *v216;
  os_log_type_t v217;
  _WORD *v218;
  uint64_t v219;
  char *v220;
  _BYTE *v221;
  char v222;
  char v223;
  id v224;
  void *v225;
  void *v226;
  id v227;
  uint64_t v228;
  char *v229;
  _BYTE *v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  unint64_t v234;
  uint64_t v235;
  uint64_t v236;
  NSObject *v237;
  id v238;
  _QWORD *v239;
  uint64_t v240;
  char v241;
  uint64_t v242;
  uint64_t v243;
  NSObject *v244;
  os_log_type_t v245;
  uint8_t *v246;
  uint64_t v247;
  uint64_t v248;
  char *v249;
  uint64_t v250;
  char *v251;
  _BYTE *v252;
  _QWORD v253[3];
  uint64_t v254;
  _QWORD *v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint8_t *v259;
  uint64_t v260;
  _QWORD *v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t (*v268)(void);
  uint64_t v269;
  id v270;
  uint64_t v271;
  uint64_t v272;
  char *v273;
  uint64_t v274;
  int8x16_t v275;
  int8x16_t v276;
  char v277;
  uint64_t v278;
  uint64_t v279;
  int8x16_t v280;
  int8x16_t v281;
  unsigned __int8 v282;
  uint64_t aBlock;
  int8x16_t v284;
  int8x16_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  __int128 v289;
  __int128 v290;
  char v291;
  uint64_t v292[4];

  v259 = a2;
  v6 = v5;
  LODWORD(v271) = a5;
  v270 = a4;
  LODWORD(v264) = a3;
  v272 = a1;
  v253[1] = type metadata accessor for DispatchWorkItemFlags();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_41();
  v253[2] = v8;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_41();
  v266 = v10;
  v265 = type metadata accessor for ConversationControlsRecipe();
  v256 = *(_QWORD *)(v265 - 8);
  MEMORY[0x1E0C80A78](v265);
  v262 = (uint64_t)v253 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v257 = v14;
  v258 = (uint64_t)v253 - v13;
  MEMORY[0x1E0C80A78](v15);
  v269 = (uint64_t)v253 - v16;
  v17 = type metadata accessor for Date();
  v267 = *(_QWORD *)(v17 - 8);
  v268 = (uint64_t (*)(void))v17;
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_41();
  v263 = v18;
  v19 = type metadata accessor for UUID();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_77();
  v23 = (char *)(v22 - v21);
  v24 = (int *)type metadata accessor for HUDActivityManager.BannerUpdate(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)v253 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = MEMORY[0x1E0C80A78](v28);
  v31 = (char *)v253 - v30;
  v32 = *(_QWORD **)&v5[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_features];
  v33 = *(uint64_t (**)(__n128))((*MEMORY[0x1E0DEEDD8] & *v32) + 0xC8);
  v255 = v32;
  v34 = v33(v29);
  v273 = v6;
  if ((v34 & 1) == 0
    || (v6[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_isSystemAperturePresentation] & 1) != 0
    || (v271 & 1) != 0)
  {
    goto LABEL_25;
  }
  outlined init with copy of ConversationControlsType(v272, (uint64_t)&aBlock);
  switch(v286)
  {
    case 3u:
      swift_bridgeObjectRelease();
LABEL_18:
      v38 = 0x4089000000000000;
      goto LABEL_20;
    case 4u:
      v38 = 0x4085E00000000000;
      goto LABEL_20;
    case 6u:
      v35 = (aBlock & 0xFFFFFFFFFFFFFFFELL) == 0x18 || aBlock == 21;
      if (v35 || aBlock == 6)
      {
        OUTLINED_FUNCTION_45_11(v285, v284);
        if (!v37)
          goto LABEL_18;
      }
      break;
  }
  OUTLINED_FUNCTION_25_47();
  v38 = 0x4082C00000000000;
LABEL_20:
  outlined init with copy of ConversationControlsType(v272, (uint64_t)&aBlock);
  LODWORD(v271) = ConversationControlsType.isTemporary.getter();
  v39 = *(void (**)(uint64_t, char *, uint64_t))(v20 + 16);
  v39((uint64_t)v23, &v273[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_activityUUID], v19);
  v40 = &v27[v24[11]];
  *((_QWORD *)v40 + 1) = 0;
  OUTLINED_FUNCTION_54();
  *(_QWORD *)v27 = v38;
  outlined init with copy of ConversationControlsType((uint64_t)&aBlock, (uint64_t)(v27 + 8));
  *((_QWORD *)v27 + 7) = 0;
  v27[64] = 1;
  *((_QWORD *)v40 + 1) = 0;
  swift_unknownObjectWeakAssign();
  v27[65] = v271 & 1;
  v39((uint64_t)&v27[v24[8]], v23, v19);
  v41 = v263;
  static Date.now.getter();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v19);
  OUTLINED_FUNCTION_25_47();
  (*(void (**)(char *, uint64_t, uint64_t (*)(void)))(v267 + 32))(&v27[v24[9]], v41, v268);
  *(_QWORD *)&v27[v24[10]] = 0;
  _s15ConversationKit11ParticipantVWObTm_0((uint64_t)v27, (uint64_t)v31, type metadata accessor for HUDActivityManager.BannerUpdate);
  if (one-time initialization token for shared != -1)
    swift_once();
  (*(void (**)(char *))((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)static BannerActivityManager.shared) + 0x138))(v31);
  v43 = v42;
  swift_release();
  if (v43)
  {
    swift_willThrow();
    outlined destroy of AccountUpdateNotice((uint64_t)v31, type metadata accessor for HUDActivityManager.BannerUpdate);
    return;
  }
  outlined destroy of AccountUpdateNotice((uint64_t)v31, type metadata accessor for HUDActivityManager.BannerUpdate);
  v6 = v273;
LABEL_25:
  v44 = swift_allocObject();
  v45 = v44 + 16;
  v46 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v268 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)v6) + 0x1F0);
  v47 = v268();
  v48 = v272;
  OUTLINED_FUNCTION_65_19(v47, (uint64_t)&aBlock);
  v49 = (uint64_t)&v6[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_controlsType];
  OUTLINED_FUNCTION_2_0();
  v260 = v49;
  outlined assign with take of ConversationControlsType((uint64_t)&aBlock, v49);
  swift_endAccess();
  ConversationControlsType.associatedNotice.getter((uint64_t)&aBlock);
  v50 = (uint64_t)&v6[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_notice];
  OUTLINED_FUNCTION_2_0();
  outlined assign with take of Notice?((uint64_t)&aBlock, v50);
  swift_endAccess();
  v51 = OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_153();
  v271 = *(_QWORD *)(v52 + 472);
  *(_QWORD *)(v51 + 16) = ((uint64_t (*)(void))v271)();
  v261 = (_QWORD *)(v51 + 16);
  v53 = v270;
  if (v270)
    v54 = v270;
  else
    v54 = (_QWORD *)(*(uint64_t (**)(void))((*v46 & *(_QWORD *)v6) + 0x1B8))();
  OUTLINED_FUNCTION_99_8();
  OUTLINED_FUNCTION_62_27();
  v55 = v282;
  v56 = v53;
  OUTLINED_FUNCTION_110_8();
  v57 = OUTLINED_FUNCTION_25_47();
  v267 = v44;
  v263 = v44 + 16;
  v270 = v54;
  if (!v55)
  {
    OUTLINED_FUNCTION_65_19(v57, (uint64_t)&aBlock);
    v58 = v286;
    v57 = OUTLINED_FUNCTION_25_47();
    if (!v58)
    {
      v59 = v6;
      v60 = (void *)(*(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v54) + 0x270))(v57);
      ConversationControlsManager.controlsHUDUpdate(for:)(v60, v61);
      swift_unknownObjectRelease();
      if (one-time initialization token for conversationControls != -1)
        swift_once();
      v62 = OUTLINED_FUNCTION_17_2();
      v63 = __swift_project_value_buffer(v62, (uint64_t)&static Logger.conversationControls);
      outlined init with copy of ControlsHUDUpdate((uint64_t)&aBlock, (uint64_t)&v279);
      outlined init with copy of ControlsHUDUpdate((uint64_t)&aBlock, (uint64_t)&v274);
      swift_retain_n();
      Logger.logObject.getter();
      v64 = OUTLINED_FUNCTION_12_0();
      if (OUTLINED_FUNCTION_4_14(v64))
      {
        v65 = OUTLINED_FUNCTION_105();
        v253[0] = OUTLINED_FUNCTION_105();
        v292[0] = v253[0];
        *(_DWORD *)v65 = 136315650;
        outlined init with copy of ConversationControlsType((uint64_t)&v279, (uint64_t)&v288);
        v73 = v51;
        v74 = specialized >> prefix<A>(_:)((uint64_t)&v288, v66, v67, v68, v69, v70, v71, v72);
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v288, &demangling cache variable for type metadata for ConversationControlsType?);
        v76 = OUTLINED_FUNCTION_162(v74, v75, v292);
        OUTLINED_FUNCTION_130_4(v76);
        swift_bridgeObjectRelease();
        outlined destroy of ControlsHUDUpdate((uint64_t)&v279);
        *(_WORD *)(v65 + 12) = 2080;
        OUTLINED_FUNCTION_2_0();
        v288 = *(_QWORD *)(v73 + 16);
        v77 = OUTLINED_FUNCTION_219_2();
        v79 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v77, v78, v292);
        OUTLINED_FUNCTION_130_4(v79);
        OUTLINED_FUNCTION_217_1();
        OUTLINED_FUNCTION_23_0();
        OUTLINED_FUNCTION_210_1();
        v288 = v278;
        v80 = OUTLINED_FUNCTION_219_2();
        v288 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v80, v81, v292);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        outlined destroy of ControlsHUDUpdate((uint64_t)&v274);
        _os_log_impl(&dword_1BD004000, v63, v48, "Notice being overridden by new notice. Updated oldControlsType to %s, oldSizeClass from %s to %s", (uint8_t *)v65, 0x20u);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_60();
      }
      outlined destroy of ControlsHUDUpdate((uint64_t)&v279);
      OUTLINED_FUNCTION_23_0();
      outlined destroy of ControlsHUDUpdate((uint64_t)&v274);

      v48 = v272;
      v82 = v261;
      outlined assign with copy of ConversationControlsType((__int128 *)&aBlock, v45);
      v83 = v287;
      outlined destroy of ControlsHUDUpdate((uint64_t)&aBlock);
      v57 = OUTLINED_FUNCTION_2_0();
      *v82 = v83;
      v6 = v59;
    }
  }
  v84 = (void *)(*(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v54) + 0x290))(v57);
  if (v84)
  {
    v92 = v84;
    if (objc_msgSend(v84, sel_isContinuitySession))
    {
      OUTLINED_FUNCTION_99_8();
      OUTLINED_FUNCTION_62_27();
      if (v282 == 2)
      {
        OUTLINED_FUNCTION_110_8();
      }
      else if (v282 != 6 || v279 != 5 || (OUTLINED_FUNCTION_45_11(v281, v280), v93))
      {
        OUTLINED_FUNCTION_110_8();
        v94 = OUTLINED_FUNCTION_25_47();
        OUTLINED_FUNCTION_65_19(v94, (uint64_t)&v279);

        v84 = (void *)OUTLINED_FUNCTION_110_8();
        goto LABEL_54;
      }
      v95 = OUTLINED_FUNCTION_25_47();
      OUTLINED_FUNCTION_65_19(v95, (uint64_t)&v279);
      OUTLINED_FUNCTION_232_2();
      if (v277 == 2)
      {
        OUTLINED_FUNCTION_163_2();
      }
      else if (v277 != 6 || v274 != 5 || (OUTLINED_FUNCTION_45_11(v276, v275), v96))
      {
        OUTLINED_FUNCTION_163_2();
        OUTLINED_FUNCTION_110_8();
        if (one-time initialization token for conversationControls != -1)
          swift_once();
        v97 = OUTLINED_FUNCTION_17_2();
        v98 = __swift_project_value_buffer(v97, (uint64_t)&static Logger.conversationControls);
        OUTLINED_FUNCTION_65_19(v98, (uint64_t)&aBlock);
        swift_retain_n();
        v99 = Logger.logObject.getter();
        v100 = static os_log_type_t.error.getter();
        if (OUTLINED_FUNCTION_51_3(v100))
        {
          v101 = OUTLINED_FUNCTION_105();
          LODWORD(v272) = (_DWORD)v6;
          v102 = v101;
          v271 = OUTLINED_FUNCTION_105();
          v274 = v271;
          *(_DWORD *)v102 = 136315394;
          v103 = OUTLINED_FUNCTION_2_0();
          v104 = OUTLINED_FUNCTION_65_19(v103, (uint64_t)&v279);
          v112 = OUTLINED_FUNCTION_176_1(v104, v105, v106, v107, v108, v109, v110, v111);
          v254 = v51;
          v113 = v112;
          v115 = v114;
          OUTLINED_FUNCTION_231_3();
          v116 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v113, v115, &v274);
          OUTLINED_FUNCTION_39_48(v116);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_23_0();
          *(_WORD *)(v102 + 12) = 2080;
          v117 = OUTLINED_FUNCTION_62_27();
          v125 = OUTLINED_FUNCTION_176_1(v117, v118, v119, v120, v121, v122, v123, v124);
          v127 = v126;
          OUTLINED_FUNCTION_231_3();
          v128 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v125, v127, &v274);
          OUTLINED_FUNCTION_39_48(v128);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_25_47();
          _os_log_impl(&dword_1BD004000, v99, (os_log_type_t)v272, "Ignoring HUD update (%s -> %s) because update is disallowed during continuity sessions", (uint8_t *)v102, 0x16u);
          swift_arrayDestroy();
          OUTLINED_FUNCTION_60();
        }
        OUTLINED_FUNCTION_23_0();
        OUTLINED_FUNCTION_25_47();

        v249 = v273;
        OUTLINED_FUNCTION_2_0();
        v250 = *(_QWORD *)(v51 + 16);
        v251 = &v249[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_sizeClass];
        OUTLINED_FUNCTION_2_0();
        *(_QWORD *)v251 = v250;
        OUTLINED_FUNCTION_2_0();
        OUTLINED_FUNCTION_99_8();
        OUTLINED_FUNCTION_2_0();
        OUTLINED_FUNCTION_150_3();
        swift_endAccess();
        lazy protocol witness table accessor for type SystemBannerHostError and conformance SystemBannerHostError();
        OUTLINED_FUNCTION_10_8();
        OUTLINED_FUNCTION_98_6(v252, 3);

        goto LABEL_89;
      }
      OUTLINED_FUNCTION_110_8();
    }

  }
LABEL_54:
  if ((v264 & 1) != 0)
  {
    ConversationControlsType.exclusiveSizeClass.getter((uint64_t)v84, v85, v86, v87, v88, v89, v90, v91);
    if ((v131 & 1) == 0)
    {
      v138 = v130;
      if (one-time initialization token for conversationControls != -1)
        swift_once();
      v139 = OUTLINED_FUNCTION_17_2();
      v140 = __swift_project_value_buffer(v139, (uint64_t)&static Logger.conversationControls);
      OUTLINED_FUNCTION_65_19(v140, (uint64_t)&aBlock);
      v264 = v140;
      v141 = Logger.logObject.getter();
      v142 = static os_log_type_t.default.getter();
      v143 = os_log_type_enabled(v141, v142);
      v254 = v51;
      if (v143)
      {
        v144 = (uint8_t *)OUTLINED_FUNCTION_105();
        v274 = OUTLINED_FUNCTION_105();
        *(_DWORD *)v144 = 136315138;
        v259 = v144 + 4;
        v145 = OUTLINED_FUNCTION_62_27();
        v153 = OUTLINED_FUNCTION_176_1(v145, v146, v147, v148, v149, v150, v151, v152);
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v279, &demangling cache variable for type metadata for ConversationControlsType?);
        v155 = OUTLINED_FUNCTION_162(v153, v154, &v274);
        OUTLINED_FUNCTION_39_48(v155);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_25_47();
        _os_log_impl(&dword_1BD004000, v141, v142, "No size specified for controls update with type %s...", v144, 0xCu);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_60();
      }
      OUTLINED_FUNCTION_25_47();

      v156 = v264;
      Logger.logObject.getter();
      v157 = OUTLINED_FUNCTION_12_0();
      if (OUTLINED_FUNCTION_4_14(v157))
      {
        v158 = (uint8_t *)OUTLINED_FUNCTION_105();
        aBlock = OUTLINED_FUNCTION_105();
        *(_DWORD *)v158 = 136315138;
        v279 = v138;
        v159 = String.init<A>(reflecting:)();
        v161 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v159, v160, &aBlock);
        OUTLINED_FUNCTION_39_48(v161);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BD004000, v156, v48, "... so falling back to expected size %s", v158, 0xCu);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_60();
      }

      v51 = v254;
      v6 = v273;
      v45 = v263;
      v162 = (uint64_t *)&v273[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_sizeClass];
      v130 = OUTLINED_FUNCTION_2_0();
      *v162 = v138;
    }
  }
  else
  {
    v129 = (uint8_t **)&v6[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_sizeClass];
    v130 = OUTLINED_FUNCTION_2_0();
    *v129 = v259;
  }
  ConversationControlsType.exclusiveSizeClass.getter(v130, v131, v132, v133, v134, v135, v136, v137);
  if ((v164 & 1) == 0)
  {
    v165 = v163;
    if (v163 != OUTLINED_FUNCTION_198_0())
    {
      v166 = v45;
      if (one-time initialization token for conversationControls != -1)
        swift_once();
      v167 = OUTLINED_FUNCTION_17_2();
      v168 = __swift_project_value_buffer(v167, (uint64_t)&static Logger.conversationControls);
      OUTLINED_FUNCTION_65_19(v168, (uint64_t)&aBlock);
      v169 = v6;
      v170 = Logger.logObject.getter();
      v171 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v170, v171))
      {
        v172 = OUTLINED_FUNCTION_105();
        v264 = OUTLINED_FUNCTION_105();
        v274 = v264;
        *(_DWORD *)v172 = 136315650;
        v173 = OUTLINED_FUNCTION_62_27();
        v181 = OUTLINED_FUNCTION_176_1(v173, v174, v175, v176, v177, v178, v179, v180);
        v254 = v51;
        v183 = v182;
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v279, &demangling cache variable for type metadata for ConversationControlsType?);
        v184 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v181, v183, &v274);
        OUTLINED_FUNCTION_39_48(v184);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_25_47();
        *(_WORD *)(v172 + 12) = 2080;
        v279 = v165;
        v185 = String.init<A>(reflecting:)();
        v279 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v185, v186, &v274);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v172 + 22) = 2080;
        v279 = OUTLINED_FUNCTION_198_0();
        v187 = String.init<A>(reflecting:)();
        v279 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v187, v188, &v274);
        OUTLINED_FUNCTION_212_1();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1BD004000, v170, v171, "New controls type %s is only valid with size %s, but it's using %s instead.", (uint8_t *)v172, 0x20u);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_60();
      }
      OUTLINED_FUNCTION_25_47();

      v45 = v166;
    }
  }
  v189 = v45;
  if (one-time initialization token for shared != -1)
    swift_once();
  v190 = static ConversationControlsRecipeGenerator.shared;
  v191 = (uint8_t *)OUTLINED_FUNCTION_198_0();
  ((void (*)(uint64_t *__return_ptr))v268)(&aBlock);
  v192 = v266;
  v193 = v270;
  (*(void (**)(uint8_t *, uint64_t *, id))(*(_QWORD *)v190 + 96))(v191, &aBlock, v270);
  OUTLINED_FUNCTION_25_47();
  v194 = v265;
  if (__swift_getEnumTagSinglePayload(v192, 1, v265) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v192, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v195 = OUTLINED_FUNCTION_17_2();
    __swift_project_value_buffer(v195, (uint64_t)&static Logger.conversationControls);
    v196 = v273;
    v197 = Logger.logObject.getter();
    v198 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v197, v198))
    {
      v199 = OUTLINED_FUNCTION_105();
      v200 = OUTLINED_FUNCTION_105();
      v254 = v51;
      v279 = v200;
      *(_DWORD *)v199 = 136315394;
      aBlock = OUTLINED_FUNCTION_198_0();
      v201 = String.init<A>(reflecting:)();
      aBlock = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v201, v202, &v279);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();

      *(_WORD *)(v199 + 12) = 2080;
      ((void (*)(uint64_t *__return_ptr))v268)(&aBlock);
      v210 = specialized >> prefix<A>(_:)((uint64_t)&aBlock, v203, v204, v205, v206, v207, v208, v209);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&aBlock, &demangling cache variable for type metadata for ConversationControlsType?);
      aBlock = OUTLINED_FUNCTION_162(v210, v211, &v279);
      OUTLINED_FUNCTION_212_1();
      OUTLINED_FUNCTION_217_1();

      _os_log_impl(&dword_1BD004000, v197, v198, "[SystemControls] Unable to acquire desired recipe, sizeClass:%s type:%s", (uint8_t *)v199, 0x16u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_2_0();
    v228 = *(_QWORD *)(v51 + 16);
    v229 = &v196[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_sizeClass];
    OUTLINED_FUNCTION_2_0();
    *(_QWORD *)v229 = v228;
    outlined init with copy of ConversationControlsType(v189, (uint64_t)&aBlock);
    OUTLINED_FUNCTION_2_0();
    OUTLINED_FUNCTION_150_3();
    swift_endAccess();
    lazy protocol witness table accessor for type SystemBannerHostError and conformance SystemBannerHostError();
    OUTLINED_FUNCTION_10_8();
    *v230 = 1;
    swift_willThrow();

LABEL_89:
    swift_release();
    swift_release();
    return;
  }
  v212 = v269;
  _s15ConversationKit11ParticipantVWObTm_0(v192, v269, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
  v213 = *(_QWORD *)(v212 + *(int *)(v194 + 72));
  v214 = v273;
  if (v213 == 1
    && v273[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_isSystemAperturePresentation] == 1)
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v215 = OUTLINED_FUNCTION_17_2();
    __swift_project_value_buffer(v215, (uint64_t)&static Logger.conversationControls);
    v216 = Logger.logObject.getter();
    v217 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_51_3(v217))
    {
      v218 = (_WORD *)OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_220_0(v218);
      _os_log_impl(&dword_1BD004000, v216, (os_log_type_t)v214, "systemApertureNotSupported", v191, 2u);
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_2_0();
    v219 = *(_QWORD *)(v51 + 16);
    v220 = &v273[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_sizeClass];
    OUTLINED_FUNCTION_2_0();
    *(_QWORD *)v220 = v219;
    OUTLINED_FUNCTION_99_8();
    OUTLINED_FUNCTION_2_0();
    OUTLINED_FUNCTION_150_3();
    swift_endAccess();
    lazy protocol witness table accessor for type SystemBannerHostError and conformance SystemBannerHostError();
    OUTLINED_FUNCTION_10_8();
    OUTLINED_FUNCTION_98_6(v221, 2);

    outlined destroy of AccountUpdateNotice(v269, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
    goto LABEL_89;
  }
  aBlock = 3;
  v284 = 0u;
  v285 = 0u;
  LOBYTE(v286) = 6;
  static ConversationControlsType.== infix(_:_:)(v272);
  v223 = v222;
  OUTLINED_FUNCTION_25_47();
  if ((v223 & 1) != 0)
  {
    v224 = objc_msgSend(v214, sel_presentableGestureRecognizerPriorityContext);
    if (v224)
    {
      v225 = v224;
      v226 = (void *)MEMORY[0x1C3B72E00](0xD000000000000012, 0x80000001BD686EE0);
      v227 = objc_msgSend(v225, sel_acquireGestureRecognizerDefaultPriorityAssertionForReason_, v226);

      swift_unknownObjectRelease();
    }
    else
    {
      v227 = 0;
    }
    SystemBannerHostViewController.gesturePriorityAssertion.setter((uint64_t)v227);
  }
  v231 = OUTLINED_FUNCTION_7_0();
  v232 = swift_unknownObjectWeakInit();
  OUTLINED_FUNCTION_65_19(v232, (uint64_t)&v279);
  v233 = v258;
  outlined init with copy of ConversationControlsRecipe(v269, v258);
  OUTLINED_FUNCTION_232_2();
  outlined init with copy of ConversationControlsRecipe(v233, v262);
  v234 = (*(unsigned __int8 *)(v256 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v256 + 80);
  v235 = swift_allocObject();
  *(_QWORD *)(v235 + 16) = v231;
  *(_QWORD *)(v235 + 24) = v51;
  v236 = v51;
  v237 = v267;
  *(_QWORD *)(v235 + 32) = v267;
  outlined init with take of ConversationControlsType((__int128 *)&v279, (_OWORD *)(v235 + 40));
  v238 = v270;
  *(_QWORD *)(v235 + 88) = v270;
  _s15ConversationKit11ParticipantVWObTm_0(v233, v235 + v234, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
  swift_retain();
  swift_retain();
  swift_retain();
  v239 = v238;
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  CurrentValueSubject.value.getter();
  OUTLINED_FUNCTION_43();
  if (aBlock)
  {
    dispatch thunk of DispatchWorkItem.cancel()();
    OUTLINED_FUNCTION_43();
  }
  v240 = v263;
  OUTLINED_FUNCTION_2_0();
  outlined init with copy of ConversationControlsType(v240, (uint64_t)&aBlock);
  v288 = 6;
  v289 = 0u;
  v290 = 0u;
  v291 = 6;
  static ConversationControlsType.== infix(_:_:)((uint64_t)&aBlock);
  LOBYTE(v240) = v241;
  outlined destroy of ConversationControlsType((uint64_t)&v288);
  v242 = OUTLINED_FUNCTION_25_47();
  if ((v240 & 1) != 0
    && ((*(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v255) + 0xC0))(v242) & 1) != 0
    && ((*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)v273) + 0x2B8))(),
        partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)(),
        swift_release(),
        CurrentValueSubject.value.getter(),
        OUTLINED_FUNCTION_43(),
        aBlock == 1))
  {
    swift_release();
    outlined destroy of AccountUpdateNotice(v262, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
    OUTLINED_FUNCTION_163_2();
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v254 = v236;
    v243 = OUTLINED_FUNCTION_17_2();
    v244 = __swift_project_value_buffer(v243, (uint64_t)&static Logger.conversationControls);
    Logger.logObject.getter();
    v245 = OUTLINED_FUNCTION_12_0();
    if (os_log_type_enabled(v244, v245))
    {
      v246 = (uint8_t *)OUTLINED_FUNCTION_105();
      *(_WORD *)v246 = 0;
      _os_log_impl(&dword_1BD004000, v244, v245, "Queuing an task for run after invalidation", v246, 2u);
      OUTLINED_FUNCTION_60();
    }

    v285.i64[1] = (uint64_t)partial apply for closure #1 in SystemBannerHostViewController.updateContent(for:using:controllingWith:fromActivityManager:);
    v286 = v235;
    aBlock = MEMORY[0x1E0C809B0];
    v284.i64[0] = 1107296256;
    v284.i64[1] = (uint64_t)thunk for @escaping @callee_guaranteed () -> ();
    v285.i64[0] = (uint64_t)&block_descriptor_18_0;
    _Block_copy(&aBlock);
    v288 = MEMORY[0x1E0DEE9D8];
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))MEMORY[0x1E0DEF4F8]);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    type metadata accessor for DispatchWorkItem();
    swift_allocObject();
    OUTLINED_FUNCTION_311_0();
    v247 = DispatchWorkItem.init(flags:block:)();
    swift_release();
    aBlock = v247;
    partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
    swift_retain();
    CurrentValueSubject.send(_:)();
    OUTLINED_FUNCTION_43();
    OUTLINED_FUNCTION_23_0();
    swift_release();

    outlined destroy of AccountUpdateNotice(v269, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
    swift_release();
  }
  else
  {
    aBlock = 0;
    partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
    CurrentValueSubject.send(_:)();
    OUTLINED_FUNCTION_43();
    v248 = v262;
    closure #1 in SystemBannerHostViewController.updateContent(for:using:controllingWith:fromActivityManager:)(v231, v236, v237, &v274, v239, v262);
    swift_release();

    swift_release();
    outlined destroy of AccountUpdateNotice(v248, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
    OUTLINED_FUNCTION_163_2();
    outlined destroy of AccountUpdateNotice(v269, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
    swift_release();
  }
  swift_release();
}

void closure #1 in SystemBannerHostViewController.updateContent(for:using:controllingWith:fromActivityManager:)(uint64_t a1, uint64_t a2, NSObject *a3, void *a4, _QWORD *a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  BOOL v34;
  int8x16_t v35;
  int8x16_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t (*v39)(void);
  _QWORD *v40;
  char v41;
  id v42;
  void *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  char v49;
  char v50;
  uint64_t ObjectType;
  int v52;
  int v53;
  int v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  void *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  id v71;
  id v72;
  int v73;
  id v74;
  void *v75;
  char *v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  void *v80;
  uint64_t v81;
  void *v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  char v87;
  id v88;
  uint64_t *v89;
  os_log_t v90;
  int8x16_t v91;
  int8x8_t v92;
  void (*v93)(uint64_t *, _UNKNOWN **);
  uint64_t *v94;
  int v95;
  int v96;
  int v97;
  int v98;
  int v99;
  int v100;
  int v101;
  uint64_t *v102;
  int v103;
  int v104;
  uint64_t v105;
  uint64_t v106;
  id v107;
  NSObject *v108;
  os_log_type_t v109;
  int v110;
  _BOOL4 v111;
  uint64_t v112;
  void (*v113)(void);
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  unint64_t v124;
  uint64_t v125;
  os_log_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  int v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v133;
  void (*v134)(uint64_t, uint64_t, void (*)(), uint64_t);
  id v135;
  int v136;
  int v137;
  int v138;
  int v139;
  int v140;
  int v141;
  int v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  os_log_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  _QWORD *v154;
  id v155;
  uint64_t v156;
  uint64_t v157;
  int8x16_t v158;
  int8x16_t v159;
  char v160;
  uint64_t v161;
  int8x16_t v162;
  int8x16_t v163;
  char v164;
  uint64_t v165;
  int8x16_t v166;
  int8x16_t v167;
  unsigned __int8 v168;

  v156 = a6;
  v154 = a5;
  v155 = a4;
  v152 = a2;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v144 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v150 = (uint64_t)&v144 - v12;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v144 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v144 - v17;
  v153 = type metadata accessor for ConversationControlsRecipe();
  v148 = *(_QWORD *)(v153 - 8);
  v19 = *(_QWORD *)(v148 + 64);
  MEMORY[0x1E0C80A78](v153);
  v20 = (char *)&v144 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v149 = (uint64_t)&v144 - v22;
  MEMORY[0x1E0C80A78](v23);
  v147 = (char *)&v144 - v24;
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v144 - v26;
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)&v144 - v29;
  swift_beginAccess();
  v31 = MEMORY[0x1C3B752C0](a1 + 16);
  if (v31)
  {
    v32 = (_QWORD *)v31;
    v145 = v15;
    v151 = OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_isSystemAperturePresentation;
    v33 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    v34 = *(_BYTE *)(v31 + OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_isSystemAperturePresentation) == 1;
    v146 = a3;
    if (!v34)
      goto LABEL_28;
    swift_beginAccess();
    outlined init with copy of ConversationControlsType((uint64_t)&a3[2], (uint64_t)&v165);
    outlined init with copy of ConversationControlsType((uint64_t)&v165, (uint64_t)&v161);
    if (v164 == 2)
    {
      outlined destroy of ConversationControlsType((uint64_t)&v161);
    }
    else if (v164 != 6
           || v161 != 5
           || (v35 = vorrq_s8(v162, v163),
               *(_QWORD *)&vorr_s8(*(int8x8_t *)v35.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v35, v35, 8uLL))))
    {
      outlined destroy of ConversationControlsType((uint64_t)&v161);
      outlined destroy of ConversationControlsType((uint64_t)&v165);
      outlined init with copy of ConversationControlsType((uint64_t)v155, (uint64_t)&v161);
      LODWORD(v144) = 0;
      goto LABEL_18;
    }
    outlined destroy of ConversationControlsType((uint64_t)&v165);
    outlined init with copy of ConversationControlsType((uint64_t)v155, (uint64_t)&v161);
    outlined init with copy of ConversationControlsType((uint64_t)&v161, (uint64_t)&v157);
    if (v160 == 2)
    {
      LODWORD(v144) = 1;
    }
    else
    {
      if (v160 == 6 && v157 == 5)
      {
        v36 = vorrq_s8(v158, v159);
        if (!*(_QWORD *)&vorr_s8(*(int8x8_t *)v36.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v36, v36, 8uLL)))
        {
          LODWORD(v144) = 1;
          goto LABEL_18;
        }
      }
      LODWORD(v144) = 0;
    }
    outlined destroy of ConversationControlsType((uint64_t)&v157);
LABEL_18:
    outlined destroy of ConversationControlsType((uint64_t)&v161);
    v37 = *(_QWORD **)((char *)v32 + OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_features);
    v38 = v33;
    v39 = *(uint64_t (**)(void))((*v33 & *v37) + 0xC0);
    v40 = v37;
    LOBYTE(v39) = v39();

    if ((v39 & 1) != 0)
      v41 = (*(uint64_t (**)(void))((*v38 & *v154) + 0x280))();
    else
      v41 = 0;
    v42 = objc_msgSend(v32, sel_view, v144);
    if (!v42)
    {
      __break(1u);
      goto LABEL_75;
    }
    v43 = v42;
    v44 = (char *)objc_msgSend(v42, sel_SBUISA_layoutMode);

    if ((unint64_t)(v44 - 2) >= 3)
    {
      v33 = (_QWORD *)MEMORY[0x1E0DEEDD8];
      if (!(v41 & 1 | ((v144 & 1) == 0)))
        goto LABEL_24;
    }
    else
    {
      v33 = (_QWORD *)MEMORY[0x1E0DEEDD8];
      if ((v41 & 1) == 0)
      {
LABEL_24:
        v45 = (*(uint64_t (**)(void))((*v33 & *v32) + 0x2D0))();
        if (!v45)
        {
LABEL_28:
          v52 = 1;
          goto LABEL_34;
        }
        v47 = (void *)v45;
        v48 = v46;
        v157 = 7;
        v158 = 0u;
        v159 = 0u;
        v160 = 6;
        static ConversationControlsType.== infix(_:_:)((uint64_t)v155);
        v50 = v49;
        outlined destroy of ConversationControlsType((uint64_t)&v157);
        if ((v50 & 1) != 0)
        {
          ObjectType = swift_getObjectType();
          (*(void (**)(uint64_t, uint64_t))(v48 + 32))(ObjectType, v48);
          if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v153) == 1)
          {

            outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v18, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
            v52 = 0;
          }
          else
          {
            _s15ConversationKit11ParticipantVWObTm_0((uint64_t)v18, (uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
            v157 = 7;
            v158 = 0u;
            v159 = 0u;
            v160 = 6;
            static ConversationControlsType.== infix(_:_:)((uint64_t)v30);
            v54 = v53;

            v52 = v54 ^ 1;
            outlined destroy of ConversationControlsType((uint64_t)&v157);
            outlined destroy of AccountUpdateNotice((uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
          }
        }
        else
        {

          v52 = 1;
        }
        v33 = (_QWORD *)MEMORY[0x1E0DEEDD8];
LABEL_34:
        v55 = (*(uint64_t (**)(void))((*v33 & *v32) + 0x2D0))();
        if (!v55)
        {
LABEL_39:
          v63 = (void *)(*(uint64_t (**)(void))((*v33 & *v32) + 0x320))();
          if (v63)
          {
            v64 = v63;
            objc_msgSend(v63, sel_presentationSize);

          }
          v65 = v154;
          v66 = v156;
          v67 = v153;
          v42 = (id)(*(uint64_t (**)(void))((*v33 & *v32) + 0x1D8))();
          if ((unint64_t)v42 < 2)
            goto LABEL_46;
          if (v42 == (id)2)
          {
            v68 = (uint64_t)v145;
            outlined init with copy of ConversationControlsRecipe(v66, (uint64_t)v145);
            __swift_storeEnumTagSinglePayload(v68, 0, 1, v67);
            v69 = v151;
            v70 = *((_BYTE *)v32 + v151);
            v71 = objc_allocWithZone((Class)type metadata accessor for ConversationNoticeViewController());
            v72 = ConversationNoticeViewController.init(recipe:presentationSize:controlsManager:isSystemAperturePresentation:)(v68, v65, v70);
            outlined init with copy of ConversationControlsType((uint64_t)v155, (uint64_t)&v165);
            v73 = v168;
            outlined destroy of ConversationControlsType((uint64_t)&v165);
            v74 = v72;
            v75 = v74;
            if (v73)
              specialized showContent #1 (_:) in closure #1 in SystemBannerHostViewController.updateContent(for:using:controllingWith:fromActivityManager:)(v74, v32);
            else
              specialized showEphemeralContent #1 (_:) in closure #1 in SystemBannerHostViewController.updateContent(for:using:controllingWith:fromActivityManager:)((uint64_t)v74, (uint64_t)v32, v152, (uint64_t)v146, (uint64_t (*)(uint64_t, uint64_t, uint64_t *, uint64_t))specialized SystemBannerHostViewController.showEphemeralSystemApertureContent(_:overridingSizeClass:overridingControlsType:), (uint64_t (*)(uint64_t, uint64_t))specialized showContent #1 (_:) in closure #1 in SystemBannerHostViewController.updateContent(for:using:controllingWith:fromActivityManager:));

            goto LABEL_69;
          }
          if (v42 == (id)3)
          {
LABEL_46:
            outlined init with copy of ConversationControlsRecipe(v66, (uint64_t)v20);
            v76 = &v20[*(int *)(v67 + 72)];
            v77 = *((_QWORD *)v76 + 1);
            v78 = (void *)*((_QWORD *)v76 + 2);
            v79 = *((_QWORD *)v76 + 3);
            v80 = (void *)*((_QWORD *)v76 + 4);
            v81 = *((_QWORD *)v76 + 5);
            v82 = (void *)*((_QWORD *)v76 + 6);
            v83 = *((_QWORD *)v76 + 7);
            v84 = *((_QWORD *)v76 + 8);
            v85 = v76[72];
            if (*(_QWORD *)v76 == 1)
            {
              v86 = 1;
            }
            else
            {
              outlined consume of SystemApertureElement?(*(void **)v76, v77, v78, v79, v80, v81, v82);
              v86 = 0;
              v77 = 0;
              v78 = 0;
              v79 = 0;
              v80 = 0;
              v81 = 0;
              v82 = 0;
              v83 = 0;
            }
            *(_QWORD *)v76 = v86;
            *((_QWORD *)v76 + 1) = v77;
            *((_QWORD *)v76 + 2) = v78;
            *((_QWORD *)v76 + 3) = v79;
            *((_QWORD *)v76 + 4) = v80;
            *((_QWORD *)v76 + 5) = v81;
            *((_QWORD *)v76 + 6) = v82;
            *((_QWORD *)v76 + 7) = v83;
            *((_QWORD *)v76 + 8) = v84;
            v76[72] = v85;
            ConversationControlsRecipe.copyWithoutSystemApertureViews()((uint64_t)v10);
            __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v67);
            v69 = v151;
            v87 = *((_BYTE *)v32 + v151);
            v88 = objc_allocWithZone((Class)type metadata accessor for ConversationHUDViewController());
            v89 = ConversationHUDViewController.init(recipe:presentationSize:controlsManager:context:)((uint64_t)v10, v65, (v87 & 1) == 0);
            outlined init with copy of ConversationControlsType((uint64_t)v155, (uint64_t)&v165);
            if (v168 == 1)
            {
              swift_bridgeObjectRelease();
              v33 = (_QWORD *)MEMORY[0x1E0DEEDD8];
              v90 = v146;
            }
            else
            {
              v33 = (_QWORD *)MEMORY[0x1E0DEEDD8];
              v90 = v146;
              if (v168 != 6)
                goto LABEL_56;
              v91 = vorrq_s8(v166, v167);
              v92 = vorr_s8(*(int8x8_t *)v91.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v91, v91, 8uLL));
              if (v165 != 2 || *(_QWORD *)&v92)
              {
                if (v165 == 5 && !*(_QWORD *)&v92)
                {
                  v93 = *(void (**)(uint64_t *, _UNKNOWN **))((*MEMORY[0x1E0DEEDD8] & *v32) + 0x2D8);
                  v94 = v89;
                  v93(v89, &protocol witness table for ConversationHUDViewController);

                  v33 = (_QWORD *)MEMORY[0x1E0DEEDD8];
LABEL_59:
                  outlined destroy of AccountUpdateNotice((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
LABEL_69:
                  SystemBannerHostViewController.updateSystemApertureAccessoryViews(recipe:)(v66, v95, v96, v97, v98, v99, v100, v101, v144, (int)v145, (uint64_t)v146, v147, v148, v149, v150, v151, v152, v153, (uint64_t)v154,
                    (uint64_t)v155,
                    v156,
                    v157,
                    v158.i64[0],
                    v158.i64[1]);
                  v143 = (*(uint64_t (**)(uint64_t))((*v33 & *v65) + 0xA10))(1);
                  if ((*(uint64_t (**)(uint64_t))((*v33 & *v32) + 0x1D8))(v143) != 2
                    && *((_BYTE *)v32 + v69) == 1)
                  {
                    SystemBannerHostViewController.updateSystemApertureElement()();
                  }
LABEL_72:

                  return;
                }
LABEL_56:
                specialized showContent #1 (_:) in closure #1 in SystemBannerHostViewController.updateContent(for:using:controllingWith:fromActivityManager:)(v89, v32);

                outlined destroy of AccountUpdateNotice((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
                outlined destroy of ConversationControlsType((uint64_t)&v165);
                goto LABEL_69;
              }
            }
            v102 = v89;
            specialized showEphemeralContent #1 (_:) in closure #1 in SystemBannerHostViewController.updateContent(for:using:controllingWith:fromActivityManager:)((uint64_t)v102, (uint64_t)v32, v152, (uint64_t)v90, (uint64_t (*)(uint64_t, uint64_t, uint64_t *, uint64_t))specialized SystemBannerHostViewController.showEphemeralSystemApertureContent(_:overridingSizeClass:overridingControlsType:), (uint64_t (*)(uint64_t, uint64_t))specialized showContent #1 (_:) in closure #1 in SystemBannerHostViewController.updateContent(for:using:controllingWith:fromActivityManager:));

            goto LABEL_59;
          }
LABEL_75:
          v165 = (uint64_t)v42;
          _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
          __break(1u);
          return;
        }
        v56 = (void *)v55;
        type metadata accessor for ConversationHUDViewController();
        v57 = swift_dynamicCastClass();
        if (v57)
        {
          v58 = (_QWORD *)v57;
          v59 = v33;
          v60 = (uint64_t *)(v152 + 16);
          v61 = (*(uint64_t (**)(void))((*v59 & *v32) + 0x1D8))();
          swift_beginAccess();
          v62 = *v60;
          outlined init with copy of ConversationControlsRecipe(v156, (uint64_t)v27);
          if (v61 == v62)
          {
            outlined destroy of AccountUpdateNotice((uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
            v33 = (_QWORD *)MEMORY[0x1E0DEEDD8];
            if ((v52 & 1) == 0)
              goto LABEL_38;
          }
          else
          {
            v165 = 25;
            v166 = 0u;
            v167 = 0u;
            v168 = 6;
            static ConversationControlsType.== infix(_:_:)((uint64_t)v27);
            v104 = v103;
            outlined destroy of ConversationControlsType((uint64_t)&v165);
            outlined destroy of AccountUpdateNotice((uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
            v33 = (_QWORD *)MEMORY[0x1E0DEEDD8];
            if ((v104 & v52 & 1) == 0)
              goto LABEL_38;
          }
          if (one-time initialization token for conversationControls != -1)
            swift_once();
          v105 = type metadata accessor for Logger();
          __swift_project_value_buffer(v105, (uint64_t)&static Logger.conversationControls);
          v106 = (uint64_t)v147;
          outlined init with copy of ConversationControlsRecipe(v156, (uint64_t)v147);
          v107 = v56;
          v108 = Logger.logObject.getter();
          v109 = static os_log_type_t.default.getter();
          v110 = v109;
          v111 = os_log_type_enabled(v108, v109);
          v155 = v107;
          if (v111)
          {
            v112 = swift_slowAlloc();
            v152 = swift_slowAlloc();
            v165 = v152;
            *(_DWORD *)v112 = 136315394;
            v113 = *(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v58) + 0x378);
            LODWORD(v151) = v110;
            v114 = (uint64_t)v145;
            v146 = v108;
            v113();
            specialized >> prefix<A>(_:)(v114);
            v116 = v115;
            v118 = v117;
            outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v114, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
            v157 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v116, v118, &v165);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();

            *(_WORD *)(v112 + 12) = 2080;
            v144 = v112 + 14;
            outlined init with copy of ConversationControlsRecipe(v106, v114);
            v119 = v153;
            __swift_storeEnumTagSinglePayload(v114, 0, 1, v153);
            specialized >> prefix<A>(_:)(v114);
            v121 = v120;
            v122 = v106;
            v124 = v123;
            outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v114, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
            v125 = v121;
            v33 = (_QWORD *)MEMORY[0x1E0DEEDD8];
            v157 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v125, v124, &v165);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            outlined destroy of AccountUpdateNotice(v122, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
            v126 = v146;
            _os_log_impl(&dword_1BD004000, v146, (os_log_type_t)v151, "[System] Updating controlsView recipe: %s to recipe:%s", (uint8_t *)v112, 0x16u);
            v127 = v152;
            swift_arrayDestroy();
            MEMORY[0x1C3B751B8](v127, -1, -1);
            MEMORY[0x1C3B751B8](v112, -1, -1);

          }
          else
          {

            outlined destroy of AccountUpdateNotice(v106, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
            v114 = (uint64_t)v145;
            v119 = v153;
          }
          v128 = v150;
          (*(void (**)(void))((*v33 & *v58) + 0x378))();
          v129 = v156;
          outlined init with copy of ConversationControlsRecipe(v156, v128);
          __swift_storeEnumTagSinglePayload(v128, 0, 1, v119);
          SystemBannerHostViewController.alertIfNeededForRecipeTransition(from:to:)(v114, v128);
          LODWORD(v153) = v130;
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v128, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
          v131 = v149;
          outlined init with copy of ConversationControlsRecipe(v129, v149);
          v132 = (*(unsigned __int8 *)(v148 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v148 + 80);
          v133 = swift_allocObject();
          _s15ConversationKit11ParticipantVWObTm_0(v131, v133 + v132, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
          *(_QWORD *)(v133 + ((v19 + v132 + 7) & 0xFFFFFFFFFFFFFFF8)) = v58;
          v134 = *(void (**)(uint64_t, uint64_t, void (*)(), uint64_t))((*v33 & *v32) + 0x618);
          v135 = v155;
          v134(v114, v129, partial apply for closure #1 in closure #1 in SystemBannerHostViewController.updateContent(for:using:controllingWith:fromActivityManager:), v133);
          swift_release();

          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v114, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
          SystemBannerHostViewController.updateSystemApertureAccessoryViews(recipe:)(v129, v136, v137, v138, v139, v140, v141, v142, v144, (int)v145, (uint64_t)v146, v147, v148, v149, v150, v151, v152, v153, (uint64_t)v154,
            (uint64_t)v155,
            v156,
            v157,
            v158.i64[0],
            v158.i64[1]);
          (*(void (**)(BOOL))((*v33 & *v154) + 0xA10))((v153 & 1) == 0);
          goto LABEL_72;
        }
LABEL_38:

        goto LABEL_39;
      }
    }
    v52 = 0;
    goto LABEL_34;
  }
}

void closure #1 in closure #1 in SystemBannerHostViewController.updateContent(for:using:controllingWith:fromActivityManager:)(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ConversationControlsRecipe();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of ConversationControlsRecipe(a1, (uint64_t)v9);
  v10 = &v9[*(int *)(v7 + 72)];
  v11 = *((_QWORD *)v10 + 1);
  v12 = (void *)*((_QWORD *)v10 + 2);
  v13 = *((_QWORD *)v10 + 3);
  v14 = (void *)*((_QWORD *)v10 + 4);
  v15 = *((_QWORD *)v10 + 5);
  v16 = (void *)*((_QWORD *)v10 + 6);
  v17 = *((_QWORD *)v10 + 7);
  v18 = *((_QWORD *)v10 + 8);
  v19 = v10[72];
  if (*(_QWORD *)v10 == 1)
  {
    v20 = 1;
  }
  else
  {
    outlined consume of SystemApertureElement?(*(void **)v10, v11, v12, v13, v14, v15, v16);
    v20 = 0;
    v11 = 0;
    v12 = 0;
    v13 = 0;
    v14 = 0;
    v15 = 0;
    v16 = 0;
    v17 = 0;
  }
  *(_QWORD *)v10 = v20;
  *((_QWORD *)v10 + 1) = v11;
  *((_QWORD *)v10 + 2) = v12;
  *((_QWORD *)v10 + 3) = v13;
  *((_QWORD *)v10 + 4) = v14;
  *((_QWORD *)v10 + 5) = v15;
  *((_QWORD *)v10 + 6) = v16;
  *((_QWORD *)v10 + 7) = v17;
  *((_QWORD *)v10 + 8) = v18;
  v10[72] = v19;
  ConversationControlsRecipe.copyWithoutSystemApertureViews()((uint64_t)v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v7);
  (*(void (**)(char *))((*MEMORY[0x1E0DEEDD8] & *a2) + 0x380))(v6);
  outlined destroy of AccountUpdateNotice((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
}

void SystemBannerHostViewController.updateOverriddenSystemApertureTypeIfNeeded(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _OWORD v5[3];
  unsigned __int8 v6;
  _OWORD v7[3];
  unsigned __int8 v8;

  v3 = v1 + OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_overriddenSystemApertureContent;
  OUTLINED_FUNCTION_2_0();
  outlined init with copy of ModifiedContent<<<opaque return type of View.environment<A>(_:)>>.0, _TransactionModifier>(v3, (uint64_t)v5, &demangling cache variable for type metadata for SystemBannerHostViewController.OverriddenSystemApertureContent?);
  if (v6 == 255)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v5, &demangling cache variable for type metadata for SystemBannerHostViewController.OverriddenSystemApertureContent?);
  }
  else
  {
    v7[0] = v5[0];
    v7[1] = v5[1];
    v7[2] = v5[2];
    v8 = v6;
    v4 = *(_QWORD *)&v5[0];
    outlined init with copy of ConversationControlsType(a1, (uint64_t)v5 + 8);
    *(_QWORD *)&v5[0] = v4;
    SystemBannerHostViewController.overriddenSystemApertureContent.setter((uint64_t)v5);
    outlined destroy of SystemBannerHostViewController.OverriddenSystemApertureContent((uint64_t)v7);
  }
}

void SystemBannerHostViewController.updateSystemApertureElement()()
{
  NSObject *v0;
  NSObject *v1;
  uint8_t *v2;
  uint64_t v3;
  char v4;
  unsigned int v5;
  uint64_t v6;
  os_log_type_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  _WORD *v15;
  const char *v16;
  uint64_t v17;
  os_log_type_t v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  _WORD *v26;
  id v27;
  id v28;
  uint64_t v29;
  os_log_type_t v30;
  _WORD *v31;
  uint64_t v32;
  uint64_t v33;
  os_log_type_t v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  _WORD *v42;
  uint64_t v43;
  NSObject *v44;
  NSObject *v45;

  OUTLINED_FUNCTION_83_17();
  if (!v4)
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v17 = OUTLINED_FUNCTION_17_2();
    OUTLINED_FUNCTION_3(v17, (uint64_t)&static Logger.conversationControls);
    v18 = OUTLINED_FUNCTION_229_4();
    if (OUTLINED_FUNCTION_5_9(v18, v19, v20, v21, v22, v23, v24, v25, v43, v44))
    {
      v26 = (_WORD *)OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_52_3(v26);
      v16 = "Unable to updateSystemApertureElement since we are not in SystemAperture";
      goto LABEL_23;
    }
    goto LABEL_24;
  }
  v0 = v1;
  v1 = OUTLINED_FUNCTION_25_1(v3, sel_systemApertureElementContext);
  v5 = -[NSObject isFallbackContext](v1, sel_isFallbackContext);
  OUTLINED_FUNCTION_10();
  if (v5)
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v6 = OUTLINED_FUNCTION_17_2();
    OUTLINED_FUNCTION_3(v6, (uint64_t)&static Logger.conversationControls);
    v7 = OUTLINED_FUNCTION_229_4();
    if (OUTLINED_FUNCTION_5_9(v7, v8, v9, v10, v11, v12, v13, v14, v43, v44))
    {
      v15 = (_WORD *)OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_52_3(v15);
      v16 = "Unable to updateSystemApertureElement without valid context";
      goto LABEL_23;
    }
LABEL_24:
    OUTLINED_FUNCTION_42_0(v45);
    return;
  }
  v27 = -[NSObject isViewLoaded](v0, sel_isViewLoaded);
  if (!(_DWORD)v27
    || (v28 = OUTLINED_FUNCTION_123((uint64_t)v27, sel_parentViewController),
        OUTLINED_FUNCTION_406(v28),
        !v1))
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v33 = OUTLINED_FUNCTION_17_2();
    OUTLINED_FUNCTION_3(v33, (uint64_t)&static Logger.conversationControls);
    v34 = OUTLINED_FUNCTION_229_4();
    if (OUTLINED_FUNCTION_5_9(v34, v35, v36, v37, v38, v39, v40, v41, v43, v44))
    {
      v42 = (_WORD *)OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_52_3(v42);
      v16 = "[SystemAperture] systemApertureElementContext.setElementNeedsUpdate() requires isViewLoaded and parent != nil";
LABEL_23:
      OUTLINED_FUNCTION_130(&dword_1BD004000, v45, (os_log_type_t)v0, v16, (uint8_t *)v1);
      OUTLINED_FUNCTION_60();
    }
    goto LABEL_24;
  }
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v29 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v29, (uint64_t)&static Logger.conversationControls);
  v30 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_5_3(v30))
  {
    v31 = (_WORD *)OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_47_2(v31);
    OUTLINED_FUNCTION_130(&dword_1BD004000, v1, OS_LOG_TYPE_DEFAULT, "[SystemAperture] systemApertureElementContext.setElementNeedsUpdate()", v2);
    OUTLINED_FUNCTION_60();
  }

  objc_msgSend(OUTLINED_FUNCTION_123(v32, sel_systemApertureElementContext), sel_setElementNeedsUpdate);
  swift_unknownObjectRelease();
}

Swift::Void __swiftcall SystemBannerHostViewController.requestPreferredLayoutMode()()
{
  NSObject *v0;
  os_log_type_t v1;
  uint8_t *v2;
  uint64_t v3;
  os_log_type_t v4;
  _WORD *v5;
  uint64_t v6;

  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v3 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v3, (uint64_t)&static Logger.conversationControls);
  v4 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_5_3(v4))
  {
    v5 = (_WORD *)OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_47_2(v5);
    OUTLINED_FUNCTION_130(&dword_1BD004000, v0, v1, "[SystemAperture] systemApertureElementContext.requestTransitionToPreferredLayoutMode()", v2);
    OUTLINED_FUNCTION_60();
  }

  objc_msgSend(OUTLINED_FUNCTION_123(v6, sel_systemApertureElementContext), sel_requestTransitionToPreferredLayoutMode);
  OUTLINED_FUNCTION_9_8();
}

Swift::Void __swiftcall SystemBannerHostViewController.updateSystemApertureElementIsPresentingMenu(_:)(Swift::Bool a1)
{
  uint64_t *v1;
  unint64_t v3;
  void (*v4)(unint64_t);
  char **v5;
  uint64_t v6;

  OUTLINED_FUNCTION_44_26(*v1);
  OUTLINED_FUNCTION_120();
  v3 = OUTLINED_FUNCTION_285_2();
  v4(v3);
  if (a1)
    v5 = &selRef_elementWillPresentMenu;
  else
    v5 = &selRef_elementDidDismissMenu;
  v6 = OUTLINED_FUNCTION_43();
  objc_msgSend(OUTLINED_FUNCTION_123(v6, sel_systemApertureElementContext), *v5);
  OUTLINED_FUNCTION_9_8();
}

void SystemBannerHostViewController.forceSuppressSystemApertureOverAssociatedScene.didset()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;

  v1 = v0;
  v2 = (_BYTE *)(v0
               + OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_forceSuppressSystemApertureOverAssociatedScene);
  swift_beginAccess();
  if (*v2 == 1)
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v3 = type metadata accessor for Logger();
    __swift_project_value_buffer(v3, (uint64_t)&static Logger.conversationControls);
    v4 = Logger.logObject.getter();
    v5 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v6 = 0;
      _os_log_impl(&dword_1BD004000, v4, v5, "[SystemAperture] Forcing aperture suppression", v6, 2u);
      MEMORY[0x1C3B751B8](v6, -1, -1);
    }

    v7 = v1 + OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_nextSystemApertureLayoutMode;
    *(_QWORD *)v7 = 3;
    *(_BYTE *)(v7 + 8) = 0;
    SystemBannerHostViewController.nextSystemApertureLayoutMode.didset();
  }
  SystemBannerHostViewController.updateSystemApertureElement()();
}

void SystemBannerHostViewController.forceSuppressSystemApertureOverAssociatedScene.getter()
{
  OUTLINED_FUNCTION_1_7();
  OUTLINED_FUNCTION_32();
}

void SystemBannerHostViewController.forceSuppressSystemApertureOverAssociatedScene.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;

  v3 = (_BYTE *)(v1
               + OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_forceSuppressSystemApertureOverAssociatedScene);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  SystemBannerHostViewController.forceSuppressSystemApertureOverAssociatedScene.didset();
  OUTLINED_FUNCTION_9_0();
}

void SystemBannerHostViewController.forceSuppressSystemApertureOverAssociatedScene.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void SystemBannerHostViewController.forceSuppressSystemApertureOverAssociatedScene.modify(uint64_t a1, char a2)
{
  LocalParticipantView.blurEnabled.modify(a1, a2, (void (*)(uint64_t))SystemBannerHostViewController.forceSuppressSystemApertureOverAssociatedScene.didset);
}

void SystemBannerHostViewController.shouldShowSystemApertureOverAssociatedScene.getter()
{
  _QWORD *v0;
  char v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  OUTLINED_FUNCTION_206();
  v2 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  OUTLINED_FUNCTION_39_6();
  if (((*(uint64_t (**)(void))(v3 + 1096))() & 1) == 0)
  {
    OUTLINED_FUNCTION_54_0(*(uint64_t (**)(void))((*v2 & *v0) + 0x1B8));
    ConversationControlsManager.wantsCallWaitingInSystemAperture.getter();
    OUTLINED_FUNCTION_14_18();
    if ((v1 & 1) != 0)
    {
      OUTLINED_FUNCTION_39_6();
      v5 = (void *)OUTLINED_FUNCTION_54_0(*(uint64_t (**)(void))(v4 + 416));
      if (v5)
      {
        objc_msgSend(v5, sel_isAmbient);
        OUTLINED_FUNCTION_19_0();
      }
    }
  }
  OUTLINED_FUNCTION_18();
}

void SystemBannerHostViewController.handleWantsCallWaitingChanged()()
{
  NSObject *v0;
  os_log_type_t v1;
  uint8_t *v2;
  os_log_type_t v3;
  uint64_t v4;
  os_log_type_t v5;
  _WORD *v6;
  char v7;
  os_log_type_t v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  uint8_t *v16;
  const char *v17;
  os_log_type_t v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  NSObject *loga;
  NSObject *log;
  NSObject *logb;

  v3 = v0;
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v4 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v4, (uint64_t)&static Logger.conversationControls);
  OUTLINED_FUNCTION_252_1();
  v5 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_5_3(v5))
  {
    v6 = (_WORD *)OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_220_0(v6);
    OUTLINED_FUNCTION_130(&dword_1BD004000, v0, v1, "[SystemAperture] Handle wants call waiting change event", v2);
    OUTLINED_FUNCTION_60();
  }

  v7 = OUTLINED_FUNCTION_54_0(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & (uint64_t)v0->isa) + 0x460));
  if ((v7 & 1) == *((_BYTE *)&v0->isa
                   + OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_isShowingSystemApertureOverAssociatedScene))
  {
    logb = OUTLINED_FUNCTION_643();
    v18 = static os_log_type_t.info.getter();
    if (OUTLINED_FUNCTION_161_4(v18, v19, v20, v21, v22, v23, v24, v25, logb))
    {
      v16 = (uint8_t *)OUTLINED_FUNCTION_105();
      *(_DWORD *)v16 = 67109120;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v17 = "[SystemAperture] isShowingSystemApertureOverAssociatedScene is %{BOOL}d (unchanged)";
LABEL_10:
      _os_log_impl(&dword_1BD004000, log, v3, v17, v16, 8u);
      OUTLINED_FUNCTION_60();
    }
  }
  else
  {
    *((_BYTE *)&v0->isa
    + OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_isShowingSystemApertureOverAssociatedScene) = v7 & 1;
    SystemBannerHostViewController.updateSystemApertureElement()();
    loga = OUTLINED_FUNCTION_643();
    v8 = static os_log_type_t.default.getter();
    if (OUTLINED_FUNCTION_161_4(v8, v9, v10, v11, v12, v13, v14, v15, loga))
    {
      v16 = (uint8_t *)OUTLINED_FUNCTION_105();
      *(_DWORD *)v16 = 67109120;
      OUTLINED_FUNCTION_104_10();
      v17 = "[SystemAperture] isShowingSystemApertureOverAssociatedScene updated to %{BOOL}d (changed)";
      goto LABEL_10;
    }
  }
  OUTLINED_FUNCTION_42_0(log);
}

Swift::Void __swiftcall SystemBannerHostViewController.handleLockScreenStatusChanged()()
{
  NSObject *v0;
  os_log_type_t v1;
  uint64_t v2;
  NSObject *v3;
  uint64_t v4;
  os_log_type_t v5;
  _WORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  char v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;

  v3 = v0;
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v4 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v4, (uint64_t)&static Logger.conversationControls);
  v5 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_5_3(v5))
  {
    v6 = (_WORD *)OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_47_2(v6);
    OUTLINED_FUNCTION_130(&dword_1BD004000, v0, v1, "[SystemAperture] Handle lock screen status changed event", (uint8_t *)v2);
    OUTLINED_FUNCTION_60();
  }

  OUTLINED_FUNCTION_154();
  OUTLINED_FUNCTION_54_0(*(uint64_t (**)(void))(v7 + 440));
  OUTLINED_FUNCTION_120();
  OUTLINED_FUNCTION_27_1(v8);
  OUTLINED_FUNCTION_222_2();
  ObjectType = swift_getObjectType();
  v10 = (*(uint64_t (**)(uint64_t))(v2 + 216))(ObjectType);
  OUTLINED_FUNCTION_113();
  if ((v10 & 1) == 0)
    goto LABEL_12;
  OUTLINED_FUNCTION_154();
  v12 = (void *)OUTLINED_FUNCTION_54_0(*(uint64_t (**)(void))(v11 + 416));
  if (v12)
  {
    if (objc_msgSend(v12, sel_isSpringBoardLocked))
    {
      OUTLINED_FUNCTION_154();
      OUTLINED_FUNCTION_54_0(*(uint64_t (**)(void))(v13 + 696));
      OUTLINED_FUNCTION_120();
      (*(void (**)(unint64_t, unint64_t))(v14 + 184))(0xD000000000000012, 0x80000001BD686F40);
      OUTLINED_FUNCTION_113();
      OUTLINED_FUNCTION_43();
    }
    else
    {
      OUTLINED_FUNCTION_113();
    }
  }
  if (*((_BYTE *)&v3->isa
       + OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_isSystemAperturePresentation) == 1)
    SystemBannerHostViewController.updateSystemApertureElement()();
  else
LABEL_12:
    OUTLINED_FUNCTION_91();
}

Swift::Void __swiftcall SystemBannerHostViewController.invalidateAlertingAssertonIfFullScreen()()
{
  uint64_t *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_44_26(*v0);
  OUTLINED_FUNCTION_120();
  (*(void (**)(void))(v1 + 200))();
  OUTLINED_FUNCTION_155_2();
}

void SystemBannerHostViewController.dismissBanner(for:animated:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, id a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  void *v45;
  void *v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  id v52;
  uint64_t v53;
  os_log_type_t v54;
  _WORD *v55;
  void *v56;
  uint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  uint8_t *v60;
  uint64_t v61;
  unint64_t v62;

  OUTLINED_FUNCTION_3_0();
  a25 = v29;
  a26 = v33;
  v35 = v34;
  a14 = *MEMORY[0x1E0C80C00];
  if ((*((_BYTE *)v26 + OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_destination + 8) & 1) != 0)
    goto LABEL_8;
  v36 = v26;
  v27 = v32;
  v37 = v31;
  v38 = v30;
  v28 = *(uint8_t **)((char *)v26 + OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_destination);
  v39 = OUTLINED_FUNCTION_241_2(*v26);
  if (!v40)
    goto LABEL_8;
  v41 = v39;
  v42 = v40;
  OUTLINED_FUNCTION_59(v39, (unint64_t *)&lazy cache variable for type metadata for BNBannerSource);
  v43 = v41;
  v26 = v44;
  @nonobjc BNBannerSource.__allocating_init(for:forRequesterIdentifier:)((uint64_t)v28, v43, v42);
  if (v45)
  {
    v46 = v45;
    v47 = (void *)MEMORY[0x1C3B72E00](v38, v37);
    v48 = *(uint64_t *)((char *)v36 + OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_requestIdentifier);
    v49 = *(uint64_t *)((char *)v36
                     + OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_requestIdentifier
                     + 8);
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSSecureCoding);
    v50 = Dictionary.init(dictionaryLiteral:)();
    a13 = 0;
    v51 = outlined bridged method (mbgnnbnnn) of @objc BNBannerSource.revokePresentable(withRequestIdentifier:reason:animated:userInfo:)(v48, v49, (uint64_t)v47, v27 & 1, v50, (uint64_t)&a13, v46);
    swift_bridgeObjectRelease();
    v52 = a13;
    if (v51)
    {

      if (v35)
        OUTLINED_FUNCTION_237_3();

    }
    else
    {
      v56 = v52;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      if (one-time initialization token for conversationControls != -1)
        swift_once();
      v57 = OUTLINED_FUNCTION_17_2();
      v58 = __swift_project_value_buffer(v57, (uint64_t)&static Logger.conversationControls);
      OUTLINED_FUNCTION_185_1();
      OUTLINED_FUNCTION_185_1();
      Logger.logObject.getter();
      v59 = OUTLINED_FUNCTION_232();
      if (os_log_type_enabled(v58, v59))
      {
        v60 = (uint8_t *)OUTLINED_FUNCTION_105();
        a13 = (id)OUTLINED_FUNCTION_105();
        *(_DWORD *)v60 = 136315138;
        OUTLINED_FUNCTION_185_1();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
        v61 = String.init<A>(describing:)();
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v61, v62, (uint64_t *)&a13);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        OUTLINED_FUNCTION_58_1();
        OUTLINED_FUNCTION_30_10();
        OUTLINED_FUNCTION_30_10();
        OUTLINED_FUNCTION_48(&dword_1BD004000, v58, v59, "Unable to revoke presentable, error: %s", v60);
        OUTLINED_FUNCTION_21();
        OUTLINED_FUNCTION_60();
      }
      OUTLINED_FUNCTION_30_10();
      OUTLINED_FUNCTION_30_10();

      if (v35)
        OUTLINED_FUNCTION_237_3();

      OUTLINED_FUNCTION_30_10();
    }
  }
  else
  {
LABEL_8:
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v53 = OUTLINED_FUNCTION_17_2();
    OUTLINED_FUNCTION_3(v53, (uint64_t)&static Logger.conversationControls);
    v54 = OUTLINED_FUNCTION_232();
    if (OUTLINED_FUNCTION_5_3(v54))
    {
      v55 = (_WORD *)OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_220_0(v55);
      OUTLINED_FUNCTION_130(&dword_1BD004000, v26, v27, "Unable to get Banner Source for banner dismissal, likely because the HUD wasn't presented by BannerKit", v28);
      OUTLINED_FUNCTION_60();
    }

    if (v35)
      OUTLINED_FUNCTION_237_3();
  }
  OUTLINED_FUNCTION_0_20();
}

Swift::Void __swiftcall SystemBannerHostViewController.systemApertureTouchInsetsUpdated(to:)(UIEdgeInsets to)
{
  void *v1;
  NSObject *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  _QWORD *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  OUTLINED_FUNCTION_280_0();
  v29 = v3;
  v30 = v4;
  v5 = (_QWORD *)OUTLINED_FUNCTION_17_2();
  v6 = *(v5 - 1);
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_77();
  v9 = v8 - v7;
  OUTLINED_FUNCTION_83_17();
  if (v10)
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v11 = __swift_project_value_buffer((uint64_t)v5, (uint64_t)&static Logger.conversationControls);
    (*(void (**)(uint64_t, uint64_t, _QWORD *))(v6 + 16))(v9, v11, v5);
    v12 = v1;
    Logger.logObject.getter();
    v13 = OUTLINED_FUNCTION_251_0();
    if (os_log_type_enabled(v2, v13))
    {
      v14 = OUTLINED_FUNCTION_105();
      v28 = OUTLINED_FUNCTION_105();
      *(_DWORD *)v14 = 136315394;
      type metadata accessor for UIEdgeInsets(0);
      v15 = OUTLINED_FUNCTION_247_3();
      v17 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v15, v16, &v28);
      OUTLINED_FUNCTION_246_1(v17);
      OUTLINED_FUNCTION_137_0();
      v18 = OUTLINED_FUNCTION_58_1();
      *(_WORD *)(v14 + 12) = 2080;
      v19 = OUTLINED_FUNCTION_123(v18, sel_view);
      if (v19)
      {
        v20 = v19;
        objc_msgSend(v19, sel__touchInsets);

        v21 = OUTLINED_FUNCTION_247_3();
        v23 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v21, v22, &v28);
        OUTLINED_FUNCTION_246_1(v23);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        OUTLINED_FUNCTION_27();
        OUTLINED_FUNCTION_26_6(&dword_1BD004000, v2, v13, "[SystemAperture] touchInsets updated to %s from %s", (uint8_t *)v14);
        OUTLINED_FUNCTION_25_6();
        OUTLINED_FUNCTION_60();
      }
      goto LABEL_15;
    }

    OUTLINED_FUNCTION_179_1();
    v24 = (void *)OUTLINED_FUNCTION_33_43(*v12);
    if (v24)
    {
      v25 = objc_msgSend(v24, sel_view);
      OUTLINED_FUNCTION_14_18();
      if (!v5)
      {
LABEL_14:
        __break(1u);
LABEL_15:

        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_53_23(v5, sel__setTouchInsets_);

    }
    v26 = OUTLINED_FUNCTION_123((uint64_t)v24, sel_view);
    if (v26)
    {
      v27 = v26;
      OUTLINED_FUNCTION_53_23(v26, sel__setTouchInsets_);

      return;
    }
    __break(1u);
    goto LABEL_14;
  }
}

Swift::Void __swiftcall SystemBannerHostViewController.deepLinkToFullScreenCallUI()()
{
  NSObject *v0;
  os_log_type_t v1;
  uint8_t *v2;
  uint64_t v3;
  os_log_type_t v4;
  _WORD *v5;
  char *v6;
  void *v7;

  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v3 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v3, (uint64_t)&static Logger.conversationControls);
  v4 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_5_3(v4))
  {
    v5 = (_WORD *)OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_47_2(v5);
    OUTLINED_FUNCTION_130(&dword_1BD004000, v0, v1, "[SystemAperture] deepLinkToFullScreenCallUI", v2);
    OUTLINED_FUNCTION_60();
  }

  v6 = (char *)v0 + OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_nextSystemApertureLayoutMode;
  *(_QWORD *)v6 = 3;
  v6[8] = 0;
  SystemBannerHostViewController.nextSystemApertureLayoutMode.didset();
  v7 = (void *)OUTLINED_FUNCTION_43_6((uint64_t)v0->isa);
  if (v7)
  {
    objc_msgSend(v7, sel_deepLinkToFullScreenCallUI);
    OUTLINED_FUNCTION_9_8();
  }
  else
  {
    OUTLINED_FUNCTION_18();
  }
}

Swift::Void __swiftcall SystemBannerHostViewController.deepLinkToFullScreenCallDetailsView()()
{
  SystemBannerHostViewController.deepLinkToFullScreenCallDetailsView()((SEL *)&selRef_deepLinkToFullScreenCallDetailsView);
}

Swift::Void __swiftcall SystemBannerHostViewController.deepLinkToFullScreenPTTCallDetailsView()()
{
  SystemBannerHostViewController.deepLinkToFullScreenCallDetailsView()((SEL *)&selRef_deepLinkToFullScreenPTTCallDetailsView);
}

Swift::Void __swiftcall SystemBannerHostViewController.showDefaultSystemHUD()()
{
  SystemBannerHostViewController.deepLinkToFullScreenCallDetailsView()((SEL *)&selRef_showDefaultSystemHUD);
}

void SystemBannerHostViewController.deepLinkToFullScreenCallDetailsView()(SEL *a1)
{
  uint64_t *v1;
  void *v3;

  v3 = (void *)OUTLINED_FUNCTION_43_6(*v1);
  if (v3)
  {
    objc_msgSend(v3, *a1);
    OUTLINED_FUNCTION_0_101();
  }
  else
  {
    OUTLINED_FUNCTION_0();
  }
}

Swift::Void __swiftcall SystemBannerHostViewController.controlsPreferredContentSizeChanged(presentingMenu:)(Swift::Bool presentingMenu)
{
  NSObject *v1;
  void *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  OUTLINED_FUNCTION_65_5();
  v42 = v4;
  v43 = v5;
  v6 = v1;
  v8 = v7;
  OUTLINED_FUNCTION_9_28();
  v10 = (*(uint64_t (**)(void))(v9 + 1024))();
  if ((v8 & 1) != 0)
  {
    v11 = OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_gesturePriorityAssertion;
    if (!*(Class *)((char *)&v1->isa
                   + OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_gesturePriorityAssertion))
    {
      if (OUTLINED_FUNCTION_123(v10, sel_presentableGestureRecognizerPriorityContext))
      {
        v2 = (void *)MEMORY[0x1C3B72E00](0xD000000000000023, 0x80000001BD686F60);
        v8 = (uint64_t)OUTLINED_FUNCTION_19_14((uint64_t)v2, sel_acquireGestureRecognizerDefaultPriorityAssertionForReason_);
        OUTLINED_FUNCTION_10();

      }
      else
      {
        v8 = 0;
      }
      SystemBannerHostViewController.gesturePriorityAssertion.setter(v8);
      if (one-time initialization token for conversationControls != -1)
        swift_once();
      v33 = OUTLINED_FUNCTION_17_2();
      v34 = OUTLINED_FUNCTION_211_2(v33, (uint64_t)&static Logger.conversationControls);
      OUTLINED_FUNCTION_268_3();
      v35 = OUTLINED_FUNCTION_12_0();
      if (OUTLINED_FUNCTION_4_14(v35))
      {
        v36 = (uint8_t *)OUTLINED_FUNCTION_105();
        v37 = OUTLINED_FUNCTION_105();
        *(_DWORD *)v36 = 136315138;
        v40 = v37;
        v41 = *(uint64_t *)((char *)&v1->isa + v11);
        swift_unknownObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for SBUIPresentableGestureRecognizerPriorityAssertion?);
        v38 = String.init<A>(describing:)();
        v41 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v38, v39, &v40);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        OUTLINED_FUNCTION_54_1();
        OUTLINED_FUNCTION_48(&dword_1BD004000, v1, v3, "[System] gesturePriorityAssertion: %s", v36);
        OUTLINED_FUNCTION_21();
        OUTLINED_FUNCTION_60();
      }

    }
  }
  else
  {
    SystemBannerHostViewController.gesturePriorityAssertion.setter(0);
  }
  OUTLINED_FUNCTION_9_28();
  v13 = OUTLINED_FUNCTION_54_0(*(uint64_t (**)(void))(v12 + 848));
  if (v13)
  {
    v14 = (void *)v13;
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v15 = OUTLINED_FUNCTION_17_2();
    v16 = OUTLINED_FUNCTION_211_2(v15, (uint64_t)&static Logger.conversationControls);
    OUTLINED_FUNCTION_145_5();
    v17 = OUTLINED_FUNCTION_31_6();
    if (OUTLINED_FUNCTION_78_0(v1))
    {
      v18 = (uint8_t *)OUTLINED_FUNCTION_105();
      v41 = OUTLINED_FUNCTION_105();
      *(_DWORD *)v18 = 136315138;
      objc_msgSend(v2, sel_preferredContentSize);
      OUTLINED_FUNCTION_226();
      v19 = String.init<A>(reflecting:)();
      v40 = OUTLINED_FUNCTION_16_26(v19, v20, v21, v22, v23);
      OUTLINED_FUNCTION_59_1();

      OUTLINED_FUNCTION_54_1();
      OUTLINED_FUNCTION_48(&dword_1BD004000, v6, v17, "[System] Asking presentableContext for update with size %s", v18);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }

    objc_msgSend(v14, sel_setHostNeedsUpdate);
    OUTLINED_FUNCTION_113();
  }
  else
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v24 = OUTLINED_FUNCTION_17_2();
    v25 = OUTLINED_FUNCTION_211_2(v24, (uint64_t)&static Logger.conversationControls);
    OUTLINED_FUNCTION_268_3();
    v26 = OUTLINED_FUNCTION_37_4();
    if (OUTLINED_FUNCTION_28_4(v1))
    {
      v27 = (uint8_t *)OUTLINED_FUNCTION_105();
      v41 = OUTLINED_FUNCTION_105();
      *(_DWORD *)v27 = 136315138;
      objc_msgSend((id)v8, sel_preferredContentSize);
      OUTLINED_FUNCTION_226();
      v28 = String.init<A>(reflecting:)();
      v40 = OUTLINED_FUNCTION_16_26(v28, v29, v30, v31, v32);
      OUTLINED_FUNCTION_31_3();

      OUTLINED_FUNCTION_25();
      OUTLINED_FUNCTION_48(&dword_1BD004000, v6, v26, "[System] Asking presentableContext for update with size %s failed because presentableContext is null", v27);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }

  }
  OUTLINED_FUNCTION_8_0();
}

void SystemBannerHostViewController.menuPresented.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  if (OUTLINED_FUNCTION_42_25(*v1))
  {
    v2 = OUTLINED_FUNCTION_67_12();
    (*(void (**)(uint64_t, uint64_t))(v0 + 64))(v2, v0);

  }
  OUTLINED_FUNCTION_0();
}

BOOL SystemBannerHostViewController.eligibleForDismissal.getter()
{
  uint64_t *v0;

  return (OUTLINED_FUNCTION_140_6(*v0) & 1) == 0;
}

uint64_t SystemBannerHostViewController.isPresentingStickyNotice.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  char v7;
  _QWORD v9[3];
  uint64_t v10;

  (*(void (**)(_QWORD *__return_ptr))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x208))(v9);
  v2 = v10;
  if (v10)
  {
    v3 = __swift_project_boxed_opaque_existential_1(v9, v10);
    v4 = *(_QWORD *)(v2 - 8);
    MEMORY[0x1E0C80A78](v3);
    OUTLINED_FUNCTION_16_2();
    (*(void (**)(uint64_t))(v4 + 16))(v1);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v9, (uint64_t *)&demangling cache variable for type metadata for Notice?);
    v5 = OUTLINED_FUNCTION_65_2();
    v7 = v6(v5);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v2);
  }
  else
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v9, (uint64_t *)&demangling cache variable for type metadata for Notice?);
    v7 = 0;
  }
  return v7 & 1;
}

BOOL SystemBannerHostViewController.needsBackgroundBlur.getter()
{
  uint64_t *v0;

  return OUTLINED_FUNCTION_91_12(*v0) == 0;
}

uint64_t SystemBannerHostViewController.captureGroup.getter()
{
  swift_bridgeObjectRetain();
  SystemBannerHostViewController.captureOnlyBackdropView.getter();
  return OUTLINED_FUNCTION_65_2();
}

void SystemBannerHostViewController.userInteractionWillBeginForBanner(for:)()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;

  v2 = (void *)OUTLINED_FUNCTION_89_16(*v0);
  OUTLINED_FUNCTION_128();
  (*(void (**)(void))(v1 + 2568))();
  OUTLINED_FUNCTION_7_1(v2);
}

void SystemBannerHostViewController.userInteractionDidEndForBanner(for:)()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;

  v2 = (void *)OUTLINED_FUNCTION_89_16(*v0);
  OUTLINED_FUNCTION_128();
  (*(void (**)(void))(v1 + 2560))();
  OUTLINED_FUNCTION_7_1(v2);
}

void SystemBannerHostViewController.presentableWillAppear(asBanner:)()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  id v7;
  _BOOL4 v8;
  _QWORD *v9;
  _DWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23[6];
  uint64_t v24[11];
  uint64_t v25;
  uint64_t v26;

  OUTLINED_FUNCTION_280_0();
  v25 = v3;
  v26 = v4;
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v5 = OUTLINED_FUNCTION_17_2();
  v6 = __swift_project_value_buffer(v5, (uint64_t)&static Logger.conversationControls);
  v7 = v1;
  OUTLINED_FUNCTION_271();
  OUTLINED_FUNCTION_369();
  v8 = OUTLINED_FUNCTION_78_0(v6);
  v9 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  if (v8)
  {
    v10 = (_DWORD *)OUTLINED_FUNCTION_105();
    v24[0] = OUTLINED_FUNCTION_105();
    *v10 = 136315650;
    OUTLINED_FUNCTION_204_3();
    OUTLINED_FUNCTION_304(v2, v11, v24);
    OUTLINED_FUNCTION_87_11();
    v12 = OUTLINED_FUNCTION_25();
    OUTLINED_FUNCTION_40_39(v12);
    ConversationControlsType.debugDescription.getter();
    OUTLINED_FUNCTION_206_1(v13);
    v23[0] = OUTLINED_FUNCTION_304((uint64_t)v23, v14, v24);
    OUTLINED_FUNCTION_53_32();

    OUTLINED_FUNCTION_25();
    OUTLINED_FUNCTION_210_1();
    v15 = OUTLINED_FUNCTION_203_1();
    v23[0] = OUTLINED_FUNCTION_56_23(v15, v16, v24);
    OUTLINED_FUNCTION_53_32();

    OUTLINED_FUNCTION_54_1();
    OUTLINED_FUNCTION_85_15(&dword_1BD004000, v6, v17, "Banner presenting for identifier: %s, type: %s, requestID: %s");
    OUTLINED_FUNCTION_100_6();
    OUTLINED_FUNCTION_60();
  }

  if (!*(_QWORD *)((char *)v0
                  + OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_dismissalPreventionAssertion))
  {
    if (OUTLINED_FUNCTION_123(v18, sel_presentableDismissalPreventionContext))
    {
      v19 = (void *)MEMORY[0x1C3B72E00](0x4320657669746341, 0xEB000000006C6C61);
      v20 = OUTLINED_FUNCTION_19_14((uint64_t)v19, sel_acquireTransitionDismissalPreventionAssertionForReason_);
      OUTLINED_FUNCTION_10();

    }
    else
    {
      v20 = 0;
    }
    SystemBannerHostViewController.dismissalPreventionAssertion.setter((uint64_t)v20);
  }
  v21 = (void *)OUTLINED_FUNCTION_54_0(*(uint64_t (**)(void))((*v9 & *v0) + 0x1B8));
  OUTLINED_FUNCTION_153();
  (*(void (**)(void))(v22 + 2560))();

  MSNMonitorBeginException();
  OUTLINED_FUNCTION_21_3();
}

void SystemBannerHostViewController.presentableDidAppear(asBanner:)()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  id v7;
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19[6];
  uint64_t v20[11];
  uint64_t v21;
  uint64_t v22;

  OUTLINED_FUNCTION_280_0();
  v21 = v3;
  v22 = v4;
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v5 = OUTLINED_FUNCTION_17_2();
  v6 = __swift_project_value_buffer(v5, (uint64_t)&static Logger.conversationControls);
  v7 = v1;
  OUTLINED_FUNCTION_271();
  OUTLINED_FUNCTION_369();
  if (OUTLINED_FUNCTION_78_0(v6))
  {
    v8 = (_DWORD *)OUTLINED_FUNCTION_105();
    v20[0] = OUTLINED_FUNCTION_105();
    *v8 = 136315650;
    OUTLINED_FUNCTION_204_3();
    OUTLINED_FUNCTION_304(v2, v9, v20);
    OUTLINED_FUNCTION_87_11();
    v10 = OUTLINED_FUNCTION_25();
    OUTLINED_FUNCTION_40_39(v10);
    ConversationControlsType.debugDescription.getter();
    OUTLINED_FUNCTION_206_1(v11);
    v19[0] = OUTLINED_FUNCTION_304((uint64_t)v19, v12, v20);
    OUTLINED_FUNCTION_53_32();

    OUTLINED_FUNCTION_25();
    OUTLINED_FUNCTION_210_1();
    v13 = OUTLINED_FUNCTION_203_1();
    v19[0] = OUTLINED_FUNCTION_56_23(v13, v14, v20);
    OUTLINED_FUNCTION_53_32();

    OUTLINED_FUNCTION_54_1();
    OUTLINED_FUNCTION_85_15(&dword_1BD004000, v6, v15, "Banner presented for identifier: %s, type: %s, requestID: %s");
    OUTLINED_FUNCTION_100_6();
    OUTLINED_FUNCTION_60();
  }

  v16 = OUTLINED_FUNCTION_33_43(*v0);
  if (v16)
  {
    v17 = (void *)v16;
    type metadata accessor for ConversationHUDViewController();
    if (swift_dynamicCastClass())
    {
      OUTLINED_FUNCTION_153();
      (*(void (**)(_QWORD))(v18 + 368))(0);
    }

  }
  OUTLINED_FUNCTION_21_3();
}

void @objc SystemBannerHostViewController.userInteractionWillBeginForBanner(for:)(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  id v6;

  swift_unknownObjectRetain();
  v6 = a1;
  a4();
  OUTLINED_FUNCTION_113();
  OUTLINED_FUNCTION_0_77(v6);
}

void SystemBannerHostViewController.presentableDidDisappear(asBanner:withReason:)()
{
  char *v0;
  int v1;
  char *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void (*v15)(__int128 *__return_ptr);
  uint64_t v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  NSObject *v34;
  id v35;
  void *v36;
  char *v37;
  os_log_type_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  unint64_t v45;
  void *v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  int8x16_t v65;
  int8x8_t v66;
  void (*v67)(__int128 *__return_ptr);
  uint64_t *v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  id v77;
  uint64_t v78;
  void (*v79)(uint64_t);
  _QWORD v80[2];
  int v81;
  uint64_t v82;
  void (*v83)(__int128 *__return_ptr);
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  int8x16_t v90;
  int8x16_t v91;
  char v92;
  __int128 v93;
  uint64_t v94;
  uint64_t v95;

  OUTLINED_FUNCTION_93();
  v2 = v0;
  v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_77();
  v8 = v7 - v6;
  v9 = OUTLINED_FUNCTION_33_0();
  v86 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v84 = (char *)v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v80 - v12;
  OUTLINED_FUNCTION_16_23();
  v15 = *(void (**)(__int128 *__return_ptr))(v14 + 520);
  v15(&v93);
  if (v94)
  {
    outlined init with take of Notice(&v93, (uint64_t)&v89);
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v16 = OUTLINED_FUNCTION_17_2();
    __swift_project_value_buffer(v16, (uint64_t)&static Logger.conversationControls);
    outlined init with copy of IDSLookupManager((uint64_t)&v89, (uint64_t)&v93);
    v17 = v4;
    v18 = Logger.logObject.getter();
    v19 = static os_log_type_t.default.getter();
    v20 = v19;
    if (os_log_type_enabled(v18, v19))
    {
      v21 = OUTLINED_FUNCTION_105();
      v85 = v8;
      v22 = v21;
      v82 = OUTLINED_FUNCTION_105();
      v88 = v82;
      *(_DWORD *)v22 = 136315394;
      v80[1] = v22 + 4;
      v83 = v15;
      v23 = v9;
      v25 = v94;
      v24 = v95;
      __swift_project_boxed_opaque_existential_1(&v93, v94);
      v26 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
      v81 = v20;
      v26(v25, v24);
      lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
      v27 = dispatch thunk of CustomStringConvertible.description.getter();
      v29 = v28;
      (*(void (**)(char *, uint64_t))(v86 + 8))(v13, v23);
      v87 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v27, v29, &v88);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_53();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v93);
      *(_WORD *)(v22 + 12) = 2080;
      v87 = (uint64_t)v4;
      v30 = v17;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for BNBannerRevocationReason?);
      v31 = String.init<A>(describing:)();
      v87 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v31, v32, &v88);
      OUTLINED_FUNCTION_137_0();

      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_26_6(&dword_1BD004000, v18, (os_log_type_t)v81, "presentableDidDisappear for noticeUUID: %s, reason: %s", (uint8_t *)v22);
      OUTLINED_FUNCTION_25_6();
      OUTLINED_FUNCTION_60();
    }
    v46 = v4;

    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v93);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v89);
  }
  else
  {
    v85 = v8;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v93, (uint64_t *)&demangling cache variable for type metadata for Notice?);
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v33 = OUTLINED_FUNCTION_17_2();
    v34 = __swift_project_value_buffer(v33, (uint64_t)&static Logger.conversationControls);
    v35 = v4;
    v36 = v4;
    v37 = v2;
    Logger.logObject.getter();
    v38 = OUTLINED_FUNCTION_12_0();
    if (OUTLINED_FUNCTION_51_3(v38))
    {
      v39 = OUTLINED_FUNCTION_105();
      v81 = v1;
      v40 = v39;
      v89 = OUTLINED_FUNCTION_105();
      *(_DWORD *)v40 = 136315394;
      v82 = v9;
      v83 = v15;
      v41 = *(_QWORD *)&v37[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_bannerIdentifier];
      swift_bridgeObjectRetain();
      *(_QWORD *)&v93 = OUTLINED_FUNCTION_162(v41, v42, &v89);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      OUTLINED_FUNCTION_58_1();
      *(_WORD *)(v40 + 12) = 2080;
      *(_QWORD *)&v93 = v36;
      v43 = v35;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for BNBannerRevocationReason?);
      v44 = String.init<A>(describing:)();
      *(_QWORD *)&v93 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v44, v45, &v89);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      OUTLINED_FUNCTION_25();
      OUTLINED_FUNCTION_26_6(&dword_1BD004000, v34, (os_log_type_t)v81, "presentableDidDisappear for identifier: %s, reason: %s", (uint8_t *)v40);
      OUTLINED_FUNCTION_25_6();
      OUTLINED_FUNCTION_60();
    }
    v46 = v36;

    v8 = v85;
  }
  SystemBannerHostViewController.panGestureProxy.setter(0);
  v47 = *(void **)&v2[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_dismissalPreventionAssertion];
  if (v47)
    objc_msgSend(v47, sel_invalidate);
  if (!v46)
  {
LABEL_28:
    v54 = 0;
    v55 = 0;
    goto LABEL_29;
  }
  v48 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v50 = v49;
  if (v48 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v50 == v51)
  {
    swift_bridgeObjectRelease_n();
    v55 = 1;
    v54 = 1;
    goto LABEL_29;
  }
  v53 = _stringCompareWithSmolCheck(_:_:expecting:)();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_27();
  if ((v53 & 1) != 0)
  {
    v54 = 1;
    v55 = 1;
    goto LABEL_29;
  }
  v56 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v58 = v57;
  if (v56 != static String._unconditionallyBridgeFromObjectiveC(_:)() || v58 != v59)
  {
    v61 = _stringCompareWithSmolCheck(_:_:expecting:)();
    OUTLINED_FUNCTION_27();
    OUTLINED_FUNCTION_13_3();
    if ((v61 & 1) != 0)
    {
      v54 = 0;
      v55 = 2;
      goto LABEL_29;
    }
    goto LABEL_28;
  }
  v55 = 2;
  swift_bridgeObjectRelease_n();
  v54 = 0;
LABEL_29:
  OUTLINED_FUNCTION_16_23();
  v63 = (void *)OUTLINED_FUNCTION_8_64(*(uint64_t (**)(void))(v62 + 416));
  if (v63)
  {
    objc_msgSend(v63, sel_didDismiss_reason_, v2, v55);
    v63 = (void *)OUTLINED_FUNCTION_10();
  }
  if (v54)
  {
    OUTLINED_FUNCTION_16_23();
    (*(void (**)(uint64_t *__return_ptr))(v64 + 496))(&v89);
    if (v92 == 6)
    {
      v65 = vorrq_s8(v90, v91);
      v66 = vorr_s8(*(int8x8_t *)v65.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v65, v65, 8uLL));
      if ((unint64_t)(v89 - 13) <= 1 && !*(_QWORD *)&v66)
      {
        v67 = v15;
        if (one-time initialization token for shared != -1)
          swift_once();
        v68 = (uint64_t *)OUTLINED_FUNCTION_49_35();
        OUTLINED_FUNCTION_27_1(*v68);
        OUTLINED_FUNCTION_14_27();
        swift_getObjectType();
        OUTLINED_FUNCTION_288_0();
        specialized NameAndPhotoUtilities.denySendingNameAndPhoto(using:)();
LABEL_43:
        v63 = (void *)swift_unknownObjectRelease();
        v15 = v67;
        goto LABEL_45;
      }
      if (v89 == 20 && !*(_QWORD *)&v66)
      {
        v67 = v15;
        if (one-time initialization token for shared != -1)
          swift_once();
        v69 = (uint64_t *)OUTLINED_FUNCTION_49_35();
        OUTLINED_FUNCTION_27_1(*v69);
        OUTLINED_FUNCTION_14_27();
        swift_getObjectType();
        v70 = OUTLINED_FUNCTION_288_0();
        specialized NameAndPhotoUtilities.denyIncomingName(from:)(v70, v71, v72, v73);
        goto LABEL_43;
      }
    }
    v63 = (void *)outlined destroy of ConversationControlsType((uint64_t)&v89);
  }
LABEL_45:
  ((void (*)(uint64_t *__return_ptr, void *))v15)(&v89, v63);
  v74 = v91.i64[0];
  if (!v91.i64[0])
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v89, (uint64_t *)&demangling cache variable for type metadata for Notice?);
    OUTLINED_FUNCTION_83_7(v8, 1);
    goto LABEL_49;
  }
  v75 = v91.i64[1];
  v76 = __swift_project_boxed_opaque_existential_1(&v89, v91.i64[0]);
  (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v74, v75);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v89, (uint64_t *)&demangling cache variable for type metadata for Notice?);
  OUTLINED_FUNCTION_83_7(v8, 0);
  if (OUTLINED_FUNCTION_45_10(v8) == 1)
  {
LABEL_49:
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v8, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    goto LABEL_50;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v86 + 32))(v84, v8, v9);
  v77 = objc_retain(*(id *)(OUTLINED_FUNCTION_49_35()
                          + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_noticeCoordinator));
  OUTLINED_FUNCTION_49_5();
  ConversationControlsNoticeCoordinator.noticeDismissed(noticeUUID:dismissContext:)();

  v78 = OUTLINED_FUNCTION_311_0();
  v79(v78);
LABEL_50:
  MSNMonitorEndException();
  OUTLINED_FUNCTION_52_1();
}

id SystemBannerHostViewController.viewController.getter()
{
  void *v0;

  return v0;
}

void SystemBannerHostViewController.requestIdentifier.getter()
{
  OUTLINED_FUNCTION_52_4();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

double SystemBannerHostViewController.bannerContentOutsets.getter()
{
  char v0;
  _BYTE v2[24];
  double v3;

  OUTLINED_FUNCTION_83_17();
  if (v0)
    return *MEMORY[0x1E0DC49E8];
  static Layout.ConversationControls.iOS.getter((uint64_t)v2);
  return v3;
}

void SystemBannerHostViewController.isTouchOutsideDismissalEnabled.getter()
{
  _QWORD *v0;
  char v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[3];

  OUTLINED_FUNCTION_206();
  v2 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v4 = OUTLINED_FUNCTION_277_2(*MEMORY[0x1E0DEEDD8] & v3, v28, v30, v31, v32, v33, v34);
  OUTLINED_FUNCTION_16_68((uint64_t)v4, v5, v6, v7, v8, v9);
  v11 = v10;
  v19 = OUTLINED_FUNCTION_14_15(v10, v12, v13, v14, v15, v16, v17, v18, v29);
  OUTLINED_FUNCTION_100(v19, v20, v21, v22, v23, v24);
  if ((v11 & 1) == 0
    || (OUTLINED_FUNCTION_54_0(*(uint64_t (**)(void))((*v2 & *v0) + 0x1B8)),
        OUTLINED_FUNCTION_120(),
        OUTLINED_FUNCTION_39_6(),
        (*(void (**)(void))(v25 + 1904))(),
        OUTLINED_FUNCTION_14_18(),
        (v1 & 1) == 0))
  {
    OUTLINED_FUNCTION_39_6();
    if ((OUTLINED_FUNCTION_54_0(*(uint64_t (**)(void))(v26 + 1232)) & 1) == 0)
    {
      OUTLINED_FUNCTION_39_6();
      (*(void (**)(_QWORD *__return_ptr))(v27 + 520))(v35);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v35, (uint64_t *)&demangling cache variable for type metadata for Notice?);
    }
  }
  OUTLINED_FUNCTION_164_0();
}

uint64_t SystemBannerHostViewController.isDraggingInteractionEnabled.getter()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  OUTLINED_FUNCTION_128();
  if (((*(uint64_t (**)(void))(v0 + 1232))() & 1) != 0)
  {
    v1 = 0;
  }
  else
  {
    OUTLINED_FUNCTION_128();
    v3 = OUTLINED_FUNCTION_277_2(v2, v24, v26, v27, v28, v29, v30);
    OUTLINED_FUNCTION_16_68((uint64_t)v3, v4, v5, v6, v7, v8);
    v1 = v9 ^ 1;
    v17 = OUTLINED_FUNCTION_14_15(v9, v10, v11, v12, v13, v14, v15, v16, v25);
    OUTLINED_FUNCTION_100(v17, v18, v19, v20, v21, v22);
  }
  return v1 & 1;
}

id SystemBannerHostViewController.bannerSizeTransitionAnimationSettings.getter()
{
  _QWORD *v0;
  objc_super v2;

  if ((OUTLINED_FUNCTION_140_6(*v0) & 1) != 0)
  {
    *((_BYTE *)v0 + OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_expandedForMenuPresentation) = 1;
    return objc_msgSend((id)objc_opt_self(), sel_settingsWithDuration_, 0.0);
  }
  else if ((*((_BYTE *)v0
             + OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_expandedForMenuPresentation) & 1) != 0)
  {
    *((_BYTE *)v0 + OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_expandedForMenuPresentation) = 0;
    return objc_msgSend((id)objc_opt_self(), sel_settingsWithDuration_, 0.0);
  }
  else
  {
    v2.receiver = v0;
    v2.super_class = (Class)ObjC metadata update function for SystemBannerHostViewController();
    return objc_msgSendSuper2(&v2, sel_bannerSizeTransitionAnimationSettings);
  }
}

CGSize __swiftcall SystemBannerHostViewController.preferredContentSize(withPresentationSize:containerSize:)(CGSize withPresentationSize, CGSize containerSize)
{
  uint64_t *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  double v6;
  double v7;
  CGSize result;

  OUTLINED_FUNCTION_128();
  (*(void (**)(void))(v3 + 1032))();
  v4 = (void *)OUTLINED_FUNCTION_42_25(*v2);
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v4, sel_preferredContentSize);

  }
  v6 = OUTLINED_FUNCTION_235();
  result.height = v7;
  result.width = v6;
  return result;
}

id SystemBannerHostViewController.systemApertureElementViewController.getter()
{
  NSObject *v0;
  os_log_type_t v1;
  uint8_t *v2;
  uint64_t v3;
  os_log_type_t v4;
  _WORD *v5;
  void *v7;

  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v3 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v3, (uint64_t)&static Logger.conversationControls);
  v4 = OUTLINED_FUNCTION_31_6();
  if (OUTLINED_FUNCTION_13_0(v4))
  {
    v5 = (_WORD *)OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_124_3(v5);
    OUTLINED_FUNCTION_130(&dword_1BD004000, v0, v1, "[SystemAperture] systemApertureElementViewController accessed", v2);
    OUTLINED_FUNCTION_60();
  }

  return OUTLINED_FUNCTION_144_3(v7);
}

void SystemBannerHostViewController.activeLayoutMode.getter()
{
  OUTLINED_FUNCTION_1_7();
  OUTLINED_FUNCTION_32();
}

void SystemBannerHostViewController.activeLayoutMode.setter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_activeLayoutMode);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  OUTLINED_FUNCTION_32();
}

void SystemBannerHostViewController.activeLayoutMode.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void SystemBannerHostViewController.canRequestAlertingAssertion.getter()
{
  OUTLINED_FUNCTION_1_7();
  OUTLINED_FUNCTION_32();
}

void SystemBannerHostViewController.canRequestAlertingAssertion.setter(char a1)
{
  uint64_t v1;
  char *v3;
  char v4;

  v3 = (char *)(v1 + OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_canRequestAlertingAssertion);
  OUTLINED_FUNCTION_2_0();
  v4 = *v3;
  *v3 = a1;
  SystemBannerHostViewController.canRequestAlertingAssertion.didset(v4);
  OUTLINED_FUNCTION_9_0();
}

void SystemBannerHostViewController.canRequestAlertingAssertion.didset(char a1)
{
  _QWORD *v1;
  _QWORD *v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unsigned __int8 *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t ObjectType;
  int8x16_t v23;
  uint64_t v24;
  uint64_t v25;
  int8x16_t v26;
  int8x16_t v27;
  char v28;

  v2 = v1;
  v3 = a1 & 1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v24 - v8;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v24 - v11;
  v13 = type metadata accessor for ConversationControlsRecipe();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (unsigned __int8 *)v1
      + OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_canRequestAlertingAssertion;
  v17 = swift_beginAccess();
  if (*v16 == v3)
    return;
  v18 = (*(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v2) + 0x2D0))(v17);
  if (!v18)
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 1, 1, v13);
    goto LABEL_10;
  }
  v20 = (void *)v18;
  v21 = v19;
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v21 + 32))(ObjectType, v21);

  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13) == 1)
  {
LABEL_10:
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v12, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
    return;
  }
  _s15ConversationKit11ParticipantVWObTm_0((uint64_t)v12, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
  outlined init with copy of ConversationControlsType((uint64_t)v15, (uint64_t)&v25);
  if (v28 == 2)
  {
    outlined destroy of ConversationControlsType((uint64_t)&v25);
  }
  else if (v28 != 6
         || v25 != 5
         || (v23 = vorrq_s8(v26, v27),
             *(_QWORD *)&vorr_s8(*(int8x8_t *)v23.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v23, v23, 8uLL))))
  {
    outlined destroy of ConversationControlsType((uint64_t)&v25);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 1, 1, v13);
    outlined init with copy of ConversationControlsRecipe((uint64_t)v15, (uint64_t)v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v13);
    SystemBannerHostViewController.alertIfNeededForRecipeTransition(from:to:)((uint64_t)v9, (uint64_t)v6);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v6, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v9, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  }
  outlined destroy of AccountUpdateNotice((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
}

void SystemBannerHostViewController.canRequestAlertingAssertion.modify()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  _BYTE *v3;

  v2 = malloc(0x28uLL);
  *(_QWORD *)(OUTLINED_FUNCTION_80((uint64_t)v2) + 24) = v0;
  v3 = (_BYTE *)(v0 + OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_canRequestAlertingAssertion);
  OUTLINED_FUNCTION_2_0();
  *(_BYTE *)(v1 + 32) = *v3;
  OUTLINED_FUNCTION_18();
}

void SystemBannerHostViewController.canRequestAlertingAssertion.modify(uint64_t a1)
{
  void *v1;

  v1 = *(void **)a1;
  SystemBannerHostViewController.canRequestAlertingAssertion.setter(*(_BYTE *)(*(_QWORD *)a1 + 32));
  free(v1);
}

void SystemBannerHostViewController.nextSystemApertureLayoutMode.didset()
{
  _QWORD *v0;

  if ((*((_BYTE *)v0
        + OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_nextSystemApertureLayoutMode
        + 8) & 1) == 0)
  {
    objc_msgSend(objc_msgSend(v0, sel_systemApertureElementContext), sel_setElementNeedsUpdate);
    swift_unknownObjectRelease();
    (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x438))();
  }
}

uint64_t SystemBannerHostViewController.contentRole.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_contentRole);
}

uint64_t SystemBannerHostViewController.preferredLayoutMode.getter()
{
  NSObject *v0;
  uint8_t *v1;
  uint8_t *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t ObjectType;
  uint64_t v21;
  int EnumTagSinglePayload;
  uint64_t v23;
  os_log_type_t v24;
  _WORD *v25;
  uint64_t v26;
  uint64_t v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  os_log_type_t v33;
  _WORD *v34;
  uint64_t v35;
  os_log_type_t v36;
  _WORD *v37;
  const char *v38;
  uint64_t v40;
  os_log_type_t v41;
  _WORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  void *v48;
  unsigned __int8 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  OUTLINED_FUNCTION_93();
  v51 = v4;
  v52 = v5;
  v6 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_16_2();
  v8 = (char *)v0 + OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_nextSystemApertureLayoutMode;
  if ((*((_BYTE *)&v0[1].isa
        + OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_nextSystemApertureLayoutMode) & 1) != 0)
  {
    v9 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    if (OUTLINED_FUNCTION_54_0(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & (uint64_t)v0->isa) + 0x5A0)) != 4)
    {
      if (one-time initialization token for conversationControls != -1)
        swift_once();
      v32 = OUTLINED_FUNCTION_17_2();
      OUTLINED_FUNCTION_3(v32, (uint64_t)&static Logger.conversationControls);
      v33 = OUTLINED_FUNCTION_31_6();
      if (OUTLINED_FUNCTION_13_0(v33))
      {
        v34 = (_WORD *)OUTLINED_FUNCTION_105();
        OUTLINED_FUNCTION_124_3(v34);
        OUTLINED_FUNCTION_130(&dword_1BD004000, v0, (os_log_type_t)v0, "[SystemAperture] preferredLayoutMode is .compact (by default) because the maximum layout mode is .compact", v1);
        OUTLINED_FUNCTION_60();
      }

      return 3;
    }
    OUTLINED_FUNCTION_52_29();
    v11 = (void *)OUTLINED_FUNCTION_54_0(*(uint64_t (**)(void))(v10 + 1448));
    OUTLINED_FUNCTION_406(v11);
    if (v0)
    {
      OUTLINED_FUNCTION_52_29();
      v13 = (void *)OUTLINED_FUNCTION_54_0(*(uint64_t (**)(void))(v12 + 1456));
      OUTLINED_FUNCTION_406(v13);
      OUTLINED_FUNCTION_52_29();
      v15 = (void *)OUTLINED_FUNCTION_54_0(*(uint64_t (**)(void))(v14 + 1464));
      OUTLINED_FUNCTION_406(v15);
      v16 = OUTLINED_FUNCTION_33_43((uint64_t)v0->isa);
      if (v16)
      {
        v18 = (void *)v16;
        v19 = v17;
        ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t))(v19 + 32))(ObjectType, v19);
        v21 = OUTLINED_FUNCTION_28_1();
        EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v2, 1, v21);
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v2, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
        if (EnumTagSinglePayload == 1)
        {
          if (one-time initialization token for conversationControls != -1)
            swift_once();
          v23 = OUTLINED_FUNCTION_17_2();
          OUTLINED_FUNCTION_3(v23, (uint64_t)&static Logger.conversationControls);
          v24 = OUTLINED_FUNCTION_37_4();
          if (OUTLINED_FUNCTION_13_0(v24))
          {
            v25 = (_WORD *)OUTLINED_FUNCTION_105();
            OUTLINED_FUNCTION_47_2(v25);
            OUTLINED_FUNCTION_130(&dword_1BD004000, v6, OS_LOG_TYPE_INFO, "[SystemAperture] preferredLayoutMode is .custom (by default) since no recipe available", v2);
            OUTLINED_FUNCTION_60();
          }

          return 4;
        }
        v43 = *(Class *)((char *)&v6->isa + OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_features);
        if ((OUTLINED_FUNCTION_279_3(*v9 & *v43) & 1) != 0
          && (OUTLINED_FUNCTION_52_29(),
              OUTLINED_FUNCTION_54_0(*(uint64_t (**)(void))(v44 + 440)),
              OUTLINED_FUNCTION_120(),
              v46 = (*(uint64_t (**)(void))((*v9 & v45) + 0x280))(),
              v43,
              (v46 & 1) != 0)
          && (OUTLINED_FUNCTION_52_29(), (v48 = (void *)OUTLINED_FUNCTION_54_0(*(uint64_t (**)(void))(v47 + 416))) != 0))
        {
          v49 = objc_msgSend(v48, sel_isAmbient);

          OUTLINED_FUNCTION_19_0();
          if ((v49 & 1) == 0)
            return 4;
        }
        else
        {

        }
        return 3;
      }
      if (one-time initialization token for conversationControls != -1)
        swift_once();
      v40 = OUTLINED_FUNCTION_17_2();
      OUTLINED_FUNCTION_3(v40, (uint64_t)&static Logger.conversationControls);
      v41 = OUTLINED_FUNCTION_37_4();
      if (OUTLINED_FUNCTION_13_0(v41))
      {
        v42 = (_WORD *)OUTLINED_FUNCTION_105();
        OUTLINED_FUNCTION_124_3(v42);
        v38 = "[SystemAperture] preferredLayoutMode is .custom (by default) since no conversationControlsViewController available";
LABEL_25:
        OUTLINED_FUNCTION_130(&dword_1BD004000, v0, (os_log_type_t)v0, v38, v1);
        OUTLINED_FUNCTION_60();
      }
    }
    else
    {
      if (one-time initialization token for conversationControls != -1)
        swift_once();
      v35 = OUTLINED_FUNCTION_17_2();
      OUTLINED_FUNCTION_3(v35, (uint64_t)&static Logger.conversationControls);
      v36 = OUTLINED_FUNCTION_31_6();
      if (OUTLINED_FUNCTION_13_0(v36))
      {
        v37 = (_WORD *)OUTLINED_FUNCTION_105();
        OUTLINED_FUNCTION_124_3(v37);
        v38 = "[SystemAperture] preferredLayoutMode is .custom (by default) since we are missing a leading/trailing or minimal";
        goto LABEL_25;
      }
    }

    return 4;
  }
  v26 = *(_QWORD *)v8;
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v27 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v27, (uint64_t)&static Logger.conversationControls);
  v28 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_4_14(v28))
  {
    v29 = (uint8_t *)OUTLINED_FUNCTION_105();
    v50 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v29 = 136315138;
    type metadata accessor for SBUISystemApertureLayoutMode(0);
    v30 = String.init<A>(reflecting:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v30, v31, &v50);
    OUTLINED_FUNCTION_59_1();
    OUTLINED_FUNCTION_54_1();
    OUTLINED_FUNCTION_48(&dword_1BD004000, v0, v3, "[SystemAperture] returning a forced SBUISystemApertureLayoutMode - preferredLayoutMode is %s", v29);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  *(_QWORD *)v8 = 0;
  v8[8] = 1;
  SystemBannerHostViewController.nextSystemApertureLayoutMode.didset();
  return v26;
}

uint64_t SystemBannerHostViewController.maximumLayoutMode.getter()
{
  uint64_t v0;
  uint64_t *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  os_log_type_t v6;
  uint8_t *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  _QWORD v13[10];
  _QWORD __src[10];
  _QWORD __dst[10];
  id v16[2];
  id v17[2];
  id v18[2];
  id v19[3];

  if (!OUTLINED_FUNCTION_42_25(*v1))
    return 4;
  v3 = OUTLINED_FUNCTION_67_12();
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v0 + 72))(v13, v3, v0);

  outlined init with take of RemoteControlOnboardingView?((uint64_t)v13, (uint64_t)__src, (uint64_t *)&demangling cache variable for type metadata for SystemApertureElement?);
  if (__src[0] == 1)
    return 4;
  memcpy(__dst, __src, 0x49uLL);
  v4 = __dst[8];
  OUTLINED_FUNCTION_197_2((uint64_t)__dst, (uint64_t)v16);
  outlined release of BackgroundView<A>(v16);
  OUTLINED_FUNCTION_197_2((uint64_t)&__dst[2], (uint64_t)v17);
  outlined release of BackgroundView<A>(v17);
  OUTLINED_FUNCTION_197_2((uint64_t)&__dst[4], (uint64_t)v18);
  outlined release of BackgroundView<A>(v18);
  OUTLINED_FUNCTION_197_2((uint64_t)&__dst[6], (uint64_t)v19);
  outlined release of BackgroundView<A>(v19);
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v5 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v5, (uint64_t)&static Logger.conversationControls);
  v6 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_51_3(v6))
  {
    v7 = (uint8_t *)OUTLINED_FUNCTION_105();
    v12 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v7 = 136315138;
    v8 = (id)SBUISystemApertureLayoutModeDescription();
    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();

    OUTLINED_FUNCTION_162(v9, v10, &v12);
    OUTLINED_FUNCTION_31_3();
    OUTLINED_FUNCTION_58_1();
    OUTLINED_FUNCTION_48(&dword_1BD004000, &demangling cache variable for type metadata for SystemApertureAccessoryView?, v2, "Overridding the default maximum layout mode with %s", v7);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  return v4;
}

void SystemBannerHostViewController.leadingView.getter()
{
  OUTLINED_FUNCTION_106_10(OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_leadingViewContainer);
  OUTLINED_FUNCTION_0();
}

void SystemBannerHostViewController.trailingView.getter()
{
  OUTLINED_FUNCTION_106_10(OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_trailingViewContainer);
  OUTLINED_FUNCTION_0();
}

void SystemBannerHostViewController.minimalView.getter()
{
  OUTLINED_FUNCTION_106_10(OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_minimalViewContainer);
  OUTLINED_FUNCTION_0();
}

void SystemBannerHostViewController.detachedMinimalView.getter()
{
  OUTLINED_FUNCTION_106_10(OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_detachedMinimalViewContainer);
  OUTLINED_FUNCTION_0();
}

void SystemBannerHostViewController.elementIdentifier.getter()
{
  OUTLINED_FUNCTION_106_10(OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_elementIdentifier);
  OUTLINED_FUNCTION_0();
}

uint64_t SystemBannerHostViewController.associatedAppBundleIdentifier.getter()
{
  void *v0;
  char v1;
  uint64_t v2;
  void (*v3)(void);
  uint64_t v4;
  uint64_t (**v5)(_QWORD, _QWORD);
  uint64_t (**v6)(_QWORD, _QWORD);
  void *v7;
  uint64_t v8;
  id v10;
  uint64_t v11;
  void *v12;
  unsigned __int8 v13;
  char v14;

  OUTLINED_FUNCTION_93();
  OUTLINED_FUNCTION_9_28();
  v3 = *(void (**)(void))(v2 + 440);
  v3();
  OUTLINED_FUNCTION_120();
  OUTLINED_FUNCTION_27_1(v4);
  v6 = v5;

  v7 = (void *)OUTLINED_FUNCTION_20_11();
  objc_msgSend((id)((uint64_t (**)(void *, _QWORD))v6)[20](v7, v6), sel_isSystemProvider);
  OUTLINED_FUNCTION_10_20();
  if ((v1 & 1) != 0)
    goto LABEL_2;
  v3();
  ConversationControlsManager.isActiveCallGreenTea3P()();
  OUTLINED_FUNCTION_10_20();
  if (OUTLINED_FUNCTION_168_0(v6[23]) == 4)
    goto LABEL_2;
  OUTLINED_FUNCTION_9_28();
  v12 = (void *)(*(uint64_t (**)(void))(v11 + 416))();
  if (v12)
  {
    v13 = objc_msgSend(v12, sel_isSpringBoardLocked);
    OUTLINED_FUNCTION_10();
    v14 = v13 ^ 1;
  }
  else
  {
    v14 = 1;
  }
  if ((OUTLINED_FUNCTION_168_0(v6[27]) & 1) != 0 && (v14 & 1) == 0
    || (v10 = objc_msgSend((id)OUTLINED_FUNCTION_167_3(), sel_bundleIdentifier),
        OUTLINED_FUNCTION_4_39(),
        !v7))
  {
LABEL_2:
    OUTLINED_FUNCTION_19_0();
    return 0;
  }
  else
  {
    v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();

    OUTLINED_FUNCTION_19_0();
  }
  return v8;
}

void SystemBannerHostViewController.backgroundActivitiesToSuppress.getter()
{
  uint64_t *v0;
  void *v1;
  id v2;

  v1 = (void *)OUTLINED_FUNCTION_43_6(*v0);
  if (v1)
  {
    v2 = objc_msgSend(v1, sel_backgroundActivitiesToSuppress);
    OUTLINED_FUNCTION_19_0();
    type metadata accessor for STBackgroundActivityIdentifier(0);
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type STBackgroundActivityIdentifier and conformance STBackgroundActivityIdentifier, type metadata accessor for STBackgroundActivityIdentifier);
    OUTLINED_FUNCTION_21_6();
    static Set._unconditionallyBridgeFromObjectiveC(_:)();

  }
  OUTLINED_FUNCTION_0();
}

uint64_t SystemBannerHostViewController.presentationBehaviors.getter()
{
  uint64_t *v0;
  uint64_t (**v1)(uint64_t, uint64_t);
  uint8_t *v2;
  void *v3;
  unsigned __int8 v4;
  char v5;
  uint64_t v6;
  uint64_t (*v7)(void);
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t);
  unsigned __int8 v20;
  uint64_t v21;
  os_log_type_t v22;
  _WORD *v23;
  uint64_t v24;
  os_log_type_t v25;
  uint8_t *v26;

  v2 = (uint8_t *)v0;
  v3 = (void *)OUTLINED_FUNCTION_43_6(*v0);
  if (v3)
  {
    v4 = objc_msgSend(v3, sel_isSpringBoardLocked);
    OUTLINED_FUNCTION_19_0();
    v5 = v4 ^ 1;
  }
  else
  {
    v5 = 1;
  }
  OUTLINED_FUNCTION_71_19();
  v7 = *(uint64_t (**)(void))(v6 + 440);
  v8 = (uint64_t *)v7();
  v9 = OUTLINED_FUNCTION_27_1(*v8);
  OUTLINED_FUNCTION_222_2();
  OUTLINED_FUNCTION_71_19();
  if (((*(uint64_t (**)(void))(v10 + 1120))() & 1) == 0)
  {
    v11 = v7();
    OUTLINED_FUNCTION_71_19();
    (*(void (**)(void))(v17 + 640))();
    OUTLINED_FUNCTION_10_20();
    if ((v7 & 1) == 0)
    {
      v18 = OUTLINED_FUNCTION_20_11();
      v19 = v1[27];
      v11 = v9;
      if (v5 & 1 | ((v19(v18, (uint64_t)v1) & 1) == 0))
      {
        v11 = v1[20](v18, (uint64_t)v1);
        v20 = -[NSObject isFaceTimeProvider](v11, sel_isFaceTimeProvider);

        if ((v20 & 1) != 0 || (v11 = v9, (v19(v18, (uint64_t)v1) & 1) != 0))
        {
          if ((OUTLINED_FUNCTION_169_0(v1[17]) & 1) == 0 && OUTLINED_FUNCTION_169_0(v1[23]) != 6)
          {
            if (OUTLINED_FUNCTION_121_3() != 3)
            {
              v13 = 24;
              goto LABEL_28;
            }
            if (one-time initialization token for conversationControls != -1)
              swift_once();
            v21 = OUTLINED_FUNCTION_17_2();
            OUTLINED_FUNCTION_3(v21, (uint64_t)&static Logger.conversationControls);
            v22 = OUTLINED_FUNCTION_12_0();
            if (OUTLINED_FUNCTION_51_3(v22))
            {
              v23 = (_WORD *)OUTLINED_FUNCTION_105();
              OUTLINED_FUNCTION_220_0(v23);
              OUTLINED_FUNCTION_130(&dword_1BD004000, v11, (os_log_type_t)v1, "[SystemAperture] Ignoring call to add .disablesTapToApp in behaviors because we're maximumLayoutMode == .compact", v2);
              OUTLINED_FUNCTION_60();
            }

          }
        }
      }
    }
    v13 = 8;
    goto LABEL_28;
  }
  v11 = *(NSObject **)&v2[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_features];
  OUTLINED_FUNCTION_71_19();
  if ((OUTLINED_FUNCTION_279_3(v12) & 1) != 0)
    v13 = 14;
  else
    v13 = 12;
  if (OUTLINED_FUNCTION_121_3() == 3)
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v14 = OUTLINED_FUNCTION_17_2();
    OUTLINED_FUNCTION_3(v14, (uint64_t)&static Logger.conversationControls);
    v15 = OUTLINED_FUNCTION_12_0();
    if (OUTLINED_FUNCTION_4_14(v15))
    {
      v16 = (uint8_t *)OUTLINED_FUNCTION_105();
      *(_WORD *)v16 = 0;
      OUTLINED_FUNCTION_130(&dword_1BD004000, v11, (os_log_type_t)v2, "[SystemAperture] Ignoring call to add .disablesTapToApp in behaviors because we're maximumLayoutMode == .compact", v16);
      OUTLINED_FUNCTION_60();
    }

  }
  else
  {
    v13 |= 0x10uLL;
  }
LABEL_28:
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v24 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v24, (uint64_t)&static Logger.conversationControls);
  v25 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_4_14(v25))
  {
    v26 = (uint8_t *)OUTLINED_FUNCTION_105();
    *(_DWORD *)v26 = 67109120;
    OUTLINED_FUNCTION_104_10();
    _os_log_impl(&dword_1BD004000, v11, (os_log_type_t)v2, "[SystemAperture] presentationBehaviors showsOverAssociatedScene = %{BOOL}d", v26, 8u);
    OUTLINED_FUNCTION_60();
  }

  OUTLINED_FUNCTION_19_0();
  return v13;
}

void SystemBannerHostViewController.keyColor.getter()
{
  OUTLINED_FUNCTION_106_10(OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_keyColor);
  OUTLINED_FUNCTION_0();
}

Swift::Void __swiftcall SystemBannerHostViewController.updateSystemAperturePreferredContentSize()()
{
  _QWORD *v0;
  uint8_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  char v8;
  double v9;
  double v10;
  uint64_t v11;
  os_log_type_t v12;
  _WORD *v13;
  NSObject *v14;

  OUTLINED_FUNCTION_206();
  if (OUTLINED_FUNCTION_91_12(v2) == 4 && OUTLINED_FUNCTION_33_43(*v0))
  {
    v4 = v3;
    v5 = OUTLINED_FUNCTION_172_1();
    *(double *)&v6 = COERCE_DOUBLE((*(uint64_t (**)(uint64_t, uint64_t))(v4 + 80))(v5, v4));
    if ((v8 & 1) != 0)
    {
      if (one-time initialization token for conversationControls != -1)
        swift_once();
      v11 = OUTLINED_FUNCTION_17_2();
      OUTLINED_FUNCTION_3(v11, (uint64_t)&static Logger.conversationControls);
      v12 = OUTLINED_FUNCTION_232();
      if (OUTLINED_FUNCTION_5_3(v12))
      {
        v13 = (_WORD *)OUTLINED_FUNCTION_105();
        OUTLINED_FUNCTION_47_2(v13);
        OUTLINED_FUNCTION_130(&dword_1BD004000, v14, (os_log_type_t)v4, "Using preferredContentSize fallback in system aperture view because it didn't specify a size", v1);
        OUTLINED_FUNCTION_60();
      }

      -[NSObject preferredContentSize](v14, sel_preferredContentSize);
    }
    else
    {
      v9 = *(double *)&v6;
      v10 = v7;
    }
    objc_msgSend(v0, sel_setPreferredContentSize_, v9, v10);
    OUTLINED_FUNCTION_0_77(v14);
  }
  else
  {
    OUTLINED_FUNCTION_43_1();
  }
}

void SystemBannerHostViewController.handleLayoutModeTransition(from:to:isUserInitiated:)(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, int a10, os_log_type_t type, uint64_t a12, int a13, int a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  NSObject *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  NSObject *v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  os_log_type_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t ObjectType;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  os_log_type_t typea;

  OUTLINED_FUNCTION_3_0();
  a27 = v29;
  a28 = v33;
  if (v31 != v30)
  {
    v34 = v28;
    v35 = v32;
    v36 = v31;
    v37 = v30;
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v38 = OUTLINED_FUNCTION_17_2();
    OUTLINED_FUNCTION_3(v38, (uint64_t)&static Logger.conversationControls);
    v39 = OUTLINED_FUNCTION_12_0();
    if (OUTLINED_FUNCTION_35(v28))
    {
      typea = v39;
      v40 = OUTLINED_FUNCTION_105();
      a16 = OUTLINED_FUNCTION_105();
      *(_DWORD *)v40 = 136315650;
      v41 = (id)SBUISystemApertureLayoutModeDescription();
      v42 = static String._unconditionallyBridgeFromObjectiveC(_:)();

      OUTLINED_FUNCTION_304(v42, v43, &a16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_25();
      *(_WORD *)(v40 + 12) = 2080;
      v44 = (id)SBUISystemApertureLayoutModeDescription();
      v45 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v47 = v46;

      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v45, v47, &a16);
      OUTLINED_FUNCTION_17_56();
      OUTLINED_FUNCTION_21_0();
      *(_WORD *)(v40 + 22) = 1024;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl(&dword_1BD004000, v28, typea, "[SystemAperture] handling transition from layout mode changed %s to %s, isUserInitiated %{BOOL}d", (uint8_t *)v40, 0x1Cu);
      OUTLINED_FUNCTION_25_6();
      OUTLINED_FUNCTION_60();
    }

    v48 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    v49 = OUTLINED_FUNCTION_33_43((uint64_t)v28->isa);
    if (v49)
    {
      v51 = (void *)v49;
      v52 = v50;
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v52 + 128))(ObjectType, v52);

    }
    if (v37 == 4)
    {
      if (v36 == 3 && (v35 & 1) != 0)
      {
        v54 = (uint64_t *)OUTLINED_FUNCTION_54_0(*(uint64_t (**)(void))((*v48 & (uint64_t)v34->isa) + 0x1B8));
        OUTLINED_FUNCTION_27_1(*v54);
        OUTLINED_FUNCTION_222_2();
        v55 = swift_getObjectType();
        MEMORY[0x1A3](1, v55, 3);
        OUTLINED_FUNCTION_113();
      }
      SystemBannerHostViewController.dismissEphemeralSystemApertureContent()();
      objc_msgSend(OUTLINED_FUNCTION_123(v56, sel_systemApertureElementContext), sel_elementDidDismissMenu);
      OUTLINED_FUNCTION_19_0();
      if (one-time initialization token for shared != -1)
        swift_once();
      OUTLINED_FUNCTION_16_23();
      (*(void (**)(void))(v57 + 272))();
    }
  }
  OUTLINED_FUNCTION_0_20();
}

id SystemBannerHostViewController.positionSystemApertureAccessoryView(_:aligningWithEdge:)(void *a1, uint64_t a2, void *a3)
{
  _QWORD *v3;
  _QWORD *v4;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  id v15;
  double v16;
  double v17;
  double v18;
  double v19;
  id v20;
  double v21;
  double v22;
  uint64_t v23;
  double v24;
  double *v25;
  double MinX;
  id v27;
  void *v28;
  double v29;
  CGFloat v30;
  double v31;
  CGFloat v32;
  double v33;
  CGFloat v34;
  double v35;
  CGFloat v36;
  CGFloat v37;
  uint64_t v38;
  id v39;
  id v40;
  id v41;
  double MaxX;
  uint64_t v43;
  id result;
  id v45;
  char **v46;
  id v47;
  double MidX;
  uint64_t v49;
  id v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  const char *v57;
  uint64_t v58;
  id v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65[5];
  id v66;
  double v67;
  uint64_t v68;
  char v69;
  CGRect v70;
  CGRect v71;
  CGRect v72;
  CGRect v73;
  CGRect v74;
  CGRect v75;
  CGRect v76;

  v4 = v3;
  v8 = OUTLINED_FUNCTION_25_1((uint64_t)a1, sel_view);
  if (!v8)
  {
    __break(1u);
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  v9 = v8;
  v10 = objc_msgSend(v8, sel_effectiveUserInterfaceLayoutDirection);

  if (v10)
    v11 = 8;
  else
    v11 = 2;
  v12 = OUTLINED_FUNCTION_20_11();
  (*(void (**)(id *__return_ptr, uint64_t, uint64_t))(a2 + 8))(v65, v12, a2);
  v13 = outlined init with take of SystemApertureLayoutMargins((uint64_t)v65, (uint64_t)&v66);
  if (!v69)
  {
    v25 = &v67;
    if (a3 != (void *)2)
      v25 = (double *)&v68;
    MinX = *v25;
    if ((void *)v11 == a3)
      goto LABEL_20;
    v27 = OUTLINED_FUNCTION_9(v13, sel_view);
    if (v27)
    {
      v28 = v27;
      objc_msgSend(v27, sel_bounds);
      v30 = v29;
      v32 = v31;
      v34 = v33;
      v36 = v35;

      v71.origin.x = v30;
      v71.origin.y = v32;
      v71.size.width = v34;
      v71.size.height = v36;
      v37 = CGRectGetMaxX(v71) - MinX;
      OUTLINED_FUNCTION_123(v38, sel_frame);
      MinX = v37 - CGRectGetWidth(v72);
      goto LABEL_20;
    }
    goto LABEL_41;
  }
  if (v69 != 1)
  {
    v39 = OUTLINED_FUNCTION_9(v13, sel_view);
    if ((void *)v11 != a3)
    {
      if (v39)
      {
        v41 = OUTLINED_FUNCTION_25_1((uint64_t)v39, sel_SBUISA_systemApertureLegibleContentLayoutMarginsGuide);
        OUTLINED_FUNCTION_14_18();
        objc_msgSend(v4, sel_layoutFrame);
        OUTLINED_FUNCTION_152_5();
        v74.origin.x = OUTLINED_FUNCTION_66();
        MaxX = CGRectGetMaxX(v74);
        OUTLINED_FUNCTION_123(v43, sel_frame);
        MinX = MaxX - CGRectGetWidth(v75);
        goto LABEL_20;
      }
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
      goto LABEL_45;
    }
    if (v39)
    {
      v40 = OUTLINED_FUNCTION_25_1((uint64_t)v39, sel_SBUISA_systemApertureLegibleContentLayoutMarginsGuide);
      OUTLINED_FUNCTION_14_18();
      objc_msgSend(v4, sel_layoutFrame);
      OUTLINED_FUNCTION_152_5();
      v73.origin.x = OUTLINED_FUNCTION_66();
      MinX = CGRectGetMinX(v73);
LABEL_20:
      OUTLINED_FUNCTION_123(v13, sel_frame);
      return objc_msgSend(a1, sel_setFrame_, MinX);
    }
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  v14 = v67;
  if (v66)
  {
    v15 = objc_msgSend(v66, sel_center);
    v17 = v16;
    v19 = v18;
    v20 = OUTLINED_FUNCTION_25_1((uint64_t)v15, sel_superview);
    objc_msgSend(a1, sel_convertPoint_fromView_, v20, v17, v19);
    v22 = v21;

    OUTLINED_FUNCTION_123(v23, sel_bounds);
    v24 = CGRectGetMidX(v70) - v22;
  }
  else
  {
    v24 = 0.0;
  }
  if (a3 == (void *)2)
  {
    v45 = OUTLINED_FUNCTION_9(v13, sel_view);
    if (v45)
    {
      v46 = &selRef_SBUISA_systemApertureLeadingConcentricContentLayoutGuide;
      goto LABEL_27;
    }
    goto LABEL_44;
  }
  v45 = OUTLINED_FUNCTION_9(v13, sel_view);
  if (!v45)
  {
LABEL_45:
    __break(1u);
    JUMPOUT(0x1BD363488);
  }
  v46 = &selRef_SBUISA_systemApertureTrailingConcentricContentLayoutGuide;
LABEL_27:
  v47 = OUTLINED_FUNCTION_25_1((uint64_t)v45, *v46);
  OUTLINED_FUNCTION_4_39();
  objc_msgSend(a3, sel_layoutFrame);

  v76.origin.x = OUTLINED_FUNCTION_66();
  MidX = CGRectGetMidX(v76);
  switch((*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v4) + 0x550))())
  {
    case -1:
    case 0:
    case 1:
      if (one-time initialization token for conversationControls != -1)
        swift_once();
      v49 = OUTLINED_FUNCTION_17_2();
      v50 = OUTLINED_FUNCTION_79_16(v49, (uint64_t)&static Logger.conversationControls);
      v51 = OUTLINED_FUNCTION_145_5();
      v52 = static os_log_type_t.fault.getter();
      if (!OUTLINED_FUNCTION_35(v51))
        goto LABEL_37;
      v53 = (uint8_t *)OUTLINED_FUNCTION_105();
      v63 = OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_126_3(v63, 4.8149e-34);
      v54 = (id)SBUISystemApertureLayoutModeDescription();
      OUTLINED_FUNCTION_75_2();
      OUTLINED_FUNCTION_84_10();
      OUTLINED_FUNCTION_174_2(v55, v56);
      OUTLINED_FUNCTION_86_10();

      OUTLINED_FUNCTION_54_1();
      v57 = "[System Aperture] Unexpected positioning of accessoryView for layoutMode: %s";
      goto LABEL_36;
    case 2:
    case 4:
      goto LABEL_38;
    case 3:
      goto LABEL_39;
    default:
      if (one-time initialization token for conversationControls != -1)
        swift_once();
      v58 = OUTLINED_FUNCTION_17_2();
      v59 = OUTLINED_FUNCTION_79_16(v58, (uint64_t)&static Logger.conversationControls);
      v51 = OUTLINED_FUNCTION_145_5();
      v52 = static os_log_type_t.fault.getter();
      if (OUTLINED_FUNCTION_35(v51))
      {
        v53 = (uint8_t *)OUTLINED_FUNCTION_105();
        v64 = OUTLINED_FUNCTION_105();
        OUTLINED_FUNCTION_126_3(v64, 4.8149e-34);
        v60 = (id)SBUISystemApertureLayoutModeDescription();
        OUTLINED_FUNCTION_75_2();
        OUTLINED_FUNCTION_84_10();
        OUTLINED_FUNCTION_174_2(v61, v62);
        OUTLINED_FUNCTION_86_10();

        OUTLINED_FUNCTION_54_1();
        v57 = "[System Aperture] Unknown default for layoutMode during accessory positioning: %s";
LABEL_36:
        OUTLINED_FUNCTION_48(&dword_1BD004000, v51, v52, v57, v53);
        OUTLINED_FUNCTION_21();
        OUTLINED_FUNCTION_60();
      }
LABEL_37:

LABEL_38:
      v14 = 0.0;
LABEL_39:
      objc_msgSend(a1, sel_center);
      objc_msgSend(a1, sel_setCenter_, MidX + v24 + v14);
      result = (id)outlined release of SystemApertureLayoutMargins((uint64_t)v65);
      break;
  }
  return result;
}

Swift::Void __swiftcall SystemBannerHostViewController.positionSystemApertureAccessoryViews()()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  void *v9;

  if (OUTLINED_FUNCTION_59_24(*v0))
  {
    OUTLINED_FUNCTION_172_1();
    if (dynamic_cast_existential_1_conditional((uint64_t)v9))
    {
      OUTLINED_FUNCTION_16_23();
      v2 = (*(uint64_t (**)(void))(v1 + 1456))();
      if (v2)
      {
        v3 = (void *)v2;
        swift_getObjectType();
        if (dynamic_cast_existential_1_conditional((uint64_t)v3))
        {
          v4 = v3;
          OUTLINED_FUNCTION_16_23();
          v6 = *(void (**)(uint64_t))(v5 + 1520);
          v7 = OUTLINED_FUNCTION_65_2();
          v6(v7);
          v8 = OUTLINED_FUNCTION_311_0();
          v6(v8);
          v3 = v9;
          v9 = v4;
        }

      }
    }
    OUTLINED_FUNCTION_4_21(v9);
  }
  else
  {
    OUTLINED_FUNCTION_6_2();
  }
}

void SystemBannerHostViewController.viewWillLayoutSubviews(with:)()
{
  void *v0;
  void *v1;
  char v2;
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_83_17();
  if (v2)
  {
    v3 = v1;
    *(_QWORD *)(OUTLINED_FUNCTION_7_0() + 16) = v0;
    v4 = MEMORY[0x1E0C809B0];
    v5 = OUTLINED_FUNCTION_236_3((uint64_t)&block_descriptor_24_1, MEMORY[0x1E0C809B0], 1107296256, v8, v10);
    v6 = v0;
    swift_release();
    OUTLINED_FUNCTION_7_0();
    swift_unknownObjectWeakInit();
    v7 = OUTLINED_FUNCTION_236_3((uint64_t)&block_descriptor_28_0, v4, 1107296256, v9, v11);
    swift_release();
    objc_msgSend(v3, sel_animateAlongsideTransition_completion_, v5, v7);
    _Block_release(v7);
    _Block_release(v5);
  }
}

#error "1BD36392C: call analysis failed (funcsize=175)"

void closure #2 in SystemBannerHostViewController.viewWillLayoutSubviews(with:)(void *a1, uint64_t a2)
{
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  _QWORD *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;

  v3 = a2 + 16;
  swift_beginAccess();
  v4 = (_QWORD *)MEMORY[0x1C3B752C0](v3);
  v5 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  if (v4)
  {
    v6 = v4;
    (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v4) + 0x2B8))();

    swift_retain();
    swift_release();
    v24 = 0;
    CurrentValueSubject.send(_:)();
    swift_release();
  }
  swift_beginAccess();
  v7 = MEMORY[0x1C3B752C0](v3);
  if (v7)
  {
    v8 = (void *)v7;
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v9 = type metadata accessor for Logger();
    __swift_project_value_buffer(v9, (uint64_t)&static Logger.conversationControls);
    v10 = v8;
    swift_unknownObjectRetain_n();
    v11 = v10;
    v12 = Logger.logObject.getter();
    v13 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = swift_slowAlloc();
      v15 = swift_slowAlloc();
      v23 = v15;
      *(_DWORD *)v14 = 136446466;
      (*(void (**)(void))((*v5 & *v11) + 0x550))();
      v16 = (id)SBUISystemApertureLayoutModeDescription();
      v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v19 = v18;

      v22 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v17, v19, &v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v14 + 12) = 1024;
      objc_msgSend(a1, sel_isCancelled, v22);
      swift_unknownObjectRelease();
      v5 = (_QWORD *)MEMORY[0x1E0DEEDD8];
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_unknownObjectRelease();
      _os_log_impl(&dword_1BD004000, v12, v13, "[SystemAperture] viewWillLayoutSubviews completed with activeLayoutMode=%{public}s canceled=%{BOOL}d", (uint8_t *)v14, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v15, -1, -1);
      MEMORY[0x1C3B751B8](v14, -1, -1);

    }
    else
    {

      v20 = swift_unknownObjectRelease_n();
    }
    v21 = (void *)(*(uint64_t (**)(uint64_t))((*v5 & *v11) + 0x1B8))(v20);
    ConversationControlsManager.updateGreenTea3PCallStateIfNeeded()();

  }
}

void SystemBannerHostViewController.updateWaveformForLayoutMode(_:)(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, int a10, int a11, uint64_t a12, id a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  NSObject *v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  uint8_t *v31;
  uint8_t *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  void *v37;
  id v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  NSObject *v42;
  uint64_t v44;
  os_log_type_t v45;
  uint8_t *v46;
  NSObject *v47;
  os_log_type_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  os_log_type_t v57;
  _WORD *v58;
  uint64_t v59;
  void *v60;
  uint64_t v61[11];
  uint64_t v62;
  uint64_t v63;

  OUTLINED_FUNCTION_3_0();
  v62 = v28;
  v63 = v29;
  v30 = v27;
  v32 = v31;
  v33 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v34 = OUTLINED_FUNCTION_181_2(**(_QWORD **)((char *)&v27->isa
                                            + OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_trailingViewContainer));
  if (!v34)
  {
LABEL_20:
    OUTLINED_FUNCTION_0_20();
    return;
  }
  v60 = (void *)v34;
  type metadata accessor for SystemApertureInCallWaveformTrailingView();
  v35 = swift_dynamicCastClass();
  if (!v35)
    goto LABEL_27;
  v36 = OUTLINED_FUNCTION_9(v35, sel_view);
  if (v36)
  {
    v37 = v36;
    v38 = objc_msgSend(v36, sel_window);

    if (v38)
    {
      v40 = OUTLINED_FUNCTION_25_1(v39, sel_windowScene);

      if (v40)
      {
        v42 = OUTLINED_FUNCTION_2_11(v41, sel_activationState);

        if (v42)
        {
          if (v32 != (uint8_t *)3 || v42 != 1)
            goto LABEL_13;
          goto LABEL_22;
        }
        if (v32 == (uint8_t *)3)
        {
LABEL_22:
          if (one-time initialization token for conversationControls != -1)
            swift_once();
          v56 = OUTLINED_FUNCTION_17_2();
          OUTLINED_FUNCTION_3(v56, (uint64_t)&static Logger.conversationControls);
          v57 = OUTLINED_FUNCTION_12_0();
          if (OUTLINED_FUNCTION_5_3(v57))
          {
            v58 = (_WORD *)OUTLINED_FUNCTION_105();
            OUTLINED_FUNCTION_47_2(v58);
            OUTLINED_FUNCTION_130(&dword_1BD004000, v42, (os_log_type_t)v30, "Starting the audio waveform because the layout mode is compact and scene is foreground", v32);
            OUTLINED_FUNCTION_60();
          }

          OUTLINED_FUNCTION_71_19();
          (*(void (**)(void))(v59 + 248))();
LABEL_27:

          return;
        }
      }
    }
LABEL_13:
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v44 = OUTLINED_FUNCTION_17_2();
    OUTLINED_FUNCTION_3(v44, (uint64_t)&static Logger.conversationControls);
    v45 = OUTLINED_FUNCTION_251_0();
    if (OUTLINED_FUNCTION_78_0(v32))
    {
      v46 = (uint8_t *)OUTLINED_FUNCTION_105();
      *(_WORD *)v46 = 0;
      OUTLINED_FUNCTION_130(&dword_1BD004000, v32, v45, "Stopping the audio waveform", v46);
      OUTLINED_FUNCTION_60();
    }

    v47 = v30;
    Logger.logObject.getter();
    v48 = OUTLINED_FUNCTION_369();
    if (OUTLINED_FUNCTION_78_0(v30))
    {
      v49 = OUTLINED_FUNCTION_105();
      v61[0] = OUTLINED_FUNCTION_105();
      *(_DWORD *)v49 = 136446466;
      (*(void (**)(void))((*v33 & (uint64_t)v47->isa) + 0x550))();
      v50 = (id)SBUISystemApertureLayoutModeDescription();
      v51 = OUTLINED_FUNCTION_75_2();

      OUTLINED_FUNCTION_162(v51, v52, v61);
      OUTLINED_FUNCTION_17_56();

      OUTLINED_FUNCTION_58_1();
      *(_WORD *)(v49 + 12) = 2082;
      v53 = String.init<A>(reflecting:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v53, v54, v61);
      OUTLINED_FUNCTION_137_0();
      OUTLINED_FUNCTION_21_0();
      OUTLINED_FUNCTION_26_6(&dword_1BD004000, v30, v48, "layoutMode=%{public}s, sceneIsForeground=%{public}s", (uint8_t *)v49);
      OUTLINED_FUNCTION_25_6();
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_71_19();
    (*(void (**)(void))(v55 + 256))();

    goto LABEL_20;
  }
  __break(1u);
}

void SystemBannerHostViewController.alertIfNeededForRecipeTransition(from:to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_39_6();
  if (((*(uint64_t (**)(void))(v4 + 1384))() & 1) != 0)
  {
    OUTLINED_FUNCTION_39_6();
    (*(void (**)(void))(v5 + 696))();
    OUTLINED_FUNCTION_120();
    (*(void (**)(uint64_t, uint64_t))(v6 + 192))(a1, a2);
    OUTLINED_FUNCTION_43();
  }
  OUTLINED_FUNCTION_18();
}

void SystemBannerHostViewController.performUpdateForRecipeTransition(from:to:coordinatedAnimations:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(void);
  void (*v6)(void);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t EnumTagSinglePayload;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  _QWORD v33[6];

  OUTLINED_FUNCTION_93();
  v4 = v3;
  v6 = v5;
  v8 = v7;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_6_0();
  v10 = OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_16_2();
  OUTLINED_FUNCTION_83_17();
  if (v12 && (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x550))() == 4)
  {
    outlined init with copy of ModifiedContent<<<opaque return type of View.environment<A>(_:)>>.0, _TransactionModifier>(v8, v2, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v2, 1, v10);
    if ((_DWORD)EnumTagSinglePayload == 1)
    {
      OUTLINED_FUNCTION_96_6(EnumTagSinglePayload, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
    }
    else
    {
      _s15ConversationKit11ParticipantVWObTm_0(v2, v1, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
      ConversationControlsType.wantsUpdateAnimationAfter.getter(v14, v15, v16, v17, v18, v19, v20, v21);
      if ((v22 & 1) != 0)
      {
        ConversationControlsType.wantsUpdateAnimationBefore.getter(v22, v23, v24, v25, v26, v27, v28, v29);
        if ((v22 & 1) != 0)
        {
          static ConversationControlsType.== infix(_:_:)(v1);
          if ((v22 & 1) == 0)
          {
            v30 = OUTLINED_FUNCTION_2_11(v22, sel_systemApertureElementContext);
            v33[4] = v6;
            v33[5] = v4;
            v33[0] = MEMORY[0x1E0C809B0];
            v33[1] = 1107296256;
            v33[2] = thunk for @escaping @callee_guaranteed () -> ();
            v33[3] = &block_descriptor_31_0;
            v31 = _Block_copy(v33);
            swift_retain();
            swift_release();
            objc_msgSend(v30, sel_setElementNeedsLayoutUpdateWithOptions_coordinatedAnimations_, 1, v31);
            _Block_release(v31);
            v32 = OUTLINED_FUNCTION_10();
            OUTLINED_FUNCTION_22_29(v32, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
            goto LABEL_11;
          }
        }
      }
      OUTLINED_FUNCTION_22_29(v22, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
    }
  }
  v6();
LABEL_11:
  OUTLINED_FUNCTION_52_1();
}

void SystemBannerHostViewController.installSystemApertureViewsIfNeeded()()
{
  void *v0;
  uint64_t *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  NSObject *v14;
  uint64_t v15;
  os_log_type_t v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  _WORD *v24;
  uint64_t v25;
  NSObject *v26;
  NSObject *v27;

  OUTLINED_FUNCTION_83_17();
  if (!v2)
  {
    OUTLINED_FUNCTION_6_2();
    return;
  }
  v3 = OUTLINED_FUNCTION_59_24(*v1);
  if (!v3)
    goto LABEL_14;
  v0 = (void *)v3;
  OUTLINED_FUNCTION_154();
  v5 = OUTLINED_FUNCTION_8_64(*(uint64_t (**)(void))(v4 + 1456));
  if (!v5)
  {
LABEL_13:

LABEL_14:
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v15 = OUTLINED_FUNCTION_17_2();
    OUTLINED_FUNCTION_3(v15, (uint64_t)&static Logger.conversationControls);
    v16 = OUTLINED_FUNCTION_23_41();
    if (OUTLINED_FUNCTION_5_9(v16, v17, v18, v19, v20, v21, v22, v23, v25, v26))
    {
      v24 = (_WORD *)OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_52_3(v24);
      OUTLINED_FUNCTION_130(&dword_1BD004000, v27, (os_log_type_t)v0, "[SystemAperture] NOT installing leadingView, trailingView, and minimalView because at least one is missing", (uint8_t *)v1);
      OUTLINED_FUNCTION_60();
    }
    goto LABEL_18;
  }
  v6 = (void *)v5;
  OUTLINED_FUNCTION_154();
  v8 = OUTLINED_FUNCTION_8_64(*(uint64_t (**)(void))(v7 + 1464));
  if (!v8)
  {

    v0 = v6;
    goto LABEL_13;
  }
  v9 = (void *)v8;
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v10 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v10, (uint64_t)&static Logger.conversationControls);
  v11 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_35(v1))
  {
    v12 = (uint8_t *)OUTLINED_FUNCTION_105();
    *(_WORD *)v12 = 0;
    OUTLINED_FUNCTION_130(&dword_1BD004000, v1, v11, "[SystemAperture] installing leadingView, trailingView, and minimalView into self.view", v12);
    OUTLINED_FUNCTION_60();
  }

  v14 = OUTLINED_FUNCTION_9(v13, sel_view);
  if (v14)
  {
    v27 = v14;
    -[NSObject addSubview:](v14, sel_addSubview_, v0);
    -[NSObject addSubview:](v27, sel_addSubview_, v6);
    SystemBannerHostViewController.updateSystemApertureViewsVisibility()(-[NSObject addSubview:](v27, sel_addSubview_, v9));

LABEL_18:
    OUTLINED_FUNCTION_4_21(v27);
    return;
  }
  __break(1u);
}

#error "1BD3645C0: call analysis failed (funcsize=96)"

#error "1BD364800: call analysis failed (funcsize=271)"

void SystemBannerHostViewController.updateSystemApertureCustomContentVisibility(hidden:shouldLog:)(char a1, NSObject *a2)
{
  uint64_t *v2;
  void *v5;
  uint64_t v6;
  int v7;
  id v8;
  void *v9;
  double v10;
  uint64_t v11;
  os_log_type_t v12;
  _WORD *v13;
  const char *v14;
  uint64_t v15;
  os_log_type_t v16;
  _WORD *v17;
  id v18;

  v5 = (void *)OUTLINED_FUNCTION_42_25(*v2);
  if (!v5)
  {
    OUTLINED_FUNCTION_43_1();
    return;
  }
  v18 = v5;
  if (!objc_msgSend(v5, sel_isViewLoaded))
    goto LABEL_22;
  if (a1 == 2)
  {
    OUTLINED_FUNCTION_39_6();
    v7 = (*(uint64_t (**)(void))(v6 + 1360))() != 4;
  }
  else
  {
    v7 = a1 & 1;
  }
  v8 = objc_msgSend(v18, sel_view);
  if (v8)
  {
    v9 = v8;
    v10 = 1.0;
    if (v7)
      v10 = 0.0;
    objc_msgSend(v8, sel_setAlpha_, v10);

    if ((a2 & 1) != 0)
    {
      if (v7)
      {
        if (one-time initialization token for conversationControls != -1)
          swift_once();
        v11 = OUTLINED_FUNCTION_17_2();
        OUTLINED_FUNCTION_3(v11, (uint64_t)&static Logger.conversationControls);
        v12 = OUTLINED_FUNCTION_31_6();
        if (OUTLINED_FUNCTION_131_0(v12))
        {
          v13 = (_WORD *)OUTLINED_FUNCTION_105();
          OUTLINED_FUNCTION_52_3(v13);
          v14 = "[SystemAperture] hiding custom content";
          goto LABEL_20;
        }
      }
      else
      {
        if (one-time initialization token for conversationControls != -1)
          swift_once();
        v15 = OUTLINED_FUNCTION_17_2();
        OUTLINED_FUNCTION_3(v15, (uint64_t)&static Logger.conversationControls);
        v16 = OUTLINED_FUNCTION_31_6();
        if (OUTLINED_FUNCTION_131_0(v16))
        {
          v17 = (_WORD *)OUTLINED_FUNCTION_105();
          OUTLINED_FUNCTION_52_3(v17);
          v14 = "[SystemAperture] showing custom content";
LABEL_20:
          OUTLINED_FUNCTION_130(&dword_1BD004000, a2, (os_log_type_t)v7, v14, (uint8_t *)v9);
          OUTLINED_FUNCTION_60();
        }
      }

    }
LABEL_22:
    OUTLINED_FUNCTION_0_77(v18);
    return;
  }
  __break(1u);
}

void SystemBannerHostViewController.dismissEphemeralSystemApertureContent()()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  _OWORD *v4;
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  os_log_type_t v10;
  uint8_t *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD v25[6];
  uint64_t v26;
  _QWORD v27[10];
  _OWORD v28[3];
  unsigned __int8 v29;
  _OWORD v30[3];
  unsigned __int8 v31;

  OUTLINED_FUNCTION_93();
  v5 = v0;
  type metadata accessor for DispatchPredicate();
  OUTLINED_FUNCTION_26_24();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_59(v7, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v2 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v3 + 104))(v2, *MEMORY[0x1E0DEF740], v1);
  v8 = _dispatchPreconditionTest(_:)();
  OUTLINED_FUNCTION_19_44();
  if ((v8 & 1) == 0)
  {
    __break(1u);
LABEL_12:
    swift_once();
    goto LABEL_4;
  }
  v8 = (uint64_t)v5 + OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_overriddenSystemApertureContent;
  OUTLINED_FUNCTION_2_0();
  outlined init with copy of ModifiedContent<<<opaque return type of View.environment<A>(_:)>>.0, _TransactionModifier>(v8, (uint64_t)v28, &demangling cache variable for type metadata for SystemBannerHostViewController.OverriddenSystemApertureContent?);
  if (v29 == 255)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v28, &demangling cache variable for type metadata for SystemBannerHostViewController.OverriddenSystemApertureContent?);
    goto LABEL_10;
  }
  v4 = v28;
  v30[0] = v28[0];
  v30[1] = v28[1];
  v30[2] = v28[2];
  v31 = v29;
  if (one-time initialization token for conversationControls != -1)
    goto LABEL_12;
LABEL_4:
  v9 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v9, (uint64_t)&static Logger.conversationControls);
  OUTLINED_FUNCTION_252_1();
  v10 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_4_14(v10))
  {
    v11 = (uint8_t *)OUTLINED_FUNCTION_105();
    *(_WORD *)v11 = 0;
    OUTLINED_FUNCTION_130(&dword_1BD004000, v8, (os_log_type_t)v2, "[SystemAperture] Dismissing ephemeral system aperture content", v11);
    OUTLINED_FUNCTION_60();
  }

  v4[1] = 0u;
  v4[2] = 0u;
  *v4 = 0u;
  v29 = -1;
  SystemBannerHostViewController.overriddenSystemApertureContent.setter((uint64_t)v28);
  outlined init with copy of SystemBannerHostViewController.OverriddenSystemApertureContent((uint64_t *)v30, (uint64_t)v28);
  outlined init with copy of SystemBannerHostViewController.OverriddenSystemApertureContent((uint64_t *)v30, (uint64_t)v27);
  OUTLINED_FUNCTION_643();
  v12 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_4_14(v12))
  {
    v13 = OUTLINED_FUNCTION_105();
    v26 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v13 = 136315394;
    outlined init with copy of ConversationControlsType((uint64_t)v28 + 8, (uint64_t)v25);
    specialized >> prefix<A>(_:)((uint64_t)v25, v14, v15, v16, v17, v18, v19, v20);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v25, &demangling cache variable for type metadata for ConversationControlsType?);
    v25[0] = OUTLINED_FUNCTION_56_23(v21, v22, &v26);
    OUTLINED_FUNCTION_82_8();
    OUTLINED_FUNCTION_54_1();
    outlined destroy of SystemBannerHostViewController.OverriddenSystemApertureContent((uint64_t)v28);
    *(_WORD *)(v13 + 12) = 2080;
    v25[0] = v27[0];
    v23 = String.init<A>(reflecting:)();
    v25[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v23, v24, &v26);
    OUTLINED_FUNCTION_82_8();
    OUTLINED_FUNCTION_25();
    outlined destroy of SystemBannerHostViewController.OverriddenSystemApertureContent((uint64_t)v27);
    OUTLINED_FUNCTION_26_6(&dword_1BD004000, v5, (os_log_type_t)v2, "[SystemAperture] Updating ConversationControls to type: %s sizeClass: %s", (uint8_t *)v13);
    OUTLINED_FUNCTION_25_6();
    OUTLINED_FUNCTION_60();
  }
  outlined destroy of SystemBannerHostViewController.OverriddenSystemApertureContent((uint64_t)v28);
  outlined destroy of SystemBannerHostViewController.OverriddenSystemApertureContent((uint64_t)v27);

  (*(void (**)(char *, _QWORD, _QWORD, _QWORD))((*MEMORY[0x1E0DEEDD8] & (uint64_t)v5->isa) + 0x418))((char *)v30 + 8, *(_QWORD *)&v30[0], 0, 0);
  outlined destroy of SystemBannerHostViewController.OverriddenSystemApertureContent((uint64_t)v30);
LABEL_10:
  OUTLINED_FUNCTION_52_1();
}

void SystemBannerHostViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  uint64_t v6;

  v4 = v3;
  if (a2)
  {
    v6 = MEMORY[0x1C3B72E00]();
    OUTLINED_FUNCTION_53();
  }
  else
  {
    v6 = 0;
  }
  objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);
  OUTLINED_FUNCTION_14_18();

  OUTLINED_FUNCTION_18();
}

void SystemBannerHostViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t protocol witness for SystemConversationControlsViewControllerDelegate.deepLinkToFullScreenCallUI() in conformance SystemBannerHostViewController()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x4A8))();
}

uint64_t protocol witness for SystemConversationControlsViewControllerDelegate.deepLinkToFullScreenCallDetailsView() in conformance SystemBannerHostViewController()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x4B0))();
}

uint64_t protocol witness for SystemConversationControlsViewControllerDelegate.showDefaultSystemHUD() in conformance SystemBannerHostViewController()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x4C0))();
}

uint64_t protocol witness for SystemConversationControlsViewControllerDelegate.deepLinkToFullScreenPTTCallDetailsView() in conformance SystemBannerHostViewController()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x4B8))();
}

uint64_t protocol witness for SystemConversationControlsViewControllerDelegate.systemApertureTouchInsetsUpdated(to:) in conformance SystemBannerHostViewController()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x4A0))();
}

uint64_t protocol witness for SceneStateDescribing.hasPresentedFullScreenCallUI.getter in conformance SystemBannerHostViewController()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x398))();
}

uint64_t protocol witness for SceneStateDescribing.isPresentingFullScreenCallUI.getter in conformance SystemBannerHostViewController()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x3A0))();
}

uint64_t protocol witness for ConversationControlsViewControllerDelegate.controlsPreferredContentSizeChanged(presentingMenu:) in conformance SystemBannerHostViewController()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x4C8))();
}

uint64_t protocol witness for ConversationControlsViewControllerDelegate.menuPresented.getter in conformance SystemBannerHostViewController()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x4D0))();
}

uint64_t protocol witness for ConversationControlsViewControllerDelegate.needsMenuContainerView.getter in conformance SystemBannerHostViewController()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x4D8))();
}

uint64_t protocol witness for ConversationControlsViewControllerDelegate.captureGroup.getter in conformance SystemBannerHostViewController()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x4F8))();
}

uint64_t protocol witness for ConversationControlsViewControllerDelegate.needsBackgroundBlur.getter in conformance SystemBannerHostViewController()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x4F0))();
}

uint64_t protocol witness for ConversationControlsViewControllerDelegate.eligibleForDismissal.getter in conformance SystemBannerHostViewController()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x4E0))();
}

uint64_t protocol witness for ActivityBanner.sizeClass.getter in conformance SystemBannerHostViewController()
{
  uint64_t *v0;

  return OUTLINED_FUNCTION_113_9(*v0);
}

uint64_t protocol witness for ActivityBanner.updateContent(for:using:controllingWith:fromActivityManager:) in conformance SystemBannerHostViewController()
{
  uint64_t *v0;

  return OUTLINED_FUNCTION_242_2(*v0);
}

_OWORD *specialized _NativeDictionary._unsafeInsertNew(key:value:)(_OWORD *a1, uint64_t a2)
{
  unint64_t v4;
  _OWORD *result;

  Hasher.init(_seed:)();
  String.hash(into:)();
  Hasher._finalize()();
  v4 = _HashTable.nextHole(atOrAfter:)();
  *(_QWORD *)(a2 + 64 + ((v4 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v4;
  result = outlined init with take of Any(a1, (_OWORD *)(*(_QWORD *)(a2 + 56) + 32 * v4));
  ++*(_QWORD *)(a2 + 16);
  return result;
}

id outlined bridged method (mbgnnbnnn) of @objc BNBannerSource.revokePresentable(withRequestIdentifier:reason:animated:userInfo:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, void *a7)
{
  void *v11;
  Class isa;
  id v13;

  v11 = (void *)MEMORY[0x1C3B72E00]();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSSecureCoding);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v13 = objc_msgSend(a7, sel_revokePresentableWithRequestIdentifier_reason_animated_userInfo_error_, v11, a3, a4 & 1, isa, a6);

  return v13;
}

uint64_t specialized SystemApertureAlertingManager.init(systemApertureElement:sceneStateDescriber:)(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(a3 + 40) = 0;
  v6 = OBJC_IVAR____TtC15ConversationKit29SystemApertureAlertingManager_logger;
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v7 = type metadata accessor for Logger();
  v8 = __swift_project_value_buffer(v7, (uint64_t)&static Logger.conversationControls);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a3 + v6, v8, v7);
  v9 = OBJC_IVAR____TtC15ConversationKit29SystemApertureAlertingManager_invalidationInProgressSubject;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<Bool, Never>);
  swift_allocObject();
  *(_QWORD *)(a3 + v9) = CurrentValueSubject.init(_:)();
  swift_unknownObjectUnownedInit();
  *(_QWORD *)(a3 + 32) = &protocol witness table for SystemBannerHostViewController;
  swift_unknownObjectUnownedInit();
  CurrentValueSubject.send(_:)();

  return a3;
}

uint64_t specialized showEphemeralContent #1 (_:) in closure #1 in SystemBannerHostViewController.updateContent(for:using:controllingWith:fromActivityManager:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t *, uint64_t), uint64_t (*a6)(uint64_t, uint64_t))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21[6];

  if (*(_BYTE *)(a2 + OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_isSystemAperturePresentation) != 1)
    return a6(a1, a2);
  v10 = a4 + 16;
  OUTLINED_FUNCTION_2_0();
  v11 = *(_QWORD *)(a3 + 16);
  OUTLINED_FUNCTION_2_0();
  outlined init with copy of ConversationControlsType(v10, (uint64_t)v21);
  v12 = a5(a1, v11, v21, a2);
  return OUTLINED_FUNCTION_14_15(v12, v13, v14, v15, v16, v17, v18, v19, v21[0]);
}

void specialized showContent #1 (_:) in closure #1 in SystemBannerHostViewController.updateContent(for:using:controllingWith:fromActivityManager:)(void *a1, _QWORD *a2)
{
  void (*v4)(void *, _UNKNOWN **);
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _OWORD v17[3];
  unsigned __int8 v18;

  v4 = *(void (**)(void *, _UNKNOWN **))((*MEMORY[0x1E0DEEDD8] & *a2) + 0x2D8);
  v5 = a1;
  v4(a1, &protocol witness table for ConversationHUDViewController);
  v6 = (uint64_t)a2 + OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_overriddenSystemApertureContent;
  swift_beginAccess();
  outlined init with copy of ModifiedContent<<<opaque return type of View.environment<A>(_:)>>.0, _TransactionModifier>(v6, (uint64_t)v17, &demangling cache variable for type metadata for SystemBannerHostViewController.OverriddenSystemApertureContent?);
  LODWORD(v6) = v18;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v17, &demangling cache variable for type metadata for SystemBannerHostViewController.OverriddenSystemApertureContent?);
  if ((_DWORD)v6 != 255)
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v7 = type metadata accessor for Logger();
    __swift_project_value_buffer(v7, (uint64_t)&static Logger.conversationControls);
    v8 = v5;
    v9 = Logger.logObject.getter();
    v10 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = swift_slowAlloc();
      v16 = v12;
      *(_DWORD *)v11 = 136315138;
      *(_QWORD *)&v17[0] = v8;
      *((_QWORD *)&v17[0] + 1) = &protocol witness table for ConversationHUDViewController;
      v13 = v8;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsViewController);
      v14 = String.init<A>(reflecting:)();
      *(_QWORD *)&v17[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v14, v15, &v16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BD004000, v9, v10, "Removing ephemeral content since we're showing new content %s", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v12, -1, -1);
      MEMORY[0x1C3B751B8](v11, -1, -1);
    }
    else
    {

    }
    memset(v17, 0, sizeof(v17));
    v18 = -1;
    SystemBannerHostViewController.overriddenSystemApertureContent.setter((uint64_t)v17);
  }
}

{
  void (*v4)(void *, _UNKNOWN **);
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _OWORD v17[3];
  unsigned __int8 v18;

  v4 = *(void (**)(void *, _UNKNOWN **))((*MEMORY[0x1E0DEEDD8] & *a2) + 0x2D8);
  v5 = a1;
  v4(a1, &protocol witness table for ConversationNoticeViewController);
  v6 = (uint64_t)a2 + OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_overriddenSystemApertureContent;
  swift_beginAccess();
  outlined init with copy of ModifiedContent<<<opaque return type of View.environment<A>(_:)>>.0, _TransactionModifier>(v6, (uint64_t)v17, &demangling cache variable for type metadata for SystemBannerHostViewController.OverriddenSystemApertureContent?);
  LODWORD(v6) = v18;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v17, &demangling cache variable for type metadata for SystemBannerHostViewController.OverriddenSystemApertureContent?);
  if ((_DWORD)v6 != 255)
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v7 = type metadata accessor for Logger();
    __swift_project_value_buffer(v7, (uint64_t)&static Logger.conversationControls);
    v8 = v5;
    v9 = Logger.logObject.getter();
    v10 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = swift_slowAlloc();
      v16 = v12;
      *(_DWORD *)v11 = 136315138;
      *(_QWORD *)&v17[0] = v8;
      *((_QWORD *)&v17[0] + 1) = &protocol witness table for ConversationNoticeViewController;
      v13 = v8;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsViewController);
      v14 = String.init<A>(reflecting:)();
      *(_QWORD *)&v17[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v14, v15, &v16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BD004000, v9, v10, "Removing ephemeral content since we're showing new content %s", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v12, -1, -1);
      MEMORY[0x1C3B751B8](v11, -1, -1);
    }
    else
    {

    }
    memset(v17, 0, sizeof(v17));
    v18 = -1;
    SystemBannerHostViewController.overriddenSystemApertureContent.setter((uint64_t)v17);
  }
}

uint64_t specialized SystemBannerHostViewController.showEphemeralSystemApertureContent(_:overridingSizeClass:overridingControlsType:)(void *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  char v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint8_t *v19;
  uint64_t v20;
  _QWORD *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(void *, _UNKNOWN **);
  id v30;
  uint64_t result;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE v35[48];

  v8 = type metadata accessor for DispatchPredicate();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (uint64_t *)((char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v11 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DEF740], v8);
  v12 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v9 + 8))(v11, v8);
  if ((v12 & 1) == 0)
  {
    __break(1u);
LABEL_14:
    swift_once();
    goto LABEL_4;
  }
  v13 = (uint64_t)a4 + OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_overriddenSystemApertureContent;
  swift_beginAccess();
  outlined init with copy of ModifiedContent<<<opaque return type of View.environment<A>(_:)>>.0, _TransactionModifier>(v13, (uint64_t)&v34, &demangling cache variable for type metadata for SystemBannerHostViewController.OverriddenSystemApertureContent?);
  v14 = v35[40];
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v34, &demangling cache variable for type metadata for SystemBannerHostViewController.OverriddenSystemApertureContent?);
  if (v14 == 255)
  {
    outlined init with copy of ConversationControlsType(a3, (uint64_t)v35);
    v34 = a2;
    SystemBannerHostViewController.overriddenSystemApertureContent.setter((uint64_t)&v34);
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v20 = type metadata accessor for Logger();
    __swift_project_value_buffer(v20, (uint64_t)&static Logger.conversationControls);
    v21 = a4;
    v16 = Logger.logObject.getter();
    v22 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v16, v22))
    {

      goto LABEL_12;
    }
    v23 = (uint8_t *)swift_slowAlloc();
    v24 = swift_slowAlloc();
    *(_DWORD *)v23 = 136315138;
    v32 = v23 + 4;
    v33 = v24;
    outlined init with copy of ModifiedContent<<<opaque return type of View.environment<A>(_:)>>.0, _TransactionModifier>(v13, (uint64_t)&v34, &demangling cache variable for type metadata for SystemBannerHostViewController.OverriddenSystemApertureContent?);
    v25 = specialized >> prefix<A>(_:)((uint64_t)&v34);
    v27 = v26;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v34, &demangling cache variable for type metadata for SystemBannerHostViewController.OverriddenSystemApertureContent?);
    v34 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v25, v27, &v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BD004000, v16, v22, "[SystemAperture] Set overriddenSystemApertureContent to: %s", v23, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v24, -1, -1);
    v19 = v23;
    goto LABEL_10;
  }
  if (one-time initialization token for conversationControls != -1)
    goto LABEL_14;
LABEL_4:
  v15 = type metadata accessor for Logger();
  __swift_project_value_buffer(v15, (uint64_t)&static Logger.conversationControls);
  v16 = Logger.logObject.getter();
  v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v18 = 0;
    _os_log_impl(&dword_1BD004000, v16, v17, "[SystemAperture] Not setting overriddenSystemApertureContent since it is already set", v18, 2u);
    v19 = v18;
LABEL_10:
    MEMORY[0x1C3B751B8](v19, -1, -1);
  }
LABEL_12:

  v28 = OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_isTransitioningToEphemeralSystemApertureContent;
  *((_BYTE *)a4
  + OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_isTransitioningToEphemeralSystemApertureContent) = 1;
  v29 = *(uint64_t (**)(void *, _UNKNOWN **))((*MEMORY[0x1E0DEEDD8] & *a4) + 0x2D8);
  v30 = a1;
  result = v29(a1, &protocol witness table for ConversationNoticeViewController);
  *((_BYTE *)a4 + v28) = 0;
  return result;
}

{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  char v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint8_t *v19;
  uint64_t v20;
  _QWORD *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(void *, _UNKNOWN **);
  id v30;
  uint64_t result;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE v35[48];

  v8 = type metadata accessor for DispatchPredicate();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (uint64_t *)((char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v11 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DEF740], v8);
  v12 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v9 + 8))(v11, v8);
  if ((v12 & 1) == 0)
  {
    __break(1u);
LABEL_14:
    swift_once();
    goto LABEL_4;
  }
  v13 = (uint64_t)a4 + OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_overriddenSystemApertureContent;
  swift_beginAccess();
  outlined init with copy of ModifiedContent<<<opaque return type of View.environment<A>(_:)>>.0, _TransactionModifier>(v13, (uint64_t)&v34, &demangling cache variable for type metadata for SystemBannerHostViewController.OverriddenSystemApertureContent?);
  v14 = v35[40];
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v34, &demangling cache variable for type metadata for SystemBannerHostViewController.OverriddenSystemApertureContent?);
  if (v14 == 255)
  {
    outlined init with copy of ConversationControlsType(a3, (uint64_t)v35);
    v34 = a2;
    SystemBannerHostViewController.overriddenSystemApertureContent.setter((uint64_t)&v34);
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v20 = type metadata accessor for Logger();
    __swift_project_value_buffer(v20, (uint64_t)&static Logger.conversationControls);
    v21 = a4;
    v16 = Logger.logObject.getter();
    v22 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v16, v22))
    {

      goto LABEL_12;
    }
    v23 = (uint8_t *)swift_slowAlloc();
    v24 = swift_slowAlloc();
    *(_DWORD *)v23 = 136315138;
    v32 = v23 + 4;
    v33 = v24;
    outlined init with copy of ModifiedContent<<<opaque return type of View.environment<A>(_:)>>.0, _TransactionModifier>(v13, (uint64_t)&v34, &demangling cache variable for type metadata for SystemBannerHostViewController.OverriddenSystemApertureContent?);
    v25 = specialized >> prefix<A>(_:)((uint64_t)&v34);
    v27 = v26;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v34, &demangling cache variable for type metadata for SystemBannerHostViewController.OverriddenSystemApertureContent?);
    v34 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v25, v27, &v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BD004000, v16, v22, "[SystemAperture] Set overriddenSystemApertureContent to: %s", v23, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v24, -1, -1);
    v19 = v23;
    goto LABEL_10;
  }
  if (one-time initialization token for conversationControls != -1)
    goto LABEL_14;
LABEL_4:
  v15 = type metadata accessor for Logger();
  __swift_project_value_buffer(v15, (uint64_t)&static Logger.conversationControls);
  v16 = Logger.logObject.getter();
  v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v18 = 0;
    _os_log_impl(&dword_1BD004000, v16, v17, "[SystemAperture] Not setting overriddenSystemApertureContent since it is already set", v18, 2u);
    v19 = v18;
LABEL_10:
    MEMORY[0x1C3B751B8](v19, -1, -1);
  }
LABEL_12:

  v28 = OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_isTransitioningToEphemeralSystemApertureContent;
  *((_BYTE *)a4
  + OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_isTransitioningToEphemeralSystemApertureContent) = 1;
  v29 = *(uint64_t (**)(void *, _UNKNOWN **))((*MEMORY[0x1E0DEEDD8] & *a4) + 0x2D8);
  v30 = a1;
  result = v29(a1, &protocol witness table for ConversationHUDViewController);
  *((_BYTE *)a4 + v28) = 0;
  return result;
}

_QWORD *specialized SystemBannerHostViewController.init(controlsManager:sizeClass:type:delegate:isSystemAperturePresentation:requesterIdentifier:destination:layoutDescription:defaults:features:notificationCenter:activityUUID:fromActivityManager:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9, void *a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, unsigned __int8 a15, char *a16, uint64_t a17, uint64_t a18)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  char *v39;
  char *v40;
  void **v41;
  char *v42;
  uint64_t v43;
  objc_class *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  id v50;
  id v51;
  uint64_t (*v52)(void);
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  void *v60;
  void *v61;
  id v62;
  Swift::String v63;
  Swift::String v64;
  uint64_t v65;
  void *v66;
  _QWORD *v67;
  Swift::String v68;
  unint64_t v69;
  unint64_t *v70;
  char *v71;
  uint64_t v72;
  void (*v73)(char *, uint64_t);
  uint64_t v74;
  void *v75;
  id v76;
  char *v77;
  objc_class *v78;
  _QWORD *v79;
  void (*v80)(uint64_t, _QWORD, uint64_t, _QWORD);
  _QWORD *v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  _QWORD *v85;
  void *v86;
  char *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  _QWORD *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void (*v98)(char *, uint64_t);
  uint64_t v99;
  char *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  int v114;
  uint64_t v115;
  id v116;
  unsigned int v117;
  uint64_t v118;
  uint64_t v119;
  void *v120;
  id v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  void (**v126)(_QWORD, _QWORD);
  _QWORD *v127;
  _QWORD *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  id v154;
  objc_super v155;
  unint64_t v156;
  unint64_t v157;
  uint64_t v158;

  v115 = a8;
  v113 = a7;
  v112 = a6;
  LODWORD(v121) = a5;
  v153 = a3;
  v151 = a4;
  v152 = a14;
  v117 = a15;
  v114 = a9;
  v150 = a11;
  v116 = a10;
  v120 = a13;
  v119 = a12;
  v111 = a18;
  v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for OS_dispatch_queue.SchedulerOptions?);
  MEMORY[0x1E0C80A78](v20);
  v144 = (uint64_t)&v111 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSRunLoop.SchedulerTimeType.Stride?);
  MEMORY[0x1E0C80A78](v22);
  v138 = (uint64_t)&v111 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.Map<Publishers.Debounce<Publishers.Zip<Publishers.Filter<CurrentValueSubject<Bool, Never>>, Publishers.Filter<CurrentValueSubject<DispatchWorkItem?, Never>>>, NSRunLoop>, DispatchWorkItem?>);
  v137 = *(_QWORD *)(v139 - 8);
  MEMORY[0x1E0C80A78](v139);
  v136 = (char *)&v111 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v143 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.Delay<Publishers.Map<Publishers.Debounce<Publishers.Zip<Publishers.Filter<CurrentValueSubject<Bool, Never>>, Publishers.Filter<CurrentValueSubject<DispatchWorkItem?, Never>>>, NSRunLoop>, DispatchWorkItem?>, NSRunLoop>);
  v142 = *(_QWORD *)(v143 - 8);
  MEMORY[0x1E0C80A78](v143);
  v141 = (char *)&v111 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v147 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Publishers.ReceiveOn<Publishers.Delay<Publishers.Map<Publishers.Debounce<Publishers.Zip<Publishers.Filter<CurrentValueSubject<Bool, Never>>, Publishers.Filter<CurrentValueSubject<DispatchWorkItem?, Never>>>, NSRunLoop>, DispatchWorkItem?>, NSRunLoop>, OS_dispatch_queue>);
  v146 = *(_QWORD *)(v147 - 8);
  MEMORY[0x1E0C80A78](v147);
  v145 = (char *)&v111 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  MEMORY[0x1E0C80A78](v27);
  v134 = (uint64_t)&v111 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v135 = type metadata accessor for NSRunLoop.SchedulerTimeType.Stride();
  v132 = *(_QWORD *)(v135 - 8);
  MEMORY[0x1E0C80A78](v135);
  v133 = (char *)&v111 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = (_QWORD *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.Filter<CurrentValueSubject<DispatchWorkItem?, Never>>);
  v126 = (void (**)(_QWORD, _QWORD))*(v127 - 1);
  MEMORY[0x1E0C80A78](v127);
  v125 = (uint64_t)&v111 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.Filter<CurrentValueSubject<Bool, Never>>);
  v123 = *(_QWORD *)(v124 - 8);
  MEMORY[0x1E0C80A78](v124);
  v122 = (char *)&v111 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.Zip<Publishers.Filter<CurrentValueSubject<Bool, Never>>, Publishers.Filter<CurrentValueSubject<DispatchWorkItem?, Never>>>);
  v130 = *(_QWORD *)(v131 - 8);
  MEMORY[0x1E0C80A78](v131);
  v129 = (char *)&v111 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v149 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.Debounce<Publishers.Zip<Publishers.Filter<CurrentValueSubject<Bool, Never>>, Publishers.Filter<CurrentValueSubject<DispatchWorkItem?, Never>>>, NSRunLoop>);
  v140 = *(_QWORD *)(v149 - 8);
  MEMORY[0x1E0C80A78](v149);
  v148 = (char *)&v111 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_unknownObjectWeakInit();
  v34 = (uint64_t)&a16[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_notice];
  *(_OWORD *)v34 = 0u;
  *(_OWORD *)(v34 + 16) = 0u;
  *(_QWORD *)(v34 + 32) = 0;
  v35 = &a16[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_captureGroupName];
  *(_QWORD *)v35 = 0xD00000000000001ALL;
  *((_QWORD *)v35 + 1) = 0x80000001BD686E80;
  *(_QWORD *)&a16[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController____lazy_storage___captureOnlyBackdropView] = 0;
  *(_QWORD *)&a16[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_shadowView] = 0;
  v36 = OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_invalidationTaskSubject;
  v158 = 0;
  v118 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<DispatchWorkItem?, Never>);
  swift_allocObject();
  v37 = a16;
  *(_QWORD *)&a16[v36] = CurrentValueSubject.init(_:)();
  *(_QWORD *)&v37[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_invalidationCancellable] = 0;
  v38 = &v37[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_overriddenSystemApertureContent];
  *(_OWORD *)v38 = 0u;
  *((_OWORD *)v38 + 1) = 0u;
  *((_OWORD *)v38 + 2) = 0u;
  v38[48] = -1;
  v37[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_isTransitioningToEphemeralSystemApertureContent] = 0;
  *(_QWORD *)&v37[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController____lazy_storage___systemApertureAlertingManager] = 0;
  v39 = &v37[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_conversationControlsViewController];
  *(_QWORD *)v39 = 0;
  *((_QWORD *)v39 + 1) = 0;
  v37[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_expandedForMenuPresentation] = 0;
  v40 = &v37[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_requesterIdentifier];
  *(_QWORD *)v40 = 0;
  *((_QWORD *)v40 + 1) = 0;
  v41 = (void **)&v37[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_layoutDescription];
  *(_QWORD *)&v37[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_layoutDescription] = 0;
  *(_QWORD *)&v37[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_panGestureProxy] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v37[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_dismissalPreventionAssertion] = 0;
  *(_QWORD *)&v37[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_gesturePriorityAssertion] = 0;
  v37[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_isPresentingMenu] = 0;
  v37[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_forceSuppressSystemApertureOverAssociatedScene] = 0;
  v37[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_isShowingSystemApertureOverAssociatedScene] = 0;
  *(_QWORD *)&v37[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_activeLayoutMode] = 0;
  v37[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_canRequestAlertingAssertion] = 0;
  v42 = &v37[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_nextSystemApertureLayoutMode];
  *(_QWORD *)v42 = 0;
  v42[8] = 1;
  *(_QWORD *)&v37[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_contentRole] = 2;
  v43 = OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_leadingViewContainer;
  v44 = (objc_class *)type metadata accessor for SystemApertureContainerView();
  *(_QWORD *)&v37[v43] = objc_msgSend(objc_allocWithZone(v44), sel_init);
  v45 = OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_trailingViewContainer;
  *(_QWORD *)&v37[v45] = objc_msgSend(objc_allocWithZone(v44), sel_init);
  v46 = OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_minimalViewContainer;
  *(_QWORD *)&v37[v46] = objc_msgSend(objc_allocWithZone(v44), sel_init);
  v47 = OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_detachedMinimalViewContainer;
  *(_QWORD *)&v37[v47] = objc_msgSend(objc_allocWithZone(v44), sel_init);
  v48 = (void *)*MEMORY[0x1E0DAC938];
  *(_QWORD *)&v37[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_elementIdentifier] = *MEMORY[0x1E0DAC938];
  v49 = OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_keyColor;
  v50 = objc_allocWithZone(MEMORY[0x1E0DC3658]);
  v51 = v48;
  *(_QWORD *)&v37[v49] = objc_msgSend(v50, sel_initWithRed_green_blue_alpha_, 0.192, 0.82, 0.345, 1.0);
  *(_QWORD *)&v37[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_controlsManager] = a1;
  v52 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x288);
  v128 = a1;
  v53 = v52();
  v54 = (uint64_t *)&v37[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_bannerIdentifier];
  *v54 = v53;
  v54[1] = v55;
  v56 = a2;
  *(_QWORD *)&v37[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_sizeClass] = a2;
  v57 = v153;
  outlined init with copy of ConversationControlsType(v153, (uint64_t)&v37[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_controlsType]);
  ConversationControlsType.associatedNotice.getter((uint64_t)&v158);
  swift_beginAccess();
  outlined assign with take of Notice?((uint64_t)&v158, v34);
  swift_endAccess();
  v58 = &v37[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_defaults];
  v59 = v111;
  *(_QWORD *)v58 = v150;
  *((_QWORD *)v58 + 1) = v59;
  v60 = (void *)v119;
  *(_QWORD *)&v37[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_features] = v119;
  v61 = v120;
  *(_QWORD *)&v37[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_notificationCenter] = v120;
  swift_beginAccess();
  swift_unknownObjectWeakAssign();
  v37[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_isSystemAperturePresentation] = (char)v121;
  v156 = 0;
  v157 = 0xE000000000000000;
  swift_unknownObjectRetain();
  v121 = v60;
  v62 = v61;
  _StringGuts.grow(_:)(38);
  swift_bridgeObjectRelease();
  v156 = 0xD000000000000021;
  v157 = 0x80000001BD687710;
  v63._countAndFlagsBits = ConversationControlsSizeClass.description.getter(v56);
  String.append(_:)(v63);
  swift_bridgeObjectRelease();
  v64._countAndFlagsBits = 46;
  v64._object = (void *)0xE100000000000000;
  String.append(_:)(v64);
  v65 = *v54;
  v66 = (void *)v54[1];
  v67 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  swift_bridgeObjectRetain();
  v68._countAndFlagsBits = v65;
  v68._object = v66;
  String.append(_:)(v68);
  swift_bridgeObjectRelease();
  v69 = v157;
  v70 = (unint64_t *)&v37[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_requestIdentifier];
  *v70 = v156;
  v70[1] = v69;
  v71 = &v37[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_activityUUID];
  v72 = type metadata accessor for UUID();
  v119 = *(_QWORD *)(v72 - 8);
  v73 = *(void (**)(char *, uint64_t))(v119 + 16);
  v120 = (void *)v72;
  v73(v71, v152);
  swift_beginAccess();
  v74 = v113;
  *(_QWORD *)v40 = v112;
  *((_QWORD *)v40 + 1) = v74;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v75 = *v41;
  v76 = v116;
  *v41 = v116;
  v116 = v76;

  v77 = &v37[OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_destination];
  *(_QWORD *)v77 = v115;
  v77[8] = v114 & 1;

  v78 = (objc_class *)type metadata accessor for SystemBannerHostViewController();
  v155.receiver = v37;
  v155.super_class = v78;
  v79 = objc_msgSendSuper2(&v155, sel_initWithNibName_bundle_, 0, 0);
  v80 = *(void (**)(uint64_t, _QWORD, uint64_t, _QWORD))((*v67 & *v79) + 0x418);
  v81 = v79;
  v80(v57, 0, 1, v117);
  objc_msgSend(v62, sel_addObserver_selector_name_object_, v81, sel_callStatusChanged_, *MEMORY[0x1E0DBD4A0], 0);
  v82 = one-time initialization token for contextMenuWillPresent;
  v83 = v81;
  if (v82 != -1)
    swift_once();
  objc_msgSend(v62, sel_addObserver_selector_name_object_, v83, sel_contextMenuWillPresent_, static NSNotificationName.contextMenuWillPresent, 0, v111);

  v84 = one-time initialization token for contextMenuDidDismiss;
  v85 = v83;
  if (v84 != -1)
    swift_once();
  objc_msgSend(v62, sel_addObserver_selector_name_object_, v85, sel_contextMenuDidDismiss_, static NSNotificationName.contextMenuDidDismiss, 0);

  objc_msgSend(v62, sel_addObserver_selector_name_object_, v85, sel_callDisplayContextChanged_, *MEMORY[0x1E0DBD500], 0);
  objc_msgSend(v62, sel_addObserver_selector_name_object_, v85, sel_handleSceneStateChangeNotification_, *MEMORY[0x1E0DC5318], 0);
  v86 = *(void **)((*(uint64_t (**)(id))((*v67 & *v85) + 0x2B8))(objc_msgSend(v62, sel_addObserver_selector_name_object_, v85, sel_handleSceneStateChangeNotification_, *MEMORY[0x1E0DC5308], 0))+ OBJC_IVAR____TtC15ConversationKit29SystemApertureAlertingManager_invalidationInProgressSubject);
  swift_retain();
  swift_release();
  v154 = v86;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<Bool, Never>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(lazy protocol witness table cache variable for type CurrentValueSubject<Bool, Never> and conformance CurrentValueSubject<A, B>, &demangling cache variable for type metadata for CurrentValueSubject<Bool, Never>);
  v87 = v122;
  Publisher.filter(_:)();
  swift_release();
  v154 = *(id *)((char *)v85 + OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_invalidationTaskSubject);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type CurrentValueSubject<DispatchWorkItem?, Never> and conformance CurrentValueSubject<A, B>, &demangling cache variable for type metadata for CurrentValueSubject<DispatchWorkItem?, Never>);
  swift_retain();
  v88 = v125;
  Publisher.filter(_:)();
  swift_release();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.Filter<CurrentValueSubject<Bool, Never>> and conformance Publishers.Filter<A>, &demangling cache variable for type metadata for Publishers.Filter<CurrentValueSubject<Bool, Never>>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(lazy protocol witness table cache variable for type Publishers.Filter<CurrentValueSubject<DispatchWorkItem?, Never>> and conformance Publishers.Filter<A>, &demangling cache variable for type metadata for Publishers.Filter<CurrentValueSubject<DispatchWorkItem?, Never>>);
  v89 = v129;
  v90 = v124;
  v91 = v127;
  Publisher.zip<A>(_:)();
  ((void (**)(uint64_t, _QWORD *))v126)[1](v88, v91);
  (*(void (**)(char *, uint64_t))(v123 + 8))(v87, v90);
  v92 = v133;
  NSRunLoop.SchedulerTimeType.Stride.init(floatLiteral:)();
  v126 = (void (**)(_QWORD, _QWORD))objc_opt_self();
  v154 = objc_msgSend(v126, sel_mainRunLoop);
  v93 = type metadata accessor for NSRunLoop.SchedulerOptions();
  v127 = v62;
  v125 = v93;
  v94 = v134;
  __swift_storeEnumTagSinglePayload(v134, 1, 1, v93);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSRunLoop);
  v123 = v95;
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(lazy protocol witness table cache variable for type Publishers.Zip<Publishers.Filter<CurrentValueSubject<Bool, Never>>, Publishers.Filter<CurrentValueSubject<DispatchWorkItem?, Never>>> and conformance Publishers.Zip<A, B>, &demangling cache variable for type metadata for Publishers.Zip<Publishers.Filter<CurrentValueSubject<Bool, Never>>, Publishers.Filter<CurrentValueSubject<DispatchWorkItem?, Never>>>);
  lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop(&lazy protocol witness table cache variable for type NSRunLoop and conformance NSRunLoop, (unint64_t *)&lazy cache variable for type metadata for NSRunLoop);
  v124 = v96;
  v97 = v131;
  Publisher.debounce<A>(for:scheduler:options:)();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v94, (uint64_t *)&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);

  v98 = *(void (**)(char *, uint64_t))(v132 + 8);
  v99 = v135;
  v98(v92, v135);
  (*(void (**)(char *, uint64_t))(v130 + 8))(v89, v97);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DispatchWorkItem?);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.Debounce<Publishers.Zip<Publishers.Filter<CurrentValueSubject<Bool, Never>>, Publishers.Filter<CurrentValueSubject<DispatchWorkItem?, Never>>>, NSRunLoop> and conformance Publishers.Debounce<A, B>, &demangling cache variable for type metadata for Publishers.Debounce<Publishers.Zip<Publishers.Filter<CurrentValueSubject<Bool, Never>>, Publishers.Filter<CurrentValueSubject<DispatchWorkItem?, Never>>>, NSRunLoop>);
  v100 = v136;
  Publisher.map<A>(_:)();
  NSRunLoop.SchedulerTimeType.Stride.init(floatLiteral:)();
  v101 = v138;
  __swift_storeEnumTagSinglePayload(v138, 1, 1, v99);
  v154 = objc_msgSend(v126, sel_mainRunLoop);
  __swift_storeEnumTagSinglePayload(v94, 1, 1, v125);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.Map<Publishers.Debounce<Publishers.Zip<Publishers.Filter<CurrentValueSubject<Bool, Never>>, Publishers.Filter<CurrentValueSubject<DispatchWorkItem?, Never>>>, NSRunLoop>, DispatchWorkItem?> and conformance Publishers.Map<A, B>, &demangling cache variable for type metadata for Publishers.Map<Publishers.Debounce<Publishers.Zip<Publishers.Filter<CurrentValueSubject<Bool, Never>>, Publishers.Filter<CurrentValueSubject<DispatchWorkItem?, Never>>>, NSRunLoop>, DispatchWorkItem?>);
  v102 = v141;
  v103 = v139;
  Publisher.delay<A>(for:tolerance:scheduler:options:)();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v94, (uint64_t *)&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);

  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v101, &demangling cache variable for type metadata for NSRunLoop.SchedulerTimeType.Stride?);
  v98(v92, v99);
  (*(void (**)(char *, uint64_t))(v137 + 8))(v100, v103);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v154 = (id)static OS_dispatch_queue.main.getter();
  v104 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  v105 = v144;
  __swift_storeEnumTagSinglePayload(v144, 1, 1, v104);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(lazy protocol witness table cache variable for type Publishers.Delay<Publishers.Map<Publishers.Debounce<Publishers.Zip<Publishers.Filter<CurrentValueSubject<Bool, Never>>, Publishers.Filter<CurrentValueSubject<DispatchWorkItem?, Never>>>, NSRunLoop>, DispatchWorkItem?>, NSRunLoop> and conformance Publishers.Delay<A, B>, &demangling cache variable for type metadata for Publishers.Delay<Publishers.Map<Publishers.Debounce<Publishers.Zip<Publishers.Filter<CurrentValueSubject<Bool, Never>>, Publishers.Filter<CurrentValueSubject<DispatchWorkItem?, Never>>>, NSRunLoop>, DispatchWorkItem?>, NSRunLoop>);
  lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop(&lazy protocol witness table cache variable for type OS_dispatch_queue and conformance OS_dispatch_queue, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v106 = v145;
  v107 = v143;
  Publisher.receive<A>(on:options:)();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v105, (uint64_t *)&demangling cache variable for type metadata for OS_dispatch_queue.SchedulerOptions?);

  (*(void (**)(char *, uint64_t))(v142 + 8))(v102, v107);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.ReceiveOn<Publishers.Delay<Publishers.Map<Publishers.Debounce<Publishers.Zip<Publishers.Filter<CurrentValueSubject<Bool, Never>>, Publishers.Filter<CurrentValueSubject<DispatchWorkItem?, Never>>>, NSRunLoop>, DispatchWorkItem?>, NSRunLoop>, OS_dispatch_queue> and conformance Publishers.ReceiveOn<A, B>, (uint64_t *)&demangling cache variable for type metadata for Publishers.ReceiveOn<Publishers.Delay<Publishers.Map<Publishers.Debounce<Publishers.Zip<Publishers.Filter<CurrentValueSubject<Bool, Never>>, Publishers.Filter<CurrentValueSubject<DispatchWorkItem?, Never>>>, NSRunLoop>, DispatchWorkItem?>, NSRunLoop>, OS_dispatch_queue>);
  v108 = v147;
  v109 = Publisher<>.sink(receiveValue:)();

  swift_release();
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, void *))(v119 + 8))(v152, v120);
  outlined destroy of ConversationControlsType(v153);
  (*(void (**)(char *, uint64_t))(v146 + 8))(v106, v108);
  (*(void (**)(char *, uint64_t))(v140 + 8))(v148, v149);
  *(_QWORD *)((char *)v85 + OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_invalidationCancellable) = v109;
  swift_release();
  return v85;
}

uint64_t type metadata accessor for SystemBannerHostViewController()
{
  uint64_t result;

  result = type metadata singleton initialization cache for SystemBannerHostViewController;
  if (!type metadata singleton initialization cache for SystemBannerHostViewController)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BD3673C4()
{
  uint64_t v0;

  return swift_deallocObject();
}

void partial apply for closure #2 in SystemBannerHostViewController.viewWillTransition(to:with:)(int a1)
{
  uint64_t v1;

  closure #2 in SystemBannerHostViewController.viewWillTransition(to:with:)(a1, *(id *)(v1 + 16));
}

uint64_t sub_1BD3673F0()
{
  uint64_t v0;
  id *v1;

  v1 = (id *)(v0 + 16);
  switch(*(_BYTE *)(v0 + 56))
  {
    case 0:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v1);
      break;
    case 1:
    case 3:
      swift_bridgeObjectRelease();
      break;
    case 2:

      break;
    case 5:
      swift_unknownObjectRelease();
      break;
    default:
      return swift_deallocObject();
  }
  return swift_deallocObject();
}

uint64_t outlined assign with take of ConversationControlsType(uint64_t a1, uint64_t a2)
{
  assignWithTake for ConversationControlsType(a2, a1);
  return a2;
}

uint64_t outlined assign with take of Notice?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Notice?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BD3674E0()
{
  return swift_deallocObject();
}

unint64_t lazy protocol witness table accessor for type SystemBannerHostError and conformance SystemBannerHostError()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SystemBannerHostError and conformance SystemBannerHostError;
  if (!lazy protocol witness table cache variable for type SystemBannerHostError and conformance SystemBannerHostError)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for SystemBannerHostError, &type metadata for SystemBannerHostError);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SystemBannerHostError and conformance SystemBannerHostError);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SystemBannerHostError and conformance SystemBannerHostError;
  if (!lazy protocol witness table cache variable for type SystemBannerHostError and conformance SystemBannerHostError)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for SystemBannerHostError, &type metadata for SystemBannerHostError);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SystemBannerHostError and conformance SystemBannerHostError);
  }
  return result;
}

uint64_t sub_1BD36752C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BD367550()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id *v8;
  _QWORD *v9;
  char v10;
  char v11;
  id *v12;
  void *v13;

  v1 = OUTLINED_FUNCTION_28_1();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 96) & ~v2;
  swift_release();
  swift_release();
  swift_release();
  v4 = (id *)(v0 + 40);
  switch(*(_BYTE *)(v0 + 80))
  {
    case 0:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
      break;
    case 1:
    case 3:
      swift_bridgeObjectRelease();
      break;
    case 2:

      break;
    case 5:
      swift_unknownObjectRelease();
      break;
    default:
      break;
  }

  v5 = v0 + v3;
  switch(*(_BYTE *)(v0 + v3 + 40))
  {
    case 0:
      __swift_destroy_boxed_opaque_existential_1(v0 + v3);
      break;
    case 1:
    case 3:
      swift_bridgeObjectRelease();
      break;
    case 2:

      break;
    case 5:
      swift_unknownObjectRelease();
      break;
    default:
      break;
  }

  v6 = *(void **)(v5 + 56);
  if (v6)
  {

  }
  swift_bridgeObjectRelease();
  v7 = OUTLINED_FUNCTION_196_1();
  if (!OUTLINED_FUNCTION_147_3(v7))
    OUTLINED_FUNCTION_153_5();
  v8 = (id *)(v5 + *(int *)(v1 + 40));
  if (*v8)
  {

  }
  OUTLINED_FUNCTION_272_1();
  if (!(!v11 & v10))
    OUTLINED_FUNCTION_194_1(v9);
  OUTLINED_FUNCTION_269_3();
  if (!v11)
    OUTLINED_FUNCTION_265_3(v12);
  OUTLINED_FUNCTION_262_2();
  if (!v11)
  {

  }
  return OUTLINED_FUNCTION_17_33();
}

void partial apply for closure #1 in SystemBannerHostViewController.updateContent(for:using:controllingWith:fromActivityManager:)()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_28_1() - 8) + 80);
  closure #1 in SystemBannerHostViewController.updateContent(for:using:controllingWith:fromActivityManager:)(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(NSObject **)(v0 + 32), (void *)(v0 + 40), *(_QWORD **)(v0 + 88), v0 + ((v1 + 96) & ~v1));
}

uint64_t outlined init with copy of ControlsHUDUpdate(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for ControlsHUDUpdate(a2, a1);
  return a2;
}

uint64_t outlined assign with copy of ConversationControlsType(__int128 *a1, uint64_t a2)
{
  assignWithCopy for ConversationControlsType(a2, a1);
  return a2;
}

uint64_t outlined release of SystemApertureLayoutMargins(uint64_t a1)
{
  outlined consume of SystemApertureLayoutMargins(*(id *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  return a1;
}

uint64_t partial apply for closure #1 in SystemBannerHostViewController.viewWillLayoutSubviews(with:)(uint64_t a1)
{
  uint64_t v1;

  return closure #1 in SystemBannerHostViewController.viewWillLayoutSubviews(with:)(a1, *(_QWORD *)(v1 + 16));
}

void partial apply for closure #2 in SystemBannerHostViewController.viewWillLayoutSubviews(with:)(void *a1)
{
  uint64_t v1;

  closure #2 in SystemBannerHostViewController.viewWillLayoutSubviews(with:)(a1, v1);
}

unint64_t lazy protocol witness table accessor for type SystemBannerDismissalReason and conformance SystemBannerDismissalReason()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SystemBannerDismissalReason and conformance SystemBannerDismissalReason;
  if (!lazy protocol witness table cache variable for type SystemBannerDismissalReason and conformance SystemBannerDismissalReason)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for SystemBannerDismissalReason, &type metadata for SystemBannerDismissalReason);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SystemBannerDismissalReason and conformance SystemBannerDismissalReason);
  }
  return result;
}

void sub_1BD367864()
{
  uint64_t *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = OUTLINED_FUNCTION_43_6(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD367894()
{
  uint64_t *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = OUTLINED_FUNCTION_89_16(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD3678C4()
{
  uint64_t *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = OUTLINED_FUNCTION_220_1(*MEMORY[0x1E0DEEDD8] & v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD3678F4(uint64_t *a1)
{
  SystemBannerHostViewController.sizeClass.setter(*a1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD367914(_QWORD **a1)
{
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x1F0))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD36794C(_QWORD **a1)
{
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x208))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD367984()
{
  uint64_t *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = OUTLINED_FUNCTION_44_26(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD3679B4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  *v0 = OUTLINED_FUNCTION_42_25(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_0();
}

void sub_1BD3679E4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  *v0 = OUTLINED_FUNCTION_241_2(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_0();
}

void sub_1BD367A14()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x320))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD367A4C()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x350))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD367A84()
{
  _BYTE *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x448))() & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD367ABC(unsigned __int8 *a1, _QWORD **a2)
{
  (*(void (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x450))(*a1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD367AF4()
{
  uint64_t *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = OUTLINED_FUNCTION_91_12(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD367B20(_QWORD *a1, _QWORD **a2)
{
  (*(void (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x558))(*a1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD367B58()
{
  _BYTE *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x568))() & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD367B90(unsigned __int8 *a1, _QWORD **a2)
{
  (*(void (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x570))(*a1);
  OUTLINED_FUNCTION_0();
}

uint64_t storeEnumTagSinglePayload for SystemBannerHostError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BD367C14 + 4 * byte_1BD659AB7[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BD367C48 + 4 * byte_1BD659AB2[v4]))();
}

uint64_t sub_1BD367C48(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD367C50(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD367C58);
  return result;
}

uint64_t sub_1BD367C64(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD367C6CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BD367C70(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD367C78(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for SystemBannerHostError()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for SystemBannerDismissalReason()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t dispatch thunk of SceneStateDescribing.hasPresentedFullScreenCallUI.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of SceneStateDescribing.isPresentingFullScreenCallUI.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t type metadata completion function for SystemBannerHostViewController()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
    return swift_updateClassMetadata2();
  return result;
}

uint64_t method lookup function for SystemBannerHostViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SystemBannerHostViewController.delegate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1A0))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.delegate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1A8))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.delegate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1B0))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.controlsManager.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1B8))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.controlsManager.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1C0))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.controlsManager.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1C8))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.callCenter.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1D0))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.sizeClass.getter()
{
  uint64_t *v0;

  return OUTLINED_FUNCTION_113_9(*v0);
}

uint64_t dispatch thunk of SystemBannerHostViewController.controlsType.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1F0))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.notice.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x208))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.needsCustomTimerForEphemeralSystemApertureState.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2B0))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.systemApertureAlertingManager.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2B8))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.systemApertureAlertingManager.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2C0))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.systemApertureAlertingManager.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2C8))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.conversationControlsViewController.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2D0))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.conversationControlsViewController.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2D8))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.conversationControlsViewController.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2E0))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.hasRootViewController.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2E8))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.requesterIdentifier.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x308))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.requesterIdentifier.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x310))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.requesterIdentifier.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x318))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.layoutDescription.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x320))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.layoutDescription.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x328))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.layoutDescription.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x330))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.presentableContext.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x350))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.presentableContext.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x358))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.presentableContext.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x360))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.hasPresentedFullScreenCallUI.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x398))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.isPresentingFullScreenCallUI.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x3A0))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.isMicIndicatorVisible.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x3A8))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.__allocating_init(controlsManager:sizeClass:type:delegate:isSystemAperturePresentation:requesterIdentifier:destination:layoutDescription:defaults:features:notificationCenter:activityUUID:fromActivityManager:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 944))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.updatePreferredContentSize()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x400))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.updateControlsPresentationSize(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x408))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.updateControlsCornerRadius()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x410))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.updateConversationControlsViewController(type:sizeClass:fromActivityManager:)(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))((*MEMORY[0x1E0DEEDD8] & *v3) + 0x418))(a1, a2, a3 & 1);
}

uint64_t dispatch thunk of SystemBannerHostViewController.updateContent(for:using:controllingWith:fromActivityManager:)()
{
  uint64_t *v0;

  return OUTLINED_FUNCTION_242_2(*v0);
}

uint64_t dispatch thunk of SystemBannerHostViewController.updateOverriddenSystemApertureTypeIfNeeded(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x428))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.requestPreferredLayoutMode()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x438))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.updateSystemApertureElementIsPresentingMenu(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x440))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.forceSuppressSystemApertureOverAssociatedScene.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x448))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.forceSuppressSystemApertureOverAssociatedScene.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x450))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.forceSuppressSystemApertureOverAssociatedScene.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x458))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.shouldShowSystemApertureOverAssociatedScene.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x460))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.handleLockScreenStatusChanged()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x488))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.invalidateAlertingAssertonIfFullScreen()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x490))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.dismissBanner(for:animated:completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x498))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.systemApertureTouchInsetsUpdated(to:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x4A0))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.deepLinkToFullScreenCallUI()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x4A8))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.deepLinkToFullScreenCallDetailsView()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x4B0))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.deepLinkToFullScreenPTTCallDetailsView()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x4B8))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.showDefaultSystemHUD()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x4C0))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.controlsPreferredContentSizeChanged(presentingMenu:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x4C8))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.menuPresented.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x4D0))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.needsMenuContainerView.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x4D8))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.eligibleForDismissal.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x4E0))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.isPresentingStickyNotice.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x4E8))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.needsBackgroundBlur.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x4F0))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.captureGroup.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x4F8))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.userInteractionWillBeginForBanner(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x500))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.userInteractionDidEndForBanner(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x508))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.presentableWillAppear(asBanner:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x510))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.presentableDidAppear(asBanner:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x518))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.presentableDidDisappear(asBanner:withReason:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x520))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.viewController.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x528))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.isTouchOutsideDismissalEnabled.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x530))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.isDraggingDismissalEnabled.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x538))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.isDraggingInteractionEnabled.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x540))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.systemApertureElementViewController.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x548))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.activeLayoutMode.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x550))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.activeLayoutMode.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x558))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.activeLayoutMode.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x560))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.canRequestAlertingAssertion.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x568))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.canRequestAlertingAssertion.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x570))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.canRequestAlertingAssertion.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x578))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.preferredLayoutMode.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x598))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.maximumLayoutMode.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x5A0))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.leadingView.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x5A8))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.trailingView.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x5B0))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.minimalView.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x5B8))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.detachedMinimalView.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x5C0))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.associatedAppBundleIdentifier.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x5C8))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.backgroundActivitiesToSuppress.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x5D0))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.presentationBehaviors.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x5D8))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.updateSystemAperturePreferredContentSize()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x5E0))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.handleLayoutModeTransition(from:to:isUserInitiated:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x5E8))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.positionSystemApertureAccessoryView(_:aligningWithEdge:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x5F0))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.positionSystemApertureAccessoryViews()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x5F8))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.viewWillLayoutSubviews(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x600))();
}

uint64_t dispatch thunk of SystemBannerHostViewController.performUpdateForRecipeTransition(from:to:coordinatedAnimations:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x618))();
}

void destroy for SystemBannerHostViewController.OverriddenSystemApertureContent(uint64_t a1)
{
  switch(*(_BYTE *)(a1 + 48))
  {
    case 0:
      __swift_destroy_boxed_opaque_existential_1(a1 + 8);
      break;
    case 1:
    case 3:
      swift_bridgeObjectRelease();
      break;
    case 2:

      break;
    case 5:
      swift_unknownObjectRelease();
      break;
    default:
      return;
  }
}

uint64_t initializeWithCopy for SystemBannerHostViewController.OverriddenSystemApertureContent(uint64_t a1, uint64_t *a2)
{
  uint64_t *v4;
  uint64_t v5;
  _OWORD *v6;
  __int128 v7;
  uint64_t v8;
  char v9;
  void *v10;
  id v11;
  uint64_t v12;
  __int128 v13;

  v5 = *a2;
  v4 = a2 + 1;
  *(_QWORD *)a1 = v5;
  v6 = (_OWORD *)(a1 + 8);
  switch(*((_BYTE *)a2 + 48))
  {
    case 0:
      v7 = *((_OWORD *)a2 + 2);
      *(_OWORD *)(a1 + 32) = v7;
      (**(void (***)(_OWORD *, uint64_t))(v7 - 8))(v6, (uint64_t)v4);
      *(_BYTE *)(a1 + 48) = 0;
      break;
    case 1:
      v8 = a2[2];
      *(_QWORD *)(a1 + 8) = a2[1];
      *(_QWORD *)(a1 + 16) = v8;
      v9 = 1;
      goto LABEL_6;
    case 2:
      v10 = (void *)*v4;
      *(_QWORD *)(a1 + 8) = *v4;
      *(_BYTE *)(a1 + 48) = 2;
      v11 = v10;
      break;
    case 3:
      v12 = a2[2];
      *(_QWORD *)(a1 + 8) = a2[1];
      *(_QWORD *)(a1 + 16) = v12;
      v9 = 3;
LABEL_6:
      *(_BYTE *)(a1 + 48) = v9;
      swift_bridgeObjectRetain();
      break;
    case 5:
      *(_OWORD *)(a1 + 8) = *(_OWORD *)v4;
      *(_BYTE *)(a1 + 48) = 5;
      swift_unknownObjectRetain();
      break;
    default:
      v13 = *((_OWORD *)v4 + 1);
      *v6 = *(_OWORD *)v4;
      v6[1] = v13;
      *(_OWORD *)((char *)v6 + 25) = *(_OWORD *)((char *)v4 + 25);
      break;
  }
  return a1;
}

uint64_t assignWithCopy for SystemBannerHostViewController.OverriddenSystemApertureContent(uint64_t a1, uint64_t a2)
{
  __int128 *v3;
  _OWORD *v4;
  uint64_t v6;
  char v7;
  void *v8;
  id v9;
  __int128 v10;
  __int128 v11;

  v3 = (__int128 *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = (_OWORD *)(a1 + 8);
  if (a1 != a2)
  {
    outlined destroy of ConversationControlsType(a1 + 8);
    switch(*(_BYTE *)(a2 + 48))
    {
      case 0:
        v6 = *(_QWORD *)(a2 + 32);
        *(_QWORD *)(a1 + 32) = v6;
        *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
        (**(void (***)(_OWORD *, __int128 *))(v6 - 8))(v4, v3);
        *(_BYTE *)(a1 + 48) = 0;
        break;
      case 1:
        *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        v7 = 1;
        goto LABEL_7;
      case 2:
        v8 = *(void **)v3;
        *(_QWORD *)(a1 + 8) = *(_QWORD *)v3;
        *(_BYTE *)(a1 + 48) = 2;
        v9 = v8;
        break;
      case 3:
        *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        v7 = 3;
LABEL_7:
        *(_BYTE *)(a1 + 48) = v7;
        swift_bridgeObjectRetain();
        break;
      case 5:
        *(_OWORD *)(a1 + 8) = *v3;
        *(_BYTE *)(a1 + 48) = 5;
        swift_unknownObjectRetain();
        break;
      default:
        v10 = *v3;
        v11 = v3[1];
        *(_OWORD *)((char *)v4 + 25) = *(__int128 *)((char *)v3 + 25);
        *v4 = v10;
        v4[1] = v11;
        break;
    }
  }
  return a1;
}

uint64_t assignWithTake for SystemBannerHostViewController.OverriddenSystemApertureContent(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  if (a1 != a2)
  {
    outlined destroy of ConversationControlsType(a1 + 8);
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 33) = *(_OWORD *)(a2 + 33);
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for SystemBannerHostViewController.OverriddenSystemApertureContent(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFA && *(_BYTE *)(a1 + 49))
    {
      v2 = *(_DWORD *)a1 + 249;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 48);
      if (v3 <= 6)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SystemBannerHostViewController.OverriddenSystemApertureContent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF9)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 250;
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 49) = 0;
    if (a2)
      *(_BYTE *)(result + 48) = -(char)a2;
  }
  return result;
}

void type metadata accessor for SystemBannerHostViewController.OverriddenSystemApertureContent()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t outlined assign with copy of SystemBannerHostViewController.OverriddenSystemApertureContent?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SystemBannerHostViewController.OverriddenSystemApertureContent?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BD368B58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id *v8;
  _QWORD *v9;
  char v10;
  char v11;
  id *v12;
  void *v13;

  v1 = OUTLINED_FUNCTION_28_1();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = v0 + v3;
  switch(*(_BYTE *)(v0 + v3 + 40))
  {
    case 0:
      __swift_destroy_boxed_opaque_existential_1(v0 + v3);
      break;
    case 1:
    case 3:
      swift_bridgeObjectRelease();
      break;
    case 2:

      break;
    case 5:
      swift_unknownObjectRelease();
      break;
    default:
      break;
  }

  v6 = *(void **)(v5 + 56);
  if (v6)
  {

  }
  swift_bridgeObjectRelease();
  v7 = OUTLINED_FUNCTION_196_1();
  if (!OUTLINED_FUNCTION_147_3(v7))
    OUTLINED_FUNCTION_153_5();
  v8 = (id *)(v5 + *(int *)(v1 + 40));
  if (*v8)
  {

  }
  OUTLINED_FUNCTION_272_1();
  if (!(!v11 & v10))
    OUTLINED_FUNCTION_194_1(v9);
  OUTLINED_FUNCTION_269_3();
  if (!v11)
    OUTLINED_FUNCTION_265_3(v12);
  OUTLINED_FUNCTION_262_2();
  if (!v11)
  {

  }
  OUTLINED_FUNCTION_21_6();
  return OUTLINED_FUNCTION_17_33();
}

void partial apply for closure #1 in closure #1 in SystemBannerHostViewController.updateContent(for:using:controllingWith:fromActivityManager:)()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(OUTLINED_FUNCTION_28_1() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  closure #1 in closure #1 in SystemBannerHostViewController.updateContent(for:using:controllingWith:fromActivityManager:)(v0 + v2, *(_QWORD **)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t partial apply for closure #4 in SystemBannerHostViewController.init(controlsManager:sizeClass:type:delegate:isSystemAperturePresentation:requesterIdentifier:destination:layoutDescription:defaults:features:notificationCenter:activityUUID:fromActivityManager:)(uint64_t *a1)
{
  uint64_t v1;

  return closure #4 in SystemBannerHostViewController.init(controlsManager:sizeClass:type:delegate:isSystemAperturePresentation:requesterIdentifier:destination:layoutDescription:defaults:features:notificationCenter:activityUUID:fromActivityManager:)(a1, v1);
}

uint64_t sub_1BD368CE4()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void partial apply for closure #1 in SystemBannerHostViewController.conversationControlsViewController.didset(uint64_t a1)
{
  uint64_t v1;

  closure #1 in SystemBannerHostViewController.conversationControlsViewController.didset(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t OUTLINED_FUNCTION_39_48(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 296) = a1;
  return v1 + 296;
}

void OUTLINED_FUNCTION_85_15(void *a1, NSObject *a2, uint64_t a3, const char *a4)
{
  uint8_t *v4;
  os_log_type_t v5;

  _os_log_impl(a1, a2, v5, a4, v4, 0x20u);
}

uint64_t OUTLINED_FUNCTION_87_11()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_89_16@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(void))((v1 & a1) + 0x1B8))();
}

uint64_t OUTLINED_FUNCTION_99_8()
{
  uint64_t v0;
  uint64_t v1;

  return outlined init with copy of ConversationControlsType(v0, v1 - 240);
}

uint64_t OUTLINED_FUNCTION_104_10()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

id OUTLINED_FUNCTION_106_10@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return *(id *)(v1 + a1);
}

uint64_t OUTLINED_FUNCTION_121_3()
{
  _QWORD *v0;
  _QWORD *v1;

  return (*(uint64_t (**)(void))((*v1 & *v0) + 0x5A0))();
}

uint64_t OUTLINED_FUNCTION_126_3(uint64_t a1, float a2)
{
  float *v2;
  uint64_t (*v3)(uint64_t);

  *v2 = a2;
  return v3(a1);
}

uint64_t OUTLINED_FUNCTION_129_7(float a1)
{
  float *v1;
  uint64_t (*v2)(void);

  *v1 = a1;
  return v2();
}

uint64_t OUTLINED_FUNCTION_130_4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 160) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_135_4()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_140_6@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(void))((v1 & a1) + 0x4D0))();
}

id OUTLINED_FUNCTION_144_3(id a1)
{
  return a1;
}

uint64_t OUTLINED_FUNCTION_145_5()
{
  return Logger.logObject.getter();
}

uint64_t OUTLINED_FUNCTION_147_3(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(v1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_150_3()
{
  uint64_t v0;
  uint64_t v1;

  return outlined assign with take of ConversationControlsType(v1 - 240, v0);
}

BOOL OUTLINED_FUNCTION_161_4(os_log_type_t a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, os_log_t oslog)
{
  return os_log_type_enabled(oslog, a1);
}

uint64_t OUTLINED_FUNCTION_163_2()
{
  uint64_t v0;

  return outlined destroy of ConversationControlsType(v0 + 240);
}

uint64_t OUTLINED_FUNCTION_167_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

uint64_t OUTLINED_FUNCTION_168_0@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_169_0@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_172_1()
{
  return swift_getObjectType();
}

uint64_t OUTLINED_FUNCTION_174_2(uint64_t a1, uint64_t a2, ...)
{
  unint64_t v2;
  uint64_t v3;
  va_list va;

  va_start(va, a2);
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v3, v2, (uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_176_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  return specialized >> prefix<A>(_:)(v8 + 296, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t OUTLINED_FUNCTION_179_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t OUTLINED_FUNCTION_181_2@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return (*(uint64_t (**)(void))((*v1 & a1) + 0x58))();
}

uint64_t OUTLINED_FUNCTION_194_1@<X0>(_QWORD *a1@<X8>)
{
  return outlined consume of ConversationControlsRecipe.Actions(*a1, a1[1], a1[2], a1[3], a1[4]);
}

uint64_t OUTLINED_FUNCTION_196_1()
{
  return type metadata accessor for AttributedString();
}

void OUTLINED_FUNCTION_197_2(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  outlined init with take of RemoteControlOnboardingView?(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_203_1()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_204_3()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_206_1(uint64_t a1, ...)
{
  va_list va;

  va_start(va, a1);
  return outlined destroy of ConversationControlsType((uint64_t)va);
}

void OUTLINED_FUNCTION_210_1()
{
  uint64_t v0;

  *(_WORD *)(v0 + 22) = 2080;
}

id OUTLINED_FUNCTION_211_2(uint64_t a1, uint64_t a2)
{
  void *v2;

  __swift_project_value_buffer(a1, a2);
  return v2;
}

uint64_t OUTLINED_FUNCTION_212_1()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

id OUTLINED_FUNCTION_215_0(id a1, SEL a2)
{
  return objc_msgSend(a1, a2, 1.0);
}

_QWORD *OUTLINED_FUNCTION_216_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  _QWORD *(*v6)(uint64_t *__return_ptr);
  va_list va;

  va_start(va, a6);
  return v6((uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_217_1()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_219_2()
{
  return String.init<A>(reflecting:)();
}

uint64_t OUTLINED_FUNCTION_220_1@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 472))();
}

void OUTLINED_FUNCTION_222_2()
{
  void *v0;

}

void OUTLINED_FUNCTION_226()
{
  type metadata accessor for CGSize(0);
}

uint64_t OUTLINED_FUNCTION_228_2()
{
  return Logger.logObject.getter();
}

uint64_t OUTLINED_FUNCTION_229_4()
{
  return static os_log_type_t.error.getter();
}

void OUTLINED_FUNCTION_231_3()
{
  uint64_t v0;
  uint64_t *v1;

  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v0 + 296, v1);
}

uint64_t OUTLINED_FUNCTION_232_2()
{
  uint64_t v0;

  return outlined init with copy of ConversationControlsType(v0 + 296, v0 + 240);
}

double OUTLINED_FUNCTION_235()
{
  double v0;

  return v0;
}

void *OUTLINED_FUNCTION_236_3@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  a4 = v5;
  a5 = a1;
  return _Block_copy(&a2);
}

uint64_t OUTLINED_FUNCTION_237_3()
{
  uint64_t (*v0)(void);

  return v0();
}

uint64_t OUTLINED_FUNCTION_241_2@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(void))((v1 & a1) + 0x308))();
}

uint64_t OUTLINED_FUNCTION_242_2@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(void))((v1 & a1) + 0x420))();
}

uint64_t OUTLINED_FUNCTION_246_1(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 184) = a1;
  return v1 - 184;
}

uint64_t OUTLINED_FUNCTION_247_3()
{
  return String.init<A>(reflecting:)();
}

uint64_t OUTLINED_FUNCTION_252_1()
{
  return Logger.logObject.getter();
}

void OUTLINED_FUNCTION_265_3(id *a1@<X8>)
{
  outlined consume of PreCallControlsContext(*a1);
}

uint64_t OUTLINED_FUNCTION_268_3()
{
  return Logger.logObject.getter();
}

void OUTLINED_FUNCTION_274_2()
{
  SystemBannerHostViewController.updateSystemApertureCustomContentVisibility(hidden:shouldLog:)(1, 0);
}

_QWORD *OUTLINED_FUNCTION_277_2@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  return (*(_QWORD *(**)(uint64_t *__return_ptr))(a1 + 496))((uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_279_3@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 192))();
}

unint64_t OUTLINED_FUNCTION_285_2()
{
  return 0xD000000000000017;
}

uint64_t OUTLINED_FUNCTION_288_0()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_291_3()
{
  uint64_t v0;
  void *v1;

  SystemBannerHostViewController.conversationControlsViewController.setter(v1, v0);
}

CNKCoreAnalyticsReporter __swiftcall CNKCoreAnalyticsReporter.init()()
{
  return (CNKCoreAnalyticsReporter)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
}

uint64_t CNKCoreAnalyticsReporter.reportAVLessLeaveConfirmation(presentedAt:action:)(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t inited;
  double v8;
  double v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v16[80];

  v3 = type metadata accessor for Date();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, NSObject)>);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BD645380;
  *(_QWORD *)(inited + 32) = 0x6E6F697461727564;
  *(_QWORD *)(inited + 40) = 0xE800000000000000;
  static Date.now.getter();
  Date.timeIntervalSince(_:)();
  v9 = v8;
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
  *(_QWORD *)(inited + 48) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, v9);
  *(_QWORD *)(inited + 56) = 0x6E6F69746361;
  *(_QWORD *)(inited + 64) = 0xE600000000000000;
  if (a2)
  {
    if (a2 == 1)
      v10 = 0x736553657661656CLL;
    else
      v10 = 0x6E6F697463416F6ELL;
    if (a2 == 1)
      v11 = 0xEC0000006E6F6973;
    else
      v11 = 0xE800000000000000;
  }
  else
  {
    v11 = 0xEF6E6F6973736553;
    v10 = 0x65756E69746E6F63;
  }
  v12 = MEMORY[0x1C3B72E00](v10, v11);
  v13 = swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 72) = v12;
  OUTLINED_FUNCTION_17_8(v13, (unint64_t *)&lazy cache variable for type metadata for NSObject);
  Dictionary.init(dictionaryLiteral:)();
  OUTLINED_FUNCTION_61();
  OUTLINED_FUNCTION_3_105(0xD00000000000002BLL, v14);
  return swift_bridgeObjectRelease();
}

uint64_t CNKCoreAnalyticsReporter.reportStartedNoticeLaunch(_:)(void *a1)
{
  id v1;
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t inited;
  Swift::String v9;
  Swift::String v10;
  NSString v11;
  uint64_t v12;
  uint64_t v13;

  v1 = objc_msgSend(a1, sel_activity);
  v2 = objc_msgSend(v1, sel_metadata);

  if (v2)
  {
    v3 = objc_msgSend(v2, sel_context);

    v4 = objc_msgSend(v3, sel_analyticsIdentifier);
    v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v7 = v6;

  }
  else
  {
    v7 = (void *)0xE700000000000000;
    v5 = 0x6E776F6E6B6E55;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, NSObject)>);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BD645380;
  strcpy((char *)(inited + 32), "activity_type");
  *(_WORD *)(inited + 46) = -4864;
  OUTLINED_FUNCTION_17_8(inited, (unint64_t *)&lazy cache variable for type metadata for NSString);
  v9._countAndFlagsBits = v5;
  v9._object = v7;
  *(_QWORD *)(inited + 48) = NSString.__allocating_init(string:)(v9);
  *(_QWORD *)(inited + 56) = 0x745F6E6F69746361;
  *(_QWORD *)(inited + 64) = 0xEB00000000657079;
  OUTLINED_FUNCTION_61();
  v10._countAndFlagsBits = 0xD000000000000024;
  v11 = NSString.__allocating_init(string:)(v10);
  *(_QWORD *)(inited + 72) = v11;
  OUTLINED_FUNCTION_17_8((uint64_t)v11, (unint64_t *)&lazy cache variable for type metadata for NSObject);
  Dictionary.init(dictionaryLiteral:)();
  OUTLINED_FUNCTION_61();
  OUTLINED_FUNCTION_3_105(v12, v13);
  return swift_bridgeObjectRelease();
}

uint64_t CNKCoreAnalyticsReporterIncompatibilityReason.stringValue.getter(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;

  v1 = 0x6163207472617453;
  switch(a1)
  {
    case 0:
      return v1;
    case 1:
      return 0x706F657020646441;
    case 2:
    case 6:
      OUTLINED_FUNCTION_61();
      return 0xD000000000000014;
    case 3:
      v1 = 0xD000000000000022;
      goto LABEL_11;
    case 4:
      v1 = 0xD000000000000019;
      goto LABEL_11;
    case 5:
      v1 = 0xD000000000000016;
LABEL_11:
      OUTLINED_FUNCTION_61();
      break;
    default:
      if (one-time initialization token for default != -1)
        swift_once();
      v1 = 0x6E776F6E6B6E55;
      v2 = type metadata accessor for Logger();
      __swift_project_value_buffer(v2, (uint64_t)&static Log.default);
      v3 = Logger.logObject.getter();
      v4 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v3, v4))
      {
        v5 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v5 = 0;
        _os_log_impl(&dword_1BD004000, v3, v4, "Unknown enum case", v5, 2u);
        MEMORY[0x1C3B751B8](v5, -1, -1);
      }

      break;
  }
  return v1;
}

ConversationKit::AVLessLeaveConfirmationAction_optional __swiftcall AVLessLeaveConfirmationAction.init(rawValue:)(Swift::String rawValue)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = rawValue._object;
  v2._countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of AVLessLeaveConfirmationAction.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 >= 3)
    return (ConversationKit::AVLessLeaveConfirmationAction_optional)3;
  else
    return (ConversationKit::AVLessLeaveConfirmationAction_optional)v3;
}

uint64_t AVLessLeaveConfirmationAction.rawValue.getter(char a1)
{
  if (!a1)
    return 0x65756E69746E6F63;
  if (a1 == 1)
    return 0x736553657661656CLL;
  return 0x6E6F697463416F6ELL;
}

void protocol witness for static Equatable.== infix(_:_:) in conformance AVLessLeaveConfirmationAction(unsigned __int8 *a1, char *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance AVLessLeaveConfirmationAction()
{
  char *v0;

  specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance AVLessLeaveConfirmationAction()
{
  return specialized RawRepresentable<>.hash(into:)();
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance AVLessLeaveConfirmationAction(uint64_t a1)
{
  char *v1;

  specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

ConversationKit::AVLessLeaveConfirmationAction_optional protocol witness for RawRepresentable.init(rawValue:) in conformance AVLessLeaveConfirmationAction@<W0>(Swift::String *a1@<X0>, ConversationKit::AVLessLeaveConfirmationAction_optional *a2@<X8>)
{
  ConversationKit::AVLessLeaveConfirmationAction_optional result;

  result.value = AVLessLeaveConfirmationAction.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance AVLessLeaveConfirmationAction@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = AVLessLeaveConfirmationAction.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

Swift::Void __swiftcall CNKCoreAnalyticsReporter.reportCanceledSOSCountdown(toCall:)(Swift::Double toCall)
{
  CNKCoreAnalyticsReporter.logSOSCancelCountdownEvent(type:duration:)(1819042115, (void *)0xE400000000000000, toCall);
}

uint64_t CNKCoreAnalyticsReporter.logSOSCancelCountdownEvent(type:duration:)(uint64_t a1, void *a2, double a3)
{
  uint64_t inited;
  Swift::String v7;
  uint64_t v8;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, NSObject)>);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BD645380;
  *(_QWORD *)(inited + 32) = 1701869940;
  *(_QWORD *)(inited + 40) = 0xE400000000000000;
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSString);
  swift_bridgeObjectRetain();
  v7._countAndFlagsBits = a1;
  v7._object = a2;
  *(_QWORD *)(inited + 48) = NSString.__allocating_init(string:)(v7);
  *(_QWORD *)(inited + 56) = 0xD000000000000012;
  *(_QWORD *)(inited + 64) = 0x80000001BD687960;
  *(_QWORD *)(inited + 72) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, a3 * 1000.0);
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSObject);
  v8 = Dictionary.init(dictionaryLiteral:)();
  CNKCoreAnalyticsReporter.logEvent(viewName:coreAnalyticsDictionary:)(0xD00000000000002ALL, 0x80000001BD687930, v8);
  return swift_bridgeObjectRelease();
}

Swift::Void __swiftcall CNKCoreAnalyticsReporter.reportCanceledSOSCountdown(toNotify:)(Swift::Double toNotify)
{
  CNKCoreAnalyticsReporter.logSOSCancelCountdownEvent(type:duration:)(0x796669746F4ELL, (void *)0xE600000000000000, toNotify);
}

uint64_t CNKCoreAnalyticsReporter.report(_:)(uint64_t a1)
{
  uint64_t inited;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, NSObject)>);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BD6441D0;
  *(_QWORD *)(inited + 32) = 0xD000000000000013;
  *(_QWORD *)(inited + 40) = 0x80000001BD6878B0;
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, a1);
  *(_QWORD *)(inited + 48) = v3;
  OUTLINED_FUNCTION_17_8((uint64_t)v3, (unint64_t *)&lazy cache variable for type metadata for NSObject);
  v4 = Dictionary.init(dictionaryLiteral:)();
  OUTLINED_FUNCTION_61();
  CNKCoreAnalyticsReporter.logEvent(viewName:coreAnalyticsDictionary:)(v5, v6, v4);
  return swift_bridgeObjectRelease();
}

void CNKCoreAnalyticsReporter.logEvent(viewName:coreAnalyticsDictionary:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  _QWORD v10[6];

  if (one-time initialization token for conversationKit != -1)
    swift_once();
  static os_log_type_t.debug.getter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BD645380;
  *(_QWORD *)(v6 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v6 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v6 + 32) = a1;
  *(_QWORD *)(v6 + 40) = a2;
  *(_QWORD *)(v6 + 96) = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : NSObject]);
  *(_QWORD *)(v6 + 104) = lazy protocol witness table accessor for type [String : NSObject] and conformance [A : B]();
  *(_QWORD *)(v6 + 72) = a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  v7 = (void *)MEMORY[0x1C3B72E00](a1, a2);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a3;
  v10[4] = partial apply for closure #1 in CNKCoreAnalyticsReporter.logEvent(viewName:coreAnalyticsDictionary:);
  v10[5] = v8;
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 1107296256;
  v10[2] = thunk for @escaping @callee_guaranteed () -> (@owned [String : NSObject]?);
  v10[3] = &block_descriptor_64;
  v9 = _Block_copy(v10);
  swift_bridgeObjectRetain();
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v9);

}

uint64_t CNKCoreAnalyticsReporter.reportIncompatibilityTypeNone(recipientCount:reason:)(uint64_t a1, uint64_t a2)
{
  return OUTLINED_FUNCTION_0_124(a1, a2, 0x65766974614ELL);
}

uint64_t CNKCoreAnalyticsReporter.logIncompatibilityEvent(type:reason:recipientCount:)(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t inited;
  Swift::String v11;
  Swift::String v12;
  uint64_t v13;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, NSObject)>);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BD646740;
  *(_QWORD *)(inited + 32) = 1701869940;
  *(_QWORD *)(inited + 40) = 0xE400000000000000;
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSString);
  swift_bridgeObjectRetain();
  v11._countAndFlagsBits = a1;
  v11._object = a2;
  *(_QWORD *)(inited + 48) = NSString.__allocating_init(string:)(v11);
  *(_QWORD *)(inited + 56) = 0x6E6F73616572;
  *(_QWORD *)(inited + 64) = 0xE600000000000000;
  swift_bridgeObjectRetain();
  v12._countAndFlagsBits = a3;
  v12._object = a4;
  *(_QWORD *)(inited + 72) = NSString.__allocating_init(string:)(v12);
  strcpy((char *)(inited + 80), "recipientCount");
  *(_BYTE *)(inited + 95) = -18;
  *(_QWORD *)(inited + 96) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, a5);
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSObject);
  v13 = Dictionary.init(dictionaryLiteral:)();
  CNKCoreAnalyticsReporter.logEvent(viewName:coreAnalyticsDictionary:)(0xD000000000000022, 0x80000001BD687900, v13);
  return swift_bridgeObjectRelease();
}

uint64_t CNKCoreAnalyticsReporter.reportIncompatibilityTypeLegacy(recipientCount:reason:)(uint64_t a1, uint64_t a2)
{
  return OUTLINED_FUNCTION_0_124(a1, a2, 0x79636167654CLL);
}

uint64_t CNKCoreAnalyticsReporter.reportIncompatibilityTypeWeb(recipientCount:reason:)(uint64_t a1, uint64_t a2)
{
  return CNKCoreAnalyticsReporter.reportIncompatibilityTypeNone(recipientCount:reason:)(a1, a2, 6448471, (void *)0xE300000000000000);
}

uint64_t CNKCoreAnalyticsReporter.reportIncompatibilityTypeInvalid(recipientCount:reason:)(uint64_t a1, uint64_t a2)
{
  return CNKCoreAnalyticsReporter.reportIncompatibilityTypeNone(recipientCount:reason:)(a1, a2, 0x64696C61766E49, (void *)0xE700000000000000);
}

uint64_t CNKCoreAnalyticsReporter.reportIncompatibilityTypeNone(recipientCount:reason:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7;
  void *v8;

  v7 = CNKCoreAnalyticsReporterIncompatibilityReason.stringValue.getter(a2);
  CNKCoreAnalyticsReporter.logIncompatibilityEvent(type:reason:recipientCount:)(a3, a4, v7, v8, a1);
  return swift_bridgeObjectRelease();
}

id CNKCoreAnalyticsReporter.init()()
{
  objc_super v1;

  v1.super_class = (Class)CNKCoreAnalyticsReporter;
  return objc_msgSendSuper2(&v1, sel_init);
}

NSString __swiftcall NSString.__allocating_init(string:)(Swift::String string)
{
  void *object;
  uint64_t countAndFlagsBits;
  id v3;
  void *v4;
  id v5;

  object = string._object;
  countAndFlagsBits = string._countAndFlagsBits;
  v3 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v4 = (void *)MEMORY[0x1C3B72E00](countAndFlagsBits, object);
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v3, sel_initWithString_, v4);

  return v5;
}

unint64_t lazy protocol witness table accessor for type AVLessLeaveConfirmationAction and conformance AVLessLeaveConfirmationAction()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type AVLessLeaveConfirmationAction and conformance AVLessLeaveConfirmationAction;
  if (!lazy protocol witness table cache variable for type AVLessLeaveConfirmationAction and conformance AVLessLeaveConfirmationAction)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for AVLessLeaveConfirmationAction, &type metadata for AVLessLeaveConfirmationAction);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AVLessLeaveConfirmationAction and conformance AVLessLeaveConfirmationAction);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AVLessLeaveConfirmationAction(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BD36A1D8 + 4 * byte_1BD659E6C[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BD36A20C + 4 * byte_1BD659E67[v4]))();
}

uint64_t sub_1BD36A20C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD36A214(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD36A21CLL);
  return result;
}

uint64_t sub_1BD36A228(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD36A230);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BD36A234(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD36A23C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AVLessLeaveConfirmationAction()
{
  return &type metadata for AVLessLeaveConfirmationAction;
}

uint64_t type metadata accessor for CNKCoreAnalyticsReporter(uint64_t a1)
{
  return _sSo8NSObjectCMaTm_0(a1, &lazy cache variable for type metadata for CNKCoreAnalyticsReporter);
}

uint64_t sub_1BD36A2B0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in CNKCoreAnalyticsReporter.logEvent(viewName:coreAnalyticsDictionary:)()
{
  return swift_bridgeObjectRetain();
}

uint64_t CircularBuffer.init(count:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v3 = type metadata accessor for Optional();
  MEMORY[0x1E0C80A78](v3);
  __swift_storeEnumTagSinglePayload((uint64_t)&v6 - v4, 1, 1, a2);
  return Array.init(repeating:count:)();
}

void CircularBuffer.push(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  Swift::Int v15;
  uint64_t v16;
  uint64_t v17;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = type metadata accessor for Optional();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v17 - v8;
  v10 = v2[1];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
  {
    __break(1u);
    goto LABEL_9;
  }
  v13 = v2[2];
  if (!v13)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v12 != 0x8000000000000000 || v13 != -1)
  {
    v15 = v12 % v13;
    v2[1] = v12 % v13;
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(*(_QWORD *)(v4 - 8) + 16))(v9, a1, v4, v7);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v4);
    type metadata accessor for Array();
    Array._makeMutableAndUnique()();
    v16 = *v2;
    Array._checkSubscript_mutating(_:)(v15);
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 40))(v16+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v15, v9, v5);
    return;
  }
LABEL_10:
  __break(1u);
}

uint64_t CircularBuffer.count.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

uint64_t CircularBuffer.read(at:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v12;
  uint64_t v14;

  v7 = a3 + result;
  if (__OFADD__(a3, result))
  {
    __break(1u);
    goto LABEL_13;
  }
  v8 = __OFADD__(v7, a4);
  v9 = v7 + a4;
  if (v8)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!a4)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    return result;
  }
  if (a4 == -1 && v9 == 0x8000000000000000)
    goto LABEL_15;
  v12 = v9 % a4;
  if (v9 % a4 < 1)
    return __swift_storeEnumTagSinglePayload(a6, 1, 1, a5);
  v14 = type metadata accessor for Optional();
  if (v12 >= MEMORY[0x1C3B730D0](a2, v14))
    return __swift_storeEnumTagSinglePayload(a6, 1, 1, a5);
  else
    return Array.subscript.getter();
}

Swift::Void __swiftcall Array._checkSubscript_mutating(_:)(Swift::Int a1)
{
  uint64_t v1;
  uint64_t v2;
  char isClassOrObjCExistentialType;
  uint64_t v5;

  v2 = v1;
  isClassOrObjCExistentialType = _swift_isClassOrObjCExistentialType();
  if (a1 < 0)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return;
  }
  v5 = v2 & 0xFFFFFFFFFFFFF8;
  if ((isClassOrObjCExistentialType & 1) == 0)
    v5 = v2;
  if (*(_QWORD *)(v5 + 16) <= (unint64_t)a1)
    goto LABEL_7;
}

uint64_t initializeBufferWithCopyOfBuffer for CircularBuffer(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for CircularBuffer(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  return a1;
}

uint64_t assignWithTake for CircularBuffer(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  return a1;
}

uint64_t type metadata accessor for CircularBuffer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CircularBuffer);
}

uint64_t one-time initialization function for tipUserInfo()
{
  uint64_t result;

  type metadata accessor for MultiwayViewController.FaceTimeLinkTipUserInfo();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0;
  static MultiwayViewController.tipUserInfo = (_UNKNOWN *)result;
  return result;
}

{
  uint64_t result;

  type metadata accessor for RecentsListViewController.FaceTimeLinkTipUserInfo();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0;
  static RecentsListViewController.tipUserInfo = (_UNKNOWN *)result;
  return result;
}

Swift::Void __swiftcall MultiwayViewController.tipKitStartObservation()()
{
  MultiwayViewController.tipKitStartObservation()();
}

uint64_t sub_1BD36A6CC()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t closure #1 in MultiwayViewController.tipKitStartObservation()(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;

  v1[5] = a1;
  v2 = type metadata accessor for FaceInFrameTip();
  v1[6] = v2;
  v1[7] = *(_QWORD *)(v2 - 8);
  v1[8] = swift_task_alloc();
  type metadata accessor for TPTipsHelper();
  v3 = (_QWORD *)swift_task_alloc();
  v1[9] = v3;
  *v3 = v1;
  v3[1] = closure #1 in MultiwayViewController.tipKitStartObservation();
  return static TPTipsHelper.shared.getter();
}

uint64_t closure #1 in MultiwayViewController.tipKitStartObservation()()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_45_2();
  *(_QWORD *)(v1 + 80) = v0;
  OUTLINED_FUNCTION_37_20();
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_4_4();
}

{
  uint64_t v0;

  type metadata accessor for MainActor();
  *(_QWORD *)(v0 + 88) = static MainActor.shared.getter();
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_56_0();
  OUTLINED_FUNCTION_63_1();
  return OUTLINED_FUNCTION_0_6();
}

{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 80);
  swift_release();
  dispatch thunk of TPTipsHelper.setup()();

  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_4_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 40) + 16;
  OUTLINED_FUNCTION_1();
  v2 = MEMORY[0x1C3B752C0](v1);
  *(_QWORD *)(v0 + 96) = v2;
  if (v2)
  {
    FaceInFrameTip.init()();
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 104) = v3;
    *v3 = v0;
    v3[1] = closure #1 in MultiwayViewController.tipKitStartObservation();
    return specialized MultiwayViewController.observeTip<A>(_:)(*(_QWORD *)(v0 + 64));
  }
  else
  {
    OUTLINED_FUNCTION_37_20();
    return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v0 + 8));
  }
}

{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;

  v5 = (_QWORD *)*v0;
  v2 = v5[7];
  v1 = v5[8];
  v3 = v5[6];
  OUTLINED_FUNCTION_11_40(&v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  OUTLINED_FUNCTION_2_14();
  return swift_task_switch();
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_26_49();
  return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t partial apply for closure #1 in MultiwayViewController.tipKitStartObservation()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = partial apply for closure #1 in VideoMessageInboxController.updateCallItems();
  return closure #1 in MultiwayViewController.tipKitStartObservation()(v0);
}

uint64_t specialized MultiwayViewController.observeTip<A>(_:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2[7] = a1;
  v2[8] = v1;
  v3 = type metadata accessor for TPTipsHelper.Entry.Kind();
  v2[9] = v3;
  v2[10] = *(_QWORD *)(v3 - 8);
  v2[11] = swift_task_alloc();
  v4 = type metadata accessor for TPTipsHelper.Entry();
  v2[12] = v4;
  v2[13] = *(_QWORD *)(v4 - 8);
  v2[14] = swift_task_alloc();
  v5 = type metadata accessor for FaceInFrameTip();
  v2[15] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[16] = v6;
  v2[17] = *(_QWORD *)(v6 + 64);
  v2[18] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  v2[19] = swift_task_alloc();
  v2[20] = type metadata accessor for MainActor();
  v2[21] = static MainActor.shared.getter();
  v2[22] = dispatch thunk of Actor.unownedExecutor.getter();
  v2[23] = v7;
  return swift_task_switch();
}

uint64_t specialized MultiwayViewController.observeTip<A>(_:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v1 = v0[19];
  v3 = v0[17];
  v2 = v0[18];
  v4 = v0[15];
  v5 = v0[16];
  v6 = v0[7];
  v7 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v7);
  v8 = OUTLINED_FUNCTION_7_0();
  swift_unknownObjectWeakInit();
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  v0[24] = v9;
  v9(v2, v6, v4);
  swift_retain();
  v10 = static MainActor.shared.getter();
  v11 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v12 = swift_allocObject();
  v13 = MEMORY[0x1E0DF06E8];
  *(_QWORD *)(v12 + 16) = v10;
  *(_QWORD *)(v12 + 24) = v13;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 32))(v12 + v11, v2, v4);
  *(_QWORD *)(v12 + ((v3 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v8;
  swift_release();
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
  v0[25] = v14;
  OUTLINED_FUNCTION_24_51();
  v15 = (_QWORD *)swift_task_alloc();
  v0[26] = v15;
  OUTLINED_FUNCTION_30_9(v15, (uint64_t)specialized MultiwayViewController.observeTip<A>(_:));
  return static TPTipsHelper.shared.getter();
}

{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_15_4();
  *(_QWORD *)(v0 + 216) = v1;
  OUTLINED_FUNCTION_37_20();
  return OUTLINED_FUNCTION_4_4();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *boxed_opaque_existential_1;
  void (*v10)(uint64_t *, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;

  v1 = *(void **)(v0 + 216);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 120);
  v10 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v0 + 192);
  v11 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 88);
  v12 = *(_QWORD *)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 72);
  v6 = *(_QWORD *)(v0 + 80);
  v7 = *(_QWORD *)(v0 + 56);
  swift_release();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 104))(v4, *MEMORY[0x1E0DBCF80], v5);
  *(_QWORD *)(v0 + 40) = v3;
  *(_QWORD *)(v0 + 48) = lazy protocol witness table accessor for type FaceInFrameTip and conformance FaceInFrameTip();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 16));
  v10(boxed_opaque_existential_1, v7, v3);
  swift_retain();
  TPTipsHelper.Entry.init(_:tip:observationTask:)();
  dispatch thunk of TPTipsHelper.addEntry(_:)();

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v2, v12);
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_81_0();
  OUTLINED_FUNCTION_12();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

Swift::Void __swiftcall MultiwayViewController.tipKitStopObservation()()
{
  MultiwayViewController.tipKitStartObservation()();
}

uint64_t MultiwayViewController.tipKitStartObservation()()
{
  OUTLINED_FUNCTION_24_51();
  static TPTipsHelper.taskQueue.getter();
  OUTLINED_FUNCTION_7_0();
  swift_unknownObjectWeakInit();
  swift_retain();
  dispatch thunk of TaskQueue.async(_:)();
  OUTLINED_FUNCTION_43();
  return swift_release_n();
}

uint64_t closure #1 in MultiwayViewController.tipKitStopObservation()(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1[5] = a1;
  v2 = type metadata accessor for TPTipsHelper.Entry.Kind();
  v1[6] = v2;
  v1[7] = *(_QWORD *)(v2 - 8);
  v1[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t closure #1 in MultiwayViewController.tipKitStopObservation()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 40) + 16;
  OUTLINED_FUNCTION_1();
  v2 = MEMORY[0x1C3B752C0](v1);
  *(_QWORD *)(v0 + 72) = v2;
  if (v2)
  {
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 80) = v3;
    OUTLINED_FUNCTION_30_9(v3, (uint64_t)closure #1 in MultiwayViewController.tipKitStopObservation());
    return MultiwayViewController.dismissPopover()();
  }
  else
  {
    OUTLINED_FUNCTION_26_49();
    return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v0 + 8));
  }
}

{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;

  v4 = *v0;
  v1 = v4;
  OUTLINED_FUNCTION_11_40(&v4);
  OUTLINED_FUNCTION_24_51();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 88) = v2;
  OUTLINED_FUNCTION_30_9(v2, (uint64_t)closure #1 in MultiwayViewController.tipKitStopObservation());
  return static TPTipsHelper.shared.getter();
}

{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_45_2();
  *(_QWORD *)(v1 + 96) = v0;
  OUTLINED_FUNCTION_37_20();
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_4_4();
}

{
  _QWORD *v0;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[7] + 104))(v0[8], *MEMORY[0x1E0DBCF80], v0[6]);
  v0[13] = type metadata accessor for MainActor();
  v0[14] = static MainActor.shared.getter();
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_56_0();
  OUTLINED_FUNCTION_63_1();
  return OUTLINED_FUNCTION_0_6();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 56);
  swift_release();
  dispatch thunk of TPTipsHelper.removeEntries(_:)();

  OUTLINED_FUNCTION_4_41(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_0_6();
}

{
  uint64_t v0;

  *(_QWORD *)(v0 + 120) = static MainActor.shared.getter();
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_56_0();
  OUTLINED_FUNCTION_63_1();
  return OUTLINED_FUNCTION_0_6();
}

{
  uint64_t v0;

  swift_release();
  if (one-time initialization token for tipUserInfo != -1)
    swift_once();
  type metadata accessor for MultiwayViewController.FaceTimeLinkTipUserInfo();
  v0 = OUTLINED_FUNCTION_7_0();
  *(_QWORD *)(v0 + 16) = 0;
  static MultiwayViewController.tipUserInfo = (_UNKNOWN *)v0;
  swift_release();
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_4_4();
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_26_49();
  return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t partial apply for closure #1 in MultiwayViewController.tipKitStopObservation()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = partial apply for closure #2 in CallScreeningEndingState.enteredState();
  return closure #1 in MultiwayViewController.tipKitStopObservation()(v0);
}

uint64_t MultiwayViewController.dismissPopover()()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[2] = type metadata accessor for MainActor();
  v0[3] = static MainActor.shared.getter();
  v1 = (_QWORD *)swift_task_alloc();
  v0[4] = v1;
  *v1 = v0;
  v1[1] = MultiwayViewController.dismissPopover();
  return MultiwayViewController.tipPopoverController.getter();
}

{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_45_2();
  *(_QWORD *)(v1 + 40) = v0;
  OUTLINED_FUNCTION_37_20();
  dispatch thunk of Actor.unownedExecutor.getter();
  OUTLINED_FUNCTION_56_0();
  OUTLINED_FUNCTION_63_1();
  return OUTLINED_FUNCTION_0_6();
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  _QWORD *v3;
  void *v4;

  v1 = *(_QWORD *)(v0 + 40);
  swift_release();
  if (v1)
  {
    v2 = *(void **)(v0 + 40);
    objc_msgSend(v2, sel_dismissViewControllerAnimated_completion_, 1, 0);
    if (one-time initialization token for tipUserInfo != -1)
      swift_once();
    v3 = static MultiwayViewController.tipUserInfo;
    swift_retain();

    v4 = (void *)v3[2];
    v3[2] = 0;
    swift_release();

  }
  return OUTLINED_FUNCTION_1_8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t specialized closure #1 in MultiwayViewController.observeTip<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5[75] = a5;
  v5[74] = a4;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Tips.Status?);
  v5[76] = swift_task_alloc();
  v6 = type metadata accessor for Tips.Status();
  v5[77] = v6;
  v5[78] = *(_QWORD *)(v6 - 8);
  v5[79] = swift_task_alloc();
  v5[80] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AsyncStream<Tips.Status>);
  v5[81] = swift_task_alloc();
  v5[82] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncStream<Tips.Status>.Iterator);
  v5[83] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AsyncMapSequence<AsyncStream<Tips.Status>, Bool>);
  v5[84] = v7;
  v5[85] = *(_QWORD *)(v7 - 8);
  v5[86] = swift_task_alloc();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncMapSequence<AsyncStream<Tips.Status>, Bool>.Iterator);
  v5[87] = v8;
  v5[88] = *(_QWORD *)(v8 - 8);
  v5[89] = swift_task_alloc();
  v5[90] = swift_task_alloc();
  v5[91] = type metadata accessor for MainActor();
  v5[92] = static MainActor.shared.getter();
  v5[93] = dispatch thunk of Actor.unownedExecutor.getter();
  v5[94] = v9;
  return swift_task_switch();
}

uint64_t specialized closure #1 in MultiwayViewController.observeTip<A>(_:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = v0[86];
  v2 = v0[85];
  v3 = v0[84];
  v0[95] = OUTLINED_FUNCTION_25_48();
  v0[96] = lazy protocol witness table accessor for type FaceInFrameTip and conformance FaceInFrameTip();
  Tip.shouldDisplayUpdates.getter();
  AsyncMapSequence.base.getter();
  lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>((unint64_t *)&lazy protocol witness table cache variable for type AsyncStream<Tips.Status> and conformance AsyncStream<A>, (uint64_t *)&demangling cache variable for type metadata for AsyncStream<Tips.Status>, MEMORY[0x1E0DF0848]);
  dispatch thunk of AsyncSequence.makeAsyncIterator()();
  AsyncMapSequence.Iterator.transform.getter();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  AsyncMapSequence.Iterator.init(_:transform:)();
  OUTLINED_FUNCTION_1();
  v0[97] = *(_QWORD *)(MEMORY[0x1E0DC4FF8] + 8);
  v4 = OUTLINED_FUNCTION_27_48();
  v0[98] = v4;
  if (v4)
  {
    OUTLINED_FUNCTION_23_59();
    v5 = dispatch thunk of Actor.unownedExecutor.getter();
    v7 = v6;
  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  v0[100] = v7;
  v0[99] = v5;
  return swift_task_switch();
}

{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 808) = AsyncMapSequence.Iterator.baseIterator.modify();
  lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type AsyncStream<Tips.Status>.Iterator and conformance AsyncStream<A>.Iterator, &demangling cache variable for type metadata for AsyncStream<Tips.Status>.Iterator, MEMORY[0x1E0DF0830]);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 816) = v1;
  *v1 = v0;
  v1[1] = specialized closure #1 in MultiwayViewController.observeTip<A>(_:);
  return _sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;

  v2 = *v1;
  v4 = *v1;
  OUTLINED_FUNCTION_11_40(&v4);
  if (!v0)
    (*(void (**)(uint64_t, _QWORD))(v2 + 808))(v2 + 488, 0);
  return OUTLINED_FUNCTION_0_6();
}

{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  _QWORD *v11;
  int *v12;

  v1 = v0[77];
  v2 = v0[76];
  if (__swift_getEnumTagSinglePayload(v2, 1, v1) == 1)
  {
    outlined destroy of Tips.Status?(v2);
    swift_release();
    return swift_task_switch();
  }
  else
  {
    v4 = v0[90];
    v5 = v0[89];
    v6 = v0[88];
    v7 = v0[87];
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v0[78] + 32))(v0[79], v2, v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5, v4, v7);
    v8 = (int *)AsyncMapSequence.Iterator.transform.getter();
    v0[103] = v9;
    v10 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v0[104] = v10;
    v10(v5, v7);
    v12 = (int *)((char *)v8 + *v8);
    v11 = (_QWORD *)swift_task_alloc();
    v0[105] = v11;
    *v11 = v0;
    v11[1] = specialized closure #1 in MultiwayViewController.observeTip<A>(_:);
    return ((uint64_t (*)(_QWORD *, _QWORD))v12)(v0 + 111, v0[79]);
  }
}

{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 808))(v0 + 488, 1);
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v1 = *v0;
  v4 = v1;
  v2 = *(_QWORD *)(v1 + 624);
  OUTLINED_FUNCTION_11_40(&v4);
  OUTLINED_FUNCTION_43();
  *(_BYTE *)(v1 + 889) = *(_BYTE *)(v1 + 888);
  OUTLINED_FUNCTION_4_41(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  return swift_task_switch();
}

{
  swift_release();
  return OUTLINED_FUNCTION_4_4();
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  _QWORD *v8;
  void *v9;
  id v10;
  _QWORD *v11;

  v1 = MEMORY[0x1C3B752C0](*(_QWORD *)(v0 + 600) + 16);
  *(_QWORD *)(v0 + 848) = v1;
  if (!v1)
  {
    OUTLINED_FUNCTION_10_90();
    OUTLINED_FUNCTION_43();
    goto LABEL_6;
  }
  v2 = (void *)v1;
  if ((*(_BYTE *)(v0 + 889) & 1) != 0)
  {
    v3 = v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
    OUTLINED_FUNCTION_1();
    outlined init with take of MultiwayViewController.ViewContent?(v3, v0 + 16);
    outlined init with take of MultiwayViewController.ViewContent?(v0 + 16, v0 + 232);
    if (getEnumTag for TapInteraction.EventType((uint64_t *)(v0 + 232)) == 1)
    {
      v4 = *(void (**)(uint64_t, uint64_t))(v0 + 832);
      v5 = *(_QWORD *)(v0 + 720);
      v6 = *(_QWORD *)(v0 + 696);
      swift_release();

      v4(v5, v6);
LABEL_6:
      OUTLINED_FUNCTION_3_106();
      OUTLINED_FUNCTION_29_0();
      OUTLINED_FUNCTION_12();
      OUTLINED_FUNCTION_81_0();
      OUTLINED_FUNCTION_625();
      OUTLINED_FUNCTION_633();
      OUTLINED_FUNCTION_575();
      return OUTLINED_FUNCTION_1_8(*(uint64_t (**)(void))(v0 + 8));
    }
    v9 = *(void **)(v3 + 56);
    *(_QWORD *)(v0 + 864) = v9;
    v10 = v9;
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 872) = v11;
    OUTLINED_FUNCTION_30_9(v11, (uint64_t)specialized closure #1 in MultiwayViewController.observeTip<A>(_:));
    return MultiwayViewController.tipPopoverController.getter();
  }
  else
  {
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 856) = v8;
    OUTLINED_FUNCTION_30_9(v8, (uint64_t)specialized closure #1 in MultiwayViewController.observeTip<A>(_:));
    return MultiwayViewController.dismissPopover()();
  }
}

{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 704) + 8))(*(_QWORD *)(v0 + 720), *(_QWORD *)(v0 + 696));
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_3_106();
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_81_0();
  OUTLINED_FUNCTION_625();
  OUTLINED_FUNCTION_633();
  OUTLINED_FUNCTION_575();
  return OUTLINED_FUNCTION_1_8(*(uint64_t (**)(void))(v0 + 8));
}

{
  _QWORD *v0;

  OUTLINED_FUNCTION_15_4();
  OUTLINED_FUNCTION_11_40(v0);
  return OUTLINED_FUNCTION_4_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = OUTLINED_FUNCTION_27_48();
  *(_QWORD *)(v0 + 784) = v1;
  if (v1)
  {
    OUTLINED_FUNCTION_23_59();
    v2 = dispatch thunk of Actor.unownedExecutor.getter();
    v4 = v3;
  }
  else
  {
    v2 = 0;
    v4 = 0;
  }
  *(_QWORD *)(v0 + 800) = v4;
  *(_QWORD *)(v0 + 792) = v2;
  return OUTLINED_FUNCTION_4_4();
}

{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_15_4();
  *(_QWORD *)(v0 + 880) = v1;
  OUTLINED_FUNCTION_37_20();
  return OUTLINED_FUNCTION_4_4();
}

id specialized closure #1 in MultiwayViewController.observeTip<A>(_:)()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  char *v4;
  void *v5;
  char *v6;
  void *v7;
  void *v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  id result;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *boxed_opaque_existential_1;
  id v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  id v23;
  void *v24;
  double v25;
  double v26;
  CGFloat v27;
  double v28;
  CGFloat v29;
  double v30;
  CGFloat v31;
  double v32;
  CGFloat v33;
  uint64_t v34;
  void *v35;
  void *v36;
  uint64_t v37;
  Class isa;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  CGRect v49;

  v1 = *(void **)(v0 + 880);

  if (v1)
  {
    v2 = *(void **)(v0 + 864);
    v3 = *(void **)(v0 + 848);
    OUTLINED_FUNCTION_10_90();

    OUTLINED_FUNCTION_43();
LABEL_6:
    OUTLINED_FUNCTION_3_106();
    OUTLINED_FUNCTION_29_0();
    OUTLINED_FUNCTION_12();
    OUTLINED_FUNCTION_81_0();
    OUTLINED_FUNCTION_625();
    OUTLINED_FUNCTION_633();
    OUTLINED_FUNCTION_575();
    return (id)OUTLINED_FUNCTION_1_8(*(uint64_t (**)(void))(v0 + 8));
  }
  MultiwayViewController.constraintController.getter();
  if (!v4
    || (v5 = v4,
        v6 = &v4[OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState],
        OUTLINED_FUNCTION_1(),
        LOBYTE(v6) = *v6,
        v5,
        (v6 & 0xFE) == 0x80))
  {
    v7 = *(void **)(v0 + 864);
    v8 = *(void **)(v0 + 848);
    v9 = *(void (**)(uint64_t, uint64_t))(v0 + 832);
    v10 = *(_QWORD *)(v0 + 720);
    v11 = *(_QWORD *)(v0 + 696);
    swift_release();

    v9(v10, v11);
    goto LABEL_6;
  }
  v13 = *(void **)(v0 + 864);
  v14 = *(_QWORD *)(v0 + 768);
  v15 = *(_QWORD *)(v0 + 760);
  v16 = *(_QWORD *)(v0 + 592);
  type metadata accessor for TipUIPopoverViewController();
  *(_QWORD *)(v0 + 472) = v15;
  *(_QWORD *)(v0 + 480) = v14;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 448));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(boxed_opaque_existential_1, v16, v15);
  v18 = v13;
  v19 = (void *)TipUIPopoverViewController.__allocating_init(_:sourceItem:actionHandler:)();
  v20 = (void *)TipUIPopoverViewController.popoverPresentationController.getter();
  if (v20)
  {
    v21 = v20;
    objc_msgSend(v20, sel_setSourceItem_, *(_QWORD *)(v0 + 864));

  }
  v22 = *(void **)(v0 + 848);
  v23 = v19;
  result = objc_msgSend(v22, sel_view);
  if (!result)
  {
    __break(1u);
    goto LABEL_22;
  }
  v24 = result;
  v25 = *(double *)(v0 + 776);
  objc_msgSend(result, sel_bounds);
  v27 = v26;
  v29 = v28;
  v31 = v30;
  v33 = v32;

  v49.origin.x = v27;
  v49.origin.y = v29;
  v49.size.width = v31;
  v49.size.height = v33;
  objc_msgSend(v23, sel_setPreferredContentSize_, CGRectGetWidth(v49), v25);

  v34 = TipUIPopoverViewController.popoverPresentationController.getter();
  if (v34)
  {
    v35 = (void *)v34;
    v36 = *(void **)(v0 + 848);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    v37 = swift_allocObject();
    *(_OWORD *)(v37 + 16) = xmmword_1BD6443F0;
    result = objc_msgSend(v36, sel_view);
    if (result)
    {
      *(_QWORD *)(v37 + 32) = result;
      specialized Array._endMutation()();
      type metadata accessor for UIView();
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      objc_msgSend(v35, sel_setPassthroughViews_, isa);

      goto LABEL_13;
    }
LABEL_22:
    __break(1u);
    return result;
  }
LABEL_13:
  v39 = (void *)TipUIPopoverViewController.popoverPresentationController.getter();
  if (v39)
  {
    v40 = v39;
    objc_msgSend(v39, sel_setPermittedArrowDirections_, 2);

  }
  if (one-time initialization token for tipUserInfo != -1)
    swift_once();
  v41 = *(void **)(v0 + 864);
  v42 = *(void **)(v0 + 848);
  v43 = (void *)*((_QWORD *)static MultiwayViewController.tipUserInfo + 2);
  *((_QWORD *)static MultiwayViewController.tipUserInfo + 2) = v23;
  v44 = v23;

  objc_msgSend(v42, sel_presentViewController_animated_completion_, v44, 1, 0);
  v45 = OUTLINED_FUNCTION_27_48();
  *(_QWORD *)(v0 + 784) = v45;
  if (v45)
  {
    OUTLINED_FUNCTION_23_59();
    v46 = dispatch thunk of Actor.unownedExecutor.getter();
    v48 = v47;
  }
  else
  {
    v46 = 0;
    v48 = 0;
  }
  *(_QWORD *)(v0 + 800) = v48;
  *(_QWORD *)(v0 + 792) = v46;
  return (id)OUTLINED_FUNCTION_0_6();
}

uint64_t MultiwayViewController.tipPopoverController.getter()
{
  uint64_t v0;

  type metadata accessor for MainActor();
  *(_QWORD *)(v0 + 16) = static MainActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  return swift_task_switch();
}

{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t (*v4)(void *);

  swift_release();
  if (one-time initialization token for tipUserInfo != -1)
    swift_once();
  v1 = (void *)*((_QWORD *)static MultiwayViewController.tipUserInfo + 2);
  v4 = *(uint64_t (**)(void *))(v0 + 8);
  v2 = v1;
  return v4(v1);
}

uint64_t MultiwayViewController.FaceTimeLinkTipUserInfo.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MultiwayViewController.FaceTimeLinkTipUserInfo()
{
  return objc_opt_self();
}

uint64_t sub_1BD36C070()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = OUTLINED_FUNCTION_25_48();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for specialized closure #1 in MultiwayViewController.observeTip<A>(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(OUTLINED_FUNCTION_25_48() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = partial apply for closure #1 in SyncedScreeningAlphaGradientView.gradient(for:);
  return specialized closure #1 in MultiwayViewController.observeTip<A>(_:)(a1, v6, v7, v8, v9);
}

unint64_t lazy protocol witness table accessor for type FaceInFrameTip and conformance FaceInFrameTip()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type FaceInFrameTip and conformance FaceInFrameTip;
  if (!lazy protocol witness table cache variable for type FaceInFrameTip and conformance FaceInFrameTip)
  {
    v1 = type metadata accessor for FaceInFrameTip();
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0DBCFD8], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type FaceInFrameTip and conformance FaceInFrameTip);
  }
  return result;
}

uint64_t outlined destroy of Tips.Status?(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Tips.Status?);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t outlined init with take of MultiwayViewController.ViewContent?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

Swift::Void __swiftcall CallControlsStatusViewModel.startStatusObservation()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_41();
  v15 = v3;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.CombineLatest4<AnyPublisher<TUCallStatus, Never>, AnyPublisher<InCallControlsMode, Never>, AnyPublisher<TUConversationState, Never>, AnyPublisher<Bool, Never>>);
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_41();
  v14 = v4;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.ReceiveOn<Publishers.CombineLatest4<AnyPublisher<TUCallStatus, Never>, AnyPublisher<InCallControlsMode, Never>, AnyPublisher<TUConversationState, Never>, AnyPublisher<Bool, Never>>, NSRunLoop>);
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_41();
  v16 = v5;
  v6 = *(_QWORD *)(v0 + 64);
  OUTLINED_FUNCTION_1_5();
  OUTLINED_FUNCTION_7_16(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 48));
  v7 = *(_QWORD *)(v0 + 64);
  OUTLINED_FUNCTION_1_5();
  OUTLINED_FUNCTION_7_16(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 64));
  v8 = *(_QWORD *)(v0 + 56);
  v9 = *(_QWORD *)(v0 + 64);
  OUTLINED_FUNCTION_1_5();
  (*(void (**)(uint64_t, uint64_t))(v9 + 56))(v8, v9);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyPublisher<TUCallStatus, Never>);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyPublisher<InCallControlsMode, Never>);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyPublisher<TUConversationState, Never>);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyPublisher<Bool, Never>);
  OUTLINED_FUNCTION_16_69(&lazy protocol witness table cache variable for type AnyPublisher<TUCallStatus, Never> and conformance AnyPublisher<A, B>, &demangling cache variable for type metadata for AnyPublisher<TUCallStatus, Never>);
  OUTLINED_FUNCTION_16_69((uint64_t *)&lazy protocol witness table cache variable for type AnyPublisher<InCallControlsMode, Never> and conformance AnyPublisher<A, B>, &demangling cache variable for type metadata for AnyPublisher<InCallControlsMode, Never>);
  OUTLINED_FUNCTION_16_69(&lazy protocol witness table cache variable for type AnyPublisher<TUConversationState, Never> and conformance AnyPublisher<A, B>, &demangling cache variable for type metadata for AnyPublisher<TUConversationState, Never>);
  OUTLINED_FUNCTION_16_69(&lazy protocol witness table cache variable for type AnyPublisher<Bool, Never> and conformance AnyPublisher<A, B>, &demangling cache variable for type metadata for AnyPublisher<Bool, Never>);
  Publisher.combineLatest<A, B, C>(_:_:_:)();
  swift_release();
  swift_release();
  swift_release();
  v21 = objc_msgSend((id)objc_opt_self(), sel_mainRunLoop);
  v10 = type metadata accessor for NSRunLoop.SchedulerOptions();
  __swift_storeEnumTagSinglePayload(v15, 1, 1, v10);
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSRunLoop);
  lazy protocol witness table accessor for type Published<Bool>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type Publishers.CombineLatest4<AnyPublisher<TUCallStatus, Never>, AnyPublisher<InCallControlsMode, Never>, AnyPublisher<TUConversationState, Never>, AnyPublisher<Bool, Never>> and conformance Publishers.CombineLatest4<A, B, C, D>, &demangling cache variable for type metadata for Publishers.CombineLatest4<AnyPublisher<TUCallStatus, Never>, AnyPublisher<InCallControlsMode, Never>, AnyPublisher<TUConversationState, Never>, AnyPublisher<Bool, Never>>);
  _sSo9NSRunLoopCAB7Combine9Scheduler10FoundationWlTm_1(&lazy protocol witness table cache variable for type NSRunLoop and conformance NSRunLoop, (unint64_t *)&lazy cache variable for type metadata for NSRunLoop);
  Publisher.receive<A>(on:options:)();
  outlined destroy of NSRunLoop.SchedulerOptions?(v15);

  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v14, v17);
  v11 = OUTLINED_FUNCTION_15();
  swift_weakInit();
  v12 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v12 + 16) = partial apply for closure #1 in CallControlsStatusViewModel.startStatusObservation();
  *(_QWORD *)(v12 + 24) = v11;
  lazy protocol witness table accessor for type Published<Bool>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type Publishers.ReceiveOn<Publishers.CombineLatest4<AnyPublisher<TUCallStatus, Never>, AnyPublisher<InCallControlsMode, Never>, AnyPublisher<TUConversationState, Never>, AnyPublisher<Bool, Never>>, NSRunLoop> and conformance Publishers.ReceiveOn<A, B>, &demangling cache variable for type metadata for Publishers.ReceiveOn<Publishers.CombineLatest4<AnyPublisher<TUCallStatus, Never>, AnyPublisher<InCallControlsMode, Never>, AnyPublisher<TUConversationState, Never>, AnyPublisher<Bool, Never>>, NSRunLoop>);
  v13 = Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v16, v19);
  *(_QWORD *)(v1 + 80) = v13;
  swift_release();
}

uint64_t sub_1BD36C628()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

void CallControlsStatusViewModel.__allocating_init(service:isScreenLocked:)(__int128 *a1, uint64_t a2)
{
  OUTLINED_FUNCTION_15();
  CallControlsStatusViewModel.init(service:isScreenLocked:)(a1, a2);
  OUTLINED_FUNCTION_18();
}

uint64_t CallControlsStatusViewModel.statusView.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_1();
  return MEMORY[0x1C3B752C0](v0 + 16);
}

uint64_t CallControlsStatusViewModel.statusView.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 24) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*CallControlsStatusViewModel.statusView.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess();
  v4 = MEMORY[0x1C3B752C0](v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v3[3] = v4;
  v3[4] = v5;
  return PreCallStatusViewModel.statusView.modify;
}

void CallControlsStatusViewModel.init(service:isScreenLocked:)(__int128 *a1, uint64_t a2)
{
  _QWORD *v2;

  v2[3] = 0;
  swift_unknownObjectWeakInit();
  v2[10] = 0;
  outlined init with take of Notice(a1, (uint64_t)(v2 + 4));
  v2[9] = a2;
  OUTLINED_FUNCTION_18();
}

uint64_t closure #1 in CallControlsStatusViewModel.startStatusObservation()(int a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    if (one-time initialization token for sidebar != -1)
      swift_once();
    v9 = type metadata accessor for Logger();
    __swift_project_value_buffer(v9, (uint64_t)&static Logger.sidebar);
    v10 = Logger.logObject.getter();
    v11 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = swift_slowAlloc();
      v13 = swift_slowAlloc();
      v20 = v13;
      *(_DWORD *)v12 = 136315906;
      type metadata accessor for TUCallStatus(0);
      v14 = String.init<A>(reflecting:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v14, v15, &v20);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v12 + 12) = 2080;
      InCallControlsMode.debugDescription.getter(a2);
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v16, v17, &v20);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v12 + 22) = 2080;
      type metadata accessor for TUConversationState(0);
      v18 = String.init<A>(reflecting:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v18, v19, &v20);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v12 + 32) = 1024;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl(&dword_1BD004000, v10, v11, "CallControlsStatusViewModel: callStatus: %s controlMode: %s conversationState: %s isScreenLocked: %{BOOL}d", (uint8_t *)v12, 0x26u);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v13, -1, -1);
      MEMORY[0x1C3B751B8](v12, -1, -1);
    }

    CallControlsStatusViewModel.updateStatus(callStatus:mode:conversationState:isScreenLocked:)(a1, a2, a3, a4 & 1);
    return swift_release();
  }
  return result;
}

uint64_t partial apply for closure #1 in CallControlsStatusViewModel.startStatusObservation()(int a1, uint64_t a2, uint64_t a3, char a4)
{
  return closure #1 in CallControlsStatusViewModel.startStatusObservation()(a1, a2, a3, a4);
}

void CallControlsStatusViewModel.updateStatus(callStatus:mode:conversationState:isScreenLocked:)(int a1, uint64_t a2, uint64_t a3, char a4)
{
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  void *v20;
  uint64_t v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  uint64_t v33;
  os_log_type_t v34;
  uint8_t *v35;
  const char *v36;
  uint64_t v37;
  os_log_type_t v38;
  uint64_t v39;
  void *v40;
  unint64_t v41;
  char v42;
  void *v43;
  unint64_t v44;
  char v45;
  id v46;
  uint64_t v47;
  id v48;
  id v49;
  void *v50;
  void *v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  Swift::String v59;
  uint64_t v60;
  Swift::String v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  uint64_t v74;

  if (a1 == 1 && a3 == 3)
  {
    if (one-time initialization token for sidebar != -1)
      swift_once();
    v33 = OUTLINED_FUNCTION_17_2();
    __swift_project_value_buffer(v33, (uint64_t)&static Logger.sidebar);
    OUTLINED_FUNCTION_11_17();
    v34 = OUTLINED_FUNCTION_12_0();
    if (OUTLINED_FUNCTION_5_3(v34))
    {
      v35 = (uint8_t *)OUTLINED_FUNCTION_7_8();
      *(_WORD *)v35 = 0;
      v36 = "CallControlsStatusViewModel: hide status after joined";
      goto LABEL_24;
    }
  }
  else
  {
    OUTLINED_FUNCTION_17_60();
    v11 = OUTLINED_FUNCTION_10_91(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 136));
    if (v11)
    {
      v73 = (id)v11;
      OUTLINED_FUNCTION_17_60();
      v12 = OUTLINED_FUNCTION_10_91(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
      if (v12)
      {
        v20 = (void *)v12;
        if ((a1 - 5) < 2)
        {
          if (one-time initialization token for sidebar != -1)
            swift_once();
          v21 = OUTLINED_FUNCTION_17_2();
          __swift_project_value_buffer(v21, (uint64_t)&static Logger.sidebar);
          OUTLINED_FUNCTION_11_17();
          v22 = OUTLINED_FUNCTION_12_0();
          if (os_log_type_enabled(v4, v22))
          {
            v23 = (uint8_t *)OUTLINED_FUNCTION_7_8();
            *(_WORD *)v23 = 0;
            _os_log_impl(&dword_1BD004000, v4, v22, "CallControlsStatusViewModel: hide status when call is disconnected", v23, 2u);
            OUTLINED_FUNCTION_60();
          }

          OUTLINED_FUNCTION_1();
          if (MEMORY[0x1C3B752C0](&v4[2]))
          {
            v24 = OUTLINED_FUNCTION_4_110();
            OUTLINED_FUNCTION_6_86(v24);
            OUTLINED_FUNCTION_10();
          }

          OUTLINED_FUNCTION_24_52(v25, v26, v27, v28, v29, v30, v31, v32, v63, v64, (uint64_t)v65, v66, v67, v68, v69, v70, v71, v72, v73);
          return;
        }
        if ((a2 & 0xE0) != 0x40)
        {
          TUConversation.participantListDisplayName.getter(v12);
          v49 = objc_msgSend(v20, sel_remoteMembers);
          _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
          _sSo9NSRunLoopCAB7Combine9Scheduler10FoundationWlTm_1(&lazy protocol witness table cache variable for type TUConversationMember and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
          static Set._unconditionallyBridgeFromObjectiveC(_:)();

          specialized Collection.first.getter();
          v51 = v50;
          v52 = swift_bridgeObjectRelease();
          if (v51)
          {
            v53 = objc_msgSend(v51, sel_handle);

            if (v53)
            {
              outlined bridged method (pb) of @objc TUHandle.siriDisplayName.getter(v53);
              if (v55)
              {
                v56 = v54;
                v57 = v55;
                v58 = (uint64_t)objc_msgSend(v53, sel_shouldHideContactWithLockState_, a4 & 1);
                if ((v58 & 1) != 0)
                {
                  OUTLINED_FUNCTION_17_8(v58, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
                  v59._countAndFlagsBits = v56;
                  v59._object = v57;
                  NSMutableAttributedString.__allocating_init(string:)(v59);
                }

                v52 = OUTLINED_FUNCTION_27();
              }
              else
              {

              }
            }
          }
          v60 = OUTLINED_FUNCTION_17_8(v52, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
          v61._countAndFlagsBits = TUConversation.participantListDisplayName.getter(v60);
          NSMutableAttributedString.__allocating_init(string:)(v61);
        }
        type metadata accessor for ConversationControlsRecipeGenerator();
        v40 = (void *)static ConversationControlsRecipeGenerator.unauthorizedParticipantAssets(controlsMode:conversation:)(a2, (uint64_t)v20);
        if (!v40)
        {
LABEL_45:
          OUTLINED_FUNCTION_1();
          OUTLINED_FUNCTION_117_0();
        }
        v43 = v40;
        v44 = v41;
        v45 = v42;
        v46 = v40;
        if (v44 >> 62)
        {
          swift_bridgeObjectRetain();
          if (_CocoaArrayWrapper.endIndex.getter())
          {
LABEL_32:
            specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v44 & 0xC000000000000001) == 0, v44);
            if ((v44 & 0xC000000000000001) != 0)
              MEMORY[0x1C3B73D18](0, v44);
            else
              v48 = *(id *)(v44 + 32);
          }
        }
        else
        {
          v47 = *(_QWORD *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (v47)
            goto LABEL_32;
        }
        v62 = OUTLINED_FUNCTION_30_4();
        OUTLINED_FUNCTION_17_8(v62, (unint64_t *)&lazy cache variable for type metadata for UIImage);
        SymbolImageDescribers.ConversationControls.symbolImageDescription.getter(v45);
        static UIImage.symbolImage(for:)((uint64_t)&v74);
        outlined release of SymbolImageDescription((uint64_t)&v74);
        outlined consume of (title: NSAttributedString, subtitles: [NSAttributedString], symbol: SymbolImageDescribers.ConversationControls)?(v43);
        goto LABEL_45;
      }
      OUTLINED_FUNCTION_24_52(0, v13, v14, v15, v16, v17, v18, v19, v63, v64, (uint64_t)v65, v66, v67, v68, v69, v70, v71, v72, v73);
    }
    if (one-time initialization token for sidebar != -1)
      swift_once();
    v37 = OUTLINED_FUNCTION_17_2();
    __swift_project_value_buffer(v37, (uint64_t)&static Logger.sidebar);
    OUTLINED_FUNCTION_11_17();
    v38 = OUTLINED_FUNCTION_12_0();
    if (OUTLINED_FUNCTION_5_3(v38))
    {
      v35 = (uint8_t *)OUTLINED_FUNCTION_7_8();
      *(_WORD *)v35 = 0;
      v36 = "CallControlsStatusViewModel: hide status because there is no conversation";
LABEL_24:
      _os_log_impl(&dword_1BD004000, v4, v5, v36, v35, 2u);
      OUTLINED_FUNCTION_60();
    }
  }

  OUTLINED_FUNCTION_1();
  if (MEMORY[0x1C3B752C0](&v4[2]))
  {
    v39 = OUTLINED_FUNCTION_4_110();
    OUTLINED_FUNCTION_6_86(v39);
    OUTLINED_FUNCTION_10();
  }
}

uint64_t sub_1BD36D484()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t CallControlsStatusViewModel.deinit()
{
  uint64_t v0;

  outlined destroy of weak ConversationControlsCountdownJoinButtonDelegate?(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  swift_release();
  swift_release();
  return v0;
}

uint64_t CallControlsStatusViewModel.__deallocating_deinit()
{
  CallControlsStatusViewModel.deinit();
  return swift_deallocClassInstance();
}

void *outlined consume of (title: NSAttributedString, subtitles: [NSAttributedString], symbol: SymbolImageDescribers.ConversationControls)?(void *result)
{
  if (result)
  {

    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t dispatch thunk of CallControlsStatusViewing.isHidden.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of CallControlsStatusViewing.isHidden.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of CallControlsStatusViewing.isHidden.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of CallControlsStatusViewing.set(title:subtitle:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of CallControlsStatusViewing.set(leadingView:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t type metadata accessor for CallControlsStatusViewModel()
{
  return objc_opt_self();
}

uint64_t method lookup function for CallControlsStatusViewModel()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CallControlsStatusViewModel.__allocating_init(service:isScreenLocked:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

void LinkDetailViewController.__allocating_init(viewModel:linkController:detailControllerFactory:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  id v7;

  v7 = objc_allocWithZone(v3);
  LinkDetailViewController.init(viewModel:linkController:detailControllerFactory:)(a1, a2, a3);
  OUTLINED_FUNCTION_18();
}

void LinkDetailViewController.Item.hash(into:)()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  Swift::UInt v10;

  v2 = *(_QWORD *)v0;
  v1 = *(_QWORD *)(v0 + 8);
  if (*(_BYTE *)(v0 + 64))
  {
    v4 = *(_QWORD *)(v0 + 16);
    v3 = *(_QWORD *)(v0 + 24);
    v5 = *(_QWORD *)(v0 + 56);
    if (*(_BYTE *)(v0 + 64) == 1)
    {
      OUTLINED_FUNCTION_57(2uLL);
      v6 = (id)v1;
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_35_0();
      swift_bridgeObjectRetain();
      v7 = (id)v2;
      NSObject.hash(into:)();
      if (v1)
      {
        Hasher._combine(_:)(1u);
        v8 = v6;
        NSObject.hash(into:)();

      }
      else
      {
        Hasher._combine(_:)(0);
      }
      swift_bridgeObjectRetain();
      String.hash(into:)();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_35_0();
      String.hash(into:)();
      OUTLINED_FUNCTION_133();
      swift_bridgeObjectRetain();
      String.hash(into:)();
      OUTLINED_FUNCTION_133();
      OUTLINED_FUNCTION_53();

      swift_bridgeObjectRelease_n();
    }
    else
    {
      v9 = *(_QWORD *)(v0 + 32) | *(_QWORD *)(v0 + 40) | *(_QWORD *)(v0 + 48);
      if (v4 | v1 | v2 | v3 | v9 | v5)
      {
        if (v2 != 1 || v4 | v1 | v3 | v9 | v5)
          v10 = 4;
        else
          v10 = 3;
      }
      else
      {
        v10 = 0;
      }
      OUTLINED_FUNCTION_57(v10);
    }
  }
  else
  {
    OUTLINED_FUNCTION_57(1uLL);
    String.hash(into:)();
  }
}

uint64_t static LinkDetailViewController.Item.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  uint64_t v30;
  id v31;
  id v32;
  char v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  id v91;
  id v92;
  id v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char v130;
  unint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char v139;

  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  v12 = *(_QWORD *)(a1 + 32);
  v11 = *(_QWORD *)(a1 + 40);
  v13 = *(_QWORD *)(a1 + 48);
  v14 = *(_QWORD *)(a1 + 56);
  v15 = *(unsigned __int8 *)(a1 + 64);
  v17 = *(_QWORD *)a2;
  v16 = *(_QWORD *)(a2 + 8);
  v19 = *(_QWORD *)(a2 + 16);
  v18 = *(_QWORD *)(a2 + 24);
  v21 = *(_QWORD *)(a2 + 32);
  v20 = *(_QWORD *)(a2 + 40);
  v23 = *(_QWORD *)(a2 + 48);
  v22 = *(_QWORD *)(a2 + 56);
  v24 = *(unsigned __int8 *)(a2 + 64);
  v122 = *(_QWORD *)a1;
  v123 = v8;
  v124 = v10;
  v125 = v9;
  v126 = v12;
  v127 = v11;
  v128 = v13;
  v129 = v14;
  v130 = v15;
  v131 = v17;
  v132 = v16;
  v133 = v19;
  v134 = v18;
  v135 = v21;
  v136 = v20;
  v137 = v23;
  v138 = v22;
  v139 = v24;
  if (v15)
  {
    if (v15 == 1)
    {
      if (v24 == 1)
      {
        v104 = v11;
        v106 = v9;
        v99 = v14;
        v100 = v12;
        v25 = v18;
        v26 = v20;
        v96 = v10;
        v27 = v22;
        v102 = v13;
        v90 = _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSObject);
        OUTLINED_FUNCTION_15_78();
        v28 = (void *)OUTLINED_FUNCTION_5_106();
        outlined copy of LinkDetailViewController.Item(v28, v29, v30, v25, v21, v26, v23, v27, v85);
        OUTLINED_FUNCTION_15_78();
        outlined copy of LinkDetailViewController.Item((id)v7, (void *)v8, v96, v106, v100, v104, v102, v99, v86);
        v93 = (id)v16;
        v98 = v25;
        swift_bridgeObjectRetain();
        v95 = v26;
        swift_bridgeObjectRetain();
        v97 = v27;
        swift_bridgeObjectRetain();
        v31 = (id)v7;
        v32 = (id)v17;
        v91 = (id)v8;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        OUTLINED_FUNCTION_35_0();
        v33 = static NSObject.== infix(_:_:)();

        if ((v33 & 1) != 0)
        {
          v115 = v8;
          v116 = v96;
          v117 = v106;
          v118 = v100;
          v119 = v104;
          v120 = v102;
          v121 = v99;
          v108 = v16;
          v109 = v19;
          v110 = v25;
          v111 = v21;
          v112 = v95;
          v113 = v23;
          v114 = v27;
          v34 = static ParticipantContactDetails.== infix(_:_:)((uint64_t)&v115, (uint64_t)&v108);
          v35 = v34;
          OUTLINED_FUNCTION_8_89(v34, v36, v37, v38, v39, v40, v41, v42, v87, v90, (uint64_t)v91, (uint64_t)v93, v95, v96, v27, v25, v99, v100, v102,
            v104,
            v106,
            v108,
            v109,
            v110,
            v111,
            v112,
            v113,
            v114,
            v115,
            v116,
            v117,
            v118,
            v119,
            v120,
            v121,
            v122);
          OUTLINED_FUNCTION_133();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          OUTLINED_FUNCTION_53();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          return v35 & 1;
        }
        OUTLINED_FUNCTION_133();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

LABEL_32:
        OUTLINED_FUNCTION_8_89((uint64_t)v62, v63, v64, v65, v66, v67, v68, v69, v87, v90, (uint64_t)v91, (uint64_t)v93, v95, v96, v97, v98, v99, v100, v102,
          v104,
          v106,
          v108,
          v109,
          v110,
          v111,
          v112,
          v113,
          v114,
          v115,
          v116,
          v117,
          v118,
          v119,
          v120,
          v121,
          v122);
        v35 = 0;
        return v35 & 1;
      }
      goto LABEL_31;
    }
    v44 = v12 | v11 | v13;
    if (v10 | v8 | v7 | v9 | v44 | v14)
    {
      if (v7 != 1 || v10 | v8 | v9 | v44 | v14)
      {
        if (v24 != 2 || v17 != 2)
          goto LABEL_31;
      }
      else if (v24 != 2 || v17 != 1)
      {
        goto LABEL_31;
      }
      if (v19 | v16 | v18 | v21 | v20 | v23 | v22)
      {
LABEL_31:
        v88 = v24;
        v47 = (void *)OUTLINED_FUNCTION_5_106();
        v49 = v48;
        v51 = v50;
        v52 = v21;
        v54 = v53;
        v56 = v55;
        outlined copy of LinkDetailViewController.Item(v47, v57, v58, v59, v52, v60, v23, v61, v88);
        v62 = outlined copy of LinkDetailViewController.Item((id)v7, (void *)v8, v10, v49, v51, v54, v56, v14, v15);
        goto LABEL_32;
      }
    }
    else if (v24 != 2 || v19 | v16 | v17 | v18 | v21 | v20 | v23 | v22)
    {
      goto LABEL_31;
    }
    OUTLINED_FUNCTION_8_89(a1, a2, a3, v18, a5, v20, a7, v22, v85, v90, (uint64_t)v91, (uint64_t)v93, v95, v96, v97, v98, v99, v100, v102,
      v104,
      v106,
      v108,
      v109,
      v110,
      v111,
      v112,
      v113,
      v114,
      v115,
      v116,
      v117,
      v118,
      v119,
      v120,
      v121,
      v122);
    v35 = 1;
    return v35 & 1;
  }
  if (v24)
    goto LABEL_31;
  v101 = v12;
  v103 = v13;
  v105 = v11;
  v107 = v9;
  if (v7 == v17 && v8 == v16)
  {
    v35 = 1;
  }
  else
  {
    v97 = v22;
    v98 = v18;
    v35 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  v71 = (void *)OUTLINED_FUNCTION_5_106();
  outlined copy of LinkDetailViewController.Item(v71, v72, v73, v74, v21, v75, v23, v76, 0);
  v77 = outlined copy of LinkDetailViewController.Item((id)v7, (void *)v8, v10, v107, v101, v105, v103, v14, 0);
  OUTLINED_FUNCTION_8_89((uint64_t)v77, v78, v79, v80, v81, v82, v83, v84, v89, v90, (uint64_t)v91, (uint64_t)v93, v95, v96, v97, v98, v99, v101, v103,
    v105,
    v107,
    v108,
    v109,
    v110,
    v111,
    v112,
    v113,
    v114,
    v115,
    v116,
    v117,
    v118,
    v119,
    v120,
    v121,
    v122);
  return v35 & 1;
}

Swift::Int LinkDetailViewController.Item.hashValue.getter()
{
  Hasher.init(_seed:)();
  LinkDetailViewController.Item.hash(into:)();
  return Hasher._finalize()();
}

unint64_t LinkDetailViewController.Section.init(rawValue:)(unint64_t result)
{
  if (result >= 4)
    return 4;
  return result;
}

void *static LinkDetailViewController.Section.allCases.getter()
{
  return &outlined read-only object #0 of static LinkDetailViewController.Section.allCases.getter;
}

uint64_t LinkDetailViewController.Section.rawValue.getter(uint64_t result)
{
  return result;
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance LinkDetailViewController.Item()
{
  Hasher.init(_seed:)();
  LinkDetailViewController.Item.hash(into:)();
  return Hasher._finalize()();
}

unint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance LinkDetailViewController.Section@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = LinkDetailViewController.Section.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance LinkDetailViewController.Section@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;

  result = LinkDetailViewController.Section.rawValue.getter(*v1);
  *a1 = result;
  return result;
}

void *protocol witness for static CaseIterable.allCases.getter in conformance LinkDetailViewController.Section@<X0>(_QWORD *a1@<X8>)
{
  void *result;

  result = static LinkDetailViewController.Section.allCases.getter();
  *a1 = result;
  return result;
}

void one-time initialization function for groupSpacing()
{
  static LinkDetailViewController.Layout.groupSpacing = 0xC033000000000000;
}

void LinkDetailViewController.collectionView.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v6;

  v1 = OBJC_IVAR____TtC15ConversationKit24LinkDetailViewController____lazy_storage___collectionView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit24LinkDetailViewController____lazy_storage___collectionView);
  if (!v2)
  {
    v3 = closure #1 in LinkDetailViewController.collectionView.getter(v0);
    v4 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v3;
    v5 = v3;

    v2 = 0;
  }
  v6 = v2;
  OUTLINED_FUNCTION_18();
}

id closure #1 in LinkDetailViewController.collectionView.getter(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  id v7;

  LinkDetailViewController.collectionViewLayout()();
  v3 = v2;
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC35B8]), sel_initWithFrame_collectionViewLayout_, v2, 0.0, 0.0, 0.0, 0.0);

  objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v5 = (void *)objc_opt_self();
  v6 = v4;
  v7 = objc_msgSend(v5, sel_clearColor);
  objc_msgSend(v6, sel_setBackgroundColor_, v7);

  objc_msgSend(v6, sel_setDelegate_, a1);
  return v6;
}

void LinkDetailViewController.collectionViewLayout()()
{
  id v0;
  id v1;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC35D8]), sel_init);
  if (one-time initialization token for groupSpacing != -1)
    swift_once();
  objc_msgSend(v0, sel_setInterSectionSpacing_, *(double *)&static LinkDetailViewController.Layout.groupSpacing);
  v1 = objc_allocWithZone(MEMORY[0x1E0DC35D0]);
  @nonobjc UICollectionViewCompositionalLayout.init(sectionProvider:configuration:)((uint64_t)closure #1 in LinkDetailViewController.collectionViewLayout(), 0, v0);
  OUTLINED_FUNCTION_0();
}

void *closure #1 in LinkDetailViewController.collectionViewLayout()(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  void (*v24)(uint64_t *, _QWORD);
  void *v25;
  void (*v26)(char *, uint64_t);
  void *v27;
  id v28;
  id v29;
  id v30;
  id v31;
  void *v32;
  void *v33;
  id v34;
  uint64_t v35;
  id v36;
  Class isa;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45[4];

  v44 = a2;
  v3 = type metadata accessor for UICollectionLayoutListConfiguration.HeaderMode();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UICollectionLayoutListConfiguration.Appearance();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for UICollectionLayoutListConfiguration();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v39 - v17;
  if (a1)
  {
    v19 = v7;
    v20 = v15;
    (*(void (**)(char *, _QWORD, uint64_t, __n128))(v8 + 104))(v10, *MEMORY[0x1E0DC2878], v19, v16);
    UICollectionLayoutListConfiguration.init(appearance:)();
    (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DC2900], v3);
    UICollectionLayoutListConfiguration.headerMode.setter();
    v21 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
    UICollectionLayoutListConfiguration.backgroundColor.setter();
    v22 = objc_msgSend((id)objc_opt_self(), sel_effectWithStyle_, 18);
    v23 = objc_msgSend((id)objc_opt_self(), sel_effectForBlurEffect_style_, v22, 7);

    v24 = (void (*)(uint64_t *, _QWORD))UICollectionLayoutListConfiguration.separatorConfiguration.modify();
    MEMORY[0x1C3B70D48](v23);
    v24(v45, 0);
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSCollectionLayoutSection);
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v13, v18, v11);
    v25 = (void *)static NSCollectionLayoutSection.list(using:layoutEnvironment:)();
    v26 = *(void (**)(char *, uint64_t))(v20 + 8);
    v26(v13, v11);
  }
  else
  {
    v39 = v8;
    v40 = v7;
    v41 = v4;
    v42 = v3;
    v43 = v15;
    v27 = (void *)objc_opt_self();
    v28 = objc_msgSend(v27, sel_fractionalWidthDimension_, 1.0);
    if (one-time initialization token for estimatedHeight != -1)
      swift_once();
    v29 = objc_msgSend(v27, sel_estimatedDimension_, *(double *)&static LinkDetailHeaderView.Layout.estimatedHeight);
    v30 = objc_msgSend((id)objc_opt_self(), sel_sizeWithWidthDimension_heightDimension_, v28, v29);

    _sSo8NSObjectCMaTm_0(0, &lazy cache variable for type metadata for NSCollectionLayoutBoundarySupplementaryItem);
    v31 = v30;
    @nonobjc NSCollectionLayoutBoundarySupplementaryItem.__allocating_init(layoutSize:elementKind:alignment:)(v31, 0xD00000000000001FLL, 0x80000001BD675930, 1);
    v33 = v32;
    (*(void (**)(char *, _QWORD, uint64_t))(v39 + 104))(v10, *MEMORY[0x1E0DC2878], v40);
    UICollectionLayoutListConfiguration.init(appearance:)();
    (*(void (**)(char *, _QWORD, uint64_t))(v41 + 104))(v6, *MEMORY[0x1E0DC28E8], v42);
    UICollectionLayoutListConfiguration.headerMode.setter();
    v34 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
    UICollectionLayoutListConfiguration.backgroundColor.setter();
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSCollectionLayoutSection);
    v25 = (void *)static NSCollectionLayoutSection.list(using:layoutEnvironment:)();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_1BD6443F0;
    *(_QWORD *)(v35 + 32) = v33;
    v45[0] = v35;
    specialized Array._endMutation()();
    v36 = v33;
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    objc_msgSend(v25, sel_setBoundarySupplementaryItems_, isa);

    v26 = *(void (**)(char *, uint64_t))(v43 + 8);
  }
  v26(v18, v11);
  return v25;
}

void LinkDetailViewController.dataSource.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  id v8;

  v1 = OBJC_IVAR____TtC15ConversationKit24LinkDetailViewController____lazy_storage___dataSource;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit24LinkDetailViewController____lazy_storage___dataSource);
  if (!v2)
  {
    v3 = v0;
    LinkDetailViewController.collectionView.getter();
    LinkDetailViewController.cellProvider.getter();
    v4 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionViewDiffableDataSource<LinkDetailViewController.Section, LinkDetailViewController.Item>));
    v5 = (void *)UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)();
    LinkDetailViewController.supplementaryViewProvider.getter();
    dispatch thunk of UICollectionViewDiffableDataSource.supplementaryViewProvider.setter();
    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v3 + v1) = v5;
    v7 = v5;

    v2 = 0;
  }
  v8 = v2;
  OUTLINED_FUNCTION_91();
}

void LinkDetailViewController.supplementaryViewProvider.getter()
{
  uint64_t v0;
  uint64_t (**v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0
                                                          + OBJC_IVAR____TtC15ConversationKit24LinkDetailViewController____lazy_storage___supplementaryViewProvider);
  v2 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtC15ConversationKit24LinkDetailViewController____lazy_storage___supplementaryViewProvider);
  if (!v2)
  {
    v3 = OUTLINED_FUNCTION_7_0();
    swift_unknownObjectUnownedInit();
    *v1 = partial apply for closure #1 in closure #1 in LinkDetailViewController.supplementaryViewProvider.getter;
    v1[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v3;
    OUTLINED_FUNCTION_11_1();
    OUTLINED_FUNCTION_173();
  }
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v2);
  OUTLINED_FUNCTION_65_1();
}

uint64_t closure #1 in closure #1 in LinkDetailViewController.supplementaryViewProvider.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *Strong;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  _QWORD *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.SupplementaryRegistration<LinkDetailHeaderView>?);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 != 0xD00000000000001FLL || a3 != 0x80000001BD675930)
    && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    return 0;
  }
  Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  v9 = (uint64_t)Strong
     + OBJC_IVAR____TtC15ConversationKit24LinkDetailViewController_linkDetailHeaderSupplementaryViewRegistration;
  swift_beginAccess();
  outlined init with copy of FeatureEligibility?(v9, (uint64_t)v7, &demangling cache variable for type metadata for UICollectionView.SupplementaryRegistration<LinkDetailHeaderView>?);

  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.SupplementaryRegistration<LinkDetailHeaderView>);
  result = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v10);
  if ((_DWORD)result != 1)
  {
    type metadata accessor for LinkDetailHeaderView();
    v12 = (_QWORD *)UICollectionView.dequeueConfiguredReusableSupplementary<A>(using:for:)();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v7, v10);
    v13 = (char *)swift_unknownObjectUnownedLoadStrong();
    v14 = *(_QWORD *)&v13[OBJC_IVAR____TtC15ConversationKit24LinkDetailViewController_viewModel];
    swift_retain();

    v15 = (*(uint64_t (**)(void))(*(_QWORD *)v14 + 240))();
    swift_release();
    v16 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v12) + 0x90))(v15);
    v17 = (char *)swift_unknownObjectUnownedLoadStrong();
    v18 = *(_QWORD *)&v17[OBJC_IVAR____TtC15ConversationKit24LinkDetailViewController_viewModel];
    swift_retain();

    v19 = (*(uint64_t (**)(void))(*(_QWORD *)v18 + 288))();
    v21 = v20;
    swift_release();
    (*(void (**)(uint64_t, uint64_t))((*v16 & *v12) + 0xC0))(v19, v21);
    return (uint64_t)v12;
  }
  __break(1u);
  return result;
}

void LinkDetailViewController.cellProvider.getter()
{
  uint64_t v0;
  uint64_t (**v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0
                                                          + OBJC_IVAR____TtC15ConversationKit24LinkDetailViewController____lazy_storage___cellProvider);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit24LinkDetailViewController____lazy_storage___cellProvider);
  if (!v2)
  {
    v3 = OUTLINED_FUNCTION_7_0();
    OUTLINED_FUNCTION_299();
    *v1 = partial apply for closure #1 in closure #1 in LinkDetailViewController.cellProvider.getter;
    v1[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v3;
    OUTLINED_FUNCTION_11_1();
    OUTLINED_FUNCTION_173();
  }
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v2);
  OUTLINED_FUNCTION_65_1();
}

uint64_t closure #1 in closure #1 in LinkDetailViewController.cellProvider.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  unint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t result;
  void *v28;
  void *v29;
  int v30;
  int v31;
  int v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  void *v37;
  int v38;
  int v39;
  int v40;
  char v41;
  uint64_t v42;
  void *v43;
  void *v44;
  int v45;
  int v46;
  int v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;

  v56 = a1;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<LinkDetailParticipantCollectionViewCell, LinkDetailViewController.Item>?);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<LinkDetailActionCollectionViewCell, LinkDetailViewController.Item>?);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v49 - v14;
  v16 = *(void **)a3;
  v17 = *(void **)(a3 + 8);
  v19 = *(_QWORD *)(a3 + 16);
  v18 = *(_QWORD *)(a3 + 24);
  v20 = *(_QWORD *)(a3 + 40);
  v54 = *(_QWORD *)(a3 + 32);
  v55 = v20;
  v21 = *(_QWORD *)(a3 + 48);
  v57 = *(_QWORD *)(a3 + 56);
  v58 = v21;
  v53 = *(unsigned __int8 *)(a3 + 64);
  swift_beginAccess();
  v22 = MEMORY[0x1C3B752C0](a4 + 16);
  if (!v22)
    return 0;
  v23 = (void *)v22;
  v52 = a2;
  v24 = IndexPath.section.getter();
  v25 = LinkDetailViewController.Section.init(rawValue:)(v24);
  v51 = v23;
  if (v25 == 2)
  {
    v35 = (uint64_t)v23 + OBJC_IVAR____TtC15ConversationKit24LinkDetailViewController_shareCellRegistration;
    swift_beginAccess();
    outlined init with copy of FeatureEligibility?(v35, (uint64_t)v12, &demangling cache variable for type metadata for UICollectionView.CellRegistration<LinkDetailActionCollectionViewCell, LinkDetailViewController.Item>?);
    v50 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<LinkDetailActionCollectionViewCell, LinkDetailViewController.Item>);
    result = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v50);
    if ((_DWORD)result != 1)
    {
      v36 = v16;
      v59 = v16;
      v60 = v17;
      v37 = v17;
      v61 = v19;
      v62 = v18;
      v39 = v54;
      v38 = v55;
      v63 = v54;
      v64 = v55;
      v40 = v57;
      v65 = v58;
      v66 = v57;
      v41 = v53;
      v67 = v53;
      outlined copy of LinkDetailViewController.Item(v36, v37, v19, v18, v54, v55, v58, v57, v53);
      type metadata accessor for LinkDetailActionCollectionViewCell();
      v34 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)();

      outlined consume of LinkDetailViewController.Item(v36, v37, v19, v18, v39, v38, v58, v40, v41);
      (*(void (**)(char *))(*(_QWORD *)(v50 - 8) + 8))(v12);
      return v34;
    }
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v25 == 3)
  {
    v26 = (uint64_t)v23 + OBJC_IVAR____TtC15ConversationKit24LinkDetailViewController_deleteCellRegistration;
    swift_beginAccess();
    outlined init with copy of FeatureEligibility?(v26, (uint64_t)v15, &demangling cache variable for type metadata for UICollectionView.CellRegistration<LinkDetailActionCollectionViewCell, LinkDetailViewController.Item>?);
    v50 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<LinkDetailActionCollectionViewCell, LinkDetailViewController.Item>);
    result = __swift_getEnumTagSinglePayload((uint64_t)v15, 1, v50);
    if ((_DWORD)result != 1)
    {
      v28 = v16;
      v59 = v16;
      v60 = v17;
      v29 = v17;
      v61 = v19;
      v62 = v18;
      v31 = v54;
      v30 = v55;
      v63 = v54;
      v64 = v55;
      v32 = v57;
      v65 = v58;
      v66 = v57;
      v33 = v53;
      v67 = v53;
      outlined copy of LinkDetailViewController.Item(v28, v29, v19, v18, v54, v55, v58, v57, v53);
      type metadata accessor for LinkDetailActionCollectionViewCell();
      v34 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)();

      outlined consume of LinkDetailViewController.Item(v28, v29, v19, v18, v31, v30, v58, v32, v33);
      (*(void (**)(char *))(*(_QWORD *)(v50 - 8) + 8))(v15);
      return v34;
    }
    __break(1u);
    goto LABEL_13;
  }
  v42 = (uint64_t)v23 + OBJC_IVAR____TtC15ConversationKit24LinkDetailViewController_cellRegistration;
  swift_beginAccess();
  outlined init with copy of FeatureEligibility?(v42, (uint64_t)v9, &demangling cache variable for type metadata for UICollectionView.CellRegistration<LinkDetailParticipantCollectionViewCell, LinkDetailViewController.Item>?);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<LinkDetailParticipantCollectionViewCell, LinkDetailViewController.Item>);
  result = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v50);
  if ((_DWORD)result != 1)
  {
    v43 = v16;
    v59 = v16;
    v60 = v17;
    v44 = v17;
    v61 = v19;
    v62 = v18;
    v46 = v54;
    v45 = v55;
    v63 = v54;
    v64 = v55;
    v47 = v57;
    v65 = v58;
    v66 = v57;
    v48 = v53;
    v67 = v53;
    outlined copy of LinkDetailViewController.Item(v43, v44, v19, v18, v54, v55, v58, v57, v53);
    type metadata accessor for LinkDetailParticipantCollectionViewCell();
    v34 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)();

    outlined consume of LinkDetailViewController.Item(v43, v44, v19, v18, v46, v45, v58, v47, v48);
    (*(void (**)(char *))(*(_QWORD *)(v50 - 8) + 8))(v9);
    return v34;
  }
LABEL_14:
  __break(1u);
  return result;
}

uint64_t closure #1 in variable initialization expression of LinkDetailViewController.cellBackgroundConfiguration()
{
  id v0;
  id v1;
  id v2;

  static UIBackgroundConfiguration.listGroupedCell()();
  v0 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
  UIBackgroundConfiguration.backgroundColor.setter();
  v1 = objc_msgSend((id)objc_opt_self(), sel_effectWithStyle_, 8);
  v2 = objc_msgSend((id)objc_opt_self(), sel_effectForBlurEffect_style_, v1, 6);

  return UIBackgroundConfiguration.visualEffect.setter();
}

void LinkDetailViewController.linkShareCoordinator.setter(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit24LinkDetailViewController_linkShareCoordinator);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit24LinkDetailViewController_linkShareCoordinator) = a1;

}

id LinkDetailViewController.init(viewModel:linkController:detailControllerFactory:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  objc_super v25;

  *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit24LinkDetailViewController____lazy_storage___collectionView] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit24LinkDetailViewController____lazy_storage___dataSource] = 0;
  v7 = &v3[OBJC_IVAR____TtC15ConversationKit24LinkDetailViewController____lazy_storage___supplementaryViewProvider];
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0;
  v8 = &v3[OBJC_IVAR____TtC15ConversationKit24LinkDetailViewController____lazy_storage___cellProvider];
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = 0;
  v9 = (uint64_t)&v3[OBJC_IVAR____TtC15ConversationKit24LinkDetailViewController_cellRegistration];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<LinkDetailParticipantCollectionViewCell, LinkDetailViewController.Item>);
  OUTLINED_FUNCTION_77_0(v9, v11, v12, v10);
  v13 = (uint64_t)&v3[OBJC_IVAR____TtC15ConversationKit24LinkDetailViewController_deleteCellRegistration];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<LinkDetailActionCollectionViewCell, LinkDetailViewController.Item>);
  OUTLINED_FUNCTION_11_81(v13);
  OUTLINED_FUNCTION_11_81((uint64_t)&v3[OBJC_IVAR____TtC15ConversationKit24LinkDetailViewController_shareCellRegistration]);
  v14 = (uint64_t)&v3[OBJC_IVAR____TtC15ConversationKit24LinkDetailViewController_linkDetailHeaderSupplementaryViewRegistration];
  v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.SupplementaryRegistration<LinkDetailHeaderView>);
  OUTLINED_FUNCTION_77_0(v14, v16, v17, v15);
  v18 = v3;
  closure #1 in variable initialization expression of LinkDetailViewController.cellBackgroundConfiguration();
  *(_QWORD *)&v18[OBJC_IVAR____TtC15ConversationKit24LinkDetailViewController_linkShareCoordinator] = 0;
  *(_QWORD *)&v18[OBJC_IVAR____TtC15ConversationKit24LinkDetailViewController_cancellables] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v18[OBJC_IVAR____TtC15ConversationKit24LinkDetailViewController_viewModel] = a1;
  *(_QWORD *)&v18[OBJC_IVAR____TtC15ConversationKit24LinkDetailViewController_linkController] = a2;
  outlined init with copy of IDSLookupManager(a3, (uint64_t)&v18[OBJC_IVAR____TtC15ConversationKit24LinkDetailViewController_detailControllerFactory]);
  v19 = objc_allocWithZone(MEMORY[0x1E0C97298]);
  swift_retain();
  OUTLINED_FUNCTION_11_1();
  v20 = objc_msgSend(v19, sel_init);
  v21 = objc_msgSend((id)objc_opt_self(), sel_settingsWithContactStore_, v20);

  v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97470]), sel_initWithSettings_, v21);
  *(_QWORD *)&v18[OBJC_IVAR____TtC15ConversationKit24LinkDetailViewController_avatarController] = v22;

  v25.receiver = v18;
  v25.super_class = (Class)ObjC metadata update function for LinkDetailViewController();
  v23 = objc_msgSendSuper2(&v25, sel_initWithNibName_bundle_, 0, 0);
  LinkDetailViewController.configureReusableViewsRegistrations()();

  swift_release();
  swift_release();

  __swift_destroy_boxed_opaque_existential_1(a3);
  return v23;
}

id outlined copy of LinkDetailViewController.Item(id result, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  id v9;
  id v10;

  if (a9 == 1)
  {
    v10 = result;
    v9 = a2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return v10;
  }
  else if (!a9)
  {
    return (id)swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t outlined release of (LinkDetailViewController.Item, LinkDetailViewController.Item)(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v2 = *(void **)(a1 + 72);
  v3 = *(void **)(a1 + 80);
  v4 = *(_QWORD *)(a1 + 88);
  v5 = *(_QWORD *)(a1 + 96);
  v6 = *(_QWORD *)(a1 + 104);
  v7 = *(_QWORD *)(a1 + 112);
  v8 = *(_QWORD *)(a1 + 120);
  v9 = *(_QWORD *)(a1 + 128);
  v10 = *(_BYTE *)(a1 + 136);
  outlined consume of LinkDetailViewController.Item(*(void **)a1, *(id *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_BYTE *)(a1 + 64));
  outlined consume of LinkDetailViewController.Item(v2, v3, v4, v5, v6, v7, v8, v9, v10);
  return a1;
}

void outlined consume of LinkDetailViewController.Item(void *a1, id a2, int a3, int a4, int a5, int a6, int a7, int a8, char a9)
{
  if (a9 == 1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
  else if (!a9)
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t type metadata accessor for LinkDetailViewController()
{
  uint64_t result;

  result = type metadata singleton initialization cache for LinkDetailViewController;
  if (!type metadata singleton initialization cache for LinkDetailViewController)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t LinkDetailViewController.configureReusableViewsRegistrations()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.SupplementaryRegistration<LinkDetailHeaderView>?);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<LinkDetailActionCollectionViewCell, LinkDetailViewController.Item>?);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<LinkDetailParticipantCollectionViewCell, LinkDetailViewController.Item>?);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  LinkDetailViewController.createCellRegistration()((void (*)(_QWORD))type metadata accessor for LinkDetailParticipantCollectionViewCell);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<LinkDetailParticipantCollectionViewCell, LinkDetailViewController.Item>);
  __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v10);
  v11 = v0 + OBJC_IVAR____TtC15ConversationKit24LinkDetailViewController_cellRegistration;
  swift_beginAccess();
  outlined assign with take of Participant?((uint64_t)v9, v11, &demangling cache variable for type metadata for UICollectionView.CellRegistration<LinkDetailParticipantCollectionViewCell, LinkDetailViewController.Item>?);
  swift_endAccess();
  LinkDetailViewController.createCellRegistration()((void (*)(_QWORD))type metadata accessor for LinkDetailActionCollectionViewCell);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<LinkDetailActionCollectionViewCell, LinkDetailViewController.Item>);
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v12);
  v13 = v0 + OBJC_IVAR____TtC15ConversationKit24LinkDetailViewController_deleteCellRegistration;
  swift_beginAccess();
  outlined assign with take of Participant?((uint64_t)v6, v13, &demangling cache variable for type metadata for UICollectionView.CellRegistration<LinkDetailActionCollectionViewCell, LinkDetailViewController.Item>?);
  swift_endAccess();
  LinkDetailViewController.createCellRegistration()((void (*)(_QWORD))type metadata accessor for LinkDetailActionCollectionViewCell);
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v12);
  v14 = v0 + OBJC_IVAR____TtC15ConversationKit24LinkDetailViewController_shareCellRegistration;
  swift_beginAccess();
  outlined assign with take of Participant?((uint64_t)v6, v14, &demangling cache variable for type metadata for UICollectionView.CellRegistration<LinkDetailActionCollectionViewCell, LinkDetailViewController.Item>?);
  swift_endAccess();
  type metadata accessor for LinkDetailHeaderView();
  UICollectionView.SupplementaryRegistration.init(elementKind:handler:)();
  v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.SupplementaryRegistration<LinkDetailHeaderView>);
  __swift_storeEnumTagSinglePayload((uint64_t)v3, 0, 1, v15);
  v16 = v0 + OBJC_IVAR____TtC15ConversationKit24LinkDetailViewController_linkDetailHeaderSupplementaryViewRegistration;
  swift_beginAccess();
  outlined assign with take of Participant?((uint64_t)v3, v16, &demangling cache variable for type metadata for UICollectionView.SupplementaryRegistration<LinkDetailHeaderView>?);
  return swift_endAccess();
}

void LinkDetailViewController.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;

  objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  OUTLINED_FUNCTION_0();
}

void LinkDetailViewController.init(coder:)()
{
  char *v0;
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit24LinkDetailViewController____lazy_storage___collectionView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit24LinkDetailViewController____lazy_storage___dataSource] = 0;
  v1 = &v0[OBJC_IVAR____TtC15ConversationKit24LinkDetailViewController____lazy_storage___supplementaryViewProvider];
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;
  v2 = &v0[OBJC_IVAR____TtC15ConversationKit24LinkDetailViewController____lazy_storage___cellProvider];
  *(_QWORD *)v2 = 0;
  *((_QWORD *)v2 + 1) = 0;
  v3 = (uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit24LinkDetailViewController_cellRegistration];
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<LinkDetailParticipantCollectionViewCell, LinkDetailViewController.Item>);
  OUTLINED_FUNCTION_77_0(v3, v5, v6, v4);
  v7 = (uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit24LinkDetailViewController_deleteCellRegistration];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<LinkDetailActionCollectionViewCell, LinkDetailViewController.Item>);
  OUTLINED_FUNCTION_8_2(v7);
  OUTLINED_FUNCTION_8_2((uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit24LinkDetailViewController_shareCellRegistration]);
  v8 = (uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit24LinkDetailViewController_linkDetailHeaderSupplementaryViewRegistration];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.SupplementaryRegistration<LinkDetailHeaderView>);
  OUTLINED_FUNCTION_77_0(v8, v10, v11, v9);
  closure #1 in variable initialization expression of LinkDetailViewController.cellBackgroundConfiguration();
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit24LinkDetailViewController_linkShareCoordinator] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit24LinkDetailViewController_cancellables] = MEMORY[0x1E0DEE9D8];

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Void __swiftcall LinkDetailViewController.viewDidLoad()()
{
  void *v0;
  id v1;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)ObjC metadata update function for LinkDetailViewController();
  objc_msgSendSuper2(&v2, sel_viewDidLoad);
  v1 = objc_msgSend(v0, sel_navigationItem);
  objc_msgSend(v1, sel_setLargeTitleDisplayMode_, 2);

  LinkDetailViewController.configureViewHierarchy()();
  LinkDetailViewController.initializeDataSource()();
}

void LinkDetailViewController.configureViewHierarchy()()
{
  void *v0;
  id v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  void *v32;
  void *v33;
  id v34;
  id v35;
  Class isa;

  v1 = objc_msgSend(v0, sel_view);
  if (!v1)
  {
    __break(1u);
    goto LABEL_8;
  }
  v2 = v1;
  LinkDetailViewController.collectionView.getter();
  v4 = v3;
  objc_msgSend(v2, sel_addSubview_, v3);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BD644140;
  LinkDetailViewController.collectionView.getter();
  v7 = v6;
  v8 = objc_msgSend(v6, sel_topAnchor);

  v9 = objc_msgSend(v0, sel_view);
  if (!v9)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v10 = v9;
  v11 = objc_msgSend(v9, sel_safeAreaLayoutGuide);

  v12 = objc_msgSend(v11, sel_topAnchor);
  v13 = objc_msgSend(v8, sel_constraintEqualToAnchor_, v12);

  *(_QWORD *)(v5 + 32) = v13;
  LinkDetailViewController.collectionView.getter();
  v15 = v14;
  v16 = objc_msgSend(v14, sel_leadingAnchor);

  v17 = objc_msgSend(v0, sel_view);
  if (!v17)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v18 = v17;
  v19 = objc_msgSend(v17, sel_leadingAnchor);

  v20 = objc_msgSend(v16, sel_constraintEqualToAnchor_, v19);
  *(_QWORD *)(v5 + 40) = v20;
  LinkDetailViewController.collectionView.getter();
  v22 = v21;
  v23 = objc_msgSend(v21, sel_trailingAnchor);

  v24 = objc_msgSend(v0, sel_view);
  if (!v24)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v25 = v24;
  v26 = objc_msgSend(v24, sel_trailingAnchor);

  v27 = objc_msgSend(v23, sel_constraintEqualToAnchor_, v26);
  *(_QWORD *)(v5 + 48) = v27;
  LinkDetailViewController.collectionView.getter();
  v29 = v28;
  v30 = objc_msgSend(v28, sel_bottomAnchor);

  v31 = objc_msgSend(v0, sel_view);
  if (v31)
  {
    v32 = v31;
    v33 = (void *)objc_opt_self();
    v34 = objc_msgSend(v32, sel_bottomAnchor);

    v35 = objc_msgSend(v30, sel_constraintEqualToAnchor_, v34);
    *(_QWORD *)(v5 + 56) = v35;
    specialized Array._endMutation()();
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    objc_msgSend(v33, sel_activateConstraints_, isa);

    return;
  }
LABEL_11:
  __break(1u);
}

uint64_t LinkDetailViewController.initializeDataSource()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String?>.Publisher);
  v3 = *(_QWORD *)(v2 - 8);
  v37 = v2;
  v38 = v3;
  MEMORY[0x1E0C80A78](v2);
  v35 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Set<TUHandle>?>.Publisher);
  v6 = *(_QWORD *)(v5 - 8);
  v31 = v5;
  v32 = v6;
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = v9;
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSDiffableDataSourceSnapshot<LinkDetailViewController.Section, LinkDetailViewController.Item>);
  v36 = *(_QWORD *)(v14 - 8);
  v34 = v14;
  MEMORY[0x1E0C80A78](v14);
  v33 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  lazy protocol witness table accessor for type LinkDetailViewController.Section and conformance LinkDetailViewController.Section();
  lazy protocol witness table accessor for type LinkDetailViewController.Item and conformance LinkDetailViewController.Item();
  NSDiffableDataSourceSnapshot.init()();
  NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)&outlined read-only object #0 of LinkDetailViewController.initializeDataSource());
  LinkDetailViewController.dataSource.getter();
  v17 = v16;
  dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)();

  v18 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit24LinkDetailViewController_viewModel);
  (*(void (**)(void))(*(_QWORD *)v18 + 168))();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type Published<Bool>.Publisher and conformance Published<A>.Publisher, &demangling cache variable for type metadata for Published<Bool>.Publisher, MEMORY[0x1E0C96190]);
  v30 = v19;
  v28 = v11;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  v29 = *(void (**)(char *, uint64_t))(v10 + 8);
  v29(v13, v11);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [AnyCancellable]);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](lazy protocol witness table cache variable for type [AnyCancellable] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [AnyCancellable], MEMORY[0x1E0DEAF58]);
  AnyCancellable.store<A>(in:)();
  swift_endAccess();
  v20 = swift_release();
  (*(void (**)(uint64_t))(*(_QWORD *)v18 + 264))(v20);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type Published<Set<TUHandle>?>.Publisher and conformance Published<A>.Publisher, &demangling cache variable for type metadata for Published<Set<TUHandle>?>.Publisher, MEMORY[0x1E0C96190]);
  v21 = v31;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v8, v21);
  swift_beginAccess();
  AnyCancellable.store<A>(in:)();
  swift_endAccess();
  v22 = swift_release();
  (*(void (**)(uint64_t))(*(_QWORD *)v18 + 216))(v22);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  v23 = v28;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  v29(v13, v23);
  swift_beginAccess();
  AnyCancellable.store<A>(in:)();
  swift_endAccess();
  v24 = swift_release();
  v25 = v35;
  (*(void (**)(uint64_t))(*(_QWORD *)v18 + 312))(v24);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type Published<String?>.Publisher and conformance Published<A>.Publisher, &demangling cache variable for type metadata for Published<String?>.Publisher, MEMORY[0x1E0C96190]);
  v26 = v37;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v25, v26);
  swift_beginAccess();
  AnyCancellable.store<A>(in:)();
  swift_endAccess();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v33, v34);
}

void LinkDetailViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)MEMORY[0x1C3B72E00]();
    OUTLINED_FUNCTION_53();
  }
  else
  {
    v6 = 0;
  }
  objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  OUTLINED_FUNCTION_18();
}

void LinkDetailViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id LinkDetailViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)ObjC metadata update function for LinkDetailViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t LinkDetailViewController.createCellRegistration()(void (*a1)(_QWORD))
{
  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_299();
  a1(0);
  return UICollectionView.CellRegistration.init(handler:)();
}

void closure #1 in LinkDetailViewController.createCellRegistration()(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  unint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  void **v27;
  void *v28;
  id *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35[7];

  v31 = a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIBackgroundConfiguration?);
  MEMORY[0x1E0C80A78](v6);
  v32 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a3;
  v8 = a3[1];
  v10 = a3[2];
  v11 = a3[3];
  v13 = a3[4];
  v12 = a3[5];
  v14 = a3[7];
  v34 = a3[6];
  v15 = *((unsigned __int8 *)a3 + 64);
  swift_beginAccess();
  v33 = MEMORY[0x1C3B752C0](a4 + 16);
  if (v33)
  {
    v16 = IndexPath.section.getter();
    if (LinkDetailViewController.Section.init(rawValue:)(v16) == 1)
    {
      if (v15 == 1)
      {
        v21 = objc_allocWithZone(MEMORY[0x1E0C97298]);
        v22 = (id)v8;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        v23 = v22;
        v24 = objc_msgSend(v21, sel_init);
        v25 = objc_msgSend((id)objc_opt_self(), sel_settingsWithContactStore_, v24);

        v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97470]), sel_initWithSettings_, v25);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        v27 = (void **)(v31 + OBJC_IVAR____TtC15ConversationKit39LinkDetailParticipantCollectionViewCell_avatarController);
        swift_beginAccess();
        v28 = *v27;
        *v27 = v26;

        goto LABEL_7;
      }
      if (v15 == 2 && !(v8 | v9 | v10 | v11 | v13 | v12 | v34 | v14))
      {
        v29 = (id *)(v31 + OBJC_IVAR____TtC15ConversationKit39LinkDetailParticipantCollectionViewCell_joinButton);
        swift_beginAccess();
        objc_msgSend(*v29, sel_addTarget_action_forControlEvents_, v33, sel_didTapJoin, 64);
        v8 = 0;
        v10 = 0;
        v13 = 0;
        v12 = 0;
        v34 = 0;
        v14 = 0;
        v11 = 1;
        goto LABEL_7;
      }
    }
    v8 = 0;
    v10 = 0;
    v11 = 0;
    v13 = 0;
    v12 = 0;
    v34 = 0;
    v14 = 0;
LABEL_7:
    v35[0] = v8;
    v35[1] = v10;
    v35[2] = v11;
    v35[3] = v13;
    v35[4] = v12;
    v35[5] = v34;
    v35[6] = v14;
    v31 = v14;
    outlined copy of LinkDetailParticipantCollectionViewCell.Style((void *)v8, v10, v11);
    LinkDetailParticipantCollectionViewCell.style.setter(v35);
    v17 = (void *)v33;
    v18 = v33 + OBJC_IVAR____TtC15ConversationKit24LinkDetailViewController_cellBackgroundConfiguration;
    v19 = type metadata accessor for UIBackgroundConfiguration();
    v20 = (uint64_t)v32;
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v32, v18, v19);
    __swift_storeEnumTagSinglePayload(v20, 0, 1, v19);
    MEMORY[0x1C3B7370C](v20);
    outlined consume of LinkDetailParticipantCollectionViewCell.Style((void *)v8, v10, v11);

  }
}

uint64_t closure #1 in LinkDetailViewController.createDeleteCellRegistration()(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  char *v14;
  id v15;
  Swift::String v16;
  Swift::String_optional v17;
  Swift::String v18;
  id v19;
  void (*v20)(uint64_t *, _QWORD);
  uint64_t *boxed_opaque_existential_1;
  char *v22;
  uint64_t v23;
  id v24;
  uint64_t v25[5];
  Swift::String v26;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIBackgroundConfiguration?);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for UIListContentConfiguration();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = MEMORY[0x1C3B752C0](a4 + 16);
  if (result)
  {
    v14 = (char *)result;
    MEMORY[0x1C3B73748]();
    v15 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
    v26._object = (void *)0xE000000000000000;
    v16._object = (void *)0x80000001BD687C20;
    v16._countAndFlagsBits = 0xD000000000000012;
    v17.value._countAndFlagsBits = 0x61737265766E6F43;
    v17.value._object = (void *)0xEF74694B6E6F6974;
    v18._countAndFlagsBits = 0;
    v18._object = (void *)0xE000000000000000;
    v26._countAndFlagsBits = 0;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v16, v17, (NSBundle)v15, v18, v26);

    UIListContentConfiguration.text.setter();
    v19 = objc_msgSend((id)objc_opt_self(), sel_systemRedColor);
    v20 = (void (*)(uint64_t *, _QWORD))UIListContentConfiguration.textProperties.modify();
    UIListContentConfiguration.TextProperties.color.setter();
    v20(v25, 0);
    v25[3] = v9;
    v25[4] = MEMORY[0x1E0DC2398];
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v25);
    (*(void (**)(uint64_t *, char *, uint64_t))(v10 + 16))(boxed_opaque_existential_1, v12, v9);
    MEMORY[0x1C3B73700](v25);
    v22 = &v14[OBJC_IVAR____TtC15ConversationKit24LinkDetailViewController_cellBackgroundConfiguration];
    v23 = type metadata accessor for UIBackgroundConfiguration();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v8, v22, v23);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v23);
    MEMORY[0x1C3B7370C](v8);
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
    v24 = objc_msgSend((id)objc_opt_self(), sel_configurationWithTextStyle_, *MEMORY[0x1E0DC4A88]);
    @nonobjc UIImage.__allocating_init(systemName:withConfiguration:)(0x6873617274, 0xE500000000000000, v24);
    (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x80))();

    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  return result;
}

uint64_t closure #1 in LinkDetailViewController.createShareCellRegistration()(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  char *v14;
  id v15;
  Swift::String v16;
  Swift::String_optional v17;
  Swift::String v18;
  uint64_t *boxed_opaque_existential_1;
  char *v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24[5];
  Swift::String v25;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIBackgroundConfiguration?);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for UIListContentConfiguration();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = MEMORY[0x1C3B752C0](a4 + 16);
  if (result)
  {
    v14 = (char *)result;
    MEMORY[0x1C3B73748]();
    v15 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
    v25._object = (void *)0xE000000000000000;
    v16._object = (void *)0x80000001BD687C00;
    v16._countAndFlagsBits = 0xD000000000000011;
    v17.value._countAndFlagsBits = 0x61737265766E6F43;
    v17.value._object = (void *)0xEF74694B6E6F6974;
    v18._countAndFlagsBits = 0;
    v18._object = (void *)0xE000000000000000;
    v25._countAndFlagsBits = 0;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v16, v17, (NSBundle)v15, v18, v25);

    UIListContentConfiguration.text.setter();
    v24[3] = v9;
    v24[4] = MEMORY[0x1E0DC2398];
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v24);
    (*(void (**)(uint64_t *, char *, uint64_t))(v10 + 16))(boxed_opaque_existential_1, v12, v9);
    MEMORY[0x1C3B73700](v24);
    v20 = &v14[OBJC_IVAR____TtC15ConversationKit24LinkDetailViewController_cellBackgroundConfiguration];
    v21 = type metadata accessor for UIBackgroundConfiguration();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v8, v20, v21);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v21);
    MEMORY[0x1C3B7370C](v8);
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
    v22 = objc_msgSend((id)objc_opt_self(), sel_configurationWithTextStyle_, *MEMORY[0x1E0DC4A88]);
    @nonobjc UIImage.__allocating_init(systemName:withConfiguration:)(0xD000000000000013, 0x80000001BD676F40, v22);
    (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x80))();
    v23 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
    objc_msgSend(a1, sel_setTintColor_, v23);

    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  return result;
}

uint64_t LinkDetailViewController.showUserNotificationForDeleteInvite()()
{
  char *v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v7;

  v1 = type metadata accessor for RecentsCallItem(0);
  v2 = MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(__n128))(**(_QWORD **)&v0[OBJC_IVAR____TtC15ConversationKit24LinkDetailViewController_viewModel]
                                 + 432))(v2);
  *(_QWORD *)(swift_allocObject() + 16) = v0;
  v5 = v0;
  RecentsLinkController.delete(callItem:from:completionHandler:)();
  swift_release();
  return outlined destroy of RecentsCallItem((uint64_t)v4);
}

uint64_t LinkDetailViewController.didTapJoin()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)(v0 + OBJC_IVAR____TtC15ConversationKit24LinkDetailViewController_viewModel)
                              + 464))();
}

void closure #1 in LinkDetailViewController.showUserNotificationForDeleteInvite()(char a1, id a2)
{
  id v2;
  id v3;

  if ((a1 & 1) != 0)
  {
    v2 = objc_msgSend(a2, sel_navigationController);
    if (v2)
    {
      v3 = v2;

    }
  }
}

void LinkDetailViewController.showShareLink(from:)(void *a1)
{
  char *v1;
  id v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;

  (*(void (**)(uint64_t *__return_ptr))(**(_QWORD **)&v1[OBJC_IVAR____TtC15ConversationKit24LinkDetailViewController_viewModel]
                                                + 336))(&v7);
  swift_release();
  swift_bridgeObjectRelease();
  v3 = objc_allocWithZone((Class)type metadata accessor for LinkShareCoordinator());
  v4 = a1;
  v1;
  v5 = LinkShareCoordinator.init(type:hostViewController:originatingView:)();
  LinkShareCoordinator.start(with:)((uint64_t)TPNumberPadCharacter.rawValue.getter, 0);
  v6 = v5;
  LinkDetailViewController.linkShareCoordinator.setter((uint64_t)v5);

}

void LinkDetailViewController.showContactDetails(for:with:sourceRect:)(void *a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  char *v6;
  char *v7;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t ObjectType;
  uint64_t v24;
  uint64_t (*v25)(void);
  id v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  void *v33;
  id v34;
  _QWORD v35[7];

  v7 = v6;
  v14 = *(void **)a2;
  v13 = *(_QWORD *)(a2 + 8);
  v15 = *(_QWORD *)(a2 + 16);
  v16 = *(_QWORD *)(a2 + 24);
  v17 = *(_QWORD *)(a2 + 32);
  v18 = *(_QWORD *)(a2 + 40);
  v19 = *(_QWORD *)(a2 + 48);
  v20 = *(_QWORD *)&v6[OBJC_IVAR____TtC15ConversationKit24LinkDetailViewController_viewModel];
  if (((*(uint64_t (**)(void))(*(_QWORD *)v20 + 384))() & 1) != 0)
  {
    if ((*(uint64_t (**)(void))(*(_QWORD *)v20 + 408))())
    {
      v22 = v21;
      ObjectType = swift_getObjectType();
      v35[0] = v14;
      v35[1] = v13;
      v35[2] = v15;
      v35[3] = v16;
      v35[4] = v17;
      v35[5] = v18;
      v35[6] = v19;
      (*(void (**)(void *, _QWORD *, uint64_t, uint64_t, double, double, double, double))(v22 + 16))(a1, v35, ObjectType, v22, a3, a4, a5, a6);
      swift_unknownObjectRelease();
    }
  }
  else
  {
    if (v14)
    {
      v24 = *(_QWORD *)&v7[OBJC_IVAR____TtC15ConversationKit24LinkDetailViewController_detailControllerFactory + 32];
      __swift_project_boxed_opaque_existential_1(&v7[OBJC_IVAR____TtC15ConversationKit24LinkDetailViewController_detailControllerFactory], *(_QWORD *)&v7[OBJC_IVAR____TtC15ConversationKit24LinkDetailViewController_detailControllerFactory + 24]);
      v25 = *(uint64_t (**)(void))(v24 + 16);
      v26 = v14;
      v34 = (id)v25();
    }
    else
    {
      _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for CNContact);
      swift_bridgeObjectRetain();
      v27 = outlined bridged method (pb) of @objc TUHandle.normalizedValue.getter(a1);
      @nonobjc CNContact.init(displayName:emailOrPhoneNumber:)(v13, v15, v27, v28);
      v26 = v29;
      v30 = *(_QWORD *)&v7[OBJC_IVAR____TtC15ConversationKit24LinkDetailViewController_detailControllerFactory + 24];
      v31 = *(_QWORD *)&v7[OBJC_IVAR____TtC15ConversationKit24LinkDetailViewController_detailControllerFactory + 32];
      __swift_project_boxed_opaque_existential_1(&v7[OBJC_IVAR____TtC15ConversationKit24LinkDetailViewController_detailControllerFactory], v30);
      v34 = (id)(*(uint64_t (**)(id, uint64_t, uint64_t))(v31 + 24))(v26, v30, v31);
    }
    v32 = objc_msgSend(v7, sel_navigationController);
    if (v32)
    {
      v33 = v32;
      objc_msgSend(v32, sel_pushViewController_animated_, v34, 1);

    }
  }
}

void closure #2 in LinkDetailViewController.initializeDataSource()(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  _OWORD v21[4];
  char v22;
  void *v23;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSDiffableDataSourceSnapshot<LinkDetailViewController.Section, LinkDetailViewController.Item>);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSDiffableDataSourceSectionSnapshot<LinkDetailViewController.Item>);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a1;
  swift_beginAccess();
  v13 = (void *)MEMORY[0x1C3B752C0](a2 + 16);
  if (v13)
  {
    v14 = v13;
    if (v12)
    {
      specialized Sequence.compactMap<A>(_:)(v12);
      v23 = &outlined read-only object #0 of closure #2 in LinkDetailViewController.initializeDataSource();
      specialized Array.append<A>(contentsOf:)();
      lazy protocol witness table accessor for type LinkDetailViewController.Item and conformance LinkDetailViewController.Item();
      NSDiffableDataSourceSectionSnapshot.init()();
      memset(v21, 0, sizeof(v21));
      v22 = -1;
      NSDiffableDataSourceSectionSnapshot.append(_:to:)();
      swift_bridgeObjectRelease();
      LinkDetailViewController.dataSource.getter();
      v16 = v15;
      LOBYTE(v21[0]) = 1;
      UICollectionViewDiffableDataSource.apply(_:to:animatingDifferences:completion:)();

      LinkDetailViewController.dataSource.getter();
      v18 = v17;
      dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

      NSDiffableDataSourceSnapshot.reloadSections(_:)((Swift::OpaquePointer)&outlined read-only object #1 of closure #2 in LinkDetailViewController.initializeDataSource());
      LinkDetailViewController.dataSource.getter();
      v20 = v19;
      dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)();

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }
    else
    {

    }
  }
}

uint64_t closure #1 in LinkDetailViewController.initializeDataSource()(unsigned __int8 *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int v11;
  uint64_t result;
  void *v13;
  void *v14;
  void *v15;
  _OWORD v16[4];
  char v17;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSDiffableDataSourceSectionSnapshot<LinkDetailViewController.Item>);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *a1;
  swift_beginAccess();
  result = MEMORY[0x1C3B752C0](a2 + 16);
  if (result)
  {
    v13 = (void *)result;
    lazy protocol witness table accessor for type LinkDetailViewController.Item and conformance LinkDetailViewController.Item();
    NSDiffableDataSourceSectionSnapshot.init()();
    if (v11)
    {
      memset(v16, 0, sizeof(v16));
      v17 = -1;
      NSDiffableDataSourceSectionSnapshot.append(_:to:)();
    }
    LinkDetailViewController.dataSource.getter();
    v15 = v14;
    LOBYTE(v16[0]) = a4;
    UICollectionViewDiffableDataSource.apply(_:to:animatingDifferences:completion:)();

    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  return result;
}

uint64_t closure #4 in LinkDetailViewController.initializeDataSource()(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSDiffableDataSourceSnapshot<LinkDetailViewController.Section, LinkDetailViewController.Item>);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = MEMORY[0x1C3B752C0](a2 + 16);
  if (result)
  {
    v8 = (void *)result;
    LinkDetailViewController.dataSource.getter();
    v10 = v9;
    dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

    NSDiffableDataSourceSnapshot.reloadSections(_:)((Swift::OpaquePointer)&outlined read-only object #0 of closure #4 in LinkDetailViewController.initializeDataSource());
    LinkDetailViewController.dataSource.getter();
    v12 = v11;
    dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)();

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return result;
}

void LinkDetailViewController.collectionView(_:didSelectItemAt:)()
{
  void *v0;
  void *v1;
  Class isa;
  id v3;
  unint64_t v4;
  char *v5;

  LinkDetailViewController.collectionView.getter();
  v1 = v0;
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v3 = objc_msgSend(v1, sel_cellForItemAtIndexPath_, isa);

  if (!v3)
    LinkDetailViewController.collectionView.getter();
  v4 = IndexPath.section.getter();
  v5 = (char *)&loc_1BD371A0C
     + *((int *)qword_1BD371BE0 + LinkDetailViewController.Section.init(rawValue:)(v4));
  __asm { BR              X10 }
}

void sub_1BD371A1C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  double v17;
  double v18;
  double v19;
  double v20;
  void *v21;
  void *v22;
  Class isa;
  char v24;
  unsigned __int8 v25;
  void *v26;
  int v27;
  int v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned __int8 v37;

  LinkDetailViewController.dataSource.getter();
  v4 = v3;
  dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)();

  if (v37 == 255)
  {

  }
  else
  {
    v6 = v29;
    v5 = v30;
    v8 = (uint64_t)v31;
    v7 = (uint64_t)v32;
    v9 = v33;
    v10 = v34;
    v11 = v35;
    v28 = v35;
    if (v37 == 1)
    {
      v29 = v30;
      v30 = v31;
      v31 = v32;
      v32 = (void *)v33;
      v33 = v34;
      v34 = v35;
      v35 = v36;
      v26 = v5;
      v27 = v8;
      v12 = v11;
      v13 = v10;
      v14 = v7;
      type metadata accessor for LinkDetailViewController();
      OUTLINED_FUNCTION_15_78();
      v15 = v8;
      v16 = v36;
      outlined copy of LinkDetailViewController.Item(v6, v26, v15, v14, v9, v13, v12, v36, v24);
      static LinkDetailViewController.fetchFrame(of:in:)(v0, v2);
      LinkDetailViewController.showContactDetails(for:with:sourceRect:)(v6, (uint64_t)&v29, v17, v18, v19, v20);
      OUTLINED_FUNCTION_15_78();
      outlined consume of LinkDetailViewController.Item?(v6, v26, v27, v14, v9, v13, v28, v16, v25);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

    }
    else
    {

      outlined consume of LinkDetailViewController.Item?(v29, v30, (int)v31, (int)v32, v33, v34, v35, v36, v37);
    }
  }
  LinkDetailViewController.collectionView.getter();
  v22 = v21;
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v22, sel_deselectItemAtIndexPath_animated_, isa, 1);

}

void outlined consume of LinkDetailViewController.Item?(void *a1, void *a2, int a3, int a4, int a5, int a6, int a7, int a8, unsigned __int8 a9)
{
  if (a9 != 255)
    outlined consume of LinkDetailViewController.Item(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

void static LinkDetailViewController.fetchFrame(of:in:)(uint64_t a1, void *a2)
{
  Class isa;
  id v4;
  double v5;
  double v6;
  double v7;
  double v8;

  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v4 = objc_msgSend(a2, sel_layoutAttributesForItemAtIndexPath_, isa);

  if (v4)
  {
    objc_msgSend(v4, sel_frame);
    v6 = v5;
    v8 = v7;

    objc_msgSend(a2, sel_convertPoint_toView_, 0, v6, v8);
  }
}

unint64_t lazy protocol witness table accessor for type LinkDetailViewController.Item and conformance LinkDetailViewController.Item()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type LinkDetailViewController.Item and conformance LinkDetailViewController.Item;
  if (!lazy protocol witness table cache variable for type LinkDetailViewController.Item and conformance LinkDetailViewController.Item)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for LinkDetailViewController.Item, &type metadata for LinkDetailViewController.Item);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LinkDetailViewController.Item and conformance LinkDetailViewController.Item);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type LinkDetailViewController.Item and conformance LinkDetailViewController.Item;
  if (!lazy protocol witness table cache variable for type LinkDetailViewController.Item and conformance LinkDetailViewController.Item)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for LinkDetailViewController.Item, &type metadata for LinkDetailViewController.Item);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LinkDetailViewController.Item and conformance LinkDetailViewController.Item);
  }
  return result;
}

void type metadata completion function for LinkDetailViewController()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  type metadata accessor for UICollectionView.CellRegistration<LinkDetailParticipantCollectionViewCell, LinkDetailViewController.Item>?(319, &lazy cache variable for type metadata for UICollectionView.CellRegistration<LinkDetailParticipantCollectionViewCell, LinkDetailViewController.Item>?, &demangling cache variable for type metadata for UICollectionView.CellRegistration<LinkDetailParticipantCollectionViewCell, LinkDetailViewController.Item>);
  if (v0 <= 0x3F)
  {
    type metadata accessor for UICollectionView.CellRegistration<LinkDetailParticipantCollectionViewCell, LinkDetailViewController.Item>?(319, &lazy cache variable for type metadata for UICollectionView.CellRegistration<LinkDetailActionCollectionViewCell, LinkDetailViewController.Item>?, &demangling cache variable for type metadata for UICollectionView.CellRegistration<LinkDetailActionCollectionViewCell, LinkDetailViewController.Item>);
    if (v1 <= 0x3F)
    {
      type metadata accessor for UICollectionView.CellRegistration<LinkDetailParticipantCollectionViewCell, LinkDetailViewController.Item>?(319, &lazy cache variable for type metadata for UICollectionView.SupplementaryRegistration<LinkDetailHeaderView>?, &demangling cache variable for type metadata for UICollectionView.SupplementaryRegistration<LinkDetailHeaderView>);
      if (v2 <= 0x3F)
      {
        type metadata accessor for UIBackgroundConfiguration();
        if (v3 <= 0x3F)
          swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t method lookup function for LinkDetailViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of LinkDetailViewController.__allocating_init(viewModel:linkController:detailControllerFactory:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 472))();
}

void type metadata accessor for UICollectionView.CellRegistration<LinkDetailParticipantCollectionViewCell, LinkDetailViewController.Item>?(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    v4 = type metadata accessor for Optional();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t destroy for LinkDetailViewController.Item(uint64_t result)
{
  uint64_t v1;
  unsigned int v2;

  v1 = result;
  v2 = *(unsigned __int8 *)(result + 64);
  if (v2 >= 2)
    v2 = *(_DWORD *)result + 2;
  if (v2 == 1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else if (v2)
  {
    return result;
  }
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for LinkDetailViewController.Item(_QWORD *__dst, _QWORD *a2)
{
  unsigned int v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;

  v3 = *((unsigned __int8 *)a2 + 64);
  if (v3 >= 2)
    v3 = *(_DWORD *)a2 + 2;
  if (v3 == 1)
  {
    v5 = (void *)*a2;
    v6 = (void *)a2[1];
    *__dst = *a2;
    __dst[1] = v6;
    v7 = a2[3];
    __dst[2] = a2[2];
    __dst[3] = v7;
    v8 = a2[5];
    __dst[4] = a2[4];
    __dst[5] = v8;
    v9 = a2[7];
    __dst[6] = a2[6];
    __dst[7] = v9;
    *((_BYTE *)__dst + 64) = 1;
    v10 = v5;
    v11 = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    if (v3)
    {
      memcpy(__dst, a2, 0x41uLL);
      return __dst;
    }
    v4 = a2[1];
    *__dst = *a2;
    __dst[1] = v4;
    *((_BYTE *)__dst + 64) = 0;
  }
  swift_bridgeObjectRetain();
  return __dst;
}

id *assignWithCopy for LinkDetailViewController.Item(id *__dst, id *__src)
{
  unsigned int v4;
  unsigned int v5;
  id v6;
  id v7;
  id v8;
  id v9;

  if (__dst == __src)
    return __dst;
  v4 = *((unsigned __int8 *)__dst + 64);
  if (v4 >= 2)
    v4 = *(_DWORD *)__dst + 2;
  if (v4 == 1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_8:
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  if (!v4)
    goto LABEL_8;
LABEL_9:
  v5 = *((unsigned __int8 *)__src + 64);
  if (v5 >= 2)
    v5 = *(_DWORD *)__src + 2;
  if (v5 == 1)
  {
    v6 = *__src;
    *__dst = *__src;
    v7 = __src[1];
    __dst[1] = v7;
    __dst[2] = __src[2];
    __dst[3] = __src[3];
    __dst[4] = __src[4];
    __dst[5] = __src[5];
    __dst[6] = __src[6];
    __dst[7] = __src[7];
    *((_BYTE *)__dst + 64) = 1;
    v8 = v6;
    v9 = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    if (v5)
    {
      memcpy(__dst, __src, 0x41uLL);
      return __dst;
    }
    *__dst = *__src;
    __dst[1] = __src[1];
    *((_BYTE *)__dst + 64) = 0;
  }
  swift_bridgeObjectRetain();
  return __dst;
}

id *assignWithTake for LinkDetailViewController.Item(id *__dst, id *__src)
{
  unsigned int v4;
  unsigned int v5;
  __int128 v6;
  __int128 v7;

  if (__dst == __src)
    return __dst;
  v4 = *((unsigned __int8 *)__dst + 64);
  if (v4 >= 2)
    v4 = *(_DWORD *)__dst + 2;
  if (v4 == 1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_8:
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  if (!v4)
    goto LABEL_8;
LABEL_9:
  v5 = *((unsigned __int8 *)__src + 64);
  if (v5 >= 2)
    v5 = *(_DWORD *)__src + 2;
  if (v5 == 1)
  {
    v6 = *((_OWORD *)__src + 1);
    *(_OWORD *)__dst = *(_OWORD *)__src;
    *((_OWORD *)__dst + 1) = v6;
    v7 = *((_OWORD *)__src + 3);
    *((_OWORD *)__dst + 2) = *((_OWORD *)__src + 2);
    *((_OWORD *)__dst + 3) = v7;
    *((_BYTE *)__dst + 64) = 1;
  }
  else if (v5)
  {
    memcpy(__dst, __src, 0x41uLL);
  }
  else
  {
    *(_OWORD *)__dst = *(_OWORD *)__src;
    *((_BYTE *)__dst + 64) = 0;
  }
  return __dst;
}

uint64_t getEnumTagSinglePayload for LinkDetailViewController.Item(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 65))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 64);
  if (v3 >= 3)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for LinkDetailViewController.Item(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 64) = 0;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 65) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 65) = 0;
    if (a2)
      *(_BYTE *)(result + 64) = -(char)a2;
  }
  return result;
}

uint64_t getEnumTag for LinkDetailViewController.Item(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 64);
  if (result >= 2)
    return (*(_DWORD *)a1 + 2);
  return result;
}

uint64_t destructiveInjectEnumTag for LinkDetailViewController.Item(uint64_t result, unsigned int a2)
{
  if (a2 > 1)
  {
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 64) = a2;
  return result;
}

ValueMetadata *type metadata accessor for LinkDetailViewController.Item()
{
  return &type metadata for LinkDetailViewController.Item;
}

uint64_t storeEnumTagSinglePayload for LinkDetailViewController.Section(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BD3723D4 + 4 * byte_1BD65A035[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BD372408 + 4 * byte_1BD65A030[v4]))();
}

uint64_t sub_1BD372408(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD372410(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD372418);
  return result;
}

uint64_t sub_1BD372424(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD37242CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BD372430(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD372438(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void *type metadata accessor for LinkDetailViewController.Section()
{
  return &unk_1E762F830;
}

void associated type witness table accessor for CaseIterable.AllCases : Collection in LinkDetailViewController.Section()
{
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type [LinkDetailViewController.Section] and conformance [A], &demangling cache variable for type metadata for [LinkDetailViewController.Section], MEMORY[0x1E0DEAF50]);
}

unint64_t lazy protocol witness table accessor for type LinkDetailViewController.Section and conformance LinkDetailViewController.Section()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type LinkDetailViewController.Section and conformance LinkDetailViewController.Section;
  if (!lazy protocol witness table cache variable for type LinkDetailViewController.Section and conformance LinkDetailViewController.Section)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for LinkDetailViewController.Section, &unk_1E762F830);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LinkDetailViewController.Section and conformance LinkDetailViewController.Section);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type LinkDetailViewController.Section and conformance LinkDetailViewController.Section;
  if (!lazy protocol witness table cache variable for type LinkDetailViewController.Section and conformance LinkDetailViewController.Section)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for LinkDetailViewController.Section, &unk_1E762F830);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LinkDetailViewController.Section and conformance LinkDetailViewController.Section);
  }
  return result;
}

uint64_t sub_1BD3724C0()
{
  swift_unknownObjectWeakDestroy();
  OUTLINED_FUNCTION_58();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in LinkDetailViewController.cellProvider.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return closure #1 in closure #1 in LinkDetailViewController.cellProvider.getter(a1, a2, a3, v3);
}

uint64_t sub_1BD3724E4()
{
  swift_unknownObjectUnownedDestroy();
  OUTLINED_FUNCTION_58();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in LinkDetailViewController.supplementaryViewProvider.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return closure #1 in closure #1 in LinkDetailViewController.supplementaryViewProvider.getter(a1, a2, a3);
}

id @nonobjc UICollectionViewCompositionalLayout.init(sectionProvider:configuration:)(uint64_t a1, uint64_t a2, void *a3)
{
  void *v3;
  void *v5;
  id v6;
  _QWORD v8[6];

  v8[4] = a1;
  v8[5] = a2;
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 1107296256;
  v8[2] = thunk for @escaping @callee_guaranteed (@unowned Int, @guaranteed NSCollectionLayoutEnvironment) -> (@owned NSCollectionLayoutSection?);
  v8[3] = &block_descriptor_65;
  v5 = _Block_copy(v8);
  v6 = objc_msgSend(v3, sel_initWithSectionProvider_configuration_, v5, a3);

  _Block_release(v5);
  swift_release();
  return v6;
}

uint64_t sub_1BD3725A4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_58();
  return swift_deallocObject();
}

void partial apply for closure #1 in LinkDetailViewController.showUserNotificationForDeleteInvite()(char a1)
{
  uint64_t v1;

  closure #1 in LinkDetailViewController.showUserNotificationForDeleteInvite()(a1, *(id *)(v1 + 16));
}

uint64_t partial apply for closure #1 in LinkDetailViewController.initializeDataSource()(unsigned __int8 *a1)
{
  uint64_t v1;

  return closure #1 in LinkDetailViewController.initializeDataSource()(a1, v1, (uint64_t)&outlined read-only object #0 of closure #1 in LinkDetailViewController.initializeDataSource(), 3);
}

void partial apply for closure #2 in LinkDetailViewController.initializeDataSource()(uint64_t *a1)
{
  uint64_t v1;

  closure #2 in LinkDetailViewController.initializeDataSource()(a1, v1);
}

uint64_t partial apply for closure #3 in LinkDetailViewController.initializeDataSource()(unsigned __int8 *a1)
{
  uint64_t v1;

  return closure #1 in LinkDetailViewController.initializeDataSource()(a1, v1, (uint64_t)&outlined read-only object #0 of closure #3 in LinkDetailViewController.initializeDataSource(), 2);
}

uint64_t partial apply for closure #4 in LinkDetailViewController.initializeDataSource()(uint64_t a1)
{
  uint64_t v1;

  return closure #4 in LinkDetailViewController.initializeDataSource()(a1, v1);
}

uint64_t partial apply for closure #1 in LinkDetailViewController.createShareCellRegistration()(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return closure #1 in LinkDetailViewController.createShareCellRegistration()(a1, a2, a3, v3);
}

uint64_t partial apply for closure #1 in LinkDetailViewController.createDeleteCellRegistration()(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return closure #1 in LinkDetailViewController.createDeleteCellRegistration()(a1, a2, a3, v3);
}

void partial apply for closure #1 in LinkDetailViewController.createCellRegistration()(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  closure #1 in LinkDetailViewController.createCellRegistration()(a1, a2, a3, v3);
}

void *outlined copy of LinkDetailParticipantCollectionViewCell.Style(void *result, uint64_t a2, unint64_t a3)
{
  id v3;

  if (a3 >= 2)
  {
    v3 = result;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return (void *)swift_bridgeObjectRetain();
  }
  return result;
}

void outlined consume of LinkDetailParticipantCollectionViewCell.Style(void *a1, uint64_t a2, unint64_t a3)
{
  if (a3 >= 2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
}

void PushToTalkTalkPillButton.__allocating_init(viewModel:)()
{
  uint64_t v0;

  OUTLINED_FUNCTION_16_1();
  PushToTalkTalkPillButton.init(viewModel:)(v0);
  OUTLINED_FUNCTION_0();
}

id PushToTalkTalkPillButton.pillButtonMinimumWidthConstraint.getter()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  double v6;
  void *v7;
  id v8;

  v1 = OBJC_IVAR____TtC15ConversationKit24PushToTalkTalkPillButton____lazy_storage___pillButtonMinimumWidthConstraint;
  v2 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit24PushToTalkTalkPillButton____lazy_storage___pillButtonMinimumWidthConstraint];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtC15ConversationKit24PushToTalkTalkPillButton____lazy_storage___pillButtonMinimumWidthConstraint];
  }
  else
  {
    v4 = objc_msgSend(v0, sel_widthAnchor);
    v5 = objc_msgSend(v4, sel_constraintGreaterThanOrEqualToConstant_, 77.0);

    LODWORD(v6) = 1148846080;
    objc_msgSend(v5, sel_setPriority_, v6);
    v7 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v5;
    v3 = v5;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

char *PushToTalkTalkPillButton.init(viewModel:)(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  objc_class *v6;
  NSBundle v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  _QWORD v19[5];

  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit24PushToTalkTalkPillButton_controller] = 0;
  v3 = OBJC_IVAR____TtC15ConversationKit24PushToTalkTalkPillButton_stateConfiguration;
  v4 = one-time initialization token for pttTalkButtonBanner;
  v5 = v1;
  if (v4 != -1)
    swift_once();
  *(_QWORD *)&v5[v3] = static Colors.InCallControls.pttTalkButtonBanner;
  *(_QWORD *)&v5[OBJC_IVAR____TtC15ConversationKit24PushToTalkTalkPillButton____lazy_storage___pillButtonMinimumWidthConstraint] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC15ConversationKit24PushToTalkTalkPillButton_viewModel] = a1;
  swift_bridgeObjectRetain();
  swift_retain();

  v6 = (objc_class *)objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  OUTLINED_FUNCTION_2_17();
  v7.super.isa = v6;
  v12 = OUTLINED_FUNCTION_49_2(v8, v9, v10, v11, v7);
  v14 = v13;

  v19[3] = &type metadata for SymbolImageDescribers.ConversationControls;
  v19[4] = &protocol witness table for SymbolImageDescribers.ConversationControls;
  LOBYTE(v19[0]) = 15;
  v15 = *(_QWORD *)&v5[v3];
  swift_bridgeObjectRetain();
  v16 = (char *)PillButton.init(title:symbol:stateConfiguration:context:)(v12, v14, (uint64_t)v19, v15, 0);
  v17 = PushToTalkTalkPillButton.pillButtonMinimumWidthConstraint.getter();
  objc_msgSend(v17, sel_setActive_, 1, 0xE000000000000000, v19[0]);

  type metadata accessor for PushToTalkTalkButtonController();
  swift_allocObject();
  *(_QWORD *)&v16[OBJC_IVAR____TtC15ConversationKit24PushToTalkTalkPillButton_controller] = PushToTalkTalkButtonController.init(button:viewModel:)(v16, a1);
  swift_release();
  return v16;
}

void PushToTalkTalkPillButton.__allocating_init(coder:)()
{
  void *v0;

  objc_msgSend(OUTLINED_FUNCTION_16_1(), sel_initWithCoder_, v0);

  OUTLINED_FUNCTION_0();
}

void PushToTalkTalkPillButton.init(coder:)()
{
  char *v0;
  uint64_t v1;

  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit24PushToTalkTalkPillButton_controller] = 0;
  v1 = OBJC_IVAR____TtC15ConversationKit24PushToTalkTalkPillButton_stateConfiguration;
  if (one-time initialization token for pttTalkButtonBanner != -1)
    swift_once();
  *(_QWORD *)&v0[v1] = static Colors.InCallControls.pttTalkButtonBanner;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit24PushToTalkTalkPillButton____lazy_storage___pillButtonMinimumWidthConstraint] = 0;
  swift_bridgeObjectRetain();

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void PushToTalkTalkPillButton.computedState.getter()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit24PushToTalkTalkPillButton_controller);
  if (v1)
  {
    v2 = *(void (**)(uint64_t))(*(_QWORD *)v1 + 216);
    v3 = swift_retain();
    v2(v3);
    swift_release();
  }
  OUTLINED_FUNCTION_0();
}

Swift::Void __swiftcall PushToTalkTalkPillButton.updateConfiguration()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  _BYTE *v5;
  char v6;
  objc_class *v8;
  objc_class *v9;
  NSBundle v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v20[24];
  ValueMetadata *v21;
  _UNKNOWN **v22;
  objc_super v23;
  _BYTE v24[64];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIButton.Configuration?);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = &v20[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = (*(uint64_t (**)(__n128))(**(_QWORD **)((char *)v0
                                                       + OBJC_IVAR____TtC15ConversationKit24PushToTalkTalkPillButton_viewModel)
                                         + 112))(v3);
  if ((v6 & 0xFE) == 2 || (v6 & 1) == 0)
  {
    v8 = (objc_class *)type metadata accessor for PushToTalkTalkPillButton();
    v23.receiver = v0;
    v23.super_class = v8;
    objc_msgSendSuper2(&v23, sel_updateConfiguration);
  }
  else
  {
    v9 = (objc_class *)objc_msgSend((id)objc_opt_self(), sel_conversationKit);
    OUTLINED_FUNCTION_2_17();
    v10.super.isa = v9;
    v15 = OUTLINED_FUNCTION_49_2(v11, v12, v13, v14, v10);
    v17 = v16;

    v21 = &type metadata for SymbolImageDescribers.ConversationControls;
    v22 = &protocol witness table for SymbolImageDescribers.ConversationControls;
    v20[0] = 16;
    (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v1) + 0xC8))();
    specialized Dictionary.subscript.getter();
    static UIButton.Configuration.base(title:symbol:shape:style:context:)(v15, v17, (uint64_t)v20, 2, (uint64_t)v24, 0, (uint64_t)v5);
    swift_bridgeObjectRelease();
    outlined release of ButtonStyle?((uint64_t)v24);
    outlined destroy of SymbolImageDescribing?((uint64_t)v20);
    v18 = type metadata accessor for UIButton.Configuration();
    __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v18);
    UIButton.configuration.setter();
  }
}

uint64_t type metadata accessor for PushToTalkTalkPillButton()
{
  return objc_opt_self();
}

void PushToTalkTalkPillButton.__allocating_init(title:symbol:stateConfiguration:context:)()
{
  OUTLINED_FUNCTION_2_106();
  __break(1u);
}

void PushToTalkTalkPillButton.init(title:symbol:stateConfiguration:context:)()
{
  OUTLINED_FUNCTION_2_106();
  __break(1u);
}

void PushToTalkTalkPillButton.__ivar_destroyer()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC15ConversationKit24PushToTalkTalkPillButton____lazy_storage___pillButtonMinimumWidthConstraint));
}

id PushToTalkTalkPillButton.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PushToTalkTalkPillButton();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for PushToTalkTalkPillButton()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PushToTalkTalkPillButton.__allocating_init(viewModel:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 368))();
}

uint64_t AnsweringMachineTrackingServiceAdapter.logger.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + direct field offset for AnsweringMachineTrackingServiceAdapter.logger;
  v4 = OUTLINED_FUNCTION_17_2();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AnsweringMachineTrackingServiceAdapter.answeringMachine.getter()
{
  return swift_retain();
}

uint64_t key path getter for AnsweringMachineTrackingServiceAdapter.onResult : <A>AnsweringMachineTrackingServiceAdapter<A>@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;

  v5 = *(_QWORD *)(a3 + a2 - 8);
  v6 = (uint64_t *)(*a1 + direct field offset for AnsweringMachineTrackingServiceAdapter.onResult);
  swift_beginAccess();
  v7 = *v6;
  v8 = v6[1];
  if (v7)
  {
    v9 = (_QWORD *)swift_allocObject();
    v9[2] = v5;
    v9[3] = v7;
    v9[4] = v8;
    v10 = &async function pointer to partial apply for thunk for @escaping @callee_guaranteed @async (@in_guaranteed A, @unowned CallScreeningTrackingStateResult) -> ();
  }
  else
  {
    v10 = 0;
    v9 = 0;
  }
  *a4 = v10;
  a4[1] = v9;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v7);
}

uint64_t thunk for @escaping @callee_guaranteed @async (@in_guaranteed A, @unowned CallScreeningTrackingStateResult) -> ()(uint64_t a1, uint64_t a2, unsigned __int8 *a3, int *a4)
{
  uint64_t v4;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t);

  v6 = *a3;
  v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)a4 + *a4);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v7;
  *v7 = v4;
  v7[1] = partial apply for closure #1 in VideoMessageInboxController.updateCallItems();
  return v9(a2, v6);
}

uint64_t key path setter for AnsweringMachineTrackingServiceAdapter.onResult : <A>AnsweringMachineTrackingServiceAdapter<A>(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  void *v9;
  uint64_t *v10;
  uint64_t v11;

  v5 = *a1;
  v6 = a1[1];
  if (*a1)
  {
    v7 = *(_QWORD *)(a4 + a3 - 8);
    v8 = (_QWORD *)swift_allocObject();
    v8[2] = v7;
    v8[3] = v5;
    v8[4] = v6;
    v9 = &async function pointer to partial apply for thunk for @escaping @callee_guaranteed @async (@in_guaranteed A, @in_guaranteed CallScreeningTrackingStateResult) -> (@out ());
  }
  else
  {
    v9 = 0;
    v8 = 0;
  }
  v10 = (uint64_t *)(*a2 + direct field offset for AnsweringMachineTrackingServiceAdapter.onResult);
  swift_beginAccess();
  v11 = *v10;
  *v10 = (uint64_t)v9;
  v10[1] = (uint64_t)v8;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v5);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v11);
}

uint64_t thunk for @escaping @callee_guaranteed @async (@in_guaranteed A, @in_guaranteed CallScreeningTrackingStateResult) -> (@out ())(uint64_t a1, char a2, int *a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  *(_BYTE *)(v3 + 24) = a2 & 1;
  v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v4;
  *v4 = v3;
  v4[1] = partial apply for closure #2 in CallScreeningEndingState.enteredState();
  return v6();
}

uint64_t AnsweringMachineTrackingServiceAdapter.onResult.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + direct field offset for AnsweringMachineTrackingServiceAdapter.onResult);
  OUTLINED_FUNCTION_2_0();
  v2 = *v1;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(*v1);
  return v2;
}

uint64_t AnsweringMachineTrackingServiceAdapter.onResult.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;

  OUTLINED_FUNCTION_6_6();
  v3 = (uint64_t *)(v1 + direct field offset for AnsweringMachineTrackingServiceAdapter.onResult);
  OUTLINED_FUNCTION_2_0();
  v4 = *v3;
  *v3 = v2;
  v3[1] = v0;
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v4);
}

uint64_t (*AnsweringMachineTrackingServiceAdapter.onResult.modify())()
{
  OUTLINED_FUNCTION_2_0();
  return CallRecordingPillViewController.cancellable.modify;
}

uint64_t AnsweringMachineTrackingServiceAdapter.__allocating_init(logger:answeringMachine:)()
{
  OUTLINED_FUNCTION_6_6();
  swift_allocObject();
  return AnsweringMachineTrackingServiceAdapter.init(logger:answeringMachine:)();
}

uint64_t AnsweringMachineTrackingServiceAdapter.init(logger:answeringMachine:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_6_6();
  v3 = (_QWORD *)(v1 + direct field offset for AnsweringMachineTrackingServiceAdapter.onResult);
  *v3 = 0;
  v3[1] = 0;
  v4 = (_QWORD *)(v1 + direct field offset for AnsweringMachineTrackingServiceAdapter.currentTrackedCallTask);
  v4[1] = 0;
  v4[2] = 0;
  *v4 = 0;
  v5 = v1 + direct field offset for AnsweringMachineTrackingServiceAdapter.logger;
  v6 = OUTLINED_FUNCTION_17_2();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v5, v2, v6);
  *(_QWORD *)(v1 + direct field offset for AnsweringMachineTrackingServiceAdapter.answeringMachine) = v0;
  return CallScreeningTrackingService.init()();
}

void AnsweringMachineTrackingServiceAdapter.startTrackingCall(requester:callUUID:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v4 = v3;
  v30 = a2;
  v7 = *(_QWORD *)(*(_QWORD *)v3 + 112);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](a1);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  static TaskPriority.userInitiated.getter();
  v13 = OUTLINED_FUNCTION_415();
  OUTLINED_FUNCTION_27_4((uint64_t)v12, v14, v15, v13);
  v16 = OUTLINED_FUNCTION_15();
  v29 = v4;
  swift_weakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
  v17 = one-time initialization token for shared;
  swift_retain();
  OUTLINED_FUNCTION_124();
  if (v17 != -1)
    swift_once();
  v18 = static CKStateMachineActor.shared;
  v19 = lazy protocol witness table accessor for type TranscriptionViewModel and conformance TranscriptionViewModel((unint64_t *)&lazy protocol witness table cache variable for type CKStateMachineActor.ActorType and conformance CKStateMachineActor.ActorType, (uint64_t (*)(uint64_t))type metadata accessor for CKStateMachineActor.ActorType, (uint64_t)&protocol conformance descriptor for CKStateMachineActor.ActorType);
  v20 = (*(unsigned __int8 *)(v8 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v21 = (char *)swift_allocObject();
  *((_QWORD *)v21 + 2) = v18;
  *((_QWORD *)v21 + 3) = v19;
  *((_QWORD *)v21 + 4) = v7;
  *((_QWORD *)v21 + 5) = v16;
  v22 = v30;
  *((_QWORD *)v21 + 6) = v30;
  *((_QWORD *)v21 + 7) = a3;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v21[v20], (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  swift_retain();
  swift_release();
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
  v24 = v23;
  v25 = (uint64_t *)(v29 + direct field offset for AnsweringMachineTrackingServiceAdapter.currentTrackedCallTask);
  OUTLINED_FUNCTION_2_0();
  v26 = *v25;
  v27 = v25[1];
  *v25 = v22;
  v25[1] = a3;
  v25[2] = v24;
  OUTLINED_FUNCTION_124();
  outlined consume of (callUUID: String, Task<(), Never>)?(v26, v27);
  OUTLINED_FUNCTION_52_1();
}

uint64_t sub_1BD3734A0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t closure #1 in AnsweringMachineTrackingServiceAdapter.startTrackingCall(requester:callUUID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[11] = a6;
  v7[12] = a7;
  v7[9] = a4;
  v7[10] = a5;
  if (one-time initialization token for shared != -1)
    swift_once();
  v7[13] = static CKStateMachineActor.shared;
  return swift_task_switch();
}

uint64_t closure #1 in AnsweringMachineTrackingServiceAdapter.startTrackingCall(requester:callUUID:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t (*v15)(void);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  OUTLINED_FUNCTION_32_8();
  v18 = v1;
  v19 = v2;
  v17 = v0;
  OUTLINED_FUNCTION_2_0();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 112) = Strong;
  if (Strong)
  {
    v4 = Strong;
    v5 = (uint64_t *)(Strong + direct field offset for AnsweringMachineTrackingServiceAdapter.onResult);
    OUTLINED_FUNCTION_2_0();
    v6 = *v5;
    *(_QWORD *)(v0 + 120) = *v5;
    *(_QWORD *)(v0 + 128) = v5[1];
    if (v6)
    {
      v15 = (uint64_t (*)(void))((char *)&async function pointer to specialized AnsweringMachineService.handleNewIncomingCall(_:)
                              + async function pointer to specialized AnsweringMachineService.handleNewIncomingCall(_:));
      swift_retain();
      v7 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 136) = v7;
      *v7 = v0;
      v7[1] = closure #1 in AnsweringMachineTrackingServiceAdapter.startTrackingCall(requester:callUUID:);
      return OUTLINED_FUNCTION_11_82(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), v15);
    }
    v9 = AnsweringMachineTrackingServiceAdapter.description.getter();
    v11 = v10;
    v12 = (v4 + direct field offset for AnsweringMachineTrackingServiceAdapter.logger);
    swift_bridgeObjectRetain();
    Logger.logObject.getter();
    v13 = OUTLINED_FUNCTION_232();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)OUTLINED_FUNCTION_105();
      v16 = OUTLINED_FUNCTION_105();
      *(_DWORD *)v14 = 136446210;
      OUTLINED_FUNCTION_35_0();
      *(_QWORD *)(v0 + 64) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v9, v11, &v16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_11_11();
      OUTLINED_FUNCTION_48(&dword_1BD004000, v12, v13, "%{public}s Unable to update with onResult as its nil", v14);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_19();
    OUTLINED_FUNCTION_19_1();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  int *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;

  v2 = v0;
  v3 = *(int **)(*v1 + 120);
  v9 = *v1;
  *(_QWORD *)(v9 + 144) = v2;
  swift_task_dealloc();
  v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)v3 + *v3);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v9 + 152) = v4;
  *v4 = v9;
  if (v2)
  {
    v5 = OUTLINED_FUNCTION_52_30((uint64_t)v4, (uint64_t)closure #1 in AnsweringMachineTrackingServiceAdapter.startTrackingCall(requester:callUUID:));
    v6 = 1;
  }
  else
  {
    v5 = OUTLINED_FUNCTION_52_30((uint64_t)v4, (uint64_t)closure #1 in AnsweringMachineTrackingServiceAdapter.startTrackingCall(requester:callUUID:));
    v6 = 0;
  }
  return v8(v5, v6);
}

{
  OUTLINED_FUNCTION_1_6();
  return OUTLINED_FUNCTION_4_4();
}

{
  uint64_t v0;

  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(*(_QWORD *)(v0 + 120));
  swift_release();
  return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v0 + 8));
}

{
  OUTLINED_FUNCTION_1_6();
  return OUTLINED_FUNCTION_4_4();
}

{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 144);
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(*(_QWORD *)(v0 + 120));
  OUTLINED_FUNCTION_19();

  return OUTLINED_FUNCTION_6(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t AnsweringMachineTrackingServiceAdapter.description.getter()
{
  uint64_t v0;
  Swift::String v1;
  uint64_t v2;
  Swift::String v3;

  _StringGuts.grow(_:)(65);
  v1._object = (void *)0x80000001BD687D10;
  v1._countAndFlagsBits = 0xD00000000000003FLL;
  String.append(_:)(v1);
  v2 = v0 + direct field offset for AnsweringMachineTrackingServiceAdapter.currentTrackedCallTask;
  OUTLINED_FUNCTION_2_0();
  if (*(_QWORD *)(v2 + 8))
    OUTLINED_FUNCTION_124();
  swift_endAccess();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for String?);
  v3._countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v3);
  OUTLINED_FUNCTION_13_3();
  return 0;
}

uint64_t specialized AnsweringMachineService.handleNewIncomingCall(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[9] = a2;
  v3[10] = v2;
  v3[8] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  v3[11] = swift_task_alloc();
  if (one-time initialization token for shared != -1)
    swift_once();
  v3[12] = static CallScreeningActor.shared;
  return swift_task_switch();
}

uint64_t specialized AnsweringMachineService.handleNewIncomingCall(_:)()
{
  NSObject *v0;
  uint64_t v1;
  os_log_type_t v2;
  NSObject *v3;
  os_log_type_t v4;
  unint64_t v5;
  uint8_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v2 = v1 + 16;
  OUTLINED_FUNCTION_38_46();
  v3 = Logger.logObject.getter();
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(_QWORD *)(v1 + 72);
    v37 = *(_QWORD *)(v1 + 64);
    v6 = (uint8_t *)OUTLINED_FUNCTION_105();
    v39 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v6 = 136446210;
    *(_QWORD *)(v1 + 56) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v37, v5, &v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_21_0();
    OUTLINED_FUNCTION_48(&dword_1BD004000, v3, v4, "New incoming call: %{public}s", v6);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  OUTLINED_FUNCTION_133();
  v7 = (uint64_t *)(*(_QWORD *)(v1 + 80) + *(_QWORD *)(**(_QWORD **)(v1 + 80) + 144));
  OUTLINED_FUNCTION_2_0();
  v8 = *v7;
  v9 = MEMORY[0x1E0DEE9C0];
  if (!*v7)
  {
    v14 = *(_QWORD *)(v1 + 72);
    v13 = v14;
    goto LABEL_20;
  }
  v11 = v7[1];
  v10 = v7[2];
  swift_bridgeObjectRetain();
  if (!v10)
  {
    v38 = *(_QWORD *)(v1 + 72);
    goto LABEL_14;
  }
  if (v11 == *(_QWORD *)(v1 + 64) && v10 == *(_QWORD *)(v1 + 72))
  {
    OUTLINED_FUNCTION_21_0();
  }
  else
  {
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)();
    OUTLINED_FUNCTION_21_0();
    if ((v2 & 1) == 0)
    {
      v8 = *v7;
      v13 = *(_QWORD *)(v1 + 72);
      if (*v7)
      {
        v38 = *(_QWORD *)(v1 + 72);
        v11 = v7[1];
LABEL_14:
        v15 = v7[2];
        swift_retain_n();
        swift_bridgeObjectRetain_n();
        outlined copy of (task: Task<(), Error>, call: String)?(v8);
        v16 = Logger.logObject.getter();
        v17 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v16, v17))
        {
          v18 = (uint8_t *)OUTLINED_FUNCTION_105();
          v39 = OUTLINED_FUNCTION_105();
          *(_DWORD *)v18 = 136446210;
          OUTLINED_FUNCTION_27_0();
          *(_QWORD *)(v1 + 40) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v11, v15, &v39);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          OUTLINED_FUNCTION_19_1();
          OUTLINED_FUNCTION_27_0();
          OUTLINED_FUNCTION_48(&dword_1BD004000, v16, v17, "Removing call: %{public}s", v18);
          OUTLINED_FUNCTION_21();
          OUTLINED_FUNCTION_60();
        }
        OUTLINED_FUNCTION_49_36();
        OUTLINED_FUNCTION_19_1();

        v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
        MEMORY[0x1C3B73268](v8, v9 + 8, v23, MEMORY[0x1E0DEDB38]);
        OUTLINED_FUNCTION_49_36();
        OUTLINED_FUNCTION_21_0();
        v14 = *(_QWORD *)(v1 + 72);
        v13 = v38;
        goto LABEL_20;
      }
      v14 = *(_QWORD *)(v1 + 72);
LABEL_20:
      v25 = *(_QWORD *)(v1 + 80);
      v24 = *(_QWORD *)(v1 + 88);
      v26 = *(_QWORD *)(v1 + 64);
      static TaskPriority.userInitiated.getter();
      v27 = OUTLINED_FUNCTION_415();
      OUTLINED_FUNCTION_27_4(v24, v28, v29, v27);
      v30 = static CallScreeningActor.shared;
      v31 = lazy protocol witness table accessor for type TranscriptionViewModel and conformance TranscriptionViewModel((unint64_t *)&lazy protocol witness table cache variable for type CallScreeningActor.ActorType and conformance CallScreeningActor.ActorType, (uint64_t (*)(uint64_t))type metadata accessor for CallScreeningActor.ActorType, (uint64_t)&protocol conformance descriptor for CallScreeningActor.ActorType);
      v32 = (_QWORD *)OUTLINED_FUNCTION_15();
      v32[2] = v30;
      v32[3] = v31;
      v32[4] = v25;
      v32[5] = v26;
      v32[6] = v14;
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_14_11();
      swift_retain();
      v33 = _sScTss5Error_pRs_rlE8priority9operationScTyxsAA_pGScPSg_xyYaKYAcntcfCyt_Tgm5(v24, (uint64_t)&async function pointer to partial apply for specialized closure #1 in AnsweringMachineService.handleNewIncomingCall(_:), (uint64_t)v32);
      *(_QWORD *)(v1 + 104) = v33;
      v34 = *v7;
      *v7 = v33;
      v7[1] = v26;
      v7[2] = v13;
      swift_bridgeObjectRetain();
      swift_retain();
      outlined consume of (task: Task<(), Error>, call: String)?(v34);
      v35 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v1 + 112) = v35;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
      *v35 = v1;
      v35[1] = specialized AnsweringMachineService.handleNewIncomingCall(_:);
      return Task.value.getter();
    }
  }
  swift_bridgeObjectRetain();
  Logger.logObject.getter();
  v19 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_5_3(v19))
  {
    v20 = *(_QWORD *)(v1 + 64);
    v21 = (uint8_t *)OUTLINED_FUNCTION_105();
    v39 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v21 = 136446210;
    *(_QWORD *)(v1 + 48) = OUTLINED_FUNCTION_37_40(v20, v22, &v39);
    OUTLINED_FUNCTION_42_36();
    OUTLINED_FUNCTION_30_4();
    OUTLINED_FUNCTION_48(&dword_1BD004000, v0, v2, "New incoming call already being handled: %{public}s", v21);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  OUTLINED_FUNCTION_30_4();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v1 + 8))();
}

{
  OUTLINED_FUNCTION_16_70();
  return OUTLINED_FUNCTION_2_8();
}

{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v0 + 8));
}

Swift::Void __swiftcall AnsweringMachineTrackingServiceAdapter.stopTrackingCall(callUUID:)(Swift::String callUUID)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  OUTLINED_FUNCTION_6_6();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (uint64_t *)(v2 + direct field offset for AnsweringMachineTrackingServiceAdapter.currentTrackedCallTask);
  OUTLINED_FUNCTION_2_0();
  v8 = v7[1];
  if (v8
    && ((v9 = *v7, v10 = v7[2], v9 == v3) ? (v11 = v8 == v1) : (v11 = 0),
        v11 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
  {
    OUTLINED_FUNCTION_35_0();
    OUTLINED_FUNCTION_14_11();
    static TaskPriority.userInitiated.getter();
    v12 = OUTLINED_FUNCTION_415();
    OUTLINED_FUNCTION_27_4((uint64_t)v6, v13, v14, v12);
    v15 = one-time initialization token for shared;
    OUTLINED_FUNCTION_35_0();
    OUTLINED_FUNCTION_14_11();
    swift_retain();
    if (v15 != -1)
      swift_once();
    v16 = static CKStateMachineActor.shared;
    v17 = lazy protocol witness table accessor for type TranscriptionViewModel and conformance TranscriptionViewModel((unint64_t *)&lazy protocol witness table cache variable for type CKStateMachineActor.ActorType and conformance CKStateMachineActor.ActorType, (uint64_t (*)(uint64_t))type metadata accessor for CKStateMachineActor.ActorType, (uint64_t)&protocol conformance descriptor for CKStateMachineActor.ActorType);
    v18 = (_QWORD *)OUTLINED_FUNCTION_15();
    v18[2] = v16;
    v18[3] = v17;
    v18[4] = v9;
    v18[5] = v8;
    v18[6] = v10;
    v18[7] = v2;
    swift_retain();
    _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
    OUTLINED_FUNCTION_27_0();
    OUTLINED_FUNCTION_133();
    OUTLINED_FUNCTION_19();
  }
  else
  {
    v19 = AnsweringMachineTrackingServiceAdapter.description.getter();
    v20 = (v2 + direct field offset for AnsweringMachineTrackingServiceAdapter.logger);
    swift_bridgeObjectRetain_n();
    OUTLINED_FUNCTION_86();
    Logger.logObject.getter();
    v21 = OUTLINED_FUNCTION_232();
    if (OUTLINED_FUNCTION_4_14(v21))
    {
      v22 = OUTLINED_FUNCTION_105();
      v27 = OUTLINED_FUNCTION_105();
      *(_DWORD *)v22 = 136446466;
      OUTLINED_FUNCTION_86();
      v26 = OUTLINED_FUNCTION_37_40(v19, v23, &v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_11_11();
      *(_WORD *)(v22 + 12) = 2082;
      OUTLINED_FUNCTION_124();
      v26 = OUTLINED_FUNCTION_39_7(v3, v24, &v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_11_11();
      _os_log_impl(&dword_1BD004000, v20, (os_log_type_t)v8, "%{public}s Unable to stop tracking call %{public}s", (uint8_t *)v22, 0x16u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_60();
    }
    OUTLINED_FUNCTION_19_1();
    OUTLINED_FUNCTION_19_1();

  }
  OUTLINED_FUNCTION_52_1();
}

uint64_t closure #1 in AnsweringMachineTrackingServiceAdapter.stopTrackingCall(callUUID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;

  *(_QWORD *)(v7 + 40) = a6;
  *(_QWORD *)(v7 + 48) = a7;
  if (one-time initialization token for shared != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t closure #1 in AnsweringMachineTrackingServiceAdapter.stopTrackingCall(callUUID:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 48);
  MEMORY[0x1C3B73268](*(_QWORD *)(v0 + 40), MEMORY[0x1E0DEE9C0] + 8, MEMORY[0x1E0DEDCE8], MEMORY[0x1E0DEDD18]);
  v2 = (uint64_t *)(v1 + direct field offset for AnsweringMachineTrackingServiceAdapter.currentTrackedCallTask);
  OUTLINED_FUNCTION_2_0();
  v3 = *v2;
  v4 = v2[1];
  v2[1] = 0;
  v2[2] = 0;
  *v2 = 0;
  outlined consume of (callUUID: String, Task<(), Never>)?(v3, v4);
  return OUTLINED_FUNCTION_6(*(uint64_t (**)(void))(v0 + 8));
}

void AnsweringMachineTrackingServiceAdapter.__allocating_init()()
{
  swift_allocObject();
  AnsweringMachineTrackingServiceAdapter.init()();
}

void AnsweringMachineTrackingServiceAdapter.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t AnsweringMachineTrackingServiceAdapter.__ivar_destroyer()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + direct field offset for AnsweringMachineTrackingServiceAdapter.logger;
  v2 = OUTLINED_FUNCTION_17_2();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(*(_QWORD *)(v0 + direct field offset for AnsweringMachineTrackingServiceAdapter.onResult));
  return outlined consume of (callUUID: String, Task<(), Never>)?(*(_QWORD *)(v0 + direct field offset for AnsweringMachineTrackingServiceAdapter.currentTrackedCallTask), *(_QWORD *)(v0 + direct field offset for AnsweringMachineTrackingServiceAdapter.currentTrackedCallTask + 8));
}

uint64_t AnsweringMachineTrackingServiceAdapter.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = CallScreeningTrackingService.deinit();
  v1 = v0 + direct field offset for AnsweringMachineTrackingServiceAdapter.logger;
  v2 = OUTLINED_FUNCTION_17_2();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(*(_QWORD *)(v0 + direct field offset for AnsweringMachineTrackingServiceAdapter.onResult));
  outlined consume of (callUUID: String, Task<(), Never>)?(*(_QWORD *)(v0 + direct field offset for AnsweringMachineTrackingServiceAdapter.currentTrackedCallTask), *(_QWORD *)(v0 + direct field offset for AnsweringMachineTrackingServiceAdapter.currentTrackedCallTask + 8));
  return v0;
}

uint64_t AnsweringMachineTrackingServiceAdapter.__deallocating_deinit()
{
  AnsweringMachineTrackingServiceAdapter.deinit();
  return swift_deallocClassInstance();
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance AnsweringMachineTrackingServiceAdapter<A>()
{
  return AnsweringMachineTrackingServiceAdapter.description.getter();
}

uint64_t sub_1BD374568()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  OUTLINED_FUNCTION_67_1();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in AnsweringMachineTrackingServiceAdapter.startTrackingCall(requester:callUUID:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = v1[5];
  v5 = *(unsigned __int8 *)(*(_QWORD *)(v1[4] - 8) + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[6];
  v9 = v1[7];
  v10 = (uint64_t)v1 + ((v5 + 64) & ~v5);
  v11 = swift_task_alloc();
  v12 = (_QWORD *)OUTLINED_FUNCTION_61_5(v11);
  *v12 = v2;
  v12[1] = partial apply for closure #1 in VideoMessageInboxController.updateCallItems();
  return closure #1 in AnsweringMachineTrackingServiceAdapter.startTrackingCall(requester:callUUID:)(a1, v6, v7, v4, v8, v9, v10);
}

uint64_t outlined consume of (callUUID: String, Task<(), Never>)?(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t specialized AnsweringMachineService.requestToScreen(call:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  v3[2] = a1;
  v3[3] = a2;
  if (one-time initialization token for shared != -1)
    swift_once();
  v3[8] = static CallScreeningActor.shared;
  return swift_task_switch();
}

uint64_t specialized AnsweringMachineService.requestToScreen(call:)()
{
  NSObject *v0;
  os_log_type_t v1;
  _QWORD *v2;
  os_log_type_t v3;
  unint64_t v4;
  uint64_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v9;

  v2[9] = direct field offset for AnsweringMachineService.logger;
  OUTLINED_FUNCTION_38_46();
  Logger.logObject.getter();
  v3 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_5_3(v3))
  {
    v4 = v2[6];
    v5 = v2[5];
    v6 = (uint8_t *)OUTLINED_FUNCTION_105();
    v9 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v6 = 136446210;
    v2[4] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v5, v4, &v9);
    OUTLINED_FUNCTION_42_36();
    OUTLINED_FUNCTION_133();
    OUTLINED_FUNCTION_48(&dword_1BD004000, v0, v1, "Requesting to screen call: %{public}s", v6);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  OUTLINED_FUNCTION_13_3();
  v7 = v2[7];
  v2[10] = *(_QWORD *)(v7 + 32);
  v2[11] = *(_QWORD *)(v7 + 40);
  type metadata accessor for MainActor();
  v2[12] = static MainActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  return swift_task_switch();
}

{
  uint64_t v0;
  void (*v1)(uint64_t, _QWORD);

  v1 = *(void (**)(uint64_t, _QWORD))(v0 + 80);
  swift_release();
  v1(v0 + 16, 0);
  *(_QWORD *)(v0 + 104) = 0;
  return swift_task_switch();
}

uint64_t specialized AnsweringMachineService.requestToScreen(call:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  os_log_type_t v25;
  _DWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  OUTLINED_FUNCTION_31_8();
  a19 = v21;
  a20 = v22;
  a18 = v20;
  v23 = *(_QWORD *)(v20 + 16);
  v24 = (void *)(*(_QWORD *)(v20 + 56) + *(_QWORD *)(v20 + 72));
  OUTLINED_FUNCTION_124();
  Logger.logObject.getter();
  v25 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_4_14(v25))
  {
    v26 = (_DWORD *)OUTLINED_FUNCTION_105();
    a10 = OUTLINED_FUNCTION_105();
    *v26 = 136446210;
    *(_QWORD *)(v20 + 32) = OUTLINED_FUNCTION_39_7(v23, v27, &a10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_52_2(&dword_1BD004000, v28, v29, "Screening call: %{public}s");
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  OUTLINED_FUNCTION_13_3();
  return OUTLINED_FUNCTION_48_0(*(uint64_t (**)(void))(v20 + 8));
}

uint64_t specialized AnsweringMachineService.requestToScreen(call:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  void *v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  id v33;
  uint64_t v34;

  OUTLINED_FUNCTION_32_8();
  a21 = v24;
  a22 = v25;
  a20 = v23;
  v26 = *(_QWORD *)(v23 + 16);
  v27 = (*(_QWORD *)(v23 + 56) + *(_QWORD *)(v23 + 72));
  OUTLINED_FUNCTION_86();
  OUTLINED_FUNCTION_15_63();
  OUTLINED_FUNCTION_86();
  OUTLINED_FUNCTION_15_63();
  Logger.logObject.getter();
  v28 = OUTLINED_FUNCTION_232();
  if (OUTLINED_FUNCTION_5_3(v28))
  {
    v29 = *(void **)(v23 + 104);
    v30 = OUTLINED_FUNCTION_105();
    v31 = (_QWORD *)OUTLINED_FUNCTION_105();
    a10 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v30 = 136446466;
    *(_QWORD *)(v23 + 32) = OUTLINED_FUNCTION_37_40(v26, v32, &a10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_19_1();
    *(_WORD *)(v30 + 12) = 2112;
    v33 = v29;
    v34 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v23 + 32) = v34;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *v31 = v34;

    _os_log_impl(&dword_1BD004000, v27, v22, "Failed to screen call: %{public}s with error %@", (uint8_t *)v30, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_19_1();

  OUTLINED_FUNCTION_19_2();
  OUTLINED_FUNCTION_19_2();
  swift_willThrow();
  return OUTLINED_FUNCTION_165(*(uint64_t (**)(void))(v23 + 8));
}

uint64_t specialized closure #1 in AnsweringMachineService.handleNewIncomingCall(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[8] = a5;
  v6[9] = a6;
  v6[7] = a4;
  v6[2] = a5;
  v6[3] = a6;
  if (one-time initialization token for shared != -1)
    swift_once();
  v6[10] = static CallScreeningActor.shared;
  return swift_task_switch();
}

uint64_t specialized closure #1 in AnsweringMachineService.handleNewIncomingCall(_:)()
{
  void *v0;
  _QWORD *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t (*v10)(_QWORD *);

  OUTLINED_FUNCTION_32_8();
  v1[11] = direct field offset for AnsweringMachineService.logger;
  OUTLINED_FUNCTION_38_46();
  Logger.logObject.getter();
  v2 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_4_14(v2))
  {
    v3 = v1[8];
    OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_44_41(4.8751e-34);
    v1[6] = OUTLINED_FUNCTION_37_40(v3, v4, v5);
    OUTLINED_FUNCTION_42_36();
    OUTLINED_FUNCTION_30_4();
    OUTLINED_FUNCTION_52_2(&dword_1BD004000, v6, v7, "Waiting to screen call: %{public}s");
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  OUTLINED_FUNCTION_13_3();
  v10 = (uint64_t (*)(_QWORD *))(**(int **)(v1[7] + 16) + *(_QWORD *)(v1[7] + 16));
  v8 = (_QWORD *)swift_task_alloc();
  v1[12] = v8;
  *v8 = v1;
  v8[1] = specialized closure #1 in AnsweringMachineService.handleNewIncomingCall(_:);
  return v10(v1 + 2);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t (*v12)(void);

  OUTLINED_FUNCTION_32_8();
  if (*(_BYTE *)(v0 + 128) == 1 && (static Task<>.isCancelled.getter() & 1) == 0)
  {
    v10 = *(_QWORD *)(v0 + 16);
    v9 = *(_QWORD *)(v0 + 24);
    v12 = (uint64_t (*)(void))((char *)&async function pointer to specialized AnsweringMachineService.requestToScreen(call:)
                            + async function pointer to specialized AnsweringMachineService.requestToScreen(call:));
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 112) = v11;
    *v11 = v0;
    v11[1] = specialized closure #1 in AnsweringMachineService.handleNewIncomingCall(_:);
    return OUTLINED_FUNCTION_11_82(v10, v9, v12);
  }
  else
  {
    v1 = (void *)(*(_QWORD *)(v0 + 56) + *(_QWORD *)(v0 + 88));
    v2 = *(_QWORD *)(v0 + 16);
    OUTLINED_FUNCTION_124();
    Logger.logObject.getter();
    v3 = OUTLINED_FUNCTION_12_0();
    if (OUTLINED_FUNCTION_4_14(v3))
    {
      OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_44_41(4.8751e-34);
      *(_QWORD *)(v0 + 40) = OUTLINED_FUNCTION_39_7(v2, v4, v5);
      OUTLINED_FUNCTION_42_36();
      OUTLINED_FUNCTION_13_3();
      OUTLINED_FUNCTION_52_2(&dword_1BD004000, v6, v7, "Will not screen call: %{public}s");
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_13_3();
    return OUTLINED_FUNCTION_165(*(uint64_t (**)(void))(v0 + 8));
  }
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  os_log_type_t v3;
  _DWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_31_8();
  v2 = (void *)(*(_QWORD *)(v0 + 56) + *(_QWORD *)(v0 + 88));
  OUTLINED_FUNCTION_15_63();
  OUTLINED_FUNCTION_15_63();
  Logger.logObject.getter();
  v3 = OUTLINED_FUNCTION_232();
  if (OUTLINED_FUNCTION_4_14(v3))
  {
    v4 = (_DWORD *)OUTLINED_FUNCTION_105();
    v5 = (_QWORD *)OUTLINED_FUNCTION_105();
    *v4 = 138412290;
    OUTLINED_FUNCTION_15_63();
    v6 = _swift_stdlib_bridgeErrorToNSError();
    OUTLINED_FUNCTION_17_61(v6);
    *v5 = v1;
    OUTLINED_FUNCTION_19_2();
    OUTLINED_FUNCTION_19_2();
    OUTLINED_FUNCTION_52_2(&dword_1BD004000, v7, v8, "Failed to handle new incoming call with error: %@");
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  OUTLINED_FUNCTION_19_2();
  OUTLINED_FUNCTION_19_2();
  swift_willThrow();
  return OUTLINED_FUNCTION_48_0(*(uint64_t (**)(void))(v0 + 8));
}

{
  OUTLINED_FUNCTION_16_70();
  return OUTLINED_FUNCTION_2_8();
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  os_log_type_t v3;
  _DWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_31_8();
  v2 = (void *)(*(_QWORD *)(v0 + 56) + *(_QWORD *)(v0 + 88));
  OUTLINED_FUNCTION_15_63();
  OUTLINED_FUNCTION_15_63();
  Logger.logObject.getter();
  v3 = OUTLINED_FUNCTION_232();
  if (OUTLINED_FUNCTION_4_14(v3))
  {
    v4 = (_DWORD *)OUTLINED_FUNCTION_105();
    v5 = (_QWORD *)OUTLINED_FUNCTION_105();
    *v4 = 138412290;
    OUTLINED_FUNCTION_15_63();
    v6 = _swift_stdlib_bridgeErrorToNSError();
    OUTLINED_FUNCTION_17_61(v6);
    *v5 = v1;
    OUTLINED_FUNCTION_19_2();
    OUTLINED_FUNCTION_19_2();
    OUTLINED_FUNCTION_52_2(&dword_1BD004000, v7, v8, "Failed to handle new incoming call with error: %@");
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  OUTLINED_FUNCTION_19_2();
  OUTLINED_FUNCTION_19_2();
  swift_willThrow();
  return OUTLINED_FUNCTION_48_0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t specialized closure #1 in AnsweringMachineService.handleNewIncomingCall(_:)(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 104) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_BYTE *)(v4 + 128) = a1 & 1;
  return swift_task_switch();
}

uint64_t sub_1BD375150()
{
  OUTLINED_FUNCTION_67_1();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in AnsweringMachineTrackingServiceAdapter.stopTrackingCall(callUUID:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = v0[5];
  v4 = v0[6];
  v3 = v0[7];
  v5 = swift_task_alloc();
  v6 = (_QWORD *)OUTLINED_FUNCTION_61_5(v5);
  *v6 = v1;
  v6[1] = partial apply for closure #2 in CallScreeningEndingState.enteredState();
  v7 = OUTLINED_FUNCTION_35_34();
  return closure #1 in AnsweringMachineTrackingServiceAdapter.stopTrackingCall(callUUID:)(v7, v8, v9, v10, v2, v4, v3);
}

uint64_t sub_1BD375208()
{
  return 8;
}

_QWORD *sub_1BD375214(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t type metadata completion function for AnsweringMachineTrackingServiceAdapter()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Logger();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for AnsweringMachineTrackingServiceAdapter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AnsweringMachineTrackingServiceAdapter);
}

uint64_t method lookup function for AnsweringMachineTrackingServiceAdapter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AnsweringMachineTrackingServiceAdapter.__allocating_init(logger:answeringMachine:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t sub_1BD3752CC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed @async (@in_guaranteed A, @in_guaranteed CallScreeningTrackingStateResult) -> (@out ())(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  char v5;
  int *v6;
  _QWORD *v7;

  v5 = a2 & 1;
  v6 = *(int **)(v2 + 24);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = partial apply for closure #1 in VideoMessageInboxController.updateCallItems();
  return ((uint64_t (*)(uint64_t, char, int *))((char *)&async function pointer to thunk for @escaping @callee_guaranteed @async (@in_guaranteed A, @in_guaranteed CallScreeningTrackingStateResult) -> (@out ())
                                                       + async function pointer to thunk for @escaping @callee_guaranteed @async (@in_guaranteed A, @in_guaranteed CallScreeningTrackingStateResult) -> (@out ())))(a1, v5, v6);
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed @async (@in_guaranteed A, @unowned CallScreeningTrackingStateResult) -> ()(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  uint64_t v3;
  uint64_t v4;
  int *v8;
  uint64_t v9;
  _QWORD *v10;

  v8 = *(int **)(v3 + 24);
  v9 = swift_task_alloc();
  v10 = (_QWORD *)OUTLINED_FUNCTION_61_5(v9);
  *v10 = v4;
  v10[1] = partial apply for closure #1 in VideoMessageInboxController.updateCallItems();
  return ((uint64_t (*)(uint64_t, uint64_t, unsigned __int8 *, int *))((char *)&async function pointer to thunk for @escaping @callee_guaranteed @async (@in_guaranteed A, @unowned CallScreeningTrackingStateResult) -> ()
                                                                             + async function pointer to thunk for @escaping @callee_guaranteed @async (@in_guaranteed A, @unowned CallScreeningTrackingStateResult) -> ()))(a1, a2, a3, v8);
}

uint64_t specialized closure #1 in AnsweringMachineService.handleNewIncomingCall(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v10 = *a5;
  v11 = a5[1];
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v12;
  *v12 = v5;
  v12[1] = partial apply for closure #2 in CallScreeningEndingState.enteredState();
  return specialized closure #1 in AnsweringMachineService.handleNewIncomingCall(_:)(a1, a2, a3, a4, v10, v11);
}

uint64_t sub_1BD37548C()
{
  OUTLINED_FUNCTION_67_1();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for specialized closure #1 in AnsweringMachineService.handleNewIncomingCall(_:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);

  v1 = swift_task_alloc();
  v2 = (_QWORD *)OUTLINED_FUNCTION_61_5(v1);
  *v2 = v0;
  v2[1] = partial apply for closure #2 in CallScreeningEndingState.enteredState();
  v3 = OUTLINED_FUNCTION_35_34();
  return v4(v3);
}

uint64_t outlined consume of (task: Task<(), Error>, call: String)?(uint64_t result)
{
  if (result)
  {
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t outlined copy of (task: Task<(), Error>, call: String)?(uint64_t result)
{
  if (result)
  {
    swift_retain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t static UIImage.image(named:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = a1[3];
  v3 = a1[4];
  v4 = __swift_project_boxed_opaque_existential_1(a1, v2);
  return specialized static UIImage.image(named:)((uint64_t)v4, v1, v2, v3);
}

id static UIImage.symbolImage(for:)(uint64_t a1)
{
  uint64_t v2;
  Class isa;
  UIImageSymbolWeight v4;
  Class v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  objc_class *v9;
  id v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  id v18;
  _BYTE v19[16];
  UIImageSymbolWeight v20;
  char v21;
  uint64_t v22;

  OUTLINED_FUNCTION_0_125(a1 + 40, (uint64_t)v19);
  v2 = OUTLINED_FUNCTION_0_125((uint64_t)v19, (uint64_t)&v20);
  if ((v21 & 1) != 0)
  {
    isa = (Class)objc_msgSend((id)objc_opt_self(), sel_configurationWithTextStyle_scale_, *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 16));
  }
  else
  {
    v4 = v20;
    OUTLINED_FUNCTION_17_8(v2, &lazy cache variable for type metadata for UIImageSymbolConfiguration);
    isa = UIImageSymbolConfiguration.init(staticTextStyle:scale:weight:)((UIFontTextStyle)*(id *)(a1 + 24), *(UIImageSymbolScale *)(a1 + 16), v4).super.super.isa;
  }
  v5 = isa;
  OUTLINED_FUNCTION_0_125(a1 + 56, (uint64_t)&v18);
  v6 = OUTLINED_FUNCTION_0_125((uint64_t)&v18, (uint64_t)&v22);
  v7 = v22;
  if (v22)
  {
    v8 = (void *)objc_opt_self();
    outlined retain of UIColor?(&v18);
    v9 = v5;
    v10 = objc_msgSend(v8, sel_configurationWithHierarchicalColor_, v7);
    v5 = (Class)-[objc_class configurationByApplyingConfiguration:](v9, sel_configurationByApplyingConfiguration_, v10);

    outlined release of BackgroundView<A>(&v18);
  }
  v11 = *(_BYTE *)(a1 + 32);
  OUTLINED_FUNCTION_17_8(v6, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  v13 = *(_QWORD *)a1;
  v12 = *(_QWORD *)(a1 + 8);
  if ((v11 & 1) == 0)
  {
    swift_bridgeObjectRetain();
    v14 = @nonobjc UIImage.__allocating_init(systemName:)();
    if (v14)
      goto LABEL_10;
LABEL_11:

    return 0;
  }
  swift_bridgeObjectRetain();
  v14 = @nonobjc UIImage.init(_systemName:)(v13, v12);
  if (!v14)
    goto LABEL_11;
LABEL_10:
  v15 = v14;
  v16 = objc_msgSend(v14, sel_imageWithSymbolConfiguration_, v5);

  return v16;
}

id @nonobjc UIImage.init(_systemName:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v3;

  if (a2)
  {
    v2 = (void *)MEMORY[0x1C3B72E00]();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = 0;
  }
  v3 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel__systemImageNamed_, v2);

  return v3;
}

uint64_t protocol witness for static NamedImageProviding.image(named:) in conformance UIImage(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = a1[3];
  v3 = a1[4];
  v4 = __swift_project_boxed_opaque_existential_1(a1, v2);
  return specialized static UIImage.image(named:)((uint64_t)v4, v1, v2, v3);
}

UIImageSymbolConfiguration __swiftcall UIImageSymbolConfiguration.init(staticTextStyle:scale:weight:)(UIFontTextStyle staticTextStyle, UIImageSymbolScale scale, UIImageSymbolWeight weight)
{
  id v6;
  id v7;
  void *ObjCClassFromMetadata;
  id v9;

  v6 = objc_msgSend((id)objc_opt_self(), sel_traitCollectionWithPreferredContentSizeCategory_, *MEMORY[0x1E0DC4920]);
  v7 = objc_msgSend((id)objc_opt_self(), sel_preferredFontDescriptorWithTextStyle_compatibleWithTraitCollection_, staticTextStyle, v6);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  objc_msgSend(v7, sel_pointSize);
  v9 = objc_msgSend(ObjCClassFromMetadata, sel_configurationWithPointSize_weight_scale_, weight, scale);

  return (UIImageSymbolConfiguration)v9;
}

id protocol witness for static SymbolImageProviding.symbolImage(for:) in conformance UIImage(uint64_t a1)
{
  return static UIImage.symbolImage(for:)(a1);
}

unint64_t static UIImage.radialGradient(withColors:size:)(unint64_t result, double a2, double a3)
{
  unint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  _QWORD v12[6];

  v5 = result;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    v6 = _CocoaArrayWrapper.endIndex.getter();
    result = swift_bridgeObjectRelease();
  }
  else
  {
    v6 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v6 < 2)
  {
    __break(1u);
  }
  else
  {
    v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3828]), sel_initWithSize_, a2, a3);
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = v5;
    *(double *)(v8 + 24) = a2;
    *(double *)(v8 + 32) = a3;
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = partial apply for closure #1 in static UIImage.radialGradient(withColors:size:);
    *(_QWORD *)(v9 + 24) = v8;
    v12[4] = partial apply for thunk for @escaping @callee_guaranteed () -> (@unowned Font.Weight);
    v12[5] = v9;
    v12[0] = MEMORY[0x1E0C809B0];
    v12[1] = 1107296256;
    v12[2] = thunk for @escaping @callee_guaranteed (@guaranteed UIGraphicsImageRendererContext) -> ();
    v12[3] = &block_descriptor_66;
    v10 = _Block_copy(v12);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    v11 = objc_msgSend(v7, sel_imageWithActions_, v10);

    _Block_release(v10);
    LOBYTE(v7) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    result = swift_release();
    if ((v7 & 1) == 0)
      return (unint64_t)v11;
  }
  __break(1u);
  return result;
}

void closure #1 in static UIImage.radialGradient(withColors:size:)(void *a1, unint64_t a2, double a3, double a4)
{
  CGColorSpaceRef DeviceRGB;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  const __CFArray *isa;
  CGGradient *v18;
  double v19;
  double v20;
  CGFloat v21;
  CGContext *v22;
  CGColorSpace *space;
  uint64_t v24;
  CGPoint v25;
  CGPoint v26;

  DeviceRGB = CGColorSpaceCreateDeviceRGB();
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    v9 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v9)
  {
    specialized ContiguousArray.reserveCapacity(_:)();
    if (v9 < 0)
    {
LABEL_25:
      __break(1u);
LABEL_26:
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      return;
    }
    v10 = 0;
    do
    {
      if ((a2 & 0xC000000000000001) != 0)
        v11 = (id)MEMORY[0x1C3B73D18](v10, a2);
      else
        v11 = *(id *)(a2 + 8 * v10 + 32);
      v12 = v11;
      ++v10;
      v13 = objc_msgSend(v11, sel_CGColor);

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
    }
    while (v9 != v10);
  }
  if (__OFSUB__(v9, 1))
  {
    __break(1u);
    goto LABEL_24;
  }
  if (v9 < 0)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v14 = MEMORY[0x1E0DEE9D8];
  if (v9)
  {
    v24 = MEMORY[0x1E0DEE9D8];
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    v15 = 0;
    v14 = v24;
    v16 = *(_QWORD *)(v24 + 16);
    do
    {
      if (v16 >= *(_QWORD *)(v24 + 24) >> 1)
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      *(_QWORD *)(v24 + 16) = v16 + 1;
      *(double *)(v24 + 8 * v16++ + 32) = 1.0 / (double)(v9 - 1) * (double)v15++;
    }
    while (v9 != v15);
  }
  type metadata accessor for CGColorRef(0);
  space = DeviceRGB;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v18 = CGGradientCreateWithColors(space, isa, (const CGFloat *)(v14 + 32));

  swift_bridgeObjectRelease();
  if (!v18)
    goto LABEL_26;
  v19 = a4 * 0.5;
  if (a4 >= a3)
    v20 = a3;
  else
    v20 = a4;
  v21 = v20 * 0.5;
  v22 = (CGContext *)objc_msgSend(a1, sel_CGContext);
  v25.x = a3 * 0.5;
  v25.y = v19;
  v26.x = a3 * 0.5;
  v26.y = v19;
  CGContextDrawRadialGradient(v22, v18, v25, 0.0, v26, v21, 2u);

}

void thunk for @escaping @callee_guaranteed (@guaranteed UIGraphicsImageRendererContext) -> ()(uint64_t a1, void *a2)
{
  void (*v2)(void);
  id v3;

  v2 = *(void (**)(void))(a1 + 32);
  v3 = a2;
  v2();

}

uint64_t specialized static UIImage.image(named:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  Swift::String v19;
  Swift::String v20;
  id v21;
  id v22;
  uint64_t v23;
  void *v24;
  void *v25;
  Swift::String v26;
  _BYTE v27[40];
  uint64_t v28[5];

  v28[3] = a3;
  v28[4] = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v28);
  v8 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(boxed_opaque_existential_1, a1, a3);
  OUTLINED_FUNCTION_17_8(v8, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 8))(a3, a4);
  v11 = v10;
  v12 = (void *)objc_opt_self();
  v13 = objc_msgSend(v12, sel_conversationKit);
  v14 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
  v15 = objc_msgSend(v14, sel_traitCollection);

  @nonobjc UIImage.__allocating_init(named:in:compatibleWith:)(v9, v11, v13, v15);
  if (v16)
  {
    v17 = v16;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
    return v17;
  }
  else
  {
    outlined init with copy of IDSLookupManager((uint64_t)v28, (uint64_t)v27);
    _StringGuts.grow(_:)(38);
    v19._object = (void *)0x80000001BD670420;
    v19._countAndFlagsBits = 0xD000000000000015;
    String.append(_:)(v19);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ImageName);
    _print_unlocked<A, B>(_:_:)();
    v20._countAndFlagsBits = 0x7562206D6F726620;
    v20._object = (void *)0xED000020656C646ELL;
    String.append(_:)(v20);
    v21 = objc_msgSend(v12, sel_conversationKit);
    v22 = objc_msgSend(v21, sel_description);
    v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v25 = v24;

    v26._countAndFlagsBits = v23;
    v26._object = v25;
    String.append(_:)(v26);

    swift_bridgeObjectRelease();
    result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

id *outlined retain of UIColor?(id *a1)
{
  id v2;

  v2 = *a1;
  return a1;
}

uint64_t sub_1BD3760EC()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void partial apply for closure #1 in static UIImage.radialGradient(withColors:size:)(void *a1)
{
  uint64_t v1;

  closure #1 in static UIImage.radialGradient(withColors:size:)(a1, *(_QWORD *)(v1 + 16), *(double *)(v1 + 24), *(double *)(v1 + 32));
}

uint64_t sub_1BD37611C()
{
  return swift_deallocObject();
}

__n128 ClarityUIOutgoingCallActionsNavigationDestination.init(contact:actions:)@<Q0>(__n128 *a1@<X0>, unint64_t a2@<X1>, __n128 *a3@<X8>)
{
  unint64_t v3;
  unint64_t v4;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  result = *a1;
  *a3 = *a1;
  a3[1].n128_u64[0] = v3;
  a3[1].n128_u64[1] = v4;
  a3[2].n128_u64[0] = a2;
  return result;
}

void ClarityUIOutgoingCallActionsView.navigationPath.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>);
  JUMPOUT(0x1C3B72860);
}

void key path setter for ClarityUIOutgoingCallActionsView.navigationPath : ClarityUIOutgoingCallActionsView(uint64_t a1)
{
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v2 = type metadata accessor for NavigationPath();
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v6 + 16))(v5, a1, v3);
  ClarityUIOutgoingCallActionsView.navigationPath.setter((uint64_t)v5);
}

void ClarityUIOutgoingCallActionsView.navigationPath.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = OUTLINED_FUNCTION_9_1();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_77();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v5 - v4, a1, v2);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>);
  Binding.wrappedValue.setter();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  OUTLINED_FUNCTION_91();
}

void (*ClarityUIOutgoingCallActionsView.navigationPath.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  uint64_t v7;
  void *v8;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OUTLINED_FUNCTION_9_1();
  *v3 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[1] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[2] = malloc(v6);
  v3[3] = malloc(v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>);
  v3[4] = v7;
  v8 = malloc(*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  v3[5] = v8;
  outlined init with copy of FeatureEligibility?(v1, (uint64_t)v8, &demangling cache variable for type metadata for Binding<NavigationPath>);
  MEMORY[0x1C3B72860](v7);
  return ClarityUIOutgoingCallActionsView.navigationPath.modify;
}

void ClarityUIOutgoingCallActionsView.navigationPath.modify(uint64_t a1, char a2)
{
  _QWORD *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 40);
  v4 = *(void **)(*(_QWORD *)a1 + 16);
  v5 = *(void **)(*(_QWORD *)a1 + 24);
  if ((a2 & 1) != 0)
  {
    v6 = *v2;
    v7 = v2[1];
    (*(void (**)(_QWORD, void *, _QWORD))(v7 + 16))(*(_QWORD *)(*(_QWORD *)a1 + 16), v5, *v2);
    Binding.wrappedValue.setter();
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v3, &demangling cache variable for type metadata for Binding<NavigationPath>);
    (*(void (**)(void *, uint64_t))(v7 + 8))(v5, v6);
  }
  else
  {
    Binding.wrappedValue.setter();
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v3, &demangling cache variable for type metadata for Binding<NavigationPath>);
  }
  free(v3);
  free(v5);
  free(v4);
  free(v2);
}

uint64_t ClarityUIOutgoingCallActionsView.$navigationPath.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>);
  return Binding.projectedValue.getter();
}

uint64_t ClarityUIOutgoingCallActionsView.contact.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;

  v3 = v1 + *(int *)(OUTLINED_FUNCTION_0_126() + 20);
  v4 = *(void **)v3;
  v5 = *(void **)(v3 + 8);
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  *a1 = *(_QWORD *)v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  v8 = v4;
  v9 = v5;
  return OUTLINED_FUNCTION_3_11();
}

uint64_t type metadata accessor for ClarityUIOutgoingCallActionsView()
{
  uint64_t result;

  result = type metadata singleton initialization cache for ClarityUIOutgoingCallActionsView;
  if (!type metadata singleton initialization cache for ClarityUIOutgoingCallActionsView)
    return swift_getSingletonMetadata();
  return result;
}

void ClarityUIOutgoingCallActionsView.contact.setter(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = v1 + *(int *)(OUTLINED_FUNCTION_0_126() + 20);
  OUTLINED_FUNCTION_13_86();

  *(_OWORD *)v7 = *(_OWORD *)a1;
  *(_QWORD *)(v7 + 16) = v5;
  *(_QWORD *)(v7 + 24) = v6;
  OUTLINED_FUNCTION_91();
}

uint64_t (*ClarityUIOutgoingCallActionsView.contact.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_126();
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ClarityUIOutgoingCallActionsView.actions.getter()
{
  OUTLINED_FUNCTION_0_126();
  return swift_bridgeObjectRetain();
}

void ClarityUIOutgoingCallActionsView.actions.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(OUTLINED_FUNCTION_0_126() + 24);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  OUTLINED_FUNCTION_18();
}

uint64_t (*ClarityUIOutgoingCallActionsView.actions.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_126();
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ClarityUIOutgoingCallActionsView.effectiveActions.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v11[4];

  v1 = type metadata accessor for ClarityUIOutgoingCallActionsView();
  v2 = *(int *)(v1 + 24);
  if (*(_QWORD *)(v0 + v2))
  {
    v3 = *(_QWORD *)(v0 + v2);
  }
  else
  {
    v4 = v0 + *(int *)(v1 + 20);
    v5 = *(void **)(v4 + 8);
    v6 = *(void **)(v4 + 16);
    v7 = *(void **)(v4 + 24);
    v11[0] = *(id *)v4;
    v11[1] = v5;
    v11[2] = v6;
    v11[3] = v7;
    v8 = v11[0];
    v9 = v5;
    swift_bridgeObjectRetain();
    v3 = ClarityUIOutgoingCallActionProvider.outgoingCallActions(for:)((uint64_t)v11);
    swift_bridgeObjectRelease();

  }
  swift_bridgeObjectRetain();
  return v3;
}

void ClarityUIOutgoingCallActionsView.body.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t KeyPath;
  uint64_t *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (**v32)();
  uint64_t v33;
  void *v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  id v52;
  uint64_t v53;
  uint64_t v54;

  v49 = a1;
  v2 = OUTLINED_FUNCTION_0_126();
  v46 = *(_QWORD *)(v2 - 8);
  v47 = *(_QWORD *)(v46 + 64);
  v48 = v2;
  MEMORY[0x1E0C80A78](v2);
  v45 = (uint64_t)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for List<Never, ForEach<[ClarityUIOutgoingCallAction], ClarityUIOutgoingCallAction, ActionNavigationLink?>>);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_77();
  v8 = v7 - v6;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<List<Never, ForEach<[ClarityUIOutgoingCallAction], ClarityUIOutgoingCallAction, ActionNavigationLink?>>, _AnimationModifier<[ClarityUIOutgoingCallAction]>>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_77();
  v13 = v12 - v11;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VStack<ModifiedContent<ModifiedContent<List<Never, ForEach<[ClarityUIOutgoingCallAction], ClarityUIOutgoingCallAction, ActionNavigationLink?>>, _AnimationModifier<[ClarityUIOutgoingCallAction]>>, _EnvironmentKeyWritingModifier<Color?>>>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_77();
  v17 = v16 - v15;
  v44 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<VStack<ModifiedContent<ModifiedContent<List<Never, ForEach<[ClarityUIOutgoingCallAction], ClarityUIOutgoingCallAction, ActionNavigationLink?>>, _AnimationModifier<[ClarityUIOutgoingCallAction]>>, _EnvironmentKeyWritingModifier<Color?>>>, _AppearanceActionModifier>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_77();
  v43 = v20 - v19;
  *(_QWORD *)v17 = static HorizontalAlignment.center.getter();
  *(_QWORD *)(v17 + 8) = 0;
  *(_BYTE *)(v17 + 16) = 1;
  v21 = v17
      + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, ModifiedContent<ModifiedContent<List<Never, ForEach<[ClarityUIOutgoingCallAction], ClarityUIOutgoingCallAction, ActionNavigationLink?>>, _AnimationModifier<[ClarityUIOutgoingCallAction]>>, _EnvironmentKeyWritingModifier<Color?>>>)
               + 44);
  v50 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ForEach<[ClarityUIOutgoingCallAction], ClarityUIOutgoingCallAction, ActionNavigationLink?>);
  lazy protocol witness table accessor for type ForEach<[ClarityUIOutgoingCallAction], ClarityUIOutgoingCallAction, ActionNavigationLink?> and conformance <> ForEach<A, B, C>(&lazy protocol witness table cache variable for type ForEach<[ClarityUIOutgoingCallAction], ClarityUIOutgoingCallAction, ActionNavigationLink?> and conformance <> ForEach<A, B, C>, &demangling cache variable for type metadata for ForEach<[ClarityUIOutgoingCallAction], ClarityUIOutgoingCallAction, ActionNavigationLink?>, lazy protocol witness table accessor for type ActionNavigationLink? and conformance <A> A?, MEMORY[0x1E0CDFEE8]);
  List<>.init(content:)();
  v22 = static Animation.default.getter();
  v23 = ClarityUIOutgoingCallActionsView.effectiveActions.getter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v13, v8, v4);
  v24 = (uint64_t *)(v13 + *(int *)(v9 + 36));
  *v24 = v22;
  v24[1] = v23;
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v8, v4);
  v25 = static Color.clear.getter();
  KeyPath = swift_getKeyPath();
  outlined init with copy of FeatureEligibility?(v13, v21, &demangling cache variable for type metadata for ModifiedContent<List<Never, ForEach<[ClarityUIOutgoingCallAction], ClarityUIOutgoingCallAction, ActionNavigationLink?>>, _AnimationModifier<[ClarityUIOutgoingCallAction]>>);
  v27 = (uint64_t *)(v21
                  + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<List<Never, ForEach<[ClarityUIOutgoingCallAction], ClarityUIOutgoingCallAction, ActionNavigationLink?>>, _AnimationModifier<[ClarityUIOutgoingCallAction]>>, _EnvironmentKeyWritingModifier<Color?>>)
                           + 36));
  *v27 = KeyPath;
  v27[1] = v25;
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v13, &demangling cache variable for type metadata for ModifiedContent<List<Never, ForEach<[ClarityUIOutgoingCallAction], ClarityUIOutgoingCallAction, ActionNavigationLink?>>, _AnimationModifier<[ClarityUIOutgoingCallAction]>>);
  v28 = v45;
  outlined init with copy of ClarityUIOutgoingCallActionsView(v1, v45);
  v29 = (*(unsigned __int8 *)(v46 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
  v30 = swift_allocObject();
  outlined init with take of ClarityUIOutgoingCallActionsView(v28, v30 + v29);
  v31 = v43;
  outlined init with copy of FeatureEligibility?(v17, v43, &demangling cache variable for type metadata for VStack<ModifiedContent<ModifiedContent<List<Never, ForEach<[ClarityUIOutgoingCallAction], ClarityUIOutgoingCallAction, ActionNavigationLink?>>, _AnimationModifier<[ClarityUIOutgoingCallAction]>>, _EnvironmentKeyWritingModifier<Color?>>>);
  v32 = (void (**)())(v31 + *(int *)(v44 + 36));
  *v32 = partial apply for closure #2 in ClarityUIOutgoingCallActionsView.body.getter;
  v32[1] = (void (*)())v30;
  v32[2] = 0;
  v32[3] = 0;
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v17, &demangling cache variable for type metadata for VStack<ModifiedContent<ModifiedContent<List<Never, ForEach<[ClarityUIOutgoingCallAction], ClarityUIOutgoingCallAction, ActionNavigationLink?>>, _AnimationModifier<[ClarityUIOutgoingCallAction]>>, _EnvironmentKeyWritingModifier<Color?>>>);
  v33 = v1 + *(int *)(v48 + 20);
  v34 = *(void **)(v33 + 8);
  v35 = *(id *)v33;
  v36 = v34;
  OUTLINED_FUNCTION_124();
  v37 = CNContact.clarityUIDisplayName.getter();
  v39 = v38;
  OUTLINED_FUNCTION_13_3();

  v53 = v37;
  v54 = v39;
  v51 = v35;
  v52 = v36;
  lazy protocol witness table accessor for type ModifiedContent<VStack<ModifiedContent<ModifiedContent<List<Never, ForEach<[ClarityUIOutgoingCallAction], ClarityUIOutgoingCallAction, ActionNavigationLink?>>, _AnimationModifier<[ClarityUIOutgoingCallAction]>>, _EnvironmentKeyWritingModifier<Color?>>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>();
  lazy protocol witness table accessor for type String and conformance String();
  lazy protocol witness table accessor for type ClarityUIContactAvatar and conformance ClarityUIContactAvatar();
  v40 = v35;
  v41 = v36;
  View.navigationTitle<A, B>(_:icon:)();
  swift_bridgeObjectRelease();

  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v31, &demangling cache variable for type metadata for ModifiedContent<VStack<ModifiedContent<ModifiedContent<List<Never, ForEach<[ClarityUIOutgoingCallAction], ClarityUIOutgoingCallAction, ActionNavigationLink?>>, _AnimationModifier<[ClarityUIOutgoingCallAction]>>, _EnvironmentKeyWritingModifier<Color?>>>, _AppearanceActionModifier>);
}

uint64_t closure #1 in closure #1 in ClarityUIOutgoingCallActionsView.body.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD v8[2];

  v2 = type metadata accessor for ClarityUIOutgoingCallActionsView();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x1E0C80A78](v2);
  v8[1] = ClarityUIOutgoingCallActionsView.effectiveActions.getter();
  swift_getKeyPath();
  outlined init with copy of ClarityUIOutgoingCallActionsView(a1, (uint64_t)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  outlined init with take of ClarityUIOutgoingCallActionsView((uint64_t)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v6 + v5);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [ClarityUIOutgoingCallAction]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ActionNavigationLink?);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type [ClarityUIOutgoingCallAction] and conformance [A], &demangling cache variable for type metadata for [ClarityUIOutgoingCallAction], MEMORY[0x1E0DEAF48]);
  lazy protocol witness table accessor for type ClarityUIOutgoingCallAction and conformance ClarityUIOutgoingCallAction();
  lazy protocol witness table accessor for type ActionNavigationLink? and conformance <A> A?();
  return ForEach<>.init(_:id:content:)();
}

uint64_t partial apply for closure #1 in closure #1 in ClarityUIOutgoingCallActionsView.body.getter()
{
  uint64_t v0;

  return closure #1 in closure #1 in ClarityUIOutgoingCallActionsView.body.getter(*(_QWORD *)(v0 + 16));
}

uint64_t lazy protocol witness table accessor for type ActionNavigationLink? and conformance <A> A?()
{
  return lazy protocol witness table accessor for type ForEach<[ClarityUIOutgoingCallAction], ClarityUIOutgoingCallAction, ActionNavigationLink?> and conformance <> ForEach<A, B, C>(&lazy protocol witness table cache variable for type ActionNavigationLink? and conformance <A> A?, &demangling cache variable for type metadata for ActionNavigationLink?, (uint64_t (*)(void))lazy protocol witness table accessor for type ActionNavigationLink and conformance ActionNavigationLink, MEMORY[0x1E0CE0798]);
}

uint64_t lazy protocol witness table accessor for type ForEach<[ClarityUIOutgoingCallAction], ClarityUIOutgoingCallAction, ActionNavigationLink?> and conformance <> ForEach<A, B, C>(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9 = a3();
    result = MEMORY[0x1C3B750C8](a4, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ActionNavigationLink and conformance ActionNavigationLink()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ActionNavigationLink and conformance ActionNavigationLink;
  if (!lazy protocol witness table cache variable for type ActionNavigationLink and conformance ActionNavigationLink)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ActionNavigationLink, &unk_1E762FD70);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ActionNavigationLink and conformance ActionNavigationLink);
  }
  return result;
}

uint64_t closure #1 in closure #1 in closure #1 in ClarityUIOutgoingCallActionsView.body.getter@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;

  v4 = a1[3];
  v5 = a1[4];
  if (v4)
  {
    v6 = *((unsigned __int8 *)a1 + 16);
    v8 = *a1;
    v7 = a1[1];
    v9 = a2 + *(int *)(type metadata accessor for ClarityUIOutgoingCallActionsView() + 20);
    v10 = *(id *)v9;
    v11 = *(void **)(v9 + 8);
    v13 = *(_QWORD *)(v9 + 16);
    v12 = *(_QWORD *)(v9 + 24);
    v14 = *(id *)v9;
    v15 = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = v5;
  }
  else
  {
    v10 = 0;
    v11 = 0;
    v13 = 0;
    v12 = 0;
    v8 = 0;
    v7 = 0;
    v6 = 0;
    v16 = 0;
  }
  *a3 = v10;
  a3[1] = v11;
  a3[2] = v13;
  a3[3] = v12;
  a3[4] = v8;
  a3[5] = v7;
  a3[6] = v6;
  a3[7] = v4;
  a3[8] = v16;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

void closure #2 in ClarityUIOutgoingCallActionsView.body.getter(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7[4];
  ConversationKit::ClarityUIContact v8;

  v1 = a1 + *(int *)(type metadata accessor for ClarityUIOutgoingCallActionsView() + 20);
  v2 = *(void **)(v1 + 8);
  v3 = *(void **)(v1 + 16);
  v4 = *(void **)(v1 + 24);
  v7[0] = *(id *)v1;
  v7[1] = v2;
  v7[2] = v3;
  v7[3] = v4;
  v6 = v7[0];
  v5 = v2;
  swift_bridgeObjectRetain();
  v8.cnContact.super.isa = (Class)v7;
  ClarityUICallHistory.markRecentCallsAsRead(for:)(v8);
  swift_bridgeObjectRelease();

}

uint64_t ClarityUIOutgoingCallActionsView.init(navigationPath:contact:actions:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  outlined init with take of Any?(a1, a4, &demangling cache variable for type metadata for Binding<NavigationPath>);
  v9 = (int *)OUTLINED_FUNCTION_0_126();
  v10 = a4 + v9[5];
  *(_OWORD *)v10 = *(_OWORD *)a2;
  *(_QWORD *)(v10 + 16) = v7;
  *(_QWORD *)(v10 + 24) = v8;
  *(_QWORD *)(a4 + v9[6]) = a3;
  v11 = v9[7];
  if (one-time initialization token for shared != -1)
    swift_once();
  *(_QWORD *)(a4 + v11) = static ClarityUIOutgoingCallActionProvider.shared;
  v12 = v9[8];
  v13 = one-time initialization token for shared;
  swift_retain();
  if (v13 != -1)
    swift_once();
  *(_QWORD *)(a4 + v12) = static ClarityUICallHistory.shared;
  return swift_retain();
}

void ActionNavigationLink.body.getter(uint64_t a1@<X8>)
{
  const void *v1;
  const void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  void (*v16)();
  BOOL v17;
  uint64_t KeyPath;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD __dst[10];

  v2 = v1;
  v22 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NavigationLink<ModifiedContent<Label<Text, ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>>, Never>);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<NavigationLink<ModifiedContent<Label<Text, ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>>, Never>, _EnvironmentKeyTransformModifier<Bool>>);
  MEMORY[0x1E0C80A78](v21);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  memcpy(__dst, v2, 0x48uLL);
  v9 = (void *)__dst[0];
  v10 = (void *)__dst[1];
  v11 = __dst[7];
  v12 = __dst[8];
  v24 = __dst[0];
  v25 = __dst[1];
  v26 = __dst[2];
  v27 = __dst[3];
  v28 = __dst[4];
  v29 = __dst[5];
  v30 = LOBYTE(__dst[6]);
  v31 = __dst[7];
  v32 = __dst[8];
  v23 = __dst;
  swift_bridgeObjectRetain();
  v13 = v9;
  v14 = v10;
  swift_bridgeObjectRetain();
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v11);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Label<Text, ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>>);
  lazy protocol witness table accessor for type ModifiedContent<Label<Text, ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>> and conformance <> ModifiedContent<A, B>();
  lazy protocol witness table accessor for type ClarityUIPreviewNavigationDestination and conformance ClarityUIPreviewNavigationDestination();
  NavigationLink<>.init<A>(value:label:)();
  if (v11)
  {
    v15 = swift_allocObject();
    *(_QWORD *)(v15 + 16) = v11;
    *(_QWORD *)(v15 + 24) = v12;
    v16 = partial apply for thunk for @callee_guaranteed () -> ();
  }
  else
  {
    v16 = 0;
  }
  v17 = v11 == 0;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v11);
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v16);
  KeyPath = swift_getKeyPath();
  v19 = swift_allocObject();
  *(_BYTE *)(v19 + 16) = v17;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v8, v6, v3);
  v20 = (uint64_t *)&v8[*(int *)(v21 + 36)];
  *v20 = KeyPath;
  v20[1] = (uint64_t)partial apply for closure #1 in View.disabled(_:);
  v20[2] = v19;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  outlined init with take of Any?((uint64_t)v8, v22, &demangling cache variable for type metadata for ModifiedContent<NavigationLink<ModifiedContent<Label<Text, ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>>, Never>, _EnvironmentKeyTransformModifier<Bool>>);
}

void closure #1 in ActionNavigationLink.body.getter(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t KeyPath;
  uint64_t v14;
  uint64_t *v15;
  _BYTE v16[16];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Label<Text, ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Label<Text, ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>>);
  MEMORY[0x1E0C80A78](v8);
  v10 = &v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = a1;
  v17 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>);
  lazy protocol witness table accessor for type ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>();
  Label.init(title:icon:)();
  if ((*(_BYTE *)(a1 + 48) & 1) != 0)
    v11 = static Color.green.getter();
  else
    v11 = static Color.orange.getter();
  v12 = v11;
  KeyPath = swift_getKeyPath();
  v19 = v12;
  swift_retain();
  v14 = AnyShapeStyle.init<A>(_:)();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 16))(v10, v7, v4);
  swift_release();
  v15 = (uint64_t *)&v10[*(int *)(v8 + 36)];
  *v15 = KeyPath;
  v15[1] = v14;
  (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  outlined init with take of Any?((uint64_t)v10, a2, &demangling cache variable for type metadata for ModifiedContent<Label<Text, ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>>);
}

uint64_t closure #1 in closure #1 in ActionNavigationLink.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void *v3;
  id v4;
  Swift::String v5;
  Swift::String_optional v6;
  Swift::String v7;
  uint64_t result;
  uint64_t v9;
  char v10;
  uint64_t v11;
  Swift::String v12;

  if ((*(_BYTE *)(a1 + 48) & 1) != 0)
    v3 = (void *)0x80000001BD687E10;
  else
    v3 = (void *)0x80000001BD687E30;
  v4 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v12._object = (void *)0xE000000000000000;
  v5._countAndFlagsBits = 0xD00000000000001BLL;
  v5._object = v3;
  v6.value._countAndFlagsBits = 0x61737265766E6F43;
  v6.value._object = (void *)0xEF74694B6E6F6974;
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  v12._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v5, v6, (NSBundle)v4, v7, v12);
  swift_bridgeObjectRelease();

  lazy protocol witness table accessor for type String and conformance String();
  result = Text.init<A>(_:)();
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = v9;
  *(_BYTE *)(a2 + 16) = v10 & 1;
  *(_QWORD *)(a2 + 24) = v11;
  return result;
}

uint64_t closure #2 in closure #1 in ActionNavigationLink.body.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Image.TemplateRenderingMode?);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  Image.init(systemName:)();
  v5 = *MEMORY[0x1E0CDF770];
  v6 = type metadata accessor for Image.TemplateRenderingMode();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v4, v5, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v4, 0, 1, v6);
  v7 = Image.renderingMode(_:)();
  swift_release();
  outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v4, &demangling cache variable for type metadata for Image.TemplateRenderingMode?);
  v8 = static Color.white.getter();
  result = swift_getKeyPath();
  *a1 = v7;
  a1[1] = result;
  a1[2] = v8;
  return result;
}

uint64_t ClarityUIOutgoingCallActionsNavigationDestination.contact.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;

  v2 = *(void **)v1;
  v3 = *(void **)(v1 + 8);
  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  *a1 = *(_QWORD *)v1;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  v6 = v2;
  v7 = v3;
  return OUTLINED_FUNCTION_3_11();
}

void ClarityUIOutgoingCallActionsNavigationDestination.contact.setter(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;

  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  OUTLINED_FUNCTION_13_86();

  *(_OWORD *)v1 = *(_OWORD *)a1;
  *(_QWORD *)(v1 + 16) = v5;
  *(_QWORD *)(v1 + 24) = v6;
  OUTLINED_FUNCTION_91();
}

uint64_t (*ClarityUIOutgoingCallActionsNavigationDestination.contact.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ClarityUIOutgoingCallActionsNavigationDestination.actions.getter()
{
  return swift_bridgeObjectRetain();
}

void ClarityUIOutgoingCallActionsNavigationDestination.actions.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 32) = a1;
  OUTLINED_FUNCTION_0();
}

uint64_t (*ClarityUIOutgoingCallActionsNavigationDestination.actions.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void ClarityUIOutgoingCallActionsNavigationDestination.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;

  v3 = *(void **)v1;
  v4 = *(void **)(v1 + 8);
  v5 = *(_QWORD *)(v1 + 32);
  swift_bridgeObjectRetain_n();
  v6 = v3;
  v7 = v4;
  String.hash(into:)();

  swift_bridgeObjectRelease_n();
  if (v5)
  {
    Hasher._combine(_:)(1u);
    OUTLINED_FUNCTION_124();
    specialized Array<A>.hash(into:)(a1, v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
}

void static ClarityUIOutgoingCallActionsNavigationDestination.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;

  v2 = a1[4];
  v3 = a2[4];
  v4 = a1[2] == a2[2] && a1[3] == a2[3];
  if ((v4 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) && v2 && v3)
  {
    OUTLINED_FUNCTION_124();
    swift_bridgeObjectRetain();
    specialized static Array<A>.== infix(_:_:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_13_3();
  }
  OUTLINED_FUNCTION_18();
}

Swift::Int ClarityUIOutgoingCallActionsNavigationDestination.hashValue.getter()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  _BYTE v7[72];

  v1 = *(void **)v0;
  v2 = *(void **)(v0 + 8);
  v3 = *(_QWORD *)(v0 + 32);
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain_n();
  v4 = v1;
  v5 = v2;
  String.hash(into:)();

  swift_bridgeObjectRelease_n();
  if (v3)
  {
    Hasher._combine(_:)(1u);
    OUTLINED_FUNCTION_124();
    specialized Array<A>.hash(into:)((uint64_t)v7, v3);
    OUTLINED_FUNCTION_13_3();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  return Hasher._finalize()();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance ClarityUIOutgoingCallActionsNavigationDestination()
{
  _BYTE v1[72];

  Hasher.init(_seed:)();
  ClarityUIOutgoingCallActionsNavigationDestination.hash(into:)((uint64_t)v1);
  return Hasher._finalize()();
}

void key path getter for EnvironmentValues.tintColor : EnvironmentValues, serialized()
{
  uint64_t *v0;

  *v0 = OUTLINED_FUNCTION_12_84();
  OUTLINED_FUNCTION_0();
}

void sub_1BD377784()
{
  uint64_t *v0;

  *v0 = OUTLINED_FUNCTION_12_84();
  OUTLINED_FUNCTION_0();
}

void key path setter for EnvironmentValues.tintColor : EnvironmentValues, serialized()
{
  swift_retain();
  EnvironmentValues.tintColor.setter();
  OUTLINED_FUNCTION_0();
}

uint64_t outlined init with copy of ClarityUIOutgoingCallActionsView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ClarityUIOutgoingCallActionsView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined init with take of ClarityUIOutgoingCallActionsView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ClarityUIOutgoingCallActionsView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void partial apply for closure #2 in ClarityUIOutgoingCallActionsView.body.getter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_0_126();
  OUTLINED_FUNCTION_49_3();
  closure #2 in ClarityUIOutgoingCallActionsView.body.getter(v0 + v1);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<VStack<ModifiedContent<ModifiedContent<List<Never, ForEach<[ClarityUIOutgoingCallAction], ClarityUIOutgoingCallAction, ActionNavigationLink?>>, _AnimationModifier<[ClarityUIOutgoingCallAction]>>, _EnvironmentKeyWritingModifier<Color?>>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<VStack<ModifiedContent<ModifiedContent<List<Never, ForEach<[ClarityUIOutgoingCallAction], ClarityUIOutgoingCallAction, ActionNavigationLink?>>, _AnimationModifier<[ClarityUIOutgoingCallAction]>>, _EnvironmentKeyWritingModifier<Color?>>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<VStack<ModifiedContent<ModifiedContent<List<Never, ForEach<[ClarityUIOutgoingCallAction], ClarityUIOutgoingCallAction, ActionNavigationLink?>>, _AnimationModifier<[ClarityUIOutgoingCallAction]>>, _EnvironmentKeyWritingModifier<Color?>>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<VStack<ModifiedContent<ModifiedContent<List<Never, ForEach<[ClarityUIOutgoingCallAction], ClarityUIOutgoingCallAction, ActionNavigationLink?>>, _AnimationModifier<[ClarityUIOutgoingCallAction]>>, _EnvironmentKeyWritingModifier<Color?>>>, _AppearanceActionModifier>);
    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type VStack<ModifiedContent<ModifiedContent<List<Never, ForEach<[ClarityUIOutgoingCallAction], ClarityUIOutgoingCallAction, ActionNavigationLink?>>, _AnimationModifier<[ClarityUIOutgoingCallAction]>>, _EnvironmentKeyWritingModifier<Color?>>> and conformance VStack<A>, &demangling cache variable for type metadata for VStack<ModifiedContent<ModifiedContent<List<Never, ForEach<[ClarityUIOutgoingCallAction], ClarityUIOutgoingCallAction, ActionNavigationLink?>>, _AnimationModifier<[ClarityUIOutgoingCallAction]>>, _EnvironmentKeyWritingModifier<Color?>>>, MEMORY[0x1E0CDFCC0]);
    v3[0] = v2;
    v3[1] = MEMORY[0x1E0CDC8B0];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v3);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<VStack<ModifiedContent<ModifiedContent<List<Never, ForEach<[ClarityUIOutgoingCallAction], ClarityUIOutgoingCallAction, ActionNavigationLink?>>, _AnimationModifier<[ClarityUIOutgoingCallAction]>>, _EnvironmentKeyWritingModifier<Color?>>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t associated type witness table accessor for View.Body : View in ClarityUIOutgoingCallActionsView()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1BD377944()
{
  ClarityUIOutgoingCallActionsView.navigationPath.getter();
}

void sub_1BD377958()
{
  OUTLINED_FUNCTION_0();
}

uint64_t *initializeBufferWithCopyOfBuffer for ClarityUIOutgoingCallActionsView(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
  }
  else
  {
    v7 = a1;
    a1[1] = a2[1];
    swift_retain();
    swift_retain();
    v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>)
                + 32);
    v9 = (char *)v7 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for NavigationPath();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[5];
    v13 = a3[6];
    v14 = (uint64_t *)((char *)v7 + v12);
    v15 = (char *)a2 + v12;
    v16 = *(void **)v15;
    v17 = (void *)*((_QWORD *)v15 + 1);
    *v14 = *(_QWORD *)v15;
    v14[1] = v17;
    v18 = *((_QWORD *)v15 + 3);
    v14[2] = *((_QWORD *)v15 + 2);
    v14[3] = v18;
    *(uint64_t *)((char *)v7 + v13) = *(uint64_t *)((char *)a2 + v13);
    v19 = a3[8];
    *(uint64_t *)((char *)v7 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    *(uint64_t *)((char *)v7 + v19) = *(uint64_t *)((char *)a2 + v19);
    v20 = v16;
    v21 = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  swift_retain();
  return v7;
}

uint64_t destroy for ClarityUIOutgoingCallActionsView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  id *v6;

  swift_release();
  swift_release();
  v4 = a1
     + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>)
              + 32);
  v5 = type metadata accessor for NavigationPath();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = (id *)(a1 + *(int *)(a2 + 20));

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

_QWORD *initializeWithCopy for ClarityUIOutgoingCallActionsView(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_retain();
  v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>)
              + 32);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for NavigationPath();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[5];
  v12 = a3[6];
  v13 = (_QWORD *)((char *)a1 + v11);
  v14 = (char *)a2 + v11;
  v15 = *(void **)v14;
  v16 = (void *)*((_QWORD *)v14 + 1);
  *v13 = *(_QWORD *)v14;
  v13[1] = v16;
  v17 = *((_QWORD *)v14 + 3);
  v13[2] = *((_QWORD *)v14 + 2);
  v13[3] = v17;
  *(_QWORD *)((char *)a1 + v12) = *(_QWORD *)((char *)a2 + v12);
  v18 = a3[8];
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  *(_QWORD *)((char *)a1 + v18) = *(_QWORD *)((char *)a2 + v18);
  v19 = v15;
  v20 = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for ClarityUIOutgoingCallActionsView(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;

  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>)
              + 32);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for NavigationPath();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[5];
  v11 = (char *)a1 + v10;
  v12 = (_QWORD *)((char *)a2 + v10);
  v13 = *(void **)((char *)a2 + v10);
  v14 = *(void **)v11;
  *(_QWORD *)v11 = v13;
  v15 = v13;

  v16 = (void *)v12[1];
  v17 = (void *)*((_QWORD *)v11 + 1);
  *((_QWORD *)v11 + 1) = v16;
  v18 = v16;

  *((_QWORD *)v11 + 2) = v12[2];
  *((_QWORD *)v11 + 3) = v12[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  swift_retain();
  swift_release();
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *initializeWithTake for ClarityUIOutgoingCallActionsView(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  _OWORD *v15;
  uint64_t v16;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>)
              + 32);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for NavigationPath();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[5];
  v12 = a3[6];
  v13 = *(_OWORD *)((char *)a2 + v11);
  v14 = *(_OWORD *)((char *)a2 + v11 + 16);
  v15 = (_OWORD *)((char *)a1 + v11);
  *v15 = v13;
  v15[1] = v14;
  *(_QWORD *)((char *)a1 + v12) = *(_QWORD *)((char *)a2 + v12);
  v16 = a3[8];
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  *(_QWORD *)((char *)a1 + v16) = *(_QWORD *)((char *)a2 + v16);
  return a1;
}

_QWORD *assignWithTake for ClarityUIOutgoingCallActionsView(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  void *v13;
  void *v14;
  uint64_t v15;

  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>)
              + 32);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for NavigationPath();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[5];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  v13 = *(void **)((char *)a1 + v10);
  *(_QWORD *)((char *)a1 + v10) = *(_QWORD *)((char *)a2 + v10);

  v14 = (void *)v11[1];
  v11[1] = v12[1];

  v15 = v12[3];
  v11[2] = v12[2];
  v11[3] = v15;
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  swift_release();
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ClarityUIOutgoingCallActionsView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1BD377F0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>);
  if (*(_DWORD *)(*(_QWORD *)(v4 - 8) + 84) == (_DWORD)a2)
    __swift_getEnumTagSinglePayload(a1, a2, v4);
  else
    OUTLINED_FUNCTION_18();
}

uint64_t storeEnumTagSinglePayload for ClarityUIOutgoingCallActionsView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BD377F8C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>);
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
    OUTLINED_FUNCTION_18();
  }
}

void type metadata completion function for ClarityUIOutgoingCallActionsView()
{
  unint64_t v0;

  type metadata accessor for Binding<NavigationPath>();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t destroy for ClarityUIOutgoingCallActionsNavigationDestination(id *a1)
{

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ClarityUIOutgoingCallActionsNavigationDestination(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(_QWORD *)(a2 + 24);
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v5;
  a1[4] = *(_QWORD *)(a2 + 32);
  v6 = v3;
  v7 = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ClarityUIOutgoingCallActionsNavigationDestination(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ClarityUIOutgoingCallActionsNavigationDestination(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ClarityUIOutgoingCallActionsNavigationDestination()
{
  return &type metadata for ClarityUIOutgoingCallActionsNavigationDestination;
}

uint64_t sub_1BD378210()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<VStack<ModifiedContent<ModifiedContent<List<Never, ForEach<[ClarityUIOutgoingCallAction], ClarityUIOutgoingCallAction, ActionNavigationLink?>>, _AnimationModifier<[ClarityUIOutgoingCallAction]>>, _EnvironmentKeyWritingModifier<Color?>>>, _AppearanceActionModifier>);
  lazy protocol witness table accessor for type ModifiedContent<VStack<ModifiedContent<ModifiedContent<List<Never, ForEach<[ClarityUIOutgoingCallAction], ClarityUIOutgoingCallAction, ActionNavigationLink?>>, _AnimationModifier<[ClarityUIOutgoingCallAction]>>, _EnvironmentKeyWritingModifier<Color?>>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>();
  lazy protocol witness table accessor for type String and conformance String();
  lazy protocol witness table accessor for type ClarityUIContactAvatar and conformance ClarityUIContactAvatar();
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for ActionNavigationLink(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 56))
    return swift_release();
  return result;
}

uint64_t initializeWithCopy for ActionNavigationLink(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  id v10;
  id v11;
  uint64_t v12;

  v4 = *(void **)a2;
  v5 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v9 = (_OWORD *)(a2 + 56);
  v8 = *(_QWORD *)(a2 + 56);
  v10 = v4;
  v11 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v8)
  {
    v12 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 56) = v8;
    *(_QWORD *)(a1 + 64) = v12;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 56) = *v9;
  }
  return a1;
}

uint64_t assignWithCopy for ActionNavigationLink(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a1 + 56);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  if (!v10)
  {
    if (v11)
    {
      v13 = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 56) = v11;
      *(_QWORD *)(a1 + 64) = v13;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    return a1;
  }
  if (!v11)
  {
    swift_release();
    goto LABEL_7;
  }
  v12 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v12;
  swift_retain();
  swift_release();
  return a1;
}

void *__swift_memcpy72_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x48uLL);
}

uint64_t assignWithTake for ActionNavigationLink(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 56);
  v8 = *(_QWORD *)(a1 + 56);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  if (!v8)
  {
    if (v7)
    {
      v10 = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 56) = v7;
      *(_QWORD *)(a1 + 64) = v10;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    return a1;
  }
  if (!v7)
  {
    swift_release();
    goto LABEL_7;
  }
  v9 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v7;
  *(_QWORD *)(a1 + 64) = v9;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ActionNavigationLink(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 72))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ActionNavigationLink(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void *type metadata accessor for ActionNavigationLink()
{
  return &unk_1E762FD70;
}

uint64_t associated type witness table accessor for View.Body : View in ActionNavigationLink()
{
  return swift_getOpaqueTypeConformance2();
}

void partial apply for closure #1 in ActionNavigationLink.body.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  closure #1 in ActionNavigationLink.body.getter(*(_QWORD *)(v1 + 16), a1);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<Label<Text, ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<Label<Text, ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<Label<Text, ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Label<Text, ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>>);
    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type Label<Text, ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>> and conformance Label<A, B>, &demangling cache variable for type metadata for Label<Text, ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, MEMORY[0x1E0CDF8C8]);
    v3 = v2;
    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<AnyShapeStyle?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<AnyShapeStyle?>, MEMORY[0x1E0CDCF80]);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v5);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<Label<Text, ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t sub_1BD37868C()
{
  return swift_deallocObject();
}

uint64_t sub_1BD37869C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in ActionNavigationLink.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return closure #1 in closure #1 in ActionNavigationLink.body.getter(*(_QWORD *)(v1 + 16), a1);
}

uint64_t partial apply for closure #2 in closure #1 in ActionNavigationLink.body.getter@<X0>(uint64_t *a1@<X8>)
{
  return closure #2 in closure #1 in ActionNavigationLink.body.getter(a1);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>);
    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Color?>, MEMORY[0x1E0CDCF80]);
    v3[0] = MEMORY[0x1E0CDF820];
    v3[1] = v2;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v3);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t objectdestroyTm_10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id *v6;

  v1 = OUTLINED_FUNCTION_0_126();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  swift_release();
  swift_release();
  v4 = v3
     + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>)
              + 32);
  v5 = OUTLINED_FUNCTION_9_1();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = (id *)(v3 + *(int *)(v1 + 20));

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in ClarityUIOutgoingCallActionsView.body.getter@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  OUTLINED_FUNCTION_0_126();
  OUTLINED_FUNCTION_49_3();
  return closure #1 in closure #1 in closure #1 in ClarityUIOutgoingCallActionsView.body.getter(a1, v2 + v5, a2);
}

unint64_t lazy protocol witness table accessor for type ClarityUIOutgoingCallAction and conformance ClarityUIOutgoingCallAction()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ClarityUIOutgoingCallAction and conformance ClarityUIOutgoingCallAction;
  if (!lazy protocol witness table cache variable for type ClarityUIOutgoingCallAction and conformance ClarityUIOutgoingCallAction)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ClarityUIOutgoingCallAction, &type metadata for ClarityUIOutgoingCallAction);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ClarityUIOutgoingCallAction and conformance ClarityUIOutgoingCallAction);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ClarityUIOutgoingCallAction and conformance ClarityUIOutgoingCallAction;
  if (!lazy protocol witness table cache variable for type ClarityUIOutgoingCallAction and conformance ClarityUIOutgoingCallAction)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ClarityUIOutgoingCallAction, &type metadata for ClarityUIOutgoingCallAction);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ClarityUIOutgoingCallAction and conformance ClarityUIOutgoingCallAction);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<NavigationLink<ModifiedContent<Label<Text, ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>>, Never>, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<NavigationLink<ModifiedContent<Label<Text, ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>>, Never>, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<NavigationLink<ModifiedContent<Label<Text, ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>>, Never>, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<NavigationLink<ModifiedContent<Label<Text, ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>>, Never>, _EnvironmentKeyTransformModifier<Bool>>);
    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type NavigationLink<ModifiedContent<Label<Text, ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>>, Never> and conformance NavigationLink<A, B>, &demangling cache variable for type metadata for NavigationLink<ModifiedContent<Label<Text, ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>>, Never>, MEMORY[0x1E0CD9468]);
    v3 = v2;
    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type _EnvironmentKeyTransformModifier<Bool> and conformance _EnvironmentKeyTransformModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyTransformModifier<Bool>, MEMORY[0x1E0CDD0D8]);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v5);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<NavigationLink<ModifiedContent<Label<Text, ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>>, Never>, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t LiveVoicemailIntroView.init(_:)()
{
  type metadata accessor for TranscriptionViewModel(0);
  lazy protocol witness table accessor for type TranscriptionViewModel and conformance TranscriptionViewModel();
  return ObservedObject.init(wrappedValue:)();
}

unint64_t lazy protocol witness table accessor for type TranscriptionViewModel and conformance TranscriptionViewModel()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type TranscriptionViewModel and conformance TranscriptionViewModel;
  if (!lazy protocol witness table cache variable for type TranscriptionViewModel and conformance TranscriptionViewModel)
  {
    v1 = type metadata accessor for TranscriptionViewModel(255);
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for TranscriptionViewModel, v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type TranscriptionViewModel and conformance TranscriptionViewModel);
  }
  return result;
}

uint64_t LiveVoicemailIntroView.viewModel.getter()
{
  return swift_retain();
}

uint64_t key path getter for LiveVoicemailIntroView.viewModel : LiveVoicemailIntroView@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 8);
  result = LiveVoicemailIntroView.viewModel.getter();
  *a2 = v3;
  return result;
}

uint64_t key path setter for LiveVoicemailIntroView.viewModel : LiveVoicemailIntroView()
{
  uint64_t v0;

  v0 = swift_retain();
  return LiveVoicemailIntroView.viewModel.setter(v0);
}

uint64_t LiveVoicemailIntroView.viewModel.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_release();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*LiveVoicemailIntroView.viewModel.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t LiveVoicemailIntroView.$viewModel.getter()
{
  type metadata accessor for TranscriptionViewModel(0);
  lazy protocol witness table accessor for type TranscriptionViewModel and conformance TranscriptionViewModel();
  return ObservedObject.projectedValue.getter();
}

BOOL LiveVoicemailIntroView.showDivider.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_retain();
  v0 = TranscriptionViewModel.captions.getter();
  swift_release();
  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRelease();
  return v1 != 0;
}

void LiveVoicemailIntroView.body.getter(uint64_t a1@<X8>)
{
  uint64_t v2;

  *(_QWORD *)a1 = static HorizontalAlignment.center.getter();
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, TupleView<(HStack<TupleView<(ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _FixedSizeLayout>, ModifiedContent<Text, _FixedSizeLayout>)>>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>, _PaddingLayout>, _PaddingLayout>?)>>);
  closure #1 in LiveVoicemailIntroView.body.getter(a1 + *(int *)(v2 + 44));
}

void closure #1 in LiveVoicemailIntroView.body.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  id v20;
  Swift::String v21;
  Swift::String_optional v22;
  Swift::String v23;
  Swift::String v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t KeyPath;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  Swift::String v85;
  Swift::String v86;

  v84 = a1;
  v1 = type metadata accessor for Divider();
  v74 = *(_QWORD *)(v1 - 8);
  v75 = v1;
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v72 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Divider, _BackgroundStyleModifier<Color>>);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>, _PaddingLayout>);
  MEMORY[0x1E0C80A78](v72);
  v73 = (uint64_t)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>, _PaddingLayout>, _PaddingLayout>);
  MEMORY[0x1E0C80A78](v81);
  v76 = (uint64_t)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>, _PaddingLayout>, _PaddingLayout>?);
  MEMORY[0x1E0C80A78](v9);
  v83 = (uint64_t)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v72 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _FixedSizeLayout>, ModifiedContent<Text, _FixedSizeLayout>)>>);
  MEMORY[0x1E0C80A78](v14);
  v82 = (uint64_t)&v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v72 - v17;
  *(_QWORD *)v18 = static VerticalAlignment.center.getter();
  *((_QWORD *)v18 + 1) = 0;
  v18[16] = 1;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_HStackLayout, TupleView<(ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _FixedSizeLayout>, ModifiedContent<Text, _FixedSizeLayout>)>>);
  closure #1 in closure #1 in LiveVoicemailIntroView.body.getter((uint64_t)&v18[*(int *)(v19 + 44)]);
  v20 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v86._object = (void *)0xE000000000000000;
  v21._object = (void *)0x80000001BD687E50;
  v21._countAndFlagsBits = 0xD000000000000014;
  v22.value._countAndFlagsBits = 0x61737265766E6F43;
  v22.value._object = (void *)0xEF74694B6E6F6974;
  v23._countAndFlagsBits = 0;
  v23._object = (void *)0xE000000000000000;
  v86._countAndFlagsBits = 0;
  v24 = NSLocalizedString(_:tableName:bundle:value:comment:)(v21, v22, (NSBundle)v20, v23, v86);

  v85 = v24;
  lazy protocol witness table accessor for type String and conformance String();
  v25 = Text.init<A>(_:)();
  v78 = v26;
  v79 = v25;
  v28 = v27;
  v80 = v29;
  KeyPath = swift_getKeyPath();
  swift_retain();
  v30 = TranscriptionViewModel.captions.getter();
  swift_release();
  v31 = *(_QWORD *)(v30 + 16);
  swift_bridgeObjectRelease();
  if (v31)
  {
    Divider.init()();
    v32 = static Color.white.getter();
    v33 = static Edge.Set.all.getter();
    v35 = v74;
    v34 = v75;
    (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v6, v3, v75);
    v36 = &v6[*(int *)(v4 + 36)];
    *(_QWORD *)v36 = v32;
    v36[8] = v33;
    (*(void (**)(char *, uint64_t))(v35 + 8))(v3, v34);
    LOBYTE(v32) = static Edge.Set.top.getter();
    EdgeInsets.init(_all:)();
    v38 = v37;
    v40 = v39;
    v42 = v41;
    v44 = v43;
    v45 = v73;
    outlined init with copy of FeatureEligibility?((uint64_t)v6, v73, &demangling cache variable for type metadata for ModifiedContent<Divider, _BackgroundStyleModifier<Color>>);
    v46 = v45 + *(int *)(v72 + 36);
    *(_BYTE *)v46 = v32;
    *(_QWORD *)(v46 + 8) = v38;
    *(_QWORD *)(v46 + 16) = v40;
    *(_QWORD *)(v46 + 24) = v42;
    *(_QWORD *)(v46 + 32) = v44;
    *(_BYTE *)(v46 + 40) = 0;
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v6, &demangling cache variable for type metadata for ModifiedContent<Divider, _BackgroundStyleModifier<Color>>);
    LOBYTE(v32) = static Edge.Set.bottom.getter();
    EdgeInsets.init(_all:)();
    v48 = v47;
    v50 = v49;
    v52 = v51;
    v54 = v53;
    v55 = v76;
    outlined init with copy of FeatureEligibility?(v45, v76, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>, _PaddingLayout>);
    v56 = v81;
    v57 = v55 + *(int *)(v81 + 36);
    *(_BYTE *)v57 = v32;
    *(_QWORD *)(v57 + 8) = v48;
    *(_QWORD *)(v57 + 16) = v50;
    *(_QWORD *)(v57 + 24) = v52;
    *(_QWORD *)(v57 + 32) = v54;
    *(_BYTE *)(v57 + 40) = 0;
    outlined destroy of OS_dispatch_queue.SchedulerOptions?(v45, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>, _PaddingLayout>);
    outlined init with take of Any?(v55, (uint64_t)v13, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>, _PaddingLayout>, _PaddingLayout>);
    v58 = 0;
    v59 = v56;
  }
  else
  {
    v58 = 1;
    v59 = v81;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v13, v58, 1, v59);
  v60 = v28 & 1;
  v61 = v82;
  outlined init with copy of FeatureEligibility?((uint64_t)v18, v82, &demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _FixedSizeLayout>, ModifiedContent<Text, _FixedSizeLayout>)>>);
  v62 = v83;
  outlined init with copy of FeatureEligibility?((uint64_t)v13, v83, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>, _PaddingLayout>, _PaddingLayout>?);
  v63 = v84;
  outlined init with copy of FeatureEligibility?(v61, v84, &demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _FixedSizeLayout>, ModifiedContent<Text, _FixedSizeLayout>)>>);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (HStack<TupleView<(ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _FixedSizeLayout>, ModifiedContent<Text, _FixedSizeLayout>)>>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>, _PaddingLayout>, _PaddingLayout>?));
  v65 = v63 + *(int *)(v64 + 48);
  v66 = v79;
  v67 = v80;
  v68 = (uint64_t)v13;
  v69 = v78;
  *(_QWORD *)v65 = v79;
  *(_QWORD *)(v65 + 8) = v69;
  *(_BYTE *)(v65 + 16) = v60;
  v70 = (uint64_t)v18;
  v71 = KeyPath;
  *(_QWORD *)(v65 + 24) = v67;
  *(_QWORD *)(v65 + 32) = v71;
  *(_WORD *)(v65 + 40) = 1;
  *(_BYTE *)(v65 + 42) = 1;
  outlined init with copy of FeatureEligibility?(v62, v63 + *(int *)(v64 + 64), &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>, _PaddingLayout>, _PaddingLayout>?);
  outlined copy of Text.Storage(v66, v69, v60);
  swift_bridgeObjectRetain();
  swift_retain();
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v68, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>, _PaddingLayout>, _PaddingLayout>?);
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v70, &demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _FixedSizeLayout>, ModifiedContent<Text, _FixedSizeLayout>)>>);
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v62, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>, _PaddingLayout>, _PaddingLayout>?);
  outlined consume of Text.Storage(v66, v69, v60);
  swift_release();
  swift_bridgeObjectRelease();
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v61, &demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _FixedSizeLayout>, ModifiedContent<Text, _FixedSizeLayout>)>>);
}

uint64_t associated type witness table accessor for View.Body : View in LiveVoicemailIntroView()
{
  return swift_getOpaqueTypeConformance2();
}

void closure #1 in closure #1 in LiveVoicemailIntroView.body.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  Swift::String v12;
  Swift::String_optional v13;
  Swift::String v14;
  Swift::String v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  Swift::String v35;
  Swift::String v36;

  v34 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.fontWeight(_:)>>.0);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _FixedSizeLayout>);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (uint64_t)&v33 - v9;
  v33 = (uint64_t)&v33 - v9;
  v35._countAndFlagsBits = Image.init(systemName:)();
  static Font.Weight.semibold.getter();
  View.fontWeight(_:)();
  swift_release();
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v7, v4, v1);
  *(_WORD *)&v7[*(int *)(v5 + 36)] = 257;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  outlined init with take of Any?((uint64_t)v7, v10, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _FixedSizeLayout>);
  v11 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v36._object = (void *)0xE000000000000000;
  v12._object = (void *)0x80000001BD687E70;
  v12._countAndFlagsBits = 0xD00000000000001BLL;
  v13.value._countAndFlagsBits = 0x61737265766E6F43;
  v13.value._object = (void *)0xEF74694B6E6F6974;
  v14._countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  v36._countAndFlagsBits = 0;
  v15 = NSLocalizedString(_:tableName:bundle:value:comment:)(v12, v13, (NSBundle)v11, v14, v36);

  v35 = v15;
  lazy protocol witness table accessor for type String and conformance String();
  v16 = Text.init<A>(_:)();
  v18 = v17;
  LOBYTE(v5) = v19 & 1;
  static Font.Weight.semibold.getter();
  v20 = Text.fontWeight(_:)();
  v22 = v21;
  LOBYTE(v2) = v23 & 1;
  outlined consume of Text.Storage(v16, v18, v5);
  swift_bridgeObjectRelease();
  static Font.title.getter();
  v24 = Text.font(_:)();
  v26 = v25;
  LOBYTE(v10) = v27;
  v29 = v28;
  swift_release();
  LOBYTE(v10) = v10 & 1;
  outlined consume of Text.Storage(v20, v22, v2);
  swift_bridgeObjectRelease();
  v30 = v33;
  outlined init with copy of FeatureEligibility?(v33, (uint64_t)v7, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _FixedSizeLayout>);
  v31 = v34;
  outlined init with copy of FeatureEligibility?((uint64_t)v7, v34, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _FixedSizeLayout>);
  v32 = v31
      + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _FixedSizeLayout>, ModifiedContent<Text, _FixedSizeLayout>))
               + 48);
  *(_QWORD *)v32 = v24;
  *(_QWORD *)(v32 + 8) = v26;
  *(_BYTE *)(v32 + 16) = v10;
  *(_QWORD *)(v32 + 24) = v29;
  *(_WORD *)(v32 + 32) = 257;
  outlined copy of Text.Storage(v24, v26, v10);
  swift_bridgeObjectRetain();
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v30, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _FixedSizeLayout>);
  outlined consume of Text.Storage(v24, v26, v10);
  swift_bridgeObjectRelease();
  outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v7, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _FixedSizeLayout>);
}

void protocol witness for View.body.getter in conformance LiveVoicemailIntroView(uint64_t a1@<X8>)
{
  LiveVoicemailIntroView.body.getter(a1);
}

_QWORD *assignWithCopy for LiveVoicemailIntroView(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *assignWithTake for LiveVoicemailIntroView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for LiveVoicemailIntroView()
{
  return &type metadata for LiveVoicemailIntroView;
}

unint64_t lazy protocol witness table accessor for type VStack<TupleView<(HStack<TupleView<(ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _FixedSizeLayout>, ModifiedContent<Text, _FixedSizeLayout>)>>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>, _PaddingLayout>, _PaddingLayout>?)>> and conformance VStack<A>()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type VStack<TupleView<(HStack<TupleView<(ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _FixedSizeLayout>, ModifiedContent<Text, _FixedSizeLayout>)>>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>, _PaddingLayout>, _PaddingLayout>?)>> and conformance VStack<A>;
  if (!lazy protocol witness table cache variable for type VStack<TupleView<(HStack<TupleView<(ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _FixedSizeLayout>, ModifiedContent<Text, _FixedSizeLayout>)>>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>, _PaddingLayout>, _PaddingLayout>?)>> and conformance VStack<A>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for VStack<TupleView<(HStack<TupleView<(ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _FixedSizeLayout>, ModifiedContent<Text, _FixedSizeLayout>)>>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>, _PaddingLayout>, _PaddingLayout>?)>>);
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDFCC0], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type VStack<TupleView<(HStack<TupleView<(ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _FixedSizeLayout>, ModifiedContent<Text, _FixedSizeLayout>)>>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FixedSizeLayout>, ModifiedContent<ModifiedContent<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>, _PaddingLayout>, _PaddingLayout>?)>> and conformance VStack<A>);
  }
  return result;
}

id static UIVibrancyEffect.inCallControlsEffect.getter()
{
  void *v0;

  v0 = (void *)objc_opt_self();
  if (one-time initialization token for backgroundBlurEffect != -1)
    swift_once();
  return objc_msgSend(v0, sel__effectForBlurEffect_vibrancyStyle_, static Colors.InCallControls.backgroundBlurEffect, 112);
}

uint64_t specialized Sequence.compactMap<A>(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD v26[2];
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v35 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = type metadata accessor for RecentsCallItem(0);
  v30 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v33 = (uint64_t)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v29 = (uint64_t)v26 - v9;
  v10 = type metadata accessor for IndexPath();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for IndexPath?);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(a1 + 16);
  v26[1] = a1;
  v27 = v2;
  if (v17)
  {
    v18 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    v19 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    v31 = *(_QWORD *)(v11 + 72);
    v32 = v19;
    swift_bridgeObjectRetain();
    v20 = MEMORY[0x1E0DEE9D8];
    v28 = v6;
    v21 = v11;
    while (1)
    {
      v32(v16, v18, v10);
      __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v10);
      if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v10) == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v13, v16, v10);
      (*(void (**)(char *))(*(_QWORD *)v35 + 264))(v13);
      (*(void (**)(char *, uint64_t))(v21 + 8))(v13, v10);
      if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v34) == 1)
      {
        outlined destroy of RecentsCallItem?((uint64_t)v6);
      }
      else
      {
        v22 = v21;
        v23 = v29;
        outlined init with take of RecentsCallItem((uint64_t)v6, v29);
        outlined init with take of RecentsCallItem(v23, v33);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v20 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v24 = *(_QWORD *)(v20 + 16);
        if (v24 >= *(_QWORD *)(v20 + 24) >> 1)
          v20 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        *(_QWORD *)(v20 + 16) = v24 + 1;
        outlined init with take of RecentsCallItem(v33, v20+ ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80))+ *(_QWORD *)(v30 + 72) * v24);
        v6 = v28;
        v21 = v22;
      }
      v18 += v31;
      if (!--v17)
        goto LABEL_14;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    v20 = MEMORY[0x1E0DEE9D8];
LABEL_14:
    __swift_storeEnumTagSinglePayload((uint64_t)v16, 1, 1, v10);
  }
  swift_release();
  swift_bridgeObjectRelease();
  return v20;
}

void RecentsCollectionViewDataSource.__allocating_init(collectionView:recentsController:conversationManager:linkController:cellProvider:supplementaryViewProvider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  RecentsCollectionViewDataSource.__allocating_init(collectionView:recentsController:conversationManager:linkController:cellProvider:supplementaryViewProvider:)(a1, a2, a3, a4, a5, a6, a7, a8, specialized RecentsCollectionViewDataSource.__allocating_init(collectionView:recentsController:conversationManager:linkController:cellProvider:supplementaryViewProvider:));
}

id RecentsCollectionViewDataSource.collectionView.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

uint64_t RecentsCollectionViewDataSource.recentsController.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return outlined init with copy of IDSLookupManager(v1 + 24, a1);
}

id RecentsCollectionViewDataSource.conversationManager.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 64);
}

uint64_t RecentsCollectionViewDataSource.linkController.getter()
{
  return swift_retain();
}

uint64_t RecentsCollectionViewDataSource.isActive.getter()
{
  _QWORD *v0;
  char v1;

  v0 = (_QWORD *)OUTLINED_FUNCTION_8_1();
  v1 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1D0))();

  return v1 & 1;
}

uint64_t RecentsCollectionViewDataSource.videoMessages.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Empty<[RecentsCallItem], Never>);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_77();
  v4 = v3 - v2;
  v5 = OUTLINED_FUNCTION_3_59();
  if (v5)
  {
    (*(void (**)(void))(*(_QWORD *)v5 + 104))();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<[RecentsCallItem], Never>);
    lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type CurrentValueSubject<[RecentsCallItem], Never> and conformance CurrentValueSubject<A, B>, &demangling cache variable for type metadata for CurrentValueSubject<[RecentsCallItem], Never>, MEMORY[0x1E0C95FB8]);
    v6 = Publisher.eraseToAnyPublisher()();
    swift_release();
    swift_release();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [RecentsCallItem]);
    Empty.init(completeImmediately:)();
    lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type Empty<[RecentsCallItem], Never> and conformance Empty<A, B>, &demangling cache variable for type metadata for Empty<[RecentsCallItem], Never>, MEMORY[0x1E0C960D0]);
    v6 = Publisher.eraseToAnyPublisher()();
    (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v4, v0);
  }
  return v6;
}

uint64_t key path setter for RecentsCollectionViewDataSource.collator : RecentsCollectionViewDataSource(id *a1, uint64_t a2)
{
  return (*(uint64_t (**)(id))(**(_QWORD **)a2 + 176))(*a1);
}

void RecentsCollectionViewDataSource.collator.setter(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + 80);
  *(_QWORD *)(v1 + 80) = a1;

}

void RecentsCollectionViewDataSource.collator.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[1] = v1;
  RecentsCollectionViewDataSource.collator.getter();
  *a1 = v3;
  OUTLINED_FUNCTION_0();
}

void RecentsCollectionViewDataSource.collator.modify(void **a1, char a2)
{
  InCallControlsStatusCell.iconImageView.modify(a1, a2, (void (*)(void))RecentsCollectionViewDataSource.collator.setter);
}

uint64_t key path setter for RecentsCollectionViewDataSource.messageInboxController : RecentsCollectionViewDataSource(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)a2 + 200);
  v3 = swift_retain();
  return v2(v3);
}

uint64_t RecentsCollectionViewDataSource.messageInboxController.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 88);
  *(_QWORD *)(v1 + 88) = a1;
  return outlined consume of VideoMessageInboxController??(v2);
}

void RecentsCollectionViewDataSource.messageInboxController.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[1] = v1;
  RecentsCollectionViewDataSource.messageInboxController.getter();
  *a1 = v3;
  OUTLINED_FUNCTION_0();
}

void RecentsCollectionViewDataSource.messageInboxController.modify(uint64_t *a1, char a2)
{
  uint64_t v2;

  if ((a2 & 1) != 0)
  {
    v2 = swift_retain();
    RecentsCollectionViewDataSource.messageInboxController.setter(v2);
    swift_release();
  }
  else
  {
    RecentsCollectionViewDataSource.messageInboxController.setter(*a1);
    OUTLINED_FUNCTION_0();
  }
}

void RecentsCollectionViewDataSource.cellProvider.getter()
{
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  OUTLINED_FUNCTION_0();
}

void RecentsCollectionViewDataSource.supplementaryViewProvider.getter()
{
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  OUTLINED_FUNCTION_0();
}

void RecentsCollectionViewDataSource.init(collectionView:recentsController:conversationManager:linkController:cellProvider:supplementaryViewProvider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  RecentsCollectionViewDataSource.__allocating_init(collectionView:recentsController:conversationManager:linkController:cellProvider:supplementaryViewProvider:)(a1, a2, a3, a4, a5, a6, a7, a8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))specialized RecentsCollectionViewDataSource.init(collectionView:recentsController:conversationManager:linkController:cellProvider:supplementaryViewProvider:));
}

void RecentsCollectionViewDataSource.__allocating_init(collectionView:recentsController:conversationManager:linkController:cellProvider:supplementaryViewProvider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v9;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v16 = *(_QWORD *)(a2 + 24);
  v15 = *(_QWORD *)(a2 + 32);
  v17 = __swift_mutable_project_boxed_opaque_existential_1(a2, v16);
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_77();
  v20 = v19 - v18;
  (*(void (**)(uint64_t))(v21 + 16))(v19 - v18);
  a9(a1, v20, a3, a4, a5, a6, a7, a8, v9, v16, v15);
  __swift_destroy_boxed_opaque_existential_1(a2);
  OUTLINED_FUNCTION_52_1();
}

uint64_t key path setter for RecentsCollectionViewDataSource.dataSource : RecentsCollectionViewDataSource(id *a1, uint64_t a2)
{
  return (*(uint64_t (**)(id))(**(_QWORD **)a2 + 232))(*a1);
}

void RecentsCollectionViewDataSource.dataSource.setter(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + 128);
  *(_QWORD *)(v1 + 128) = a1;

}

void RecentsCollectionViewDataSource.dataSource.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[1] = v1;
  RecentsCollectionViewDataSource.dataSource.getter();
  *a1 = v3;
  OUTLINED_FUNCTION_0();
}

void RecentsCollectionViewDataSource.dataSource.modify(void **a1, char a2)
{
  InCallControlsStatusCell.iconImageView.modify(a1, a2, (void (*)(void))RecentsCollectionViewDataSource.dataSource.setter);
}

void RecentsCollectionViewDataSource.callItem(for:)(uint64_t a1)
{
  RecentsCollectionViewDataSource.callItem(for:)(a1, (void (*)(uint64_t))MEMORY[0x1E0DC2750]);
}

void RecentsCollectionViewDataSource.indexPath(for:)(uint64_t a1)
{
  RecentsCollectionViewDataSource.callItem(for:)(a1, (void (*)(uint64_t))MEMORY[0x1E0DC27D0]);
}

void RecentsCollectionViewDataSource.callItem(for:)(uint64_t a1, void (*a2)(uint64_t))
{
  void *v4;

  v4 = (void *)OUTLINED_FUNCTION_4_111();
  a2(a1);
  OUTLINED_FUNCTION_15_9(v4);
}

uint64_t RecentsCollectionViewDataSource.callItems(for:)(uint64_t a1)
{
  uint64_t v1;

  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  return specialized Sequence.compactMap<A>(_:)(a1, v1);
}

void RecentsCollectionViewDataSource.deleteCallItems(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v6;

  v6 = (_QWORD *)OUTLINED_FUNCTION_8_1();
  (*(void (**)(uint64_t, uint64_t, uint64_t))((*MEMORY[0x1E0DEEDD8] & *v6) + 0x200))(a1, a2, a3);
  OUTLINED_FUNCTION_15_9(v6);
}

Swift::Void __swiftcall RecentsCollectionViewDataSource.suspend()()
{
  _QWORD *v0;

  v0 = (_QWORD *)OUTLINED_FUNCTION_8_1();
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1E0))();
  OUTLINED_FUNCTION_7_1(v0);
}

uint64_t RecentsCollectionViewDataSource.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_release();

  outlined consume of VideoMessageInboxController??(*(_QWORD *)(v0 + 88));
  swift_release();
  swift_release();

  return v0;
}

uint64_t RecentsCollectionViewDataSource.__deallocating_deinit()
{
  RecentsCollectionViewDataSource.deinit();
  return swift_deallocClassInstance();
}

void sub_1BD379F58(uint64_t *a1@<X8>)
{
  *a1 = OUTLINED_FUNCTION_8_1();
  OUTLINED_FUNCTION_0();
}

void sub_1BD379F80(uint64_t *a1@<X8>)
{
  *a1 = OUTLINED_FUNCTION_3_59();
  OUTLINED_FUNCTION_0();
}

void sub_1BD379FA8(uint64_t *a1@<X8>)
{
  *a1 = OUTLINED_FUNCTION_4_111();
  OUTLINED_FUNCTION_0();
}

uint64_t method lookup function for RecentsCollectionViewDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RecentsCollectionViewDataSource.isActive.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of RecentsCollectionViewDataSource.videoMessages.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of RecentsCollectionViewDataSource.collator.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of RecentsCollectionViewDataSource.collator.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of RecentsCollectionViewDataSource.collator.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of RecentsCollectionViewDataSource.messageInboxController.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of RecentsCollectionViewDataSource.messageInboxController.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of RecentsCollectionViewDataSource.messageInboxController.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of RecentsCollectionViewDataSource.__allocating_init(collectionView:recentsController:conversationManager:linkController:cellProvider:supplementaryViewProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 216))();
}

uint64_t dispatch thunk of RecentsCollectionViewDataSource.dataSource.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of RecentsCollectionViewDataSource.dataSource.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of RecentsCollectionViewDataSource.dataSource.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of RecentsCollectionViewDataSource.section(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of RecentsCollectionViewDataSource.callItem(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of RecentsCollectionViewDataSource.indexPath(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of RecentsCollectionViewDataSource.callItems(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of RecentsCollectionViewDataSource.deleteCallItems(_:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

uint64_t dispatch thunk of RecentsCollectionViewDataSource.resume()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t dispatch thunk of RecentsCollectionViewDataSource.suspend()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
}

uint64_t outlined destroy of RecentsCallItem?(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

__n128 IconButtonStyle.init(spacing:width:iconPadding:labelColor:labelFont:symbol:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>, double a7@<D2>)
{
  __int128 v7;
  __int128 v8;
  __n128 result;
  __int128 v10;

  *(double *)a4 = a5;
  *(double *)(a4 + 8) = a6;
  *(double *)(a4 + 16) = a7;
  *(_QWORD *)(a4 + 24) = a1;
  *(_QWORD *)(a4 + 32) = a2;
  v7 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(a4 + 40) = *(_OWORD *)a3;
  *(_OWORD *)(a4 + 56) = v7;
  v8 = *(_OWORD *)(a3 + 48);
  *(_OWORD *)(a4 + 72) = *(_OWORD *)(a3 + 32);
  *(_OWORD *)(a4 + 88) = v8;
  result = *(__n128 *)(a3 + 64);
  v10 = *(_OWORD *)(a3 + 80);
  *(__n128 *)(a4 + 104) = result;
  *(_OWORD *)(a4 + 120) = v10;
  return result;
}

uint64_t IconButtonConfig<A>.init(buttonStyle:title:accessibilityLabel:accessibilityIdentifier:enabled:didTap:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  OUTLINED_FUNCTION_33_44();
  return specialized IconButtonConfig.init(buttonStyle:title:hasBadge:accessibilityLabel:accessibilityIdentifier:state:enabled:didTap:)(a1, a2, a3, 0, a4, a5, a6, a7, a8);
}

void static ViewBuilder.buildEither<A, B>(first:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_11_83();
  OUTLINED_FUNCTION_45_37();
  MEMORY[0x1E0C80A78](v2);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))((char *)&v4 - v3, v1, v0);
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_12_85();
  OUTLINED_FUNCTION_65_1();
}

void static ViewBuilder.buildEither<A, B>(second:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_11_83();
  OUTLINED_FUNCTION_45_37();
  MEMORY[0x1E0C80A78](v2);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))((char *)&v4 - v3, v1, v0);
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_12_85();
  OUTLINED_FUNCTION_65_1();
}

double static IconButtonStyle.Defaults.size.getter()
{
  return 36.0;
}

void IconButtonConfig.state.getter(uint64_t a1@<X8>)
{
  StateHolder.state.getter(a1);
  OUTLINED_FUNCTION_0();
}

uint64_t IconButtonConfig.state.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](a1);
  OUTLINED_FUNCTION_77();
  v7 = v6 - v5;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v6 - v5, a1, v3);
  StateHolder.state.setter(v7);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
}

uint64_t IconButtonConfig.enabled.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_18_73();
  OUTLINED_FUNCTION_35_35();
  OUTLINED_FUNCTION_46_28();
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_2_0();
  return *(unsigned __int8 *)(v0 + 168);
}

void IconButtonConfig.enabled.setter()
{
  swift_getKeyPath();
  OUTLINED_FUNCTION_59_25();
  swift_release();
  OUTLINED_FUNCTION_14_1();
}

uint64_t IconButtonConfig.__allocating_init(buttonStyle:title:hasBadge:accessibilityLabel:accessibilityIdentifier:state:enabled:didTap:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12)
{
  uint64_t v17;

  v17 = OUTLINED_FUNCTION_33_44();
  IconButtonConfig.init(buttonStyle:title:hasBadge:accessibilityLabel:accessibilityIdentifier:state:enabled:didTap:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
  return v17;
}

uint64_t IconButtonConfig.accessibilityLabel.setter()
{
  return IconButtonConfig.accessibilityLabel.setter();
}

{
  swift_getKeyPath();
  OUTLINED_FUNCTION_59_25();
  OUTLINED_FUNCTION_17_22();
  return swift_bridgeObjectRelease();
}

void IconButtonConfig.accessibilityLabel.getter()
{
  OUTLINED_FUNCTION_18_73();
  OUTLINED_FUNCTION_35_35();
  OUTLINED_FUNCTION_46_28();
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_32();
}

void IconButtonConfig.accessibilityIdentifier.getter()
{
  OUTLINED_FUNCTION_18_73();
  OUTLINED_FUNCTION_35_35();
  OUTLINED_FUNCTION_46_28();
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_32();
}

void StateIconButtonStyle.image()(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  void (*v24)(uint64_t);
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t);
  uint64_t v30;
  uint64_t KeyPath;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t);
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  char v48[24];
  void (*v49)(uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t);

  v46 = a2;
  v44 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>, Image>.Storage);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_77();
  v45 = (uint64_t *)(v6 - v5);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Image.Scale>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_77_1();
  v43 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_79();
  v38 = (uint64_t *)(v9 - v10);
  v12 = MEMORY[0x1E0C80A78](v11);
  v41 = (uint64_t)&v37 - v13;
  v42 = *(_QWORD *)(a1 + 16);
  v14 = *(_QWORD *)(v42 - 8);
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_77();
  v17 = v16 - v15;
  v40 = type metadata accessor for Image.Scale();
  v47 = *(_QWORD *)(v40 - 8);
  MEMORY[0x1E0C80A78](v40);
  OUTLINED_FUNCTION_79();
  v20 = v18 - v19;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v37 - v22;
  StateIconButtonStyle.symbol.getter((uint64_t)v48);
  v24 = v49;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy((uint64_t)v49);
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_49_37();
  _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe(v50, v51);
  _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe(v52, v53);
  if (v24)
  {
    StateHolder.state.getter(v17);
    v24(v17);
    OUTLINED_FUNCTION_49_37();
    v25 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v26 = v42;
    v25(v17, v42);
    v27 = v20;
    v28 = v40;
    (*(void (**)(char *, uint64_t, uint64_t))(v47 + 32))(v23, v27, v40);
    OUTLINED_FUNCTION_48_35();
    v29 = v54;
    swift_release();
    swift_release();
    OUTLINED_FUNCTION_13_87();
    v29(v17);
    OUTLINED_FUNCTION_11_0();
    v25(v17, v26);
    v30 = Image.init(systemName:)();
    KeyPath = swift_getKeyPath();
    v32 = v47;
    (*(void (**)(char *, char *, uint64_t))(v47 + 16))((char *)v2 + *(int *)(v39 + 28), v23, v28);
    *v2 = KeyPath;
    v33 = v38;
    outlined init with copy of FeatureEligibility?((uint64_t)v2, (uint64_t)v38 + *(int *)(v43 + 36), &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Image.Scale>);
    *v33 = v30;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v2, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Image.Scale>);
    v34 = (uint64_t)v33;
    v35 = v41;
    outlined init with take of Any?(v34, v41, &demangling cache variable for type metadata for ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>);
    outlined init with copy of FeatureEligibility?(v35, (uint64_t)v45, &demangling cache variable for type metadata for ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>);
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>> and conformance <> ModifiedContent<A, B>();
    _ConditionalContent<>.init(storage:)();
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v35, &demangling cache variable for type metadata for ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v23, v28);
  }
  else
  {
    OUTLINED_FUNCTION_48_35();
    v36 = v54;
    swift_release();
    swift_release();
    OUTLINED_FUNCTION_13_87();
    v36(v17);
    OUTLINED_FUNCTION_19();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v17, v42);
    *v45 = Image.init(systemName:)();
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>> and conformance <> ModifiedContent<A, B>();
    _ConditionalContent<>.init(storage:)();
  }
  OUTLINED_FUNCTION_52_1();
}

void IconButtonConfig.title.getter()
{
  OUTLINED_FUNCTION_18_73();
  OUTLINED_FUNCTION_35_35();
  OUTLINED_FUNCTION_46_28();
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_32();
}

void IconButton.action.getter(uint64_t a1, uint64_t a2)
{
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(a2);
  OUTLINED_FUNCTION_0();
}

void IconButton.body.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Button<Text>);
  v7 = type metadata accessor for StateIconButtonStyle(255, a4, v5, v6);
  OUTLINED_FUNCTION_56_30(&lazy protocol witness table cache variable for type Button<Text> and conformance Button<A>);
  MEMORY[0x1C3B750C8](&protocol conformance descriptor for StateIconButtonStyle<A>, v7);
  OUTLINED_FUNCTION_10_92();
}

void sub_1BD37AAD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _EnvironmentKeyTransformModifier<Bool>);
  type metadata accessor for ModifiedContent();
  v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Button<EmptyView>);
  *(_QWORD *)(v2 - 304) = v3;
  OUTLINED_FUNCTION_56_30(&lazy protocol witness table cache variable for type Button<EmptyView> and conformance Button<A>);
  *(_QWORD *)(v2 - 312) = v4;
  *(_QWORD *)(v2 - 120) = v3;
  *(_QWORD *)(v2 - 112) = v0;
  *(_QWORD *)(v2 - 104) = v4;
  *(_QWORD *)(v2 - 96) = v1;
  OUTLINED_FUNCTION_10_92();
}

void sub_1BD37AB34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)(v5 - 328) = type metadata accessor for ModifiedContent();
  type metadata accessor for _ConditionalContent();
  type metadata accessor for AccessibilityAttachmentModifier();
  *(_QWORD *)(v5 - 296) = type metadata accessor for ModifiedContent();
  *(_QWORD *)(v5 - 320) = type metadata accessor for _ConditionalContent();
  *(_QWORD *)(v5 - 280) = type metadata accessor for ModifiedContent();
  v6 = type metadata accessor for _ConditionalContent();
  *(_QWORD *)(v5 - 264) = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_79();
  v9 = v7 - v8;
  MEMORY[0x1E0C80A78](v10);
  IconButton.buttonWithAccessbilityLabel()(*(_QWORD *)(v5 - 248), *(_QWORD *)(v5 - 272), *(_QWORD *)(v5 - 256), v2, v9);
  *(_QWORD *)(v5 - 120) = v3;
  *(_QWORD *)(v5 - 112) = v0;
  *(_QWORD *)(v5 - 104) = *(_QWORD *)(v5 - 288);
  *(_QWORD *)(v5 - 96) = v1;
  v11 = OUTLINED_FUNCTION_7_18();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyTransformModifier<Bool> and conformance _EnvironmentKeyTransformModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyTransformModifier<Bool>);
  v13 = v12;
  *(_QWORD *)(v5 - 136) = v11;
  *(_QWORD *)(v5 - 128) = v12;
  MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v4, v5 - 136);
  *(_QWORD *)(v5 - 120) = *(_QWORD *)(v5 - 304);
  *(_QWORD *)(v5 - 112) = v0;
  *(_QWORD *)(v5 - 104) = *(_QWORD *)(v5 - 312);
  *(_QWORD *)(v5 - 96) = v1;
  *(_QWORD *)(v5 - 152) = OUTLINED_FUNCTION_7_18();
  *(_QWORD *)(v5 - 144) = v13;
  OUTLINED_FUNCTION_36_9();
}

void sub_1BD37ACCC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v3 - 168) = v2;
  *(_QWORD *)(v3 - 160) = a1;
  v4 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDB8A0], v1, v3 - 168);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type AccessibilityAttachmentModifier and conformance AccessibilityAttachmentModifier, (void (*)(uint64_t))MEMORY[0x1E0CDCFD0]);
  *(_QWORD *)(v3 - 184) = v4;
  *(_QWORD *)(v3 - 176) = v5;
  OUTLINED_FUNCTION_36_9();
}

void sub_1BD37AD20(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 200) = a1;
  *(_QWORD *)(v2 - 192) = v1;
  OUTLINED_FUNCTION_36_9();
}

void sub_1BD37AD34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 216) = a1;
  *(_QWORD *)(v2 - 208) = v1;
  OUTLINED_FUNCTION_36_9();
}

void sub_1BD37AD4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);

  *(_QWORD *)(v6 - 232) = a1;
  *(_QWORD *)(v6 - 224) = v3;
  v7 = MEMORY[0x1C3B750C8](v2, v4, v6 - 232);
  static ViewBuilder.buildExpression<A>(_:)(v5, v4, v7);
  v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 264) + 8);
  v8(v5, v4);
  static ViewBuilder.buildBlock<A>(_:)(v1, v4, *(_QWORD *)(v6 - 240));
  v8(v1, v4);
  OUTLINED_FUNCTION_52_1();
}

uint64_t IconButton.buttonWithAccessbilityLabel()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t OpaqueTypeConformance2;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD v109[2];
  _QWORD v110[2];
  _QWORD v111[2];
  _QWORD v112[2];
  _QWORD v113[2];
  _QWORD v114[4];
  _QWORD v115[2];
  _QWORD v116[2];
  _QWORD v117[2];
  _QWORD v118[2];
  _QWORD v119[2];
  _QWORD v120[2];
  _QWORD v121[2];
  _QWORD v122[2];
  _QWORD v123[2];
  _QWORD v124[2];
  _QWORD v125[2];
  _QWORD v126[2];
  _QWORD v127[2];
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;

  v91 = a2;
  v92 = a3;
  v98 = a5;
  v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Button<Text>);
  v93 = (char *)a4;
  v10 = type metadata accessor for StateIconButtonStyle(255, a4, v8, v9);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Button<Text> and conformance Button<A>, &demangling cache variable for type metadata for Button<Text>);
  v12 = v11;
  v13 = MEMORY[0x1C3B750C8](&protocol conformance descriptor for StateIconButtonStyle<A>, v10);
  v105 = v12;
  v106 = v7;
  v128 = v7;
  v129 = v10;
  v130 = v12;
  v131 = v13;
  v14 = MEMORY[0x1E0CDDFE8];
  MEMORY[0x1C3B75050](255, &v128, MEMORY[0x1E0CDDFE8], 0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _EnvironmentKeyTransformModifier<Bool>);
  v15 = type metadata accessor for ModifiedContent();
  v16 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Button<EmptyView>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Button<EmptyView> and conformance Button<A>, &demangling cache variable for type metadata for Button<EmptyView>);
  v103 = v16;
  v128 = v16;
  v129 = v10;
  v107 = v13;
  v108 = v10;
  v101 = v17;
  v130 = v17;
  v131 = v13;
  MEMORY[0x1C3B75050](255, &v128, v14, 0);
  v18 = a1;
  v104 = v15;
  v99 = type metadata accessor for ModifiedContent();
  v19 = type metadata accessor for _ConditionalContent();
  type metadata accessor for AccessibilityAttachmentModifier();
  v102 = type metadata accessor for ModifiedContent();
  v100 = v19;
  v20 = type metadata accessor for _ConditionalContent();
  v94 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v88 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v88 - v24;
  v26 = type metadata accessor for ModifiedContent();
  v89 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v88 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)&v88 - v30;
  v32 = type metadata accessor for _ConditionalContent();
  v96 = *(_QWORD *)(v32 - 8);
  v97 = v32;
  MEMORY[0x1E0C80A78](v32);
  v95 = (char *)&v88 - v33;
  IconButtonConfig.accessibilityLabel.getter();
  v90 = v25;
  if (v35)
  {
    v36 = v34;
    v37 = v35;
    IconButton.buttonWithAccessbilityIdentifier()(v18, v91, v92, (uint64_t)v93, (uint64_t)v25);
    v114[2] = v36;
    v114[3] = v37;
    v38 = v108;
    v128 = v106;
    v129 = v108;
    v93 = v31;
    v39 = v107;
    v130 = v105;
    v131 = v107;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyTransformModifier<Bool> and conformance _EnvironmentKeyTransformModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyTransformModifier<Bool>);
    v42 = v41;
    v114[0] = OpaqueTypeConformance2;
    v114[1] = v41;
    v43 = MEMORY[0x1E0CD9C20];
    v44 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v104, v114);
    v128 = v103;
    v129 = v38;
    v130 = v101;
    v131 = v39;
    v113[0] = swift_getOpaqueTypeConformance2();
    v113[1] = v42;
    v45 = v43;
    v46 = MEMORY[0x1C3B750C8](v43, v99, v113);
    v112[0] = v44;
    v112[1] = v46;
    v47 = MEMORY[0x1E0CDB8A0];
    v48 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDB8A0], v100, v112);
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type AccessibilityAttachmentModifier and conformance AccessibilityAttachmentModifier, (void (*)(uint64_t))MEMORY[0x1E0CDCFD0]);
    v50 = v49;
    v111[0] = v48;
    v111[1] = v49;
    v110[0] = MEMORY[0x1C3B750C8](v45, v102, v111);
    v110[1] = v48;
    v51 = MEMORY[0x1C3B750C8](v47, v20, v110);
    lazy protocol witness table accessor for type String and conformance String();
    v52 = v90;
    View.accessibilityLabel<A>(_:)();
    (*(void (**)(char *, uint64_t))(v94 + 8))(v52, v20);
    swift_bridgeObjectRelease();
    v109[0] = v51;
    v109[1] = v50;
    v53 = MEMORY[0x1C3B750C8](v45, v26, v109);
    v54 = (uint64_t)v93;
    static ViewBuilder.buildExpression<A>(_:)(v28, v26, v53);
    v55 = *(void (**)(char *, uint64_t))(v89 + 8);
    v55(v28, v26);
    static ViewBuilder.buildBlock<A>(_:)(v54, v26, (uint64_t)v28);
    v56 = (uint64_t)v95;
    static ViewBuilder.buildEither<A, B>(first:)();
    v55(v28, v26);
    v57 = v54;
    v58 = v26;
  }
  else
  {
    IconButton.buttonWithAccessbilityIdentifier()(v18, v91, v92, (uint64_t)v93, (uint64_t)v22);
    v59 = v107;
    v60 = v108;
    v128 = v106;
    v129 = v108;
    v130 = v105;
    v131 = v107;
    v61 = swift_getOpaqueTypeConformance2();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyTransformModifier<Bool> and conformance _EnvironmentKeyTransformModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyTransformModifier<Bool>);
    v63 = v62;
    v127[0] = v61;
    v127[1] = v62;
    v64 = MEMORY[0x1E0CD9C20];
    v65 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v104, v127);
    v128 = v103;
    v129 = v60;
    v130 = v101;
    v131 = v59;
    v126[0] = swift_getOpaqueTypeConformance2();
    v126[1] = v63;
    v66 = MEMORY[0x1C3B750C8](v64, v99, v126);
    v125[0] = v65;
    v125[1] = v66;
    v67 = MEMORY[0x1E0CDB8A0];
    v68 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDB8A0], v100, v125);
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type AccessibilityAttachmentModifier and conformance AccessibilityAttachmentModifier, (void (*)(uint64_t))MEMORY[0x1E0CDCFD0]);
    v70 = v69;
    v124[0] = v68;
    v124[1] = v69;
    v123[0] = MEMORY[0x1C3B750C8](v64, v102, v124);
    v123[1] = v68;
    v71 = MEMORY[0x1C3B750C8](v67, v20, v123);
    v72 = (uint64_t)v90;
    static ViewBuilder.buildExpression<A>(_:)(v22, v20, v71);
    v55 = *(void (**)(char *, uint64_t))(v94 + 8);
    v55(v22, v20);
    static ViewBuilder.buildBlock<A>(_:)(v72, v20, (uint64_t)v22);
    v122[0] = v71;
    v122[1] = v70;
    MEMORY[0x1C3B750C8](v64, v26, v122);
    v56 = (uint64_t)v95;
    static ViewBuilder.buildEither<A, B>(second:)();
    v55(v22, v20);
    v57 = v72;
    v58 = v20;
  }
  v55((char *)v57, v58);
  v73 = v107;
  v74 = v108;
  v128 = v106;
  v129 = v108;
  v130 = v105;
  v131 = v107;
  v75 = swift_getOpaqueTypeConformance2();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyTransformModifier<Bool> and conformance _EnvironmentKeyTransformModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyTransformModifier<Bool>);
  v77 = v76;
  v121[0] = v75;
  v121[1] = v76;
  v78 = MEMORY[0x1E0CD9C20];
  v79 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v104, v121);
  v128 = v103;
  v129 = v74;
  v130 = v101;
  v131 = v73;
  v120[0] = swift_getOpaqueTypeConformance2();
  v120[1] = v77;
  v80 = MEMORY[0x1C3B750C8](v78, v99, v120);
  v119[0] = v79;
  v119[1] = v80;
  v81 = MEMORY[0x1E0CDB8A0];
  v82 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDB8A0], v100, v119);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type AccessibilityAttachmentModifier and conformance AccessibilityAttachmentModifier, (void (*)(uint64_t))MEMORY[0x1E0CDCFD0]);
  v84 = v83;
  v118[0] = v82;
  v118[1] = v83;
  v117[0] = MEMORY[0x1C3B750C8](v78, v102, v118);
  v117[1] = v82;
  v85 = MEMORY[0x1C3B750C8](v81, v20, v117);
  v116[0] = v85;
  v116[1] = v84;
  v115[0] = MEMORY[0x1C3B750C8](v78, v26, v116);
  v115[1] = v85;
  v86 = v97;
  MEMORY[0x1C3B750C8](v81, v97, v115);
  static ViewBuilder.buildBlock<A>(_:)(v56, v86, v98);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v96 + 8))(v56, v86);
}

uint64_t IconButton.buttonWithAccessbilityIdentifier()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t OpaqueTypeConformance2;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD v73[2];
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD v89[2];
  _QWORD v90[2];
  _QWORD v91[4];
  _QWORD v92[2];
  _QWORD v93[2];
  _QWORD v94[2];
  _QWORD v95[2];
  _QWORD v96[2];
  _QWORD v97[2];
  _QWORD v98[2];
  _QWORD v99[2];
  _QWORD v100[2];
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;

  v75 = (char *)a3;
  v74 = a2;
  v81 = a5;
  v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Button<Text>);
  v76 = a4;
  v10 = type metadata accessor for StateIconButtonStyle(255, a4, v8, v9);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Button<Text> and conformance Button<A>, &demangling cache variable for type metadata for Button<Text>);
  v12 = v11;
  v13 = MEMORY[0x1C3B750C8](&protocol conformance descriptor for StateIconButtonStyle<A>, v10);
  v87 = v7;
  v101 = v7;
  v102 = v10;
  v86 = v12;
  v103 = v12;
  v104 = v13;
  v14 = MEMORY[0x1E0CDDFE8];
  MEMORY[0x1C3B75050](255, &v101, MEMORY[0x1E0CDDFE8], 0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _EnvironmentKeyTransformModifier<Bool>);
  v15 = type metadata accessor for ModifiedContent();
  v16 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Button<EmptyView>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Button<EmptyView> and conformance Button<A>, &demangling cache variable for type metadata for Button<EmptyView>);
  v84 = v16;
  v101 = v16;
  v102 = v10;
  v83 = v17;
  v103 = v17;
  v104 = v13;
  v88 = v13;
  MEMORY[0x1C3B75050](255, &v101, v14, 0);
  v85 = v15;
  v82 = type metadata accessor for ModifiedContent();
  v18 = type metadata accessor for _ConditionalContent();
  v77 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)v73 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)v73 - v22;
  type metadata accessor for AccessibilityAttachmentModifier();
  v24 = type metadata accessor for ModifiedContent();
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v27 = (char *)v73 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)v73 - v29;
  v80 = type metadata accessor for _ConditionalContent();
  v79 = *(_QWORD *)(v80 - 8);
  MEMORY[0x1E0C80A78](v80);
  v78 = (char *)v73 - v31;
  IconButtonConfig.accessibilityIdentifier.getter();
  if (v33)
  {
    v73[1] = v32;
    IconButton.button()(a1, v74, (uint64_t)v75, v76, (uint64_t)v23);
    v101 = v87;
    v102 = v10;
    v34 = v88;
    v103 = v86;
    v104 = v88;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    v76 = v25;
    v36 = OpaqueTypeConformance2;
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyTransformModifier<Bool> and conformance _EnvironmentKeyTransformModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyTransformModifier<Bool>);
    v38 = v37;
    v91[2] = v36;
    v91[3] = v37;
    v75 = v30;
    v39 = v10;
    v40 = MEMORY[0x1E0CD9C20];
    v41 = MEMORY[0x1C3B750C8]();
    v101 = v84;
    v102 = v39;
    v103 = v83;
    v104 = v34;
    v91[0] = swift_getOpaqueTypeConformance2();
    v91[1] = v38;
    v42 = MEMORY[0x1C3B750C8](v40, v82, v91);
    v90[0] = v41;
    v90[1] = v42;
    v43 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDB8A0], v18, v90);
    View.accessibilityIdentifier(_:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v77 + 8))(v23, v18);
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type AccessibilityAttachmentModifier and conformance AccessibilityAttachmentModifier, (void (*)(uint64_t))MEMORY[0x1E0CDCFD0]);
    v89[0] = v43;
    v89[1] = v44;
    v45 = v40;
    v10 = v39;
    v46 = MEMORY[0x1C3B750C8](v45, v24, v89);
    v47 = (uint64_t)v75;
    static ViewBuilder.buildExpression<A>(_:)(v27, v24, v46);
    v48 = *(void (**)(char *, uint64_t))(v76 + 8);
    v48(v27, v24);
    static ViewBuilder.buildBlock<A>(_:)(v47, v24, (uint64_t)v27);
    v49 = (uint64_t)v78;
    static ViewBuilder.buildEither<A, B>(first:)();
    v48(v27, v24);
    v48((char *)v47, v24);
  }
  else
  {
    IconButton.button()(a1, v74, (uint64_t)v75, v76, (uint64_t)v20);
    v101 = v87;
    v102 = v10;
    v50 = v88;
    v103 = v86;
    v104 = v88;
    v51 = swift_getOpaqueTypeConformance2();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyTransformModifier<Bool> and conformance _EnvironmentKeyTransformModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyTransformModifier<Bool>);
    v53 = v52;
    v100[0] = v51;
    v100[1] = v52;
    v54 = MEMORY[0x1E0CD9C20];
    v55 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v85, v100);
    v101 = v84;
    v102 = v10;
    v103 = v83;
    v104 = v50;
    v99[0] = swift_getOpaqueTypeConformance2();
    v99[1] = v53;
    v56 = MEMORY[0x1C3B750C8](v54, v82, v99);
    v98[0] = v55;
    v98[1] = v56;
    v57 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDB8A0], v18, v98);
    static ViewBuilder.buildExpression<A>(_:)(v20, v18, v57);
    v58 = *(void (**)(char *, uint64_t))(v77 + 8);
    v58(v20, v18);
    static ViewBuilder.buildBlock<A>(_:)((uint64_t)v23, v18, (uint64_t)v20);
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type AccessibilityAttachmentModifier and conformance AccessibilityAttachmentModifier, (void (*)(uint64_t))MEMORY[0x1E0CDCFD0]);
    v97[0] = v57;
    v97[1] = v59;
    MEMORY[0x1C3B750C8](v54, v24, v97);
    v49 = (uint64_t)v78;
    static ViewBuilder.buildEither<A, B>(second:)();
    v58(v20, v18);
    v58(v23, v18);
  }
  v101 = v87;
  v102 = v10;
  v60 = v88;
  v103 = v86;
  v104 = v88;
  v61 = swift_getOpaqueTypeConformance2();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyTransformModifier<Bool> and conformance _EnvironmentKeyTransformModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyTransformModifier<Bool>);
  v63 = v62;
  v96[0] = v61;
  v96[1] = v62;
  v64 = MEMORY[0x1E0CD9C20];
  v65 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v85, v96);
  v101 = v84;
  v102 = v10;
  v103 = v83;
  v104 = v60;
  v95[0] = swift_getOpaqueTypeConformance2();
  v95[1] = v63;
  v66 = MEMORY[0x1C3B750C8](v64, v82, v95);
  v94[0] = v65;
  v94[1] = v66;
  v67 = MEMORY[0x1E0CDB8A0];
  v68 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDB8A0], v18, v94);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type AccessibilityAttachmentModifier and conformance AccessibilityAttachmentModifier, (void (*)(uint64_t))MEMORY[0x1E0CDCFD0]);
  v93[0] = v68;
  v93[1] = v69;
  v92[0] = MEMORY[0x1C3B750C8](v64, v24, v93);
  v92[1] = v68;
  v70 = v67;
  v71 = v80;
  MEMORY[0x1C3B750C8](v70, v80, v92);
  static ViewBuilder.buildBlock<A>(_:)(v49, v71, v81);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v79 + 8))(v49, v71);
}

uint64_t IconButton.button()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)();
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t OpaqueTypeConformance2;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(char *, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void (*v96)(char *, uint64_t);
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v107;
  char *v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  _QWORD v137[2];
  _QWORD v138[4];
  _QWORD v139[2];
  _QWORD v140[2];
  _QWORD v141[2];
  _QWORD v142[2];
  _QWORD v143[2];
  _QWORD __dst[20];

  v125 = a3;
  v123 = a2;
  v132 = a5;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<EmptyView>);
  v113 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v108 = (char *)&v107 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for StateIconButtonStyle(255, a4, v9, v10);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Button<EmptyView> and conformance Button<A>, &demangling cache variable for type metadata for Button<EmptyView>);
  v13 = v12;
  v14 = MEMORY[0x1C3B750C8](&protocol conformance descriptor for StateIconButtonStyle<A>, v11);
  v136 = v7;
  __dst[0] = v7;
  __dst[1] = v11;
  v134 = v13;
  __dst[2] = v13;
  __dst[3] = v14;
  v15 = MEMORY[0x1E0CDDFE8];
  v16 = MEMORY[0x1C3B75050](0, __dst, MEMORY[0x1E0CDDFE8], 0);
  v111 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v109 = (char *)&v107 - v17;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _EnvironmentKeyTransformModifier<Bool>);
  v18 = type metadata accessor for ModifiedContent();
  v112 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v115 = (char *)&v107 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v110 = (char *)&v107 - v21;
  MEMORY[0x1E0C80A78](v22);
  v114 = (char *)&v107 - v23;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<Text>);
  v119 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v117 = (char *)&v107 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = v26;
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Button<Text> and conformance Button<A>, &demangling cache variable for type metadata for Button<Text>);
  __dst[0] = v27;
  __dst[1] = v11;
  v135 = v11;
  v128 = v28;
  __dst[2] = v28;
  __dst[3] = v14;
  v133 = v14;
  v29 = MEMORY[0x1C3B75050](0, __dst, v15, 0);
  v120 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v116 = (char *)&v107 - v30;
  v118 = v31;
  v32 = type metadata accessor for ModifiedContent();
  v33 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  v35 = (char *)&v107 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v36);
  v121 = (char *)&v107 - v37;
  MEMORY[0x1E0C80A78](v38);
  v122 = (char *)&v107 - v39;
  v131 = v18;
  v40 = type metadata accessor for _ConditionalContent();
  v129 = *(_QWORD *)(v40 - 8);
  v130 = v40;
  MEMORY[0x1E0C80A78](v40);
  v42 = (char *)&v107 - v41;
  IconButtonConfig.title.getter();
  v126 = v32;
  v127 = v42;
  v124 = v27;
  if (v44)
  {
    v45 = v27;
    v115 = v35;
    v138[2] = v43;
    v138[3] = v44;
    v46 = v123;
    v107 = v33;
    if (v123)
    {
      v47 = swift_allocObject();
      v48 = v125;
      *(_QWORD *)(v47 + 16) = v46;
      *(_QWORD *)(v47 + 24) = v48;
      v49 = v46;
      v50 = a1;
    }
    else
    {
      v49 = 0;
      v50 = a1;
      v58 = *(_QWORD *)(a1 + 224);
      v57 = *(_QWORD *)(a1 + 232);
      v47 = swift_allocObject();
      *(_QWORD *)(v47 + 16) = v58;
      *(_QWORD *)(v47 + 24) = v57;
      swift_retain();
    }
    v59 = swift_allocObject();
    *(_QWORD *)(v59 + 16) = thunk for @escaping @callee_guaranteed () -> ()partial apply;
    *(_QWORD *)(v59 + 24) = v47;
    _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v49);
    lazy protocol witness table accessor for type String and conformance String();
    v60 = v117;
    Button<>.init<A>(_:action:)();
    memcpy(__dst, (const void *)(v50 + 16), 0x98uLL);
    v61 = swift_checkMetadataState();
    v62 = v116;
    v63 = v128;
    v64 = v133;
    View.buttonStyle<A>(_:)();
    (*(void (**)(char *, uint64_t))(v119 + 8))(v60, v45);
    IconButtonConfig.enabled.getter();
    __dst[0] = v45;
    __dst[1] = v61;
    __dst[2] = v63;
    __dst[3] = v64;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    v66 = v121;
    v67 = v118;
    View.disabled(_:)();
    (*(void (**)(char *, uint64_t))(v120 + 8))(v62, v67);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyTransformModifier<Bool> and conformance _EnvironmentKeyTransformModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyTransformModifier<Bool>);
    v69 = v68;
    v138[0] = OpaqueTypeConformance2;
    v138[1] = v68;
    v70 = v126;
    v71 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v126, v138);
    v72 = (uint64_t)v122;
    static ViewBuilder.buildExpression<A>(_:)(v66, v70, v71);
    v73 = *(void (**)(char *, uint64_t))(v107 + 8);
    v73(v66, v70);
    v74 = (uint64_t)v115;
    static ViewBuilder.buildBlock<A>(_:)(v72, v70, (uint64_t)v115);
    __dst[0] = v136;
    __dst[1] = v61;
    __dst[2] = v134;
    __dst[3] = v64;
    v137[0] = swift_getOpaqueTypeConformance2();
    v137[1] = v69;
    v75 = v131;
    MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v131, v137);
    v76 = (uint64_t)v127;
    v77 = v75;
    static ViewBuilder.buildEither<A, B>(first:)();
    v78 = v74;
    v79 = v124;
    v73((char *)v78, v70);
    v73((char *)v72, v70);
  }
  else
  {
    v122 = (char *)v16;
    v51 = v108;
    v52 = v123;
    if (v123)
    {
      v53 = swift_allocObject();
      v54 = v125;
      *(_QWORD *)(v53 + 16) = v52;
      *(_QWORD *)(v53 + 24) = v54;
      v55 = (void (*)())thunk for @escaping @callee_guaranteed () -> ()partial apply;
      v56 = a1;
    }
    else
    {
      v56 = a1;
      v81 = *(_QWORD *)(a1 + 224);
      v80 = *(_QWORD *)(a1 + 232);
      v53 = swift_allocObject();
      *(_QWORD *)(v53 + 16) = v81;
      *(_QWORD *)(v53 + 24) = v80;
      swift_retain();
      v55 = partial apply for thunk for @callee_guaranteed () -> ();
    }
    v82 = swift_allocObject();
    *(_QWORD *)(v82 + 16) = v55;
    *(_QWORD *)(v82 + 24) = v53;
    _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v52);
    Button.init(action:label:)();
    memcpy(__dst, (const void *)(v56 + 16), 0x98uLL);
    v83 = swift_checkMetadataState();
    v84 = v109;
    v85 = v136;
    v86 = v134;
    v87 = v133;
    View.buttonStyle<A>(_:)();
    (*(void (**)(char *, uint64_t))(v113 + 8))(v51, v85);
    IconButtonConfig.enabled.getter();
    __dst[0] = v85;
    __dst[1] = v83;
    __dst[2] = v86;
    __dst[3] = v87;
    v88 = v87;
    v89 = swift_getOpaqueTypeConformance2();
    v90 = v110;
    v91 = v122;
    View.disabled(_:)();
    (*(void (**)(char *, char *))(v111 + 8))(v84, v91);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyTransformModifier<Bool> and conformance _EnvironmentKeyTransformModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyTransformModifier<Bool>);
    v93 = v92;
    v143[0] = v89;
    v143[1] = v92;
    v77 = v131;
    v94 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v131, v143);
    v95 = (uint64_t)v114;
    static ViewBuilder.buildExpression<A>(_:)(v90, v77, v94);
    v96 = *(void (**)(char *, uint64_t))(v112 + 8);
    v96(v90, v77);
    v97 = (uint64_t)v115;
    static ViewBuilder.buildBlock<A>(_:)(v95, v77, (uint64_t)v115);
    v79 = v124;
    __dst[0] = v124;
    __dst[1] = v83;
    v63 = v128;
    __dst[2] = v128;
    __dst[3] = v88;
    v142[0] = swift_getOpaqueTypeConformance2();
    v142[1] = v93;
    v70 = v126;
    MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v126, v142);
    v76 = (uint64_t)v127;
    static ViewBuilder.buildEither<A, B>(second:)();
    v96((char *)v97, v77);
    v96((char *)v95, v77);
    v64 = v133;
  }
  v98 = v135;
  __dst[0] = v79;
  __dst[1] = v135;
  __dst[2] = v63;
  __dst[3] = v64;
  v99 = swift_getOpaqueTypeConformance2();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyTransformModifier<Bool> and conformance _EnvironmentKeyTransformModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyTransformModifier<Bool>);
  v101 = v100;
  v141[0] = v99;
  v141[1] = v100;
  v102 = MEMORY[0x1E0CD9C20];
  v103 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v70, v141);
  __dst[0] = v136;
  __dst[1] = v98;
  __dst[2] = v134;
  __dst[3] = v64;
  v140[0] = swift_getOpaqueTypeConformance2();
  v140[1] = v101;
  v104 = MEMORY[0x1C3B750C8](v102, v77, v140);
  v139[0] = v103;
  v139[1] = v104;
  v105 = v130;
  MEMORY[0x1C3B750C8](MEMORY[0x1E0CDB8A0], v130, v139);
  static ViewBuilder.buildBlock<A>(_:)(v76, v105, v132);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v129 + 8))(v76, v105);
}

void protocol witness for View.body.getter in conformance IconButton<A>(uint64_t a1)
{
  uint64_t *v1;

  IconButton.body.getter(*v1, v1[1], v1[2], *(_QWORD *)(a1 + 16));
}

uint64_t IconButtonConfig.buttonStyle.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  type metadata accessor for StateIconButtonStyle(0, *(_QWORD *)(*(_QWORD *)v4 + 80), a3, a4);
  v5 = OUTLINED_FUNCTION_50();
  return OUTLINED_FUNCTION_31_0(v5, v6, v7, v8);
}

uint64_t key path setter for IconButtonConfig.state : <A>IconButtonConfig<A>(uint64_t a1)
{
  __n128 v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v1 = MEMORY[0x1E0C80A78](a1);
  v3 = (char *)&v6 - v2;
  (*(void (**)(char *, __n128))(v4 + 16))((char *)&v6 - v2, v1);
  return IconButtonConfig.state.setter((uint64_t)v3);
}

void (*IconButtonConfig.state.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v3[1] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[2] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[3] = malloc(v6);
  v7 = malloc(v6);
  v3[4] = v7;
  IconButtonConfig.state.getter((uint64_t)v7);
  return IconButtonConfig.state.modify;
}

void IconButtonConfig.state.modify(uint64_t a1, char a2)
{
  _QWORD *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 24);
  v4 = *(void **)(*(_QWORD *)a1 + 32);
  if ((a2 & 1) != 0)
  {
    v5 = v2[1];
    v6 = v2[2];
    (*(void (**)(_QWORD, void *, uint64_t))(v6 + 16))(*(_QWORD *)(*(_QWORD *)a1 + 24), v4, v5);
    IconButtonConfig.state.setter((uint64_t)v3);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    IconButtonConfig.state.setter(*(_QWORD *)(*(_QWORD *)a1 + 32));
  }
  free(v4);
  free(v3);
  free(v2);
}

void key path getter for IconButtonConfig.enabled : <A>IconButtonConfig<A>()
{
  _BYTE *v0;

  *v0 = OUTLINED_FUNCTION_57_14() & 1;
  OUTLINED_FUNCTION_0();
}

void key path setter for IconButtonConfig.enabled : <A>IconButtonConfig<A>()
{
  OUTLINED_FUNCTION_51_33();
  OUTLINED_FUNCTION_0();
}

void IconButtonConfig.access<A>(keyPath:)()
{
  _QWORD *v0;

  MEMORY[0x1C3B750C8](&protocol conformance descriptor for IconButtonConfig<A>, *v0);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  OUTLINED_FUNCTION_45_0();
}

uint64_t closure #1 in IconButtonConfig.enabled.setter(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(a1 + 168) = a2;
  return result;
}

uint64_t IconButtonConfig.withMutation<A, B>(keyPath:_:)()
{
  _QWORD *v0;

  MEMORY[0x1C3B750C8](&protocol conformance descriptor for IconButtonConfig<A>, *v0);
  return ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
}

void IconButtonConfig.enabled.modify()
{
  uint64_t v0;

  OUTLINED_FUNCTION_17_62();
  OUTLINED_FUNCTION_3_108(v0);
  OUTLINED_FUNCTION_324();
  OUTLINED_FUNCTION_20_67();
  OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_2_107();
  OUTLINED_FUNCTION_45_3();
}

{
  OUTLINED_FUNCTION_21_68();
  OUTLINED_FUNCTION_28_53();
  OUTLINED_FUNCTION_0();
}

void sub_1BD37CACC()
{
  OUTLINED_FUNCTION_6_87();
  OUTLINED_FUNCTION_17_22();
  OUTLINED_FUNCTION_2_9();
  OUTLINED_FUNCTION_5_22();
}

void key path getter for IconButtonConfig.title : <A>IconButtonConfig<A>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  IconButtonConfig.title.getter();
  *a1 = v2;
  a1[1] = v3;
}

void key path setter for IconButtonConfig.title : <A>IconButtonConfig<A>(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for IconButtonConfig.title : <A>IconButtonConfig<A>(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))IconButtonConfig.title.setter);
}

uint64_t IconButtonConfig.title.setter()
{
  return IconButtonConfig.accessibilityLabel.setter();
}

uint64_t closure #1 in IconButtonConfig.title.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  *(_QWORD *)(a1 + 176) = a2;
  *(_QWORD *)(a1 + 184) = a3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

void IconButtonConfig.title.modify()
{
  uint64_t v0;

  OUTLINED_FUNCTION_17_62();
  OUTLINED_FUNCTION_3_108(v0);
  OUTLINED_FUNCTION_324();
  OUTLINED_FUNCTION_20_67();
  OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_2_107();
  OUTLINED_FUNCTION_45_3();
}

{
  OUTLINED_FUNCTION_21_68();
  OUTLINED_FUNCTION_28_53();
  OUTLINED_FUNCTION_0();
}

void sub_1BD37CC10()
{
  OUTLINED_FUNCTION_6_87();
  OUTLINED_FUNCTION_17_22();
  OUTLINED_FUNCTION_2_9();
  OUTLINED_FUNCTION_5_22();
}

uint64_t IconButtonConfig.hasBadge.getter()
{
  return specialized StateHolder.state.getter() & 1;
}

void IconButtonConfig.hasBadge.setter()
{
  specialized StateHolder.state.setter();
  OUTLINED_FUNCTION_0();
}

void IconButtonConfig.hasBadge.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = IconButtonConfig.hasBadge.getter() & 1;
  OUTLINED_FUNCTION_0();
}

void IconButtonConfig.hasBadge.modify()
{
  IconButtonConfig.hasBadge.setter();
  OUTLINED_FUNCTION_0();
}

void key path getter for IconButtonConfig.accessibilityLabel : <A>IconButtonConfig<A>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  IconButtonConfig.accessibilityLabel.getter();
  *a1 = v2;
  a1[1] = v3;
  OUTLINED_FUNCTION_0();
}

void key path setter for IconButtonConfig.accessibilityLabel : <A>IconButtonConfig<A>(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for IconButtonConfig.title : <A>IconButtonConfig<A>(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))IconButtonConfig.accessibilityLabel.setter);
}

void key path setter for IconButtonConfig.title : <A>IconButtonConfig<A>(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;

  v7 = *a1;
  v6 = a1[1];
  swift_bridgeObjectRetain();
  a5(v7, v6);
  OUTLINED_FUNCTION_18();
}

void IconButtonConfig.accessibilityLabel.modify()
{
  uint64_t v0;

  OUTLINED_FUNCTION_17_62();
  OUTLINED_FUNCTION_3_108(v0);
  OUTLINED_FUNCTION_324();
  OUTLINED_FUNCTION_20_67();
  OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_2_107();
  OUTLINED_FUNCTION_45_3();
}

{
  OUTLINED_FUNCTION_21_68();
  OUTLINED_FUNCTION_28_53();
  OUTLINED_FUNCTION_0();
}

void sub_1BD37CDA0()
{
  OUTLINED_FUNCTION_6_87();
  OUTLINED_FUNCTION_17_22();
  OUTLINED_FUNCTION_2_9();
  OUTLINED_FUNCTION_5_22();
}

void key path getter for IconButtonConfig.accessibilityIdentifier : <A>IconButtonConfig<A>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  IconButtonConfig.accessibilityIdentifier.getter();
  *a1 = v2;
  a1[1] = v3;
}

void key path setter for IconButtonConfig.accessibilityIdentifier : <A>IconButtonConfig<A>(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for IconButtonConfig.title : <A>IconButtonConfig<A>(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))IconButtonConfig.accessibilityIdentifier.setter);
}

uint64_t IconButtonConfig.accessibilityIdentifier.setter()
{
  return IconButtonConfig.accessibilityLabel.setter();
}

uint64_t closure #1 in IconButtonConfig.accessibilityIdentifier.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  *(_QWORD *)(a1 + 208) = a2;
  *(_QWORD *)(a1 + 216) = a3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

void IconButtonConfig.accessibilityIdentifier.modify()
{
  uint64_t v0;

  OUTLINED_FUNCTION_17_62();
  OUTLINED_FUNCTION_3_108(v0);
  OUTLINED_FUNCTION_324();
  OUTLINED_FUNCTION_20_67();
  OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_2_107();
  OUTLINED_FUNCTION_45_3();
}

{
  OUTLINED_FUNCTION_21_68();
  OUTLINED_FUNCTION_28_53();
  OUTLINED_FUNCTION_0();
}

void sub_1BD37CF68()
{
  OUTLINED_FUNCTION_6_87();
  OUTLINED_FUNCTION_17_22();
  OUTLINED_FUNCTION_2_9();
  OUTLINED_FUNCTION_5_22();
}

void IconButtonConfig.didTap.getter()
{
  swift_retain();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void IconButtonConfig.symbol.getter(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  __int128 v19;
  uint64_t v20;

  swift_getKeyPath();
  IconButtonConfig.access<A>(keyPath:)();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_2_0();
  v20 = *(_QWORD *)(v1 + 240);
  v3 = *(_QWORD *)(v1 + 280);
  v4 = *(_QWORD *)(v1 + 288);
  v5 = *(_QWORD *)(v1 + 296);
  v6 = *(_QWORD *)(v1 + 304);
  v7 = *(_QWORD *)(v1 + 312);
  v8 = *(_QWORD *)(v1 + 320);
  v9 = *(_QWORD *)(v1 + 328);
  OUTLINED_FUNCTION_20_8();
  v19 = *(_OWORD *)(v1 + 264);
  OUTLINED_FUNCTION_20_8();
  swift_retain();
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v6);
  v10 = _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v8);
  *a1 = v20;
  OUTLINED_FUNCTION_53_33(v10, v11, v12, v13, v14, v15, v16, v17, v18, v19);
  a1[5] = v3;
  a1[6] = v4;
  a1[7] = v5;
  a1[8] = v6;
  a1[9] = v7;
  a1[10] = v8;
  a1[11] = v9;
}

void *key path getter for IconButtonConfig.symbol : <A>IconButtonConfig<A>@<X0>(void *a1@<X8>)
{
  _QWORD v3[12];

  IconButtonConfig.symbol.getter(v3);
  return memcpy(a1, v3, 0x60uLL);
}

void key path setter for IconButtonConfig.symbol : <A>IconButtonConfig<A>(void *__src)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[12];

  memcpy(v4, __src, sizeof(v4));
  v1 = v4[6];
  v2 = v4[8];
  v3 = v4[10];
  swift_retain();
  swift_retain();
  swift_retain();
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v1);
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v2);
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  IconButtonConfig.symbol.setter(v4);
}

void IconButtonConfig.symbol.setter(_QWORD *a1)
{
  swift_getKeyPath();
  OUTLINED_FUNCTION_59_25();
  swift_release();
  swift_release();
  swift_release();
  _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe(a1[6], a1[7]);
  _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe(a1[8], a1[9]);
  _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe(a1[10], a1[11]);
  swift_release();
  OUTLINED_FUNCTION_14_1();
}

uint64_t closure #1 in IconButtonConfig.symbol.setter(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = a1 + 30;
  swift_beginAccess();
  v9 = a1[37];
  v10 = a1[36];
  v11 = a1[39];
  v14 = a1[40];
  v12 = a1[38];
  v13 = a1[41];
  memcpy(v4, a2, 0x60uLL);
  v5 = a2[6];
  v6 = a2[8];
  v7 = a2[10];
  swift_retain();
  swift_retain();
  swift_retain();
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v5);
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v6);
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v7);
  swift_release();
  swift_release();
  swift_release();
  _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe(v10, v9);
  _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe(v12, v11);
  return _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe(v14, v13);
}

void IconButtonConfig.symbol.modify()
{
  uint64_t v0;

  OUTLINED_FUNCTION_17_62();
  OUTLINED_FUNCTION_3_108(v0);
  OUTLINED_FUNCTION_324();
  OUTLINED_FUNCTION_20_67();
  OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_2_107();
  OUTLINED_FUNCTION_45_3();
}

{
  OUTLINED_FUNCTION_21_68();
  OUTLINED_FUNCTION_28_53();
  OUTLINED_FUNCTION_0();
}

void sub_1BD37D3C8()
{
  OUTLINED_FUNCTION_6_87();
  OUTLINED_FUNCTION_17_22();
  OUTLINED_FUNCTION_2_9();
  OUTLINED_FUNCTION_5_22();
}

void $defer #1 <A>() in IconButtonConfig.enabled.modify(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  swift_getKeyPath();
  MEMORY[0x1C3B750C8](&protocol conformance descriptor for IconButtonConfig<A>, v1);
  ObservationRegistrar.didSet<A, B>(_:keyPath:)();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_45_0();
}

void sub_1BD37D47C()
{
  _BYTE *v0;

  *v0 = OUTLINED_FUNCTION_57_14() & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD37D49C()
{
  OUTLINED_FUNCTION_51_33();
  OUTLINED_FUNCTION_0();
}

_QWORD *sub_1BD37D4B8(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t partial apply for closure #1 in IconButtonConfig.enabled.setter()
{
  uint64_t v0;

  return closure #1 in IconButtonConfig.enabled.setter(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t IconButtonConfig.init(buttonStyle:title:hasBadge:accessibilityLabel:accessibilityIdentifier:state:enabled:didTap:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v40;
  _QWORD v41[18];

  v14 = v12;
  v19 = *(_QWORD *)(*(_QWORD *)v14 + 80);
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](a1);
  OUTLINED_FUNCTION_77_1();
  *(_OWORD *)(v14 + 192) = 0u;
  *(_OWORD *)(v14 + 208) = 0u;
  *(_OWORD *)(v14 + 176) = 0u;
  ObservationRegistrar.init()();
  OUTLINED_FUNCTION_6_12((void *)(v14 + 352), (const void *)a1);
  outlined retain of IconButtonStyle<A>((_QWORD *)a1);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v14 + 176) = a2;
  *(_QWORD *)(v14 + 184) = a3;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StateHolder<Bool>);
  v21 = swift_allocObject();
  ObservationRegistrar.init()();
  *(_BYTE *)(v21 + 16) = a4;
  *(_QWORD *)(v14 + 344) = v21;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v14 + 192) = a5;
  *(_QWORD *)(v14 + 200) = a6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v14 + 208) = a7;
  *(_QWORD *)(v14 + 216) = a8;
  type metadata accessor for StateHolder(0, v19, v22, v23);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(v13, a9, v19);
  StateHolder.__allocating_init(state:)(v13);
  v25 = v24;
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(a9, v19);
  *(_BYTE *)(v14 + 168) = a10;
  *(_QWORD *)(v14 + 224) = a11;
  *(_QWORD *)(v14 + 232) = a12;
  v26 = *(_QWORD *)(a1 + 80);
  v27 = *(_QWORD *)(a1 + 88);
  v28 = *(_QWORD *)(a1 + 96);
  v29 = *(_QWORD *)(a1 + 104);
  v30 = *(_QWORD *)(a1 + 112);
  v31 = *(_QWORD *)(a1 + 120);
  *(_QWORD *)(v14 + 240) = *(_QWORD *)(a1 + 40);
  v32 = *(_QWORD *)(a1 + 128);
  v40 = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v14 + 248) = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v14 + 264) = v40;
  *(_QWORD *)(v14 + 280) = v26;
  *(_QWORD *)(v14 + 288) = v27;
  *(_QWORD *)(v14 + 296) = v28;
  *(_QWORD *)(v14 + 304) = v29;
  *(_QWORD *)(v14 + 312) = v30;
  *(_QWORD *)(v14 + 320) = v31;
  *(_QWORD *)(v14 + 328) = v32;
  *(_QWORD *)(v14 + 336) = v25;
  swift_retain();
  OUTLINED_FUNCTION_20_8();
  swift_retain();
  OUTLINED_FUNCTION_40_40();
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v31);
  outlined release of IconButtonStyle<A>((_QWORD *)a1);
  v33 = *(_QWORD *)(v14 + 336);
  v34 = *(_QWORD *)(v14 + 344);
  OUTLINED_FUNCTION_6_12(v41, (const void *)(v14 + 352));
  *(_QWORD *)(v14 + 16) = v33;
  *(_QWORD *)(v14 + 24) = v34;
  OUTLINED_FUNCTION_6_12((void *)(v14 + 32), (const void *)(v14 + 352));
  swift_retain();
  swift_retain();
  outlined retain of IconButtonStyle<A>(v41);
  return v14;
}

void sub_1BD37D754(_QWORD *a1@<X8>)
{
  keypath_get_1Tm((uint64_t (*)(void))IconButtonConfig.accessibilityLabel.getter, a1);
}

void sub_1BD37D768(_QWORD *a1@<X8>)
{
  keypath_get_1Tm((uint64_t (*)(void))IconButtonConfig.accessibilityIdentifier.getter, a1);
}

void StateIconButtonStyle.init(stateHolder:hasBadgeHolder:style:)(uint64_t a1@<X0>, uint64_t a2@<X1>, const void *a3@<X2>, _QWORD *a4@<X8>)
{
  OUTLINED_FUNCTION_6_12(a4 + 2, a3);
  *a4 = a1;
  a4[1] = a2;
  OUTLINED_FUNCTION_18();
}

_QWORD *IconButtonConfig.deinit()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[19];
  _QWORD v10[17];

  memcpy(v9, v0 + 2, sizeof(v9));
  outlined release of StateIconButtonStyle<A>(v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  v1 = v0[36];
  v2 = v0[37];
  v3 = v0[38];
  v4 = v0[39];
  v5 = v0[40];
  v6 = v0[41];
  swift_release();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_19();
  _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe(v1, v2);
  _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe(v3, v4);
  _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe(v5, v6);
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_6_12(v10, v0 + 44);
  outlined release of IconButtonStyle<A>(v10);
  v7 = type metadata accessor for ObservationRegistrar();
  OUTLINED_FUNCTION_17_1(v7);
  return v0;
}

uint64_t IconButtonConfig.__deallocating_deinit()
{
  IconButtonConfig.deinit();
  return swift_deallocClassInstance();
}

double static IconButtonStyle.Defaults.iconPadding.getter()
{
  return 7.0;
}

double IconButtonStyle.spacing.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

double IconButtonStyle.width.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

double IconButtonStyle.iconPadding.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

uint64_t IconButtonStyle.labelColor.getter()
{
  return swift_retain();
}

uint64_t IconButtonStyle.labelFont.getter()
{
  return swift_retain();
}

void IconButtonStyle.symbol.getter(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  __int128 v20;

  v3 = *(_QWORD *)(v1 + 40);
  v4 = *(_QWORD *)(v1 + 80);
  v5 = *(_QWORD *)(v1 + 88);
  v6 = *(_QWORD *)(v1 + 96);
  v7 = *(_QWORD *)(v1 + 104);
  v8 = *(_QWORD *)(v1 + 112);
  v9 = *(_QWORD *)(v1 + 120);
  v10 = *(_QWORD *)(v1 + 128);
  OUTLINED_FUNCTION_20_8();
  v20 = *(_OWORD *)(v1 + 64);
  OUTLINED_FUNCTION_20_8();
  swift_retain();
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v5);
  v11 = OUTLINED_FUNCTION_40_40();
  *a1 = v3;
  OUTLINED_FUNCTION_53_33(v11, v12, v13, v14, v15, v16, v17, v18, v19, v20);
  a1[5] = v4;
  a1[6] = v5;
  a1[7] = v6;
  a1[8] = v7;
  a1[9] = v8;
  a1[10] = v9;
  a1[11] = v10;
}

uint64_t StateIconButtonStyle.stateHolder.getter()
{
  return swift_retain();
}

uint64_t StateIconButtonStyle.hasBadgeHolder.getter()
{
  return swift_retain();
}

uint64_t StateIconButtonStyle.style.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  type metadata accessor for IconButtonStyle(0, *(_QWORD *)(a1 + 16), a3, a4);
  v4 = OUTLINED_FUNCTION_50();
  return OUTLINED_FUNCTION_31_0(v4, v5, v6, v7);
}

double StateIconButtonStyle.radius.getter()
{
  uint64_t v0;

  return OUTLINED_FUNCTION_50_30(*(double *)(v0 + 24), 0.5);
}

double StateIconButtonStyle.offsetX.getter()
{
  uint64_t v0;

  return OUTLINED_FUNCTION_50_30(*(double *)(v0 + 24) * 0.5, 0.5);
}

double StateIconButtonStyle.offsetY.getter()
{
  uint64_t v0;

  return OUTLINED_FUNCTION_50_30(*(double *)(v0 + 24) * 0.5, -0.866025404);
}

void StateIconButtonStyle.makeBody(configuration:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout>, _OffsetEffect>, _OpacityEffect>, _AllowsHitTestingModifier>>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _FixedSizeLayout>)>>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_4_1();
  v8 = *(_QWORD *)(v2 + 16);
  v7 = *(_QWORD *)(v2 + 24);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout>, _OffsetEffect>, _OpacityEffect>, _AllowsHitTestingModifier>>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _FixedSizeLayout>)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout>, _OffsetEffect>, _OpacityEffect>, _AllowsHitTestingModifier>>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _FixedSizeLayout>)>);
  *(_QWORD *)v3 = static HorizontalAlignment.center.getter();
  *(_QWORD *)(v3 + 8) = v8;
  *(_BYTE *)(v3 + 16) = 0;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout>, _OffsetEffect>, _OpacityEffect>, _AllowsHitTestingModifier>>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _FixedSizeLayout>)>>);
  closure #1 in StateIconButtonStyle.makeBody(configuration:)(a1, v2, *(_QWORD *)(a2 + 16), v3 + *(int *)(v9 + 44));
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout>, _OffsetEffect>, _OpacityEffect>, _AllowsHitTestingModifier>>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _FixedSizeLayout>)>> and conformance VStack<A>, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout>, _OffsetEffect>, _OpacityEffect>, _AllowsHitTestingModifier>>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _FixedSizeLayout>)>>);
  v10 = static Alignment.center.getter();
  v13 = 1;
  v12 = 1;
  specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(0, 1, 0, 1, v7, 0, 0, 1, 0, v12, 0, v13, v10, v11);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v3, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout>, _OffsetEffect>, _OpacityEffect>, _AllowsHitTestingModifier>>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _FixedSizeLayout>)>>);
  OUTLINED_FUNCTION_65_1();
}

void closure #1 in StateIconButtonStyle.makeBody(configuration:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t OpaqueTypeConformance2;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  _BYTE *v51;
  uint64_t KeyPath;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _BYTE *v60;
  uint64_t *v61;
  uint64_t v62;
  _BYTE *v63;
  uint64_t *v64;
  _BYTE *v65;
  _OWORD *v66;
  __int128 v67;
  _BYTE *v68;
  _BYTE *v69;
  uint64_t v70;
  uint64_t v71;
  _BYTE v72[12];
  int v73;
  __int128 v74;
  uint64_t v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _BYTE *v80;
  uint64_t v81;
  uint64_t v82;
  _BYTE *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _BYTE *v87;
  _BYTE *v88;
  _BYTE *v89;
  uint64_t v90;
  _BYTE *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _BYTE *v96;
  _BYTE *v97;
  _BYTE *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _BYTE *v102;
  uint64_t v103;
  uint64_t v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  uint64_t v108;
  uint64_t v109;
  __int128 v110;
  uint64_t v111;
  unsigned __int8 v112;

  v86 = a3;
  v85 = a1;
  v101 = a4;
  v94 = type metadata accessor for PrimitiveButtonStyleConfiguration.Label();
  v92 = *(_QWORD *)(v94 - 8);
  MEMORY[0x1E0C80A78](v94);
  v88 = &v72[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v90 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<TextAlignment>>);
  MEMORY[0x1E0C80A78](v90);
  v87 = &v72[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v93 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>);
  MEMORY[0x1E0C80A78](v93);
  v89 = &v72[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v95 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>);
  MEMORY[0x1E0C80A78](v95);
  v91 = &v72[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v99 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>);
  MEMORY[0x1E0C80A78](v99);
  v96 = &v72[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v100 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _FixedSizeLayout>);
  MEMORY[0x1E0C80A78](v100);
  v97 = &v72[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v12);
  v98 = &v72[-v13];
  v14 = type metadata accessor for PlainButtonStyle();
  v81 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v16 = &v72[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = type metadata accessor for PrimitiveButtonStyleConfiguration();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_QWORD *)(v18 + 64);
  MEMORY[0x1E0C80A78](v17);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, _BackgroundStyleModifier<Material>>, _ClipEffect<Circle>>, _OverlayModifier<AcceptFirstMouseView>>>);
  v78 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v22 = &v72[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v79 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.buttonStyle<A>(_:)>>.0);
  v84 = *(_QWORD *)(v79 - 8);
  MEMORY[0x1E0C80A78](v79);
  v102 = &v72[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v82 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout>, _OffsetEffect>, _OpacityEffect>, _AllowsHitTestingModifier>>>);
  MEMORY[0x1E0C80A78](v82);
  v80 = &v72[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v26 = MEMORY[0x1E0C80A78](v25);
  v83 = &v72[-v27];
  (*(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v18 + 16))(&v72[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)], a1, v17, v26);
  v28 = (*(unsigned __int8 *)(v18 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v29 = swift_allocObject();
  (*(void (**)(unint64_t, _BYTE *, uint64_t))(v18 + 32))(v29 + v28, &v72[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)], v17);
  v103 = v86;
  v104 = a2;
  v77 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, _BackgroundStyleModifier<Material>>, _ClipEffect<Circle>>, _OverlayModifier<AcceptFirstMouseView>>);
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, _BackgroundStyleModifier<Material>>, _ClipEffect<Circle>>, _OverlayModifier<AcceptFirstMouseView>> and conformance <> ModifiedContent<A, B>();
  Button.init(action:label:)();
  PlainButtonStyle.init()();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, _BackgroundStyleModifier<Material>>, _ClipEffect<Circle>>, _OverlayModifier<AcceptFirstMouseView>>> and conformance Button<A>, &demangling cache variable for type metadata for Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, _BackgroundStyleModifier<Material>>, _ClipEffect<Circle>>, _OverlayModifier<AcceptFirstMouseView>>>);
  v31 = v30;
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type PlainButtonStyle and conformance PlainButtonStyle, (void (*)(uint64_t))MEMORY[0x1E0CD9F78]);
  v33 = v32;
  View.buttonStyle<A>(_:)();
  (*(void (**)(_BYTE *, uint64_t))(v81 + 8))(v16, v14);
  (*(void (**)(_BYTE *, uint64_t))(v78 + 8))(v22, v20);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout>, _OffsetEffect>, _OpacityEffect>, _AllowsHitTestingModifier>);
  *(_QWORD *)&v105 = v20;
  *((_QWORD *)&v105 + 1) = v14;
  *(_QWORD *)&v106 = v31;
  *((_QWORD *)&v106 + 1) = v33;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v36 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout>, _OffsetEffect>, _OpacityEffect>, _AllowsHitTestingModifier> and conformance <> ModifiedContent<A, B>();
  v37 = v79;
  v81 = default argument 2 of View.frame(width:height:alignment:)(v79, v34, OpaqueTypeConformance2, v36);
  v78 = v38;
  closure #2 in closure #1 in StateIconButtonStyle.makeBody(configuration:)(a2, (uint64_t)&v105);
  v86 = v105;
  LOBYTE(v20) = BYTE8(v105);
  LOBYTE(v33) = BYTE9(v105);
  v39 = v106;
  LOBYTE(v17) = BYTE8(v106);
  v40 = v107;
  v76 = BYTE8(v107);
  v41 = v108;
  v75 = v109;
  v74 = v110;
  v42 = v111;
  v73 = v112;
  v43 = v84;
  v44 = (uint64_t)v80;
  v45 = v102;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v84 + 16))(v80, v102, v37);
  v46 = v44 + *(int *)(v82 + 36);
  *(_QWORD *)v46 = v86;
  *(_BYTE *)(v46 + 8) = v20;
  *(_BYTE *)(v46 + 9) = v33;
  *(_QWORD *)(v46 + 16) = v39;
  *(_BYTE *)(v46 + 24) = v17;
  *(_QWORD *)(v46 + 32) = v40;
  *(_BYTE *)(v46 + 40) = v76;
  v47 = v75;
  *(_QWORD *)(v46 + 48) = v41;
  *(_QWORD *)(v46 + 56) = v47;
  *(_OWORD *)(v46 + 64) = v74;
  *(_QWORD *)(v46 + 80) = v42;
  *(_BYTE *)(v46 + 88) = v73;
  v48 = v78;
  *(_QWORD *)(v46 + 96) = v81;
  *(_QWORD *)(v46 + 104) = v48;
  (*(void (**)(_BYTE *, uint64_t))(v43 + 8))(v45, v37);
  v49 = v44;
  v50 = v83;
  outlined init with take of Any?(v44, (uint64_t)v83, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout>, _OffsetEffect>, _OpacityEffect>, _AllowsHitTestingModifier>>>);
  v51 = v88;
  PrimitiveButtonStyleConfiguration.label.getter();
  KeyPath = swift_getKeyPath();
  v53 = v92;
  v54 = (uint64_t)v87;
  v55 = v94;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v92 + 16))(v87, v51, v94);
  v56 = v54 + *(int *)(v90 + 36);
  *(_QWORD *)v56 = KeyPath;
  *(_BYTE *)(v56 + 8) = 1;
  (*(void (**)(_BYTE *, uint64_t))(v53 + 8))(v51, v55);
  v57 = *(_QWORD *)(v77 + 40);
  v58 = *(_QWORD *)(v77 + 48);
  v59 = swift_getKeyPath();
  v60 = v89;
  outlined init with copy of FeatureEligibility?(v54, (uint64_t)v89, &demangling cache variable for type metadata for ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<TextAlignment>>);
  v61 = (uint64_t *)&v60[*(int *)(v93 + 36)];
  *v61 = v59;
  v61[1] = v58;
  swift_retain();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v54, &demangling cache variable for type metadata for ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<TextAlignment>>);
  v62 = swift_getKeyPath();
  v63 = v91;
  outlined init with copy of FeatureEligibility?((uint64_t)v60, (uint64_t)v91, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>);
  v64 = (uint64_t *)&v63[*(int *)(v95 + 36)];
  *v64 = v62;
  v64[1] = v57;
  swift_retain();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v60, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  v65 = v96;
  outlined init with copy of FeatureEligibility?((uint64_t)v63, (uint64_t)v96, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>);
  v66 = &v65[*(int *)(v99 + 36)];
  v67 = v106;
  *v66 = v105;
  v66[1] = v67;
  v66[2] = v107;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v63, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>);
  v68 = v97;
  outlined init with copy of FeatureEligibility?((uint64_t)v65, (uint64_t)v97, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>);
  *(_WORD *)&v68[*(int *)(v100 + 36)] = 1;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v65, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>);
  v69 = v98;
  outlined init with take of Any?((uint64_t)v68, (uint64_t)v98, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _FixedSizeLayout>);
  outlined init with copy of FeatureEligibility?((uint64_t)v50, v49, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout>, _OffsetEffect>, _OpacityEffect>, _AllowsHitTestingModifier>>>);
  outlined init with copy of FeatureEligibility?((uint64_t)v69, (uint64_t)v68, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _FixedSizeLayout>);
  v70 = v101;
  outlined init with copy of FeatureEligibility?(v49, v101, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout>, _OffsetEffect>, _OpacityEffect>, _AllowsHitTestingModifier>>>);
  v71 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout>, _OffsetEffect>, _OpacityEffect>, _AllowsHitTestingModifier>>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _FixedSizeLayout>));
  outlined init with copy of FeatureEligibility?((uint64_t)v68, v70 + *(int *)(v71 + 48), &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _FixedSizeLayout>);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v69, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _FixedSizeLayout>);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v50, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout>, _OffsetEffect>, _OpacityEffect>, _AllowsHitTestingModifier>>>);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v68, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _FixedSizeLayout>);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v49, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout>, _OffsetEffect>, _OpacityEffect>, _AllowsHitTestingModifier>>>);
}

void closure #1 in closure #1 in StateIconButtonStyle.makeBody(configuration:)(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(char *);
  uint64_t v26;
  uint64_t KeyPath;
  uint64_t *v28;
  void (*v29)(char *);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t (*v34)(char *);
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _OWORD *v45;
  __int128 v46;
  uint64_t (*v47)(char *);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _BYTE *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD v86[8];
  uint64_t (*v87)(char *);
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD v91[10];
  void (*v92)(char *);
  uint64_t v93;
  _QWORD v94[12];
  __int128 v95;
  __int128 v96;
  __int128 v97;
  char v98[8];
  uint64_t (*v99)(char *);
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;

  v82 = a2;
  v3 = type metadata accessor for Material();
  v80 = *(_QWORD *)(v3 - 8);
  v81 = v3;
  MEMORY[0x1E0C80A78](v3);
  v79 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>, Image>);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<_ConditionalContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>, Image>, _EnvironmentKeyWritingModifier<Font?>>);
  MEMORY[0x1E0C80A78](v83);
  v13 = (char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.fontWeight(_:)>>.0);
  v65 = *(_QWORD *)(v67 - 8);
  MEMORY[0x1E0C80A78](v67);
  v63 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>);
  MEMORY[0x1E0C80A78](v64);
  v68 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>);
  MEMORY[0x1E0C80A78](v66);
  v71 = (uint64_t)&v63 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>, _BackgroundStyleModifier<Color>>);
  MEMORY[0x1E0C80A78](v70);
  v72 = (uint64_t)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, _BackgroundStyleModifier<Material>>);
  MEMORY[0x1E0C80A78](v74);
  v77 = (char *)&v63 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, _BackgroundStyleModifier<Material>>, _ClipEffect<Circle>>);
  MEMORY[0x1E0C80A78](v73);
  v78 = (uint64_t)&v63 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, _BackgroundStyleModifier<Material>>, _ClipEffect<Circle>>, _OverlayModifier<AcceptFirstMouseView>>);
  MEMORY[0x1E0C80A78](v75);
  v76 = (uint64_t)&v63 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for StateIconButtonStyle(0, a1, v21, v22);
  StateIconButtonStyle.image()(v23, (uint64_t)v11);
  v85 = v23;
  StateIconButtonStyle.symbol.getter((uint64_t)v86);
  v25 = v87;
  v24 = v88;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy((uint64_t)v87);
  swift_release();
  swift_release();
  swift_release();
  _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe(v86[6], v86[7]);
  _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe(v25, v24);
  _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe(v89, v90);
  v84 = a1;
  v69 = v5;
  if (v25)
  {
    StateHolder.state.getter((uint64_t)v8);
    v26 = v25(v8);
    _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe(v25, v24);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, a1);
  }
  else
  {
    v26 = 0;
  }
  KeyPath = swift_getKeyPath();
  outlined init with copy of FeatureEligibility?((uint64_t)v11, (uint64_t)v13, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>, Image>);
  v28 = (uint64_t *)&v13[*(int *)(v83 + 36)];
  *v28 = KeyPath;
  v28[1] = v26;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v11, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>, Image>);
  StateIconButtonStyle.symbol.getter((uint64_t)v91);
  v29 = v92;
  v30 = v93;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy((uint64_t)v92);
  swift_release();
  swift_release();
  swift_release();
  _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe(v91[6], v91[7]);
  _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe(v91[8], v91[9]);
  _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe(v29, v30);
  if (v29)
  {
    StateHolder.state.getter((uint64_t)v8);
    v29(v8);
    _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe(v29, v30);
    v31 = v69;
    v32 = v84;
    (*(void (**)(char *, uint64_t))(v69 + 8))(v8, v84);
  }
  else
  {
    v32 = v84;
    v31 = v69;
  }
  lazy protocol witness table accessor for type ModifiedContent<_ConditionalContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>, Image>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>();
  v33 = v63;
  View.fontWeight(_:)();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v13, &demangling cache variable for type metadata for ModifiedContent<_ConditionalContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>, Image>, _EnvironmentKeyWritingModifier<Font?>>);
  StateIconButtonStyle.symbol.getter((uint64_t)v94);
  v34 = (uint64_t (*)(char *))v94[2];
  swift_release();
  swift_release();
  _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe(v94[6], v94[7]);
  _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe(v94[8], v94[9]);
  _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe(v94[10], v94[11]);
  StateHolder.state.getter((uint64_t)v8);
  v35 = v34(v8);
  swift_release();
  v36 = *(void (**)(char *, uint64_t))(v31 + 8);
  v36(v8, v32);
  v37 = v65;
  v39 = v67;
  v38 = (uint64_t)v68;
  (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v68, v33, v67);
  v40 = v64;
  *(_QWORD *)(v38 + *(int *)(v64 + 36)) = v35;
  (*(void (**)(char *, uint64_t))(v37 + 8))(v33, v39);
  v41 = lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>();
  default argument 2 of View.frame(width:height:alignment:)(v40, v41, v42, v43);
  _FrameLayout.init(width:height:alignment:)();
  v44 = v71;
  outlined init with copy of FeatureEligibility?(v38, v71, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>);
  v45 = (_OWORD *)(v44 + *(int *)(v66 + 36));
  v46 = v96;
  *v45 = v95;
  v45[1] = v46;
  v45[2] = v97;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v38, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>);
  StateIconButtonStyle.symbol.getter((uint64_t)v98);
  v47 = v99;
  swift_retain();
  swift_release();
  swift_release();
  swift_release();
  _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe(v100, v101);
  _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe(v102, v103);
  _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe(v104, v105);
  StateHolder.state.getter((uint64_t)v8);
  v48 = v47(v8);
  swift_release();
  v36(v8, v84);
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout> and conformance <> ModifiedContent<A, B>();
  LOBYTE(v38) = static Edge.Set.all.getter();
  v49 = v72;
  outlined init with copy of FeatureEligibility?(v44, v72, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>);
  v50 = v49 + *(int *)(v70 + 36);
  *(_QWORD *)v50 = v48;
  *(_BYTE *)(v50 + 8) = v38;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v44, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>);
  v51 = v79;
  static Material.ultraThin.getter();
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>();
  LOBYTE(v48) = static Edge.Set.all.getter();
  v52 = (uint64_t)v77;
  v53 = &v77[*(int *)(v74 + 36)];
  v55 = v80;
  v54 = v81;
  (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v53, v51, v81);
  v53[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _BackgroundStyleModifier<Material>)
             + 36)] = v48;
  outlined init with copy of FeatureEligibility?(v49, v52, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>, _BackgroundStyleModifier<Color>>);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v51, v54);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v49, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>, _BackgroundStyleModifier<Color>>);
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, _BackgroundStyleModifier<Material>> and conformance <> ModifiedContent<A, B>();
  lazy protocol witness table accessor for type Circle and conformance Circle();
  LOWORD(v48) = default argument 1 of View.clipShape<A>(_:style:)();
  v56 = v78;
  outlined init with copy of FeatureEligibility?(v52, v78, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, _BackgroundStyleModifier<Material>>);
  v57 = (_BYTE *)(v56 + *(int *)(v73 + 36));
  *v57 = v48 & 1;
  v57[1] = BYTE1(v48) & 1;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v52, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, _BackgroundStyleModifier<Material>>);
  v58 = static Alignment.center.getter();
  v60 = v59;
  v61 = v76;
  outlined init with copy of FeatureEligibility?(v56, v76, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, _BackgroundStyleModifier<Material>>, _ClipEffect<Circle>>);
  v62 = (uint64_t *)(v61 + *(int *)(v75 + 36));
  *v62 = v58;
  v62[1] = v60;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v56, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, _BackgroundStyleModifier<Material>>, _ClipEffect<Circle>>);
  outlined init with take of Any?(v61, v82, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, _BackgroundStyleModifier<Material>>, _ClipEffect<Circle>>, _OverlayModifier<AcceptFirstMouseView>>);
}

__n128 StateIconButtonStyle.symbol.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 result;
  __n128 v12;
  __int128 v13;

  v3 = *(_QWORD *)(v1 + 56);
  v4 = *(_QWORD *)(v1 + 96);
  v5 = *(_QWORD *)(v1 + 104);
  v6 = *(_QWORD *)(v1 + 112);
  v7 = *(_QWORD *)(v1 + 120);
  v8 = *(_QWORD *)(v1 + 128);
  v9 = *(_QWORD *)(v1 + 136);
  v10 = *(_QWORD *)(v1 + 144);
  v13 = *(_OWORD *)(v1 + 64);
  swift_retain();
  v12 = *(__n128 *)(v1 + 80);
  swift_retain();
  swift_retain();
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v5);
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v7);
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v9);
  *(_QWORD *)a1 = v3;
  *(_OWORD *)(a1 + 8) = v13;
  result = v12;
  *(__n128 *)(a1 + 24) = v12;
  *(_QWORD *)(a1 + 40) = v4;
  *(_QWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 56) = v6;
  *(_QWORD *)(a1 + 64) = v7;
  *(_QWORD *)(a1 + 72) = v8;
  *(_QWORD *)(a1 + 80) = v9;
  *(_QWORD *)(a1 + 88) = v10;
  return result;
}

uint64_t closure #2 in closure #1 in StateIconButtonStyle.makeBody(configuration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  double v5;
  double v6;
  double v7;
  uint64_t result;
  double v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;

  v4 = static Color.red.getter();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  v5 = *(double *)(a1 + 24) * 0.5;
  v6 = v5 * 0.5;
  v7 = v5 * -0.866025404;
  result = specialized StateHolder.state.getter();
  v9 = 0.85;
  *(_QWORD *)a2 = v4;
  *(_WORD *)(a2 + 8) = 256;
  if ((result & 1) == 0)
    v9 = 0.0;
  *(_QWORD *)(a2 + 16) = v10;
  *(_BYTE *)(a2 + 24) = v11;
  *(_QWORD *)(a2 + 32) = v12;
  *(_BYTE *)(a2 + 40) = v13;
  *(_QWORD *)(a2 + 48) = v14;
  *(_QWORD *)(a2 + 56) = v15;
  *(double *)(a2 + 64) = v6;
  *(double *)(a2 + 72) = v7;
  *(double *)(a2 + 80) = v9;
  *(_BYTE *)(a2 + 88) = 0;
  return result;
}

void protocol witness for PrimitiveButtonStyle.makeBody(configuration:) in conformance StateIconButtonStyle<A>(uint64_t a1, uint64_t a2)
{
  const void *v2;
  _BYTE __dst[152];

  memcpy(__dst, v2, sizeof(__dst));
  StateIconButtonStyle.makeBody(configuration:)(a1, a2);
}

void key path getter for EnvironmentValues.imageScale : EnvironmentValues, serialized()
{
  EnvironmentValues.imageScale.getter();
  OUTLINED_FUNCTION_0();
}

void sub_1BD37EEC0()
{
  EnvironmentValues.imageScale.getter();
  OUTLINED_FUNCTION_0();
}

void key path setter for EnvironmentValues.imageScale : EnvironmentValues, serialized(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = type metadata accessor for Image.Scale();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_4_1();
  (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v1, a1);
  EnvironmentValues.imageScale.setter();
  OUTLINED_FUNCTION_18();
}

void sub_1BD37EF44(_QWORD *a1@<X8>)
{
  keypath_get_1Tm((uint64_t (*)(void))IconButtonConfig.title.getter, a1);
}

void keypath_get_1Tm(uint64_t (*a1)(void)@<X3>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  *a2 = a1();
  a2[1] = v3;
  OUTLINED_FUNCTION_0();
}

uint64_t type metadata accessor for StateIconButtonStyle(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for StateIconButtonStyle);
}

uint64_t partial apply for closure #1 in IconButtonConfig.title.setter()
{
  uint64_t *v0;

  return closure #1 in IconButtonConfig.title.setter(v0[2], v0[3], v0[4]);
}

uint64_t partial apply for closure #1 in IconButtonConfig.accessibilityIdentifier.setter()
{
  uint64_t *v0;

  return closure #1 in IconButtonConfig.accessibilityIdentifier.setter(v0[2], v0[3], v0[4]);
}

uint64_t partial apply for closure #1 in IconButtonConfig.symbol.setter()
{
  uint64_t v0;

  return closure #1 in IconButtonConfig.symbol.setter(*(_QWORD **)(v0 + 16), *(_QWORD **)(v0 + 24));
}

_QWORD *outlined retain of IconButtonStyle<A>(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[11];
  v3 = a1[13];
  v4 = a1[15];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v2);
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
  return a1;
}

_QWORD *outlined release of IconButtonStyle<A>(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v2 = a1[11];
  v3 = a1[12];
  v4 = a1[13];
  v5 = a1[14];
  v6 = a1[15];
  v8 = a1[16];
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe(v2, v3);
  _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe(v4, v5);
  _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe(v6, v8);
  return a1;
}

_QWORD *outlined release of StateIconButtonStyle<A>(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = a1[13];
  v3 = a1[14];
  v4 = a1[15];
  v8 = a1[17];
  v6 = a1[16];
  v7 = a1[18];
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe(v2, v3);
  _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe(v4, v6);
  _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe(v8, v7);
  return a1;
}

uint64_t type metadata accessor for IconButtonStyle(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for IconButtonStyle);
}

uint64_t associated type witness table accessor for View.Body : View in IconButton<A>()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for PrimitiveButtonStyle.Body : View in StateIconButtonStyle<A>()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1BD37F284(uint64_t a1@<X8>)
{
  IconButtonConfig.state.getter(a1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD37F2B0(_BYTE *a1@<X8>)
{
  *a1 = IconButtonConfig.hasBadge.getter() & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD37F2D8()
{
  IconButtonConfig.hasBadge.setter();
  OUTLINED_FUNCTION_0();
}

uint64_t destroy for IconButton(uint64_t a1)
{
  uint64_t result;

  result = swift_release();
  if (*(_QWORD *)(a1 + 8))
    return swift_release();
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for IconButton(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;

  *a1 = *a2;
  v5 = a2 + 1;
  v4 = a2[1];
  swift_retain();
  if (v4)
  {
    v6 = a2[2];
    a1[1] = v4;
    a1[2] = v6;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 1) = *v5;
  }
  return a1;
}

_QWORD *assignWithCopy for IconButton(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *a1 = *a2;
  swift_retain();
  swift_release();
  v4 = a2[1];
  if (!a1[1])
  {
    if (v4)
    {
      v6 = a2[2];
      a1[1] = v4;
      a1[2] = v6;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  v5 = a2[2];
  a1[1] = v4;
  a1[2] = v5;
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *assignWithTake for IconButton(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *a1 = *a2;
  swift_release();
  v4 = a2[1];
  if (!a1[1])
  {
    if (v4)
    {
      v6 = a2[2];
      a1[1] = v4;
      a1[2] = v6;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  v5 = a2[2];
  a1[1] = v4;
  a1[2] = v5;
  swift_release();
  return a1;
}

uint64_t type metadata accessor for IconButton(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for IconButton);
}

uint64_t type metadata completion function for IconButtonConfig()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ObservationRegistrar();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for IconButtonConfig(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for IconButtonConfig);
}

uint64_t method lookup function for IconButtonConfig()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of IconButtonConfig.__allocating_init(buttonStyle:title:hasBadge:accessibilityLabel:accessibilityIdentifier:state:enabled:didTap:)(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(__int128 *);
  __int128 v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;

  v2 = *((_QWORD *)a1 + 2);
  v3 = *(uint64_t (**)(__int128 *))(v1 + 176);
  v5 = *a1;
  v6 = v2;
  v7 = *(__int128 *)((char *)a1 + 24);
  v8 = *(__int128 *)((char *)a1 + 40);
  v9 = *(__int128 *)((char *)a1 + 56);
  v10 = *(__int128 *)((char *)a1 + 72);
  v11 = *(__int128 *)((char *)a1 + 88);
  v12 = *(__int128 *)((char *)a1 + 104);
  v13 = *(__int128 *)((char *)a1 + 120);
  return v3(&v5);
}

uint64_t destroy for IconButtonStyle(_QWORD *a1)
{
  uint64_t result;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  result = swift_release();
  if (a1[11])
    result = swift_release();
  if (a1[13])
    result = swift_release();
  if (a1[15])
    return swift_release();
  return result;
}

uint64_t initializeWithCopy for IconButtonStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v14 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v14;
  v5 = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = v5;
  v7 = (_OWORD *)(a2 + 88);
  v6 = *(_QWORD *)(a2 + 88);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  if (v6)
  {
    v8 = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 88) = v6;
    *(_QWORD *)(a1 + 96) = v8;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 88) = *v7;
  }
  v9 = *(_QWORD *)(a2 + 104);
  if (v9)
  {
    v10 = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 104) = v9;
    *(_QWORD *)(a1 + 112) = v10;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  }
  v11 = *(_QWORD *)(a2 + 120);
  if (v11)
  {
    v12 = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 120) = v11;
    *(_QWORD *)(a1 + 128) = v12;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  }
  return a1;
}

_QWORD *assignWithCopy for IconButtonStyle(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  v4 = a2[6];
  a1[5] = a2[5];
  a1[6] = v4;
  swift_retain();
  swift_release();
  v5 = a2[8];
  a1[7] = a2[7];
  a1[8] = v5;
  swift_retain();
  swift_release();
  v6 = a2[10];
  a1[9] = a2[9];
  a1[10] = v6;
  swift_retain();
  swift_release();
  v7 = a2[11];
  if (a1[11])
  {
    if (v7)
    {
      v8 = a2[12];
      a1[11] = v7;
      a1[12] = v8;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v7)
  {
    v9 = a2[12];
    a1[11] = v7;
    a1[12] = v9;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 11);
LABEL_8:
  v10 = a2[13];
  if (a1[13])
  {
    if (v10)
    {
      v11 = a2[14];
      a1[13] = v10;
      a1[14] = v11;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v10)
  {
    v12 = a2[14];
    a1[13] = v10;
    a1[14] = v12;
    swift_retain();
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 13);
LABEL_15:
  v13 = a2[15];
  if (!a1[15])
  {
    if (v13)
    {
      v15 = a2[16];
      a1[15] = v13;
      a1[16] = v15;
      swift_retain();
      return a1;
    }
LABEL_21:
    *(_OWORD *)(a1 + 15) = *(_OWORD *)(a2 + 15);
    return a1;
  }
  if (!v13)
  {
    swift_release();
    goto LABEL_21;
  }
  v14 = a2[16];
  a1[15] = v13;
  a1[16] = v14;
  swift_retain();
  swift_release();
  return a1;
}

void *__swift_memcpy136_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x88uLL);
}

uint64_t assignWithTake for IconButtonStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_release();
  v4 = *(_QWORD *)(a2 + 88);
  if (*(_QWORD *)(a1 + 88))
  {
    if (v4)
    {
      v5 = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 88) = v4;
      *(_QWORD *)(a1 + 96) = v5;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    v6 = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 88) = v4;
    *(_QWORD *)(a1 + 96) = v6;
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
LABEL_8:
  v7 = *(_QWORD *)(a2 + 104);
  if (*(_QWORD *)(a1 + 104))
  {
    if (v7)
    {
      v8 = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 104) = v7;
      *(_QWORD *)(a1 + 112) = v8;
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v7)
  {
    v9 = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 104) = v7;
    *(_QWORD *)(a1 + 112) = v9;
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
LABEL_15:
  v10 = *(_QWORD *)(a2 + 120);
  if (!*(_QWORD *)(a1 + 120))
  {
    if (v10)
    {
      v12 = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 120) = v10;
      *(_QWORD *)(a1 + 128) = v12;
      return a1;
    }
LABEL_21:
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    return a1;
  }
  if (!v10)
  {
    swift_release();
    goto LABEL_21;
  }
  v11 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = v10;
  *(_QWORD *)(a1 + 128) = v11;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for IconButtonStyle(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 136))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IconButtonStyle(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 136) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 136) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata instantiation function for IconButtonStyle.Defaults()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t type metadata accessor for IconButtonStyle.Defaults(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for IconButtonStyle.Defaults);
}

uint64_t destroy for StateIconButtonStyle(_QWORD *a1)
{
  uint64_t result;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  result = swift_release();
  if (a1[13])
    result = swift_release();
  if (a1[15])
    result = swift_release();
  if (a1[17])
    return swift_release();
  return result;
}

uint64_t initializeWithCopy for StateIconButtonStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v15;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v15 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v15;
  v6 = *(_QWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 96) = v6;
  v8 = (_OWORD *)(a2 + 104);
  v7 = *(_QWORD *)(a2 + 104);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  if (v7)
  {
    v9 = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 104) = v7;
    *(_QWORD *)(a1 + 112) = v9;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 104) = *v8;
  }
  v10 = *(_QWORD *)(a2 + 120);
  if (v10)
  {
    v11 = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 120) = v10;
    *(_QWORD *)(a1 + 128) = v11;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  }
  v12 = *(_QWORD *)(a2 + 136);
  if (v12)
  {
    v13 = *(_QWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 136) = v12;
    *(_QWORD *)(a1 + 144) = v13;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  }
  return a1;
}

_QWORD *assignWithCopy for StateIconButtonStyle(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_retain();
  swift_release();
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  v4 = a2[8];
  a1[7] = a2[7];
  a1[8] = v4;
  swift_retain();
  swift_release();
  v5 = a2[10];
  a1[9] = a2[9];
  a1[10] = v5;
  swift_retain();
  swift_release();
  v6 = a2[12];
  a1[11] = a2[11];
  a1[12] = v6;
  swift_retain();
  swift_release();
  v7 = a2[13];
  if (a1[13])
  {
    if (v7)
    {
      v8 = a2[14];
      a1[13] = v7;
      a1[14] = v8;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v7)
  {
    v9 = a2[14];
    a1[13] = v7;
    a1[14] = v9;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 13);
LABEL_8:
  v10 = a2[15];
  if (a1[15])
  {
    if (v10)
    {
      v11 = a2[16];
      a1[15] = v10;
      a1[16] = v11;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v10)
  {
    v12 = a2[16];
    a1[15] = v10;
    a1[16] = v12;
    swift_retain();
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 15) = *(_OWORD *)(a2 + 15);
LABEL_15:
  v13 = a2[17];
  if (!a1[17])
  {
    if (v13)
    {
      v15 = a2[18];
      a1[17] = v13;
      a1[18] = v15;
      swift_retain();
      return a1;
    }
LABEL_21:
    *(_OWORD *)(a1 + 17) = *(_OWORD *)(a2 + 17);
    return a1;
  }
  if (!v13)
  {
    swift_release();
    goto LABEL_21;
  }
  v14 = a2[18];
  a1[17] = v13;
  a1[18] = v14;
  swift_retain();
  swift_release();
  return a1;
}

void *__swift_memcpy152_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x98uLL);
}

uint64_t assignWithTake for StateIconButtonStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_release();
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_release();
  v4 = *(_QWORD *)(a2 + 104);
  if (*(_QWORD *)(a1 + 104))
  {
    if (v4)
    {
      v5 = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 104) = v4;
      *(_QWORD *)(a1 + 112) = v5;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    v6 = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 104) = v4;
    *(_QWORD *)(a1 + 112) = v6;
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
LABEL_8:
  v7 = *(_QWORD *)(a2 + 120);
  if (*(_QWORD *)(a1 + 120))
  {
    if (v7)
    {
      v8 = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 120) = v7;
      *(_QWORD *)(a1 + 128) = v8;
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v7)
  {
    v9 = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 120) = v7;
    *(_QWORD *)(a1 + 128) = v9;
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
LABEL_15:
  v10 = *(_QWORD *)(a2 + 136);
  if (!*(_QWORD *)(a1 + 136))
  {
    if (v10)
    {
      v12 = *(_QWORD *)(a2 + 144);
      *(_QWORD *)(a1 + 136) = v10;
      *(_QWORD *)(a1 + 144) = v12;
      return a1;
    }
LABEL_21:
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    return a1;
  }
  if (!v10)
  {
    swift_release();
    goto LABEL_21;
  }
  v11 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = v10;
  *(_QWORD *)(a1 + 144) = v11;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for StateIconButtonStyle(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 152))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StateIconButtonStyle(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 152) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 152) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void sub_1BD380194(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *a1;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Button<Text>);
  v4 = type metadata accessor for StateIconButtonStyle(255, v1, v2, v3);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Button<Text> and conformance Button<A>, &demangling cache variable for type metadata for Button<Text>);
  MEMORY[0x1C3B750C8](&protocol conformance descriptor for StateIconButtonStyle<A>, v4);
  OUTLINED_FUNCTION_10_92();
}

uint64_t sub_1BD380224()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  _QWORD v28[2];
  _QWORD v29[2];
  _QWORD v30[2];
  _QWORD v31[2];
  _QWORD v32[2];
  _QWORD v33[19];

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _EnvironmentKeyTransformModifier<Bool>);
  v22 = type metadata accessor for ModifiedContent();
  v23 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Button<EmptyView>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Button<EmptyView> and conformance Button<A>, &demangling cache variable for type metadata for Button<EmptyView>);
  v7 = v6;
  *(_QWORD *)(v5 - 120) = v23;
  *(_QWORD *)(v5 - 112) = v0;
  *(_QWORD *)(v5 - 104) = v6;
  *(_QWORD *)(v5 - 96) = v1;
  MEMORY[0x1C3B75050](255, v5 - 120, v2, 0);
  v8 = type metadata accessor for ModifiedContent();
  v9 = type metadata accessor for _ConditionalContent();
  type metadata accessor for AccessibilityAttachmentModifier();
  v24 = type metadata accessor for ModifiedContent();
  v10 = type metadata accessor for _ConditionalContent();
  v25 = type metadata accessor for ModifiedContent();
  v26 = type metadata accessor for _ConditionalContent();
  *(_QWORD *)(v5 - 120) = v3;
  *(_QWORD *)(v5 - 112) = v0;
  *(_QWORD *)(v5 - 104) = v4;
  *(_QWORD *)(v5 - 96) = v1;
  v11 = OUTLINED_FUNCTION_7_18();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyTransformModifier<Bool> and conformance _EnvironmentKeyTransformModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyTransformModifier<Bool>);
  v13 = v12;
  v33[0] = v11;
  v33[1] = v12;
  v14 = MEMORY[0x1E0CD9C20];
  v15 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v22, v33);
  *(_QWORD *)(v5 - 120) = v23;
  *(_QWORD *)(v5 - 112) = v0;
  *(_QWORD *)(v5 - 104) = v7;
  *(_QWORD *)(v5 - 96) = v1;
  v32[0] = OUTLINED_FUNCTION_7_18();
  v32[1] = v13;
  v31[0] = v15;
  v31[1] = MEMORY[0x1C3B750C8](v14, v8, v32);
  v16 = MEMORY[0x1E0CDB8A0];
  v17 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDB8A0], v9, v31);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type AccessibilityAttachmentModifier and conformance AccessibilityAttachmentModifier, (void (*)(uint64_t))MEMORY[0x1E0CDCFD0]);
  v19 = v18;
  v30[0] = v17;
  v30[1] = v18;
  v29[0] = MEMORY[0x1C3B750C8](v14, v24, v30);
  v29[1] = v17;
  v20 = MEMORY[0x1C3B750C8](v16, v10, v29);
  v28[0] = v20;
  v28[1] = v19;
  v27[0] = MEMORY[0x1C3B750C8](v14, v25, v28);
  v27[1] = v20;
  return MEMORY[0x1C3B750C8](v16, v26, v27);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout>, _OffsetEffect>, _OpacityEffect>, _AllowsHitTestingModifier>>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _FixedSizeLayout>)>>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout>, _OffsetEffect>, _OpacityEffect>, _AllowsHitTestingModifier>>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _FixedSizeLayout>)>>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout>, _OffsetEffect>, _OpacityEffect>, _AllowsHitTestingModifier>>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _FixedSizeLayout>)>>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout>, _OffsetEffect>, _OpacityEffect>, _AllowsHitTestingModifier>>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _FixedSizeLayout>)>>, _FlexFrameLayout>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout>, _OffsetEffect>, _OpacityEffect>, _AllowsHitTestingModifier>>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _FixedSizeLayout>)>> and conformance VStack<A>, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout>, _OffsetEffect>, _OpacityEffect>, _AllowsHitTestingModifier>>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _FixedSizeLayout>)>>);
    v3[0] = v2;
    v3[1] = MEMORY[0x1E0CDA228];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v3);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout>, _OffsetEffect>, _OpacityEffect>, _AllowsHitTestingModifier>>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _FixedSizeLayout>)>>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t sub_1BD3804E8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = type metadata accessor for PrimitiveButtonStyleConfiguration();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

void partial apply for implicit closure #2 in implicit closure #1 in closure #1 in StateIconButtonStyle.makeBody(configuration:)()
{
  type metadata accessor for PrimitiveButtonStyleConfiguration();
  PrimitiveButtonStyleConfiguration.trigger()();
  OUTLINED_FUNCTION_0();
}

void partial apply for closure #1 in closure #1 in StateIconButtonStyle.makeBody(configuration:)(uint64_t a1@<X8>)
{
  uint64_t v1;

  closure #1 in closure #1 in StateIconButtonStyle.makeBody(configuration:)(*(_QWORD *)(v1 + 16), a1);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, _BackgroundStyleModifier<Material>>, _ClipEffect<Circle>>, _OverlayModifier<AcceptFirstMouseView>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, _BackgroundStyleModifier<Material>>, _ClipEffect<Circle>>, _OverlayModifier<AcceptFirstMouseView>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, _BackgroundStyleModifier<Material>>, _ClipEffect<Circle>>, _OverlayModifier<AcceptFirstMouseView>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, _BackgroundStyleModifier<Material>>, _ClipEffect<Circle>>, _OverlayModifier<AcceptFirstMouseView>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, _BackgroundStyleModifier<Material>>, _ClipEffect<Circle>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _OverlayModifier<AcceptFirstMouseView> and conformance _OverlayModifier<A>, &demangling cache variable for type metadata for _OverlayModifier<AcceptFirstMouseView>);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, _BackgroundStyleModifier<Material>>, _ClipEffect<Circle>>, _OverlayModifier<AcceptFirstMouseView>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<_ConditionalContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>, Image>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<_ConditionalContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>, Image>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<_ConditionalContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>, Image>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<_ConditionalContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>, Image>, _EnvironmentKeyWritingModifier<Font?>>);
    v2 = lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>, Image> and conformance <> _ConditionalContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Font?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Font?>);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<_ConditionalContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>, Image>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout>, _OffsetEffect>, _OpacityEffect>, _AllowsHitTestingModifier> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout>, _OffsetEffect>, _OpacityEffect>, _AllowsHitTestingModifier> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout>, _OffsetEffect>, _OpacityEffect>, _AllowsHitTestingModifier> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout>, _OffsetEffect>, _OpacityEffect>, _AllowsHitTestingModifier>);
    v2[0] = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout>, _OffsetEffect>, _OpacityEffect> and conformance <> ModifiedContent<A, B>();
    v2[1] = lazy protocol witness table accessor for type _AllowsHitTestingModifier and conformance _AllowsHitTestingModifier();
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout>, _OffsetEffect>, _OpacityEffect>, _AllowsHitTestingModifier> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout>, _OffsetEffect>, _OpacityEffect> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout>, _OffsetEffect>, _OpacityEffect> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout>, _OffsetEffect>, _OpacityEffect> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout>, _OffsetEffect>, _OpacityEffect>);
    v2[0] = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout>, _OffsetEffect> and conformance <> ModifiedContent<A, B>();
    v2[1] = MEMORY[0x1E0CD9728];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout>, _OffsetEffect>, _OpacityEffect> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout>, _OffsetEffect> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout>, _OffsetEffect> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout>, _OffsetEffect> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout>, _OffsetEffect>);
    v2[0] = lazy protocol witness table accessor for type ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout> and conformance <> ModifiedContent<A, B>();
    v2[1] = MEMORY[0x1E0CD90E0];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout>, _OffsetEffect> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _ShapeView<Circle, Color> and conformance _ShapeView<A, B>, &demangling cache variable for type metadata for _ShapeView<Circle, Color>);
    v3[0] = v2;
    v3[1] = MEMORY[0x1E0CD8D70];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v3);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type _AllowsHitTestingModifier and conformance _AllowsHitTestingModifier()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type _AllowsHitTestingModifier and conformance _AllowsHitTestingModifier;
  if (!lazy protocol witness table cache variable for type _AllowsHitTestingModifier and conformance _AllowsHitTestingModifier)
  {
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDC898], MEMORY[0x1E0CDC8A8]);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _AllowsHitTestingModifier and conformance _AllowsHitTestingModifier);
  }
  return result;
}

uint64_t sub_1BD380B88()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t specialized Sequence.compactMap<A>(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  int64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  id v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;

  v1 = a1;
  v24 = MEMORY[0x1E0DEE9D8];
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
    lazy protocol witness table accessor for type SGURL and conformance NSObject((unint64_t *)&lazy protocol witness table cache variable for type TUHandle and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
    result = Set.Iterator.init(_cocoa:)();
    v1 = v19;
    v17 = v20;
    v3 = v21;
    v4 = v22;
    v5 = v23;
  }
  else
  {
    v6 = -1 << *(_BYTE *)(a1 + 32);
    v17 = a1 + 56;
    v3 = ~v6;
    v7 = -v6;
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v5 = v8 & *(_QWORD *)(a1 + 56);
    result = swift_bridgeObjectRetain();
    v4 = 0;
  }
  v9 = (unint64_t)(v3 + 64) >> 6;
  if (v1 < 0)
    goto LABEL_10;
  while (1)
  {
    if (v5)
    {
      v10 = (v5 - 1) & v5;
      v11 = __clz(__rbit64(v5)) | (v4 << 6);
      v12 = v4;
      goto LABEL_29;
    }
    v14 = v4 + 1;
    if (__OFADD__(v4, 1))
      break;
    if (v14 >= v9)
      goto LABEL_34;
    v15 = *(_QWORD *)(v17 + 8 * v14);
    v12 = v4 + 1;
    if (!v15)
    {
      v12 = v4 + 2;
      if (v4 + 2 >= v9)
        goto LABEL_34;
      v15 = *(_QWORD *)(v17 + 8 * v12);
      if (!v15)
      {
        v12 = v4 + 3;
        if (v4 + 3 >= v9)
          goto LABEL_34;
        v15 = *(_QWORD *)(v17 + 8 * v12);
        if (!v15)
        {
          v12 = v4 + 4;
          if (v4 + 4 >= v9)
            goto LABEL_34;
          v15 = *(_QWORD *)(v17 + 8 * v12);
          if (!v15)
          {
            v12 = v4 + 5;
            if (v4 + 5 >= v9)
              goto LABEL_34;
            v15 = *(_QWORD *)(v17 + 8 * v12);
            if (!v15)
            {
              v16 = v4 + 6;
              while (v16 < v9)
              {
                v15 = *(_QWORD *)(v17 + 8 * v16++);
                if (v15)
                {
                  v12 = v16 - 1;
                  goto LABEL_28;
                }
              }
LABEL_34:
              outlined consume of [String : Application].Iterator._Variant();
              return v24;
            }
          }
        }
      }
    }
LABEL_28:
    v10 = (v15 - 1) & v15;
    v11 = __clz(__rbit64(v15)) + (v12 << 6);
LABEL_29:
    v13 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v11);
    if (!v13)
      goto LABEL_34;
    while (1)
    {
      objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97360]), sel__initWithHandle_, v13);

      MEMORY[0x1C3B7301C]();
      if (*(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      result = specialized Array._endMutation()();
      v4 = v12;
      v5 = v10;
      if ((v1 & 0x8000000000000000) == 0)
        break;
LABEL_10:
      if (__CocoaSet.Iterator.next()())
      {
        type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v13 = v18;
        swift_unknownObjectRelease();
        v12 = v4;
        v10 = v5;
        if (v18)
          continue;
      }
      goto LABEL_34;
    }
  }
  __break(1u);
  return result;
}

void specialized Sequence.flatMap<A>(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  id v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  id v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
    lazy protocol witness table accessor for type SGURL and conformance NSObject((unint64_t *)&lazy protocol witness table cache variable for type TUConversationMember and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
    Set.Iterator.init(_cocoa:)();
    v1 = v20;
    v18 = v21;
    v2 = v22;
    v3 = v23;
    v4 = v24;
  }
  else
  {
    v5 = -1 << *(_BYTE *)(a1 + 32);
    v18 = a1 + 56;
    v2 = ~v5;
    v6 = -v5;
    if (v6 < 64)
      v7 = ~(-1 << v6);
    else
      v7 = -1;
    v4 = v7 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v3 = 0;
  }
  v17 = (unint64_t)(v2 + 64) >> 6;
  if (v1 < 0)
    goto LABEL_10;
  while (1)
  {
    if (v4)
    {
      v8 = (v4 - 1) & v4;
      v9 = __clz(__rbit64(v4)) | (v3 << 6);
      v10 = v3;
      goto LABEL_29;
    }
    v12 = v3 + 1;
    if (__OFADD__(v3, 1))
      break;
    if (v12 >= v17)
      goto LABEL_32;
    v13 = *(_QWORD *)(v18 + 8 * v12);
    v10 = v3 + 1;
    if (!v13)
    {
      v10 = v3 + 2;
      if (v3 + 2 >= v17)
        goto LABEL_32;
      v13 = *(_QWORD *)(v18 + 8 * v10);
      if (!v13)
      {
        v10 = v3 + 3;
        if (v3 + 3 >= v17)
          goto LABEL_32;
        v13 = *(_QWORD *)(v18 + 8 * v10);
        if (!v13)
        {
          v10 = v3 + 4;
          if (v3 + 4 >= v17)
            goto LABEL_32;
          v13 = *(_QWORD *)(v18 + 8 * v10);
          if (!v13)
          {
            v10 = v3 + 5;
            if (v3 + 5 >= v17)
              goto LABEL_32;
            v13 = *(_QWORD *)(v18 + 8 * v10);
            if (!v13)
            {
              v14 = v3 + 6;
              while (v14 < v17)
              {
                v13 = *(_QWORD *)(v18 + 8 * v14++);
                if (v13)
                {
                  v10 = v14 - 1;
                  goto LABEL_28;
                }
              }
LABEL_32:
              outlined consume of [String : Application].Iterator._Variant();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    v8 = (v13 - 1) & v13;
    v9 = __clz(__rbit64(v13)) + (v10 << 6);
LABEL_29:
    v11 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v9);
    if (!v11)
      goto LABEL_32;
    while (1)
    {
      v15 = objc_msgSend(v11, sel_handles);
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
      lazy protocol witness table accessor for type SGURL and conformance NSObject((unint64_t *)&lazy protocol witness table cache variable for type TUHandle and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
      v16 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

      specialized Array.append<A>(contentsOf:)(v16);
      v3 = v10;
      v4 = v8;
      if ((v1 & 0x8000000000000000) == 0)
        break;
LABEL_10:
      if (__CocoaSet.Iterator.next()())
      {
        type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v11 = v19;
        swift_unknownObjectRelease();
        v10 = v3;
        v8 = v4;
        if (v19)
          continue;
      }
      goto LABEL_32;
    }
  }
  __break(1u);
}

uint64_t specialized static MainActor.run<A>(resultType:body:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

{
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return swift_task_switch();
}

uint64_t specialized static MainActor.run<A>(resultType:body:)()
{
  uint64_t v0;

  type metadata accessor for MainActor();
  *(_QWORD *)(v0 + 32) = OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_34();
  return OUTLINED_FUNCTION_2_8();
}

{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_release();
  if (v1)
  {
    (*(void (**)(_QWORD, _QWORD))(v0 + 16))(0, 0);
    OUTLINED_FUNCTION_381_1();
  }
  return OUTLINED_FUNCTION_132_8(v1 == 0, *(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;

  type metadata accessor for MainActor();
  *(_QWORD *)(v0 + 40) = OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_34();
  return OUTLINED_FUNCTION_2_8();
}

{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_release();
  if (v1)
  {
    (*(void (**)(_QWORD, uint64_t))(v0 + 16))(*(_QWORD *)(v0 + 32), 1);
    OUTLINED_FUNCTION_381_1();
  }

  return OUTLINED_FUNCTION_132_8(v1 == 0, *(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_48_2();
  *(_QWORD *)(v0 + 40) = OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_56_0();
  OUTLINED_FUNCTION_63_1();
  return OUTLINED_FUNCTION_0_6();
}

{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(v0 + 24);
  v2 = swift_release();
  v1(v2);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t specialized static MainActor.run<A>(resultType:body:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch();
}

void RecentsCallItem.init(message:title:contact:messageType:)(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, int a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  double v29;
  double v30;
  uint64_t (*v31)(uint64_t, uint64_t);
  void (*v32)(uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  void *v37;
  id v38;
  id v39;
  id v40;
  uint64_t v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t inited;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  id v51;
  unint64_t v52;
  char v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  int *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  uint64_t v76;
  int *v77;
  id v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  _QWORD *v83;
  uint64_t v84;
  _QWORD *v85;
  _QWORD *v86;
  uint64_t v87;
  void *v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t *v95;
  _BYTE v96[4];
  int v97;
  id v98;
  uint64_t v99;
  uint64_t v100;
  _BYTE *v101;
  uint64_t (*v102)(uint64_t, uint64_t);
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  void *v109;
  uint64_t v110;
  _BYTE *v111;
  uint64_t v112;
  int v113;
  uint64_t v114;

  v113 = a5;
  v109 = a4;
  v104 = a2;
  v105 = a3;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v11);
  v111 = &v96[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v103 = OUTLINED_FUNCTION_55_28();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v13);
  v101 = &v96[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_99_1();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_62();
  v108 = v17;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_79();
  v100 = v19 - v20;
  MEMORY[0x1E0C80A78](v21);
  v23 = &v96[-v22];
  v24 = OUTLINED_FUNCTION_33_0();
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  OUTLINED_FUNCTION_199_1();
  MEMORY[0x1E0C80A78](v26);
  OUTLINED_FUNCTION_256_2();
  v107 = OUTLINED_FUNCTION_52_6();
  v27 = *(int *)(v107 + 56);
  v28 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DBD2F0]), sel_init);
  v110 = a6;
  *(_QWORD *)(a6 + v27) = v28;
  dispatch thunk of Message.duration.getter();
  v30 = v29;
  dispatch thunk of Message.recordUUID.getter();
  v112 = UUID.uuidString.getter();
  v102 = v31;
  v32 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
  v106 = v6;
  v32(v6, v24);
  dispatch thunk of Message.messageFile.getter();
  v33 = OUTLINED_FUNCTION_32_3();
  OUTLINED_FUNCTION_66_1((uint64_t)v23, 0, v34, v33);
  dispatch thunk of Message.messageThumbnail.getter();
  LODWORD(v99) = dispatch thunk of Message.isRead.getter();
  v97 = dispatch thunk of Message.isSensitive.getter();
  LODWORD(v27) = (unsigned __int16)MessageType.rawValue.getter();
  LOBYTE(a6) = (_DWORD)v27 == (unsigned __int16)MessageType.rawValue.getter();
  v35 = (void *)objc_opt_self();
  v98 = v35;
  v36 = dispatch thunk of Message.from.getter();
  v37 = (void *)MEMORY[0x1C3B72E00](v36);
  OUTLINED_FUNCTION_27();
  v38 = objc_msgSend(v35, sel_normalizedHandleWithDestinationID_, v37);

  v39 = objc_allocWithZone(MEMORY[0x1E0DBD158]);
  v40 = @nonobjc TPMessageIndicatorViewModel.init(duration:identifier:mediaURL:thumbnailURL:isRead:isSensitive:isVideo:from:)(v30, v112, (uint64_t)v102, (uint64_t)v23, v100, v99 & 1, v97 & 1, a6, v38);
  dispatch thunk of Message.conversationID.getter();
  v100 = UUID.uuidString.getter();
  v99 = v41;
  v112 = v24;
  v102 = (uint64_t (*)(uint64_t, uint64_t))v32;
  v32(v8, v24);
  v42 = v111;
  dispatch thunk of Message.dateCreated.getter();
  v43 = OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_66_1((uint64_t)v42, 0, v44, v43);
  v45 = MessageType.mediaType.getter(v113);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<RecentsCallHandle>);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BD6441D0;
  v47 = dispatch thunk of Message.from.getter();
  v49 = v48;
  swift_bridgeObjectRetain();
  v50 = (void *)MEMORY[0x1C3B72E00](v47, v49);
  OUTLINED_FUNCTION_13_3();
  v51 = objc_msgSend(v98, sel_normalizedHandleWithDestinationID_, v50);

  if (v51)
  {
    OUTLINED_FUNCTION_13_3();
    v52 = TUHandle.recentsCallHandleType.getter(&v114);
    v53 = v114;
    v54 = OUTLINED_FUNCTION_9(v52, sel_value);
    v47 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v49 = v55;

  }
  else
  {
    v53 = 1;
  }
  *(_BYTE *)(inited + 32) = v53;
  *(_QWORD *)(inited + 40) = v47;
  *(_QWORD *)(inited + 48) = v49;
  v56 = specialized Set.init<A>(_:)(inited);
  v57 = (int *)v103;
  OUTLINED_FUNCTION_60_2();
  __swift_storeEnumTagSinglePayload(v58, v59, v60, v112);
  v61 = (uint64_t)v7 + v57[12];
  dispatch thunk of Message.conversationID.getter();
  OUTLINED_FUNCTION_83_0(v61, 0);
  v62 = v57[6];
  v63 = (_QWORD *)((char *)v7 + v57[11]);
  v64 = v57[13];
  *(_QWORD *)((char *)v7 + v64) = 0;
  v65 = v99;
  *v7 = v100;
  v7[1] = v65;
  outlined init with take of Any?((uint64_t)v111, (uint64_t)v7 + v57[5], (uint64_t *)&demangling cache variable for type metadata for Date?);
  *(_QWORD *)((char *)v7 + v62) = 0;
  v66 = (char *)v7 + v57[7];
  *(_QWORD *)v66 = v45;
  v66[8] = 0;
  *(_QWORD *)((char *)v7 + v57[8]) = v56;
  *(_QWORD *)((char *)v7 + v57[9]) = 0;
  *v63 = 0;
  v63[1] = 0;
  v63[2] = 0;
  v67 = (uint64_t)v101;
  *(_QWORD *)&v101[v57[6]] = 0;
  v68 = (_QWORD *)(v67 + v57[11]);
  *v68 = 0;
  v68[1] = 0;
  v68[2] = 0;
  *(_QWORD *)(v67 + v57[13]) = 0;
  *(_QWORD *)((char *)v7 + v64) = v40;
  v69 = OUTLINED_FUNCTION_68_17();
  OUTLINED_FUNCTION_224_0(v69, v70);
  v71 = v40;
  OUTLINED_FUNCTION_33_45((uint64_t)v7);
  v72 = v108;
  outlined init with take of StagedCollaboration(v67, v108, type metadata accessor for RecentCallRecentItemMetadata);
  if ((unsigned __int16)v113 >= 2u)
  {
    v74 = v110;
    v77 = (int *)v107;
    if ((unsigned __int16)v113 == 2)
    {
      outlined init with copy of ConversationControlsAppLaunchButtonType(v72, v110, type metadata accessor for RecentCallRecentItemMetadata);
      OUTLINED_FUNCTION_313_2();
      swift_storeEnumTagMultiPayload();
      v78 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
      OUTLINED_FUNCTION_74_13();
      OUTLINED_FUNCTION_349_1();
    }
    else
    {
      outlined init with copy of ConversationControlsAppLaunchButtonType(v72, v110, type metadata accessor for RecentCallRecentItemMetadata);
      OUTLINED_FUNCTION_313_2();
      swift_storeEnumTagMultiPayload();
      v79 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
      v80 = OUTLINED_FUNCTION_74_13();
      v81 = 0xE800000000000000;
    }
    OUTLINED_FUNCTION_0_3(v80, v81);
    OUTLINED_FUNCTION_277_3();
  }
  else
  {
    v74 = v110;
    OUTLINED_FUNCTION_255_2(v72, v73, type metadata accessor for RecentCallRecentItemMetadata);
    OUTLINED_FUNCTION_313_2();
    swift_storeEnumTagMultiPayload();
    v75 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
    v76 = OUTLINED_FUNCTION_74_13();
    OUTLINED_FUNCTION_0_3(v76, 0xEE004F494455415FLL);
    OUTLINED_FUNCTION_277_3();
    v77 = (int *)v107;
  }
  v82 = (_QWORD *)(v74 + v77[6]);
  *v82 = v63;
  v82[1] = type metadata accessor for RecentCallRecentItemMetadata;
  v83 = (_QWORD *)(v74 + v77[5]);
  v84 = v105;
  *v83 = v104;
  v83[1] = v84;
  outlined init with copy of FeatureEligibility?(v72 + v57[5], v74 + v77[9], (uint64_t *)&demangling cache variable for type metadata for Date?);
  *(_QWORD *)(v74 + v77[10]) = objc_msgSend((id)objc_opt_self(), sel_systemRedColor);
  v85 = (_QWORD *)(v74 + v77[7]);
  *v85 = 0;
  v85[1] = 0;
  v86 = (_QWORD *)(v74 + v77[8]);
  *v86 = 0;
  v86[1] = 0;
  *(_QWORD *)(v74 + v77[11]) = 0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v87 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v87 + 16) = xmmword_1BD6443F0;
  v88 = v109;
  *(_QWORD *)(v87 + 32) = v109;
  v114 = v87;
  specialized Array._endMutation()();
  *(_QWORD *)(v74 + v77[12]) = v114;
  v89 = v88;
  v90 = v106;
  dispatch thunk of Message.recordUUID.getter();
  v91 = UUID.uuidString.getter();
  v93 = v92;

  v94 = v102(v90, v112);
  OUTLINED_FUNCTION_171_1(v94, type metadata accessor for RecentCallRecentItemMetadata);
  v95 = (uint64_t *)(v74 + v77[13]);
  *v95 = v91;
  v95[1] = v93;
}

#error "1BD3828EC: call analysis failed (funcsize=80)"

void specialized Set.init<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  specialized Set.init<A>(_:)(a1, (uint64_t)&lazy cache variable for type metadata for TUHandle, 0x1E0DBD2F8, (uint64_t)&lazy protocol witness table cache variable for type TUHandle and conformance NSObject, (uint64_t)specialized Set._Variant.insert(_:), a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

{
  specialized Set.init<A>(_:)(a1, (uint64_t)&lazy cache variable for type metadata for TUConversationInvitationPreference, 0x1E0DBD288, (uint64_t)&lazy protocol witness table cache variable for type TUConversationInvitationPreference and conformance NSObject, (uint64_t)specialized Set._Variant.insert(_:), a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

{
  specialized Set.init<A>(_:)(a1, (uint64_t)&lazy cache variable for type metadata for TUConversationMember, 0x1E0DBD2A0, (uint64_t)&lazy protocol witness table cache variable for type TUConversationMember and conformance NSObject, (uint64_t)specialized Set._Variant.insert(_:), a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

void specialized Set.init<A>(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_93();
  v4 = v3;
  v5 = OUTLINED_FUNCTION_33_0();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
  OUTLINED_FUNCTION_19_11();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_79();
  OUTLINED_FUNCTION_183();
  MEMORY[0x1E0C80A78](v8);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_0_7();
  _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, v6, MEMORY[0x1E0CB09C8]);
  OUTLINED_FUNCTION_354_1();
  Set.init(minimumCapacity:)();
  v10 = *(_QWORD *)(v4 + 16);
  if (v10)
  {
    v11 = v4 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    v12 = *(_QWORD *)(v2 + 72);
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
    while (1)
    {
      v13(v1, v11, v5);
      OUTLINED_FUNCTION_19_3(v1, 0);
      OUTLINED_FUNCTION_69_0(v1, 1, v5);
      if (v14)
        break;
      OUTLINED_FUNCTION_8_7(v0, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 32));
      OUTLINED_FUNCTION_49_16();
      specialized Set._Variant.insert(_:)();
      OUTLINED_FUNCTION_54_27(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
      v11 += v12;
      if (!--v10)
        goto LABEL_5;
    }
  }
  else
  {
LABEL_5:
    OUTLINED_FUNCTION_60_2();
    __swift_storeEnumTagSinglePayload(v15, v16, v17, v5);
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_52_1();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  int64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[4];
  uint64_t v27;

  OUTLINED_FUNCTION_93();
  v5 = v4;
  v6 = OUTLINED_FUNCTION_33_0();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
  OUTLINED_FUNCTION_19_11();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_59_3();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_256_2();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_11_2();
  _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, v7, MEMORY[0x1E0CB09C8]);
  Set.init(minimumCapacity:)();
  specialized _NativeDictionary.makeIterator()(v26, v5);
  v11 = v26[0];
  v25 = v26[1];
  v12 = v26[3];
  v13 = v27;
  v14 = (unint64_t)(v26[2] + 64) >> 6;
  if (!v27)
    goto LABEL_3;
LABEL_2:
  OUTLINED_FUNCTION_372_1();
  v16 = v15 | (v12 << 6);
  while (1)
  {
    OUTLINED_FUNCTION_533(v2, *(_QWORD *)(v11 + 48) + *(_QWORD *)(v3 + 72) * v16, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
    OUTLINED_FUNCTION_72(v2, 0);
    OUTLINED_FUNCTION_69_0(v2, 1, v6);
    if (v21)
      goto LABEL_23;
    OUTLINED_FUNCTION_533(v0, v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32));
    OUTLINED_FUNCTION_315_0();
    specialized Set._Variant.insert(_:)();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v6);
    if (v13)
      goto LABEL_2;
LABEL_3:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v17 >= v14)
      goto LABEL_22;
    v18 = *(_QWORD *)(v25 + 8 * v17);
    v19 = v12 + 1;
    if (!v18)
    {
      v19 = v12 + 2;
      if (v12 + 2 >= v14)
        goto LABEL_22;
      v18 = *(_QWORD *)(v25 + 8 * v19);
      if (!v18)
      {
        v19 = v12 + 3;
        if (v12 + 3 >= v14)
          goto LABEL_22;
        v18 = *(_QWORD *)(v25 + 8 * v19);
        if (!v18)
        {
          v19 = v12 + 4;
          if (v12 + 4 >= v14)
            goto LABEL_22;
          v18 = *(_QWORD *)(v25 + 8 * v19);
          if (!v18)
          {
            v19 = v12 + 5;
            if (v12 + 5 >= v14)
              goto LABEL_22;
            v18 = *(_QWORD *)(v25 + 8 * v19);
            if (!v18)
            {
              v20 = v12 + 6;
              while (v20 < v14)
              {
                v18 = *(_QWORD *)(v25 + 8 * v20++);
                if (v18)
                {
                  v19 = v20 - 1;
                  goto LABEL_18;
                }
              }
LABEL_22:
              OUTLINED_FUNCTION_60_2();
              __swift_storeEnumTagSinglePayload(v22, v23, v24, v6);
LABEL_23:
              OUTLINED_FUNCTION_27_0();
              OUTLINED_FUNCTION_52_1();
              return;
            }
          }
        }
      }
    }
LABEL_18:
    v13 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v19 << 6);
    v12 = v19;
  }
  __break(1u);
}

{
  specialized Set.init<A>(_:)();
}

{
  specialized Set.init<A>(_:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(char *, uint64_t);
  void (*v4)(char *, uint64_t);
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t *v8;
  uint64_t (*v9)(uint64_t);
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[2];

  OUTLINED_FUNCTION_93();
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  OUTLINED_FUNCTION_97_1(v11, v9);
  OUTLINED_FUNCTION_168();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_55_3();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v19 - v14;
  _s10Foundation4UUIDVACSHAAWlTm_0(v8, v10, v6);
  v19[1] = Set.init(minimumCapacity:)();
  v16 = *(_QWORD *)(v0 + 16);
  if (v16)
  {
    v17 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    v18 = *(_QWORD *)(v2 + 72);
    do
    {
      OUTLINED_FUNCTION_259(v17, v1);
      v4(v15, v1);
      outlined destroy of RecentsCallItem((uint64_t)v15, v10);
      v17 += v18;
      --v16;
    }
    while (v16);
  }
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_52_1();
}

uint64_t specialized Set.init<A>(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v2 = Set.init(minimumCapacity:)();
  v10 = v2;
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = a1 + 40;
    do
    {
      OUTLINED_FUNCTION_25_2();
      OUTLINED_FUNCTION_43_15();
      specialized Set._Variant.insert(_:)(v5, v6, v7);
      swift_bridgeObjectRelease();
      v4 += 16;
      --v3;
    }
    while (v3);
    OUTLINED_FUNCTION_13_3();
    return v10;
  }
  else
  {
    v8 = v2;
    OUTLINED_FUNCTION_13_3();
  }
  return v8;
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  lazy protocol witness table accessor for type RecentsCallHandle and conformance RecentsCallHandle();
  v2 = Set.init(minimumCapacity:)();
  v11 = v2;
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = (uint64_t *)(a1 + 48);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      v7 = *((_BYTE *)v4 - 16);
      swift_bridgeObjectRetain();
      specialized Set._Variant.insert(_:)((uint64_t)&v10, v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 3;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v11;
  }
  else
  {
    v8 = v2;
    swift_bridgeObjectRelease();
  }
  return v8;
}

void specialized Set.init<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, id a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  unint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(id *, id);
  void (*v25)(id *, id);
  unint64_t v26;
  unint64_t v27;
  unint64_t *v28;
  unint64_t *v29;
  uint64_t v30;
  uint64_t i;
  id v32;

  OUTLINED_FUNCTION_258();
  a19 = v22;
  a20 = v23;
  v25 = v24;
  OUTLINED_FUNCTION_341_1();
  v27 = v26 >> 62;
  if (v26 >> 62)
  {
    OUTLINED_FUNCTION_124();
    _CocoaArrayWrapper.endIndex.getter();
    OUTLINED_FUNCTION_13_3();
  }
  type metadata accessor for NSObject(0, v21);
  v28 = (unint64_t *)OUTLINED_FUNCTION_318();
  lazy protocol witness table accessor for type SGURL and conformance NSObject(v28, v29);
  a10 = Set.init(minimumCapacity:)();
  if (!v27)
  {
    v30 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v30)
      goto LABEL_5;
LABEL_13:
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_6_2();
    return;
  }
  OUTLINED_FUNCTION_124();
  v30 = _CocoaArrayWrapper.endIndex.getter();
  OUTLINED_FUNCTION_13_3();
  if (!v30)
    goto LABEL_13;
LABEL_5:
  if (v30 >= 1)
  {
    for (i = 0; i != v30; ++i)
    {
      if ((v20 & 0xC000000000000001) != 0)
        v32 = (id)MEMORY[0x1C3B73D18](i, v20);
      else
        v32 = *(id *)(v20 + 8 * i + 32);
      v25(&a9, v32);

    }
    goto LABEL_13;
  }
  __break(1u);
}

void specialized Set.init<A>(_:)(uint64_t a1)
{
  uint64_t *v2;
  uint64_t v3;

  Set.init(minimumCapacity:)();
  if (*(_QWORD *)(a1 + 16))
  {
    while (1)
    {
      OUTLINED_FUNCTION_250_0();
      specialized Set._Variant.insert(_:)(v2, v3);
    }
  }
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_45_0();
}

{
  Swift::UInt *v2;
  Swift::UInt v3;

  lazy protocol witness table accessor for type InCallControlsState and conformance InCallControlsState();
  OUTLINED_FUNCTION_358_1();
  if (*(_QWORD *)(a1 + 16))
  {
    while (1)
    {
      OUTLINED_FUNCTION_250_0();
      specialized Set._Variant.insert(_:)(v2, v3);
    }
  }
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_45_0();
}

#error "1BD383210: call analysis failed (funcsize=30)"

#error "1BD38329C: call analysis failed (funcsize=30)"

void RecentsCallItem.isRecentCall.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_314_1();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_39_49(v1, v2);
  OUTLINED_FUNCTION_106_11();
  OUTLINED_FUNCTION_210_2();
  OUTLINED_FUNCTION_18();
}

void RecentsCallItemType.conversationUUID()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  char *v6;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for RecentOngoingConversationMetadata(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_173_3();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_292_1(v0, v4, v5);
  v6 = (char *)&loc_1BD383448 + dword_1BD38352C[OUTLINED_FUNCTION_154_4()];
  __asm { BR              X10 }
}

void sub_1BD383458(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_171_1(a1, type metadata accessor for RecentsCallItemType);
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_60_2();
  __swift_storeEnumTagSinglePayload(v1, v2, v3, v4);
  OUTLINED_FUNCTION_91();
}

void RecentsCallItem.hasURL.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_59_3();
  v2 = MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v23 - v3;
  v12 = RecentsCallItem.conversationLink.getter(v2, v5, v6, v7, v8, v9, v10, v11, v23, v24);
  if (v24)
  {
    v13 = OUTLINED_FUNCTION_25_1(v12, sel_URL);
    if (v13)
    {
      v14 = v13;
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      v15 = OUTLINED_FUNCTION_32_3();
      v16 = OUTLINED_FUNCTION_393_0();
    }
    else
    {
      v15 = type metadata accessor for URL();
      v16 = OUTLINED_FUNCTION_193_2();
    }
    v21 = __swift_storeEnumTagSinglePayload(v16, v17, 1, v15);
    OUTLINED_FUNCTION_167_4(v21, v22, &demangling cache variable for type metadata for URL?);
    OUTLINED_FUNCTION_281_3();
    OUTLINED_FUNCTION_32_3();
    v20 = OUTLINED_FUNCTION_69_0((uint64_t)v4, 1, v15);
  }
  else
  {
    v18 = OUTLINED_FUNCTION_32_3();
    v20 = OUTLINED_FUNCTION_66_1((uint64_t)v4, 1, v19, v18);
  }
  OUTLINED_FUNCTION_96_3(v20, &demangling cache variable for type metadata for URL?);
  OUTLINED_FUNCTION_91();
}

uint64_t RecentsCallItem.conversationLink.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(_QWORD);
  uint64_t EnumCaseMultiPayload;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  OUTLINED_FUNCTION_96();
  OUTLINED_FUNCTION_329_1();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_316_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v11);
  type metadata accessor for RecentsCallItemType(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_0_7();
  OUTLINED_FUNCTION_355_2(v13, v14, v15);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)sub_1BD383718 + 4 * byte_1BD65ABB0[EnumCaseMultiPayload]))(EnumCaseMultiPayload, v17, v18, v19, v20, v21, v22, v23, a9, a10);
}

void sub_1BD383718(uint64_t a1)
{
  _QWORD *v1;

  OUTLINED_FUNCTION_221_2(a1, type metadata accessor for RecentsCallItemType);
  v1[1] = 0;
  v1[2] = 0;
  *v1 = 0;
  OUTLINED_FUNCTION_65_1();
}

void RecentsCallItem.isInContacts.getter()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  unint64_t v7;

  RecentsCallItem.tuHandles.getter();
  if (one-time initialization token for faceTime != -1)
    swift_once();
  swift_retain();
  OUTLINED_FUNCTION_282_1();
  v1 = v0;
  OUTLINED_FUNCTION_27();
  v2 = MEMORY[0x1E0DEE9D8];
  v7 = MEMORY[0x1E0DEE9D8];
  v3 = *(_QWORD *)(v1 + 16);
  if (v3)
  {
    OUTLINED_FUNCTION_124();
    v4 = 32;
    do
    {
      v5 = *(void **)(v1 + v4);
      if (v5)
      {
        v6 = v5;
        MEMORY[0x1C3B7301C]();
        if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          OUTLINED_FUNCTION_212_2();
        OUTLINED_FUNCTION_315_0();
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      v4 += 56;
      --v3;
    }
    while (v3);
    OUTLINED_FUNCTION_13_3();
    v2 = v7;
  }
  OUTLINED_FUNCTION_13_3();
  if (v2 >> 62)
  {
    OUTLINED_FUNCTION_5_0();
    _CocoaArrayWrapper.endIndex.getter();
    OUTLINED_FUNCTION_27();
  }
  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_49_0();
}

void RecentsCallItem.isOrphanedVideoMessage.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_314_1();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_39_49(v1, v2);
  OUTLINED_FUNCTION_106_11();
  OUTLINED_FUNCTION_210_2();
  OUTLINED_FUNCTION_18();
}

void RecentsCallItem.tuHandles.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  OUTLINED_FUNCTION_93();
  OUTLINED_FUNCTION_376_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_131_6();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for RecentCallRecentItemMetadata(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  v5 = OUTLINED_FUNCTION_242_3();
  OUTLINED_FUNCTION_92_12(v5, (uint64_t)v3);
  v6 = (char *)&loc_1BD3839F4 + *((int *)qword_1BD383C10 + OUTLINED_FUNCTION_188_3());
  __asm { BR              X10 }
}

void sub_1BD383A04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;

  OUTLINED_FUNCTION_153_0(v0, v2);
  *(_QWORD *)(v3 - 88) = MEMORY[0x1E0DEE9E8];
  v4 = *(_QWORD *)(v2 + *(int *)(v1 + 32));
  OUTLINED_FUNCTION_124();
  OUTLINED_FUNCTION_105_2(v2);
  if (v4)
  {
    v5 = 0;
    v6 = v4 + 56;
    OUTLINED_FUNCTION_33_12();
    v9 = v8 & v7;
    v11 = (unint64_t)(v10 + 63) >> 6;
    while (1)
    {
      if (v9)
      {
        v12 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v13 = v12 | (v5 << 6);
      }
      else
      {
        v14 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
          __break(1u);
          goto LABEL_26;
        }
        if (v14 >= v11)
          goto LABEL_23;
        ++v5;
        if (!*(_QWORD *)(v6 + 8 * v14))
        {
          v5 = v14 + 1;
          if (v14 + 1 >= v11)
            goto LABEL_23;
          if (!*(_QWORD *)(v6 + 8 * v5))
          {
            v5 = v14 + 2;
            if (v14 + 2 >= v11)
              goto LABEL_23;
            if (!*(_QWORD *)(v6 + 8 * v5))
            {
              v15 = v14 + 3;
              if (v15 >= v11)
              {
LABEL_23:
                swift_release();
                break;
              }
              if (!*(_QWORD *)(v6 + 8 * v15))
              {
                while (1)
                {
                  v5 = v15 + 1;
                  if (__OFADD__(v15, 1))
                    break;
                  if (v5 >= v11)
                    goto LABEL_23;
                  ++v15;
                  if (*(_QWORD *)(v6 + 8 * v5))
                    goto LABEL_18;
                }
LABEL_26:
                __break(1u);
                JUMPOUT(0x1BD383C10);
              }
              v5 = v15;
            }
          }
        }
LABEL_18:
        OUTLINED_FUNCTION_361_0();
        v13 = v16 + (v5 << 6);
      }
      v17 = *(_QWORD *)(v4 + 48);
      v18 = v17 + 24 * v13;
      v19 = *(_QWORD *)(v18 + 16);
      if (v19)
      {
        v20 = *(_QWORD *)(v18 + 8);
        v21 = qword_1BD65B298[*(char *)(v17 + 24 * v13)];
        type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
        OUTLINED_FUNCTION_5_0();
        TUHandle.__allocating_init(type:value:)(v21, v20, v19);
        if (v22)
        {
          specialized Set._Variant.insert(_:)(v3 - 96, v22, v23, v24, v25, v26, v27, v28);

        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
  }
  OUTLINED_FUNCTION_52_1();
}

void RecentsCallItem.contact.getter()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  id v3;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for RecentsCallItem(0) + 48));
  if (v1 >> 62)
  {
    OUTLINED_FUNCTION_124();
    if (!_CocoaArrayWrapper.endIndex.getter())
      goto LABEL_5;
  }
  else
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    OUTLINED_FUNCTION_124();
    if (!v2)
      goto LABEL_5;
  }
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v1 & 0xC000000000000001) == 0, v1);
  if ((v1 & 0xC000000000000001) != 0)
    MEMORY[0x1C3B73D18](0, v1);
  else
    v3 = *(id *)(v1 + 32);
LABEL_5:
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_0();
}

void RecentsCallItem.wantsStagingArea.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_QWORD);
  int v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  type metadata accessor for RecentsCallItemType(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_4_1();
  RecentsCallItem.conversationLink.getter(v1, v2, v3, v4, v5, v6, v7, v8, v13, v14);
  outlined consume of ConversationLink?(v15);
  if (!v15)
  {
    OUTLINED_FUNCTION_43_15();
    outlined init with copy of ConversationControlsAppLaunchButtonType(v9, v10, v11);
    v12 = OUTLINED_FUNCTION_106_11();
    OUTLINED_FUNCTION_169_1();
    if (v12 == 1)
      RecentsCallItem.shouldDisplayStagingAreaForOngoingCall()();
  }
  OUTLINED_FUNCTION_18();
}

void RecentsCallItem.saveVideoMessage(_:)()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(void *, uint64_t);
  void (*v3)(void *, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(_QWORD);
  void *v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  char v34;
  uint64_t v35;
  void (*v36)(void *, uint64_t);
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t, uint64_t, uint64_t);
  unint64_t v47;
  _QWORD *v48;
  void (**v49)(void *, uint64_t);
  void (*v50)(void *, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t (*v54)(uint64_t, uint64_t, uint64_t);
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(void *, uint64_t);
  void (*v60)(void *, uint64_t);

  OUTLINED_FUNCTION_93();
  v59 = v3;
  v60 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_60_6(v5, v53);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_42_32();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v53 - v8;
  v10 = OUTLINED_FUNCTION_33_0();
  v56 = *(_QWORD *)(v10 - 8);
  v11 = *(_QWORD *)(v56 + 64);
  v12 = MEMORY[0x1E0C80A78](v10);
  v55 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_62();
  v58 = v13;
  OUTLINED_FUNCTION_198_1();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v14);
  v15 = type metadata accessor for RecentCallRecentItemMetadata(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_6_0();
  v17 = OUTLINED_FUNCTION_65_2();
  OUTLINED_FUNCTION_92_12(v17, v18);
  v19 = OUTLINED_FUNCTION_154_4();
  if ((_DWORD)v19 == 3)
  {
    v20 = OUTLINED_FUNCTION_299_1();
    outlined init with take of StagedCollaboration(v20, v21, v22);
    v23 = *(void **)(v0 + *(int *)(v15 + 52));
    if (v23)
    {
      v24 = objc_msgSend(v23, sel_messageUUID);
      if (v24)
      {
        v25 = v24;
        static UUID._unconditionallyBridgeFromObjectiveC(_:)();

        v26 = 0;
      }
      else
      {
        v26 = 1;
      }
      OUTLINED_FUNCTION_86_0(v1, v26);
      v31 = OUTLINED_FUNCTION_272_2();
      outlined init with take of Any?(v31, v32, v33);
      v30 = OUTLINED_FUNCTION_69_0((uint64_t)v9, 1, v10);
      if (!v34)
      {
        v38 = v56;
        v54 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v56 + 32);
        OUTLINED_FUNCTION_291(v58, (uint64_t)v9, v54);
        type metadata accessor for MessageStoreController();
        v39 = static MessageStoreController.shared.getter();
        v40 = v57;
        static TaskPriority.userInitiated.getter();
        v41 = type metadata accessor for TaskPriority();
        OUTLINED_FUNCTION_66_1(v40, 0, v42, v41);
        v43 = (uint64_t)v55;
        v44 = OUTLINED_FUNCTION_38_21();
        OUTLINED_FUNCTION_291(v44, v45, v46);
        v47 = (*(unsigned __int8 *)(v38 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
        v48 = (_QWORD *)swift_allocObject();
        v48[2] = 0;
        v48[3] = 0;
        v48[4] = v39;
        v54((uint64_t)v48 + v47, v43, v10);
        v49 = (void (**)(void *, uint64_t))((char *)v48 + ((v11 + v47 + 7) & 0xFFFFFFFFFFFFFFF8));
        v50 = v59;
        *v49 = v60;
        v49[1] = v50;
        swift_retain();
        v51 = OUTLINED_FUNCTION_315_0();
        _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v51);
        _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
        swift_release();
        swift_release();
        v52 = (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 8))(v58, v10);
        OUTLINED_FUNCTION_159_4(v52, type metadata accessor for RecentCallRecentItemMetadata);
        goto LABEL_13;
      }
    }
    else
    {
      OUTLINED_FUNCTION_60_2();
      v30 = __swift_storeEnumTagSinglePayload(v27, v28, v29, v10);
    }
    OUTLINED_FUNCTION_159_4(v30, type metadata accessor for RecentCallRecentItemMetadata);
    OUTLINED_FUNCTION_225_3(v35, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  }
  else
  {
    OUTLINED_FUNCTION_50_31(v19, type metadata accessor for RecentsCallItemType);
  }
  v36 = v60;
  if (v60)
  {
    lazy protocol witness table accessor for type RecentsCallItem.VideoMessageError and conformance RecentsCallItem.VideoMessageError();
    v37 = (void *)swift_allocError();
    v36(v37, 1);

  }
LABEL_13:
  OUTLINED_FUNCTION_52_1();
}

uint64_t RecentOngoingConversationMetadata.isRestricted.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for RecentOngoingConversationMetadata(0) + 24));
  if (one-time initialization token for shared != -1)
    swift_once();
  return (*(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)static RestrictedConversationChecker.shared)
                                            + 0x80))(v1) & 1;
}

uint64_t RecentOngoingConversationMetadata.isEligibleForHandoff.getter()
{
  uint64_t v0;
  id v1;

  v1 = objc_msgSend(*(id *)(v0 + *(int *)(type metadata accessor for RecentOngoingConversationMetadata(0) + 24)), sel_handoffEligibility);
  if (!v1)
    return 0;
  objc_msgSend(v1, sel_isEligible);
  OUTLINED_FUNCTION_49_5();
  return v0;
}

void RecentsCallItem.init(link:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t *v59;
  objc_class *v60;
  NSBundle v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  objc_class *v71;
  NSBundle v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  uint64_t v84;
  id v85;
  void *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  _QWORD *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  id v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;

  OUTLINED_FUNCTION_93();
  v2 = v1;
  v106 = v3;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_5_27();
  v102 = v5;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_18_0();
  v103 = v7;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_62();
  v104 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_59_3();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v101 - v12;
  v14 = (int *)OUTLINED_FUNCTION_52_6();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_11_2();
  v17 = *(void **)v2;
  v16 = *(_QWORD *)(v2 + 8);
  v18 = *(_QWORD *)(v2 + 16);
  v20 = *(int *)(v19 + 56);
  *(_QWORD *)((char *)v0 + v20) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DBD2F0]), sel_init);
  v21 = v17;
  OUTLINED_FUNCTION_86();
  v22 = OUTLINED_FUNCTION_21_7();
  v23 = OUTLINED_FUNCTION_25_1(v22, sel_URL);
  if (v23)
  {
    v24 = v23;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    v25 = OUTLINED_FUNCTION_32_3();
    v26 = OUTLINED_FUNCTION_393_0();
  }
  else
  {
    v25 = type metadata accessor for URL();
    v26 = OUTLINED_FUNCTION_193_2();
  }
  v28 = __swift_storeEnumTagSinglePayload(v26, v27, 1, v25);
  OUTLINED_FUNCTION_167_4(v28, v29, &demangling cache variable for type metadata for URL?);
  OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_30_4();

  OUTLINED_FUNCTION_32_3();
  v30 = OUTLINED_FUNCTION_69_0((uint64_t)v13, 1, v25);
  if (v31)
  {
    OUTLINED_FUNCTION_74();
    OUTLINED_FUNCTION_30_4();

    OUTLINED_FUNCTION_96_3(v32, &demangling cache variable for type metadata for URL?);
    OUTLINED_FUNCTION_60_2();
    __swift_storeEnumTagSinglePayload(v33, v34, v35, (uint64_t)v14);
    goto LABEL_41;
  }
  OUTLINED_FUNCTION_96_3(v30, &demangling cache variable for type metadata for URL?);
  *v0 = v21;
  v0[1] = v16;
  v0[2] = v18;
  type metadata accessor for RecentsCallItemType(0);
  swift_storeEnumTagMultiPayload();
  v105 = v21;
  OUTLINED_FUNCTION_86();
  OUTLINED_FUNCTION_21_7();
  OUTLINED_FUNCTION_384();
  v37 = MEMORY[0x1E0DEE9D8];
  if (v36)
  {
    v38 = v36;
    OUTLINED_FUNCTION_21_7();
    specialized Sequence.compactMap<A>(_:)(v38);
    v40 = v39;
    OUTLINED_FUNCTION_27();
  }
  else
  {
    v40 = MEMORY[0x1E0DEE9D8];
  }
  v107 = v37;
  v41 = *(_QWORD *)(v40 + 16);
  if (v41)
  {
    OUTLINED_FUNCTION_8_8();
    v42 = 32;
    do
    {
      v43 = *(void **)(v40 + v42);
      if (v43)
      {
        v44 = v43;
        MEMORY[0x1C3B7301C]();
        if (*(_QWORD *)((v107 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v107 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      v42 += 56;
      --v41;
    }
    while (v41);
    OUTLINED_FUNCTION_2_1();
    v37 = v107;
  }
  OUTLINED_FUNCTION_2_1();
  *(_QWORD *)((char *)v0 + v14[12]) = v37;
  v107 = (unint64_t)v105;
  v108 = v16;
  v109 = v18;
  ConversationLink.displayName.getter();
  v46 = v45;
  v48 = v47;
  OUTLINED_FUNCTION_384();
  if (!v49)
  {
    if ((MEMORY[0x1E0DEE9D8] & 0xC000000000000000) == 0 || !_CocoaArrayWrapper.endIndex.getter())
    {
      v50 = MEMORY[0x1E0DEE9E8];
      goto LABEL_22;
    }
    specialized Set.init(_nonEmptyArrayLiteral:)(MEMORY[0x1E0DEE9D8]);
  }
  v50 = v49;
LABEL_22:
  v51 = specialized _copyCollectionToContiguousArray<A>(_:)(v50);
  OUTLINED_FUNCTION_27();
  v52 = static RecentsCallItem.genericStringForFaceTimeLink(_:)(v51);
  v54 = v53;
  swift_release();
  v55 = v105;
  v107 = (unint64_t)v105;
  v108 = v16;
  v109 = v18;
  static RecentsCallItem.formattedOriginatorTitleFromLink(_:in:)((void **)&v107, 0);
  if (v57)
  {
    v58 = (_QWORD *)((char *)v0 + v14[5]);
    *v58 = v56;
    v58[1] = v57;
    if (v48)
    {
      OUTLINED_FUNCTION_27();
      v52 = v46;
      v54 = v48;
    }
  }
  else if (v48)
  {
    v59 = (_QWORD *)((char *)v0 + v14[5]);
    *v59 = v46;
    v59[1] = v48;
  }
  else
  {
    v60 = (objc_class *)objc_msgSend((id)objc_opt_self(), sel_conversationKit);
    OUTLINED_FUNCTION_270_0();
    OUTLINED_FUNCTION_7_14();
    v61.super.isa = v60;
    v66 = OUTLINED_FUNCTION_49_2(v62, v63, v64, v65, v61);
    v68 = v67;
    OUTLINED_FUNCTION_27();

    v69 = (_QWORD *)((char *)v0 + v14[5]);
    *v69 = v66;
    v69[1] = v68;
    v55 = v105;
    v71 = (objc_class *)OUTLINED_FUNCTION_9(v70, sel_conversationKit);
    OUTLINED_FUNCTION_270_0();
    OUTLINED_FUNCTION_7_14();
    v72.super.isa = v71;
    v52 = OUTLINED_FUNCTION_49_2(v73, v74, v75, v76, v72);
    v54 = v77;

  }
  v78 = (_QWORD *)((char *)v0 + v14[6]);
  *v78 = v52;
  v78[1] = v54;
  v107 = (unint64_t)v55;
  v108 = v16;
  v109 = v18;
  OUTLINED_FUNCTION_344_2();
  v81 = v103;
  v80 = v104;
  v82 = v102;
  if (v79)
  {
    v83 = v79;
    SGURL.recentsDate.getter(v103);

    v84 = OUTLINED_FUNCTION_33();
    OUTLINED_FUNCTION_33_33(v81);
  }
  else
  {
    v85 = objc_msgSend(v55, sel_creationDate);
    if (v85)
    {
      v86 = v85;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      v84 = OUTLINED_FUNCTION_33();
      v87 = v82;
      v88 = 0;
    }
    else
    {
      v84 = type metadata accessor for Date();
      v87 = v82;
      v88 = 1;
    }
    __swift_storeEnumTagSinglePayload(v87, v88, 1, v84);
    outlined init with take of Any?(v82, v81, (uint64_t *)&demangling cache variable for type metadata for Date?);
    OUTLINED_FUNCTION_33();
  }
  v89 = OUTLINED_FUNCTION_193_2();
  OUTLINED_FUNCTION_69_0(v89, v90, v84);
  if (v31)
  {
    Date.init()();
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v81, (uint64_t *)&demangling cache variable for type metadata for Date?);
  }
  else
  {
    OUTLINED_FUNCTION_33();
    OUTLINED_FUNCTION_33_28(v80, v81, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v84 - 8) + 32));
  }
  v91 = OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_66_1(v80, 0, v92, v91);
  outlined init with take of Any?(v80, (uint64_t)v0 + v14[9], (uint64_t *)&demangling cache variable for type metadata for Date?);
  *(_QWORD *)((char *)v0 + v14[10]) = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
  v107 = (unint64_t)v55;
  v108 = v16;
  v109 = v18;
  ConversationLink.uniqueId.getter();
  v93 = (_QWORD *)((char *)v0 + v14[13]);
  *v93 = v94;
  v93[1] = v95;
  v96 = (_QWORD *)((char *)v0 + v14[7]);
  *v96 = 0;
  v96[1] = 0;
  v97 = (_QWORD *)((char *)v0 + v14[8]);
  *v97 = 0;
  v97[1] = 0;
  v107 = (unint64_t)v55;
  v108 = v16;
  v109 = v18;
  ConversationLink.prevailingSuggestion.getter();
  v99 = v98;
  OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_30_4();

  if (v99)
  {
    SGURL.applicationIcon.getter();
    OUTLINED_FUNCTION_37_0();
  }
  else
  {
    v80 = 0;
  }
  *(_QWORD *)((char *)v0 + v14[11]) = v80;
  v100 = v106;
  OUTLINED_FUNCTION_224_0((uint64_t)v0, v106);
  OUTLINED_FUNCTION_83_0(v100, 0);
  OUTLINED_FUNCTION_33_45((uint64_t)v0);
LABEL_41:
  OUTLINED_FUNCTION_52_1();
}

id RecentsCallItem.shouldConfirmDelete.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  id v8;
  id v9;
  uint64_t v11;
  uint64_t v12;
  void *v13;

  RecentsCallItem.conversationLink.getter(a1, a2, a3, a4, a5, a6, a7, a8, v11, v12);
  v8 = v13;
  if (v13)
  {
    v9 = v13;
    outlined consume of ConversationLink?(v13);
    v8 = objc_msgSend(v9, sel_isLocallyCreated);

  }
  return v8;
}

void static RecentsCallItem.contactDetails(from:cache:)(uint64_t a1)
{
  if (a1)
  {
    swift_retain();
    OUTLINED_FUNCTION_282_1();
    OUTLINED_FUNCTION_45_0();
  }
}

void RecentsCallItem.allowsFaceTimeSpamReporting.getter()
{
  NSObject *v0;
  os_log_type_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  const char *v22;
  int v23;
  uint64_t v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  int v38;
  _BOOL8 v39;
  uint64_t v40;
  uint8_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  _QWORD v52[2];
  uint8_t *v53;
  uint64_t v54;
  int v55;
  NSObject *v56;
  uint64_t v57;

  OUTLINED_FUNCTION_93();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RecentsCallItemType?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for RecentsCallItem(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_79();
  OUTLINED_FUNCTION_186_2();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_199_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_183();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_47_23();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_59_3();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v52 - v13;
  RecentsCallItem.isTelephony.getter();
  if ((v15 & 1) != 0)
  {
    if (one-time initialization token for logger != -1)
      swift_once();
    v16 = OUTLINED_FUNCTION_17_2();
    v17 = OUTLINED_FUNCTION_182_3(v16, (uint64_t)static ReportSpamManager.logger);
    OUTLINED_FUNCTION_378_2(v17, v18, type metadata accessor for RecentsCallItem);
    Logger.logObject.getter();
    v19 = OUTLINED_FUNCTION_31_6();
    if (OUTLINED_FUNCTION_131_0(v19))
    {
      v20 = (uint8_t *)OUTLINED_FUNCTION_105();
      *(_DWORD *)v20 = 67109120;
      RecentsCallItem.isTelephony.getter();
      OUTLINED_FUNCTION_368_2(v21, type metadata accessor for RecentsCallItem);
      OUTLINED_FUNCTION_145_6();
      v22 = "allowsFaceTimeSpamReporting is false, because isTelephony: %{BOOL}d";
LABEL_17:
      _os_log_impl(&dword_1BD004000, v0, v1, v22, v20, 8u);
LABEL_18:
      OUTLINED_FUNCTION_60();
    }
    v28 = v3;
LABEL_24:
    outlined destroy of RecentsCallItem(v28, type metadata accessor for RecentsCallItem);
    goto LABEL_25;
  }
  OUTLINED_FUNCTION_95_1((uint64_t)v0, (uint64_t)v14);
  v23 = OUTLINED_FUNCTION_82_9();
  OUTLINED_FUNCTION_105_2((uint64_t)v14);
  if (v23 != 1)
  {
    RecentsCallItem.isInContacts.getter();
    if ((v29 & 1) == 0)
    {
      if (one-time initialization token for logger != -1)
        swift_once();
      v34 = OUTLINED_FUNCTION_17_2();
      OUTLINED_FUNCTION_182_3(v34, (uint64_t)static ReportSpamManager.logger);
      OUTLINED_FUNCTION_217_2((uint64_t)v0, v35, type metadata accessor for RecentsCallItem);
      v36 = Logger.logObject.getter();
      v37 = static os_log_type_t.default.getter();
      v38 = v37;
      v39 = os_log_type_enabled(v36, v37);
      if (v39)
      {
        v40 = OUTLINED_FUNCTION_105();
        v55 = v38;
        v41 = (uint8_t *)v40;
        v42 = OUTLINED_FUNCTION_105();
        v54 = v42;
        v57 = v42;
        v56 = v0;
        v53 = v41;
        *(_DWORD *)v41 = 136315138;
        v52[1] = v41 + 4;
        OUTLINED_FUNCTION_355_2(v42, v43, type metadata accessor for RecentsCallItemType);
        OUTLINED_FUNCTION_86_0((uint64_t)v6, 0);
        specialized >> prefix<A>(_:)((uint64_t)v6);
        v45 = v44;
        v47 = v46;
        OUTLINED_FUNCTION_275(v44, &demangling cache variable for type metadata for RecentsCallItemType?);
        v48 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v45, v47, &v57);
        OUTLINED_FUNCTION_61_0(v48);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        v49 = OUTLINED_FUNCTION_58_1();
        OUTLINED_FUNCTION_159_4(v49, type metadata accessor for RecentsCallItem);
        OUTLINED_FUNCTION_48(&dword_1BD004000, v36, (os_log_type_t)v55, "RecentsCallItem type: %s", v53);
        OUTLINED_FUNCTION_21();
        OUTLINED_FUNCTION_60();
      }
      OUTLINED_FUNCTION_159_4(v39, type metadata accessor for RecentsCallItem);

      OUTLINED_FUNCTION_71_1((uint64_t)v0, v50, type metadata accessor for RecentsCallItemType);
      v51 = (char *)&loc_1BD384CEC + 4 * byte_1BD65ABB5[OUTLINED_FUNCTION_82_9()];
      __asm { BR              X10 }
    }
    if (one-time initialization token for logger != -1)
      swift_once();
    v30 = OUTLINED_FUNCTION_17_2();
    OUTLINED_FUNCTION_182_3(v30, (uint64_t)static ReportSpamManager.logger);
    OUTLINED_FUNCTION_140_4((uint64_t)v0, v31, type metadata accessor for RecentsCallItem);
    Logger.logObject.getter();
    v32 = OUTLINED_FUNCTION_31_6();
    if (OUTLINED_FUNCTION_131_0(v32))
    {
      v20 = (uint8_t *)OUTLINED_FUNCTION_105();
      *(_DWORD *)v20 = 67109120;
      RecentsCallItem.isInContacts.getter();
      OUTLINED_FUNCTION_260_2(v33, type metadata accessor for RecentsCallItem);
      OUTLINED_FUNCTION_145_6();
      v22 = "allowsFaceTimeSpamReporting is false, isInContacts: %{BOOL}d";
      goto LABEL_17;
    }
    v28 = v2;
    goto LABEL_24;
  }
  if (one-time initialization token for logger != -1)
    swift_once();
  v24 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v24, (uint64_t)static ReportSpamManager.logger);
  v25 = OUTLINED_FUNCTION_31_6();
  if (OUTLINED_FUNCTION_13_0(v25))
  {
    *(_WORD *)OUTLINED_FUNCTION_105() = 0;
    OUTLINED_FUNCTION_14_14(&dword_1BD004000, v26, v27, "allowsFaceTimeSpamReporting is false because its ongoing call");
    goto LABEL_18;
  }
LABEL_25:

  OUTLINED_FUNCTION_52_1();
}

void RecentsCallItem.isRead.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;

  OUTLINED_FUNCTION_47_23();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for RecentCallRecentItemMetadata(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_40_41();
  v4 = OUTLINED_FUNCTION_82_9();
  if ((v4 - 3) > 1)
  {
    OUTLINED_FUNCTION_49_38(v4, type metadata accessor for RecentsCallItemType);
  }
  else
  {
    OUTLINED_FUNCTION_93_9();
    v5 = *(void **)(v0 + *(int *)(v2 + 52));
    v6 = v5;
    OUTLINED_FUNCTION_169_1();
    if (v5)
    {
      OUTLINED_FUNCTION_123(v7, sel_isRead);
      OUTLINED_FUNCTION_49_5();
    }
  }
  OUTLINED_FUNCTION_91();
}

ConversationKit::RecentsCallHandleType_optional __swiftcall RecentsCallHandleType.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 4;
  if ((unint64_t)rawValue < 4)
    v2 = rawValue;
  *v1 = v2;
  return (ConversationKit::RecentsCallHandleType_optional)rawValue;
}

uint64_t RecentsCallHandleType.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

ConversationKit::RecentsCallHandleType_optional protocol witness for RawRepresentable.init(rawValue:) in conformance RecentsCallHandleType(Swift::Int *a1)
{
  return RecentsCallHandleType.init(rawValue:)(*a1);
}

void protocol witness for RawRepresentable.rawValue.getter in conformance RecentsCallHandleType(uint64_t *a1@<X8>)
{
  *a1 = RecentsCallHandleType.rawValue.getter();
  OUTLINED_FUNCTION_0();
}

void RecentsCallHandle.type.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

void RecentsCallHandle.value.getter()
{
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void RecentsCallHandle.tuHandle()(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *((_QWORD *)v1 + 2);
  if (v2)
  {
    v3 = *((_QWORD *)v1 + 1);
    v4 = qword_1BD65B298[*v1];
    OUTLINED_FUNCTION_59(a1, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
    OUTLINED_FUNCTION_124();
    TUHandle.__allocating_init(type:value:)(v4, v3, v2);
  }
}

ConversationKit::RecentsCallHandle __swiftcall RecentsCallHandle.init(value:)(Swift::String_optional value)
{
  uint64_t v1;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;
  char v9;
  id v10;
  void *v11;
  ConversationKit::RecentsCallHandleType v12;
  uint64_t v13;
  void *v14;
  char v15;
  ConversationKit::RecentsCallHandle result;

  object = value.value._object;
  countAndFlagsBits = value.value._countAndFlagsBits;
  v4 = v1;
  if (value.value._object
    && (v5 = (void *)objc_opt_self(),
        OUTLINED_FUNCTION_5_0(),
        v6 = OUTLINED_FUNCTION_114(),
        v7 = (void *)MEMORY[0x1C3B72E00](v6),
        OUTLINED_FUNCTION_27(),
        v8 = objc_msgSend(v5, sel_normalizedHandleWithDestinationID_, v7),
        v7,
        v8))
  {
    OUTLINED_FUNCTION_27();
    TUHandle.recentsCallHandleType.getter(&v15);
    v9 = v15;
    v10 = objc_msgSend(v8, sel_value);
    countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)();
    object = v11;

  }
  else
  {
    v9 = 1;
  }
  *(_BYTE *)v4 = v9;
  *(_QWORD *)(v4 + 8) = countAndFlagsBits;
  *(_QWORD *)(v4 + 16) = object;
  OUTLINED_FUNCTION_49_0();
  result.value.value._object = v14;
  result.value.value._countAndFlagsBits = v13;
  result.type = v12;
  return result;
}

unint64_t TUHandle.recentsCallHandleType.getter@<X0>(_BYTE *a1@<X8>)
{
  void *v1;
  unint64_t result;
  unsigned int v4;

  result = (unint64_t)objc_msgSend(v1, sel_type);
  v4 = 0x3020101u >> (8 * result);
  if (result >= 4)
    LOBYTE(v4) = 1;
  *a1 = v4;
  return result;
}

void RecentsCallHandle.hash(into:)()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *((_QWORD *)v0 + 2);
  Hasher._combine(_:)(*v0);
  if (v1)
  {
    OUTLINED_FUNCTION_20_5();
    OUTLINED_FUNCTION_124();
    OUTLINED_FUNCTION_203_2();
    OUTLINED_FUNCTION_149_4();
  }
  else
  {
    OUTLINED_FUNCTION_31_14();
    OUTLINED_FUNCTION_18();
  }
}

uint64_t static RecentsCallHandle.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;

  if (*a1 == *a2)
  {
    v3 = *((_QWORD *)a1 + 2);
    v4 = *((_QWORD *)a2 + 2);
    if (v3)
    {
      if (v4)
      {
        v5 = *((_QWORD *)a1 + 1) == *((_QWORD *)a2 + 1) && v3 == v4;
        if (v5 || (OUTLINED_FUNCTION_13() & 1) != 0)
          return 1;
      }
    }
    else if (!v4)
    {
      return 1;
    }
  }
  return 0;
}

void RecentsCallHandle.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  char v11;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = OUTLINED_FUNCTION_5_1();
  OUTLINED_FUNCTION_38_26(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11);
  if (v1)
  {
    OUTLINED_FUNCTION_20_5();
    OUTLINED_FUNCTION_124();
    OUTLINED_FUNCTION_203_2();
  }
  else
  {
    OUTLINED_FUNCTION_31_14();
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_4_6();
  OUTLINED_FUNCTION_95_0();
}

void RecentCallRecentItemMetadata.uniqueId.getter()
{
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void RecentCallRecentItemMetadata.date.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_55_28();
  OUTLINED_FUNCTION_124_2(v0 + *(int *)(v1 + 20), v2, (uint64_t *)&demangling cache variable for type metadata for Date?);
  OUTLINED_FUNCTION_0();
}

void RecentCallRecentItemMetadata.recentCall.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for RecentCallRecentItemMetadata(0);
  OUTLINED_FUNCTION_106_10(*(int *)(v0 + 24));
  OUTLINED_FUNCTION_0();
}

void RecentCallRecentItemMetadata.recentCall.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(OUTLINED_FUNCTION_55_28() + 24);

  *(_QWORD *)(v1 + v3) = a1;
  OUTLINED_FUNCTION_18();
}

uint64_t (*RecentCallRecentItemMetadata.recentCall.modify())(_QWORD)
{
  type metadata accessor for RecentCallRecentItemMetadata(0);
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t RecentCallRecentItemMetadata.mediaType.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(OUTLINED_FUNCTION_55_28() + 28));
}

uint64_t RecentCallRecentItemMetadata.remoteParticipantHandles.getter()
{
  OUTLINED_FUNCTION_55_28();
  return swift_bridgeObjectRetain();
}

uint64_t RecentCallRecentItemMetadata.countOfExcludedHandles.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(OUTLINED_FUNCTION_55_28() + 36));
}

void RecentCallRecentItemMetadata.groupUUID.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_55_28();
  OUTLINED_FUNCTION_124_2(v0 + *(int *)(v1 + 40), v2, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_0();
}

void *RecentCallRecentItemMetadata.conversationLink.getter()
{
  uint64_t v0;
  void *v1;

  v0 = type metadata accessor for RecentCallRecentItemMetadata(0);
  v1 = (void *)OUTLINED_FUNCTION_280_2(*(int *)(v0 + 44));
  return OUTLINED_FUNCTION_201_2(v1);
}

__n128 RecentCallRecentItemMetadata.conversationLink.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  __n128 result;
  __n128 v5;

  v5 = *a1;
  v2 = a1[1].n128_u64[0];
  v3 = v1 + *(int *)(type metadata accessor for RecentCallRecentItemMetadata(0) + 44);
  outlined consume of ConversationLink?(*(void **)v3);
  result = v5;
  *(__n128 *)v3 = v5;
  *(_QWORD *)(v3 + 16) = v2;
  return result;
}

uint64_t (*RecentCallRecentItemMetadata.conversationLink.modify())(_QWORD)
{
  type metadata accessor for RecentCallRecentItemMetadata(0);
  return TPNumberPadCharacter.rawValue.getter;
}

void RecentCallRecentItemMetadata.conversationID.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_55_28();
  OUTLINED_FUNCTION_124_2(v0 + *(int *)(v1 + 48), v2, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_0();
}

void RecentCallRecentItemMetadata.messageIndicatorViewModel.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for RecentCallRecentItemMetadata(0);
  OUTLINED_FUNCTION_106_10(*(int *)(v0 + 52));
  OUTLINED_FUNCTION_0();
}

void RecentCallRecentItemMetadata.messageIndicatorViewModel.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(OUTLINED_FUNCTION_55_28() + 52);

  *(_QWORD *)(v1 + v3) = a1;
  OUTLINED_FUNCTION_18();
}

uint64_t (*RecentCallRecentItemMetadata.messageIndicatorViewModel.modify())(_QWORD)
{
  type metadata accessor for RecentCallRecentItemMetadata(0);
  return TPNumberPadCharacter.rawValue.getter;
}

void RecentCallRecentItemMetadata.init(metadata:conversationLink:)(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  int *v6;
  _QWORD *v7;
  uint64_t v8;
  __int128 v9;

  v9 = *a2;
  v5 = *((_QWORD *)a2 + 2);
  v6 = (int *)OUTLINED_FUNCTION_55_28();
  *(_QWORD *)(a3 + v6[6]) = 0;
  v7 = (_QWORD *)(a3 + v6[11]);
  *v7 = 0;
  v7[1] = 0;
  v7[2] = 0;
  *(_QWORD *)(a3 + v6[13]) = 0;
  v8 = a1 + v6[11];
  outlined consume of ConversationLink?(*(void **)v8);
  *(_OWORD *)v8 = v9;
  *(_QWORD *)(v8 + 16) = v5;
  OUTLINED_FUNCTION_90_9(a1, a3);
  OUTLINED_FUNCTION_49_0();
}

void RecentCallRecentItemMetadata.init(updateCallMetadata:from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  id v4;

  OUTLINED_FUNCTION_96();
  v3 = (int *)OUTLINED_FUNCTION_371_1();
  v4 = *(id *)(v0 + OUTLINED_FUNCTION_161_5(v3)[13]);
  OUTLINED_FUNCTION_380_2();

  OUTLINED_FUNCTION_369_1();
  OUTLINED_FUNCTION_367_1();
  OUTLINED_FUNCTION_284_0();
  OUTLINED_FUNCTION_65_1();
}

void RecentCallRecentItemMetadata.init(updateMessageMetadata:from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  id v4;

  OUTLINED_FUNCTION_96();
  v3 = (int *)OUTLINED_FUNCTION_371_1();
  v4 = *(id *)(v0 + OUTLINED_FUNCTION_161_5(v3)[6]);
  OUTLINED_FUNCTION_380_2();

  OUTLINED_FUNCTION_369_1();
  OUTLINED_FUNCTION_367_1();
  OUTLINED_FUNCTION_284_0();
  OUTLINED_FUNCTION_65_1();
}

void RecentCallRecentItemMetadata.init(metadata:messageIndicatorViewModel:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int *v6;
  _QWORD *v7;
  uint64_t v8;

  v6 = (int *)OUTLINED_FUNCTION_55_28();
  *(_QWORD *)(a3 + v6[6]) = 0;
  v7 = (_QWORD *)(a3 + v6[11]);
  *v7 = 0;
  v7[1] = 0;
  v7[2] = 0;
  *(_QWORD *)(a3 + v6[13]) = 0;
  v8 = v6[13];

  *(_QWORD *)(a1 + v8) = a2;
  OUTLINED_FUNCTION_117_9(a1, a3);
  OUTLINED_FUNCTION_91();
}

void RecentCallRecentItemMetadata.hash(into:)()
{
  char *v0;
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  char v17;
  uint64_t v18;
  void (*v19)(uint64_t);
  uint64_t v20;
  void *v21;
  id v22;
  char *v23;
  Swift::UInt v24;
  uint64_t v25;
  void *v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t, uint64_t, uint64_t);
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;

  OUTLINED_FUNCTION_93();
  v2 = v0;
  v4 = v3;
  v5 = OUTLINED_FUNCTION_33_0();
  v35 = *(_QWORD *)(v5 - 8);
  v36 = v5;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_60_6(v7, v34);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_5_27();
  v37 = (void *)v9;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v34 - v11;
  v13 = OUTLINED_FUNCTION_33();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_81();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_86();
  String.hash(into:)();
  OUTLINED_FUNCTION_30_4();
  v16 = (int *)OUTLINED_FUNCTION_55_28();
  outlined init with copy of FeatureEligibility?((uint64_t)&v0[v16[5]], (uint64_t)v0, (uint64_t *)&demangling cache variable for type metadata for Date?);
  OUTLINED_FUNCTION_69_0((uint64_t)v0, 1, v13);
  if (v17)
  {
    OUTLINED_FUNCTION_30_51(0);
  }
  else
  {
    v18 = OUTLINED_FUNCTION_272_2();
    v19(v18);
    OUTLINED_FUNCTION_30_51(1u);
    _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type Date and conformance Date, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
    v0 = v1;
    dispatch thunk of Hashable.hash(into:)();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v1, v13);
  }
  v20 = v36;
  v21 = *(void **)&v2[v16[6]];
  if (v21)
  {
    OUTLINED_FUNCTION_30_51(1u);
    v22 = v21;
    OUTLINED_FUNCTION_48_36();

  }
  else
  {
    OUTLINED_FUNCTION_30_51(0);
  }
  v23 = &v2[v16[7]];
  if (v23[8] == 1)
  {
    OUTLINED_FUNCTION_30_51(0);
  }
  else
  {
    v24 = *(_QWORD *)v23;
    OUTLINED_FUNCTION_30_51(1u);
    Hasher._combine(_:)(v24);
  }
  v25 = *(_QWORD *)&v2[v16[8]];
  if (v25)
  {
    OUTLINED_FUNCTION_30_51(1u);
    OUTLINED_FUNCTION_33_1();
    specialized Set.hash(into:)(v4, v25);
    OUTLINED_FUNCTION_54_1();
  }
  else
  {
    OUTLINED_FUNCTION_30_51(0);
  }
  OUTLINED_FUNCTION_57(*(_QWORD *)&v2[v16[9]]);
  outlined init with copy of FeatureEligibility?((uint64_t)&v2[v16[10]], (uint64_t)v12, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_69_0((uint64_t)v12, 1, v20);
  if (v17)
  {
    OUTLINED_FUNCTION_30_51(0);
  }
  else
  {
    OUTLINED_FUNCTION_374_1(v34, (uint64_t)v12, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v35 + 32));
    OUTLINED_FUNCTION_30_51(1u);
    _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
    OUTLINED_FUNCTION_233_1();
    OUTLINED_FUNCTION_263_2();
  }
  v26 = *(void **)&v2[v16[11]];
  if (v26)
  {
    OUTLINED_FUNCTION_30_51(1u);
    OUTLINED_FUNCTION_336_2(v26);
    v27 = v26;
    OUTLINED_FUNCTION_48_36();

    OUTLINED_FUNCTION_335_1(v26);
  }
  else
  {
    OUTLINED_FUNCTION_30_51(0);
  }
  v28 = v37;
  outlined init with copy of FeatureEligibility?((uint64_t)&v2[v16[12]], (uint64_t)v37, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_69_0((uint64_t)v28, 1, v20);
  if (v17)
  {
    OUTLINED_FUNCTION_30_51(0);
  }
  else
  {
    v29 = OUTLINED_FUNCTION_68_17();
    OUTLINED_FUNCTION_374_1(v29, v30, v31);
    OUTLINED_FUNCTION_30_51(1u);
    _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
    OUTLINED_FUNCTION_233_1();
    OUTLINED_FUNCTION_263_2();
  }
  v32 = *(void **)&v2[v16[13]];
  if (v32)
  {
    OUTLINED_FUNCTION_30_51(1u);
    v33 = v32;
    OUTLINED_FUNCTION_48_36();

  }
  else
  {
    OUTLINED_FUNCTION_30_51(0);
  }
  OUTLINED_FUNCTION_52_1();
}

void RecentCallRecentItemMetadata.hashValue.getter()
{
  RecentCallRecentItemMetadata.hashValue.getter((void (*)(_BYTE *))RecentCallRecentItemMetadata.hash(into:));
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance RecentCallRecentItemMetadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  protocol witness for Hashable._rawHashValue(seed:) in conformance RecentCallRecentItemMetadata(a1, a2, a3, (void (*)(_BYTE *))RecentCallRecentItemMetadata.hash(into:));
}

uint64_t RecentOngoingConversationMetadata.uuid.getter()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);

  OUTLINED_FUNCTION_33_0();
  v0 = OUTLINED_FUNCTION_50();
  return v1(v0);
}

uint64_t RecentOngoingConversationMetadata.remoteParticipantHandles.getter()
{
  type metadata accessor for RecentOngoingConversationMetadata(0);
  return swift_bridgeObjectRetain();
}

id RecentOngoingConversationMetadata.conversation.getter()
{
  uint64_t v0;

  return *(id *)(v0 + *(int *)(type metadata accessor for RecentOngoingConversationMetadata(0) + 24));
}

void *RecentOngoingConversationMetadata.conversationLink.getter()
{
  uint64_t v0;
  void *v1;

  v0 = OUTLINED_FUNCTION_329_1();
  v1 = (void *)OUTLINED_FUNCTION_280_2(*(int *)(v0 + 28));
  return OUTLINED_FUNCTION_201_2(v1);
}

void RecentOngoingConversationMetadata.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;

  v1 = v0;
  OUTLINED_FUNCTION_33_0();
  _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  OUTLINED_FUNCTION_269_1();
  dispatch thunk of Hashable.hash(into:)();
  v2 = type metadata accessor for RecentOngoingConversationMetadata(0);
  v3 = *(void **)(v0 + *(int *)(v2 + 20));
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_382_0();
  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_340_2();
  OUTLINED_FUNCTION_48_36();

  v4 = *(void **)(v1 + *(int *)(v2 + 28));
  if (v4)
  {
    OUTLINED_FUNCTION_30_51(1u);
    outlined copy of ConversationLink?(v4);
    v5 = v4;
    OUTLINED_FUNCTION_48_36();

    outlined consume of ConversationLink?(v4);
  }
  else
  {
    OUTLINED_FUNCTION_30_51(0);
    OUTLINED_FUNCTION_91();
  }
}

void static RecentOngoingConversationMetadata.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;

  OUTLINED_FUNCTION_96();
  OUTLINED_FUNCTION_341_1();
  if ((static UUID.== infix(_:_:)() & 1) != 0)
  {
    v2 = type metadata accessor for RecentOngoingConversationMetadata(0);
    specialized static Set.== infix(_:_:)(*(_QWORD *)(v0 + *(int *)(v2 + 20)), *(_QWORD *)(v1 + *(int *)(v2 + 20)));
    if ((v3 & 1) != 0)
    {
      OUTLINED_FUNCTION_59(v3, (unint64_t *)&lazy cache variable for type metadata for NSObject);
      if ((static NSObject.== infix(_:_:)() & 1) != 0)
      {
        v4 = *(int *)(v2 + 28);
        v5 = *(void **)(v0 + v4);
        v6 = *(void **)(v1 + v4);
        if (v5)
        {
          if (v6)
          {
            OUTLINED_FUNCTION_295_2();
            OUTLINED_FUNCTION_295_2();
            OUTLINED_FUNCTION_162_4(v6);
            static NSObject.== infix(_:_:)();
            OUTLINED_FUNCTION_278_1();

            OUTLINED_FUNCTION_2_1();
            OUTLINED_FUNCTION_22();
            OUTLINED_FUNCTION_294_1();
            goto LABEL_11;
          }
          v7 = v5;
          OUTLINED_FUNCTION_8_8();
          OUTLINED_FUNCTION_1_28();
        }
        else if (!v6)
        {
          goto LABEL_11;
        }
        OUTLINED_FUNCTION_162_4(v6);
        OUTLINED_FUNCTION_294_1();
        OUTLINED_FUNCTION_278_1();
      }
    }
  }
LABEL_11:
  OUTLINED_FUNCTION_65_1();
}

void RecentOngoingConversationMetadata.hashValue.getter()
{
  RecentCallRecentItemMetadata.hashValue.getter((void (*)(_BYTE *))RecentOngoingConversationMetadata.hash(into:));
}

__n128 RecentOngoingConversationMetadata.init(uuid:remoteParticipantHandles:conversation:conversationLink:)@<Q0>(uint64_t a1@<X1>, uint64_t a2@<X2>, __int128 *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t);
  int *v10;
  uint64_t v11;
  __n128 result;
  __int128 v13;

  v13 = *a3;
  v7 = *((_QWORD *)a3 + 2);
  OUTLINED_FUNCTION_33_0();
  v8 = OUTLINED_FUNCTION_315_0();
  v9(v8);
  v10 = (int *)type metadata accessor for RecentOngoingConversationMetadata(0);
  *(_QWORD *)(a4 + v10[5]) = a1;
  *(_QWORD *)(a4 + v10[6]) = a2;
  v11 = a4 + v10[7];
  *(_OWORD *)v11 = v13;
  *(_QWORD *)(v11 + 16) = v7;
  OUTLINED_FUNCTION_49_0();
  return result;
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance RecentOngoingConversationMetadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  protocol witness for Hashable._rawHashValue(seed:) in conformance RecentCallRecentItemMetadata(a1, a2, a3, (void (*)(_BYTE *))RecentOngoingConversationMetadata.hash(into:));
}

void RecentsCallItemType.recentCallRecentItemMetadata.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;

  OUTLINED_FUNCTION_93();
  v1 = v0;
  OUTLINED_FUNCTION_131_6();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for RecentCallRecentItemMetadata(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_55_3();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_256_2();
  OUTLINED_FUNCTION_92_12(v1, (uint64_t)v4);
  v7 = (char *)sub_1BD385E0C + 4 * byte_1BD65ABBA[OUTLINED_FUNCTION_188_3()];
  __asm { BR              X10 }
}

void sub_1BD385E0C()
{
  uint64_t v0;
  NSObject *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD);
  uint64_t v9;
  uint64_t v10;
  os_log_type_t v11;
  _BOOL8 v12;
  uint8_t *v13;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = OUTLINED_FUNCTION_157();
  outlined init with take of StagedCollaboration(v6, v7, v8);
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v9 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_182_3(v9, (uint64_t)&static Logger.conversationKit);
  OUTLINED_FUNCTION_292_1(v3, v10, type metadata accessor for RecentCallRecentItemMetadata);
  Logger.logObject.getter();
  v11 = OUTLINED_FUNCTION_12_0();
  v12 = OUTLINED_FUNCTION_21_12(v11);
  if (v12)
  {
    v13 = (uint8_t *)OUTLINED_FUNCTION_105();
    *(_QWORD *)(v5 - 88) = OUTLINED_FUNCTION_105();
    *(_DWORD *)v13 = 136315138;
    v14 = *(void **)(v4 + *(int *)(v2 + 24));
    if (v14)
    {
      *(_QWORD *)(v5 - 96) = objc_msgSend(v14, sel_numberOfOccurrences);
      v15 = String.init<A>(reflecting:)();
      v17 = v16;
    }
    else
    {
      v17 = 0xE300000000000000;
      v15 = 7104878;
    }
    v18 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v15, v17, (uint64_t *)(v5 - 88));
    OUTLINED_FUNCTION_61_0(v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v19 = OUTLINED_FUNCTION_54_1();
    OUTLINED_FUNCTION_171_1(v19, type metadata accessor for RecentCallRecentItemMetadata);
    OUTLINED_FUNCTION_48(&dword_1BD004000, v1, v11, "[SpamReporting] metadata.recentcall.numberOfOccurrences: %s", v13);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_171_1(v12, type metadata accessor for RecentCallRecentItemMetadata);

  OUTLINED_FUNCTION_143_5(v3, v20, type metadata accessor for RecentCallRecentItemMetadata);
  OUTLINED_FUNCTION_19_3(v0, 0);
  OUTLINED_FUNCTION_52_1();
}

void key path setter for RecentsCallItemType.recentCallRecentItemMetadata : RecentsCallItemType(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RecentCallRecentItemMetadata?);
  MEMORY[0x1E0C80A78](v2);
  outlined init with copy of FeatureEligibility?(a1, (uint64_t)&v4 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &demangling cache variable for type metadata for RecentCallRecentItemMetadata?);
  RecentsCallItemType.recentCallRecentItemMetadata.setter();
}

void RecentsCallItemType.recentCallRecentItemMetadata.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  _QWORD v26[10];

  OUTLINED_FUNCTION_93();
  v1 = v0;
  v3 = v2;
  type metadata accessor for RecentsCallItemType(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_77_1();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RecentCallRecentItemMetadata?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  v26[6] = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v26 - v8;
  v10 = OUTLINED_FUNCTION_316_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_42_32();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_88_11();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_120_4();
  v26[7] = v3;
  v14 = OUTLINED_FUNCTION_68_17();
  OUTLINED_FUNCTION_87_0(v14, v15);
  v16 = OUTLINED_FUNCTION_69_0((uint64_t)v9, 1, v10);
  if (!v18)
  {
    OUTLINED_FUNCTION_74_1((uint64_t)v9, v17, type metadata accessor for RecentCallRecentItemMetadata);
    OUTLINED_FUNCTION_140_4(v1, v24, type metadata accessor for RecentsCallItemType);
    v25 = (char *)&loc_1BD386210 + 4 * byte_1BD65ABBF[OUTLINED_FUNCTION_154_4()];
    __asm { BR              X10 }
  }
  OUTLINED_FUNCTION_225_3(v16, &demangling cache variable for type metadata for RecentCallRecentItemMetadata?);
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v19 = OUTLINED_FUNCTION_17_2();
  v20 = OUTLINED_FUNCTION_3(v19, (uint64_t)&static Logger.conversationKit);
  v21 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)OUTLINED_FUNCTION_105();
    *(_WORD *)v22 = 0;
    _os_log_impl(&dword_1BD004000, v20, v21, "[SpamReporting] Unable to update recentCallRecentItemMetadata", v22, 2u);
    OUTLINED_FUNCTION_60();
  }

  OUTLINED_FUNCTION_275_1(v23, &demangling cache variable for type metadata for RecentCallRecentItemMetadata?);
  OUTLINED_FUNCTION_52_1();
}

void (*RecentsCallItemType.recentCallRecentItemMetadata.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  size_t v3;

  *a1 = v1;
  v3 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RecentCallRecentItemMetadata?)
                             - 8)
                 + 64);
  a1[1] = malloc(v3);
  a1[2] = malloc(v3);
  RecentsCallItemType.recentCallRecentItemMetadata.getter();
  return RecentsCallItemType.recentCallRecentItemMetadata.modify;
}

void RecentsCallItemType.recentCallRecentItemMetadata.modify(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(void **)(a1 + 8);
  v3 = *(void **)(a1 + 16);
  if ((a2 & 1) != 0)
  {
    v4 = OUTLINED_FUNCTION_124_0();
    OUTLINED_FUNCTION_87_0(v4, v5);
    RecentsCallItemType.recentCallRecentItemMetadata.setter();
    OUTLINED_FUNCTION_18_18((uint64_t)v3);
  }
  else
  {
    RecentsCallItemType.recentCallRecentItemMetadata.setter();
  }
  free(v3);
  free(v2);
}

uint64_t RecentsCallItemType.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(_QWORD);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  OUTLINED_FUNCTION_96();
  type metadata accessor for RecentOngoingConversationMetadata(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v11);
  type metadata accessor for RecentCallRecentItemMetadata(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_131_6();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_165_0(v10, v14, v15);
  v16 = OUTLINED_FUNCTION_188_3();
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)sub_1BD3866FC + 4 * byte_1BD65ABC4[v16]))(v16, v17, v18, v19, v20, v21, v22, v23, a9, a10);
}

void sub_1BD3866FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);

  OUTLINED_FUNCTION_90_9(v0, v1);
  OUTLINED_FUNCTION_57(0);
  RecentCallRecentItemMetadata.hash(into:)();
  v2 = OUTLINED_FUNCTION_396_1();
  outlined destroy of RecentsCallItem(v2, v3);
  OUTLINED_FUNCTION_65_1();
}

void RecentsCallItemType.hashValue.getter()
{
  RecentCallRecentItemMetadata.hashValue.getter((void (*)(_BYTE *))RecentsCallItemType.hash(into:));
}

void RecentCallRecentItemMetadata.hashValue.getter(void (*a1)(_BYTE *))
{
  _BYTE v2[72];

  OUTLINED_FUNCTION_5_1();
  a1(v2);
  OUTLINED_FUNCTION_4_6();
  OUTLINED_FUNCTION_2();
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance RecentsCallItemType(uint64_t a1, uint64_t a2, uint64_t a3)
{
  protocol witness for Hashable._rawHashValue(seed:) in conformance RecentCallRecentItemMetadata(a1, a2, a3, (void (*)(_BYTE *))RecentsCallItemType.hash(into:));
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance RecentCallRecentItemMetadata(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_BYTE *))
{
  _BYTE v5[72];

  OUTLINED_FUNCTION_8_23();
  a4(v5);
  OUTLINED_FUNCTION_4_6();
  OUTLINED_FUNCTION_2();
}

void RecentsCallItem.type.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  outlined init with copy of ConversationControlsAppLaunchButtonType(v1, a1, type metadata accessor for RecentsCallItemType);
}

uint64_t RecentsCallItem.type.setter(uint64_t a1)
{
  uint64_t v1;

  return outlined assign with take of RecentsCallItemType(a1, v1);
}

uint64_t (*RecentsCallItem.type.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t RecentsCallItem.contacts.getter()
{
  type metadata accessor for RecentsCallItem(0);
  return swift_bridgeObjectRetain();
}

void RecentsCallItem.destination.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  char v14;
  uint64_t v15;
  _BYTE v16[8];

  v1 = type metadata accessor for RecentCallRecentItemMetadata(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  OUTLINED_FUNCTION_47_23();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_25_49(v6, v7, v15);
  v8 = OUTLINED_FUNCTION_82_9();
  if ((_DWORD)v8)
  {
    OUTLINED_FUNCTION_50_31(v8, type metadata accessor for RecentsCallItemType);
LABEL_10:
    OUTLINED_FUNCTION_64();
    OUTLINED_FUNCTION_91();
    return;
  }
  OUTLINED_FUNCTION_143_5(v0, v9, type metadata accessor for RecentCallRecentItemMetadata);
  v11 = *(int *)(v1 + 32);
  v12 = *(_QWORD *)&v4[v11];
  if (!v12)
  {
LABEL_9:
    OUTLINED_FUNCTION_49_38(v10, type metadata accessor for RecentCallRecentItemMetadata);
    goto LABEL_10;
  }
  v10 = specialized _NativeSet.startIndex.getter(*(_QWORD *)&v4[v11]);
  if ((v14 & 1) == 0)
  {
    if (*(_DWORD *)(v12 + 36) == v13)
    {
      if (v10 != 1 << *(_BYTE *)(v12 + 32))
        v10 = specialized Set.subscript.getter(v10, v13, v12, (uint64_t)v16);
      goto LABEL_9;
    }
    __break(1u);
  }
  __break(1u);
}

